uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ProjectiveShadowReceiverComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(void);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ProjectiveShadowReceiverComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ProjectiveShadowReceiverComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>*,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ShadowClusterComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ShadowClusterComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ShadowClusterComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::ShadowClusterComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::ShadowClusterComponent>::doMakeComponent(void *a1@<X8>)
{
  v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::ShadowClusterComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::ShadowClusterComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 80, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6ED840;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = 0;
  *(void *)(v3 + 32) = 0;
  *(void *)(v3 + 64) = 0;
  *(_DWORD *)(v3 + 72) = 0;
  *(unsigned char *)(v3 + 76) = 1;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ShadowClusterComponent>::doMakeSceneComponentCollection(re *a1)
{
  v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6ED8C8;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ShadowClusterComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82BD8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82BD8))
  {
    qword_26AF82BD0 = re::ecs2::introspect_ShadowClusterComponent(0);
    __cxa_guard_release(&qword_26AF82BD8);
  }
  return qword_26AF82BD0;
}

__n128 re::ecs2::ComponentType<re::ecs2::ShadowClusterComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ShadowClusterComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ShadowClusterComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6ED7D0;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::ShadowClusterComponent::~ShadowClusterComponent(re::ecs2::ShadowClusterComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  re::AssetHandle::~AssetHandle((re::ecs2::ShadowClusterComponent *)((char *)this + 32));
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ShadowClusterComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::ShadowClusterComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ShadowClusterComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return 12;
}

void *re::ecs2::ComponentImpl<re::ecs2::ShadowClusterComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::ShadowClusterComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6ED8C8;
  v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ShadowClusterComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>,re::Slice<re::ecs2::ShadowClusterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>*,re::Slice<re::ecs2::ShadowClusterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>,re::Slice<re::ecs2::ShadowClusterComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowClusterComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ShadowClusterComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>,re::Slice<re::ecs2::ShadowClusterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>*,re::Slice<re::ecs2::ShadowClusterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>,re::Slice<re::ecs2::ShadowClusterComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowClusterComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ShadowClusterComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>,re::Slice<re::ecs2::ShadowClusterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>*,re::Slice<re::ecs2::ShadowClusterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>,re::Slice<re::ecs2::ShadowClusterComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowClusterComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ShadowClusterComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>,re::Slice<re::ecs2::ShadowClusterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>*,re::Slice<re::ecs2::ShadowClusterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>,re::Slice<re::ecs2::ShadowClusterComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowClusterComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ShadowClusterComponent>;
    uint64_t v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>,re::Slice<re::ecs2::ShadowClusterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>*,re::Slice<re::ecs2::ShadowClusterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>,re::Slice<re::ecs2::ShadowClusterComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowClusterComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ShadowClusterComponent>;
    uint64_t v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>,re::Slice<re::ecs2::ShadowClusterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>*,re::Slice<re::ecs2::ShadowClusterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>,re::Slice<re::ecs2::ShadowClusterComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowClusterComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ShadowClusterComponent>;
    uint64_t v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>,re::Slice<re::ecs2::ShadowClusterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>*,re::Slice<re::ecs2::ShadowClusterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>,re::Slice<re::ecs2::ShadowClusterComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowClusterComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ShadowClusterComponent>;
    uint64_t v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>,re::Slice<re::ecs2::ShadowClusterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>*,re::Slice<re::ecs2::ShadowClusterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>,re::Slice<re::ecs2::ShadowClusterComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowClusterComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ShadowClusterComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ShadowClusterComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ShadowClusterComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ShadowClusterComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>,re::Slice<re::ecs2::ShadowClusterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>*,re::Slice<re::ecs2::ShadowClusterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>,re::Slice<re::ecs2::ShadowClusterComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowClusterComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ClusterShadowMarkerComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClusterShadowMarkerComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ClusterShadowMarkerComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::ClusterShadowMarkerComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::ClusterShadowMarkerComponent>::doMakeComponent(void *a1@<X8>)
{
  v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::ClusterShadowMarkerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::ClusterShadowMarkerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 32, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6ED9E0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClusterShadowMarkerComponent>::doMakeSceneComponentCollection(re *a1)
{
  v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EDA68;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClusterShadowMarkerComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82BE8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82BE8))
  {
    qword_26AF82BE0 = re::ecs2::introspect_ClusterShadowMarkerComponent(0);
    __cxa_guard_release(&qword_26AF82BE8);
  }
  return qword_26AF82BE0;
}

__n128 re::ecs2::ComponentType<re::ecs2::ClusterShadowMarkerComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClusterShadowMarkerComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClusterShadowMarkerComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6ED970;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::ClusterShadowMarkerComponent::~ClusterShadowMarkerComponent(re::ecs2::ClusterShadowMarkerComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ClusterShadowMarkerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::ClusterShadowMarkerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ClusterShadowMarkerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::ClusterShadowMarkerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::ClusterShadowMarkerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EDA68;
  v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ClusterShadowMarkerComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>*,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>>::Subscription const&,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ClusterShadowMarkerComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>*,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>>::Subscription const&,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ClusterShadowMarkerComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>*,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>>::Subscription const&,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ClusterShadowMarkerComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>*,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>>::Subscription const&,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ClusterShadowMarkerComponent>;
    uint64_t v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>*,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>>::Subscription const&,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ClusterShadowMarkerComponent>;
    uint64_t v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>*,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>>::Subscription const&,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ClusterShadowMarkerComponent>;
    uint64_t v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>*,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>>::Subscription const&,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ClusterShadowMarkerComponent>;
    uint64_t v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>*,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>>::Subscription const&,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ClusterShadowMarkerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ClusterShadowMarkerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ClusterShadowMarkerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ClusterShadowMarkerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>*,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>>::Subscription const&,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ClusterShadowSeparatorComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClusterShadowSeparatorComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ClusterShadowSeparatorComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::ClusterShadowSeparatorComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::ClusterShadowSeparatorComponent>::doMakeComponent(void *a1@<X8>)
{
  v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::ClusterShadowSeparatorComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::ClusterShadowSeparatorComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 32, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6EDB80;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClusterShadowSeparatorComponent>::doMakeSceneComponentCollection(re *a1)
{
  v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EDC08;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClusterShadowSeparatorComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82BF8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82BF8))
  {
    qword_26AF82BF0 = re::ecs2::introspect_ClusterShadowSeparatorComponent(0);
    __cxa_guard_release(&qword_26AF82BF8);
  }
  return qword_26AF82BF0;
}

__n128 re::ecs2::ComponentType<re::ecs2::ClusterShadowSeparatorComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClusterShadowSeparatorComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClusterShadowSeparatorComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EDB10;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::ClusterShadowSeparatorComponent::~ClusterShadowSeparatorComponent(re::ecs2::ClusterShadowSeparatorComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ClusterShadowSeparatorComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::ClusterShadowSeparatorComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ClusterShadowSeparatorComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::ClusterShadowSeparatorComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::ClusterShadowSeparatorComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EDC08;
  v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ClusterShadowSeparatorComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>*,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>>::Subscription const&,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ClusterShadowSeparatorComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>*,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>>::Subscription const&,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ClusterShadowSeparatorComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>*,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>>::Subscription const&,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ClusterShadowSeparatorComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>*,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>>::Subscription const&,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ClusterShadowSeparatorComponent>;
    uint64_t v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>*,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>>::Subscription const&,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ClusterShadowSeparatorComponent>;
    uint64_t v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>*,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>>::Subscription const&,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ClusterShadowSeparatorComponent>;
    uint64_t v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>*,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>>::Subscription const&,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ClusterShadowSeparatorComponent>;
    uint64_t v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>*,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>>::Subscription const&,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ClusterShadowSeparatorComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ClusterShadowSeparatorComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ClusterShadowSeparatorComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ClusterShadowSeparatorComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>*,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>>::Subscription const&,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::AnchorShadowMarker>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AnchorShadowMarker>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::AnchorShadowMarker>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::AnchorShadowMarker>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::AnchorShadowMarker>::doMakeComponent@<D0>(void *a1@<X8>)
{
  v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::AnchorShadowMarker,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::AnchorShadowMarker,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 112, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(_WORD *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6EDD20;
  double result = 0.0;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(unsigned char *)(v3 + 64) = 0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AnchorShadowMarker>::doMakeSceneComponentCollection(re *a1)
{
  v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EDDA8;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AnchorShadowMarker>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82C08, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82C08))
  {
    qword_26AF82C00 = re::ecs2::introspect_AnchorShadowMarker(0);
    __cxa_guard_release(&qword_26AF82C08);
  }
  return qword_26AF82C00;
}

__n128 re::ecs2::ComponentType<re::ecs2::AnchorShadowMarker>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AnchorShadowMarker>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AnchorShadowMarker>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EDCB0;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::AnchorShadowMarker::~AnchorShadowMarker(re::ecs2::AnchorShadowMarker *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AnchorShadowMarker,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::AnchorShadowMarker,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AnchorShadowMarker,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::AnchorShadowMarker,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::AnchorShadowMarker,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EDDA8;
  v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AnchorShadowMarker>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>,re::Slice<re::ecs2::AnchorShadowMarker*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>*,re::Slice<re::ecs2::AnchorShadowMarker*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>,re::Slice<re::ecs2::AnchorShadowMarker*>>::Subscription const&,re::Slice<re::ecs2::AnchorShadowMarker*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AnchorShadowMarker>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>,re::Slice<re::ecs2::AnchorShadowMarker*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>*,re::Slice<re::ecs2::AnchorShadowMarker*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>,re::Slice<re::ecs2::AnchorShadowMarker*>>::Subscription const&,re::Slice<re::ecs2::AnchorShadowMarker*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AnchorShadowMarker>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>,re::Slice<re::ecs2::AnchorShadowMarker*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>*,re::Slice<re::ecs2::AnchorShadowMarker*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>,re::Slice<re::ecs2::AnchorShadowMarker*>>::Subscription const&,re::Slice<re::ecs2::AnchorShadowMarker*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AnchorShadowMarker>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>,re::Slice<re::ecs2::AnchorShadowMarker*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>*,re::Slice<re::ecs2::AnchorShadowMarker*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>,re::Slice<re::ecs2::AnchorShadowMarker*>>::Subscription const&,re::Slice<re::ecs2::AnchorShadowMarker*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AnchorShadowMarker>;
    uint64_t v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>,re::Slice<re::ecs2::AnchorShadowMarker*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>*,re::Slice<re::ecs2::AnchorShadowMarker*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>,re::Slice<re::ecs2::AnchorShadowMarker*>>::Subscription const&,re::Slice<re::ecs2::AnchorShadowMarker*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AnchorShadowMarker>;
    uint64_t v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>,re::Slice<re::ecs2::AnchorShadowMarker*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>*,re::Slice<re::ecs2::AnchorShadowMarker*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>,re::Slice<re::ecs2::AnchorShadowMarker*>>::Subscription const&,re::Slice<re::ecs2::AnchorShadowMarker*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AnchorShadowMarker>;
    uint64_t v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>,re::Slice<re::ecs2::AnchorShadowMarker*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>*,re::Slice<re::ecs2::AnchorShadowMarker*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>,re::Slice<re::ecs2::AnchorShadowMarker*>>::Subscription const&,re::Slice<re::ecs2::AnchorShadowMarker*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AnchorShadowMarker>;
    uint64_t v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>,re::Slice<re::ecs2::AnchorShadowMarker*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>*,re::Slice<re::ecs2::AnchorShadowMarker*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>,re::Slice<re::ecs2::AnchorShadowMarker*>>::Subscription const&,re::Slice<re::ecs2::AnchorShadowMarker*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AnchorShadowMarker>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AnchorShadowMarker>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AnchorShadowMarker>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AnchorShadowMarker>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>,re::Slice<re::ecs2::AnchorShadowMarker*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>*,re::Slice<re::ecs2::AnchorShadowMarker*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>,re::Slice<re::ecs2::AnchorShadowMarker*>>::Subscription const&,re::Slice<re::ecs2::AnchorShadowMarker*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::MotionStateComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::MotionStateComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::MotionStateComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::MotionStateComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::MotionStateComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::MotionStateComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::MotionStateComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 192, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  *((_OWORD *)v2 + 8) = 0u;
  *((_OWORD *)v2 + 9) = 0u;
  *((_OWORD *)v2 + 10) = 0u;
  *((_OWORD *)v2 + 11) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F6EC0;
  *(_WORD *)(v3 + 25) = 0;
  *(void *)(v3 + 32) = 0x3F8000003F800000;
  *(void *)(v3 + 40) = 1065353216;
  *(void *)(v3 + 48) = 0;
  *(void *)(v3 + 56) = 0x3F80000000000000;
  *(void *)(v3 + 64) = 0;
  *(void *)(v3 + 72) = 0;
  *(unsigned char *)(v3 + 80) = 0;
  double result = 0.0;
  *(_OWORD *)(v3 + 96) = 0u;
  *(_OWORD *)(v3 + 112) = 0u;
  *(_OWORD *)(v3 + 128) = 0u;
  *(_OWORD *)(v3 + 140) = 0u;
  *(void *)(v3 + 168) = 0;
  *(void *)(v3 + 176) = 0;
  *(void *)(v3 + 160) = 0;
  *(_DWORD *)(v3 + 184) = 0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MotionStateComponent>::doMakeSceneComponentCollection(re *a1)
{
  v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EDEC0;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

char *re::ecs2::ComponentType<re::ecs2::MotionStateComponent>::doGetComponentIntrospectionInfo()
{
  v0 = re::KTXTextureCompiler::getSupportedExtensions(void)const::supportedExtensions;
  {
    v0 = re::KTXTextureCompiler::getSupportedExtensions(void)const::supportedExtensions;
    if (v2)
    {
      re::introspect<re::ecs2::MotionStateComponent>(void)::info = (_UNKNOWN *)re::ecs2::introspect_MotionStateComponent(0);
      v0 = re::KTXTextureCompiler::getSupportedExtensions(void)const::supportedExtensions;
    }
  }
  return v0[134];
}

__n128 re::ecs2::ComponentType<re::ecs2::MotionStateComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MotionStateComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::MotionStateComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EDE50;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::MotionStateComponent::~MotionStateComponent(re::ecs2::MotionStateComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::MotionStateComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::MotionStateComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::MotionStateComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::MotionStateComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::MotionStateComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EDEC0;
  int v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MotionStateComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>,re::Slice<re::ecs2::MotionStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>*,re::Slice<re::ecs2::MotionStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>,re::Slice<re::ecs2::MotionStateComponent*>>::Subscription const&,re::Slice<re::ecs2::MotionStateComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MotionStateComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>,re::Slice<re::ecs2::MotionStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>*,re::Slice<re::ecs2::MotionStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>,re::Slice<re::ecs2::MotionStateComponent*>>::Subscription const&,re::Slice<re::ecs2::MotionStateComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MotionStateComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>,re::Slice<re::ecs2::MotionStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>*,re::Slice<re::ecs2::MotionStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>,re::Slice<re::ecs2::MotionStateComponent*>>::Subscription const&,re::Slice<re::ecs2::MotionStateComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MotionStateComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>,re::Slice<re::ecs2::MotionStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>*,re::Slice<re::ecs2::MotionStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>,re::Slice<re::ecs2::MotionStateComponent*>>::Subscription const&,re::Slice<re::ecs2::MotionStateComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MotionStateComponent>;
    uint64_t v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>,re::Slice<re::ecs2::MotionStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>*,re::Slice<re::ecs2::MotionStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>,re::Slice<re::ecs2::MotionStateComponent*>>::Subscription const&,re::Slice<re::ecs2::MotionStateComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MotionStateComponent>;
    uint64_t v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>,re::Slice<re::ecs2::MotionStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>*,re::Slice<re::ecs2::MotionStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>,re::Slice<re::ecs2::MotionStateComponent*>>::Subscription const&,re::Slice<re::ecs2::MotionStateComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MotionStateComponent>;
    uint64_t v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>,re::Slice<re::ecs2::MotionStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>*,re::Slice<re::ecs2::MotionStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>,re::Slice<re::ecs2::MotionStateComponent*>>::Subscription const&,re::Slice<re::ecs2::MotionStateComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MotionStateComponent>;
    uint64_t v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>,re::Slice<re::ecs2::MotionStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>*,re::Slice<re::ecs2::MotionStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>,re::Slice<re::ecs2::MotionStateComponent*>>::Subscription const&,re::Slice<re::ecs2::MotionStateComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MotionStateComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MotionStateComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MotionStateComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MotionStateComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>,re::Slice<re::ecs2::MotionStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>*,re::Slice<re::ecs2::MotionStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>,re::Slice<re::ecs2::MotionStateComponent*>>::Subscription const&,re::Slice<re::ecs2::MotionStateComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::NetworkComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::NetworkComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::NetworkComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::NetworkComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::NetworkComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  int v2 = (void *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::NetworkComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                       + 7)
                                                                    + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::NetworkComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 640, 0);
  bzero(v2, 0x280uLL);
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  v2[2] = 0;
  *((unsigned char *)v2 + 24) = 0;
  void *v2 = &unk_26E6F6D50;
  v2[4] = 0;
  v2[5] = 0;
  *((_DWORD *)v2 + 12) = 16777471;
  *((unsigned char *)v2 + 52) = 0;
  v2[8] = 0;
  v2[9] = 0;
  v2[7] = 0;
  *((_DWORD *)v2 + 20) = 1;
  v2[11] = 0;
  v2[12] = 0;
  *((_DWORD *)v2 + 28) = 0;
  *((_WORD *)v2 + 58) = 16;
  *(void *)&long long v3 = -1;
  *((void *)&v3 + 1) = -1;
  *((_OWORD *)v2 + 8) = v3;
  v2[15] = v2 + 16;
  *((_OWORD *)v2 + 9) = v3;
  v2[20] = 0;
  v2[21] = 0;
  *((_DWORD *)v2 + 44) = 1;
  v2[23] = 0;
  v2[24] = 0;
  v2[39] = 0;
  v2[40] = 0;
  *((_DWORD *)v2 + 82) = 1;
  double result = 0.0;
  *((_OWORD *)v2 + 21) = 0u;
  *((_OWORD *)v2 + 22) = 0u;
  v2[46] = 0;
  *((_DWORD *)v2 + 94) = 1;
  v2[49] = 0;
  v2[50] = 0;
  v2[48] = 0;
  *((_OWORD *)v2 + 26) = 0u;
  *((_OWORD *)v2 + 27) = 0u;
  *((_DWORD *)v2 + 112) = 0;
  *(void *)((char *)v2 + 452) = 0x7FFFFFFFLL;
  *((_OWORD *)v2 + 29) = 0u;
  *((_OWORD *)v2 + 30) = 0u;
  *((_DWORD *)v2 + 124) = 0;
  *(void *)((char *)v2 + 500) = 0x7FFFFFFFLL;
  *((_DWORD *)v2 + 136) = 0;
  *((_OWORD *)v2 + 32) = 0u;
  *((_OWORD *)v2 + 33) = 0u;
  *(void *)((char *)v2 + 548) = 0x7FFFFFFFLL;
  *((unsigned char *)v2 + 560) = 1;
  *((_DWORD *)v2 + 142) = 0;
  v2[73] = 0;
  v2[72] = 0;
  *((_DWORD *)v2 + 150) = 0;
  v2[74] = 0;
  v2[78] = 0;
  *(_DWORD *)((char *)v2 + 615) = 0;
  v2[76] = 0;
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::NetworkComponent>::doMakeSceneComponentCollection(re *a1)
{
  int v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EDFD8;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::NetworkComponent>::doGetComponentIntrospectionInfo()
{
  v0 = &qword_268772000;
  {
    v0 = &qword_268772000;
    if (v2)
    {
      re::introspect<re::ecs2::NetworkComponent>(void)::info = (_UNKNOWN *)re::ecs2::introspect_NetworkComponent(0);
      v0 = &qword_268772000;
    }
  }
  return v0[206];
}

__n128 re::ecs2::ComponentType<re::ecs2::NetworkComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::NetworkComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::NetworkComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EDF68;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::NetworkComponent::~NetworkComponent(re::ecs2::NetworkComponent *this)
{
  re::ecs2::NetworkComponent::~NetworkComponent(this);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;

  *(void *)this = &unk_26E6F6D50;
  re::DynamicArray<unsigned long>::deinit((uint64_t)this + 576);
  re::HashSetBase<unsigned short,unsigned short,re::internal::ValueAsKey<unsigned short>,re::Hash<unsigned short>,re::EqualTo<unsigned short>,true,false>::deinit((uint64_t *)this + 64);
  re::HashSetBase<RESyncableRefRetainer,RESyncableRefRetainer,re::internal::ValueAsKey<RESyncableRefRetainer>,re::ecs2::NetworkComponent::RESyncableRefRetainerHash,re::EqualTo<RESyncableRefRetainer>,true,false>::deinit((uint64_t *)this + 58);
  re::HashSetBase<unsigned short,unsigned short,re::internal::ValueAsKey<unsigned short>,re::Hash<unsigned short>,re::EqualTo<unsigned short>,true,false>::deinit((uint64_t *)this + 52);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)this + 360);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)this + 312);
  re::DynamicOverflowArray<RESyncableRefRetainer,16ul>::deinit((uint64_t)this + 160);
  re::ecs2::PackedTypeIDs::~PackedTypeIDs((re::ecs2::NetworkComponent *)((char *)this + 112));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)this + 64);
  int v2 = *((void *)this + 5);
  if (v2)
  {

    *((void *)this + 5) = 0;
  }
  if (*((void *)this + 4))
  {
    RESyncRelease();
    *((void *)this + 4) = 0;
  }
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::NetworkComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::NetworkComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::NetworkComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return 9;
}

void *re::ecs2::ComponentImpl<re::ecs2::NetworkComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::NetworkComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

double re::HashSetBase<RESyncableRefRetainer,RESyncableRefRetainer,re::internal::ValueAsKey<RESyncableRefRetainer>,re::ecs2::NetworkComponent::RESyncableRefRetainerHash,re::EqualTo<RESyncableRefRetainer>,true,false>::deinit(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2)
  {
    unint64_t v3 = *((unsigned int *)a1 + 8);
    if (v3)
    {
      uint64_t v4 = 0;
      for (unint64_t i = 0; i < v3; ++i)
      {
        uint64_t v6 = a1[2] + v4;
        int v7 = *(_DWORD *)(v6 + 8);
        if (v7 < 0)
        {
          *(_DWORD *)(v6 + 8) = v7 & 0x7FFFFFFF;
          if (*(void *)(v6 + 16))
          {
            RESyncRelease();
            *(void *)(v6 + 16) = 0;
            unint64_t v3 = *((unsigned int *)a1 + 8);
          }
        }
        v4 += 24;
      }
      uint64_t v2 = *a1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)v2 + 40))(v2, a1[1]);
    *((_DWORD *)a1 + 8) = 0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
    *(void *)&double result = 0x7FFFFFFFLL;
    *(uint64_t *)((char *)a1 + 36) = 0x7FFFFFFFLL;
  }
  return result;
}

uint64_t re::DynamicOverflowArray<RESyncableRefRetainer,16ul>::deinit(uint64_t result)
{
  if (*(void *)result)
  {
    v1 = (void *)result;
    uint64_t v2 = *(void *)(result + 8);
    if (v2)
    {
      if (*(unsigned char *)(result + 16)) {
        unint64_t v3 = (uint64_t *)(result + 24);
      }
      else {
        unint64_t v3 = *(uint64_t **)(result + 32);
      }
      uint64_t v4 = 8 * v2;
      do
      {
        double result = *v3;
        if (*v3)
        {
          double result = RESyncRelease();
          *unint64_t v3 = 0;
        }
        ++v3;
        v4 -= 8;
      }
      while (v4);
    }
    int v5 = *((_DWORD *)v1 + 4);
    if ((v5 & 1) == 0)
    {
      double result = (*(uint64_t (**)(void, void))(*(void *)*v1 + 40))(*v1, v1[4]);
      int v5 = *((_DWORD *)v1 + 4);
    }
    void *v1 = 0;
    v1[1] = 0;
    *((_DWORD *)v1 + 4) = (v5 | 1) + 2;
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EDFD8;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      int v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    int v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::NetworkComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>,re::Slice<re::ecs2::NetworkComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>*,re::Slice<re::ecs2::NetworkComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>,re::Slice<re::ecs2::NetworkComponent*>>::Subscription const&,re::Slice<re::ecs2::NetworkComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    int v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::NetworkComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>,re::Slice<re::ecs2::NetworkComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>*,re::Slice<re::ecs2::NetworkComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>,re::Slice<re::ecs2::NetworkComponent*>>::Subscription const&,re::Slice<re::ecs2::NetworkComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    int v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::NetworkComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>,re::Slice<re::ecs2::NetworkComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>*,re::Slice<re::ecs2::NetworkComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>,re::Slice<re::ecs2::NetworkComponent*>>::Subscription const&,re::Slice<re::ecs2::NetworkComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    int v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::NetworkComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>,re::Slice<re::ecs2::NetworkComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>*,re::Slice<re::ecs2::NetworkComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>,re::Slice<re::ecs2::NetworkComponent*>>::Subscription const&,re::Slice<re::ecs2::NetworkComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::NetworkComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>,re::Slice<re::ecs2::NetworkComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>*,re::Slice<re::ecs2::NetworkComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>,re::Slice<re::ecs2::NetworkComponent*>>::Subscription const&,re::Slice<re::ecs2::NetworkComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::NetworkComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>,re::Slice<re::ecs2::NetworkComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>*,re::Slice<re::ecs2::NetworkComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>,re::Slice<re::ecs2::NetworkComponent*>>::Subscription const&,re::Slice<re::ecs2::NetworkComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::NetworkComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>,re::Slice<re::ecs2::NetworkComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>*,re::Slice<re::ecs2::NetworkComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>,re::Slice<re::ecs2::NetworkComponent*>>::Subscription const&,re::Slice<re::ecs2::NetworkComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::NetworkComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>,re::Slice<re::ecs2::NetworkComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>*,re::Slice<re::ecs2::NetworkComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>,re::Slice<re::ecs2::NetworkComponent*>>::Subscription const&,re::Slice<re::ecs2::NetworkComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::NetworkComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::NetworkComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::NetworkComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::NetworkComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>,re::Slice<re::ecs2::NetworkComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>*,re::Slice<re::ecs2::NetworkComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>,re::Slice<re::ecs2::NetworkComponent*>>::Subscription const&,re::Slice<re::ecs2::NetworkComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::OrthographicCameraComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::OrthographicCameraComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::OrthographicCameraComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::OrthographicCameraComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::OrthographicCameraComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (re::ecs2::OrthographicCameraComponent *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::OrthographicCameraComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType + 7) + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::OrthographicCameraComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 240, 0);
  re::ecs2::OrthographicCameraComponent::OrthographicCameraComponent(v2);
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::OrthographicCameraComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EE0F0;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::OrthographicCameraComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82C18, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82C18))
  {
    qword_26AF82C10 = re::ecs2::introspect_OrthographicCameraComponent(0);
    __cxa_guard_release(&qword_26AF82C18);
  }
  return qword_26AF82C10;
}

__n128 re::ecs2::ComponentType<re::ecs2::OrthographicCameraComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::OrthographicCameraComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::OrthographicCameraComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EE080;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EE0F0;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::OrthographicCameraComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>,re::Slice<re::ecs2::OrthographicCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>*,re::Slice<re::ecs2::OrthographicCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>,re::Slice<re::ecs2::OrthographicCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::OrthographicCameraComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::OrthographicCameraComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>,re::Slice<re::ecs2::OrthographicCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>*,re::Slice<re::ecs2::OrthographicCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>,re::Slice<re::ecs2::OrthographicCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::OrthographicCameraComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::OrthographicCameraComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>,re::Slice<re::ecs2::OrthographicCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>*,re::Slice<re::ecs2::OrthographicCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>,re::Slice<re::ecs2::OrthographicCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::OrthographicCameraComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::OrthographicCameraComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>,re::Slice<re::ecs2::OrthographicCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>*,re::Slice<re::ecs2::OrthographicCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>,re::Slice<re::ecs2::OrthographicCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::OrthographicCameraComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::OrthographicCameraComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>,re::Slice<re::ecs2::OrthographicCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>*,re::Slice<re::ecs2::OrthographicCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>,re::Slice<re::ecs2::OrthographicCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::OrthographicCameraComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::OrthographicCameraComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>,re::Slice<re::ecs2::OrthographicCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>*,re::Slice<re::ecs2::OrthographicCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>,re::Slice<re::ecs2::OrthographicCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::OrthographicCameraComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::OrthographicCameraComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>,re::Slice<re::ecs2::OrthographicCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>*,re::Slice<re::ecs2::OrthographicCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>,re::Slice<re::ecs2::OrthographicCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::OrthographicCameraComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::OrthographicCameraComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>,re::Slice<re::ecs2::OrthographicCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>*,re::Slice<re::ecs2::OrthographicCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>,re::Slice<re::ecs2::OrthographicCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::OrthographicCameraComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::OrthographicCameraComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::OrthographicCameraComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::OrthographicCameraComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::OrthographicCameraComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>,re::Slice<re::ecs2::OrthographicCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>*,re::Slice<re::ecs2::OrthographicCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>,re::Slice<re::ecs2::OrthographicCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::OrthographicCameraComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PassthroughDarkeningComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PassthroughDarkeningComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PassthroughDarkeningComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::PassthroughDarkeningComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::PassthroughDarkeningComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::PassthroughDarkeningComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::PassthroughDarkeningComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 112, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(_WORD *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6EE208;
  *(unsigned char *)(v3 + 32) = 0;
  *(_DWORD *)(v3 + 96) = 1065353216;
  *(unsigned char *)(v3 + 100) = 0;
  double result = 0.12500003;
  *(void *)(v3 + 104) = 0x3FC000003F800000;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PassthroughDarkeningComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EE290;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PassthroughDarkeningComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82C28, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82C28))
  {
    qword_26AF82C20 = re::ecs2::introspect_PassthroughDarkeningComponent(0);
    __cxa_guard_release(&qword_26AF82C28);
  }
  return qword_26AF82C20;
}

__n128 re::ecs2::ComponentType<re::ecs2::PassthroughDarkeningComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PassthroughDarkeningComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PassthroughDarkeningComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EE198;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::PassthroughDarkeningComponent::~PassthroughDarkeningComponent(re::ecs2::PassthroughDarkeningComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PassthroughDarkeningComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::PassthroughDarkeningComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PassthroughDarkeningComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::PassthroughDarkeningComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::PassthroughDarkeningComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EE290;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PassthroughDarkeningComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>,re::Slice<re::ecs2::PassthroughDarkeningComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>*,re::Slice<re::ecs2::PassthroughDarkeningComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>,re::Slice<re::ecs2::PassthroughDarkeningComponent*>>::Subscription const&,re::Slice<re::ecs2::PassthroughDarkeningComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PassthroughDarkeningComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>,re::Slice<re::ecs2::PassthroughDarkeningComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>*,re::Slice<re::ecs2::PassthroughDarkeningComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>,re::Slice<re::ecs2::PassthroughDarkeningComponent*>>::Subscription const&,re::Slice<re::ecs2::PassthroughDarkeningComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PassthroughDarkeningComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>,re::Slice<re::ecs2::PassthroughDarkeningComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>*,re::Slice<re::ecs2::PassthroughDarkeningComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>,re::Slice<re::ecs2::PassthroughDarkeningComponent*>>::Subscription const&,re::Slice<re::ecs2::PassthroughDarkeningComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PassthroughDarkeningComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>,re::Slice<re::ecs2::PassthroughDarkeningComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>*,re::Slice<re::ecs2::PassthroughDarkeningComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>,re::Slice<re::ecs2::PassthroughDarkeningComponent*>>::Subscription const&,re::Slice<re::ecs2::PassthroughDarkeningComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PassthroughDarkeningComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>,re::Slice<re::ecs2::PassthroughDarkeningComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>*,re::Slice<re::ecs2::PassthroughDarkeningComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>,re::Slice<re::ecs2::PassthroughDarkeningComponent*>>::Subscription const&,re::Slice<re::ecs2::PassthroughDarkeningComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PassthroughDarkeningComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>,re::Slice<re::ecs2::PassthroughDarkeningComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>*,re::Slice<re::ecs2::PassthroughDarkeningComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>,re::Slice<re::ecs2::PassthroughDarkeningComponent*>>::Subscription const&,re::Slice<re::ecs2::PassthroughDarkeningComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PassthroughDarkeningComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>,re::Slice<re::ecs2::PassthroughDarkeningComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>*,re::Slice<re::ecs2::PassthroughDarkeningComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>,re::Slice<re::ecs2::PassthroughDarkeningComponent*>>::Subscription const&,re::Slice<re::ecs2::PassthroughDarkeningComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PassthroughDarkeningComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>,re::Slice<re::ecs2::PassthroughDarkeningComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>*,re::Slice<re::ecs2::PassthroughDarkeningComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>,re::Slice<re::ecs2::PassthroughDarkeningComponent*>>::Subscription const&,re::Slice<re::ecs2::PassthroughDarkeningComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PassthroughDarkeningComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PassthroughDarkeningComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PassthroughDarkeningComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PassthroughDarkeningComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>,re::Slice<re::ecs2::PassthroughDarkeningComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>*,re::Slice<re::ecs2::PassthroughDarkeningComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>,re::Slice<re::ecs2::PassthroughDarkeningComponent*>>::Subscription const&,re::Slice<re::ecs2::PassthroughDarkeningComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PerspectiveCameraComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PerspectiveCameraComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PerspectiveCameraComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::PerspectiveCameraComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::PerspectiveCameraComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (re::ecs2::PerspectiveCameraComponent *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::PerspectiveCameraComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType + 7)
                                                                                                  + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::PerspectiveCameraComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 272, 0);
  re::ecs2::PerspectiveCameraComponent::PerspectiveCameraComponent(v2);
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PerspectiveCameraComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EE3A8;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PerspectiveCameraComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82C38, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82C38))
  {
    qword_26AF82C30 = re::ecs2::introspect_PerspectiveCameraComponent(0);
    __cxa_guard_release(&qword_26AF82C38);
  }
  return qword_26AF82C30;
}

__n128 re::ecs2::ComponentType<re::ecs2::PerspectiveCameraComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PerspectiveCameraComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PerspectiveCameraComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EE338;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EE3A8;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PerspectiveCameraComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>,re::Slice<re::ecs2::PerspectiveCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>*,re::Slice<re::ecs2::PerspectiveCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>,re::Slice<re::ecs2::PerspectiveCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::PerspectiveCameraComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PerspectiveCameraComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>,re::Slice<re::ecs2::PerspectiveCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>*,re::Slice<re::ecs2::PerspectiveCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>,re::Slice<re::ecs2::PerspectiveCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::PerspectiveCameraComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PerspectiveCameraComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>,re::Slice<re::ecs2::PerspectiveCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>*,re::Slice<re::ecs2::PerspectiveCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>,re::Slice<re::ecs2::PerspectiveCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::PerspectiveCameraComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PerspectiveCameraComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>,re::Slice<re::ecs2::PerspectiveCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>*,re::Slice<re::ecs2::PerspectiveCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>,re::Slice<re::ecs2::PerspectiveCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::PerspectiveCameraComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PerspectiveCameraComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>,re::Slice<re::ecs2::PerspectiveCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>*,re::Slice<re::ecs2::PerspectiveCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>,re::Slice<re::ecs2::PerspectiveCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::PerspectiveCameraComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PerspectiveCameraComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>,re::Slice<re::ecs2::PerspectiveCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>*,re::Slice<re::ecs2::PerspectiveCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>,re::Slice<re::ecs2::PerspectiveCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::PerspectiveCameraComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PerspectiveCameraComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>,re::Slice<re::ecs2::PerspectiveCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>*,re::Slice<re::ecs2::PerspectiveCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>,re::Slice<re::ecs2::PerspectiveCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::PerspectiveCameraComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PerspectiveCameraComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>,re::Slice<re::ecs2::PerspectiveCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>*,re::Slice<re::ecs2::PerspectiveCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>,re::Slice<re::ecs2::PerspectiveCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::PerspectiveCameraComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PerspectiveCameraComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PerspectiveCameraComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PerspectiveCameraComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PerspectiveCameraComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>,re::Slice<re::ecs2::PerspectiveCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>*,re::Slice<re::ecs2::PerspectiveCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>,re::Slice<re::ecs2::PerspectiveCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::PerspectiveCameraComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PhysicsOriginComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsOriginComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PhysicsOriginComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::PhysicsOriginComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsOriginComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EE4C0;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsOriginComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82C48, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82C48))
  {
    qword_26AF82C40 = re::ecs2::introspect_PhysicsOriginComponent(0);
    __cxa_guard_release(&qword_26AF82C48);
  }
  return qword_26AF82C40;
}

__n128 re::ecs2::ComponentType<re::ecs2::PhysicsOriginComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsOriginComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsOriginComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EE450;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EE4C0;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PhysicsOriginComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>,re::Slice<re::ecs2::PhysicsOriginComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>*,re::Slice<re::ecs2::PhysicsOriginComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>,re::Slice<re::ecs2::PhysicsOriginComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsOriginComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PhysicsOriginComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>,re::Slice<re::ecs2::PhysicsOriginComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>*,re::Slice<re::ecs2::PhysicsOriginComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>,re::Slice<re::ecs2::PhysicsOriginComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsOriginComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PhysicsOriginComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>,re::Slice<re::ecs2::PhysicsOriginComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>*,re::Slice<re::ecs2::PhysicsOriginComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>,re::Slice<re::ecs2::PhysicsOriginComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsOriginComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PhysicsOriginComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>,re::Slice<re::ecs2::PhysicsOriginComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>*,re::Slice<re::ecs2::PhysicsOriginComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>,re::Slice<re::ecs2::PhysicsOriginComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsOriginComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PhysicsOriginComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>,re::Slice<re::ecs2::PhysicsOriginComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>*,re::Slice<re::ecs2::PhysicsOriginComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>,re::Slice<re::ecs2::PhysicsOriginComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsOriginComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PhysicsOriginComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>,re::Slice<re::ecs2::PhysicsOriginComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>*,re::Slice<re::ecs2::PhysicsOriginComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>,re::Slice<re::ecs2::PhysicsOriginComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsOriginComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PhysicsOriginComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>,re::Slice<re::ecs2::PhysicsOriginComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>*,re::Slice<re::ecs2::PhysicsOriginComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>,re::Slice<re::ecs2::PhysicsOriginComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsOriginComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PhysicsOriginComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>,re::Slice<re::ecs2::PhysicsOriginComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>*,re::Slice<re::ecs2::PhysicsOriginComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>,re::Slice<re::ecs2::PhysicsOriginComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsOriginComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PhysicsOriginComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PhysicsOriginComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PhysicsOriginComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PhysicsOriginComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>,re::Slice<re::ecs2::PhysicsOriginComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>*,re::Slice<re::ecs2::PhysicsOriginComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>,re::Slice<re::ecs2::PhysicsOriginComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsOriginComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PhysicsSimulationComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsSimulationComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PhysicsSimulationComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::PhysicsSimulationComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

id re::ecs2::ComponentType<re::ecs2::PhysicsSimulationComponent>::doMakeComponent@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::PhysicsSimulationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::PhysicsSimulationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 112, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E702FA0;
  *(_WORD *)(v3 + 25) = 0;
  *(unsigned char *)(v3 + 32) = 0;
  *(unsigned char *)(v3 + 64) = 0;
  *(void *)(v3 + 72) = 0x100000006;
  id result = objc_initWeak((id *)(v2 + 80), 0);
  *(void *)(v2 + 96) = 0;
  *(void *)(v2 + 104) = 0;
  *(void *)(v2 + 88) = 0;
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsSimulationComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EE5D8;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsSimulationComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82C58, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82C58))
  {
    qword_26AF82C50 = re::ecs2::introspect_PhysicsSimulationComponent(0);
    __cxa_guard_release(&qword_26AF82C58);
  }
  return qword_26AF82C50;
}

__n128 re::ecs2::ComponentType<re::ecs2::PhysicsSimulationComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsSimulationComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsSimulationComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EE568;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EE5D8;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PhysicsSimulationComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>,re::Slice<re::ecs2::PhysicsSimulationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>*,re::Slice<re::ecs2::PhysicsSimulationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>,re::Slice<re::ecs2::PhysicsSimulationComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsSimulationComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PhysicsSimulationComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>,re::Slice<re::ecs2::PhysicsSimulationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>*,re::Slice<re::ecs2::PhysicsSimulationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>,re::Slice<re::ecs2::PhysicsSimulationComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsSimulationComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PhysicsSimulationComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>,re::Slice<re::ecs2::PhysicsSimulationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>*,re::Slice<re::ecs2::PhysicsSimulationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>,re::Slice<re::ecs2::PhysicsSimulationComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsSimulationComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PhysicsSimulationComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>,re::Slice<re::ecs2::PhysicsSimulationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>*,re::Slice<re::ecs2::PhysicsSimulationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>,re::Slice<re::ecs2::PhysicsSimulationComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsSimulationComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PhysicsSimulationComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>,re::Slice<re::ecs2::PhysicsSimulationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>*,re::Slice<re::ecs2::PhysicsSimulationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>,re::Slice<re::ecs2::PhysicsSimulationComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsSimulationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PhysicsSimulationComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>,re::Slice<re::ecs2::PhysicsSimulationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>*,re::Slice<re::ecs2::PhysicsSimulationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>,re::Slice<re::ecs2::PhysicsSimulationComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsSimulationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PhysicsSimulationComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>,re::Slice<re::ecs2::PhysicsSimulationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>*,re::Slice<re::ecs2::PhysicsSimulationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>,re::Slice<re::ecs2::PhysicsSimulationComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsSimulationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PhysicsSimulationComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>,re::Slice<re::ecs2::PhysicsSimulationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>*,re::Slice<re::ecs2::PhysicsSimulationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>,re::Slice<re::ecs2::PhysicsSimulationComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsSimulationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PhysicsSimulationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PhysicsSimulationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PhysicsSimulationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PhysicsSimulationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>,re::Slice<re::ecs2::PhysicsSimulationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>*,re::Slice<re::ecs2::PhysicsSimulationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>,re::Slice<re::ecs2::PhysicsSimulationComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsSimulationComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PhysicsJointsComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsJointsComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PhysicsJointsComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::PhysicsJointsComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::PhysicsJointsComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::PhysicsJointsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::PhysicsJointsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 136, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(void *)(v2 + 128) = 0;
  *(_OWORD *)(v2 + 32) = 0u;
  uint64_t v3 = (void *)(v2 + 32);
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v4 + 16) = 0;
  *(unsigned char *)(v4 + 24) = 0;
  *(void *)uint64_t v4 = &unk_26E70B030;
  *uint64_t v3 = &unk_26E703A38;
  *(void *)(v4 + 48) = 0;
  *(void *)(v4 + 56) = 0;
  *(void *)(v4 + 40) = 0;
  *(_DWORD *)(v4 + 64) = 0;
  double result = 0.0;
  *(_OWORD *)(v4 + 72) = 0u;
  *(_OWORD *)(v4 + 88) = 0u;
  *(_DWORD *)(v4 + 104) = 0;
  *(void *)(v4 + 120) = 0;
  *(void *)(v4 + 128) = 0;
  *(void *)(v4 + 112) = 0;
  *a1 = v4;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsJointsComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EE6F0;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  uint64_t v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsJointsComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82C68, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82C68))
  {
    qword_26AF82C60 = re::ecs2::introspect_PhysicsJointsComponent(0);
    __cxa_guard_release(&qword_26AF82C68);
  }
  return qword_26AF82C60;
}

__n128 re::ecs2::ComponentType<re::ecs2::PhysicsJointsComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsJointsComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsJointsComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EE680;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EE6F0;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PhysicsJointsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>,re::Slice<re::ecs2::PhysicsJointsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>*,re::Slice<re::ecs2::PhysicsJointsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>,re::Slice<re::ecs2::PhysicsJointsComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsJointsComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PhysicsJointsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>,re::Slice<re::ecs2::PhysicsJointsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>*,re::Slice<re::ecs2::PhysicsJointsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>,re::Slice<re::ecs2::PhysicsJointsComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsJointsComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PhysicsJointsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>,re::Slice<re::ecs2::PhysicsJointsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>*,re::Slice<re::ecs2::PhysicsJointsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>,re::Slice<re::ecs2::PhysicsJointsComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsJointsComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PhysicsJointsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>,re::Slice<re::ecs2::PhysicsJointsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>*,re::Slice<re::ecs2::PhysicsJointsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>,re::Slice<re::ecs2::PhysicsJointsComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsJointsComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PhysicsJointsComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>,re::Slice<re::ecs2::PhysicsJointsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>*,re::Slice<re::ecs2::PhysicsJointsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>,re::Slice<re::ecs2::PhysicsJointsComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsJointsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PhysicsJointsComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>,re::Slice<re::ecs2::PhysicsJointsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>*,re::Slice<re::ecs2::PhysicsJointsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>,re::Slice<re::ecs2::PhysicsJointsComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsJointsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PhysicsJointsComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>,re::Slice<re::ecs2::PhysicsJointsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>*,re::Slice<re::ecs2::PhysicsJointsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>,re::Slice<re::ecs2::PhysicsJointsComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsJointsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PhysicsJointsComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>,re::Slice<re::ecs2::PhysicsJointsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>*,re::Slice<re::ecs2::PhysicsJointsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>,re::Slice<re::ecs2::PhysicsJointsComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsJointsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PhysicsJointsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PhysicsJointsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PhysicsJointsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PhysicsJointsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>,re::Slice<re::ecs2::PhysicsJointsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>*,re::Slice<re::ecs2::PhysicsJointsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>,re::Slice<re::ecs2::PhysicsJointsComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsJointsComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PlanarReflectionCaptureComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PlanarReflectionCaptureComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PlanarReflectionCaptureComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::PlanarReflectionCaptureComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::PlanarReflectionCaptureComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::PlanarReflectionCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::PlanarReflectionCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 56, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(void *)(v2 + 48) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6EE808;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = 0;
  *(void *)(v3 + 32) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PlanarReflectionCaptureComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EE890;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PlanarReflectionCaptureComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82C78, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82C78))
  {
    qword_26AF82C70 = re::ecs2::introspect_PlanarReflectionCaptureComponent(0);
    __cxa_guard_release(&qword_26AF82C78);
  }
  return qword_26AF82C70;
}

__n128 re::ecs2::ComponentType<re::ecs2::PlanarReflectionCaptureComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PlanarReflectionCaptureComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PlanarReflectionCaptureComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EE798;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::PlanarReflectionCaptureComponent::~PlanarReflectionCaptureComponent(re::ecs2::PlanarReflectionCaptureComponent *this)
{
  *(void *)this = &unk_26E6EE808;
  re::AssetHandle::~AssetHandle((re::ecs2::PlanarReflectionCaptureComponent *)((char *)this + 32));
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6EE808;
  re::AssetHandle::~AssetHandle((re::ecs2::PlanarReflectionCaptureComponent *)((char *)this + 32));
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PlanarReflectionCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::PlanarReflectionCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PlanarReflectionCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::PlanarReflectionCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::PlanarReflectionCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EE890;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PlanarReflectionCaptureComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>*,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>>::Subscription const&,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PlanarReflectionCaptureComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>*,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>>::Subscription const&,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PlanarReflectionCaptureComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>*,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>>::Subscription const&,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PlanarReflectionCaptureComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>*,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>>::Subscription const&,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PlanarReflectionCaptureComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>*,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>>::Subscription const&,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PlanarReflectionCaptureComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>*,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>>::Subscription const&,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PlanarReflectionCaptureComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>*,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>>::Subscription const&,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PlanarReflectionCaptureComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>*,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>>::Subscription const&,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PlanarReflectionCaptureComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PlanarReflectionCaptureComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PlanarReflectionCaptureComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PlanarReflectionCaptureComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>*,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>>::Subscription const&,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PlanarReflectionReceiverComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PlanarReflectionReceiverComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PlanarReflectionReceiverComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::PlanarReflectionReceiverComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::PlanarReflectionReceiverComponent>::doMakeComponent(uint64_t *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::PlanarReflectionReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::PlanarReflectionReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 56, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(void *)(v2 + 48) = 0;
  *(_OWORD *)(v2 + 32) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6EE9A8;
  objc_initWeak((id *)(v2 + 32), 0);
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = 0;
  re::ecs2::EntityHandle::reset((re::ecs2::EntityHandle *)(v2 + 32));
  *a1 = v2;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PlanarReflectionReceiverComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EEA30;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PlanarReflectionReceiverComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82C88, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82C88))
  {
    qword_26AF82C80 = re::ecs2::introspect_PlanarReflectionReceiverComponent(0);
    __cxa_guard_release(&qword_26AF82C88);
  }
  return qword_26AF82C80;
}

__n128 re::ecs2::ComponentType<re::ecs2::PlanarReflectionReceiverComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PlanarReflectionReceiverComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PlanarReflectionReceiverComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EE938;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::PlanarReflectionReceiverComponent::~PlanarReflectionReceiverComponent(re::ecs2::PlanarReflectionReceiverComponent *this)
{
  *(void *)this = &unk_26E6EE9A8;
  uint64_t v2 = (id *)((char *)this + 32);
  re::ecs2::EntityHandle::reset((re::ecs2::PlanarReflectionReceiverComponent *)((char *)this + 32));
  objc_destroyWeak(v2);
  *((void *)this + 4) = 0;
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  id *v2;
  uint64_t vars8;

  *(void *)this = &unk_26E6EE9A8;
  uint64_t v2 = (id *)((char *)this + 32);
  re::ecs2::EntityHandle::reset((re::ecs2::PlanarReflectionReceiverComponent *)((char *)this + 32));
  objc_destroyWeak(v2);
  *((void *)this + 4) = 0;
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PlanarReflectionReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::PlanarReflectionReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PlanarReflectionReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::PlanarReflectionReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::PlanarReflectionReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EEA30;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PlanarReflectionReceiverComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>*,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PlanarReflectionReceiverComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>*,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PlanarReflectionReceiverComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>*,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PlanarReflectionReceiverComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>*,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PlanarReflectionReceiverComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>*,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PlanarReflectionReceiverComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>*,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PlanarReflectionReceiverComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>*,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PlanarReflectionReceiverComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>*,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PlanarReflectionReceiverComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PlanarReflectionReceiverComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PlanarReflectionReceiverComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PlanarReflectionReceiverComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>*,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PrimitiveBoxComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveBoxComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PrimitiveBoxComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::PrimitiveBoxComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::PrimitiveBoxComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::PrimitiveBoxComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::PrimitiveBoxComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 144, 0);
  return re::make::shared::inplace<re::ecs2::PrimitiveBoxComponent>(v2, a1);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveBoxComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EEB48;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveBoxComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82C98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82C98))
  {
    qword_26AF82C90 = re::ecs2::introspect_PrimitiveBoxComponent(0);
    __cxa_guard_release(&qword_26AF82C98);
  }
  return qword_26AF82C90;
}

__n128 re::ecs2::ComponentType<re::ecs2::PrimitiveBoxComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveBoxComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveBoxComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EEAD8;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EEB48;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>::registerCallbacks(_DWORD *a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveBoxComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>,re::Slice<re::ecs2::PrimitiveBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>*,re::Slice<re::ecs2::PrimitiveBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>,re::Slice<re::ecs2::PrimitiveBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveBoxComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveBoxComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>,re::Slice<re::ecs2::PrimitiveBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>*,re::Slice<re::ecs2::PrimitiveBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>,re::Slice<re::ecs2::PrimitiveBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveBoxComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveBoxComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>,re::Slice<re::ecs2::PrimitiveBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>*,re::Slice<re::ecs2::PrimitiveBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>,re::Slice<re::ecs2::PrimitiveBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveBoxComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveBoxComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>,re::Slice<re::ecs2::PrimitiveBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>*,re::Slice<re::ecs2::PrimitiveBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>,re::Slice<re::ecs2::PrimitiveBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveBoxComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveBoxComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>,re::Slice<re::ecs2::PrimitiveBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>*,re::Slice<re::ecs2::PrimitiveBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>,re::Slice<re::ecs2::PrimitiveBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveBoxComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveBoxComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>,re::Slice<re::ecs2::PrimitiveBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>*,re::Slice<re::ecs2::PrimitiveBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>,re::Slice<re::ecs2::PrimitiveBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveBoxComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveBoxComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>,re::Slice<re::ecs2::PrimitiveBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>*,re::Slice<re::ecs2::PrimitiveBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>,re::Slice<re::ecs2::PrimitiveBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveBoxComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveBoxComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>,re::Slice<re::ecs2::PrimitiveBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>*,re::Slice<re::ecs2::PrimitiveBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>,re::Slice<re::ecs2::PrimitiveBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveBoxComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveBoxComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveBoxComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveBoxComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveBoxComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>,re::Slice<re::ecs2::PrimitiveBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>*,re::Slice<re::ecs2::PrimitiveBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>,re::Slice<re::ecs2::PrimitiveBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveBoxComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::PrimitiveBoxWithRoundedCornersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::PrimitiveBoxWithRoundedCornersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 168, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(void *)(v2 + 160) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)&double result = 0x3000100010001;
  *(void *)(v3 + 28) = 0x3000100010001;
  *(_WORD *)(v3 + 36) = 4;
  *(_OWORD *)(v3 + 40) = xmmword_234371EF0;
  *(_DWORD *)(v3 + 56) = 1065353216;
  *(_DWORD *)(v3 + 60) = 16777473;
  *(_WORD *)(v3 + 64) = 1;
  *(unsigned char *)(v3 + 66) = 0;
  *(_WORD *)(v3 + 68) = 0;
  *(unsigned char *)(v3 + 70) = 1;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0x3000100010001;
  *(_WORD *)(v3 + 128) = 4;
  *(_OWORD *)(v3 + 132) = xmmword_234371EF0;
  *(_DWORD *)(v3 + 148) = 1065353216;
  *(_DWORD *)(v3 + 152) = 16777473;
  *(_WORD *)(v3 + 156) = 1;
  *(unsigned char *)(v3 + 158) = 0;
  *(_WORD *)(v3 + 160) = 1;
  *(void *)uint64_t v3 = &unk_26E6EEC60;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EED58;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82CA8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82CA8))
  {
    qword_26AF82CA0 = re::ecs2::introspect_PrimitiveBoxWithRoundedCornersComponent(0);
    __cxa_guard_release(&qword_26AF82CA8);
  }
  return qword_26AF82CA0;
}

__n128 re::ecs2::ComponentType<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EEBF0;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::PrimitiveBoxWithRoundedCornersComponent::~PrimitiveBoxWithRoundedCornersComponent(re::ecs2::PrimitiveBoxWithRoundedCornersComponent *this)
{
  *(void *)this = &unk_26E6EED00;
  uint64_t v2 = (re::ecs2::PrimitiveBoxWithRoundedCornersComponent *)((char *)this + 72);
  re::AssetHandle::~AssetHandle((re::ecs2::PrimitiveBoxWithRoundedCornersComponent *)((char *)this + 96));
  re::AssetHandle::~AssetHandle(v2);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  re::AssetHandle *v2;
  uint64_t vars8;

  *(void *)this = &unk_26E6EED00;
  uint64_t v2 = (re::ecs2::PrimitiveBoxWithRoundedCornersComponent *)((char *)this + 72);
  re::AssetHandle::~AssetHandle((re::ecs2::PrimitiveBoxWithRoundedCornersComponent *)((char *)this + 96));
  re::AssetHandle::~AssetHandle(v2);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PrimitiveBoxWithRoundedCornersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::PrimitiveBoxWithRoundedCornersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PrimitiveBoxWithRoundedCornersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::PrimitiveBoxWithRoundedCornersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::PrimitiveBoxWithRoundedCornersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void *re::ecs2::PrimitiveComponentBase<re::ecs2::PrimitiveBoxWithRoundedCornersComponent,re::GeomBuildBoxWithRoundedCornersOptions,(re::ecs2::ComponentTypeBase::Flags)2>::~PrimitiveComponentBase(void *a1)
{
  *a1 = &unk_26E6EED00;
  uint64_t v2 = (re::AssetHandle *)(a1 + 9);
  re::AssetHandle::~AssetHandle((re::AssetHandle *)(a1 + 12));
  re::AssetHandle::~AssetHandle(v2);
  *a1 = &unk_26E6DECE0;
  objc_destructInstance(a1 + 1);
  return a1;
}

void re::ecs2::PrimitiveComponentBase<re::ecs2::PrimitiveBoxWithRoundedCornersComponent,re::GeomBuildBoxWithRoundedCornersOptions,(re::ecs2::ComponentTypeBase::Flags)2>::~PrimitiveComponentBase(void *a1)
{
  *a1 = &unk_26E6EED00;
  uint64_t v2 = (re::AssetHandle *)(a1 + 9);
  re::AssetHandle::~AssetHandle((re::AssetHandle *)(a1 + 12));
  re::AssetHandle::~AssetHandle(v2);
  *a1 = &unk_26E6DECE0;
  objc_destructInstance(a1 + 1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EED58;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>::registerCallbacks(_DWORD *a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>*,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>*,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>*,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>*,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>*,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>*,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>*,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>*,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>*,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PrimitiveCapsuleComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveCapsuleComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PrimitiveCapsuleComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::PrimitiveCapsuleComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::PrimitiveCapsuleComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::PrimitiveCapsuleComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::PrimitiveCapsuleComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 128, 0);
  return re::make::shared::inplace<re::ecs2::PrimitiveCapsuleComponent>(v2, a1);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveCapsuleComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EEE70;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveCapsuleComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82CB8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82CB8))
  {
    qword_26AF82CB0 = re::ecs2::introspect_PrimitiveCapsuleComponent(0);
    __cxa_guard_release(&qword_26AF82CB8);
  }
  return qword_26AF82CB0;
}

__n128 re::ecs2::ComponentType<re::ecs2::PrimitiveCapsuleComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveCapsuleComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveCapsuleComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EEE00;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EEE70;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>::registerCallbacks(_DWORD *a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveCapsuleComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>*,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveCapsuleComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>*,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveCapsuleComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>*,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveCapsuleComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>*,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveCapsuleComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>*,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveCapsuleComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>*,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveCapsuleComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>*,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveCapsuleComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>*,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveCapsuleComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveCapsuleComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveCapsuleComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveCapsuleComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>*,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PrimitiveConeComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveConeComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PrimitiveConeComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::PrimitiveConeComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::PrimitiveConeComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::PrimitiveConeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::PrimitiveConeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 120, 0);
  return re::make::shared::inplace<re::ecs2::PrimitiveConeComponent>(v2, a1);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveConeComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EEF88;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveConeComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82CC8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82CC8))
  {
    qword_26AF82CC0 = re::ecs2::introspect_PrimitiveConeComponent(0);
    __cxa_guard_release(&qword_26AF82CC8);
  }
  return qword_26AF82CC0;
}

__n128 re::ecs2::ComponentType<re::ecs2::PrimitiveConeComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveConeComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveConeComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EEF18;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EEF88;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>::registerCallbacks(_DWORD *a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveConeComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>,re::Slice<re::ecs2::PrimitiveConeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>*,re::Slice<re::ecs2::PrimitiveConeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>,re::Slice<re::ecs2::PrimitiveConeComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveConeComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveConeComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>,re::Slice<re::ecs2::PrimitiveConeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>*,re::Slice<re::ecs2::PrimitiveConeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>,re::Slice<re::ecs2::PrimitiveConeComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveConeComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveConeComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>,re::Slice<re::ecs2::PrimitiveConeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>*,re::Slice<re::ecs2::PrimitiveConeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>,re::Slice<re::ecs2::PrimitiveConeComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveConeComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveConeComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>,re::Slice<re::ecs2::PrimitiveConeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>*,re::Slice<re::ecs2::PrimitiveConeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>,re::Slice<re::ecs2::PrimitiveConeComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveConeComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveConeComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>,re::Slice<re::ecs2::PrimitiveConeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>*,re::Slice<re::ecs2::PrimitiveConeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>,re::Slice<re::ecs2::PrimitiveConeComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveConeComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveConeComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>,re::Slice<re::ecs2::PrimitiveConeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>*,re::Slice<re::ecs2::PrimitiveConeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>,re::Slice<re::ecs2::PrimitiveConeComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveConeComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveConeComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>,re::Slice<re::ecs2::PrimitiveConeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>*,re::Slice<re::ecs2::PrimitiveConeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>,re::Slice<re::ecs2::PrimitiveConeComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveConeComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveConeComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>,re::Slice<re::ecs2::PrimitiveConeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>*,re::Slice<re::ecs2::PrimitiveConeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>,re::Slice<re::ecs2::PrimitiveConeComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveConeComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveConeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveConeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveConeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveConeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>,re::Slice<re::ecs2::PrimitiveConeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>*,re::Slice<re::ecs2::PrimitiveConeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>,re::Slice<re::ecs2::PrimitiveConeComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveConeComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PrimitiveCylinderComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveCylinderComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PrimitiveCylinderComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::PrimitiveCylinderComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::PrimitiveCylinderComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::PrimitiveCylinderComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::PrimitiveCylinderComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 136, 0);
  return re::make::shared::inplace<re::ecs2::PrimitiveCylinderComponent>(v2, a1);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveCylinderComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EF0A0;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveCylinderComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82CD8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82CD8))
  {
    qword_26AF82CD0 = re::ecs2::introspect_PrimitiveCylinderComponent(0);
    __cxa_guard_release(&qword_26AF82CD8);
  }
  return qword_26AF82CD0;
}

__n128 re::ecs2::ComponentType<re::ecs2::PrimitiveCylinderComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveCylinderComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveCylinderComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EF030;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EF0A0;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>::registerCallbacks(_DWORD *a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveCylinderComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>,re::Slice<re::ecs2::PrimitiveCylinderComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>*,re::Slice<re::ecs2::PrimitiveCylinderComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>,re::Slice<re::ecs2::PrimitiveCylinderComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveCylinderComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveCylinderComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>,re::Slice<re::ecs2::PrimitiveCylinderComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>*,re::Slice<re::ecs2::PrimitiveCylinderComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>,re::Slice<re::ecs2::PrimitiveCylinderComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveCylinderComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveCylinderComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>,re::Slice<re::ecs2::PrimitiveCylinderComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>*,re::Slice<re::ecs2::PrimitiveCylinderComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>,re::Slice<re::ecs2::PrimitiveCylinderComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveCylinderComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveCylinderComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>,re::Slice<re::ecs2::PrimitiveCylinderComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>*,re::Slice<re::ecs2::PrimitiveCylinderComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>,re::Slice<re::ecs2::PrimitiveCylinderComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveCylinderComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveCylinderComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>,re::Slice<re::ecs2::PrimitiveCylinderComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>*,re::Slice<re::ecs2::PrimitiveCylinderComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>,re::Slice<re::ecs2::PrimitiveCylinderComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveCylinderComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveCylinderComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>,re::Slice<re::ecs2::PrimitiveCylinderComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>*,re::Slice<re::ecs2::PrimitiveCylinderComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>,re::Slice<re::ecs2::PrimitiveCylinderComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveCylinderComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveCylinderComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>,re::Slice<re::ecs2::PrimitiveCylinderComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>*,re::Slice<re::ecs2::PrimitiveCylinderComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>,re::Slice<re::ecs2::PrimitiveCylinderComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveCylinderComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveCylinderComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>,re::Slice<re::ecs2::PrimitiveCylinderComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>*,re::Slice<re::ecs2::PrimitiveCylinderComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>,re::Slice<re::ecs2::PrimitiveCylinderComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveCylinderComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveCylinderComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveCylinderComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveCylinderComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveCylinderComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>,re::Slice<re::ecs2::PrimitiveCylinderComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>*,re::Slice<re::ecs2::PrimitiveCylinderComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>,re::Slice<re::ecs2::PrimitiveCylinderComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveCylinderComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PrimitivePlaneComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitivePlaneComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PrimitivePlaneComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::PrimitivePlaneComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::PrimitivePlaneComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::PrimitivePlaneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::PrimitivePlaneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 144, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  *((_OWORD *)v2 + 8) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 28) = 65537;
  *(_WORD *)(v3 + 32) = 0;
  __asm { FMOV            V0.2S, #1.0 }
  *(double *)(v3 + 36) = result;
  *(_DWORD *)(v3 + 44) = 0;
  *(_WORD *)(v3 + 48) = 257;
  *(_DWORD *)(v3 + 52) = 2;
  *(_WORD *)(v3 + 56) = 0;
  *(unsigned char *)(v3 + 58) = 1;
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 80) = 0u;
  *(_OWORD *)(v3 + 96) = 0u;
  *(_DWORD *)(v3 + 112) = 65537;
  *(_WORD *)(v3 + 116) = 0;
  *(double *)(v3 + 120) = result;
  *(_DWORD *)(v3 + 128) = 0;
  *(_WORD *)(v3 + 132) = 257;
  *(_DWORD *)(v3 + 136) = 2;
  *(_WORD *)(v3 + 140) = 1;
  *(void *)uint64_t v3 = &unk_26E6EF1B8;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitivePlaneComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EF2B0;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitivePlaneComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82CE8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82CE8))
  {
    qword_26AF82CE0 = re::ecs2::introspect_PrimitivePlaneComponent(0);
    __cxa_guard_release(&qword_26AF82CE8);
  }
  return qword_26AF82CE0;
}

__n128 re::ecs2::ComponentType<re::ecs2::PrimitivePlaneComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitivePlaneComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitivePlaneComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EF148;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::PrimitivePlaneComponent::~PrimitivePlaneComponent(re::ecs2::PrimitivePlaneComponent *this)
{
  *(void *)this = &unk_26E6EF258;
  uint64_t v2 = (re::ecs2::PrimitivePlaneComponent *)((char *)this + 64);
  re::AssetHandle::~AssetHandle((re::ecs2::PrimitivePlaneComponent *)((char *)this + 88));
  re::AssetHandle::~AssetHandle(v2);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  re::AssetHandle *v2;
  uint64_t vars8;

  *(void *)this = &unk_26E6EF258;
  uint64_t v2 = (re::ecs2::PrimitivePlaneComponent *)((char *)this + 64);
  re::AssetHandle::~AssetHandle((re::ecs2::PrimitivePlaneComponent *)((char *)this + 88));
  re::AssetHandle::~AssetHandle(v2);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PrimitivePlaneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::PrimitivePlaneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PrimitivePlaneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::PrimitivePlaneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::PrimitivePlaneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void *re::ecs2::PrimitiveComponentBase<re::ecs2::PrimitivePlaneComponent,re::GeomBuildPlaneOptions,(re::ecs2::ComponentTypeBase::Flags)2>::~PrimitiveComponentBase(void *a1)
{
  *a1 = &unk_26E6EF258;
  uint64_t v2 = (re::AssetHandle *)(a1 + 8);
  re::AssetHandle::~AssetHandle((re::AssetHandle *)(a1 + 11));
  re::AssetHandle::~AssetHandle(v2);
  *a1 = &unk_26E6DECE0;
  objc_destructInstance(a1 + 1);
  return a1;
}

void re::ecs2::PrimitiveComponentBase<re::ecs2::PrimitivePlaneComponent,re::GeomBuildPlaneOptions,(re::ecs2::ComponentTypeBase::Flags)2>::~PrimitiveComponentBase(void *a1)
{
  *a1 = &unk_26E6EF258;
  uint64_t v2 = (re::AssetHandle *)(a1 + 8);
  re::AssetHandle::~AssetHandle((re::AssetHandle *)(a1 + 11));
  re::AssetHandle::~AssetHandle(v2);
  *a1 = &unk_26E6DECE0;
  objc_destructInstance(a1 + 1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EF2B0;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>::registerCallbacks(_DWORD *a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitivePlaneComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>,re::Slice<re::ecs2::PrimitivePlaneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>*,re::Slice<re::ecs2::PrimitivePlaneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>,re::Slice<re::ecs2::PrimitivePlaneComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitivePlaneComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitivePlaneComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>,re::Slice<re::ecs2::PrimitivePlaneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>*,re::Slice<re::ecs2::PrimitivePlaneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>,re::Slice<re::ecs2::PrimitivePlaneComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitivePlaneComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitivePlaneComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>,re::Slice<re::ecs2::PrimitivePlaneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>*,re::Slice<re::ecs2::PrimitivePlaneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>,re::Slice<re::ecs2::PrimitivePlaneComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitivePlaneComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitivePlaneComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>,re::Slice<re::ecs2::PrimitivePlaneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>*,re::Slice<re::ecs2::PrimitivePlaneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>,re::Slice<re::ecs2::PrimitivePlaneComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitivePlaneComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitivePlaneComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>,re::Slice<re::ecs2::PrimitivePlaneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>*,re::Slice<re::ecs2::PrimitivePlaneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>,re::Slice<re::ecs2::PrimitivePlaneComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitivePlaneComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitivePlaneComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>,re::Slice<re::ecs2::PrimitivePlaneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>*,re::Slice<re::ecs2::PrimitivePlaneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>,re::Slice<re::ecs2::PrimitivePlaneComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitivePlaneComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitivePlaneComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>,re::Slice<re::ecs2::PrimitivePlaneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>*,re::Slice<re::ecs2::PrimitivePlaneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>,re::Slice<re::ecs2::PrimitivePlaneComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitivePlaneComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitivePlaneComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>,re::Slice<re::ecs2::PrimitivePlaneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>*,re::Slice<re::ecs2::PrimitivePlaneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>,re::Slice<re::ecs2::PrimitivePlaneComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitivePlaneComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitivePlaneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitivePlaneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitivePlaneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitivePlaneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>,re::Slice<re::ecs2::PrimitivePlaneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>*,re::Slice<re::ecs2::PrimitivePlaneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>,re::Slice<re::ecs2::PrimitivePlaneComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitivePlaneComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PrimitivePyramidComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitivePyramidComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PrimitivePyramidComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::PrimitivePyramidComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::PrimitivePyramidComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::PrimitivePyramidComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::PrimitivePyramidComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 128, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(_WORD *)(v3 + 28) = 1;
  __asm { FMOV            V0.2S, #1.0 }
  *(double *)(v3 + 32) = result;
  *(_DWORD *)(v3 + 40) = 1065353216;
  *(_WORD *)(v3 + 44) = 257;
  *(unsigned char *)(v3 + 46) = 0;
  *(_WORD *)(v3 + 48) = 0;
  *(unsigned char *)(v3 + 50) = 1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_WORD *)(v3 + 104) = 1;
  *(double *)(v3 + 108) = result;
  *(_DWORD *)(v3 + 116) = 1065353216;
  *(_WORD *)(v3 + 120) = 257;
  *(unsigned char *)(v3 + 122) = 0;
  *(_WORD *)(v3 + 124) = 1;
  *(void *)uint64_t v3 = &unk_26E6EF3C8;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitivePyramidComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EF4C0;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitivePyramidComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82CF8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82CF8))
  {
    qword_26AF82CF0 = re::ecs2::introspect_PrimitivePyramidComponent(0);
    __cxa_guard_release(&qword_26AF82CF8);
  }
  return qword_26AF82CF0;
}

__n128 re::ecs2::ComponentType<re::ecs2::PrimitivePyramidComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitivePyramidComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitivePyramidComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EF358;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::PrimitivePyramidComponent::~PrimitivePyramidComponent(re::ecs2::PrimitivePyramidComponent *this)
{
  *(void *)this = &unk_26E6EF468;
  uint64_t v2 = (re::ecs2::PrimitivePyramidComponent *)((char *)this + 56);
  re::AssetHandle::~AssetHandle((re::ecs2::PrimitivePyramidComponent *)((char *)this + 80));
  re::AssetHandle::~AssetHandle(v2);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  re::AssetHandle *v2;
  uint64_t vars8;

  *(void *)this = &unk_26E6EF468;
  uint64_t v2 = (re::ecs2::PrimitivePyramidComponent *)((char *)this + 56);
  re::AssetHandle::~AssetHandle((re::ecs2::PrimitivePyramidComponent *)((char *)this + 80));
  re::AssetHandle::~AssetHandle(v2);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PrimitivePyramidComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::PrimitivePyramidComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PrimitivePyramidComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::PrimitivePyramidComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::PrimitivePyramidComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void *re::ecs2::PrimitiveComponentBase<re::ecs2::PrimitivePyramidComponent,re::GeomBuildPyramidOptions,(re::ecs2::ComponentTypeBase::Flags)2>::~PrimitiveComponentBase(void *a1)
{
  *a1 = &unk_26E6EF468;
  uint64_t v2 = (re::AssetHandle *)(a1 + 7);
  re::AssetHandle::~AssetHandle((re::AssetHandle *)(a1 + 10));
  re::AssetHandle::~AssetHandle(v2);
  *a1 = &unk_26E6DECE0;
  objc_destructInstance(a1 + 1);
  return a1;
}

void re::ecs2::PrimitiveComponentBase<re::ecs2::PrimitivePyramidComponent,re::GeomBuildPyramidOptions,(re::ecs2::ComponentTypeBase::Flags)2>::~PrimitiveComponentBase(void *a1)
{
  *a1 = &unk_26E6EF468;
  uint64_t v2 = (re::AssetHandle *)(a1 + 7);
  re::AssetHandle::~AssetHandle((re::AssetHandle *)(a1 + 10));
  re::AssetHandle::~AssetHandle(v2);
  *a1 = &unk_26E6DECE0;
  objc_destructInstance(a1 + 1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EF4C0;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>::registerCallbacks(_DWORD *a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitivePyramidComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>,re::Slice<re::ecs2::PrimitivePyramidComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>*,re::Slice<re::ecs2::PrimitivePyramidComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>,re::Slice<re::ecs2::PrimitivePyramidComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitivePyramidComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitivePyramidComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>,re::Slice<re::ecs2::PrimitivePyramidComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>*,re::Slice<re::ecs2::PrimitivePyramidComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>,re::Slice<re::ecs2::PrimitivePyramidComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitivePyramidComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitivePyramidComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>,re::Slice<re::ecs2::PrimitivePyramidComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>*,re::Slice<re::ecs2::PrimitivePyramidComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>,re::Slice<re::ecs2::PrimitivePyramidComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitivePyramidComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitivePyramidComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>,re::Slice<re::ecs2::PrimitivePyramidComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>*,re::Slice<re::ecs2::PrimitivePyramidComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>,re::Slice<re::ecs2::PrimitivePyramidComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitivePyramidComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitivePyramidComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>,re::Slice<re::ecs2::PrimitivePyramidComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>*,re::Slice<re::ecs2::PrimitivePyramidComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>,re::Slice<re::ecs2::PrimitivePyramidComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitivePyramidComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitivePyramidComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>,re::Slice<re::ecs2::PrimitivePyramidComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>*,re::Slice<re::ecs2::PrimitivePyramidComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>,re::Slice<re::ecs2::PrimitivePyramidComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitivePyramidComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitivePyramidComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>,re::Slice<re::ecs2::PrimitivePyramidComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>*,re::Slice<re::ecs2::PrimitivePyramidComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>,re::Slice<re::ecs2::PrimitivePyramidComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitivePyramidComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitivePyramidComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>,re::Slice<re::ecs2::PrimitivePyramidComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>*,re::Slice<re::ecs2::PrimitivePyramidComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>,re::Slice<re::ecs2::PrimitivePyramidComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitivePyramidComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitivePyramidComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitivePyramidComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitivePyramidComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitivePyramidComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>,re::Slice<re::ecs2::PrimitivePyramidComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>*,re::Slice<re::ecs2::PrimitivePyramidComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>,re::Slice<re::ecs2::PrimitivePyramidComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitivePyramidComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PrimitiveSphereComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveSphereComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PrimitiveSphereComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::PrimitiveSphereComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::PrimitiveSphereComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::PrimitiveSphereComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::PrimitiveSphereComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 112, 0);
  return re::make::shared::inplace<re::ecs2::PrimitiveSphereComponent>(v2, a1);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveSphereComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EF5D8;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveSphereComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82D08, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82D08))
  {
    qword_26AF82D00 = re::ecs2::introspect_PrimitiveSphereComponent(0);
    __cxa_guard_release(&qword_26AF82D08);
  }
  return qword_26AF82D00;
}

__n128 re::ecs2::ComponentType<re::ecs2::PrimitiveSphereComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveSphereComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveSphereComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EF568;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EF5D8;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>::registerCallbacks(_DWORD *a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveSphereComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>,re::Slice<re::ecs2::PrimitiveSphereComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>*,re::Slice<re::ecs2::PrimitiveSphereComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>,re::Slice<re::ecs2::PrimitiveSphereComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveSphereComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveSphereComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>,re::Slice<re::ecs2::PrimitiveSphereComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>*,re::Slice<re::ecs2::PrimitiveSphereComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>,re::Slice<re::ecs2::PrimitiveSphereComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveSphereComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveSphereComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>,re::Slice<re::ecs2::PrimitiveSphereComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>*,re::Slice<re::ecs2::PrimitiveSphereComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>,re::Slice<re::ecs2::PrimitiveSphereComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveSphereComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveSphereComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>,re::Slice<re::ecs2::PrimitiveSphereComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>*,re::Slice<re::ecs2::PrimitiveSphereComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>,re::Slice<re::ecs2::PrimitiveSphereComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveSphereComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveSphereComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>,re::Slice<re::ecs2::PrimitiveSphereComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>*,re::Slice<re::ecs2::PrimitiveSphereComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>,re::Slice<re::ecs2::PrimitiveSphereComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveSphereComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveSphereComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>,re::Slice<re::ecs2::PrimitiveSphereComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>*,re::Slice<re::ecs2::PrimitiveSphereComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>,re::Slice<re::ecs2::PrimitiveSphereComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveSphereComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveSphereComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>,re::Slice<re::ecs2::PrimitiveSphereComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>*,re::Slice<re::ecs2::PrimitiveSphereComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>,re::Slice<re::ecs2::PrimitiveSphereComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveSphereComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveSphereComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>,re::Slice<re::ecs2::PrimitiveSphereComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>*,re::Slice<re::ecs2::PrimitiveSphereComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>,re::Slice<re::ecs2::PrimitiveSphereComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveSphereComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveSphereComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveSphereComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveSphereComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveSphereComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>,re::Slice<re::ecs2::PrimitiveSphereComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>*,re::Slice<re::ecs2::PrimitiveSphereComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>,re::Slice<re::ecs2::PrimitiveSphereComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveSphereComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PrimitiveTetrahedronComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveTetrahedronComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PrimitiveTetrahedronComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::PrimitiveTetrahedronComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::PrimitiveTetrahedronComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::PrimitiveTetrahedronComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::PrimitiveTetrahedronComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 112, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(_WORD *)(v3 + 28) = 1;
  *(_DWORD *)(v3 + 32) = 1065353216;
  *(_WORD *)(v3 + 36) = 257;
  *(unsigned char *)(v3 + 38) = 0;
  *(_WORD *)(v3 + 40) = 0;
  *(unsigned char *)(v3 + 42) = 1;
  double result = 0.0;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 80) = 0u;
  *(_WORD *)(v3 + 96) = 1;
  *(_DWORD *)(v3 + 100) = 1065353216;
  *(_WORD *)(v3 + 104) = 257;
  *(unsigned char *)(v3 + 106) = 0;
  *(_WORD *)(v3 + 108) = 1;
  *(void *)uint64_t v3 = &unk_26E6EF6F0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveTetrahedronComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EF7E8;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveTetrahedronComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82D18, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82D18))
  {
    qword_26AF82D10 = re::ecs2::introspect_PrimitiveTetrahedronComponent(0);
    __cxa_guard_release(&qword_26AF82D18);
  }
  return qword_26AF82D10;
}

__n128 re::ecs2::ComponentType<re::ecs2::PrimitiveTetrahedronComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveTetrahedronComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveTetrahedronComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EF680;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::PrimitiveTetrahedronComponent::~PrimitiveTetrahedronComponent(re::ecs2::PrimitiveTetrahedronComponent *this)
{
  *(void *)this = &unk_26E6EF790;
  uint64_t v2 = (re::ecs2::PrimitiveTetrahedronComponent *)((char *)this + 48);
  re::AssetHandle::~AssetHandle((re::ecs2::PrimitiveTetrahedronComponent *)((char *)this + 72));
  re::AssetHandle::~AssetHandle(v2);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  re::AssetHandle *v2;
  uint64_t vars8;

  *(void *)this = &unk_26E6EF790;
  uint64_t v2 = (re::ecs2::PrimitiveTetrahedronComponent *)((char *)this + 48);
  re::AssetHandle::~AssetHandle((re::ecs2::PrimitiveTetrahedronComponent *)((char *)this + 72));
  re::AssetHandle::~AssetHandle(v2);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PrimitiveTetrahedronComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::PrimitiveTetrahedronComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PrimitiveTetrahedronComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::PrimitiveTetrahedronComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::PrimitiveTetrahedronComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void *re::ecs2::PrimitiveComponentBase<re::ecs2::PrimitiveTetrahedronComponent,re::GeomBuildTetrahedronOptions,(re::ecs2::ComponentTypeBase::Flags)2>::~PrimitiveComponentBase(void *a1)
{
  *a1 = &unk_26E6EF790;
  uint64_t v2 = (re::AssetHandle *)(a1 + 6);
  re::AssetHandle::~AssetHandle((re::AssetHandle *)(a1 + 9));
  re::AssetHandle::~AssetHandle(v2);
  *a1 = &unk_26E6DECE0;
  objc_destructInstance(a1 + 1);
  return a1;
}

void re::ecs2::PrimitiveComponentBase<re::ecs2::PrimitiveTetrahedronComponent,re::GeomBuildTetrahedronOptions,(re::ecs2::ComponentTypeBase::Flags)2>::~PrimitiveComponentBase(void *a1)
{
  *a1 = &unk_26E6EF790;
  uint64_t v2 = (re::AssetHandle *)(a1 + 6);
  re::AssetHandle::~AssetHandle((re::AssetHandle *)(a1 + 9));
  re::AssetHandle::~AssetHandle(v2);
  *a1 = &unk_26E6DECE0;
  objc_destructInstance(a1 + 1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EF7E8;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>::registerCallbacks(_DWORD *a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveTetrahedronComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>*,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveTetrahedronComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>*,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveTetrahedronComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>*,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveTetrahedronComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>*,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveTetrahedronComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>*,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveTetrahedronComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>*,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveTetrahedronComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>*,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveTetrahedronComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>*,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveTetrahedronComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveTetrahedronComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveTetrahedronComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveTetrahedronComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>*,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PrimitiveTubeComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveTubeComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PrimitiveTubeComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::PrimitiveTubeComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::PrimitiveTubeComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::PrimitiveTubeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::PrimitiveTubeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 128, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 28) = 65544;
  double result = 0.00000190734908;
  *(void *)(v3 + 32) = 0x3EC000003F800000;
  *(_DWORD *)(v3 + 40) = 1056964608;
  *(_WORD *)(v3 + 44) = 257;
  *(unsigned char *)(v3 + 46) = 0;
  *(_WORD *)(v3 + 48) = 0;
  *(unsigned char *)(v3 + 50) = 1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_DWORD *)(v3 + 104) = 65544;
  *(void *)(v3 + 108) = 0x3EC000003F800000;
  *(_DWORD *)(v3 + 116) = 1056964608;
  *(_WORD *)(v3 + 120) = 257;
  *(unsigned char *)(v3 + 122) = 0;
  *(_WORD *)(v3 + 124) = 1;
  *(void *)uint64_t v3 = &unk_26E6EF900;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveTubeComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EF9F8;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveTubeComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82D28, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82D28))
  {
    qword_26AF82D20 = re::ecs2::introspect_PrimitiveTubeComponent(0);
    __cxa_guard_release(&qword_26AF82D28);
  }
  return qword_26AF82D20;
}

__n128 re::ecs2::ComponentType<re::ecs2::PrimitiveTubeComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveTubeComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveTubeComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EF890;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::PrimitiveTubeComponent::~PrimitiveTubeComponent(re::ecs2::PrimitiveTubeComponent *this)
{
  *(void *)this = &unk_26E6EF9A0;
  uint64_t v2 = (re::ecs2::PrimitiveTubeComponent *)((char *)this + 56);
  re::AssetHandle::~AssetHandle((re::ecs2::PrimitiveTubeComponent *)((char *)this + 80));
  re::AssetHandle::~AssetHandle(v2);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  re::AssetHandle *v2;
  uint64_t vars8;

  *(void *)this = &unk_26E6EF9A0;
  uint64_t v2 = (re::ecs2::PrimitiveTubeComponent *)((char *)this + 56);
  re::AssetHandle::~AssetHandle((re::ecs2::PrimitiveTubeComponent *)((char *)this + 80));
  re::AssetHandle::~AssetHandle(v2);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PrimitiveTubeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::PrimitiveTubeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PrimitiveTubeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::PrimitiveTubeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::PrimitiveTubeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void *re::ecs2::PrimitiveComponentBase<re::ecs2::PrimitiveTubeComponent,re::GeomBuildTubeOptions,(re::ecs2::ComponentTypeBase::Flags)2>::~PrimitiveComponentBase(void *a1)
{
  *a1 = &unk_26E6EF9A0;
  uint64_t v2 = (re::AssetHandle *)(a1 + 7);
  re::AssetHandle::~AssetHandle((re::AssetHandle *)(a1 + 10));
  re::AssetHandle::~AssetHandle(v2);
  *a1 = &unk_26E6DECE0;
  objc_destructInstance(a1 + 1);
  return a1;
}

void re::ecs2::PrimitiveComponentBase<re::ecs2::PrimitiveTubeComponent,re::GeomBuildTubeOptions,(re::ecs2::ComponentTypeBase::Flags)2>::~PrimitiveComponentBase(void *a1)
{
  *a1 = &unk_26E6EF9A0;
  uint64_t v2 = (re::AssetHandle *)(a1 + 7);
  re::AssetHandle::~AssetHandle((re::AssetHandle *)(a1 + 10));
  re::AssetHandle::~AssetHandle(v2);
  *a1 = &unk_26E6DECE0;
  objc_destructInstance(a1 + 1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EF9F8;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>::registerCallbacks(_DWORD *a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveTubeComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>,re::Slice<re::ecs2::PrimitiveTubeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>*,re::Slice<re::ecs2::PrimitiveTubeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>,re::Slice<re::ecs2::PrimitiveTubeComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveTubeComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveTubeComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>,re::Slice<re::ecs2::PrimitiveTubeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>*,re::Slice<re::ecs2::PrimitiveTubeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>,re::Slice<re::ecs2::PrimitiveTubeComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveTubeComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveTubeComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>,re::Slice<re::ecs2::PrimitiveTubeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>*,re::Slice<re::ecs2::PrimitiveTubeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>,re::Slice<re::ecs2::PrimitiveTubeComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveTubeComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveTubeComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>,re::Slice<re::ecs2::PrimitiveTubeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>*,re::Slice<re::ecs2::PrimitiveTubeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>,re::Slice<re::ecs2::PrimitiveTubeComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveTubeComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveTubeComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>,re::Slice<re::ecs2::PrimitiveTubeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>*,re::Slice<re::ecs2::PrimitiveTubeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>,re::Slice<re::ecs2::PrimitiveTubeComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveTubeComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveTubeComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>,re::Slice<re::ecs2::PrimitiveTubeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>*,re::Slice<re::ecs2::PrimitiveTubeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>,re::Slice<re::ecs2::PrimitiveTubeComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveTubeComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveTubeComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>,re::Slice<re::ecs2::PrimitiveTubeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>*,re::Slice<re::ecs2::PrimitiveTubeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>,re::Slice<re::ecs2::PrimitiveTubeComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveTubeComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveTubeComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>,re::Slice<re::ecs2::PrimitiveTubeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>*,re::Slice<re::ecs2::PrimitiveTubeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>,re::Slice<re::ecs2::PrimitiveTubeComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveTubeComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveTubeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveTubeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveTubeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveTubeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>,re::Slice<re::ecs2::PrimitiveTubeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>*,re::Slice<re::ecs2::PrimitiveTubeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>,re::Slice<re::ecs2::PrimitiveTubeComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveTubeComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::RayCastComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::RayCastComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::RayCastComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::RayCastComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::RayCastComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::RayCastComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::RayCastComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType+ 7), 128, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6EFB10;
  double result = 0.0;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_DWORD *)(v3 + 64) = 0;
  *(_DWORD *)(v3 + 80) = 2;
  *(_DWORD *)(v3 + 96) = 0;
  *(void *)(v3 + 100) = -1;
  *(void *)(v3 + 116) = 0;
  *(void *)(v3 + 108) = 0;
  *(_DWORD *)(v3 + 124) = 0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RayCastComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EFB98;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RayCastComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82D38, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82D38))
  {
    qword_26AF82D30 = re::ecs2::introspect_RayCastComponent(0);
    __cxa_guard_release(&qword_26AF82D38);
  }
  return qword_26AF82D30;
}

__n128 re::ecs2::ComponentType<re::ecs2::RayCastComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RayCastComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::RayCastComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EFAA0;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::RayCastComponent::~RayCastComponent(re::ecs2::RayCastComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::RayCastComponent,(re::ecs2::ComponentTypeBase::Flags)1>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::RayCastComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::RayCastComponent,(re::ecs2::ComponentTypeBase::Flags)1>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::RayCastComponent,(re::ecs2::ComponentTypeBase::Flags)1>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::RayCastComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EFB98;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RayCastComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>,re::Slice<re::ecs2::RayCastComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>*,re::Slice<re::ecs2::RayCastComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>,re::Slice<re::ecs2::RayCastComponent*>>::Subscription const&,re::Slice<re::ecs2::RayCastComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RayCastComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>,re::Slice<re::ecs2::RayCastComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>*,re::Slice<re::ecs2::RayCastComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>,re::Slice<re::ecs2::RayCastComponent*>>::Subscription const&,re::Slice<re::ecs2::RayCastComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RayCastComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>,re::Slice<re::ecs2::RayCastComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>*,re::Slice<re::ecs2::RayCastComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>,re::Slice<re::ecs2::RayCastComponent*>>::Subscription const&,re::Slice<re::ecs2::RayCastComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RayCastComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>,re::Slice<re::ecs2::RayCastComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>*,re::Slice<re::ecs2::RayCastComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>,re::Slice<re::ecs2::RayCastComponent*>>::Subscription const&,re::Slice<re::ecs2::RayCastComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RayCastComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>,re::Slice<re::ecs2::RayCastComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>*,re::Slice<re::ecs2::RayCastComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>,re::Slice<re::ecs2::RayCastComponent*>>::Subscription const&,re::Slice<re::ecs2::RayCastComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RayCastComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>,re::Slice<re::ecs2::RayCastComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>*,re::Slice<re::ecs2::RayCastComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>,re::Slice<re::ecs2::RayCastComponent*>>::Subscription const&,re::Slice<re::ecs2::RayCastComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RayCastComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>,re::Slice<re::ecs2::RayCastComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>*,re::Slice<re::ecs2::RayCastComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>,re::Slice<re::ecs2::RayCastComponent*>>::Subscription const&,re::Slice<re::ecs2::RayCastComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RayCastComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>,re::Slice<re::ecs2::RayCastComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>*,re::Slice<re::ecs2::RayCastComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>,re::Slice<re::ecs2::RayCastComponent*>>::Subscription const&,re::Slice<re::ecs2::RayCastComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RayCastComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RayCastComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RayCastComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RayCastComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>,re::Slice<re::ecs2::RayCastComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>*,re::Slice<re::ecs2::RayCastComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>,re::Slice<re::ecs2::RayCastComponent*>>::Subscription const&,re::Slice<re::ecs2::RayCastComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::RayCastResultComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::RayCastResultComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::RayCastResultComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::RayCastResultComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::RayCastResultComponent>::doMakeComponent(uint64_t *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::RayCastResultComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::RayCastResultComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType+ 7), 96, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6EFCB0;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  objc_initWeak((id *)(v2 + 64), 0);
  *(void *)(v2 + 72) = 0;
  *(void *)(v2 + 80) = 0;
  re::ecs2::EntityHandle::reset((re::ecs2::EntityHandle *)(v2 + 64));
  *a1 = v2;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RayCastResultComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EFD38;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RayCastResultComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82D48, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82D48))
  {
    qword_26AF82D40 = re::ecs2::introspect_RayCastResultComponent(0);
    __cxa_guard_release(&qword_26AF82D48);
  }
  return qword_26AF82D40;
}

__n128 re::ecs2::ComponentType<re::ecs2::RayCastResultComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RayCastResultComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::RayCastResultComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EFC40;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::RayCastResultComponent::~RayCastResultComponent(re::ecs2::RayCastResultComponent *this)
{
  *(void *)this = &unk_26E6EFCB0;
  uint64_t v2 = (id *)((char *)this + 64);
  re::ecs2::EntityHandle::reset((re::ecs2::RayCastResultComponent *)((char *)this + 64));
  objc_destroyWeak(v2);
  *((void *)this + 8) = 0;
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  id *v2;
  uint64_t vars8;

  *(void *)this = &unk_26E6EFCB0;
  uint64_t v2 = (id *)((char *)this + 64);
  re::ecs2::EntityHandle::reset((re::ecs2::RayCastResultComponent *)((char *)this + 64));
  objc_destroyWeak(v2);
  *((void *)this + 8) = 0;
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::RayCastResultComponent,(re::ecs2::ComponentTypeBase::Flags)1>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::RayCastResultComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::RayCastResultComponent,(re::ecs2::ComponentTypeBase::Flags)1>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::RayCastResultComponent,(re::ecs2::ComponentTypeBase::Flags)1>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::RayCastResultComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EFD38;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RayCastResultComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>,re::Slice<re::ecs2::RayCastResultComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>*,re::Slice<re::ecs2::RayCastResultComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>,re::Slice<re::ecs2::RayCastResultComponent*>>::Subscription const&,re::Slice<re::ecs2::RayCastResultComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RayCastResultComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>,re::Slice<re::ecs2::RayCastResultComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>*,re::Slice<re::ecs2::RayCastResultComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>,re::Slice<re::ecs2::RayCastResultComponent*>>::Subscription const&,re::Slice<re::ecs2::RayCastResultComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RayCastResultComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>,re::Slice<re::ecs2::RayCastResultComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>*,re::Slice<re::ecs2::RayCastResultComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>,re::Slice<re::ecs2::RayCastResultComponent*>>::Subscription const&,re::Slice<re::ecs2::RayCastResultComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RayCastResultComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>,re::Slice<re::ecs2::RayCastResultComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>*,re::Slice<re::ecs2::RayCastResultComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>,re::Slice<re::ecs2::RayCastResultComponent*>>::Subscription const&,re::Slice<re::ecs2::RayCastResultComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RayCastResultComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>,re::Slice<re::ecs2::RayCastResultComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>*,re::Slice<re::ecs2::RayCastResultComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>,re::Slice<re::ecs2::RayCastResultComponent*>>::Subscription const&,re::Slice<re::ecs2::RayCastResultComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RayCastResultComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>,re::Slice<re::ecs2::RayCastResultComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>*,re::Slice<re::ecs2::RayCastResultComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>,re::Slice<re::ecs2::RayCastResultComponent*>>::Subscription const&,re::Slice<re::ecs2::RayCastResultComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RayCastResultComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>,re::Slice<re::ecs2::RayCastResultComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>*,re::Slice<re::ecs2::RayCastResultComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>,re::Slice<re::ecs2::RayCastResultComponent*>>::Subscription const&,re::Slice<re::ecs2::RayCastResultComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RayCastResultComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>,re::Slice<re::ecs2::RayCastResultComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>*,re::Slice<re::ecs2::RayCastResultComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>,re::Slice<re::ecs2::RayCastResultComponent*>>::Subscription const&,re::Slice<re::ecs2::RayCastResultComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RayCastResultComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RayCastResultComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RayCastResultComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RayCastResultComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>,re::Slice<re::ecs2::RayCastResultComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>*,re::Slice<re::ecs2::RayCastResultComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>,re::Slice<re::ecs2::RayCastResultComponent*>>::Subscription const&,re::Slice<re::ecs2::RayCastResultComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::RayTracedShadowReceiverComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::RayTracedShadowReceiverComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::RayTracedShadowReceiverComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::RayTracedShadowReceiverComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::RayTracedShadowReceiverComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::RayTracedShadowReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::RayTracedShadowReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 32, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(_WORD *)(v3 + 24) = 256;
  *(void *)uint64_t v3 = &unk_26E6EFE50;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RayTracedShadowReceiverComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EFED8;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RayTracedShadowReceiverComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82D58, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82D58))
  {
    qword_26AF82D50 = re::ecs2::introspect_RayTracedShadowReceiverComponent(0);
    __cxa_guard_release(&qword_26AF82D58);
  }
  return qword_26AF82D50;
}

__n128 re::ecs2::ComponentType<re::ecs2::RayTracedShadowReceiverComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RayTracedShadowReceiverComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::RayTracedShadowReceiverComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EFDE0;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::RayTracedShadowReceiverComponent::~RayTracedShadowReceiverComponent(re::ecs2::RayTracedShadowReceiverComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::RayTracedShadowReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::RayTracedShadowReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::RayTracedShadowReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::RayTracedShadowReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::RayTracedShadowReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EFED8;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RayTracedShadowReceiverComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>*,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RayTracedShadowReceiverComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>*,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RayTracedShadowReceiverComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>*,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RayTracedShadowReceiverComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>*,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RayTracedShadowReceiverComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>*,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RayTracedShadowReceiverComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>*,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RayTracedShadowReceiverComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>*,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RayTracedShadowReceiverComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>*,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RayTracedShadowReceiverComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RayTracedShadowReceiverComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RayTracedShadowReceiverComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RayTracedShadowReceiverComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>*,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::RenderOptionsComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::RenderOptionsComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::RenderOptionsComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::RenderOptionsComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::RenderOptionsComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::RenderOptionsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::RenderOptionsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 56, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(void *)(v2 + 48) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6EFFF0;
  *(_WORD *)(v3 + 25) = 0;
  *(unsigned char *)(v3 + 28) = 0;
  *(unsigned char *)(v3 + 30) = 0;
  *(unsigned char *)(v3 + 38) = 0;
  *(unsigned char *)(v3 + 40) = 0;
  *(unsigned char *)(v3 + 42) = 0;
  *(unsigned char *)(v3 + 44) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(unsigned char *)(v3 + 36) = 0;
  *(_DWORD *)(v3 + 48) = 0;
  *(unsigned char *)(v3 + 52) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RenderOptionsComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F0078;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RenderOptionsComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82D68, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82D68))
  {
    qword_26AF82D60 = re::ecs2::introspect_RenderOptionsComponent(0);
    __cxa_guard_release(&qword_26AF82D68);
  }
  return qword_26AF82D60;
}

__n128 re::ecs2::ComponentType<re::ecs2::RenderOptionsComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RenderOptionsComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::RenderOptionsComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EFF80;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::RenderOptionsComponent::~RenderOptionsComponent(re::ecs2::RenderOptionsComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::RenderOptionsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::RenderOptionsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::RenderOptionsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return 11;
}

void *re::ecs2::ComponentImpl<re::ecs2::RenderOptionsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::RenderOptionsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F0078;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RenderOptionsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>,re::Slice<re::ecs2::RenderOptionsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>*,re::Slice<re::ecs2::RenderOptionsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>,re::Slice<re::ecs2::RenderOptionsComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderOptionsComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RenderOptionsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>,re::Slice<re::ecs2::RenderOptionsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>*,re::Slice<re::ecs2::RenderOptionsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>,re::Slice<re::ecs2::RenderOptionsComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderOptionsComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RenderOptionsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>,re::Slice<re::ecs2::RenderOptionsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>*,re::Slice<re::ecs2::RenderOptionsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>,re::Slice<re::ecs2::RenderOptionsComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderOptionsComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RenderOptionsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>,re::Slice<re::ecs2::RenderOptionsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>*,re::Slice<re::ecs2::RenderOptionsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>,re::Slice<re::ecs2::RenderOptionsComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderOptionsComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RenderOptionsComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>,re::Slice<re::ecs2::RenderOptionsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>*,re::Slice<re::ecs2::RenderOptionsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>,re::Slice<re::ecs2::RenderOptionsComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderOptionsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RenderOptionsComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>,re::Slice<re::ecs2::RenderOptionsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>*,re::Slice<re::ecs2::RenderOptionsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>,re::Slice<re::ecs2::RenderOptionsComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderOptionsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RenderOptionsComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>,re::Slice<re::ecs2::RenderOptionsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>*,re::Slice<re::ecs2::RenderOptionsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>,re::Slice<re::ecs2::RenderOptionsComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderOptionsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RenderOptionsComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>,re::Slice<re::ecs2::RenderOptionsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>*,re::Slice<re::ecs2::RenderOptionsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>,re::Slice<re::ecs2::RenderOptionsComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderOptionsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RenderOptionsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RenderOptionsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RenderOptionsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RenderOptionsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>,re::Slice<re::ecs2::RenderOptionsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>*,re::Slice<re::ecs2::RenderOptionsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>,re::Slice<re::ecs2::RenderOptionsComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderOptionsComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::RigidBodyComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::RigidBodyComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::RigidBodyComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::RigidBodyComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

id re::ecs2::ComponentType<re::ecs2::RigidBodyComponent>::doMakeComponent@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::RigidBodyComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::RigidBodyComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 400, 0);
  return re::make::shared::inplace<re::ecs2::RigidBodyComponent>(v2, a1);
}

uint64_t re::ecs2::ComponentType<re::ecs2::RigidBodyComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F0190;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RigidBodyComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82D78, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82D78))
  {
    qword_26AF82D70 = re::ecs2::introspect_RigidBodyComponent(0);
    __cxa_guard_release(&qword_26AF82D78);
  }
  return qword_26AF82D70;
}

__n128 re::ecs2::ComponentType<re::ecs2::RigidBodyComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RigidBodyComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::RigidBodyComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F0120;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F0190;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RigidBodyComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>,re::Slice<re::ecs2::RigidBodyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>*,re::Slice<re::ecs2::RigidBodyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>,re::Slice<re::ecs2::RigidBodyComponent*>>::Subscription const&,re::Slice<re::ecs2::RigidBodyComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RigidBodyComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>,re::Slice<re::ecs2::RigidBodyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>*,re::Slice<re::ecs2::RigidBodyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>,re::Slice<re::ecs2::RigidBodyComponent*>>::Subscription const&,re::Slice<re::ecs2::RigidBodyComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RigidBodyComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>,re::Slice<re::ecs2::RigidBodyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>*,re::Slice<re::ecs2::RigidBodyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>,re::Slice<re::ecs2::RigidBodyComponent*>>::Subscription const&,re::Slice<re::ecs2::RigidBodyComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RigidBodyComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>,re::Slice<re::ecs2::RigidBodyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>*,re::Slice<re::ecs2::RigidBodyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>,re::Slice<re::ecs2::RigidBodyComponent*>>::Subscription const&,re::Slice<re::ecs2::RigidBodyComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RigidBodyComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>,re::Slice<re::ecs2::RigidBodyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>*,re::Slice<re::ecs2::RigidBodyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>,re::Slice<re::ecs2::RigidBodyComponent*>>::Subscription const&,re::Slice<re::ecs2::RigidBodyComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RigidBodyComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>,re::Slice<re::ecs2::RigidBodyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>*,re::Slice<re::ecs2::RigidBodyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>,re::Slice<re::ecs2::RigidBodyComponent*>>::Subscription const&,re::Slice<re::ecs2::RigidBodyComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RigidBodyComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>,re::Slice<re::ecs2::RigidBodyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>*,re::Slice<re::ecs2::RigidBodyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>,re::Slice<re::ecs2::RigidBodyComponent*>>::Subscription const&,re::Slice<re::ecs2::RigidBodyComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RigidBodyComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>,re::Slice<re::ecs2::RigidBodyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>*,re::Slice<re::ecs2::RigidBodyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>,re::Slice<re::ecs2::RigidBodyComponent*>>::Subscription const&,re::Slice<re::ecs2::RigidBodyComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RigidBodyComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RigidBodyComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RigidBodyComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RigidBodyComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>,re::Slice<re::ecs2::RigidBodyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>*,re::Slice<re::ecs2::RigidBodyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>,re::Slice<re::ecs2::RigidBodyComponent*>>::Subscription const&,re::Slice<re::ecs2::RigidBodyComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PhysicsDebugComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsDebugComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PhysicsDebugComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::PhysicsDebugComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::PhysicsDebugComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::PhysicsDebugComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::PhysicsDebugComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 40, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(void *)(v2 + 32) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F02A8;
  *(void *)&double result = 0x300000001;
  *(void *)(v3 + 28) = 0x300000001;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsDebugComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F0330;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsDebugComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82D88, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82D88))
  {
    qword_26AF82D80 = re::ecs2::introspect_PhysicsDebugComponent(0);
    __cxa_guard_release(&qword_26AF82D88);
  }
  return qword_26AF82D80;
}

__n128 re::ecs2::ComponentType<re::ecs2::PhysicsDebugComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsDebugComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsDebugComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F0238;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::PhysicsDebugComponent::~PhysicsDebugComponent(re::ecs2::PhysicsDebugComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PhysicsDebugComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::PhysicsDebugComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PhysicsDebugComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::PhysicsDebugComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::PhysicsDebugComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F0330;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PhysicsDebugComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>,re::Slice<re::ecs2::PhysicsDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>*,re::Slice<re::ecs2::PhysicsDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>,re::Slice<re::ecs2::PhysicsDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsDebugComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PhysicsDebugComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>,re::Slice<re::ecs2::PhysicsDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>*,re::Slice<re::ecs2::PhysicsDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>,re::Slice<re::ecs2::PhysicsDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsDebugComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PhysicsDebugComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>,re::Slice<re::ecs2::PhysicsDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>*,re::Slice<re::ecs2::PhysicsDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>,re::Slice<re::ecs2::PhysicsDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsDebugComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PhysicsDebugComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>,re::Slice<re::ecs2::PhysicsDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>*,re::Slice<re::ecs2::PhysicsDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>,re::Slice<re::ecs2::PhysicsDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsDebugComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PhysicsDebugComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>,re::Slice<re::ecs2::PhysicsDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>*,re::Slice<re::ecs2::PhysicsDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>,re::Slice<re::ecs2::PhysicsDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsDebugComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PhysicsDebugComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>,re::Slice<re::ecs2::PhysicsDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>*,re::Slice<re::ecs2::PhysicsDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>,re::Slice<re::ecs2::PhysicsDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsDebugComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PhysicsDebugComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>,re::Slice<re::ecs2::PhysicsDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>*,re::Slice<re::ecs2::PhysicsDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>,re::Slice<re::ecs2::PhysicsDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsDebugComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PhysicsDebugComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>,re::Slice<re::ecs2::PhysicsDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>*,re::Slice<re::ecs2::PhysicsDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>,re::Slice<re::ecs2::PhysicsDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsDebugComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PhysicsDebugComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PhysicsDebugComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PhysicsDebugComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PhysicsDebugComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>,re::Slice<re::ecs2::PhysicsDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>*,re::Slice<re::ecs2::PhysicsDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>,re::Slice<re::ecs2::PhysicsDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsDebugComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::RigComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::RigComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::RigComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::RigComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

id re::ecs2::ComponentType<re::ecs2::RigComponent>::doMakeComponent@<X0>(ArcSharedObject **a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::RigComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::RigComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 496, 0);
  return re::make::shared::inplace<re::ecs2::RigComponent>(v2, a1);
}

uint64_t re::ecs2::ComponentType<re::ecs2::RigComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F0448;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RigComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82D98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82D98))
  {
    qword_26AF82D90 = re::ecs2::introspect_RigComponent(0);
    __cxa_guard_release(&qword_26AF82D98);
  }
  return qword_26AF82D90;
}

__n128 re::ecs2::ComponentType<re::ecs2::RigComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RigComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::RigComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F03D8;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F0448;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RigComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>,re::Slice<re::ecs2::RigComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>*,re::Slice<re::ecs2::RigComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>,re::Slice<re::ecs2::RigComponent*>>::Subscription const&,re::Slice<re::ecs2::RigComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RigComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>,re::Slice<re::ecs2::RigComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>*,re::Slice<re::ecs2::RigComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>,re::Slice<re::ecs2::RigComponent*>>::Subscription const&,re::Slice<re::ecs2::RigComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RigComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>,re::Slice<re::ecs2::RigComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>*,re::Slice<re::ecs2::RigComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>,re::Slice<re::ecs2::RigComponent*>>::Subscription const&,re::Slice<re::ecs2::RigComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RigComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>,re::Slice<re::ecs2::RigComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>*,re::Slice<re::ecs2::RigComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>,re::Slice<re::ecs2::RigComponent*>>::Subscription const&,re::Slice<re::ecs2::RigComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RigComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>,re::Slice<re::ecs2::RigComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>*,re::Slice<re::ecs2::RigComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>,re::Slice<re::ecs2::RigComponent*>>::Subscription const&,re::Slice<re::ecs2::RigComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RigComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>,re::Slice<re::ecs2::RigComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>*,re::Slice<re::ecs2::RigComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>,re::Slice<re::ecs2::RigComponent*>>::Subscription const&,re::Slice<re::ecs2::RigComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RigComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>,re::Slice<re::ecs2::RigComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>*,re::Slice<re::ecs2::RigComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>,re::Slice<re::ecs2::RigComponent*>>::Subscription const&,re::Slice<re::ecs2::RigComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RigComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>,re::Slice<re::ecs2::RigComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>*,re::Slice<re::ecs2::RigComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>,re::Slice<re::ecs2::RigComponent*>>::Subscription const&,re::Slice<re::ecs2::RigComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RigComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RigComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RigComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RigComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>,re::Slice<re::ecs2::RigComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>*,re::Slice<re::ecs2::RigComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>,re::Slice<re::ecs2::RigComponent*>>::Subscription const&,re::Slice<re::ecs2::RigComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::IKParametersComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::IKParametersComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::IKParametersComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::IKParametersComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::IKParametersComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::IKParametersComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::IKParametersComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 104, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(void *)(v2 + 96) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F0560;
  double result = 0.0;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 80) = 0u;
  *(unsigned char *)(v3 + 96) = 0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::IKParametersComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F05E8;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::IKParametersComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82DA8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82DA8))
  {
    qword_26AF82DA0 = re::ecs2::introspect_IKParametersComponent(0);
    __cxa_guard_release(&qword_26AF82DA8);
  }
  return qword_26AF82DA0;
}

__n128 re::ecs2::ComponentType<re::ecs2::IKParametersComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::IKParametersComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::IKParametersComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F04F0;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::IKParametersComponent::~IKParametersComponent(re::ecs2::IKParametersComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7);
  re::AssetHandle::~AssetHandle((re::ecs2::IKParametersComponent *)((char *)this + 32));
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::IKParametersComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::IKParametersComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::IKParametersComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::IKParametersComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::IKParametersComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F05E8;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::IKParametersComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>,re::Slice<re::ecs2::IKParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>*,re::Slice<re::ecs2::IKParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>,re::Slice<re::ecs2::IKParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::IKParametersComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::IKParametersComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>,re::Slice<re::ecs2::IKParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>*,re::Slice<re::ecs2::IKParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>,re::Slice<re::ecs2::IKParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::IKParametersComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::IKParametersComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>,re::Slice<re::ecs2::IKParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>*,re::Slice<re::ecs2::IKParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>,re::Slice<re::ecs2::IKParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::IKParametersComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::IKParametersComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>,re::Slice<re::ecs2::IKParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>*,re::Slice<re::ecs2::IKParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>,re::Slice<re::ecs2::IKParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::IKParametersComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::IKParametersComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>,re::Slice<re::ecs2::IKParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>*,re::Slice<re::ecs2::IKParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>,re::Slice<re::ecs2::IKParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::IKParametersComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::IKParametersComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>,re::Slice<re::ecs2::IKParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>*,re::Slice<re::ecs2::IKParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>,re::Slice<re::ecs2::IKParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::IKParametersComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::IKParametersComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>,re::Slice<re::ecs2::IKParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>*,re::Slice<re::ecs2::IKParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>,re::Slice<re::ecs2::IKParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::IKParametersComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::IKParametersComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>,re::Slice<re::ecs2::IKParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>*,re::Slice<re::ecs2::IKParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>,re::Slice<re::ecs2::IKParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::IKParametersComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::IKParametersComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::IKParametersComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::IKParametersComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::IKParametersComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>,re::Slice<re::ecs2::IKParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>*,re::Slice<re::ecs2::IKParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>,re::Slice<re::ecs2::IKParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::IKParametersComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::InputTargetComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::InputTargetComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::InputTargetComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::InputTargetComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::InputTargetComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::InputTargetComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::InputTargetComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 32, 0);
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(void *)uint64_t v3 = &unk_26E700E00;
  *(void *)&double result = 16843008;
  *(_DWORD *)(v3 + 24) = 16843008;
  *(_WORD *)(v3 + 28) = -256;
  *(unsigned char *)(v3 + 30) = 1;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::InputTargetComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F0700;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::InputTargetComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82DB8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82DB8))
  {
    qword_26AF82DB0 = re::ecs2::introspect_InputTargetComponent(0);
    __cxa_guard_release(&qword_26AF82DB8);
  }
  return qword_26AF82DB0;
}

__n128 re::ecs2::ComponentType<re::ecs2::InputTargetComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::InputTargetComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::InputTargetComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F0690;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F0700;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::InputTargetComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>,re::Slice<re::ecs2::InputTargetComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>*,re::Slice<re::ecs2::InputTargetComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>,re::Slice<re::ecs2::InputTargetComponent*>>::Subscription const&,re::Slice<re::ecs2::InputTargetComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::InputTargetComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>,re::Slice<re::ecs2::InputTargetComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>*,re::Slice<re::ecs2::InputTargetComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>,re::Slice<re::ecs2::InputTargetComponent*>>::Subscription const&,re::Slice<re::ecs2::InputTargetComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::InputTargetComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>,re::Slice<re::ecs2::InputTargetComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>*,re::Slice<re::ecs2::InputTargetComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>,re::Slice<re::ecs2::InputTargetComponent*>>::Subscription const&,re::Slice<re::ecs2::InputTargetComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::InputTargetComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>,re::Slice<re::ecs2::InputTargetComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>*,re::Slice<re::ecs2::InputTargetComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>,re::Slice<re::ecs2::InputTargetComponent*>>::Subscription const&,re::Slice<re::ecs2::InputTargetComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::InputTargetComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>,re::Slice<re::ecs2::InputTargetComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>*,re::Slice<re::ecs2::InputTargetComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>,re::Slice<re::ecs2::InputTargetComponent*>>::Subscription const&,re::Slice<re::ecs2::InputTargetComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::InputTargetComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>,re::Slice<re::ecs2::InputTargetComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>*,re::Slice<re::ecs2::InputTargetComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>,re::Slice<re::ecs2::InputTargetComponent*>>::Subscription const&,re::Slice<re::ecs2::InputTargetComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::InputTargetComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>,re::Slice<re::ecs2::InputTargetComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>*,re::Slice<re::ecs2::InputTargetComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>,re::Slice<re::ecs2::InputTargetComponent*>>::Subscription const&,re::Slice<re::ecs2::InputTargetComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::InputTargetComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>,re::Slice<re::ecs2::InputTargetComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>*,re::Slice<re::ecs2::InputTargetComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>,re::Slice<re::ecs2::InputTargetComponent*>>::Subscription const&,re::Slice<re::ecs2::InputTargetComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::InputTargetComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::InputTargetComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::InputTargetComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::InputTargetComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>,re::Slice<re::ecs2::InputTargetComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>*,re::Slice<re::ecs2::InputTargetComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>,re::Slice<re::ecs2::InputTargetComponent*>>::Subscription const&,re::Slice<re::ecs2::InputTargetComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::SkeletalDebugComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SkeletalDebugComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::SkeletalDebugComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::SkeletalDebugComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void *re::ecs2::ComponentType<re::ecs2::SkeletalDebugComponent>::doMakeComponent@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::SkeletalDebugComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::SkeletalDebugComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 288, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 176) = 0u;
  *(_OWORD *)(v2 + 192) = 0u;
  *(_OWORD *)(v2 + 224) = 0u;
  *(_OWORD *)(v2 + 240) = 0u;
  *(_OWORD *)(v2 + 256) = 0u;
  *(_OWORD *)(v2 + 272) = 0u;
  *(_OWORD *)(v2 + 208) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(void *)uint64_t v3 = &unk_26E6F0818;
  *(_DWORD *)(v3 + 24) = 0;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  long long v4 = (_anonymous_namespace_ *)re::DynamicString::setCapacity((void *)(v2 + 32), 0);
  *(void *)(v2 + 64) = 0x3F8000003F800000;
  *(void *)(v2 + 72) = 0x3F8000003F800000;
  *(_DWORD *)(v2 + 80) = 1084227584;
  *(_OWORD *)(v2 + 96) = xmmword_234386CD0;
  *(void *)(v2 + 112) = 0x3CA3D70A3DCCCCCDLL;
  *(_WORD *)(v2 + 120) = 0;
  *(_OWORD *)(v2 + 128) = xmmword_23435FD80;
  *(_OWORD *)(v2 + 144) = xmmword_234376D50;
  *(_OWORD *)(v2 + 160) = xmmword_2343854A0;
  *(void *)(v2 + 176) = -1;
  *(_OWORD *)(v2 + 184) = 0u;
  *(_OWORD *)(v2 + 200) = 0u;
  *(_OWORD *)(v2 + 216) = 0u;
  *(void *)(v2 + 232) = 0;
  double result = re::DynamicString::setCapacity((void *)(v2 + 208), 0);
  *(void *)(v2 + 272) = 0;
  *(void *)(v2 + 248) = 0;
  *(void *)(v2 + 256) = 0;
  *(void *)(v2 + 240) = 0;
  *(_DWORD *)(v2 + 264) = 0;
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SkeletalDebugComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F08A0;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SkeletalDebugComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82DC8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82DC8))
  {
    qword_26AF82DC0 = re::ecs2::introspect_SkeletalDebugComponent(0);
    __cxa_guard_release(&qword_26AF82DC8);
  }
  return qword_26AF82DC0;
}

__n128 re::ecs2::ComponentType<re::ecs2::SkeletalDebugComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SkeletalDebugComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SkeletalDebugComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F07A8;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SkeletalDebugComponent::~SkeletalDebugComponent(re::ecs2::SkeletalDebugComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240);
  re::DynamicString::deinit((re::ecs2::SkeletalDebugComponent *)((char *)this + 208));
  re::AssetHandle::~AssetHandle((re::ecs2::SkeletalDebugComponent *)((char *)this + 184));
  re::DynamicString::deinit((re::ecs2::SkeletalDebugComponent *)((char *)this + 32));
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SkeletalDebugComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::SkeletalDebugComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SkeletalDebugComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::SkeletalDebugComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::SkeletalDebugComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F08A0;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SkeletalDebugComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>,re::Slice<re::ecs2::SkeletalDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>*,re::Slice<re::ecs2::SkeletalDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>,re::Slice<re::ecs2::SkeletalDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalDebugComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SkeletalDebugComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>,re::Slice<re::ecs2::SkeletalDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>*,re::Slice<re::ecs2::SkeletalDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>,re::Slice<re::ecs2::SkeletalDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalDebugComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SkeletalDebugComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>,re::Slice<re::ecs2::SkeletalDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>*,re::Slice<re::ecs2::SkeletalDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>,re::Slice<re::ecs2::SkeletalDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalDebugComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SkeletalDebugComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>,re::Slice<re::ecs2::SkeletalDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>*,re::Slice<re::ecs2::SkeletalDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>,re::Slice<re::ecs2::SkeletalDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalDebugComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SkeletalDebugComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>,re::Slice<re::ecs2::SkeletalDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>*,re::Slice<re::ecs2::SkeletalDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>,re::Slice<re::ecs2::SkeletalDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalDebugComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SkeletalDebugComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>,re::Slice<re::ecs2::SkeletalDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>*,re::Slice<re::ecs2::SkeletalDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>,re::Slice<re::ecs2::SkeletalDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalDebugComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SkeletalDebugComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>,re::Slice<re::ecs2::SkeletalDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>*,re::Slice<re::ecs2::SkeletalDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>,re::Slice<re::ecs2::SkeletalDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalDebugComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SkeletalDebugComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>,re::Slice<re::ecs2::SkeletalDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>*,re::Slice<re::ecs2::SkeletalDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>,re::Slice<re::ecs2::SkeletalDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalDebugComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SkeletalDebugComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SkeletalDebugComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SkeletalDebugComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SkeletalDebugComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>,re::Slice<re::ecs2::SkeletalDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>*,re::Slice<re::ecs2::SkeletalDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>,re::Slice<re::ecs2::SkeletalDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalDebugComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::SkeletalPoseBufferComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SkeletalPoseBufferComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::SkeletalPoseBufferComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::SkeletalPoseBufferComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::SkeletalPoseBufferComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (void *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::SkeletalPoseBufferComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                       + 7)
                                                                    + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::SkeletalPoseBufferComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 624, 0);
  bzero(v2, 0x270uLL);
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  v2[2] = 0;
  *((unsigned char *)v2 + 24) = 0;
  void *v2 = &unk_26E6F09B8;
  inited = (re *)objc_initWeak((id *)v2 + 4, 0);
  v2[5] = 0;
  v2[9] = re::globalAllocators(inited)[2];
  *(_OWORD *)((char *)v2 + 108) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_DWORD *)v2 + 40) = 0;
  *((_OWORD *)v2 + 8) = 0u;
  *((_OWORD *)v2 + 9) = 0u;
  v2[21] = 0;
  v2[22] = 0xFFFFFFFFFFFFFFFLL;
  v2[23] = 0;
  v2[24] = 0;
  memset_pattern16(v2 + 25, &unk_234386D00, 0x40uLL);
  for (uint64_t i = 0; i != 40; i += 5)
  {
    uint64_t v5 = &v2[i];
    v5[37] = 0;
    v5[34] = 0;
    v5[35] = 0;
    v5[33] = 0;
    *((_DWORD *)v5 + 72) = 0;
  }
  v2[77] = 0;
  v2[74] = 0;
  v2[75] = 0;
  v2[73] = 0;
  *((_DWORD *)v2 + 152) = 0;
  *a1 = v2;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SkeletalPoseBufferComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F0A98;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SkeletalPoseBufferComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82DD8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82DD8))
  {
    qword_26AF82DD0 = re::ecs2::introspect_SkeletalPoseBufferComponent(0);
    __cxa_guard_release(&qword_26AF82DD8);
  }
  return qword_26AF82DD0;
}

__n128 re::ecs2::ComponentType<re::ecs2::SkeletalPoseBufferComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SkeletalPoseBufferComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SkeletalPoseBufferComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F0948;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SkeletalPoseBufferComponent::~SkeletalPoseBufferComponent(id *this)
{
  *this = &unk_26E6F09B8;
  re::DynamicArray<re::ecs2::SkeletalPoseBufferComponent::MeshBoundsEstimatorForJointRange>::deinit((uint64_t)(this + 73));
  for (uint64_t i = 68; i != 28; i -= 5)
    re::DynamicArray<unsigned long>::deinit((uint64_t)&this[i]);
  re::DynamicArray<re::ecs2::SkinnedMeshJointRange>::deinit((uint64_t)(this + 17));
  re::DynamicArray<unsigned long>::deinit((uint64_t)(this + 12));
  re::FramePersistentPtr<re::ecs2::SkeletalPoseBufferComponent::SkeletalPoseBufferInputs,re::FrameManager>::~FramePersistentPtr(this + 4);
  *this = &unk_26E6DECE0;
  objc_destructInstance(this + 1);
}

{
  uint64_t i;
  uint64_t vars8;

  *this = &unk_26E6F09B8;
  re::DynamicArray<re::ecs2::SkeletalPoseBufferComponent::MeshBoundsEstimatorForJointRange>::deinit((uint64_t)(this + 73));
  for (uint64_t i = 68; i != 28; i -= 5)
    re::DynamicArray<unsigned long>::deinit((uint64_t)&this[i]);
  re::DynamicArray<re::ecs2::SkinnedMeshJointRange>::deinit((uint64_t)(this + 17));
  re::DynamicArray<unsigned long>::deinit((uint64_t)(this + 12));
  re::FramePersistentPtr<re::ecs2::SkeletalPoseBufferComponent::SkeletalPoseBufferInputs,re::FrameManager>::~FramePersistentPtr(this + 4);
  *this = &unk_26E6DECE0;
  objc_destructInstance(this + 1);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SkeletalPoseBufferComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::SkeletalPoseBufferComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SkeletalPoseBufferComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::SkeletalPoseBufferComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::SkeletalPoseBufferComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

uint64_t re::DynamicArray<re::ecs2::SkeletalPoseBufferComponent::MeshBoundsEstimatorForJointRange>::deinit(uint64_t a1)
{
  uint64_t result = *(void *)a1;
  if (result)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    if (v3)
    {
      uint64_t v4 = *(void *)(a1 + 16);
      if (v4)
      {
        uint64_t v5 = v4 << 7;
        uint64_t v6 = (uint64_t *)(v3 + 104);
        do
        {
          re::FixedArray<CoreIKTransform>::deinit(v6);
          re::FixedArray<CoreIKTransform>::deinit(v6 - 4);
          re::FixedArray<CoreIKTransform>::deinit(v6 - 7);
          re::DynamicArray<unsigned long>::deinit((uint64_t)(v6 - 12));
          v6 += 16;
          v5 -= 128;
        }
        while (v5);
        uint64_t result = *(void *)a1;
        uint64_t v3 = *(void *)(a1 + 32);
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 40))(result, v3);
    }
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = 0;
    ++*(_DWORD *)(a1 + 24);
  }
  return result;
}

uint64_t re::DynamicArray<re::ecs2::SkinnedMeshJointRange>::deinit(uint64_t a1)
{
  uint64_t result = *(void *)a1;
  if (result)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    if (v3)
    {
      uint64_t v4 = *(void *)(a1 + 16);
      if (v4)
      {
        uint64_t v5 = 56 * v4;
        uint64_t v6 = v3 + 16;
        do
        {
          re::DynamicArray<unsigned long>::deinit(v6);
          v6 += 56;
          v5 -= 56;
        }
        while (v5);
        uint64_t result = *(void *)a1;
        uint64_t v3 = *(void *)(a1 + 32);
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 40))(result, v3);
    }
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = 0;
    ++*(_DWORD *)(a1 + 24);
  }
  return result;
}

id *re::FramePersistentPtr<re::ecs2::SkeletalPoseBufferComponent::SkeletalPoseBufferInputs,re::FrameManager>::~FramePersistentPtr(id *a1)
{
  v5[5] = *MEMORY[0x263EF8340];
  inited = (re *)objc_initWeak(&location, 0);
  memset(v5, 0, 24);
  v5[3] = re::globalAllocators(inited)[2];
  v5[4] = 0;
  re::FramePersistentPtr<re::ecs2::SkeletalPoseBufferComponent::SkeletalPoseBufferInputs,re::FrameManager>::reset(a1, &location, 0, (uint64_t)v5);
  re::FunctionBase<24ul,void ()(void *)>::destroyCallable((uint64_t)v5);
  objc_destroyWeak(&location);
  id location = 0;
  re::FunctionBase<24ul,void ()(void *)>::destroyCallable((uint64_t)(a1 + 2));
  objc_destroyWeak(a1);
  *a1 = 0;
  return a1;
}

uint64_t re::FramePersistentPtr<re::ecs2::SkeletalPoseBufferComponent::SkeletalPoseBufferInputs,re::FrameManager>::reset(id *location, id *a2, void *a3, uint64_t a4)
{
  v18[5] = *MEMORY[0x263EF8340];
  if (location[1])
  {
    WeakRetained = objc_loadWeakRetained(location);
    if (WeakRetained)
    {
      uint64_t v9 = WeakRetained;

      if (!location[6])
      {
        uint64_t v11 = re::globalAllocators(v10)[2];
        v18[0] = &unk_26E6F0A40;
        v18[3] = v11;
        v18[4] = v18;
        re::FunctionBase<24ul,void ()(void *)>::operator=<24ul>((uint64_t)(location + 2), (uint64_t)v18);
        uint64_t v10 = (re *)re::FunctionBase<24ul,void ()(void *)>::destroyCallable((uint64_t)v18);
      }
      v12 = re::globalAllocators(v10);
      unint64_t v13 = v9[2] & 0xFFFFFFFFFFFFFFFLL | ((unint64_t)v9[1] << 60);
      id v14 = location[1];
      uint64_t v15 = re::PerFrameAllocatorManager::perFrameAllocator(v12[6], v13);
      (*(void (**)(uint64_t, id, id *))(*(void *)v15 + 16))(v15, v14, location + 2);
    }
    else
    {
      id v16 = location[6];
      if (v16)
      {
        v18[0] = location[1];
        (*(void (**)(id, void *))(*(void *)v16 + 16))(v16, v18);
      }
      else
      {
        re::internal::destroyPersistent<re::ecs2::SkeletalPoseBufferComponent::SkeletalPoseBufferInputs>((re *)"reset", 161, (uint64_t)location[1]);
      }
    }
  }
  re::ArcWeakPtr<re::VideoHistogram>::operator=(location, a2);
  location[1] = a3;
  return re::FunctionBase<24ul,void ()(void *)>::operator=<24ul>((uint64_t)(location + 2), a4);
}

re *re::internal::destroyPersistent<re::ecs2::SkeletalPoseBufferComponent::SkeletalPoseBufferInputs>(re *result, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v4 = re::globalAllocators(result)[2];
    re::FixedArray<re::BufferSlice>::deinit((void *)(a3 + 24));
    uint64_t v5 = *(void **)(a3 + 16);
    if (v5)
    {

      *(void *)(a3 + 16) = 0;
    }
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 40);
    return (re *)v6(v4, a3);
  }
  return result;
}

void re::internal::Callable<re::FramePersistentPtr<re::ecs2::SkeletalPoseBufferComponent::SkeletalPoseBufferInputs,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::SkeletalPoseBufferComponent::SkeletalPoseBufferInputs*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::~Callable()
{
}

re *re::internal::Callable<re::FramePersistentPtr<re::ecs2::SkeletalPoseBufferComponent::SkeletalPoseBufferInputs,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::SkeletalPoseBufferComponent::SkeletalPoseBufferInputs*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::operator()(uint64_t a1, uint64_t *a2)
{
  return re::internal::destroyPersistent<re::ecs2::SkeletalPoseBufferComponent::SkeletalPoseBufferInputs>((re *)"operator()", 149, *a2);
}

void *re::internal::Callable<re::FramePersistentPtr<re::ecs2::SkeletalPoseBufferComponent::SkeletalPoseBufferInputs,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::SkeletalPoseBufferComponent::SkeletalPoseBufferInputs*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::cloneInto(uint64_t a1, void *a2)
{
  uint64_t result = a2;
  *a2 = &unk_26E6F0A40;
  return result;
}

void *re::internal::Callable<re::FramePersistentPtr<re::ecs2::SkeletalPoseBufferComponent::SkeletalPoseBufferInputs,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::SkeletalPoseBufferComponent::SkeletalPoseBufferInputs*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::moveInto(uint64_t a1, void *a2)
{
  uint64_t result = a2;
  *a2 = &unk_26E6F0A40;
  return result;
}

uint64_t re::internal::Callable<re::FramePersistentPtr<re::ecs2::SkeletalPoseBufferComponent::SkeletalPoseBufferInputs,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::SkeletalPoseBufferComponent::SkeletalPoseBufferInputs*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::size()
{
  return 16;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F0A98;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SkeletalPoseBufferComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>*,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SkeletalPoseBufferComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>*,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SkeletalPoseBufferComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>*,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SkeletalPoseBufferComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>*,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SkeletalPoseBufferComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>*,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SkeletalPoseBufferComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>*,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SkeletalPoseBufferComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>*,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SkeletalPoseBufferComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>*,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SkeletalPoseBufferComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SkeletalPoseBufferComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SkeletalPoseBufferComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SkeletalPoseBufferComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>*,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::SkeletalPoseComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SkeletalPoseComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::SkeletalPoseComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::SkeletalPoseComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::SkeletalPoseComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (void *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::SkeletalPoseComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                       + 7)
                                                                    + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::SkeletalPoseComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 3952, 0);
  return re::make::shared::inplace<re::ecs2::SkeletalPoseComponent>(v2, a1);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SkeletalPoseComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F0BB0;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

char **re::ecs2::ComponentType<re::ecs2::SkeletalPoseComponent>::doGetComponentIntrospectionInfo()
{
  v0 = &off_268773000;
  {
    v0 = &off_268773000;
    if (v2)
    {
      re::introspect<re::ecs2::SkeletalPoseComponent>(void)::info = (_UNKNOWN *)re::ecs2::introspect_SkeletalPoseComponent(0);
      v0 = &off_268773000;
    }
  }
  return v0[273];
}

__n128 re::ecs2::ComponentType<re::ecs2::SkeletalPoseComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SkeletalPoseComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SkeletalPoseComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F0B40;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F0BB0;
  int v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SkeletalPoseComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>,re::Slice<re::ecs2::SkeletalPoseComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>*,re::Slice<re::ecs2::SkeletalPoseComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>,re::Slice<re::ecs2::SkeletalPoseComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalPoseComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SkeletalPoseComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>,re::Slice<re::ecs2::SkeletalPoseComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>*,re::Slice<re::ecs2::SkeletalPoseComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>,re::Slice<re::ecs2::SkeletalPoseComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalPoseComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SkeletalPoseComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>,re::Slice<re::ecs2::SkeletalPoseComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>*,re::Slice<re::ecs2::SkeletalPoseComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>,re::Slice<re::ecs2::SkeletalPoseComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalPoseComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SkeletalPoseComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>,re::Slice<re::ecs2::SkeletalPoseComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>*,re::Slice<re::ecs2::SkeletalPoseComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>,re::Slice<re::ecs2::SkeletalPoseComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalPoseComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SkeletalPoseComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>,re::Slice<re::ecs2::SkeletalPoseComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>*,re::Slice<re::ecs2::SkeletalPoseComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>,re::Slice<re::ecs2::SkeletalPoseComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalPoseComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SkeletalPoseComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>,re::Slice<re::ecs2::SkeletalPoseComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>*,re::Slice<re::ecs2::SkeletalPoseComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>,re::Slice<re::ecs2::SkeletalPoseComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalPoseComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SkeletalPoseComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>,re::Slice<re::ecs2::SkeletalPoseComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>*,re::Slice<re::ecs2::SkeletalPoseComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>,re::Slice<re::ecs2::SkeletalPoseComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalPoseComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SkeletalPoseComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>,re::Slice<re::ecs2::SkeletalPoseComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>*,re::Slice<re::ecs2::SkeletalPoseComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>,re::Slice<re::ecs2::SkeletalPoseComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalPoseComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SkeletalPoseComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SkeletalPoseComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SkeletalPoseComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SkeletalPoseComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>,re::Slice<re::ecs2::SkeletalPoseComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>*,re::Slice<re::ecs2::SkeletalPoseComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>,re::Slice<re::ecs2::SkeletalPoseComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalPoseComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

BOOL ___ZN2re8snapshot8Registry3addINS_4ecs221SkeletalPoseComponentEEEPKNS1_5EntryEv_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a3) {
    return 0;
  }
  re::ecs2::snapshotMapFields<re::snapshot::Writer<re::snapshot::EncoderRaw>>((unsigned int *)a2, a3);
  unint64_t v4 = *(void *)(a2 + 40);
  if (v4) {
    unint64_t v5 = v4 >> 1;
  }
  else {
    unint64_t v5 = v4 >> 1;
  }
  return v5 == 0;
}

BOOL ___ZN2re8snapshot8Registry3addINS_4ecs221SkeletalPoseComponentEEEPKNS1_5EntryEv_block_invoke_2(int a1, re::snapshot::EncoderOPACK *this, uint64_t a3)
{
  if (!a3) {
    return 0;
  }
  re::snapshot::EncoderOPACK::beginObject((unsigned int *)this);
  re::ecs2::snapshotMapFields<re::snapshot::Writer<re::snapshot::EncoderOPACK>>(this, a3);
  re::snapshot::EncoderOPACK::endObject((unsigned int *)this);
  unint64_t v5 = *((void *)this + 5);
  if (v5) {
    unint64_t v6 = v5 >> 1;
  }
  else {
    unint64_t v6 = v5 >> 1;
  }
  return v6 == 0;
}

uint64_t ___ZN2re8snapshot8Registry3addINS_4ecs221SkeletalPoseComponentEEEPKNS1_5EntryEv_block_invoke_3(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a3) {
    return 0;
  }
  re::ecs2::snapshotMapFields<re::snapshot::Reader<re::snapshot::DecoderRaw>>(a2, a3);
  uint64_t v4 = *(void *)(a2 + 16);
  if (v4 != *(void *)(a2 + 24)) {
    re::snapshot::Decoder::error((const char **)a2, "failed to consume input: %zu vs %zu", v4 - *(void *)a2, *(void *)(a2 + 8));
  }
  if (!*(unsigned char *)(a2 + 36)) {
    return 1;
  }
  re::snapshot::Decoder::logInput((re::snapshot::Decoder *)a2);
  return 0;
}

uint64_t ___ZN2re8snapshot8Registry3addINS_4ecs221SkeletalPoseComponentEEEPKNS1_5EntryEv_block_invoke_4(int a1, re::snapshot::DecoderOPACK *this, uint64_t a3)
{
  if (!a3) {
    return 0;
  }
  if (re::snapshot::DecoderOPACK::beginObject(this, 0))
  {
    re::ecs2::snapshotMapFields<re::snapshot::Reader<re::snapshot::DecoderOPACK>>((uint64_t)this, a3);
    re::snapshot::DecoderOPACK::endObject((uint64_t *)this, 0);
  }
  uint64_t v5 = *((void *)this + 2);
  if (v5 != *((void *)this + 3)) {
    re::snapshot::Decoder::error((const char **)this, "failed to consume input: %zu vs %zu", v5 - *(void *)this, *((void *)this + 1));
  }
  if (!*((unsigned char *)this + 36)) {
    return 1;
  }
  re::snapshot::Decoder::logInput(this);
  return 0;
}

double re::ecs2::ComponentType<re::ecs2::SkyboxComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SkyboxComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::SkyboxComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::SkyboxComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::SkyboxComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  int v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::SkyboxComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::SkyboxComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 64, 0);
  *(_OWORD *)int v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F0D48;
  double result = 0.0;
  *(_OWORD *)(v3 + 28) = 0u;
  *(_OWORD *)(v3 + 44) = 0u;
  *(_DWORD *)(v3 + 60) = 0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SkyboxComponent>::doMakeSceneComponentCollection(re *a1)
{
  int v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F0DD0;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  uint64_t v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  unint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SkyboxComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82DF0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82DF0))
  {
    qword_26AF82DE8 = re::ecs2::introspect_SkyboxComponent(0);
    __cxa_guard_release(&qword_26AF82DF0);
  }
  return qword_26AF82DE8;
}

__n128 re::ecs2::ComponentType<re::ecs2::SkyboxComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SkyboxComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SkyboxComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F0CD8;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SkyboxComponent::~SkyboxComponent(re::ecs2::SkyboxComponent *this)
{
  uint64_t v2 = *((void *)this + 7);
  if (v2)
  {

    *((void *)this + re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 0;
  }
  re::AssetHandle::~AssetHandle((re::ecs2::SkyboxComponent *)((char *)this + 32));
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t v2;
  uint64_t vars8;

  uint64_t v2 = *((void *)this + 7);
  if (v2)
  {

    *((void *)this + re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 0;
  }
  re::AssetHandle::~AssetHandle((re::ecs2::SkyboxComponent *)((char *)this + 32));
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SkyboxComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::SkyboxComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SkyboxComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::SkyboxComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::SkyboxComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F0DD0;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      unint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>::registerCallbacks(_DWORD *a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SkyboxComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>,re::Slice<re::ecs2::SkyboxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>*,re::Slice<re::ecs2::SkyboxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>,re::Slice<re::ecs2::SkyboxComponent*>>::Subscription const&,re::Slice<re::ecs2::SkyboxComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SkyboxComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>,re::Slice<re::ecs2::SkyboxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>*,re::Slice<re::ecs2::SkyboxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>,re::Slice<re::ecs2::SkyboxComponent*>>::Subscription const&,re::Slice<re::ecs2::SkyboxComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SkyboxComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>,re::Slice<re::ecs2::SkyboxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>*,re::Slice<re::ecs2::SkyboxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>,re::Slice<re::ecs2::SkyboxComponent*>>::Subscription const&,re::Slice<re::ecs2::SkyboxComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SkyboxComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>,re::Slice<re::ecs2::SkyboxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>*,re::Slice<re::ecs2::SkyboxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>,re::Slice<re::ecs2::SkyboxComponent*>>::Subscription const&,re::Slice<re::ecs2::SkyboxComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SkyboxComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>,re::Slice<re::ecs2::SkyboxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>*,re::Slice<re::ecs2::SkyboxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>,re::Slice<re::ecs2::SkyboxComponent*>>::Subscription const&,re::Slice<re::ecs2::SkyboxComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SkyboxComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>,re::Slice<re::ecs2::SkyboxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>*,re::Slice<re::ecs2::SkyboxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>,re::Slice<re::ecs2::SkyboxComponent*>>::Subscription const&,re::Slice<re::ecs2::SkyboxComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SkyboxComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>,re::Slice<re::ecs2::SkyboxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>*,re::Slice<re::ecs2::SkyboxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>,re::Slice<re::ecs2::SkyboxComponent*>>::Subscription const&,re::Slice<re::ecs2::SkyboxComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SkyboxComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>,re::Slice<re::ecs2::SkyboxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>*,re::Slice<re::ecs2::SkyboxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>,re::Slice<re::ecs2::SkyboxComponent*>>::Subscription const&,re::Slice<re::ecs2::SkyboxComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SkyboxComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SkyboxComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SkyboxComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SkyboxComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>,re::Slice<re::ecs2::SkyboxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>*,re::Slice<re::ecs2::SkyboxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>,re::Slice<re::ecs2::SkyboxComponent*>>::Subscription const&,re::Slice<re::ecs2::SkyboxComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::StateMachineComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::StateMachineComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::StateMachineComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::StateMachineComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::StateMachineComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (_OWORD *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::StateMachineComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                       + 7)
                                                                    + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::StateMachineComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 480, 0);
  _OWORD *v2 = 0u;
  v2[1] = 0u;
  v2[2] = 0u;
  v2[3] = 0u;
  v2[4] = 0u;
  v2[6] = 0u;
  v2[7] = 0u;
  v2[8] = 0u;
  v2[9] = 0u;
  v2[10] = 0u;
  v2[12] = 0u;
  v2[13] = 0u;
  v2[14] = 0u;
  v2[15] = 0u;
  v2[16] = 0u;
  v2[17] = 0u;
  v2[18] = 0u;
  v2[19] = 0u;
  v2[20] = 0u;
  v2[21] = 0u;
  v2[22] = 0u;
  v2[23] = 0u;
  v2[24] = 0u;
  v2[25] = 0u;
  v2[26] = 0u;
  v2[27] = 0u;
  v2[28] = 0u;
  v2[29] = 0u;
  v2[11] = 0u;
  uint64_t v3 = v2 + 11;
  v2[5] = 0u;
  long long v4 = v2 + 5;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v5 + 16) = 0;
  *(unsigned char *)(v5 + 24) = 0;
  *(void *)uint64_t v5 = &unk_26E6F6DD8;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  void *v4 = &unk_26E6F6E60;
  *(_OWORD *)(v5 + 88) = 0u;
  *(_OWORD *)(v5 + 104) = 0u;
  *(_OWORD *)(v5 + 120) = 0u;
  *(_OWORD *)(v5 + 132) = 0u;
  *(void *)(v5 + 148) = 0x7FFFFFFFLL;
  *(void *)(v5 + 160) = 0;
  *(unsigned char *)(v5 + 168) = 0;
  *(void *)uint64_t v3 = &unk_26E6F6E90;
  *(_OWORD *)(v5 + 184) = 0u;
  *(_OWORD *)(v5 + 200) = 0u;
  *(_DWORD *)(v5 + 216) = 0;
  *(void *)(v5 + 220) = 0x7FFFFFFFLL;
  *(_DWORD *)(v5 + 264) = 0;
  *(_OWORD *)(v5 + 248) = 0u;
  *(_OWORD *)(v5 + 232) = 0u;
  *(void *)((char *)v3 + 92) = 0x7FFFFFFFLL;
  *(_OWORD *)((char *)v3 + 104) = 0u;
  *(_OWORD *)((char *)v3 + 120) = 0u;
  *(_DWORD *)(v5 + 312) = 0;
  *(void *)((char *)v3 + 140) = 0x7FFFFFFFLL;
  *(_OWORD *)((char *)v3 + 152) = 0u;
  *(_OWORD *)((char *)v3 + 168) = 0u;
  double result = 0.0;
  *(_DWORD *)(v5 + 360) = 0;
  *(void *)((char *)v3 + 188) = 0x7FFFFFFFLL;
  *(void *)(v5 + 408) = 0;
  *(void *)(v5 + 384) = 0;
  *(void *)(v5 + 392) = 0;
  *(_DWORD *)(v5 + 400) = 0;
  *(void *)(v5 + 376) = 0;
  *(_DWORD *)(v5 + 416) = 0;
  *(void *)(v5 + 472) = 0;
  *(_OWORD *)(v5 + 452) = 0u;
  *(_OWORD *)(v5 + 424) = 0u;
  *(_OWORD *)(v5 + 440) = 0u;
  *a1 = v5;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::StateMachineComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F0EE8;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  unint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::StateMachineComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82E00, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82E00))
  {
    qword_26AF82DF8 = re::ecs2::introspect_StateMachineComponent(0);
    __cxa_guard_release(&qword_26AF82E00);
  }
  return qword_26AF82DF8;
}

__n128 re::ecs2::ComponentType<re::ecs2::StateMachineComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::StateMachineComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::StateMachineComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F0E78;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::StateMachineComponent::~StateMachineComponent(re::ecs2::StateMachineComponent *this)
{
  *(void *)this = &unk_26E6F6DD8;
  uint64_t v2 = (re::ecs2::StateMachineComponent *)((char *)this + 32);
  uint64_t v3 = (char *)this + 440;
  re::DynamicArray<re::BindPoint::BindPointData>::deinit((uint64_t)this + 440);
  re::DynamicArray<re::BindPoint::BindPointData>::deinit((uint64_t)v3);
  re::DynamicArray<re::RigGraphNodeInputParameter>::deinit((uint64_t)this + 376);
  re::DynamicArray<re::RigGraphNodeInputParameter>::deinit((uint64_t)this + 376);
  re::StateParameterBlackboard::~StateParameterBlackboard((re::ecs2::StateMachineComponent *)((char *)this + 176));
  re::ecs2::LayeredStateMachine::~LayeredStateMachine((re::ecs2::StateMachineComponent *)((char *)this + 80));
  re::AssetHandle::~AssetHandle((re::ecs2::StateMachineComponent *)((char *)this + 56));
  re::AssetHandle::~AssetHandle(v2);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  re::AssetHandle *v2;
  char *v3;
  uint64_t vars8;

  *(void *)this = &unk_26E6F6DD8;
  uint64_t v2 = (re::ecs2::StateMachineComponent *)((char *)this + 32);
  uint64_t v3 = (char *)this + 440;
  re::DynamicArray<re::BindPoint::BindPointData>::deinit((uint64_t)this + 440);
  re::DynamicArray<re::BindPoint::BindPointData>::deinit((uint64_t)v3);
  re::DynamicArray<re::RigGraphNodeInputParameter>::deinit((uint64_t)this + 376);
  re::DynamicArray<re::RigGraphNodeInputParameter>::deinit((uint64_t)this + 376);
  re::StateParameterBlackboard::~StateParameterBlackboard((re::ecs2::StateMachineComponent *)((char *)this + 176));
  re::ecs2::LayeredStateMachine::~LayeredStateMachine((re::ecs2::StateMachineComponent *)((char *)this + 80));
  re::AssetHandle::~AssetHandle((re::ecs2::StateMachineComponent *)((char *)this + 56));
  re::AssetHandle::~AssetHandle(v2);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::StateMachineComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::StateMachineComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::StateMachineComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::StateMachineComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::StateMachineComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::LayeredStateMachine::~LayeredStateMachine(re::ecs2::LayeredStateMachine *this)
{
  re::ecs2::LayeredStateMachine::~LayeredStateMachine(this);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t *v2;

  *(void *)this = &unk_26E6F6E60;
  uint64_t v2 = (uint64_t *)((char *)this + 8);
  re::ecs2::LayeredStateMachine::deinit((uint64_t **)this);
  re::HashTable<re::StringID,re::DataArrayHandle<re::RigGraphOperatorDefinition>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)this + 4);
  re::FixedArray<CoreIKTransform>::deinit(v2);
}

void re::StateParameterBlackboard::~StateParameterBlackboard(re::StateParameterBlackboard *this)
{
  re::StateParameterBlackboard::~StateParameterBlackboard(this);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t *v2;

  *(void *)this = &unk_26E6F6E90;
  uint64_t v2 = (uint64_t *)((char *)this + 8);
  re::StateParameterBlackboard::deinit(this);
  re::HashTable<re::StringID,re::DataArrayHandle<re::RigGraphOperatorDefinition>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)this + 19);
  re::HashTable<re::StringID,re::DataArrayHandle<re::RigGraphOperatorDefinition>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)this + 13);
  re::HashTable<re::StringID,re::DataArrayHandle<re::RigGraphOperatorDefinition>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)this + 7);
  re::HashTable<re::StringID,re::DataArrayHandle<re::RigGraphOperatorDefinition>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit(v2);
}

void re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F0EE8;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      unint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::StateMachineComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>,re::Slice<re::ecs2::StateMachineComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>*,re::Slice<re::ecs2::StateMachineComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>,re::Slice<re::ecs2::StateMachineComponent*>>::Subscription const&,re::Slice<re::ecs2::StateMachineComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::StateMachineComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>,re::Slice<re::ecs2::StateMachineComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>*,re::Slice<re::ecs2::StateMachineComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>,re::Slice<re::ecs2::StateMachineComponent*>>::Subscription const&,re::Slice<re::ecs2::StateMachineComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::StateMachineComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>,re::Slice<re::ecs2::StateMachineComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>*,re::Slice<re::ecs2::StateMachineComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>,re::Slice<re::ecs2::StateMachineComponent*>>::Subscription const&,re::Slice<re::ecs2::StateMachineComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::StateMachineComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>,re::Slice<re::ecs2::StateMachineComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>*,re::Slice<re::ecs2::StateMachineComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>,re::Slice<re::ecs2::StateMachineComponent*>>::Subscription const&,re::Slice<re::ecs2::StateMachineComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::StateMachineComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>,re::Slice<re::ecs2::StateMachineComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>*,re::Slice<re::ecs2::StateMachineComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>,re::Slice<re::ecs2::StateMachineComponent*>>::Subscription const&,re::Slice<re::ecs2::StateMachineComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::StateMachineComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>,re::Slice<re::ecs2::StateMachineComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>*,re::Slice<re::ecs2::StateMachineComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>,re::Slice<re::ecs2::StateMachineComponent*>>::Subscription const&,re::Slice<re::ecs2::StateMachineComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::StateMachineComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>,re::Slice<re::ecs2::StateMachineComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>*,re::Slice<re::ecs2::StateMachineComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>,re::Slice<re::ecs2::StateMachineComponent*>>::Subscription const&,re::Slice<re::ecs2::StateMachineComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::StateMachineComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>,re::Slice<re::ecs2::StateMachineComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>*,re::Slice<re::ecs2::StateMachineComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>,re::Slice<re::ecs2::StateMachineComponent*>>::Subscription const&,re::Slice<re::ecs2::StateMachineComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::StateMachineComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::StateMachineComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::StateMachineComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::StateMachineComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>,re::Slice<re::ecs2::StateMachineComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>*,re::Slice<re::ecs2::StateMachineComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>,re::Slice<re::ecs2::StateMachineComponent*>>::Subscription const&,re::Slice<re::ecs2::StateMachineComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::StaticTextComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::StaticTextComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::StaticTextComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::StaticTextComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::StaticTextComponent>::doMakeComponent@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::StaticTextComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::StaticTextComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 160, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F1000;
  *(_DWORD *)(v3 + 28) = 0;
  *(unsigned char *)(v3 + 32) = 0;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 40) = 0u;
  long long v4 = (void *)(v3 + 40);
  re::DynamicString::setCapacity(v4, 0);
  *(void *)(v2 + 72) = 0;
  *(void *)(v2 + 80) = 0;
  *(void *)(v2 + 88) = 0;
  double result = *(double *)&re::kInvalidStringRenderHandle;
  *(_OWORD *)(v2 + 96) = re::kInvalidStringRenderHandle;
  *(void *)(v2 + 112) = 0;
  *(void *)(v2 + 128) = 0x3F8000003F800000;
  *(void *)(v2 + 136) = 0x3F8000003F800000;
  *(unsigned char *)(v2 + 144) = 0;
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::StaticTextComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F1088;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  unint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::StaticTextComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82E10, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82E10))
  {
    qword_26AF82E08 = re::ecs2::introspect_StaticTextComponent(0);
    __cxa_guard_release(&qword_26AF82E10);
  }
  return qword_26AF82E08;
}

__n128 re::ecs2::ComponentType<re::ecs2::StaticTextComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::StaticTextComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::StaticTextComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F0F90;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::StaticTextComponent::~StaticTextComponent(re::ecs2::StaticTextComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  re::AssetHandle::~AssetHandle((re::ecs2::StaticTextComponent *)((char *)this + 72));
  re::DynamicString::deinit((re::ecs2::StaticTextComponent *)((char *)this + 40));
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::StaticTextComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::StaticTextComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::StaticTextComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::StaticTextComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::StaticTextComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F1088;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      unint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>::registerCallbacks(_DWORD *a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::StaticTextComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>,re::Slice<re::ecs2::StaticTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>*,re::Slice<re::ecs2::StaticTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>,re::Slice<re::ecs2::StaticTextComponent*>>::Subscription const&,re::Slice<re::ecs2::StaticTextComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::StaticTextComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>,re::Slice<re::ecs2::StaticTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>*,re::Slice<re::ecs2::StaticTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>,re::Slice<re::ecs2::StaticTextComponent*>>::Subscription const&,re::Slice<re::ecs2::StaticTextComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::StaticTextComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>,re::Slice<re::ecs2::StaticTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>*,re::Slice<re::ecs2::StaticTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>,re::Slice<re::ecs2::StaticTextComponent*>>::Subscription const&,re::Slice<re::ecs2::StaticTextComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::StaticTextComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>,re::Slice<re::ecs2::StaticTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>*,re::Slice<re::ecs2::StaticTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>,re::Slice<re::ecs2::StaticTextComponent*>>::Subscription const&,re::Slice<re::ecs2::StaticTextComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::StaticTextComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>,re::Slice<re::ecs2::StaticTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>*,re::Slice<re::ecs2::StaticTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>,re::Slice<re::ecs2::StaticTextComponent*>>::Subscription const&,re::Slice<re::ecs2::StaticTextComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::StaticTextComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>,re::Slice<re::ecs2::StaticTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>*,re::Slice<re::ecs2::StaticTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>,re::Slice<re::ecs2::StaticTextComponent*>>::Subscription const&,re::Slice<re::ecs2::StaticTextComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::StaticTextComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>,re::Slice<re::ecs2::StaticTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>*,re::Slice<re::ecs2::StaticTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>,re::Slice<re::ecs2::StaticTextComponent*>>::Subscription const&,re::Slice<re::ecs2::StaticTextComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::StaticTextComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>,re::Slice<re::ecs2::StaticTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>*,re::Slice<re::ecs2::StaticTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>,re::Slice<re::ecs2::StaticTextComponent*>>::Subscription const&,re::Slice<re::ecs2::StaticTextComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::StaticTextComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::StaticTextComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::StaticTextComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::StaticTextComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>,re::Slice<re::ecs2::StaticTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>*,re::Slice<re::ecs2::StaticTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>,re::Slice<re::ecs2::StaticTextComponent*>>::Subscription const&,re::Slice<re::ecs2::StaticTextComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::Static3DTextComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::Static3DTextComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::Static3DTextComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::Static3DTextComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void *re::ecs2::ComponentType<re::ecs2::Static3DTextComponent>::doMakeComponent@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::Static3DTextComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::Static3DTextComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 288, 0);
  return re::make::shared::inplace<re::ecs2::Static3DTextComponent>(v2, a1);
}

uint64_t re::ecs2::ComponentType<re::ecs2::Static3DTextComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F11A0;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  unint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::Static3DTextComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82E20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82E20))
  {
    qword_26AF82E18 = re::ecs2::introspect_Static3DTextComponent(0);
    __cxa_guard_release(&qword_26AF82E20);
  }
  return qword_26AF82E18;
}

__n128 re::ecs2::ComponentType<re::ecs2::Static3DTextComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::Static3DTextComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::Static3DTextComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F1130;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F11A0;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      unint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>::registerCallbacks(_DWORD *a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::Static3DTextComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>,re::Slice<re::ecs2::Static3DTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>*,re::Slice<re::ecs2::Static3DTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>,re::Slice<re::ecs2::Static3DTextComponent*>>::Subscription const&,re::Slice<re::ecs2::Static3DTextComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::Static3DTextComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>,re::Slice<re::ecs2::Static3DTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>*,re::Slice<re::ecs2::Static3DTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>,re::Slice<re::ecs2::Static3DTextComponent*>>::Subscription const&,re::Slice<re::ecs2::Static3DTextComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::Static3DTextComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>,re::Slice<re::ecs2::Static3DTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>*,re::Slice<re::ecs2::Static3DTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>,re::Slice<re::ecs2::Static3DTextComponent*>>::Subscription const&,re::Slice<re::ecs2::Static3DTextComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::Static3DTextComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>,re::Slice<re::ecs2::Static3DTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>*,re::Slice<re::ecs2::Static3DTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>,re::Slice<re::ecs2::Static3DTextComponent*>>::Subscription const&,re::Slice<re::ecs2::Static3DTextComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::Static3DTextComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>,re::Slice<re::ecs2::Static3DTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>*,re::Slice<re::ecs2::Static3DTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>,re::Slice<re::ecs2::Static3DTextComponent*>>::Subscription const&,re::Slice<re::ecs2::Static3DTextComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::Static3DTextComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>,re::Slice<re::ecs2::Static3DTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>*,re::Slice<re::ecs2::Static3DTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>,re::Slice<re::ecs2::Static3DTextComponent*>>::Subscription const&,re::Slice<re::ecs2::Static3DTextComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::Static3DTextComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>,re::Slice<re::ecs2::Static3DTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>*,re::Slice<re::ecs2::Static3DTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>,re::Slice<re::ecs2::Static3DTextComponent*>>::Subscription const&,re::Slice<re::ecs2::Static3DTextComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::Static3DTextComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>,re::Slice<re::ecs2::Static3DTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>*,re::Slice<re::ecs2::Static3DTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>,re::Slice<re::ecs2::Static3DTextComponent*>>::Subscription const&,re::Slice<re::ecs2::Static3DTextComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::Static3DTextComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::Static3DTextComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::Static3DTextComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::Static3DTextComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>,re::Slice<re::ecs2::Static3DTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>*,re::Slice<re::ecs2::Static3DTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>,re::Slice<re::ecs2::Static3DTextComponent*>>::Subscription const&,re::Slice<re::ecs2::Static3DTextComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::SubsceneComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SubsceneComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::SubsceneComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::SubsceneComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::SubsceneComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::SubsceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::SubsceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 56, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(void *)(v2 + 48) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(_WORD *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F12B8;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = 0;
  *(void *)(v3 + 32) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SubsceneComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F1340;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  unint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SubsceneComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82E30, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82E30))
  {
    qword_26AF82E28 = re::ecs2::introspect_SubsceneComponent(0);
    __cxa_guard_release(&qword_26AF82E30);
  }
  return qword_26AF82E28;
}

__n128 re::ecs2::ComponentType<re::ecs2::SubsceneComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SubsceneComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SubsceneComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F1248;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SubsceneComponent::~SubsceneComponent(re::ecs2::SubsceneComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  re::AssetHandle::~AssetHandle((re::ecs2::SubsceneComponent *)((char *)this + 32));
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SubsceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::SubsceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SubsceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::SubsceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::SubsceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F1340;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      unint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SubsceneComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>,re::Slice<re::ecs2::SubsceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>*,re::Slice<re::ecs2::SubsceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>,re::Slice<re::ecs2::SubsceneComponent*>>::Subscription const&,re::Slice<re::ecs2::SubsceneComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SubsceneComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>,re::Slice<re::ecs2::SubsceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>*,re::Slice<re::ecs2::SubsceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>,re::Slice<re::ecs2::SubsceneComponent*>>::Subscription const&,re::Slice<re::ecs2::SubsceneComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SubsceneComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>,re::Slice<re::ecs2::SubsceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>*,re::Slice<re::ecs2::SubsceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>,re::Slice<re::ecs2::SubsceneComponent*>>::Subscription const&,re::Slice<re::ecs2::SubsceneComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SubsceneComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>,re::Slice<re::ecs2::SubsceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>*,re::Slice<re::ecs2::SubsceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>,re::Slice<re::ecs2::SubsceneComponent*>>::Subscription const&,re::Slice<re::ecs2::SubsceneComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SubsceneComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>,re::Slice<re::ecs2::SubsceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>*,re::Slice<re::ecs2::SubsceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>,re::Slice<re::ecs2::SubsceneComponent*>>::Subscription const&,re::Slice<re::ecs2::SubsceneComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SubsceneComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>,re::Slice<re::ecs2::SubsceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>*,re::Slice<re::ecs2::SubsceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>,re::Slice<re::ecs2::SubsceneComponent*>>::Subscription const&,re::Slice<re::ecs2::SubsceneComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SubsceneComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>,re::Slice<re::ecs2::SubsceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>*,re::Slice<re::ecs2::SubsceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>,re::Slice<re::ecs2::SubsceneComponent*>>::Subscription const&,re::Slice<re::ecs2::SubsceneComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SubsceneComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>,re::Slice<re::ecs2::SubsceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>*,re::Slice<re::ecs2::SubsceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>,re::Slice<re::ecs2::SubsceneComponent*>>::Subscription const&,re::Slice<re::ecs2::SubsceneComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SubsceneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SubsceneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SubsceneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SubsceneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>,re::Slice<re::ecs2::SubsceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>*,re::Slice<re::ecs2::SubsceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>,re::Slice<re::ecs2::SubsceneComponent*>>::Subscription const&,re::Slice<re::ecs2::SubsceneComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::TransformComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::TransformComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::TransformComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::TransformComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

re::ecs2::TransformComponent *re::ecs2::ComponentType<re::ecs2::TransformComponent>::doMakeComponent@<X0>(re::ecs2::TransformComponent **a1@<X8>)
{
  uint64_t v2 = (re::ecs2::TransformComponent *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::TransformComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                             + 7)
                                                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::TransformComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 208, 0);
  double result = re::ecs2::TransformComponent::TransformComponent(v2);
  *a1 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::TransformComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F1458;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  unint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

char *re::ecs2::ComponentType<re::ecs2::TransformComponent>::doGetComponentIntrospectionInfo()
{
  v0 = re::KTXTextureCompiler::getSupportedExtensions(void)const::supportedExtensions;
  {
    v0 = re::KTXTextureCompiler::getSupportedExtensions(void)const::supportedExtensions;
    if (v2)
    {
      re::introspect<re::ecs2::TransformComponent>(void)::info = (_UNKNOWN *)re::ecs2::introspect_TransformComponent(0);
      v0 = re::KTXTextureCompiler::getSupportedExtensions(void)const::supportedExtensions;
    }
  }
  return v0[132];
}

__n128 re::ecs2::ComponentType<re::ecs2::TransformComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::TransformComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::TransformComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F13E8;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F1458;
  int v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      unint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::TransformComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>,re::Slice<re::ecs2::TransformComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>*,re::Slice<re::ecs2::TransformComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>,re::Slice<re::ecs2::TransformComponent*>>::Subscription const&,re::Slice<re::ecs2::TransformComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::TransformComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>,re::Slice<re::ecs2::TransformComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>*,re::Slice<re::ecs2::TransformComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>,re::Slice<re::ecs2::TransformComponent*>>::Subscription const&,re::Slice<re::ecs2::TransformComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::TransformComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>,re::Slice<re::ecs2::TransformComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>*,re::Slice<re::ecs2::TransformComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>,re::Slice<re::ecs2::TransformComponent*>>::Subscription const&,re::Slice<re::ecs2::TransformComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::TransformComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>,re::Slice<re::ecs2::TransformComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>*,re::Slice<re::ecs2::TransformComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>,re::Slice<re::ecs2::TransformComponent*>>::Subscription const&,re::Slice<re::ecs2::TransformComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::TransformComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>,re::Slice<re::ecs2::TransformComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>*,re::Slice<re::ecs2::TransformComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>,re::Slice<re::ecs2::TransformComponent*>>::Subscription const&,re::Slice<re::ecs2::TransformComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::TransformComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>,re::Slice<re::ecs2::TransformComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>*,re::Slice<re::ecs2::TransformComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>,re::Slice<re::ecs2::TransformComponent*>>::Subscription const&,re::Slice<re::ecs2::TransformComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::TransformComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>,re::Slice<re::ecs2::TransformComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>*,re::Slice<re::ecs2::TransformComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>,re::Slice<re::ecs2::TransformComponent*>>::Subscription const&,re::Slice<re::ecs2::TransformComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::TransformComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>,re::Slice<re::ecs2::TransformComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>*,re::Slice<re::ecs2::TransformComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>,re::Slice<re::ecs2::TransformComponent*>>::Subscription const&,re::Slice<re::ecs2::TransformComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::TransformComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::TransformComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::TransformComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::TransformComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>,re::Slice<re::ecs2::TransformComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>*,re::Slice<re::ecs2::TransformComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>,re::Slice<re::ecs2::TransformComponent*>>::Subscription const&,re::Slice<re::ecs2::TransformComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::UISortingComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::UISortingComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::UISortingComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::UISortingComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

int32x4_t re::ecs2::ComponentType<re::ecs2::UISortingComponent>::doMakeComponent@<Q0>(void *a1@<X8>)
{
  int v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::UISortingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::UISortingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 112, 0);
  *(_OWORD *)int v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F1570;
  *(void *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  int32x4_t result = vdupq_n_s32(0x7F800000u);
  *(void *)&long long v5 = 0x7F0000007FLL;
  *((void *)&v5 + 1) = 0x7F0000007FLL;
  *(int32x4_t *)(v3 + 48) = result;
  *(_OWORD *)(v3 + 64) = v5;
  *(_DWORD *)(v3 + 80) = 1;
  *(void *)(v3 + 84) = 0;
  *(void *)(v3 + 89) = 0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::UISortingComponent>::doMakeSceneComponentCollection(re *a1)
{
  int v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F15F8;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  long long v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  unint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::UISortingComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82E40, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82E40))
  {
    qword_26AF82E38 = re::ecs2::introspect_UISortingComponent(0);
    __cxa_guard_release(&qword_26AF82E40);
  }
  return qword_26AF82E38;
}

__n128 re::ecs2::ComponentType<re::ecs2::UISortingComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::UISortingComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::UISortingComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F1500;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::UISortingComponent::~UISortingComponent(re::ecs2::UISortingComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::UISortingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::UISortingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::UISortingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::UISortingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::UISortingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F15F8;
  int v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      long long v5 = *(re::ecs2::Component ***)(a2 + 32);
      unint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    long long v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::UISortingComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>,re::Slice<re::ecs2::UISortingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>*,re::Slice<re::ecs2::UISortingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>,re::Slice<re::ecs2::UISortingComponent*>>::Subscription const&,re::Slice<re::ecs2::UISortingComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    long long v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::UISortingComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>,re::Slice<re::ecs2::UISortingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>*,re::Slice<re::ecs2::UISortingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>,re::Slice<re::ecs2::UISortingComponent*>>::Subscription const&,re::Slice<re::ecs2::UISortingComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    long long v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::UISortingComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>,re::Slice<re::ecs2::UISortingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>*,re::Slice<re::ecs2::UISortingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>,re::Slice<re::ecs2::UISortingComponent*>>::Subscription const&,re::Slice<re::ecs2::UISortingComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    long long v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::UISortingComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>,re::Slice<re::ecs2::UISortingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>*,re::Slice<re::ecs2::UISortingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>,re::Slice<re::ecs2::UISortingComponent*>>::Subscription const&,re::Slice<re::ecs2::UISortingComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::UISortingComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>,re::Slice<re::ecs2::UISortingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>*,re::Slice<re::ecs2::UISortingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>,re::Slice<re::ecs2::UISortingComponent*>>::Subscription const&,re::Slice<re::ecs2::UISortingComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::UISortingComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>,re::Slice<re::ecs2::UISortingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>*,re::Slice<re::ecs2::UISortingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>,re::Slice<re::ecs2::UISortingComponent*>>::Subscription const&,re::Slice<re::ecs2::UISortingComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::UISortingComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>,re::Slice<re::ecs2::UISortingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>*,re::Slice<re::ecs2::UISortingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>,re::Slice<re::ecs2::UISortingComponent*>>::Subscription const&,re::Slice<re::ecs2::UISortingComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::UISortingComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>,re::Slice<re::ecs2::UISortingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>*,re::Slice<re::ecs2::UISortingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>,re::Slice<re::ecs2::UISortingComponent*>>::Subscription const&,re::Slice<re::ecs2::UISortingComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::UISortingComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::UISortingComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::UISortingComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::UISortingComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>,re::Slice<re::ecs2::UISortingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>*,re::Slice<re::ecs2::UISortingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>,re::Slice<re::ecs2::UISortingComponent*>>::Subscription const&,re::Slice<re::ecs2::UISortingComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::VideoComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::VideoComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::VideoComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::VideoComponent>::doMakeComponent(void *a1@<X8>)
{
  int v2 = (re::ecs2::VideoComponent *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::VideoComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                         + 7)
                                                                                      + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::VideoComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 320, 0);
  *(_OWORD *)int v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 0u;
  *((_OWORD *)v2 + 8) = 0u;
  *((_OWORD *)v2 + 9) = 0u;
  *((_OWORD *)v2 + 10) = 0u;
  *((_OWORD *)v2 + 11) = 0u;
  *((_OWORD *)v2 + 12) = 0u;
  *((_OWORD *)v2 + 13) = 0u;
  *((_OWORD *)v2 + 14) = 0u;
  *((_OWORD *)v2 + 15) = 0u;
  *((_OWORD *)v2 + 16) = 0u;
  *((_OWORD *)v2 + 1re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 0u;
  *((_OWORD *)v2 + 18) = 0u;
  *((_OWORD *)v2 + 19) = 0u;
  re::ecs2::VideoComponent::VideoComponent(v2);
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoComponent>::doMakeSceneComponentCollection(re *a1)
{
  int v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F1710;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  unint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82E50, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82E50))
  {
    qword_26AF82E48 = re::ecs2::introspect_VideoComponent(0);
    __cxa_guard_release(&qword_26AF82E50);
  }
  return qword_26AF82E48;
}

__n128 re::ecs2::ComponentType<re::ecs2::VideoComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F16A0;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

double re::ecs2::VideoComponent::VideoComponent(re::ecs2::VideoComponent *this)
{
  ArcSharedObject::ArcSharedObject(this, 0);
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 24) = 0;
  *(void *)uint64_t v1 = &unk_26E708F80;
  *(void *)(v1 + 40) = 0;
  *(void *)(v1 + 48) = 0;
  *(void *)(v1 + 32) = 0;
  *(_WORD *)(v1 + 56) = 1;
  *(void *)(v1 + 64) = 0;
  *(_WORD *)(v1 + 72) = 0;
  *(void *)(v1 + 88) = 0;
  *(void *)(v1 + 96) = 0;
  *(void *)(v1 + 80) = 0;
  *(_DWORD *)(v1 + 104) = 0;
  *(void *)(v1 + 152) = 0;
  *(unsigned char *)(v1 + 160) = 0;
  *(_OWORD *)(v1 + 112) = 0u;
  *(_OWORD *)(v1 + 128) = 0u;
  *(_DWORD *)(v1 + 144) = 0;
  *(_OWORD *)(v1 + 184) = 0u;
  *(_OWORD *)(v1 + 168) = 0u;
  *(_DWORD *)(v1 + 200) = -1;
  *(_WORD *)(v1 + 204) = 0;
  *(_WORD *)(v1 + 20re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 0;
  *(_DWORD *)(v1 + 212) = 0;
  *(_WORD *)(v1 + 216) = 0;
  *(_OWORD *)(v1 + 224) = re::ecs2::kDefaultVideoUVParams;
  *(_OWORD *)(v1 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = unk_23438D690;
  *(_DWORD *)(v1 + 272) = 1065353216;
  *(_OWORD *)(v1 + 256) = re::ecs2::kDefaultVideoBlurParams;
  *(void *)(v1 + 280) = 0;
  *(void *)(v1 + 288) = 0;
  __asm { FMOV            V0.2S, #1.0 }
  *(double *)(v1 + 296) = result;
  *(_DWORD *)(v1 + 304) = 1065353216;
  *(void *)(v1 + 308) = 0;
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F1710;
  int v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      unint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>::registerCallbacks(_DWORD *a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VideoComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>,re::Slice<re::ecs2::VideoComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>*,re::Slice<re::ecs2::VideoComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>,re::Slice<re::ecs2::VideoComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VideoComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>,re::Slice<re::ecs2::VideoComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>*,re::Slice<re::ecs2::VideoComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>,re::Slice<re::ecs2::VideoComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VideoComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>,re::Slice<re::ecs2::VideoComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>*,re::Slice<re::ecs2::VideoComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>,re::Slice<re::ecs2::VideoComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VideoComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>,re::Slice<re::ecs2::VideoComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>*,re::Slice<re::ecs2::VideoComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>,re::Slice<re::ecs2::VideoComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VideoComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>,re::Slice<re::ecs2::VideoComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>*,re::Slice<re::ecs2::VideoComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>,re::Slice<re::ecs2::VideoComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VideoComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>,re::Slice<re::ecs2::VideoComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>*,re::Slice<re::ecs2::VideoComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>,re::Slice<re::ecs2::VideoComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VideoComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>,re::Slice<re::ecs2::VideoComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>*,re::Slice<re::ecs2::VideoComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>,re::Slice<re::ecs2::VideoComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VideoComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>,re::Slice<re::ecs2::VideoComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>*,re::Slice<re::ecs2::VideoComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>,re::Slice<re::ecs2::VideoComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VideoComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VideoComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VideoComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VideoComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>,re::Slice<re::ecs2::VideoComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>*,re::Slice<re::ecs2::VideoComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>,re::Slice<re::ecs2::VideoComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::VideoPlayerComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoPlayerComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::VideoPlayerComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::VideoPlayerComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void *re::ecs2::ComponentType<re::ecs2::VideoPlayerComponent>::doMakeComponent@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::VideoPlayerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::VideoPlayerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 176, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E70B6E8;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 73) = 0u;
  *(_OWORD *)(v3 + 96) = 0u;
  *(_OWORD *)(v3 + 112) = 0u;
  *(_OWORD *)(v3 + 128) = 0u;
  *(void *)(v3 + 144) = 0;
  double result = re::DynamicString::setCapacity((void *)(v2 + 120), 0);
  *(unsigned char *)(v2 + 152) = 1;
  *(_DWORD *)(v2 + 156) = 1055286886;
  *(unsigned char *)(v2 + 160) = 0;
  *(void *)(v2 + 164) = 0;
  *(_DWORD *)(v2 + 172) = 0;
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoPlayerComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F1828;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  unint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoPlayerComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82E60, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82E60))
  {
    qword_26AF82E58 = re::ecs2::introspect_VideoPlayerComponent(0);
    __cxa_guard_release(&qword_26AF82E60);
  }
  return qword_26AF82E58;
}

__n128 re::ecs2::ComponentType<re::ecs2::VideoPlayerComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoPlayerComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoPlayerComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F17B8;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F1828;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      unint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>::registerCallbacks(_DWORD *a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VideoPlayerComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>,re::Slice<re::ecs2::VideoPlayerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>*,re::Slice<re::ecs2::VideoPlayerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>,re::Slice<re::ecs2::VideoPlayerComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoPlayerComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VideoPlayerComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>,re::Slice<re::ecs2::VideoPlayerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>*,re::Slice<re::ecs2::VideoPlayerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>,re::Slice<re::ecs2::VideoPlayerComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoPlayerComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VideoPlayerComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>,re::Slice<re::ecs2::VideoPlayerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>*,re::Slice<re::ecs2::VideoPlayerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>,re::Slice<re::ecs2::VideoPlayerComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoPlayerComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VideoPlayerComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>,re::Slice<re::ecs2::VideoPlayerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>*,re::Slice<re::ecs2::VideoPlayerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>,re::Slice<re::ecs2::VideoPlayerComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoPlayerComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VideoPlayerComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>,re::Slice<re::ecs2::VideoPlayerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>*,re::Slice<re::ecs2::VideoPlayerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>,re::Slice<re::ecs2::VideoPlayerComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoPlayerComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VideoPlayerComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>,re::Slice<re::ecs2::VideoPlayerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>*,re::Slice<re::ecs2::VideoPlayerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>,re::Slice<re::ecs2::VideoPlayerComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoPlayerComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VideoPlayerComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>,re::Slice<re::ecs2::VideoPlayerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>*,re::Slice<re::ecs2::VideoPlayerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>,re::Slice<re::ecs2::VideoPlayerComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoPlayerComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VideoPlayerComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>,re::Slice<re::ecs2::VideoPlayerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>*,re::Slice<re::ecs2::VideoPlayerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>,re::Slice<re::ecs2::VideoPlayerComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoPlayerComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VideoPlayerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VideoPlayerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VideoPlayerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VideoPlayerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>,re::Slice<re::ecs2::VideoPlayerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>*,re::Slice<re::ecs2::VideoPlayerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>,re::Slice<re::ecs2::VideoPlayerComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoPlayerComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::VideoPlayerStatusComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoPlayerStatusComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::VideoPlayerStatusComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::VideoPlayerStatusComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::VideoPlayerStatusComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::VideoPlayerStatusComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::VideoPlayerStatusComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 192, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 0u;
  *((_OWORD *)v2 + 8) = 0u;
  *((_OWORD *)v2 + 9) = 0u;
  *((_OWORD *)v2 + 10) = 0u;
  *((_OWORD *)v2 + 11) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F1940;
  *(_DWORD *)(v3 + 28) = -1082130432;
  *(void *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(_WORD *)(v3 + 48) = 0;
  *(void *)(v3 + 56) = 0;
  *(void *)(v3 + 64) = 0;
  *(_WORD *)(v3 + 72) = 0;
  *(void *)(v3 + 80) = 0;
  *(void *)(v3 + 88) = -1;
  *(void *)(v3 + 96) = 0;
  *(unsigned char *)(v3 + 104) = 0;
  *(void *)(v3 + 144) = 0;
  *(void *)(v3 + 152) = 0;
  *(unsigned char *)(v3 + 160) = 0;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(unsigned char *)(v3 + 136) = 0;
  *(void *)(v3 + 112) = 0;
  *(void *)(v3 + 168) = 0;
  *(void *)(v3 + 176) = -1;
  *(void *)(v3 + 184) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoPlayerStatusComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F19C8;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  unint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoPlayerStatusComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82E70, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82E70))
  {
    qword_26AF82E68 = re::ecs2::introspect_VideoPlayerStatusComponent(0);
    __cxa_guard_release(&qword_26AF82E70);
  }
  return qword_26AF82E68;
}

__n128 re::ecs2::ComponentType<re::ecs2::VideoPlayerStatusComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoPlayerStatusComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoPlayerStatusComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F18D0;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::VideoPlayerStatusComponent::~VideoPlayerStatusComponent(re::ecs2::VideoPlayerStatusComponent *this)
{
  *(void *)this = &unk_26E6F1940;
  re::AssetHandle::~AssetHandle((re::ecs2::VideoPlayerStatusComponent *)((char *)this + 112));
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6F1940;
  re::AssetHandle::~AssetHandle((re::ecs2::VideoPlayerStatusComponent *)((char *)this + 112));
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::VideoPlayerStatusComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::VideoPlayerStatusComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::VideoPlayerStatusComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::VideoPlayerStatusComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::VideoPlayerStatusComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F19C8;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      unint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VideoPlayerStatusComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>,re::Slice<re::ecs2::VideoPlayerStatusComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>*,re::Slice<re::ecs2::VideoPlayerStatusComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>,re::Slice<re::ecs2::VideoPlayerStatusComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoPlayerStatusComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VideoPlayerStatusComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>,re::Slice<re::ecs2::VideoPlayerStatusComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>*,re::Slice<re::ecs2::VideoPlayerStatusComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>,re::Slice<re::ecs2::VideoPlayerStatusComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoPlayerStatusComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VideoPlayerStatusComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>,re::Slice<re::ecs2::VideoPlayerStatusComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>*,re::Slice<re::ecs2::VideoPlayerStatusComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>,re::Slice<re::ecs2::VideoPlayerStatusComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoPlayerStatusComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VideoPlayerStatusComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>,re::Slice<re::ecs2::VideoPlayerStatusComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>*,re::Slice<re::ecs2::VideoPlayerStatusComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>,re::Slice<re::ecs2::VideoPlayerStatusComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoPlayerStatusComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VideoPlayerStatusComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>,re::Slice<re::ecs2::VideoPlayerStatusComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>*,re::Slice<re::ecs2::VideoPlayerStatusComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>,re::Slice<re::ecs2::VideoPlayerStatusComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoPlayerStatusComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VideoPlayerStatusComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>,re::Slice<re::ecs2::VideoPlayerStatusComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>*,re::Slice<re::ecs2::VideoPlayerStatusComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>,re::Slice<re::ecs2::VideoPlayerStatusComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoPlayerStatusComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VideoPlayerStatusComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>,re::Slice<re::ecs2::VideoPlayerStatusComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>*,re::Slice<re::ecs2::VideoPlayerStatusComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>,re::Slice<re::ecs2::VideoPlayerStatusComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoPlayerStatusComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VideoPlayerStatusComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>,re::Slice<re::ecs2::VideoPlayerStatusComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>*,re::Slice<re::ecs2::VideoPlayerStatusComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>,re::Slice<re::ecs2::VideoPlayerStatusComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoPlayerStatusComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VideoPlayerStatusComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VideoPlayerStatusComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VideoPlayerStatusComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VideoPlayerStatusComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>,re::Slice<re::ecs2::VideoPlayerStatusComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>*,re::Slice<re::ecs2::VideoPlayerStatusComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>,re::Slice<re::ecs2::VideoPlayerStatusComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoPlayerStatusComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::VideoProxyComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoProxyComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::VideoProxyComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::VideoProxyComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

re::ecs2::VideoProxyComponent *re::ecs2::ComponentType<re::ecs2::VideoProxyComponent>::doMakeComponent@<X0>(re::ecs2::VideoProxyComponent **a1@<X8>)
{
  uint64_t v2 = (re::ecs2::VideoProxyComponent *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::VideoProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                              + 7)
                                                                                           + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::VideoProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 64, 0);
  double result = re::ecs2::VideoProxyComponent::VideoProxyComponent(v2);
  *a1 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoProxyComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F1AE0;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  unint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoProxyComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82E80, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82E80))
  {
    qword_26AF82E78 = re::ecs2::introspect_VideoProxyComponent(0);
    __cxa_guard_release(&qword_26AF82E80);
  }
  return qword_26AF82E78;
}

__n128 re::ecs2::ComponentType<re::ecs2::VideoProxyComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoProxyComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoProxyComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F1A70;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F1AE0;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      unint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VideoProxyComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>,re::Slice<re::ecs2::VideoProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>*,re::Slice<re::ecs2::VideoProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>,re::Slice<re::ecs2::VideoProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoProxyComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VideoProxyComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>,re::Slice<re::ecs2::VideoProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>*,re::Slice<re::ecs2::VideoProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>,re::Slice<re::ecs2::VideoProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoProxyComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VideoProxyComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>,re::Slice<re::ecs2::VideoProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>*,re::Slice<re::ecs2::VideoProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>,re::Slice<re::ecs2::VideoProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoProxyComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VideoProxyComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>,re::Slice<re::ecs2::VideoProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>*,re::Slice<re::ecs2::VideoProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>,re::Slice<re::ecs2::VideoProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoProxyComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VideoProxyComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>,re::Slice<re::ecs2::VideoProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>*,re::Slice<re::ecs2::VideoProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>,re::Slice<re::ecs2::VideoProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoProxyComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VideoProxyComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>,re::Slice<re::ecs2::VideoProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>*,re::Slice<re::ecs2::VideoProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>,re::Slice<re::ecs2::VideoProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoProxyComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VideoProxyComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>,re::Slice<re::ecs2::VideoProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>*,re::Slice<re::ecs2::VideoProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>,re::Slice<re::ecs2::VideoProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoProxyComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VideoProxyComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>,re::Slice<re::ecs2::VideoProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>*,re::Slice<re::ecs2::VideoProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>,re::Slice<re::ecs2::VideoProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoProxyComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VideoProxyComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VideoProxyComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VideoProxyComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VideoProxyComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>,re::Slice<re::ecs2::VideoProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>*,re::Slice<re::ecs2::VideoProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>,re::Slice<re::ecs2::VideoProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoProxyComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRootComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRootComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRootComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRootComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRootComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 40, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(void *)(v2 + 32) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F1BF8;
  *(void *)(v3 + 32) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRootComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F1C80;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  unint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRootComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82E90, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82E90))
  {
    qword_26AF82E88 = re::ecs2::introspect_SceneUnderstandingRootComponent(0);
    __cxa_guard_release(&qword_26AF82E90);
  }
  return qword_26AF82E88;
}

__n128 re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRootComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRootComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRootComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F1B88;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneUnderstandingRootComponent::~SceneUnderstandingRootComponent(re::ecs2::SceneUnderstandingRootComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F1C80;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      unint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SceneUnderstandingRootComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>*,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SceneUnderstandingRootComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>*,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SceneUnderstandingRootComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>*,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SceneUnderstandingRootComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>*,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SceneUnderstandingRootComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>*,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SceneUnderstandingRootComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>*,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SceneUnderstandingRootComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>*,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SceneUnderstandingRootComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>*,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SceneUnderstandingRootComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SceneUnderstandingRootComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SceneUnderstandingRootComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SceneUnderstandingRootComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>*,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRenderOptionsComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRenderOptionsComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRenderOptionsComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRenderOptionsComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRenderOptionsComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingRenderOptionsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingRenderOptionsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 32, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F1D98;
  *(_DWORD *)(v3 + 25) = 0;
  *(_DWORD *)(v3 + 28) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRenderOptionsComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F1E20;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  unint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRenderOptionsComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82EA0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82EA0))
  {
    qword_26AF82E98 = re::ecs2::introspect_SceneUnderstandingRenderOptionsComponent(0);
    __cxa_guard_release(&qword_26AF82EA0);
  }
  return qword_26AF82E98;
}

__n128 re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRenderOptionsComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRenderOptionsComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRenderOptionsComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F1D28;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneUnderstandingRenderOptionsComponent::~SceneUnderstandingRenderOptionsComponent(re::ecs2::SceneUnderstandingRenderOptionsComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingRenderOptionsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingRenderOptionsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingRenderOptionsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingRenderOptionsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingRenderOptionsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F1E20;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      unint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SceneUnderstandingRenderOptionsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>*,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SceneUnderstandingRenderOptionsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>*,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SceneUnderstandingRenderOptionsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>*,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SceneUnderstandingRenderOptionsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>*,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SceneUnderstandingRenderOptionsComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>*,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SceneUnderstandingRenderOptionsComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>*,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SceneUnderstandingRenderOptionsComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>*,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SceneUnderstandingRenderOptionsComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>*,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SceneUnderstandingRenderOptionsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SceneUnderstandingRenderOptionsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SceneUnderstandingRenderOptionsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SceneUnderstandingRenderOptionsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>*,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::SpatialSceneClassificationComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SpatialSceneClassificationComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::SpatialSceneClassificationComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::SpatialSceneClassificationComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::SpatialSceneClassificationComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::SpatialSceneClassificationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::SpatialSceneClassificationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 48, 0);
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E7034B0;
  *(void *)(v3 + 33) = 0;
  *(void *)(v3 + 25) = 0;
  *(_DWORD *)(v3 + 40) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SpatialSceneClassificationComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F1F38;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  unint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SpatialSceneClassificationComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82EB0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82EB0))
  {
    qword_26AF82EA8 = re::ecs2::introspect_SpatialSceneClassificationComponent(0);
    __cxa_guard_release(&qword_26AF82EB0);
  }
  return qword_26AF82EA8;
}

__n128 re::ecs2::ComponentType<re::ecs2::SpatialSceneClassificationComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SpatialSceneClassificationComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SpatialSceneClassificationComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F1EC8;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F1F38;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      unint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>::registerCallbacks(_DWORD *a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SpatialSceneClassificationComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SpatialSceneClassificationComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SpatialSceneClassificationComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SpatialSceneClassificationComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SpatialSceneClassificationComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SpatialSceneClassificationComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SpatialSceneClassificationComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SpatialSceneClassificationComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SpatialSceneClassificationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SpatialSceneClassificationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SpatialSceneClassificationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SpatialSceneClassificationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::VoiceComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VoiceComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::VoiceComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::VoiceComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

re::ecs2::VoiceComponent *re::ecs2::ComponentType<re::ecs2::VoiceComponent>::doMakeComponent@<X0>(re::ecs2::VoiceComponent **a1@<X8>)
{
  uint64_t v2 = (re::ecs2::VoiceComponent *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::VoiceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                         + 7)
                                                                                      + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::VoiceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 1152, 0);
  double result = re::ecs2::VoiceComponent::VoiceComponent(v2);
  *a1 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VoiceComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F2050;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  unint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VoiceComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82EC0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82EC0))
  {
    qword_26AF82EB8 = re::ecs2::introspect_VoiceComponent(0);
    __cxa_guard_release(&qword_26AF82EC0);
  }
  return qword_26AF82EB8;
}

__n128 re::ecs2::ComponentType<re::ecs2::VoiceComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VoiceComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VoiceComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F1FE0;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F2050;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      unint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VoiceComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>,re::Slice<re::ecs2::VoiceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>*,re::Slice<re::ecs2::VoiceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>,re::Slice<re::ecs2::VoiceComponent*>>::Subscription const&,re::Slice<re::ecs2::VoiceComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VoiceComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>,re::Slice<re::ecs2::VoiceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>*,re::Slice<re::ecs2::VoiceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>,re::Slice<re::ecs2::VoiceComponent*>>::Subscription const&,re::Slice<re::ecs2::VoiceComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VoiceComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>,re::Slice<re::ecs2::VoiceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>*,re::Slice<re::ecs2::VoiceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>,re::Slice<re::ecs2::VoiceComponent*>>::Subscription const&,re::Slice<re::ecs2::VoiceComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VoiceComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>,re::Slice<re::ecs2::VoiceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>*,re::Slice<re::ecs2::VoiceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>,re::Slice<re::ecs2::VoiceComponent*>>::Subscription const&,re::Slice<re::ecs2::VoiceComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VoiceComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>,re::Slice<re::ecs2::VoiceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>*,re::Slice<re::ecs2::VoiceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>,re::Slice<re::ecs2::VoiceComponent*>>::Subscription const&,re::Slice<re::ecs2::VoiceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VoiceComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>,re::Slice<re::ecs2::VoiceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>*,re::Slice<re::ecs2::VoiceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>,re::Slice<re::ecs2::VoiceComponent*>>::Subscription const&,re::Slice<re::ecs2::VoiceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VoiceComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>,re::Slice<re::ecs2::VoiceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>*,re::Slice<re::ecs2::VoiceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>,re::Slice<re::ecs2::VoiceComponent*>>::Subscription const&,re::Slice<re::ecs2::VoiceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VoiceComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>,re::Slice<re::ecs2::VoiceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>*,re::Slice<re::ecs2::VoiceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>,re::Slice<re::ecs2::VoiceComponent*>>::Subscription const&,re::Slice<re::ecs2::VoiceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VoiceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VoiceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VoiceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VoiceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>,re::Slice<re::ecs2::VoiceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>*,re::Slice<re::ecs2::VoiceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>,re::Slice<re::ecs2::VoiceComponent*>>::Subscription const&,re::Slice<re::ecs2::VoiceComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::GroundPlaneComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::GroundPlaneComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::GroundPlaneComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::GroundPlaneComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentType<re::ecs2::GroundPlaneComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F2168;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  unint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::GroundPlaneComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82ED0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82ED0))
  {
    qword_26AF82EC8 = re::ecs2::introspect_GroundPlaneComponent(0);
    __cxa_guard_release(&qword_26AF82ED0);
  }
  return qword_26AF82EC8;
}

__n128 re::ecs2::ComponentType<re::ecs2::GroundPlaneComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::GroundPlaneComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::GroundPlaneComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F20F8;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F2168;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      unint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::GroundPlaneComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>,re::Slice<re::ecs2::GroundPlaneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>*,re::Slice<re::ecs2::GroundPlaneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>,re::Slice<re::ecs2::GroundPlaneComponent*>>::Subscription const&,re::Slice<re::ecs2::GroundPlaneComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::GroundPlaneComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>,re::Slice<re::ecs2::GroundPlaneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>*,re::Slice<re::ecs2::GroundPlaneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>,re::Slice<re::ecs2::GroundPlaneComponent*>>::Subscription const&,re::Slice<re::ecs2::GroundPlaneComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::GroundPlaneComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>,re::Slice<re::ecs2::GroundPlaneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>*,re::Slice<re::ecs2::GroundPlaneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>,re::Slice<re::ecs2::GroundPlaneComponent*>>::Subscription const&,re::Slice<re::ecs2::GroundPlaneComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::GroundPlaneComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>,re::Slice<re::ecs2::GroundPlaneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>*,re::Slice<re::ecs2::GroundPlaneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>,re::Slice<re::ecs2::GroundPlaneComponent*>>::Subscription const&,re::Slice<re::ecs2::GroundPlaneComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::GroundPlaneComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>,re::Slice<re::ecs2::GroundPlaneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>*,re::Slice<re::ecs2::GroundPlaneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>,re::Slice<re::ecs2::GroundPlaneComponent*>>::Subscription const&,re::Slice<re::ecs2::GroundPlaneComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::GroundPlaneComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>,re::Slice<re::ecs2::GroundPlaneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>*,re::Slice<re::ecs2::GroundPlaneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>,re::Slice<re::ecs2::GroundPlaneComponent*>>::Subscription const&,re::Slice<re::ecs2::GroundPlaneComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::GroundPlaneComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>,re::Slice<re::ecs2::GroundPlaneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>*,re::Slice<re::ecs2::GroundPlaneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>,re::Slice<re::ecs2::GroundPlaneComponent*>>::Subscription const&,re::Slice<re::ecs2::GroundPlaneComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::GroundPlaneComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>,re::Slice<re::ecs2::GroundPlaneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>*,re::Slice<re::ecs2::GroundPlaneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>,re::Slice<re::ecs2::GroundPlaneComponent*>>::Subscription const&,re::Slice<re::ecs2::GroundPlaneComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::GroundPlaneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::GroundPlaneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::GroundPlaneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::GroundPlaneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>,re::Slice<re::ecs2::GroundPlaneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>*,re::Slice<re::ecs2::GroundPlaneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>,re::Slice<re::ecs2::GroundPlaneComponent*>>::Subscription const&,re::Slice<re::ecs2::GroundPlaneComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PinComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PinComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PinComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::PinComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::PinComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::PinComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::PinComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 72, 0);
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E7055B0;
  *(void *)(v3 + 64) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = 0;
  *(void *)(v3 + 32) = 0;
  *(_DWORD *)(v3 + 56) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PinComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F2280;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  unint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PinComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82EE0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82EE0))
  {
    qword_26AF82ED8 = re::ecs2::introspect_PinComponent(0);
    __cxa_guard_release(&qword_26AF82EE0);
  }
  return qword_26AF82ED8;
}

__n128 re::ecs2::ComponentType<re::ecs2::PinComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PinComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PinComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F2210;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F2280;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      unint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PinComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>,re::Slice<re::ecs2::PinComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>*,re::Slice<re::ecs2::PinComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>,re::Slice<re::ecs2::PinComponent*>>::Subscription const&,re::Slice<re::ecs2::PinComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PinComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>,re::Slice<re::ecs2::PinComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>*,re::Slice<re::ecs2::PinComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>,re::Slice<re::ecs2::PinComponent*>>::Subscription const&,re::Slice<re::ecs2::PinComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PinComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>,re::Slice<re::ecs2::PinComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>*,re::Slice<re::ecs2::PinComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>,re::Slice<re::ecs2::PinComponent*>>::Subscription const&,re::Slice<re::ecs2::PinComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PinComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>,re::Slice<re::ecs2::PinComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>*,re::Slice<re::ecs2::PinComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>,re::Slice<re::ecs2::PinComponent*>>::Subscription const&,re::Slice<re::ecs2::PinComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PinComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>,re::Slice<re::ecs2::PinComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>*,re::Slice<re::ecs2::PinComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>,re::Slice<re::ecs2::PinComponent*>>::Subscription const&,re::Slice<re::ecs2::PinComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PinComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>,re::Slice<re::ecs2::PinComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>*,re::Slice<re::ecs2::PinComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>,re::Slice<re::ecs2::PinComponent*>>::Subscription const&,re::Slice<re::ecs2::PinComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PinComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>,re::Slice<re::ecs2::PinComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>*,re::Slice<re::ecs2::PinComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>,re::Slice<re::ecs2::PinComponent*>>::Subscription const&,re::Slice<re::ecs2::PinComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PinComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>,re::Slice<re::ecs2::PinComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>*,re::Slice<re::ecs2::PinComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>,re::Slice<re::ecs2::PinComponent*>>::Subscription const&,re::Slice<re::ecs2::PinComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PinComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PinComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PinComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PinComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>,re::Slice<re::ecs2::PinComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>*,re::Slice<re::ecs2::PinComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>,re::Slice<re::ecs2::PinComponent*>>::Subscription const&,re::Slice<re::ecs2::PinComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PhysicsConstraintsComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsConstraintsComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PhysicsConstraintsComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::PhysicsConstraintsComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

id *re::ecs2::ComponentType<re::ecs2::PhysicsConstraintsComponent>::doMakeComponent@<X0>(id **a1@<X8>)
{
  uint64_t v2 = (id *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::PhysicsConstraintsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                   + 7)
                                                                + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::PhysicsConstraintsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 136, 0);
  double result = re::ecs2::PhysicsConstraintsComponent::PhysicsConstraintsComponent(v2);
  *a1 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsConstraintsComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F2398;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  unint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsConstraintsComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82EF0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82EF0))
  {
    qword_26AF82EE8 = re::ecs2::introspect_PhysicsConstraintsComponent(0);
    __cxa_guard_release(&qword_26AF82EF0);
  }
  return qword_26AF82EE8;
}

__n128 re::ecs2::ComponentType<re::ecs2::PhysicsConstraintsComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsConstraintsComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsConstraintsComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F2328;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F2398;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      unint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PhysicsConstraintsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>,re::Slice<re::ecs2::PhysicsConstraintsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>*,re::Slice<re::ecs2::PhysicsConstraintsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>,re::Slice<re::ecs2::PhysicsConstraintsComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsConstraintsComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PhysicsConstraintsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>,re::Slice<re::ecs2::PhysicsConstraintsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>*,re::Slice<re::ecs2::PhysicsConstraintsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>,re::Slice<re::ecs2::PhysicsConstraintsComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsConstraintsComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PhysicsConstraintsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>,re::Slice<re::ecs2::PhysicsConstraintsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>*,re::Slice<re::ecs2::PhysicsConstraintsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>,re::Slice<re::ecs2::PhysicsConstraintsComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsConstraintsComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PhysicsConstraintsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>,re::Slice<re::ecs2::PhysicsConstraintsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>*,re::Slice<re::ecs2::PhysicsConstraintsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>,re::Slice<re::ecs2::PhysicsConstraintsComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsConstraintsComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PhysicsConstraintsComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>,re::Slice<re::ecs2::PhysicsConstraintsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>*,re::Slice<re::ecs2::PhysicsConstraintsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>,re::Slice<re::ecs2::PhysicsConstraintsComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsConstraintsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PhysicsConstraintsComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>,re::Slice<re::ecs2::PhysicsConstraintsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>*,re::Slice<re::ecs2::PhysicsConstraintsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>,re::Slice<re::ecs2::PhysicsConstraintsComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsConstraintsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PhysicsConstraintsComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>,re::Slice<re::ecs2::PhysicsConstraintsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>*,re::Slice<re::ecs2::PhysicsConstraintsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>,re::Slice<re::ecs2::PhysicsConstraintsComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsConstraintsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PhysicsConstraintsComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>,re::Slice<re::ecs2::PhysicsConstraintsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>*,re::Slice<re::ecs2::PhysicsConstraintsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>,re::Slice<re::ecs2::PhysicsConstraintsComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsConstraintsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PhysicsConstraintsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PhysicsConstraintsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PhysicsConstraintsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PhysicsConstraintsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>,re::Slice<re::ecs2::PhysicsConstraintsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>*,re::Slice<re::ecs2::PhysicsConstraintsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>,re::Slice<re::ecs2::PhysicsConstraintsComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsConstraintsComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PortalComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PortalComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PortalComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::PortalComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::PortalComponent>::doMakeComponent(uint64_t *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::PortalComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::PortalComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 176, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F24B0;
  *(void *)(v3 + 32) = 0;
  long long v4 = (re::ecs2::EntityHandle *)(v3 + 40);
  objc_initWeak((id *)(v3 + 40), 0);
  *(void *)(v2 + 48) = 0;
  *(void *)(v2 + 56) = 0;
  re::ecs2::EntityHandle::reset(v4);
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = xmmword_23435FD80;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = xmmword_23435FD80;
  *(_DWORD *)(v2 + 128) = 0x1000000;
  *(void *)(v2 + 136) = 0;
  objc_initWeak((id *)(v2 + 144), 0);
  *(void *)(v2 + 152) = 0;
  *(void *)(v2 + 160) = 0;
  re::ecs2::EntityHandle::reset((re::ecs2::EntityHandle *)(v2 + 144));
  *a1 = v2;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PortalComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F2538;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  unint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PortalComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82F00, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82F00))
  {
    qword_26AF82EF8 = re::ecs2::introspect_PortalComponent(0);
    __cxa_guard_release(&qword_26AF82F00);
  }
  return qword_26AF82EF8;
}

__n128 re::ecs2::ComponentType<re::ecs2::PortalComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PortalComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PortalComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F2440;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::PortalComponent::~PortalComponent(re::ecs2::PortalComponent *this)
{
  uint64_t v2 = (id *)((char *)this + 144);
  re::ecs2::EntityHandle::reset((re::ecs2::PortalComponent *)((char *)this + 144));
  objc_destroyWeak(v2);
  *((void *)this + 18) = 0;
  re::ecs2::EntityHandle::reset((re::ecs2::PortalComponent *)((char *)this + 40));
  objc_destroyWeak((id *)this + 5);
  *((void *)this + 5) = 0;
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  id *v2;
  uint64_t vars8;

  uint64_t v2 = (id *)((char *)this + 144);
  re::ecs2::EntityHandle::reset((re::ecs2::PortalComponent *)((char *)this + 144));
  objc_destroyWeak(v2);
  *((void *)this + 18) = 0;
  re::ecs2::EntityHandle::reset((re::ecs2::PortalComponent *)((char *)this + 40));
  objc_destroyWeak((id *)this + 5);
  *((void *)this + 5) = 0;
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PortalComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::PortalComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PortalComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return 10;
}

void *re::ecs2::ComponentImpl<re::ecs2::PortalComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::PortalComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F2538;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      unint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PortalComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>,re::Slice<re::ecs2::PortalComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>*,re::Slice<re::ecs2::PortalComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>,re::Slice<re::ecs2::PortalComponent*>>::Subscription const&,re::Slice<re::ecs2::PortalComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PortalComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>,re::Slice<re::ecs2::PortalComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>*,re::Slice<re::ecs2::PortalComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>,re::Slice<re::ecs2::PortalComponent*>>::Subscription const&,re::Slice<re::ecs2::PortalComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PortalComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>,re::Slice<re::ecs2::PortalComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>*,re::Slice<re::ecs2::PortalComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>,re::Slice<re::ecs2::PortalComponent*>>::Subscription const&,re::Slice<re::ecs2::PortalComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PortalComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>,re::Slice<re::ecs2::PortalComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>*,re::Slice<re::ecs2::PortalComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>,re::Slice<re::ecs2::PortalComponent*>>::Subscription const&,re::Slice<re::ecs2::PortalComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PortalComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>,re::Slice<re::ecs2::PortalComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>*,re::Slice<re::ecs2::PortalComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>,re::Slice<re::ecs2::PortalComponent*>>::Subscription const&,re::Slice<re::ecs2::PortalComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PortalComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>,re::Slice<re::ecs2::PortalComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>*,re::Slice<re::ecs2::PortalComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>,re::Slice<re::ecs2::PortalComponent*>>::Subscription const&,re::Slice<re::ecs2::PortalComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PortalComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>,re::Slice<re::ecs2::PortalComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>*,re::Slice<re::ecs2::PortalComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>,re::Slice<re::ecs2::PortalComponent*>>::Subscription const&,re::Slice<re::ecs2::PortalComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PortalComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>,re::Slice<re::ecs2::PortalComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>*,re::Slice<re::ecs2::PortalComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>,re::Slice<re::ecs2::PortalComponent*>>::Subscription const&,re::Slice<re::ecs2::PortalComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PortalComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PortalComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PortalComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PortalComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>,re::Slice<re::ecs2::PortalComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>*,re::Slice<re::ecs2::PortalComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>,re::Slice<re::ecs2::PortalComponent*>>::Subscription const&,re::Slice<re::ecs2::PortalComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::WorldScopeComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::WorldScopeComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::WorldScopeComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::WorldScopeComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::WorldScopeComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::WorldScopeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::WorldScopeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 32, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F2650;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::WorldScopeComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F26D8;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  unint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::WorldScopeComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82F10, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82F10))
  {
    qword_26AF82F08 = re::ecs2::introspect_WorldScopeComponent(0);
    __cxa_guard_release(&qword_26AF82F10);
  }
  return qword_26AF82F08;
}

__n128 re::ecs2::ComponentType<re::ecs2::WorldScopeComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::WorldScopeComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::WorldScopeComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F25E0;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::WorldScopeComponent::~WorldScopeComponent(re::ecs2::WorldScopeComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::WorldScopeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::WorldScopeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::WorldScopeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::WorldScopeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::WorldScopeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F26D8;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      unint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::WorldScopeComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>,re::Slice<re::ecs2::WorldScopeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>*,re::Slice<re::ecs2::WorldScopeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>,re::Slice<re::ecs2::WorldScopeComponent*>>::Subscription const&,re::Slice<re::ecs2::WorldScopeComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::WorldScopeComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>,re::Slice<re::ecs2::WorldScopeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>*,re::Slice<re::ecs2::WorldScopeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>,re::Slice<re::ecs2::WorldScopeComponent*>>::Subscription const&,re::Slice<re::ecs2::WorldScopeComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::WorldScopeComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>,re::Slice<re::ecs2::WorldScopeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>*,re::Slice<re::ecs2::WorldScopeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>,re::Slice<re::ecs2::WorldScopeComponent*>>::Subscription const&,re::Slice<re::ecs2::WorldScopeComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::WorldScopeComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>,re::Slice<re::ecs2::WorldScopeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>*,re::Slice<re::ecs2::WorldScopeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>,re::Slice<re::ecs2::WorldScopeComponent*>>::Subscription const&,re::Slice<re::ecs2::WorldScopeComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::WorldScopeComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>,re::Slice<re::ecs2::WorldScopeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>*,re::Slice<re::ecs2::WorldScopeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>,re::Slice<re::ecs2::WorldScopeComponent*>>::Subscription const&,re::Slice<re::ecs2::WorldScopeComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::WorldScopeComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>,re::Slice<re::ecs2::WorldScopeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>*,re::Slice<re::ecs2::WorldScopeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>,re::Slice<re::ecs2::WorldScopeComponent*>>::Subscription const&,re::Slice<re::ecs2::WorldScopeComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::WorldScopeComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>,re::Slice<re::ecs2::WorldScopeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>*,re::Slice<re::ecs2::WorldScopeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>,re::Slice<re::ecs2::WorldScopeComponent*>>::Subscription const&,re::Slice<re::ecs2::WorldScopeComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::WorldScopeComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>,re::Slice<re::ecs2::WorldScopeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>*,re::Slice<re::ecs2::WorldScopeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>,re::Slice<re::ecs2::WorldScopeComponent*>>::Subscription const&,re::Slice<re::ecs2::WorldScopeComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::WorldScopeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::WorldScopeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::WorldScopeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::WorldScopeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>,re::Slice<re::ecs2::WorldScopeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>*,re::Slice<re::ecs2::WorldScopeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>,re::Slice<re::ecs2::WorldScopeComponent*>>::Subscription const&,re::Slice<re::ecs2::WorldScopeComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::WorldRootComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::WorldRootComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::WorldRootComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::WorldRootComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::WorldRootComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::WorldRootComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::WorldRootComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 56, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(void *)(v2 + 48) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F27F0;
  *(void *)(v3 + 32) = 0;
  *(unsigned char *)(v3 + 40) = 1;
  *(void *)(v3 + 48) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::WorldRootComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F2878;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  unint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::WorldRootComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82F20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82F20))
  {
    qword_26AF82F18 = re::ecs2::introspect_WorldRootComponent(0);
    __cxa_guard_release(&qword_26AF82F20);
  }
  return qword_26AF82F18;
}

__n128 re::ecs2::ComponentType<re::ecs2::WorldRootComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::WorldRootComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::WorldRootComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F2780;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::WorldRootComponent::~WorldRootComponent(re::ecs2::WorldRootComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::WorldRootComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::WorldRootComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::WorldRootComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::WorldRootComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::WorldRootComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F2878;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      unint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::WorldRootComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>,re::Slice<re::ecs2::WorldRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>*,re::Slice<re::ecs2::WorldRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>,re::Slice<re::ecs2::WorldRootComponent*>>::Subscription const&,re::Slice<re::ecs2::WorldRootComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::WorldRootComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>,re::Slice<re::ecs2::WorldRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>*,re::Slice<re::ecs2::WorldRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>,re::Slice<re::ecs2::WorldRootComponent*>>::Subscription const&,re::Slice<re::ecs2::WorldRootComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::WorldRootComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>,re::Slice<re::ecs2::WorldRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>*,re::Slice<re::ecs2::WorldRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>,re::Slice<re::ecs2::WorldRootComponent*>>::Subscription const&,re::Slice<re::ecs2::WorldRootComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::WorldRootComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>,re::Slice<re::ecs2::WorldRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>*,re::Slice<re::ecs2::WorldRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>,re::Slice<re::ecs2::WorldRootComponent*>>::Subscription const&,re::Slice<re::ecs2::WorldRootComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::WorldRootComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>,re::Slice<re::ecs2::WorldRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>*,re::Slice<re::ecs2::WorldRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>,re::Slice<re::ecs2::WorldRootComponent*>>::Subscription const&,re::Slice<re::ecs2::WorldRootComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::WorldRootComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>,re::Slice<re::ecs2::WorldRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>*,re::Slice<re::ecs2::WorldRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>,re::Slice<re::ecs2::WorldRootComponent*>>::Subscription const&,re::Slice<re::ecs2::WorldRootComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::WorldRootComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>,re::Slice<re::ecs2::WorldRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>*,re::Slice<re::ecs2::WorldRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>,re::Slice<re::ecs2::WorldRootComponent*>>::Subscription const&,re::Slice<re::ecs2::WorldRootComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::WorldRootComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>,re::Slice<re::ecs2::WorldRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>*,re::Slice<re::ecs2::WorldRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>,re::Slice<re::ecs2::WorldRootComponent*>>::Subscription const&,re::Slice<re::ecs2::WorldRootComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::WorldRootComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::WorldRootComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::WorldRootComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::WorldRootComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>,re::Slice<re::ecs2::WorldRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>*,re::Slice<re::ecs2::WorldRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>,re::Slice<re::ecs2::WorldRootComponent*>>::Subscription const&,re::Slice<re::ecs2::WorldRootComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PortalCrossingFlagsComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PortalCrossingFlagsComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PortalCrossingFlagsComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::PortalCrossingFlagsComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::PortalCrossingFlagsComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::PortalCrossingFlagsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::PortalCrossingFlagsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 32, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F2990;
  *(_WORD *)(v3 + 25) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PortalCrossingFlagsComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F2A18;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  unint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PortalCrossingFlagsComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82F30, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82F30))
  {
    qword_26AF82F28 = re::ecs2::introspect_PortalCrossingFlagsComponent(0);
    __cxa_guard_release(&qword_26AF82F30);
  }
  return qword_26AF82F28;
}

__n128 re::ecs2::ComponentType<re::ecs2::PortalCrossingFlagsComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PortalCrossingFlagsComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PortalCrossingFlagsComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F2920;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::PortalCrossingFlagsComponent::~PortalCrossingFlagsComponent(re::ecs2::PortalCrossingFlagsComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PortalCrossingFlagsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::PortalCrossingFlagsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PortalCrossingFlagsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::PortalCrossingFlagsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::PortalCrossingFlagsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F2A18;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      unint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PortalCrossingFlagsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>*,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>>::Subscription const&,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PortalCrossingFlagsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>*,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>>::Subscription const&,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PortalCrossingFlagsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>*,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>>::Subscription const&,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PortalCrossingFlagsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>*,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>>::Subscription const&,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PortalCrossingFlagsComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>*,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>>::Subscription const&,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PortalCrossingFlagsComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>*,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>>::Subscription const&,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PortalCrossingFlagsComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>*,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>>::Subscription const&,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PortalCrossingFlagsComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>*,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>>::Subscription const&,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PortalCrossingFlagsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PortalCrossingFlagsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PortalCrossingFlagsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PortalCrossingFlagsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>*,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>>::Subscription const&,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::VertexCacheComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VertexCacheComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::VertexCacheComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::VertexCacheComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

uint64_t *re::ecs2::ComponentType<re::ecs2::VertexCacheComponent>::doMakeComponent@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::VertexCacheComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::VertexCacheComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 248, 0);
  return re::make::shared::inplace<re::ecs2::VertexCacheComponent>(v2, a1);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VertexCacheComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F2B30;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  unint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VertexCacheComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82F40, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82F40))
  {
    qword_26AF82F38 = re::ecs2::introspect_VertexCacheComponent(0);
    __cxa_guard_release(&qword_26AF82F40);
  }
  return qword_26AF82F38;
}

__n128 re::ecs2::ComponentType<re::ecs2::VertexCacheComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VertexCacheComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VertexCacheComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F2AC0;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F2B30;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      unint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VertexCacheComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>,re::Slice<re::ecs2::VertexCacheComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>*,re::Slice<re::ecs2::VertexCacheComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>,re::Slice<re::ecs2::VertexCacheComponent*>>::Subscription const&,re::Slice<re::ecs2::VertexCacheComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VertexCacheComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>,re::Slice<re::ecs2::VertexCacheComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>*,re::Slice<re::ecs2::VertexCacheComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>,re::Slice<re::ecs2::VertexCacheComponent*>>::Subscription const&,re::Slice<re::ecs2::VertexCacheComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VertexCacheComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>,re::Slice<re::ecs2::VertexCacheComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>*,re::Slice<re::ecs2::VertexCacheComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>,re::Slice<re::ecs2::VertexCacheComponent*>>::Subscription const&,re::Slice<re::ecs2::VertexCacheComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VertexCacheComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>,re::Slice<re::ecs2::VertexCacheComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>*,re::Slice<re::ecs2::VertexCacheComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>,re::Slice<re::ecs2::VertexCacheComponent*>>::Subscription const&,re::Slice<re::ecs2::VertexCacheComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VertexCacheComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>,re::Slice<re::ecs2::VertexCacheComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>*,re::Slice<re::ecs2::VertexCacheComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>,re::Slice<re::ecs2::VertexCacheComponent*>>::Subscription const&,re::Slice<re::ecs2::VertexCacheComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VertexCacheComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>,re::Slice<re::ecs2::VertexCacheComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>*,re::Slice<re::ecs2::VertexCacheComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>,re::Slice<re::ecs2::VertexCacheComponent*>>::Subscription const&,re::Slice<re::ecs2::VertexCacheComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VertexCacheComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>,re::Slice<re::ecs2::VertexCacheComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>*,re::Slice<re::ecs2::VertexCacheComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>,re::Slice<re::ecs2::VertexCacheComponent*>>::Subscription const&,re::Slice<re::ecs2::VertexCacheComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VertexCacheComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>,re::Slice<re::ecs2::VertexCacheComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>*,re::Slice<re::ecs2::VertexCacheComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>,re::Slice<re::ecs2::VertexCacheComponent*>>::Subscription const&,re::Slice<re::ecs2::VertexCacheComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VertexCacheComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VertexCacheComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VertexCacheComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VertexCacheComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>,re::Slice<re::ecs2::VertexCacheComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>*,re::Slice<re::ecs2::VertexCacheComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>,re::Slice<re::ecs2::VertexCacheComponent*>>::Subscription const&,re::Slice<re::ecs2::VertexCacheComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::VisualProxyCaptureComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyCaptureComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::VisualProxyCaptureComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::VisualProxyCaptureComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

uint64_t *re::ecs2::ComponentType<re::ecs2::VisualProxyCaptureComponent>::doMakeComponent@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::VisualProxyCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 192, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 176) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F2C48;
  *(_WORD *)(v3 + 32) = 256;
  *(unsigned char *)(v3 + 40) = 0;
  *(void *)(v3 + 56) = 0x20000000200;
  *(_DWORD *)(v3 + 64) = 71;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_DWORD *)(v3 + 120) = 0;
  *(void *)(v3 + 124) = 0x7FFFFFFFLL;
  double result = re::globalAllocators((re *)v3);
  *(void *)(v2 + 160) = result[2];
  *(void *)(v2 + 168) = 0;
  *(void *)(v2 + 176) = 0;
  *(_DWORD *)(v2 + 184) = -1;
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyCaptureComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F2CD0;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  unint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyCaptureComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82F50, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82F50))
  {
    qword_26AF82F48 = re::ecs2::introspect_VisualProxyCaptureComponent(0);
    __cxa_guard_release(&qword_26AF82F50);
  }
  return qword_26AF82F48;
}

__n128 re::ecs2::ComponentType<re::ecs2::VisualProxyCaptureComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyCaptureComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyCaptureComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F2BD8;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::VisualProxyCaptureComponent::~VisualProxyCaptureComponent(re::ecs2::VisualProxyCaptureComponent *this)
{
  re::FunctionBase<24ul,void ()(NS::SharedPtr<MTL::Texture>)>::destroyCallable((uint64_t)this + 136);
  re::HashSetBase<re::RigGraphSystem::BuildTask *,re::RigGraphSystem::BuildTask *,re::internal::ValueAsKey<re::RigGraphSystem::BuildTask *>,re::Hash<re::RigGraphSystem::BuildTask *>,re::EqualTo<re::RigGraphSystem::BuildTask *>,true,false>::deinit((uint64_t *)this + 11);
  uint64_t v2 = (const void *)*((void *)this + 10);
  if (v2) {
    CFRelease(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 9);
  if (v3)
  {

    *((void *)this + 9) = 0;
  }
  if (*((unsigned char *)this + 40))
  {
    objc_destroyWeak((id *)this + 6);
    *((void *)this + 6) = 0;
  }
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  const void *v2;
  void *v3;
  uint64_t vars8;

  re::FunctionBase<24ul,void ()(NS::SharedPtr<MTL::Texture>)>::destroyCallable((uint64_t)this + 136);
  re::HashSetBase<re::RigGraphSystem::BuildTask *,re::RigGraphSystem::BuildTask *,re::internal::ValueAsKey<re::RigGraphSystem::BuildTask *>,re::Hash<re::RigGraphSystem::BuildTask *>,re::EqualTo<re::RigGraphSystem::BuildTask *>,true,false>::deinit((uint64_t *)this + 11);
  uint64_t v2 = (const void *)*((void *)this + 10);
  if (v2) {
    CFRelease(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 9);
  if (v3)
  {

    *((void *)this + 9) = 0;
  }
  if (*((unsigned char *)this + 40))
  {
    objc_destroyWeak((id *)this + 6);
    *((void *)this + 6) = 0;
  }
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::VisualProxyCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::VisualProxyCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::VisualProxyCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::VisualProxyCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

uint64_t (***re::FunctionBase<24ul,void ()(NS::SharedPtr<MTL::Texture>)>::destroyCallable(uint64_t a1))(void)
{
  __n128 result = *(uint64_t (****)(void))(a1 + 32);
  if (result)
  {
    __n128 result = (uint64_t (***)(void))(**result)(result);
    if (*(void *)(a1 + 32) != a1) {
      __n128 result = (uint64_t (***)(void))(*(uint64_t (**)(void))(**(void **)(a1 + 24) + 40))(*(void *)(a1 + 24));
    }
    *(void *)(a1 + 32) = 0;
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F2CD0;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      unint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VisualProxyCaptureComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>,re::Slice<re::ecs2::VisualProxyCaptureComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>*,re::Slice<re::ecs2::VisualProxyCaptureComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>,re::Slice<re::ecs2::VisualProxyCaptureComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyCaptureComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VisualProxyCaptureComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>,re::Slice<re::ecs2::VisualProxyCaptureComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>*,re::Slice<re::ecs2::VisualProxyCaptureComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>,re::Slice<re::ecs2::VisualProxyCaptureComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyCaptureComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VisualProxyCaptureComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>,re::Slice<re::ecs2::VisualProxyCaptureComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>*,re::Slice<re::ecs2::VisualProxyCaptureComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>,re::Slice<re::ecs2::VisualProxyCaptureComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyCaptureComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VisualProxyCaptureComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>,re::Slice<re::ecs2::VisualProxyCaptureComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>*,re::Slice<re::ecs2::VisualProxyCaptureComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>,re::Slice<re::ecs2::VisualProxyCaptureComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyCaptureComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VisualProxyCaptureComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>,re::Slice<re::ecs2::VisualProxyCaptureComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>*,re::Slice<re::ecs2::VisualProxyCaptureComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>,re::Slice<re::ecs2::VisualProxyCaptureComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyCaptureComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VisualProxyCaptureComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>,re::Slice<re::ecs2::VisualProxyCaptureComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>*,re::Slice<re::ecs2::VisualProxyCaptureComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>,re::Slice<re::ecs2::VisualProxyCaptureComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyCaptureComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VisualProxyCaptureComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>,re::Slice<re::ecs2::VisualProxyCaptureComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>*,re::Slice<re::ecs2::VisualProxyCaptureComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>,re::Slice<re::ecs2::VisualProxyCaptureComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyCaptureComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VisualProxyCaptureComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>,re::Slice<re::ecs2::VisualProxyCaptureComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>*,re::Slice<re::ecs2::VisualProxyCaptureComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>,re::Slice<re::ecs2::VisualProxyCaptureComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyCaptureComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VisualProxyCaptureComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VisualProxyCaptureComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VisualProxyCaptureComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VisualProxyCaptureComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>,re::Slice<re::ecs2::VisualProxyCaptureComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>*,re::Slice<re::ecs2::VisualProxyCaptureComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>,re::Slice<re::ecs2::VisualProxyCaptureComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyCaptureComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::VisualProxyScopeComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyScopeComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::VisualProxyScopeComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::VisualProxyScopeComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::VisualProxyScopeComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 32, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F2DE8;
  *(_DWORD *)(v3 + 28) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyScopeComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F2E70;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  unint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyScopeComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82F60, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82F60))
  {
    qword_26AF82F58 = re::ecs2::introspect_VisualProxyScopeComponent(0);
    __cxa_guard_release(&qword_26AF82F60);
  }
  return qword_26AF82F58;
}

__n128 re::ecs2::ComponentType<re::ecs2::VisualProxyScopeComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyScopeComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyScopeComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F2D78;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::VisualProxyScopeComponent::~VisualProxyScopeComponent(re::ecs2::VisualProxyScopeComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F2E70;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      unint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VisualProxyScopeComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>,re::Slice<re::ecs2::VisualProxyScopeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>*,re::Slice<re::ecs2::VisualProxyScopeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>,re::Slice<re::ecs2::VisualProxyScopeComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyScopeComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VisualProxyScopeComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>,re::Slice<re::ecs2::VisualProxyScopeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>*,re::Slice<re::ecs2::VisualProxyScopeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>,re::Slice<re::ecs2::VisualProxyScopeComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyScopeComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VisualProxyScopeComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>,re::Slice<re::ecs2::VisualProxyScopeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>*,re::Slice<re::ecs2::VisualProxyScopeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>,re::Slice<re::ecs2::VisualProxyScopeComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyScopeComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VisualProxyScopeComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>,re::Slice<re::ecs2::VisualProxyScopeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>*,re::Slice<re::ecs2::VisualProxyScopeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>,re::Slice<re::ecs2::VisualProxyScopeComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyScopeComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VisualProxyScopeComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>,re::Slice<re::ecs2::VisualProxyScopeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>*,re::Slice<re::ecs2::VisualProxyScopeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>,re::Slice<re::ecs2::VisualProxyScopeComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyScopeComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VisualProxyScopeComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>,re::Slice<re::ecs2::VisualProxyScopeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>*,re::Slice<re::ecs2::VisualProxyScopeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>,re::Slice<re::ecs2::VisualProxyScopeComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyScopeComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VisualProxyScopeComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>,re::Slice<re::ecs2::VisualProxyScopeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>*,re::Slice<re::ecs2::VisualProxyScopeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>,re::Slice<re::ecs2::VisualProxyScopeComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyScopeComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VisualProxyScopeComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>,re::Slice<re::ecs2::VisualProxyScopeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>*,re::Slice<re::ecs2::VisualProxyScopeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>,re::Slice<re::ecs2::VisualProxyScopeComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyScopeComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VisualProxyScopeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VisualProxyScopeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VisualProxyScopeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VisualProxyScopeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>,re::Slice<re::ecs2::VisualProxyScopeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>*,re::Slice<re::ecs2::VisualProxyScopeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>,re::Slice<re::ecs2::VisualProxyScopeComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyScopeComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::VisualProxyScopeTraceComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyScopeTraceComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::VisualProxyScopeTraceComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::VisualProxyScopeTraceComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::VisualProxyScopeTraceComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 32, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(_WORD *)(v3 + 24) = 256;
  *(void *)uint64_t v3 = &unk_26E6F2F88;
  *(_DWORD *)(v3 + 28) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyScopeTraceComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F3010;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  unint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyScopeTraceComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82F70, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82F70))
  {
    qword_26AF82F68 = re::ecs2::introspect_VisualProxyScopeTraceComponent(0);
    __cxa_guard_release(&qword_26AF82F70);
  }
  return qword_26AF82F68;
}

__n128 re::ecs2::ComponentType<re::ecs2::VisualProxyScopeTraceComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyScopeTraceComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyScopeTraceComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F2F18;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::VisualProxyScopeTraceComponent::~VisualProxyScopeTraceComponent(re::ecs2::VisualProxyScopeTraceComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F3010;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      unint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VisualProxyScopeTraceComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>*,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VisualProxyScopeTraceComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>*,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VisualProxyScopeTraceComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>*,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VisualProxyScopeTraceComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>*,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VisualProxyScopeTraceComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>*,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VisualProxyScopeTraceComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>*,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VisualProxyScopeTraceComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>*,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VisualProxyScopeTraceComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>*,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VisualProxyScopeTraceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VisualProxyScopeTraceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VisualProxyScopeTraceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VisualProxyScopeTraceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>*,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::VisualProxyComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::VisualProxyComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::VisualProxyComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::VisualProxyComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::VisualProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 72, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(void *)(v2 + 64) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E51E8;
  *(void *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(_WORD *)(v3 + 48) = 256;
  *(unsigned char *)(v3 + 56) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F3128;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  unint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82F80, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82F80))
  {
    qword_26AF82F78 = re::ecs2::introspect_VisualProxyComponent(0);
    __cxa_guard_release(&qword_26AF82F80);
  }
  return qword_26AF82F78;
}

__n128 re::ecs2::ComponentType<re::ecs2::VisualProxyComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F30B8;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F3128;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      unint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VisualProxyComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>,re::Slice<re::ecs2::VisualProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>*,re::Slice<re::ecs2::VisualProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>,re::Slice<re::ecs2::VisualProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VisualProxyComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>,re::Slice<re::ecs2::VisualProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>*,re::Slice<re::ecs2::VisualProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>,re::Slice<re::ecs2::VisualProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VisualProxyComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>,re::Slice<re::ecs2::VisualProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>*,re::Slice<re::ecs2::VisualProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>,re::Slice<re::ecs2::VisualProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VisualProxyComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>,re::Slice<re::ecs2::VisualProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>*,re::Slice<re::ecs2::VisualProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>,re::Slice<re::ecs2::VisualProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VisualProxyComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>,re::Slice<re::ecs2::VisualProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>*,re::Slice<re::ecs2::VisualProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>,re::Slice<re::ecs2::VisualProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VisualProxyComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>,re::Slice<re::ecs2::VisualProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>*,re::Slice<re::ecs2::VisualProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>,re::Slice<re::ecs2::VisualProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VisualProxyComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>,re::Slice<re::ecs2::VisualProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>*,re::Slice<re::ecs2::VisualProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>,re::Slice<re::ecs2::VisualProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VisualProxyComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>,re::Slice<re::ecs2::VisualProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>*,re::Slice<re::ecs2::VisualProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>,re::Slice<re::ecs2::VisualProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VisualProxyComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VisualProxyComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VisualProxyComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VisualProxyComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>,re::Slice<re::ecs2::VisualProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>*,re::Slice<re::ecs2::VisualProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>,re::Slice<re::ecs2::VisualProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::VisualProxyFilterComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyFilterComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::VisualProxyFilterComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::VisualProxyFilterComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::VisualProxyFilterComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::VisualProxyFilterComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyFilterComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 32, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E5270;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyFilterComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F3240;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  unint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyFilterComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82F90, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82F90))
  {
    qword_26AF82F88 = re::ecs2::introspect_VisualProxyFilterComponent(0);
    __cxa_guard_release(&qword_26AF82F90);
  }
  return qword_26AF82F88;
}

__n128 re::ecs2::ComponentType<re::ecs2::VisualProxyFilterComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyFilterComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyFilterComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F31D0;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F3240;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      unint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VisualProxyFilterComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>,re::Slice<re::ecs2::VisualProxyFilterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>*,re::Slice<re::ecs2::VisualProxyFilterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>,re::Slice<re::ecs2::VisualProxyFilterComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyFilterComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VisualProxyFilterComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>,re::Slice<re::ecs2::VisualProxyFilterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>*,re::Slice<re::ecs2::VisualProxyFilterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>,re::Slice<re::ecs2::VisualProxyFilterComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyFilterComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VisualProxyFilterComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>,re::Slice<re::ecs2::VisualProxyFilterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>*,re::Slice<re::ecs2::VisualProxyFilterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>,re::Slice<re::ecs2::VisualProxyFilterComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyFilterComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VisualProxyFilterComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>,re::Slice<re::ecs2::VisualProxyFilterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>*,re::Slice<re::ecs2::VisualProxyFilterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>,re::Slice<re::ecs2::VisualProxyFilterComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyFilterComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VisualProxyFilterComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>,re::Slice<re::ecs2::VisualProxyFilterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>*,re::Slice<re::ecs2::VisualProxyFilterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>,re::Slice<re::ecs2::VisualProxyFilterComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyFilterComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VisualProxyFilterComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>,re::Slice<re::ecs2::VisualProxyFilterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>*,re::Slice<re::ecs2::VisualProxyFilterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>,re::Slice<re::ecs2::VisualProxyFilterComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyFilterComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VisualProxyFilterComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>,re::Slice<re::ecs2::VisualProxyFilterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>*,re::Slice<re::ecs2::VisualProxyFilterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>,re::Slice<re::ecs2::VisualProxyFilterComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyFilterComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VisualProxyFilterComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>,re::Slice<re::ecs2::VisualProxyFilterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>*,re::Slice<re::ecs2::VisualProxyFilterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>,re::Slice<re::ecs2::VisualProxyFilterComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyFilterComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VisualProxyFilterComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VisualProxyFilterComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VisualProxyFilterComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VisualProxyFilterComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>,re::Slice<re::ecs2::VisualProxyFilterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>*,re::Slice<re::ecs2::VisualProxyFilterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>,re::Slice<re::ecs2::VisualProxyFilterComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyFilterComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::AllowsCASeparatedProxyComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AllowsCASeparatedProxyComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::AllowsCASeparatedProxyComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::AllowsCASeparatedProxyComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::AllowsCASeparatedProxyComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::AllowsCASeparatedProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::AllowsCASeparatedProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 32, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F3358;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AllowsCASeparatedProxyComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F33E0;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  unint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AllowsCASeparatedProxyComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82FA0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82FA0))
  {
    qword_26AF82F98 = re::ecs2::introspect_AllowsCASeparatedProxyComponent(0);
    __cxa_guard_release(&qword_26AF82FA0);
  }
  return qword_26AF82F98;
}

__n128 re::ecs2::ComponentType<re::ecs2::AllowsCASeparatedProxyComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AllowsCASeparatedProxyComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AllowsCASeparatedProxyComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F32E8;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::AllowsCASeparatedProxyComponent::~AllowsCASeparatedProxyComponent(re::ecs2::AllowsCASeparatedProxyComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AllowsCASeparatedProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::AllowsCASeparatedProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AllowsCASeparatedProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::AllowsCASeparatedProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::AllowsCASeparatedProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F33E0;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      unint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AllowsCASeparatedProxyComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>*,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AllowsCASeparatedProxyComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>*,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AllowsCASeparatedProxyComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>*,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AllowsCASeparatedProxyComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>*,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AllowsCASeparatedProxyComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>*,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AllowsCASeparatedProxyComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>*,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AllowsCASeparatedProxyComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>*,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AllowsCASeparatedProxyComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>*,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AllowsCASeparatedProxyComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AllowsCASeparatedProxyComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AllowsCASeparatedProxyComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AllowsCASeparatedProxyComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>*,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ReferenceComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ReferenceComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ReferenceComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::ReferenceComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::ReferenceComponent>::doMakeComponent(uint64_t *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::ReferenceComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::ReferenceComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 128, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F34F8;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  long long v4 = (_anonymous_namespace_ *)re::DynamicString::setCapacity((void *)(v2 + 32), 0);
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  re::DynamicString::setCapacity((void *)(v2 + 64), 0);
  *(_WORD *)(v2 + 96) = 0;
  *(unsigned char *)(v2 + 98) = 0;
  objc_initWeak((id *)(v2 + 104), 0);
  *(void *)(v2 + 112) = 0;
  *(void *)(v2 + 120) = 0;
  re::ecs2::EntityHandle::reset((re::ecs2::EntityHandle *)(v2 + 104));
  *a1 = v2;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ReferenceComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F3580;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  unint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

char *re::ecs2::ComponentType<re::ecs2::ReferenceComponent>::doGetComponentIntrospectionInfo()
{
  v0 = re::KTXTextureCompiler::getSupportedExtensions(void)const::supportedExtensions;
  {
    v0 = re::KTXTextureCompiler::getSupportedExtensions(void)const::supportedExtensions;
    if (v2)
    {
      re::introspect<re::ecs2::ReferenceComponent>(void)::info = (_UNKNOWN *)re::ecs2::introspect_ReferenceComponent(0);
      v0 = re::KTXTextureCompiler::getSupportedExtensions(void)const::supportedExtensions;
    }
  }
  return v0[255];
}

__n128 re::ecs2::ComponentType<re::ecs2::ReferenceComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ReferenceComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ReferenceComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F3488;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::ReferenceComponent::~ReferenceComponent(re::ecs2::ReferenceComponent *this)
{
  int v2 = (id *)((char *)this + 104);
  re::ecs2::EntityHandle::reset((re::ecs2::ReferenceComponent *)((char *)this + 104));
  objc_destroyWeak(v2);
  *((void *)this + 13) = 0;
  re::DynamicString::deinit((re::ecs2::ReferenceComponent *)((char *)this + 64));
  re::DynamicString::deinit((re::ecs2::ReferenceComponent *)((char *)this + 32));
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  id *v2;
  uint64_t vars8;

  int v2 = (id *)((char *)this + 104);
  re::ecs2::EntityHandle::reset((re::ecs2::ReferenceComponent *)((char *)this + 104));
  objc_destroyWeak(v2);
  *((void *)this + 13) = 0;
  re::DynamicString::deinit((re::ecs2::ReferenceComponent *)((char *)this + 64));
  re::DynamicString::deinit((re::ecs2::ReferenceComponent *)((char *)this + 32));
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ReferenceComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::ReferenceComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ReferenceComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::ReferenceComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::ReferenceComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F3580;
  int v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      unint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ReferenceComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>,re::Slice<re::ecs2::ReferenceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>*,re::Slice<re::ecs2::ReferenceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>,re::Slice<re::ecs2::ReferenceComponent*>>::Subscription const&,re::Slice<re::ecs2::ReferenceComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ReferenceComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>,re::Slice<re::ecs2::ReferenceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>*,re::Slice<re::ecs2::ReferenceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>,re::Slice<re::ecs2::ReferenceComponent*>>::Subscription const&,re::Slice<re::ecs2::ReferenceComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ReferenceComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>,re::Slice<re::ecs2::ReferenceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>*,re::Slice<re::ecs2::ReferenceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>,re::Slice<re::ecs2::ReferenceComponent*>>::Subscription const&,re::Slice<re::ecs2::ReferenceComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ReferenceComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>,re::Slice<re::ecs2::ReferenceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>*,re::Slice<re::ecs2::ReferenceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>,re::Slice<re::ecs2::ReferenceComponent*>>::Subscription const&,re::Slice<re::ecs2::ReferenceComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ReferenceComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>,re::Slice<re::ecs2::ReferenceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>*,re::Slice<re::ecs2::ReferenceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>,re::Slice<re::ecs2::ReferenceComponent*>>::Subscription const&,re::Slice<re::ecs2::ReferenceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ReferenceComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>,re::Slice<re::ecs2::ReferenceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>*,re::Slice<re::ecs2::ReferenceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>,re::Slice<re::ecs2::ReferenceComponent*>>::Subscription const&,re::Slice<re::ecs2::ReferenceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ReferenceComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>,re::Slice<re::ecs2::ReferenceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>*,re::Slice<re::ecs2::ReferenceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>,re::Slice<re::ecs2::ReferenceComponent*>>::Subscription const&,re::Slice<re::ecs2::ReferenceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ReferenceComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>,re::Slice<re::ecs2::ReferenceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>*,re::Slice<re::ecs2::ReferenceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>,re::Slice<re::ecs2::ReferenceComponent*>>::Subscription const&,re::Slice<re::ecs2::ReferenceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ReferenceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ReferenceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ReferenceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ReferenceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>,re::Slice<re::ecs2::ReferenceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>*,re::Slice<re::ecs2::ReferenceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>,re::Slice<re::ecs2::ReferenceComponent*>>::Subscription const&,re::Slice<re::ecs2::ReferenceComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ThrottleComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ThrottleComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ThrottleComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::ThrottleComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::ThrottleComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::ThrottleComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::ThrottleComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 40, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(void *)(v2 + 32) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F3698;
  *(_DWORD *)(v3 + 28) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ThrottleComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F3720;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  unint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ThrottleComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82FB0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82FB0))
  {
    qword_26AF82FA8 = re::ecs2::introspect_ThrottleComponent(0);
    __cxa_guard_release(&qword_26AF82FB0);
  }
  return qword_26AF82FA8;
}

__n128 re::ecs2::ComponentType<re::ecs2::ThrottleComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ThrottleComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ThrottleComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F3628;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::ThrottleComponent::~ThrottleComponent(re::ecs2::ThrottleComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ThrottleComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::ThrottleComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ThrottleComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::ThrottleComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::ThrottleComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F3720;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      unint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ThrottleComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>,re::Slice<re::ecs2::ThrottleComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>*,re::Slice<re::ecs2::ThrottleComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>,re::Slice<re::ecs2::ThrottleComponent*>>::Subscription const&,re::Slice<re::ecs2::ThrottleComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ThrottleComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>,re::Slice<re::ecs2::ThrottleComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>*,re::Slice<re::ecs2::ThrottleComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>,re::Slice<re::ecs2::ThrottleComponent*>>::Subscription const&,re::Slice<re::ecs2::ThrottleComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ThrottleComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>,re::Slice<re::ecs2::ThrottleComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>*,re::Slice<re::ecs2::ThrottleComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>,re::Slice<re::ecs2::ThrottleComponent*>>::Subscription const&,re::Slice<re::ecs2::ThrottleComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ThrottleComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>,re::Slice<re::ecs2::ThrottleComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>*,re::Slice<re::ecs2::ThrottleComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>,re::Slice<re::ecs2::ThrottleComponent*>>::Subscription const&,re::Slice<re::ecs2::ThrottleComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ThrottleComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>,re::Slice<re::ecs2::ThrottleComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>*,re::Slice<re::ecs2::ThrottleComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>,re::Slice<re::ecs2::ThrottleComponent*>>::Subscription const&,re::Slice<re::ecs2::ThrottleComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ThrottleComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>,re::Slice<re::ecs2::ThrottleComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>*,re::Slice<re::ecs2::ThrottleComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>,re::Slice<re::ecs2::ThrottleComponent*>>::Subscription const&,re::Slice<re::ecs2::ThrottleComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ThrottleComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>,re::Slice<re::ecs2::ThrottleComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>*,re::Slice<re::ecs2::ThrottleComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>,re::Slice<re::ecs2::ThrottleComponent*>>::Subscription const&,re::Slice<re::ecs2::ThrottleComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ThrottleComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>,re::Slice<re::ecs2::ThrottleComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>*,re::Slice<re::ecs2::ThrottleComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>,re::Slice<re::ecs2::ThrottleComponent*>>::Subscription const&,re::Slice<re::ecs2::ThrottleComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ThrottleComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ThrottleComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ThrottleComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ThrottleComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>,re::Slice<re::ecs2::ThrottleComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>*,re::Slice<re::ecs2::ThrottleComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>,re::Slice<re::ecs2::ThrottleComponent*>>::Subscription const&,re::Slice<re::ecs2::ThrottleComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::TimebaseComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::TimebaseComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::TimebaseComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::TimebaseComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

__n128 re::ecs2::ComponentType<re::ecs2::TimebaseComponent>::doMakeComponent@<Q0>(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::TimebaseComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::TimebaseComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 176, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 0u;
  *((_OWORD *)v2 + 8) = 0u;
  *((_OWORD *)v2 + 9) = 0u;
  *((_OWORD *)v2 + 10) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F3838;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_DWORD *)(v3 + 64) = 0;
  *(void *)(v3 + 68) = 0x7FFFFFFFLL;
  *(void *)(v3 + 80) = 0;
  uint64_t v4 = MEMORY[0x263F010E0];
  __n128 result = *(__n128 *)MEMORY[0x263F010E0];
  *(_OWORD *)(v3 + 88) = *MEMORY[0x263F010E0];
  uint64_t v6 = *(void *)(v4 + 16);
  *(void *)(v3 + 104) = v6;
  *(__n128 *)(v3 + 112) = result;
  *(unsigned char *)(v3 + 152) = 0;
  *(void *)(v3 + 128) = v6;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(unsigned char *)(v3 + 160) = 0;
  *(void *)(v3 + 168) = 0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::TimebaseComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F38C0;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  uint64_t v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::TimebaseComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82FC0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82FC0))
  {
    qword_26AF82FB8 = re::ecs2::introspect_TimebaseComponent(0);
    __cxa_guard_release(&qword_26AF82FC0);
  }
  return qword_26AF82FB8;
}

__n128 re::ecs2::ComponentType<re::ecs2::TimebaseComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::TimebaseComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::TimebaseComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F37C8;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::TimebaseComponent::~TimebaseComponent(re::ecs2::TimebaseComponent *this)
{
  *(void *)this = &unk_26E6F3838;
  re::HashTable<unsigned long long,re::ClockOrTimebase,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::deinit((uint64_t *)this + 4);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6F3838;
  re::HashTable<unsigned long long,re::ClockOrTimebase,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::deinit((uint64_t *)this + 4);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::TimebaseComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::TimebaseComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::TimebaseComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::TimebaseComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::TimebaseComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

double re::HashTable<unsigned long long,re::ClockOrTimebase,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::deinit(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2)
  {
    unsigned int v3 = *((_DWORD *)a1 + 8);
    if (v3)
    {
      uint64_t v4 = 0;
      uint64_t v5 = 200 * v3;
      do
      {
        uint64_t v6 = a1[2] + v4;
        int v7 = *(_DWORD *)(v6 + 8);
        if (v7 < 0) {
          *(_DWORD *)(v6 + 8) = v7 & 0x7FFFFFFF;
        }
        v4 += 200;
      }
      while (v5 != v4);
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)v2 + 40))(v2, a1[1]);
    *((_DWORD *)a1 + 8) = 0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
    *(void *)&double result = 0x7FFFFFFFLL;
    *(uint64_t *)((char *)a1 + 36) = 0x7FFFFFFFLL;
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F38C0;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>::registerCallbacks(_DWORD *a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::TimebaseComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>,re::Slice<re::ecs2::TimebaseComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>*,re::Slice<re::ecs2::TimebaseComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>,re::Slice<re::ecs2::TimebaseComponent*>>::Subscription const&,re::Slice<re::ecs2::TimebaseComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::TimebaseComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>,re::Slice<re::ecs2::TimebaseComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>*,re::Slice<re::ecs2::TimebaseComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>,re::Slice<re::ecs2::TimebaseComponent*>>::Subscription const&,re::Slice<re::ecs2::TimebaseComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::TimebaseComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>,re::Slice<re::ecs2::TimebaseComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>*,re::Slice<re::ecs2::TimebaseComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>,re::Slice<re::ecs2::TimebaseComponent*>>::Subscription const&,re::Slice<re::ecs2::TimebaseComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::TimebaseComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>,re::Slice<re::ecs2::TimebaseComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>*,re::Slice<re::ecs2::TimebaseComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>,re::Slice<re::ecs2::TimebaseComponent*>>::Subscription const&,re::Slice<re::ecs2::TimebaseComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::TimebaseComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>,re::Slice<re::ecs2::TimebaseComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>*,re::Slice<re::ecs2::TimebaseComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>,re::Slice<re::ecs2::TimebaseComponent*>>::Subscription const&,re::Slice<re::ecs2::TimebaseComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::TimebaseComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>,re::Slice<re::ecs2::TimebaseComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>*,re::Slice<re::ecs2::TimebaseComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>,re::Slice<re::ecs2::TimebaseComponent*>>::Subscription const&,re::Slice<re::ecs2::TimebaseComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::TimebaseComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>,re::Slice<re::ecs2::TimebaseComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>*,re::Slice<re::ecs2::TimebaseComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>,re::Slice<re::ecs2::TimebaseComponent*>>::Subscription const&,re::Slice<re::ecs2::TimebaseComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::TimebaseComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>,re::Slice<re::ecs2::TimebaseComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>*,re::Slice<re::ecs2::TimebaseComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>,re::Slice<re::ecs2::TimebaseComponent*>>::Subscription const&,re::Slice<re::ecs2::TimebaseComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::TimebaseComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::TimebaseComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::TimebaseComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::TimebaseComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>,re::Slice<re::ecs2::TimebaseComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>*,re::Slice<re::ecs2::TimebaseComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>,re::Slice<re::ecs2::TimebaseComponent*>>::Subscription const&,re::Slice<re::ecs2::TimebaseComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::NetworkAssetComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::NetworkAssetComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::NetworkAssetComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::NetworkAssetComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::NetworkAssetComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::NetworkAssetComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::NetworkAssetComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 216, 0);
  return re::make::shared::inplace<re::ecs2::NetworkAssetComponent>(v2, a1);
}

uint64_t re::ecs2::ComponentType<re::ecs2::NetworkAssetComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F39D8;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::NetworkAssetComponent>::doGetComponentIntrospectionInfo()
{
  v0 = &qword_268772000;
  {
    v0 = &qword_268772000;
    if (v2)
    {
      re::introspect<re::ecs2::NetworkAssetComponent>(void)::info = (_UNKNOWN *)re::ecs2::introspect_NetworkAssetComponent(0);
      v0 = &qword_268772000;
    }
  }
  return v0[436];
}

__n128 re::ecs2::ComponentType<re::ecs2::NetworkAssetComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::NetworkAssetComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::NetworkAssetComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F3968;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F39D8;
  int v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>::registerCallbacks(_DWORD *a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::NetworkAssetComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>,re::Slice<re::ecs2::NetworkAssetComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>*,re::Slice<re::ecs2::NetworkAssetComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>,re::Slice<re::ecs2::NetworkAssetComponent*>>::Subscription const&,re::Slice<re::ecs2::NetworkAssetComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::NetworkAssetComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>,re::Slice<re::ecs2::NetworkAssetComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>*,re::Slice<re::ecs2::NetworkAssetComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>,re::Slice<re::ecs2::NetworkAssetComponent*>>::Subscription const&,re::Slice<re::ecs2::NetworkAssetComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::NetworkAssetComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>,re::Slice<re::ecs2::NetworkAssetComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>*,re::Slice<re::ecs2::NetworkAssetComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>,re::Slice<re::ecs2::NetworkAssetComponent*>>::Subscription const&,re::Slice<re::ecs2::NetworkAssetComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::NetworkAssetComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>,re::Slice<re::ecs2::NetworkAssetComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>*,re::Slice<re::ecs2::NetworkAssetComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>,re::Slice<re::ecs2::NetworkAssetComponent*>>::Subscription const&,re::Slice<re::ecs2::NetworkAssetComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::NetworkAssetComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>,re::Slice<re::ecs2::NetworkAssetComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>*,re::Slice<re::ecs2::NetworkAssetComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>,re::Slice<re::ecs2::NetworkAssetComponent*>>::Subscription const&,re::Slice<re::ecs2::NetworkAssetComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::NetworkAssetComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>,re::Slice<re::ecs2::NetworkAssetComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>*,re::Slice<re::ecs2::NetworkAssetComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>,re::Slice<re::ecs2::NetworkAssetComponent*>>::Subscription const&,re::Slice<re::ecs2::NetworkAssetComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::NetworkAssetComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>,re::Slice<re::ecs2::NetworkAssetComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>*,re::Slice<re::ecs2::NetworkAssetComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>,re::Slice<re::ecs2::NetworkAssetComponent*>>::Subscription const&,re::Slice<re::ecs2::NetworkAssetComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::NetworkAssetComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>,re::Slice<re::ecs2::NetworkAssetComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>*,re::Slice<re::ecs2::NetworkAssetComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>,re::Slice<re::ecs2::NetworkAssetComponent*>>::Subscription const&,re::Slice<re::ecs2::NetworkAssetComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::NetworkAssetComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::NetworkAssetComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::NetworkAssetComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::NetworkAssetComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>,re::Slice<re::ecs2::NetworkAssetComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>*,re::Slice<re::ecs2::NetworkAssetComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>,re::Slice<re::ecs2::NetworkAssetComponent*>>::Subscription const&,re::Slice<re::ecs2::NetworkAssetComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::DeferredActivationComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::DeferredActivationComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::DeferredActivationComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::DeferredActivationComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::DeferredActivationComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::DeferredActivationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::DeferredActivationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 40, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(void *)(v2 + 32) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F3AF0;
  *(void *)(v3 + 32) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DeferredActivationComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F3B78;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DeferredActivationComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82FD0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82FD0))
  {
    qword_26AF82FC8 = re::ecs2::introspect_DeferredActivationComponent(0);
    __cxa_guard_release(&qword_26AF82FD0);
  }
  return qword_26AF82FC8;
}

__n128 re::ecs2::ComponentType<re::ecs2::DeferredActivationComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DeferredActivationComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::DeferredActivationComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F3A80;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::DeferredActivationComponent::~DeferredActivationComponent(re::ecs2::DeferredActivationComponent *this)
{
  *(void *)this = &unk_26E6F3AF0;
  uint64_t v2 = *((void *)this + 4);
  if (v2)
  {

    *((void *)this + 4) = 0;
  }
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t v2;
  uint64_t vars8;

  *(void *)this = &unk_26E6F3AF0;
  uint64_t v2 = *((void *)this + 4);
  if (v2)
  {

    *((void *)this + 4) = 0;
  }
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::DeferredActivationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::DeferredActivationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::DeferredActivationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::DeferredActivationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::DeferredActivationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F3B78;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DeferredActivationComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>,re::Slice<re::ecs2::DeferredActivationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>*,re::Slice<re::ecs2::DeferredActivationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>,re::Slice<re::ecs2::DeferredActivationComponent*>>::Subscription const&,re::Slice<re::ecs2::DeferredActivationComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DeferredActivationComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>,re::Slice<re::ecs2::DeferredActivationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>*,re::Slice<re::ecs2::DeferredActivationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>,re::Slice<re::ecs2::DeferredActivationComponent*>>::Subscription const&,re::Slice<re::ecs2::DeferredActivationComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DeferredActivationComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>,re::Slice<re::ecs2::DeferredActivationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>*,re::Slice<re::ecs2::DeferredActivationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>,re::Slice<re::ecs2::DeferredActivationComponent*>>::Subscription const&,re::Slice<re::ecs2::DeferredActivationComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DeferredActivationComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>,re::Slice<re::ecs2::DeferredActivationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>*,re::Slice<re::ecs2::DeferredActivationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>,re::Slice<re::ecs2::DeferredActivationComponent*>>::Subscription const&,re::Slice<re::ecs2::DeferredActivationComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DeferredActivationComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>,re::Slice<re::ecs2::DeferredActivationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>*,re::Slice<re::ecs2::DeferredActivationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>,re::Slice<re::ecs2::DeferredActivationComponent*>>::Subscription const&,re::Slice<re::ecs2::DeferredActivationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DeferredActivationComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>,re::Slice<re::ecs2::DeferredActivationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>*,re::Slice<re::ecs2::DeferredActivationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>,re::Slice<re::ecs2::DeferredActivationComponent*>>::Subscription const&,re::Slice<re::ecs2::DeferredActivationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DeferredActivationComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>,re::Slice<re::ecs2::DeferredActivationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>*,re::Slice<re::ecs2::DeferredActivationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>,re::Slice<re::ecs2::DeferredActivationComponent*>>::Subscription const&,re::Slice<re::ecs2::DeferredActivationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DeferredActivationComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>,re::Slice<re::ecs2::DeferredActivationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>*,re::Slice<re::ecs2::DeferredActivationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>,re::Slice<re::ecs2::DeferredActivationComponent*>>::Subscription const&,re::Slice<re::ecs2::DeferredActivationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DeferredActivationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DeferredActivationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DeferredActivationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DeferredActivationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>,re::Slice<re::ecs2::DeferredActivationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>*,re::Slice<re::ecs2::DeferredActivationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>,re::Slice<re::ecs2::DeferredActivationComponent*>>::Subscription const&,re::Slice<re::ecs2::DeferredActivationComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::LoadTraceComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::LoadTraceComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::LoadTraceComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::LoadTraceComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::LoadTraceComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::LoadTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::LoadTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 232, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 176) = 0u;
  *(_OWORD *)(v2 + 192) = 0u;
  *(_OWORD *)(v2 + 208) = 0u;
  *(void *)(v2 + 224) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F3C90;
  *(_DWORD *)(v3 + 28) = 0;
  *(_WORD *)(v3 + 32) = 0;
  *(_OWORD *)(v3 + 40) = 0u;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_DWORD *)(v3 + 72) = 0;
  *(void *)&double result = 0x7FFFFFFFLL;
  *(void *)(v3 + 76) = 0x7FFFFFFFLL;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_DWORD *)(v3 + 120) = 0;
  *(void *)(v3 + 124) = 0x7FFFFFFFLL;
  *(_OWORD *)(v3 + 136) = 0u;
  *(_OWORD *)(v3 + 152) = 0u;
  *(_DWORD *)(v3 + 168) = 0;
  *(void *)(v3 + 172) = 0x7FFFFFFFLL;
  *(_OWORD *)(v3 + 184) = 0u;
  *(_OWORD *)(v3 + 200) = 0u;
  *(_DWORD *)(v3 + 216) = 0;
  *(void *)(v3 + 220) = 0x7FFFFFFFLL;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::LoadTraceComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F3D18;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::LoadTraceComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82FE0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82FE0))
  {
    qword_26AF82FD8 = re::ecs2::introspect_LoadTraceComponent(0);
    __cxa_guard_release(&qword_26AF82FE0);
  }
  return qword_26AF82FD8;
}

__n128 re::ecs2::ComponentType<re::ecs2::LoadTraceComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::LoadTraceComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::LoadTraceComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F3C20;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::LoadTraceComponent::~LoadTraceComponent(re::ecs2::LoadTraceComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  re::HashSetBase<re::AssetHandle,re::AssetHandle,re::internal::ValueAsKey<re::AssetHandle>,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 23);
  re::HashSetBase<re::AssetHandle,re::AssetHandle,re::internal::ValueAsKey<re::AssetHandle>,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 17);
  re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 11);
  re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::LoadTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::LoadTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::LoadTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::LoadTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::LoadTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

double re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2)
  {
    unint64_t v3 = *((unsigned int *)a1 + 8);
    if (v3)
    {
      unint64_t v4 = 0;
      uint64_t v5 = 8;
      do
      {
        uint64_t v6 = a1[2];
        int v7 = *(_DWORD *)(v6 + v5);
        if (v7 < 0)
        {
          *(_DWORD *)(v6 + vre::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = v7 & 0x7FFFFFFF;
          re::AssetHandle::~AssetHandle((re::AssetHandle *)(v6 + v5 + 8));
          unint64_t v3 = *((unsigned int *)a1 + 8);
        }
        ++v4;
        v5 += 48;
      }
      while (v4 < v3);
      uint64_t v2 = *a1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)v2 + 40))(v2, a1[1]);
    *((_DWORD *)a1 + 8) = 0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
    *(void *)&double result = 0x7FFFFFFFLL;
    *(uint64_t *)((char *)a1 + 36) = 0x7FFFFFFFLL;
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F3D18;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::LoadTraceComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>,re::Slice<re::ecs2::LoadTraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>*,re::Slice<re::ecs2::LoadTraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>,re::Slice<re::ecs2::LoadTraceComponent*>>::Subscription const&,re::Slice<re::ecs2::LoadTraceComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::LoadTraceComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>,re::Slice<re::ecs2::LoadTraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>*,re::Slice<re::ecs2::LoadTraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>,re::Slice<re::ecs2::LoadTraceComponent*>>::Subscription const&,re::Slice<re::ecs2::LoadTraceComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::LoadTraceComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>,re::Slice<re::ecs2::LoadTraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>*,re::Slice<re::ecs2::LoadTraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>,re::Slice<re::ecs2::LoadTraceComponent*>>::Subscription const&,re::Slice<re::ecs2::LoadTraceComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::LoadTraceComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>,re::Slice<re::ecs2::LoadTraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>*,re::Slice<re::ecs2::LoadTraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>,re::Slice<re::ecs2::LoadTraceComponent*>>::Subscription const&,re::Slice<re::ecs2::LoadTraceComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::LoadTraceComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>,re::Slice<re::ecs2::LoadTraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>*,re::Slice<re::ecs2::LoadTraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>,re::Slice<re::ecs2::LoadTraceComponent*>>::Subscription const&,re::Slice<re::ecs2::LoadTraceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::LoadTraceComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>,re::Slice<re::ecs2::LoadTraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>*,re::Slice<re::ecs2::LoadTraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>,re::Slice<re::ecs2::LoadTraceComponent*>>::Subscription const&,re::Slice<re::ecs2::LoadTraceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::LoadTraceComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>,re::Slice<re::ecs2::LoadTraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>*,re::Slice<re::ecs2::LoadTraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>,re::Slice<re::ecs2::LoadTraceComponent*>>::Subscription const&,re::Slice<re::ecs2::LoadTraceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::LoadTraceComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>,re::Slice<re::ecs2::LoadTraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>*,re::Slice<re::ecs2::LoadTraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>,re::Slice<re::ecs2::LoadTraceComponent*>>::Subscription const&,re::Slice<re::ecs2::LoadTraceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::LoadTraceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::LoadTraceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::LoadTraceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::LoadTraceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>,re::Slice<re::ecs2::LoadTraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>*,re::Slice<re::ecs2::LoadTraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>,re::Slice<re::ecs2::LoadTraceComponent*>>::Subscription const&,re::Slice<re::ecs2::LoadTraceComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::LatencyEventsComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::LatencyEventsComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::LatencyEventsComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::LatencyEventsComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::LatencyEventsComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::LatencyEventsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::LatencyEventsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 48, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E5808;
  *(void *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::LatencyEventsComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F3E30;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::LatencyEventsComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82FF0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82FF0))
  {
    qword_26AF82FE8 = re::ecs2::introspect_LatencyEventsComponent(0);
    __cxa_guard_release(&qword_26AF82FF0);
  }
  return qword_26AF82FE8;
}

__n128 re::ecs2::ComponentType<re::ecs2::LatencyEventsComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::LatencyEventsComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::LatencyEventsComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F3DC0;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F3E30;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::LatencyEventsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>,re::Slice<re::ecs2::LatencyEventsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>*,re::Slice<re::ecs2::LatencyEventsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>,re::Slice<re::ecs2::LatencyEventsComponent*>>::Subscription const&,re::Slice<re::ecs2::LatencyEventsComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::LatencyEventsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>,re::Slice<re::ecs2::LatencyEventsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>*,re::Slice<re::ecs2::LatencyEventsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>,re::Slice<re::ecs2::LatencyEventsComponent*>>::Subscription const&,re::Slice<re::ecs2::LatencyEventsComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::LatencyEventsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>,re::Slice<re::ecs2::LatencyEventsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>*,re::Slice<re::ecs2::LatencyEventsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>,re::Slice<re::ecs2::LatencyEventsComponent*>>::Subscription const&,re::Slice<re::ecs2::LatencyEventsComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::LatencyEventsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>,re::Slice<re::ecs2::LatencyEventsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>*,re::Slice<re::ecs2::LatencyEventsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>,re::Slice<re::ecs2::LatencyEventsComponent*>>::Subscription const&,re::Slice<re::ecs2::LatencyEventsComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::LatencyEventsComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>,re::Slice<re::ecs2::LatencyEventsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>*,re::Slice<re::ecs2::LatencyEventsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>,re::Slice<re::ecs2::LatencyEventsComponent*>>::Subscription const&,re::Slice<re::ecs2::LatencyEventsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::LatencyEventsComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>,re::Slice<re::ecs2::LatencyEventsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>*,re::Slice<re::ecs2::LatencyEventsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>,re::Slice<re::ecs2::LatencyEventsComponent*>>::Subscription const&,re::Slice<re::ecs2::LatencyEventsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::LatencyEventsComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>,re::Slice<re::ecs2::LatencyEventsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>*,re::Slice<re::ecs2::LatencyEventsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>,re::Slice<re::ecs2::LatencyEventsComponent*>>::Subscription const&,re::Slice<re::ecs2::LatencyEventsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::LatencyEventsComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>,re::Slice<re::ecs2::LatencyEventsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>*,re::Slice<re::ecs2::LatencyEventsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>,re::Slice<re::ecs2::LatencyEventsComponent*>>::Subscription const&,re::Slice<re::ecs2::LatencyEventsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::LatencyEventsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::LatencyEventsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::LatencyEventsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::LatencyEventsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>,re::Slice<re::ecs2::LatencyEventsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>*,re::Slice<re::ecs2::LatencyEventsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LatencyEventsComponent>,re::Slice<re::ecs2::LatencyEventsComponent*>>::Subscription const&,re::Slice<re::ecs2::LatencyEventsComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::RenderCallbacksComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::RenderCallbacksComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::RenderCallbacksComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::RenderCallbacksComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

re::ecs2::RenderCallbacksComponent *re::ecs2::ComponentType<re::ecs2::RenderCallbacksComponent>::doMakeComponent@<X0>(re::ecs2::RenderCallbacksComponent **a1@<X8>)
{
  uint64_t v2 = (re::ecs2::RenderCallbacksComponent *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::RenderCallbacksComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType + 7)
                                                                                                + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::RenderCallbacksComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 152, 0);
  double result = re::ecs2::RenderCallbacksComponent::RenderCallbacksComponent(v2);
  *a1 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RenderCallbacksComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F3F48;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RenderCallbacksComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83000, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF83000))
  {
    qword_26AF82FF8 = re::ecs2::introspect_RenderCallbacksComponent(0);
    __cxa_guard_release(&qword_26AF83000);
  }
  return qword_26AF82FF8;
}

__n128 re::ecs2::ComponentType<re::ecs2::RenderCallbacksComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RenderCallbacksComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::RenderCallbacksComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F3ED8;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F3F48;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RenderCallbacksComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>,re::Slice<re::ecs2::RenderCallbacksComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>*,re::Slice<re::ecs2::RenderCallbacksComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>,re::Slice<re::ecs2::RenderCallbacksComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderCallbacksComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RenderCallbacksComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>,re::Slice<re::ecs2::RenderCallbacksComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>*,re::Slice<re::ecs2::RenderCallbacksComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>,re::Slice<re::ecs2::RenderCallbacksComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderCallbacksComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RenderCallbacksComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>,re::Slice<re::ecs2::RenderCallbacksComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>*,re::Slice<re::ecs2::RenderCallbacksComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>,re::Slice<re::ecs2::RenderCallbacksComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderCallbacksComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RenderCallbacksComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>,re::Slice<re::ecs2::RenderCallbacksComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>*,re::Slice<re::ecs2::RenderCallbacksComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>,re::Slice<re::ecs2::RenderCallbacksComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderCallbacksComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RenderCallbacksComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>,re::Slice<re::ecs2::RenderCallbacksComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>*,re::Slice<re::ecs2::RenderCallbacksComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>,re::Slice<re::ecs2::RenderCallbacksComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderCallbacksComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RenderCallbacksComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>,re::Slice<re::ecs2::RenderCallbacksComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>*,re::Slice<re::ecs2::RenderCallbacksComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>,re::Slice<re::ecs2::RenderCallbacksComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderCallbacksComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RenderCallbacksComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>,re::Slice<re::ecs2::RenderCallbacksComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>*,re::Slice<re::ecs2::RenderCallbacksComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>,re::Slice<re::ecs2::RenderCallbacksComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderCallbacksComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RenderCallbacksComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>,re::Slice<re::ecs2::RenderCallbacksComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>*,re::Slice<re::ecs2::RenderCallbacksComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>,re::Slice<re::ecs2::RenderCallbacksComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderCallbacksComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RenderCallbacksComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RenderCallbacksComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RenderCallbacksComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RenderCallbacksComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>,re::Slice<re::ecs2::RenderCallbacksComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>*,re::Slice<re::ecs2::RenderCallbacksComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderCallbacksComponent>,re::Slice<re::ecs2::RenderCallbacksComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderCallbacksComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::TintComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::TintComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::TintComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::TintComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::TintComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::TintComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::TintComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 64, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F4060;
  *(void *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(unsigned char *)(v3 + 48) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::TintComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F40E8;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::TintComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83010, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF83010))
  {
    qword_26AF83008 = re::ecs2::introspect_TintComponent(0);
    __cxa_guard_release(&qword_26AF83010);
  }
  return qword_26AF83008;
}

__n128 re::ecs2::ComponentType<re::ecs2::TintComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::TintComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::TintComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F3FF0;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::TintComponent::~TintComponent(re::ecs2::TintComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::TintComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::TintComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::TintComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::TintComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::TintComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F40E8;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::TintComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>,re::Slice<re::ecs2::TintComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>*,re::Slice<re::ecs2::TintComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>,re::Slice<re::ecs2::TintComponent*>>::Subscription const&,re::Slice<re::ecs2::TintComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::TintComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>,re::Slice<re::ecs2::TintComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>*,re::Slice<re::ecs2::TintComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>,re::Slice<re::ecs2::TintComponent*>>::Subscription const&,re::Slice<re::ecs2::TintComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::TintComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>,re::Slice<re::ecs2::TintComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>*,re::Slice<re::ecs2::TintComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>,re::Slice<re::ecs2::TintComponent*>>::Subscription const&,re::Slice<re::ecs2::TintComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::TintComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>,re::Slice<re::ecs2::TintComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>*,re::Slice<re::ecs2::TintComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>,re::Slice<re::ecs2::TintComponent*>>::Subscription const&,re::Slice<re::ecs2::TintComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::TintComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>,re::Slice<re::ecs2::TintComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>*,re::Slice<re::ecs2::TintComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>,re::Slice<re::ecs2::TintComponent*>>::Subscription const&,re::Slice<re::ecs2::TintComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::TintComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>,re::Slice<re::ecs2::TintComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>*,re::Slice<re::ecs2::TintComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>,re::Slice<re::ecs2::TintComponent*>>::Subscription const&,re::Slice<re::ecs2::TintComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::TintComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>,re::Slice<re::ecs2::TintComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>*,re::Slice<re::ecs2::TintComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>,re::Slice<re::ecs2::TintComponent*>>::Subscription const&,re::Slice<re::ecs2::TintComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::TintComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>,re::Slice<re::ecs2::TintComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>*,re::Slice<re::ecs2::TintComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>,re::Slice<re::ecs2::TintComponent*>>::Subscription const&,re::Slice<re::ecs2::TintComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::TintComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::TintComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::TintComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::TintComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>,re::Slice<re::ecs2::TintComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>*,re::Slice<re::ecs2::TintComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TintComponent>,re::Slice<re::ecs2::TintComponent*>>::Subscription const&,re::Slice<re::ecs2::TintComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ProbeClusterExclusionComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ProbeClusterExclusionComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ProbeClusterExclusionComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::ProbeClusterExclusionComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::ProbeClusterExclusionComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::ProbeClusterExclusionComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::ProbeClusterExclusionComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 32, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F4200;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ProbeClusterExclusionComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F4288;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ProbeClusterExclusionComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83020, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF83020))
  {
    qword_26AF83018 = re::ecs2::introspect_ProbeClusterExclusionComponent(0);
    __cxa_guard_release(&qword_26AF83020);
  }
  return qword_26AF83018;
}

__n128 re::ecs2::ComponentType<re::ecs2::ProbeClusterExclusionComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ProbeClusterExclusionComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ProbeClusterExclusionComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F4190;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::ProbeClusterExclusionComponent::~ProbeClusterExclusionComponent(re::ecs2::ProbeClusterExclusionComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ProbeClusterExclusionComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::ProbeClusterExclusionComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ProbeClusterExclusionComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::ProbeClusterExclusionComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::ProbeClusterExclusionComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F4288;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ProbeClusterExclusionComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>,re::Slice<re::ecs2::ProbeClusterExclusionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>*,re::Slice<re::ecs2::ProbeClusterExclusionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>,re::Slice<re::ecs2::ProbeClusterExclusionComponent*>>::Subscription const&,re::Slice<re::ecs2::ProbeClusterExclusionComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ProbeClusterExclusionComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>,re::Slice<re::ecs2::ProbeClusterExclusionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>*,re::Slice<re::ecs2::ProbeClusterExclusionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>,re::Slice<re::ecs2::ProbeClusterExclusionComponent*>>::Subscription const&,re::Slice<re::ecs2::ProbeClusterExclusionComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ProbeClusterExclusionComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>,re::Slice<re::ecs2::ProbeClusterExclusionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>*,re::Slice<re::ecs2::ProbeClusterExclusionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>,re::Slice<re::ecs2::ProbeClusterExclusionComponent*>>::Subscription const&,re::Slice<re::ecs2::ProbeClusterExclusionComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ProbeClusterExclusionComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>,re::Slice<re::ecs2::ProbeClusterExclusionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>*,re::Slice<re::ecs2::ProbeClusterExclusionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>,re::Slice<re::ecs2::ProbeClusterExclusionComponent*>>::Subscription const&,re::Slice<re::ecs2::ProbeClusterExclusionComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ProbeClusterExclusionComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>,re::Slice<re::ecs2::ProbeClusterExclusionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>*,re::Slice<re::ecs2::ProbeClusterExclusionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>,re::Slice<re::ecs2::ProbeClusterExclusionComponent*>>::Subscription const&,re::Slice<re::ecs2::ProbeClusterExclusionComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ProbeClusterExclusionComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>,re::Slice<re::ecs2::ProbeClusterExclusionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>*,re::Slice<re::ecs2::ProbeClusterExclusionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>,re::Slice<re::ecs2::ProbeClusterExclusionComponent*>>::Subscription const&,re::Slice<re::ecs2::ProbeClusterExclusionComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ProbeClusterExclusionComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>,re::Slice<re::ecs2::ProbeClusterExclusionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>*,re::Slice<re::ecs2::ProbeClusterExclusionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>,re::Slice<re::ecs2::ProbeClusterExclusionComponent*>>::Subscription const&,re::Slice<re::ecs2::ProbeClusterExclusionComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ProbeClusterExclusionComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>,re::Slice<re::ecs2::ProbeClusterExclusionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>*,re::Slice<re::ecs2::ProbeClusterExclusionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>,re::Slice<re::ecs2::ProbeClusterExclusionComponent*>>::Subscription const&,re::Slice<re::ecs2::ProbeClusterExclusionComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ProbeClusterExclusionComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ProbeClusterExclusionComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ProbeClusterExclusionComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ProbeClusterExclusionComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>,re::Slice<re::ecs2::ProbeClusterExclusionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>*,re::Slice<re::ecs2::ProbeClusterExclusionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProbeClusterExclusionComponent>,re::Slice<re::ecs2::ProbeClusterExclusionComponent*>>::Subscription const&,re::Slice<re::ecs2::ProbeClusterExclusionComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::LinkedTLEComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::LinkedTLEComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::LinkedTLEComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::LinkedTLEComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::LinkedTLEComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::LinkedTLEComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::LinkedTLEComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 32, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F43A0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::LinkedTLEComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F4428;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::LinkedTLEComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83030, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF83030))
  {
    qword_26AF83028 = re::ecs2::introspect_LinkedTLEComponent(0);
    __cxa_guard_release(&qword_26AF83030);
  }
  return qword_26AF83028;
}

__n128 re::ecs2::ComponentType<re::ecs2::LinkedTLEComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::LinkedTLEComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::LinkedTLEComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F4330;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::LinkedTLEComponent::~LinkedTLEComponent(re::ecs2::LinkedTLEComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::LinkedTLEComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::LinkedTLEComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::LinkedTLEComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::LinkedTLEComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::LinkedTLEComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F4428;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::LinkedTLEComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>,re::Slice<re::ecs2::LinkedTLEComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>*,re::Slice<re::ecs2::LinkedTLEComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>,re::Slice<re::ecs2::LinkedTLEComponent*>>::Subscription const&,re::Slice<re::ecs2::LinkedTLEComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::LinkedTLEComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>,re::Slice<re::ecs2::LinkedTLEComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>*,re::Slice<re::ecs2::LinkedTLEComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>,re::Slice<re::ecs2::LinkedTLEComponent*>>::Subscription const&,re::Slice<re::ecs2::LinkedTLEComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::LinkedTLEComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>,re::Slice<re::ecs2::LinkedTLEComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>*,re::Slice<re::ecs2::LinkedTLEComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>,re::Slice<re::ecs2::LinkedTLEComponent*>>::Subscription const&,re::Slice<re::ecs2::LinkedTLEComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::LinkedTLEComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>,re::Slice<re::ecs2::LinkedTLEComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>*,re::Slice<re::ecs2::LinkedTLEComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>,re::Slice<re::ecs2::LinkedTLEComponent*>>::Subscription const&,re::Slice<re::ecs2::LinkedTLEComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::LinkedTLEComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>,re::Slice<re::ecs2::LinkedTLEComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>*,re::Slice<re::ecs2::LinkedTLEComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>,re::Slice<re::ecs2::LinkedTLEComponent*>>::Subscription const&,re::Slice<re::ecs2::LinkedTLEComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::LinkedTLEComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>,re::Slice<re::ecs2::LinkedTLEComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>*,re::Slice<re::ecs2::LinkedTLEComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>,re::Slice<re::ecs2::LinkedTLEComponent*>>::Subscription const&,re::Slice<re::ecs2::LinkedTLEComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::LinkedTLEComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>,re::Slice<re::ecs2::LinkedTLEComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>*,re::Slice<re::ecs2::LinkedTLEComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>,re::Slice<re::ecs2::LinkedTLEComponent*>>::Subscription const&,re::Slice<re::ecs2::LinkedTLEComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::LinkedTLEComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>,re::Slice<re::ecs2::LinkedTLEComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>*,re::Slice<re::ecs2::LinkedTLEComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>,re::Slice<re::ecs2::LinkedTLEComponent*>>::Subscription const&,re::Slice<re::ecs2::LinkedTLEComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::LinkedTLEComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::LinkedTLEComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::LinkedTLEComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::LinkedTLEComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>,re::Slice<re::ecs2::LinkedTLEComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>*,re::Slice<re::ecs2::LinkedTLEComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LinkedTLEComponent>,re::Slice<re::ecs2::LinkedTLEComponent*>>::Subscription const&,re::Slice<re::ecs2::LinkedTLEComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::AssetStateComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AssetStateComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::AssetStateComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::AssetStateComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AssetStateComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F4540;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AssetStateComponent>::doGetComponentIntrospectionInfo()
{
  v0 = &qword_268772000;
  {
    v0 = &qword_268772000;
    if (v2)
    {
      re::introspect<re::ecs2::AssetStateComponent>(void)::info = (_UNKNOWN *)re::ecs2::introspect_AssetStateComponent(0);
      v0 = &qword_268772000;
    }
  }
  return v0[438];
}

__n128 re::ecs2::ComponentType<re::ecs2::AssetStateComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AssetStateComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AssetStateComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F44D0;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F4540;
  int v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AssetStateComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>,re::Slice<re::ecs2::AssetStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>*,re::Slice<re::ecs2::AssetStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>,re::Slice<re::ecs2::AssetStateComponent*>>::Subscription const&,re::Slice<re::ecs2::AssetStateComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AssetStateComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>,re::Slice<re::ecs2::AssetStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>*,re::Slice<re::ecs2::AssetStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>,re::Slice<re::ecs2::AssetStateComponent*>>::Subscription const&,re::Slice<re::ecs2::AssetStateComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AssetStateComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>,re::Slice<re::ecs2::AssetStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>*,re::Slice<re::ecs2::AssetStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>,re::Slice<re::ecs2::AssetStateComponent*>>::Subscription const&,re::Slice<re::ecs2::AssetStateComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AssetStateComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>,re::Slice<re::ecs2::AssetStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>*,re::Slice<re::ecs2::AssetStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>,re::Slice<re::ecs2::AssetStateComponent*>>::Subscription const&,re::Slice<re::ecs2::AssetStateComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AssetStateComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>,re::Slice<re::ecs2::AssetStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>*,re::Slice<re::ecs2::AssetStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>,re::Slice<re::ecs2::AssetStateComponent*>>::Subscription const&,re::Slice<re::ecs2::AssetStateComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AssetStateComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>,re::Slice<re::ecs2::AssetStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>*,re::Slice<re::ecs2::AssetStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>,re::Slice<re::ecs2::AssetStateComponent*>>::Subscription const&,re::Slice<re::ecs2::AssetStateComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AssetStateComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>,re::Slice<re::ecs2::AssetStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>*,re::Slice<re::ecs2::AssetStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>,re::Slice<re::ecs2::AssetStateComponent*>>::Subscription const&,re::Slice<re::ecs2::AssetStateComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AssetStateComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>,re::Slice<re::ecs2::AssetStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>*,re::Slice<re::ecs2::AssetStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>,re::Slice<re::ecs2::AssetStateComponent*>>::Subscription const&,re::Slice<re::ecs2::AssetStateComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AssetStateComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AssetStateComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AssetStateComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AssetStateComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>,re::Slice<re::ecs2::AssetStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>*,re::Slice<re::ecs2::AssetStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AssetStateComponent>,re::Slice<re::ecs2::AssetStateComponent*>>::Subscription const&,re::Slice<re::ecs2::AssetStateComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::AssetPreloadComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AssetPreloadComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::AssetPreloadComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::AssetPreloadComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AssetPreloadComponent>::doMakeSceneComponentCollection(re *a1)
{
  int v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F4658;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AssetPreloadComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83040, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF83040))
  {
    qword_26AF83038 = re::ecs2::introspect_AssetPreloadComponent(0);
    __cxa_guard_release(&qword_26AF83040);
  }
  return qword_26AF83038;
}

__n128 re::ecs2::ComponentType<re::ecs2::AssetPreloadComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AssetPreloadComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AssetPreloadComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F45E8;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F4658;
  int v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>::registerCallbacks(_DWORD *a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AssetPreloadComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>,re::Slice<re::ecs2::AssetPreloadComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>*,re::Slice<re::ecs2::AssetPreloadComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>,re::Slice<re::ecs2::AssetPreloadComponent*>>::Subscription const&,re::Slice<re::ecs2::AssetPreloadComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AssetPreloadComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>,re::Slice<re::ecs2::AssetPreloadComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>*,re::Slice<re::ecs2::AssetPreloadComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>,re::Slice<re::ecs2::AssetPreloadComponent*>>::Subscription const&,re::Slice<re::ecs2::AssetPreloadComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AssetPreloadComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>,re::Slice<re::ecs2::AssetPreloadComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>*,re::Slice<re::ecs2::AssetPreloadComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>,re::Slice<re::ecs2::AssetPreloadComponent*>>::Subscription const&,re::Slice<re::ecs2::AssetPreloadComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AssetPreloadComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>,re::Slice<re::ecs2::AssetPreloadComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>*,re::Slice<re::ecs2::AssetPreloadComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>,re::Slice<re::ecs2::AssetPreloadComponent*>>::Subscription const&,re::Slice<re::ecs2::AssetPreloadComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AssetPreloadComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>,re::Slice<re::ecs2::AssetPreloadComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>*,re::Slice<re::ecs2::AssetPreloadComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>,re::Slice<re::ecs2::AssetPreloadComponent*>>::Subscription const&,re::Slice<re::ecs2::AssetPreloadComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AssetPreloadComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>,re::Slice<re::ecs2::AssetPreloadComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>*,re::Slice<re::ecs2::AssetPreloadComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>,re::Slice<re::ecs2::AssetPreloadComponent*>>::Subscription const&,re::Slice<re::ecs2::AssetPreloadComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AssetPreloadComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>,re::Slice<re::ecs2::AssetPreloadComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>*,re::Slice<re::ecs2::AssetPreloadComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>,re::Slice<re::ecs2::AssetPreloadComponent*>>::Subscription const&,re::Slice<re::ecs2::AssetPreloadComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AssetPreloadComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>,re::Slice<re::ecs2::AssetPreloadComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>*,re::Slice<re::ecs2::AssetPreloadComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>,re::Slice<re::ecs2::AssetPreloadComponent*>>::Subscription const&,re::Slice<re::ecs2::AssetPreloadComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AssetPreloadComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AssetPreloadComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AssetPreloadComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AssetPreloadComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>,re::Slice<re::ecs2::AssetPreloadComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>*,re::Slice<re::ecs2::AssetPreloadComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AssetPreloadComponent>,re::Slice<re::ecs2::AssetPreloadComponent*>>::Subscription const&,re::Slice<re::ecs2::AssetPreloadComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ImageBasedReflectionContentComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ImageBasedReflectionContentComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ImageBasedReflectionContentComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::ImageBasedReflectionContentComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::ImageBasedReflectionContentComponent>::doMakeComponent(void *a1@<X8>)
{
  int v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::ImageBasedReflectionContentComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::ImageBasedReflectionContentComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 32, 0);
  *(_OWORD *)int v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E22F0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ImageBasedReflectionContentComponent>::doMakeSceneComponentCollection(re *a1)
{
  int v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F4770;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ImageBasedReflectionContentComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83050, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF83050))
  {
    qword_26AF83048 = re::ecs2::introspect_ImageBasedReflectionContentComponent(0);
    __cxa_guard_release(&qword_26AF83050);
  }
  return qword_26AF83048;
}

__n128 re::ecs2::ComponentType<re::ecs2::ImageBasedReflectionContentComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ImageBasedReflectionContentComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ImageBasedReflectionContentComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F4700;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F4770;
  int v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ImageBasedReflectionContentComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>,re::Slice<re::ecs2::ImageBasedReflectionContentComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>*,re::Slice<re::ecs2::ImageBasedReflectionContentComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>,re::Slice<re::ecs2::ImageBasedReflectionContentComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedReflectionContentComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ImageBasedReflectionContentComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>,re::Slice<re::ecs2::ImageBasedReflectionContentComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>*,re::Slice<re::ecs2::ImageBasedReflectionContentComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>,re::Slice<re::ecs2::ImageBasedReflectionContentComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedReflectionContentComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ImageBasedReflectionContentComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>,re::Slice<re::ecs2::ImageBasedReflectionContentComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>*,re::Slice<re::ecs2::ImageBasedReflectionContentComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>,re::Slice<re::ecs2::ImageBasedReflectionContentComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedReflectionContentComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ImageBasedReflectionContentComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>,re::Slice<re::ecs2::ImageBasedReflectionContentComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>*,re::Slice<re::ecs2::ImageBasedReflectionContentComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>,re::Slice<re::ecs2::ImageBasedReflectionContentComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedReflectionContentComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ImageBasedReflectionContentComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>,re::Slice<re::ecs2::ImageBasedReflectionContentComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>*,re::Slice<re::ecs2::ImageBasedReflectionContentComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>,re::Slice<re::ecs2::ImageBasedReflectionContentComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedReflectionContentComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ImageBasedReflectionContentComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>,re::Slice<re::ecs2::ImageBasedReflectionContentComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>*,re::Slice<re::ecs2::ImageBasedReflectionContentComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>,re::Slice<re::ecs2::ImageBasedReflectionContentComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedReflectionContentComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ImageBasedReflectionContentComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>,re::Slice<re::ecs2::ImageBasedReflectionContentComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>*,re::Slice<re::ecs2::ImageBasedReflectionContentComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>,re::Slice<re::ecs2::ImageBasedReflectionContentComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedReflectionContentComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ImageBasedReflectionContentComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>,re::Slice<re::ecs2::ImageBasedReflectionContentComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>*,re::Slice<re::ecs2::ImageBasedReflectionContentComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>,re::Slice<re::ecs2::ImageBasedReflectionContentComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedReflectionContentComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ImageBasedReflectionContentComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ImageBasedReflectionContentComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ImageBasedReflectionContentComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ImageBasedReflectionContentComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>,re::Slice<re::ecs2::ImageBasedReflectionContentComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>*,re::Slice<re::ecs2::ImageBasedReflectionContentComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionContentComponent>,re::Slice<re::ecs2::ImageBasedReflectionContentComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedReflectionContentComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ImageBasedReflectionRootComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ImageBasedReflectionRootComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ImageBasedReflectionRootComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::ImageBasedReflectionRootComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::ImageBasedReflectionRootComponent>::doMakeComponent(void *a1@<X8>)
{
  int v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::ImageBasedReflectionRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::ImageBasedReflectionRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 32, 0);
  *(_OWORD *)int v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E4C50;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ImageBasedReflectionRootComponent>::doMakeSceneComponentCollection(re *a1)
{
  int v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F4888;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ImageBasedReflectionRootComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83060, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF83060))
  {
    qword_26AF83058 = re::ecs2::introspect_ImageBasedReflectionRootComponent(0);
    __cxa_guard_release(&qword_26AF83060);
  }
  return qword_26AF83058;
}

__n128 re::ecs2::ComponentType<re::ecs2::ImageBasedReflectionRootComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ImageBasedReflectionRootComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ImageBasedReflectionRootComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F4818;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F4888;
  int v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ImageBasedReflectionRootComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>,re::Slice<re::ecs2::ImageBasedReflectionRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>*,re::Slice<re::ecs2::ImageBasedReflectionRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>,re::Slice<re::ecs2::ImageBasedReflectionRootComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedReflectionRootComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ImageBasedReflectionRootComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>,re::Slice<re::ecs2::ImageBasedReflectionRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>*,re::Slice<re::ecs2::ImageBasedReflectionRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>,re::Slice<re::ecs2::ImageBasedReflectionRootComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedReflectionRootComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ImageBasedReflectionRootComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>,re::Slice<re::ecs2::ImageBasedReflectionRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>*,re::Slice<re::ecs2::ImageBasedReflectionRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>,re::Slice<re::ecs2::ImageBasedReflectionRootComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedReflectionRootComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ImageBasedReflectionRootComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>,re::Slice<re::ecs2::ImageBasedReflectionRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>*,re::Slice<re::ecs2::ImageBasedReflectionRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>,re::Slice<re::ecs2::ImageBasedReflectionRootComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedReflectionRootComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ImageBasedReflectionRootComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>,re::Slice<re::ecs2::ImageBasedReflectionRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>*,re::Slice<re::ecs2::ImageBasedReflectionRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>,re::Slice<re::ecs2::ImageBasedReflectionRootComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedReflectionRootComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ImageBasedReflectionRootComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>,re::Slice<re::ecs2::ImageBasedReflectionRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>*,re::Slice<re::ecs2::ImageBasedReflectionRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>,re::Slice<re::ecs2::ImageBasedReflectionRootComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedReflectionRootComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ImageBasedReflectionRootComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>,re::Slice<re::ecs2::ImageBasedReflectionRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>*,re::Slice<re::ecs2::ImageBasedReflectionRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>,re::Slice<re::ecs2::ImageBasedReflectionRootComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedReflectionRootComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ImageBasedReflectionRootComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>,re::Slice<re::ecs2::ImageBasedReflectionRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>*,re::Slice<re::ecs2::ImageBasedReflectionRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>,re::Slice<re::ecs2::ImageBasedReflectionRootComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedReflectionRootComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ImageBasedReflectionRootComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ImageBasedReflectionRootComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ImageBasedReflectionRootComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ImageBasedReflectionRootComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>,re::Slice<re::ecs2::ImageBasedReflectionRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>*,re::Slice<re::ecs2::ImageBasedReflectionRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionRootComponent>,re::Slice<re::ecs2::ImageBasedReflectionRootComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedReflectionRootComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ImageBasedReflectionReceiverComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ImageBasedReflectionReceiverComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ImageBasedReflectionReceiverComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::ImageBasedReflectionReceiverComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::ImageBasedReflectionReceiverComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  int v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::ImageBasedReflectionReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::ImageBasedReflectionReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 112, 0);
  *(_OWORD *)int v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F49A0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = 0;
  *(void *)(v3 + 32) = 0;
  *(_DWORD *)(v3 + 56) = 0;
  *(void *)(v3 + 104) = 0;
  double result = 0.0;
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 80) = 0u;
  *(_DWORD *)(v3 + 96) = 0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ImageBasedReflectionReceiverComponent>::doMakeSceneComponentCollection(re *a1)
{
  int v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F4A28;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ImageBasedReflectionReceiverComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83070, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF83070))
  {
    qword_26AF83068 = re::ecs2::introspect_ImageBasedReflectionReceiverComponent(0);
    __cxa_guard_release(&qword_26AF83070);
  }
  return qword_26AF83068;
}

__n128 re::ecs2::ComponentType<re::ecs2::ImageBasedReflectionReceiverComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ImageBasedReflectionReceiverComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ImageBasedReflectionReceiverComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F4930;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::ImageBasedReflectionReceiverComponent::~ImageBasedReflectionReceiverComponent(re::ecs2::ImageBasedReflectionReceiverComponent *this)
{
  re::ecs2::ImageBasedReflectionReceiverComponent::~ImageBasedReflectionReceiverComponent(this);
  JUMPOUT(0x237DBCBD0);
}

{
  char *v2;

  *(void *)this = &unk_26E6F49A0;
  int v2 = (char *)this + 32;
  re::DynamicArray<re::RigDataTypeClass::RigDataTypeAttribute>::deinit((uint64_t)this + 72);
  re::DynamicArray<re::RigDataTypeClass::RigDataTypeAttribute>::deinit((uint64_t)v2);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ImageBasedReflectionReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::ImageBasedReflectionReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ImageBasedReflectionReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::ImageBasedReflectionReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::ImageBasedReflectionReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F4A28;
  int v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ImageBasedReflectionReceiverComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>,re::Slice<re::ecs2::ImageBasedReflectionReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>*,re::Slice<re::ecs2::ImageBasedReflectionReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>,re::Slice<re::ecs2::ImageBasedReflectionReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedReflectionReceiverComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ImageBasedReflectionReceiverComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>,re::Slice<re::ecs2::ImageBasedReflectionReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>*,re::Slice<re::ecs2::ImageBasedReflectionReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>,re::Slice<re::ecs2::ImageBasedReflectionReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedReflectionReceiverComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ImageBasedReflectionReceiverComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>,re::Slice<re::ecs2::ImageBasedReflectionReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>*,re::Slice<re::ecs2::ImageBasedReflectionReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>,re::Slice<re::ecs2::ImageBasedReflectionReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedReflectionReceiverComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ImageBasedReflectionReceiverComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>,re::Slice<re::ecs2::ImageBasedReflectionReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>*,re::Slice<re::ecs2::ImageBasedReflectionReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>,re::Slice<re::ecs2::ImageBasedReflectionReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedReflectionReceiverComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ImageBasedReflectionReceiverComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>,re::Slice<re::ecs2::ImageBasedReflectionReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>*,re::Slice<re::ecs2::ImageBasedReflectionReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>,re::Slice<re::ecs2::ImageBasedReflectionReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedReflectionReceiverComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ImageBasedReflectionReceiverComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>,re::Slice<re::ecs2::ImageBasedReflectionReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>*,re::Slice<re::ecs2::ImageBasedReflectionReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>,re::Slice<re::ecs2::ImageBasedReflectionReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedReflectionReceiverComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ImageBasedReflectionReceiverComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>,re::Slice<re::ecs2::ImageBasedReflectionReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>*,re::Slice<re::ecs2::ImageBasedReflectionReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>,re::Slice<re::ecs2::ImageBasedReflectionReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedReflectionReceiverComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ImageBasedReflectionReceiverComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>,re::Slice<re::ecs2::ImageBasedReflectionReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>*,re::Slice<re::ecs2::ImageBasedReflectionReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>,re::Slice<re::ecs2::ImageBasedReflectionReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedReflectionReceiverComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ImageBasedReflectionReceiverComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ImageBasedReflectionReceiverComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ImageBasedReflectionReceiverComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ImageBasedReflectionReceiverComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>,re::Slice<re::ecs2::ImageBasedReflectionReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>*,re::Slice<re::ecs2::ImageBasedReflectionReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedReflectionReceiverComponent>,re::Slice<re::ecs2::ImageBasedReflectionReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedReflectionReceiverComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::WrapComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::WrapComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::WrapComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::WrapComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

uint64_t *re::ecs2::ComponentType<re::ecs2::WrapComponent>::doMakeComponent@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::WrapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::WrapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 88, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(void *)(v2 + 80) = 0;
  *(_OWORD *)(v2 + 32) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F4B40;
  inited = (re *)objc_initWeak((id *)(v2 + 32), 0);
  *(void *)(v2 + 40) = 0;
  double result = re::globalAllocators(inited);
  *(void *)(v2 + 72) = result[2];
  *(void *)(v2 + 80) = 0;
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::WrapComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F4C20;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::WrapComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83080, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF83080))
  {
    qword_26AF83078 = re::ecs2::introspect_WrapComponent(0);
    __cxa_guard_release(&qword_26AF83080);
  }
  return qword_26AF83078;
}

__n128 re::ecs2::ComponentType<re::ecs2::WrapComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::WrapComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::WrapComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F4AD0;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::WrapComponent::~WrapComponent(id *this)
{
  *this = &unk_26E6F4B40;
  re::FramePersistentPtr<re::ecs2::WrapComponent::WrapDeformerInputs,re::FrameManager>::~FramePersistentPtr(this + 4);
  *this = &unk_26E6DECE0;
  objc_destructInstance(this + 1);
}

{
  uint64_t vars8;

  *this = &unk_26E6F4B40;
  re::FramePersistentPtr<re::ecs2::WrapComponent::WrapDeformerInputs,re::FrameManager>::~FramePersistentPtr(this + 4);
  *this = &unk_26E6DECE0;
  objc_destructInstance(this + 1);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::WrapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::WrapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::WrapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::WrapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::WrapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

id *re::FramePersistentPtr<re::ecs2::WrapComponent::WrapDeformerInputs,re::FrameManager>::~FramePersistentPtr(id *a1)
{
  v5[5] = *MEMORY[0x263EF8340];
  inited = (re *)objc_initWeak(&location, 0);
  memset(v5, 0, 24);
  v5[3] = re::globalAllocators(inited)[2];
  v5[4] = 0;
  re::FramePersistentPtr<re::ecs2::WrapComponent::WrapDeformerInputs,re::FrameManager>::reset(a1, &location, 0, (uint64_t)v5);
  re::FunctionBase<24ul,void ()(void *)>::destroyCallable((uint64_t)v5);
  objc_destroyWeak(&location);
  id location = 0;
  re::FunctionBase<24ul,void ()(void *)>::destroyCallable((uint64_t)(a1 + 2));
  objc_destroyWeak(a1);
  *a1 = 0;
  return a1;
}

uint64_t re::FramePersistentPtr<re::ecs2::WrapComponent::WrapDeformerInputs,re::FrameManager>::reset(id *location, id *a2, void *a3, uint64_t a4)
{
  v18[5] = *MEMORY[0x263EF8340];
  if (location[1])
  {
    WeakRetained = objc_loadWeakRetained(location);
    if (WeakRetained)
    {
      uint64_t v9 = WeakRetained;

      if (!location[6])
      {
        uint64_t v11 = re::globalAllocators(v10)[2];
        v18[0] = &unk_26E6F4BC8;
        v18[3] = v11;
        v18[4] = v18;
        re::FunctionBase<24ul,void ()(void *)>::operator=<24ul>((uint64_t)(location + 2), (uint64_t)v18);
        uint64_t v10 = (re *)re::FunctionBase<24ul,void ()(void *)>::destroyCallable((uint64_t)v18);
      }
      v12 = re::globalAllocators(v10);
      unint64_t v13 = v9[2] & 0xFFFFFFFFFFFFFFFLL | ((unint64_t)v9[1] << 60);
      id v14 = location[1];
      uint64_t v15 = re::PerFrameAllocatorManager::perFrameAllocator(v12[6], v13);
      (*(void (**)(uint64_t, id, id *))(*(void *)v15 + 16))(v15, v14, location + 2);
    }
    else
    {
      id v16 = location[6];
      if (v16)
      {
        v18[0] = location[1];
        (*(void (**)(id, void *))(*(void *)v16 + 16))(v16, v18);
      }
      else
      {
        re::internal::destroyPersistent<re::ecs2::WrapComponent::WrapDeformerInputs>((re *)"reset", 161, (uint64_t *)location[1]);
      }
    }
  }
  re::ArcWeakPtr<re::VideoHistogram>::operator=(location, a2);
  location[1] = a3;
  return re::FunctionBase<24ul,void ()(void *)>::operator=<24ul>((uint64_t)(location + 2), a4);
}

re *re::internal::destroyPersistent<re::ecs2::WrapComponent::WrapDeformerInputs>(re *result, uint64_t a2, uint64_t *a3)
{
  if (a3)
  {
    uint64_t v4 = re::globalAllocators(result)[2];
    re::FixedArray<CoreIKTransform>::deinit(a3);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t *))(*(void *)v4 + 40);
    return (re *)v5(v4, a3);
  }
  return result;
}

void re::internal::Callable<re::FramePersistentPtr<re::ecs2::WrapComponent::WrapDeformerInputs,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::WrapComponent::WrapDeformerInputs*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::~Callable()
{
}

re *re::internal::Callable<re::FramePersistentPtr<re::ecs2::WrapComponent::WrapDeformerInputs,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::WrapComponent::WrapDeformerInputs*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::operator()(uint64_t a1, uint64_t **a2)
{
  return re::internal::destroyPersistent<re::ecs2::WrapComponent::WrapDeformerInputs>((re *)"operator()", 149, *a2);
}

void *re::internal::Callable<re::FramePersistentPtr<re::ecs2::WrapComponent::WrapDeformerInputs,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::WrapComponent::WrapDeformerInputs*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::cloneInto(uint64_t a1, void *a2)
{
  __n128 result = a2;
  *a2 = &unk_26E6F4BC8;
  return result;
}

void *re::internal::Callable<re::FramePersistentPtr<re::ecs2::WrapComponent::WrapDeformerInputs,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::WrapComponent::WrapDeformerInputs*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::moveInto(uint64_t a1, void *a2)
{
  __n128 result = a2;
  *a2 = &unk_26E6F4BC8;
  return result;
}

uint64_t re::internal::Callable<re::FramePersistentPtr<re::ecs2::WrapComponent::WrapDeformerInputs,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::WrapComponent::WrapDeformerInputs*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::size()
{
  return 16;
}

void re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F4C20;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::WrapComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>,re::Slice<re::ecs2::WrapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>*,re::Slice<re::ecs2::WrapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>,re::Slice<re::ecs2::WrapComponent*>>::Subscription const&,re::Slice<re::ecs2::WrapComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::WrapComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>,re::Slice<re::ecs2::WrapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>*,re::Slice<re::ecs2::WrapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>,re::Slice<re::ecs2::WrapComponent*>>::Subscription const&,re::Slice<re::ecs2::WrapComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::WrapComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>,re::Slice<re::ecs2::WrapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>*,re::Slice<re::ecs2::WrapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>,re::Slice<re::ecs2::WrapComponent*>>::Subscription const&,re::Slice<re::ecs2::WrapComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::WrapComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>,re::Slice<re::ecs2::WrapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>*,re::Slice<re::ecs2::WrapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>,re::Slice<re::ecs2::WrapComponent*>>::Subscription const&,re::Slice<re::ecs2::WrapComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::WrapComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>,re::Slice<re::ecs2::WrapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>*,re::Slice<re::ecs2::WrapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>,re::Slice<re::ecs2::WrapComponent*>>::Subscription const&,re::Slice<re::ecs2::WrapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::WrapComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>,re::Slice<re::ecs2::WrapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>*,re::Slice<re::ecs2::WrapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>,re::Slice<re::ecs2::WrapComponent*>>::Subscription const&,re::Slice<re::ecs2::WrapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::WrapComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>,re::Slice<re::ecs2::WrapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>*,re::Slice<re::ecs2::WrapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>,re::Slice<re::ecs2::WrapComponent*>>::Subscription const&,re::Slice<re::ecs2::WrapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::WrapComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>,re::Slice<re::ecs2::WrapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>*,re::Slice<re::ecs2::WrapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>,re::Slice<re::ecs2::WrapComponent*>>::Subscription const&,re::Slice<re::ecs2::WrapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::WrapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::WrapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::WrapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::WrapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>,re::Slice<re::ecs2::WrapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>*,re::Slice<re::ecs2::WrapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WrapComponent>,re::Slice<re::ecs2::WrapComponent*>>::Subscription const&,re::Slice<re::ecs2::WrapComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::VFXEmitterComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VFXEmitterComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::VFXEmitterComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::VFXEmitterComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VFXEmitterComponent>::doMakeComponent@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = (re::ecs2::VFXEmitterComponent *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::VFXEmitterComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                              + 7)
                                                                                           + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::VFXEmitterComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 2304, 0);
  uint64_t result = re::ecs2::VFXEmitterComponent::VFXEmitterComponent(v2);
  *a1 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VFXEmitterComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F4D38;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VFXEmitterComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83090, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF83090))
  {
    qword_26AF83088 = re::ecs2::introspect_VFXEmitterComponent(0);
    __cxa_guard_release(&qword_26AF83090);
  }
  return qword_26AF83088;
}

__n128 re::ecs2::ComponentType<re::ecs2::VFXEmitterComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VFXEmitterComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VFXEmitterComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F4CC8;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F4D38;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VFXEmitterComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>,re::Slice<re::ecs2::VFXEmitterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>*,re::Slice<re::ecs2::VFXEmitterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>,re::Slice<re::ecs2::VFXEmitterComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXEmitterComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VFXEmitterComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>,re::Slice<re::ecs2::VFXEmitterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>*,re::Slice<re::ecs2::VFXEmitterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>,re::Slice<re::ecs2::VFXEmitterComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXEmitterComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VFXEmitterComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>,re::Slice<re::ecs2::VFXEmitterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>*,re::Slice<re::ecs2::VFXEmitterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>,re::Slice<re::ecs2::VFXEmitterComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXEmitterComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VFXEmitterComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>,re::Slice<re::ecs2::VFXEmitterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>*,re::Slice<re::ecs2::VFXEmitterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>,re::Slice<re::ecs2::VFXEmitterComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXEmitterComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VFXEmitterComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>,re::Slice<re::ecs2::VFXEmitterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>*,re::Slice<re::ecs2::VFXEmitterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>,re::Slice<re::ecs2::VFXEmitterComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXEmitterComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VFXEmitterComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>,re::Slice<re::ecs2::VFXEmitterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>*,re::Slice<re::ecs2::VFXEmitterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>,re::Slice<re::ecs2::VFXEmitterComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXEmitterComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VFXEmitterComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>,re::Slice<re::ecs2::VFXEmitterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>*,re::Slice<re::ecs2::VFXEmitterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>,re::Slice<re::ecs2::VFXEmitterComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXEmitterComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VFXEmitterComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>,re::Slice<re::ecs2::VFXEmitterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>*,re::Slice<re::ecs2::VFXEmitterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>,re::Slice<re::ecs2::VFXEmitterComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXEmitterComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VFXEmitterComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VFXEmitterComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VFXEmitterComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VFXEmitterComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>,re::Slice<re::ecs2::VFXEmitterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>*,re::Slice<re::ecs2::VFXEmitterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXEmitterComponent>,re::Slice<re::ecs2::VFXEmitterComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXEmitterComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::VirtualEnvironmentProbeComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VirtualEnvironmentProbeComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::VirtualEnvironmentProbeComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::VirtualEnvironmentProbeComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::VirtualEnvironmentProbeComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::VirtualEnvironmentProbeComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::VirtualEnvironmentProbeComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 72, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(void *)(v2 + 64) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E45E0;
  *(void *)(v3 + 64) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = 0;
  *(void *)(v3 + 32) = 0;
  *(_DWORD *)(v3 + 56) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VirtualEnvironmentProbeComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F4E50;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VirtualEnvironmentProbeComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF830A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF830A0))
  {
    qword_26AF83098 = re::ecs2::introspect_VirtualEnvironmentProbeComponent(0);
    __cxa_guard_release(&qword_26AF830A0);
  }
  return qword_26AF83098;
}

__n128 re::ecs2::ComponentType<re::ecs2::VirtualEnvironmentProbeComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VirtualEnvironmentProbeComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VirtualEnvironmentProbeComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F4DE0;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F4E50;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VirtualEnvironmentProbeComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>,re::Slice<re::ecs2::VirtualEnvironmentProbeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>*,re::Slice<re::ecs2::VirtualEnvironmentProbeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>,re::Slice<re::ecs2::VirtualEnvironmentProbeComponent*>>::Subscription const&,re::Slice<re::ecs2::VirtualEnvironmentProbeComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VirtualEnvironmentProbeComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>,re::Slice<re::ecs2::VirtualEnvironmentProbeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>*,re::Slice<re::ecs2::VirtualEnvironmentProbeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>,re::Slice<re::ecs2::VirtualEnvironmentProbeComponent*>>::Subscription const&,re::Slice<re::ecs2::VirtualEnvironmentProbeComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VirtualEnvironmentProbeComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>,re::Slice<re::ecs2::VirtualEnvironmentProbeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>*,re::Slice<re::ecs2::VirtualEnvironmentProbeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>,re::Slice<re::ecs2::VirtualEnvironmentProbeComponent*>>::Subscription const&,re::Slice<re::ecs2::VirtualEnvironmentProbeComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VirtualEnvironmentProbeComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>,re::Slice<re::ecs2::VirtualEnvironmentProbeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>*,re::Slice<re::ecs2::VirtualEnvironmentProbeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>,re::Slice<re::ecs2::VirtualEnvironmentProbeComponent*>>::Subscription const&,re::Slice<re::ecs2::VirtualEnvironmentProbeComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VirtualEnvironmentProbeComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>,re::Slice<re::ecs2::VirtualEnvironmentProbeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>*,re::Slice<re::ecs2::VirtualEnvironmentProbeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>,re::Slice<re::ecs2::VirtualEnvironmentProbeComponent*>>::Subscription const&,re::Slice<re::ecs2::VirtualEnvironmentProbeComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VirtualEnvironmentProbeComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>,re::Slice<re::ecs2::VirtualEnvironmentProbeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>*,re::Slice<re::ecs2::VirtualEnvironmentProbeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>,re::Slice<re::ecs2::VirtualEnvironmentProbeComponent*>>::Subscription const&,re::Slice<re::ecs2::VirtualEnvironmentProbeComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VirtualEnvironmentProbeComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>,re::Slice<re::ecs2::VirtualEnvironmentProbeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>*,re::Slice<re::ecs2::VirtualEnvironmentProbeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>,re::Slice<re::ecs2::VirtualEnvironmentProbeComponent*>>::Subscription const&,re::Slice<re::ecs2::VirtualEnvironmentProbeComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VirtualEnvironmentProbeComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>,re::Slice<re::ecs2::VirtualEnvironmentProbeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>*,re::Slice<re::ecs2::VirtualEnvironmentProbeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>,re::Slice<re::ecs2::VirtualEnvironmentProbeComponent*>>::Subscription const&,re::Slice<re::ecs2::VirtualEnvironmentProbeComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VirtualEnvironmentProbeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VirtualEnvironmentProbeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VirtualEnvironmentProbeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VirtualEnvironmentProbeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>,re::Slice<re::ecs2::VirtualEnvironmentProbeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>*,re::Slice<re::ecs2::VirtualEnvironmentProbeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VirtualEnvironmentProbeComponent>,re::Slice<re::ecs2::VirtualEnvironmentProbeComponent*>>::Subscription const&,re::Slice<re::ecs2::VirtualEnvironmentProbeComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::EnvironmentLightingConfigurationComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::EnvironmentLightingConfigurationComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::EnvironmentLightingConfigurationComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::EnvironmentLightingConfigurationComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::EnvironmentLightingConfigurationComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::EnvironmentLightingConfigurationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::EnvironmentLightingConfigurationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 32, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F4F68;
  *(_DWORD *)(v3 + 28) = 1065353216;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::EnvironmentLightingConfigurationComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F4FF0;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::EnvironmentLightingConfigurationComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF830B0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF830B0))
  {
    qword_26AF830A8 = re::ecs2::introspect_EnvironmentLightingConfigurationComponent(0);
    __cxa_guard_release(&qword_26AF830B0);
  }
  return qword_26AF830A8;
}

__n128 re::ecs2::ComponentType<re::ecs2::EnvironmentLightingConfigurationComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::EnvironmentLightingConfigurationComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::EnvironmentLightingConfigurationComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F4EF8;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::EnvironmentLightingConfigurationComponent::~EnvironmentLightingConfigurationComponent(re::ecs2::EnvironmentLightingConfigurationComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::EnvironmentLightingConfigurationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::EnvironmentLightingConfigurationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::EnvironmentLightingConfigurationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::EnvironmentLightingConfigurationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::EnvironmentLightingConfigurationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F4FF0;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::EnvironmentLightingConfigurationComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>,re::Slice<re::ecs2::EnvironmentLightingConfigurationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>*,re::Slice<re::ecs2::EnvironmentLightingConfigurationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>,re::Slice<re::ecs2::EnvironmentLightingConfigurationComponent*>>::Subscription const&,re::Slice<re::ecs2::EnvironmentLightingConfigurationComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::EnvironmentLightingConfigurationComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>,re::Slice<re::ecs2::EnvironmentLightingConfigurationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>*,re::Slice<re::ecs2::EnvironmentLightingConfigurationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>,re::Slice<re::ecs2::EnvironmentLightingConfigurationComponent*>>::Subscription const&,re::Slice<re::ecs2::EnvironmentLightingConfigurationComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::EnvironmentLightingConfigurationComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>,re::Slice<re::ecs2::EnvironmentLightingConfigurationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>*,re::Slice<re::ecs2::EnvironmentLightingConfigurationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>,re::Slice<re::ecs2::EnvironmentLightingConfigurationComponent*>>::Subscription const&,re::Slice<re::ecs2::EnvironmentLightingConfigurationComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::EnvironmentLightingConfigurationComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>,re::Slice<re::ecs2::EnvironmentLightingConfigurationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>*,re::Slice<re::ecs2::EnvironmentLightingConfigurationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>,re::Slice<re::ecs2::EnvironmentLightingConfigurationComponent*>>::Subscription const&,re::Slice<re::ecs2::EnvironmentLightingConfigurationComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::EnvironmentLightingConfigurationComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>,re::Slice<re::ecs2::EnvironmentLightingConfigurationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>*,re::Slice<re::ecs2::EnvironmentLightingConfigurationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>,re::Slice<re::ecs2::EnvironmentLightingConfigurationComponent*>>::Subscription const&,re::Slice<re::ecs2::EnvironmentLightingConfigurationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::EnvironmentLightingConfigurationComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>,re::Slice<re::ecs2::EnvironmentLightingConfigurationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>*,re::Slice<re::ecs2::EnvironmentLightingConfigurationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>,re::Slice<re::ecs2::EnvironmentLightingConfigurationComponent*>>::Subscription const&,re::Slice<re::ecs2::EnvironmentLightingConfigurationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::EnvironmentLightingConfigurationComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>,re::Slice<re::ecs2::EnvironmentLightingConfigurationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>*,re::Slice<re::ecs2::EnvironmentLightingConfigurationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>,re::Slice<re::ecs2::EnvironmentLightingConfigurationComponent*>>::Subscription const&,re::Slice<re::ecs2::EnvironmentLightingConfigurationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::EnvironmentLightingConfigurationComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>,re::Slice<re::ecs2::EnvironmentLightingConfigurationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>*,re::Slice<re::ecs2::EnvironmentLightingConfigurationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>,re::Slice<re::ecs2::EnvironmentLightingConfigurationComponent*>>::Subscription const&,re::Slice<re::ecs2::EnvironmentLightingConfigurationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::EnvironmentLightingConfigurationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::EnvironmentLightingConfigurationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::EnvironmentLightingConfigurationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::EnvironmentLightingConfigurationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>,re::Slice<re::ecs2::EnvironmentLightingConfigurationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>*,re::Slice<re::ecs2::EnvironmentLightingConfigurationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EnvironmentLightingConfigurationComponent>,re::Slice<re::ecs2::EnvironmentLightingConfigurationComponent*>>::Subscription const&,re::Slice<re::ecs2::EnvironmentLightingConfigurationComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ShadowClusterRootComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ShadowClusterRootComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ShadowClusterRootComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::ShadowClusterRootComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

int32x4_t re::ecs2::ComponentType<re::ecs2::ShadowClusterRootComponent>::doMakeComponent@<Q0>(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::ShadowClusterRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::ShadowClusterRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 64, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F5108;
  int32x4_t result = vdupq_n_s32(0x7F800000u);
  *(void *)&long long v5 = 0x7F0000007FLL;
  *((void *)&v5 + 1) = 0x7F0000007FLL;
  *(int32x4_t *)(v3 + 32) = result;
  *(_OWORD *)(v3 + 48) = v5;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ShadowClusterRootComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F5190;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  long long v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ShadowClusterRootComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF830C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF830C0))
  {
    qword_26AF830B8 = re::ecs2::introspect_ShadowClusterRootComponent(0);
    __cxa_guard_release(&qword_26AF830C0);
  }
  return qword_26AF830B8;
}

__n128 re::ecs2::ComponentType<re::ecs2::ShadowClusterRootComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ShadowClusterRootComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ShadowClusterRootComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F5098;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::ShadowClusterRootComponent::~ShadowClusterRootComponent(re::ecs2::ShadowClusterRootComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ShadowClusterRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::ShadowClusterRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ShadowClusterRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::ShadowClusterRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::ShadowClusterRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F5190;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      long long v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    long long v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ShadowClusterRootComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>,re::Slice<re::ecs2::ShadowClusterRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>*,re::Slice<re::ecs2::ShadowClusterRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>,re::Slice<re::ecs2::ShadowClusterRootComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowClusterRootComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    long long v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ShadowClusterRootComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>,re::Slice<re::ecs2::ShadowClusterRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>*,re::Slice<re::ecs2::ShadowClusterRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>,re::Slice<re::ecs2::ShadowClusterRootComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowClusterRootComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    long long v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ShadowClusterRootComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>,re::Slice<re::ecs2::ShadowClusterRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>*,re::Slice<re::ecs2::ShadowClusterRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>,re::Slice<re::ecs2::ShadowClusterRootComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowClusterRootComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    long long v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ShadowClusterRootComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>,re::Slice<re::ecs2::ShadowClusterRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>*,re::Slice<re::ecs2::ShadowClusterRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>,re::Slice<re::ecs2::ShadowClusterRootComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowClusterRootComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ShadowClusterRootComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>,re::Slice<re::ecs2::ShadowClusterRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>*,re::Slice<re::ecs2::ShadowClusterRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>,re::Slice<re::ecs2::ShadowClusterRootComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowClusterRootComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ShadowClusterRootComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>,re::Slice<re::ecs2::ShadowClusterRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>*,re::Slice<re::ecs2::ShadowClusterRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>,re::Slice<re::ecs2::ShadowClusterRootComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowClusterRootComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ShadowClusterRootComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>,re::Slice<re::ecs2::ShadowClusterRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>*,re::Slice<re::ecs2::ShadowClusterRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>,re::Slice<re::ecs2::ShadowClusterRootComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowClusterRootComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ShadowClusterRootComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>,re::Slice<re::ecs2::ShadowClusterRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>*,re::Slice<re::ecs2::ShadowClusterRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>,re::Slice<re::ecs2::ShadowClusterRootComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowClusterRootComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ShadowClusterRootComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ShadowClusterRootComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ShadowClusterRootComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ShadowClusterRootComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>,re::Slice<re::ecs2::ShadowClusterRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>*,re::Slice<re::ecs2::ShadowClusterRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterRootComponent>,re::Slice<re::ecs2::ShadowClusterRootComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowClusterRootComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ShadowProxyComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ShadowProxyComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ShadowProxyComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::ShadowProxyComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::ShadowProxyComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::ShadowProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::ShadowProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 40, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(void *)(v2 + 32) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E2D90;
  __asm { FMOV            V0.2S, #1.0 }
  *(double *)(v3 + 32) = result;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ShadowProxyComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F52A8;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ShadowProxyComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF830D0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF830D0))
  {
    qword_26AF830C8 = re::ecs2::introspect_ShadowProxyComponent(0);
    __cxa_guard_release(&qword_26AF830D0);
  }
  return qword_26AF830C8;
}

__n128 re::ecs2::ComponentType<re::ecs2::ShadowProxyComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ShadowProxyComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ShadowProxyComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F5238;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F52A8;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ShadowProxyComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>,re::Slice<re::ecs2::ShadowProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>*,re::Slice<re::ecs2::ShadowProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>,re::Slice<re::ecs2::ShadowProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowProxyComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ShadowProxyComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>,re::Slice<re::ecs2::ShadowProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>*,re::Slice<re::ecs2::ShadowProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>,re::Slice<re::ecs2::ShadowProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowProxyComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ShadowProxyComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>,re::Slice<re::ecs2::ShadowProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>*,re::Slice<re::ecs2::ShadowProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>,re::Slice<re::ecs2::ShadowProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowProxyComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ShadowProxyComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>,re::Slice<re::ecs2::ShadowProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>*,re::Slice<re::ecs2::ShadowProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>,re::Slice<re::ecs2::ShadowProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowProxyComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ShadowProxyComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>,re::Slice<re::ecs2::ShadowProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>*,re::Slice<re::ecs2::ShadowProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>,re::Slice<re::ecs2::ShadowProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowProxyComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ShadowProxyComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>,re::Slice<re::ecs2::ShadowProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>*,re::Slice<re::ecs2::ShadowProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>,re::Slice<re::ecs2::ShadowProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowProxyComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ShadowProxyComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>,re::Slice<re::ecs2::ShadowProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>*,re::Slice<re::ecs2::ShadowProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>,re::Slice<re::ecs2::ShadowProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowProxyComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ShadowProxyComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>,re::Slice<re::ecs2::ShadowProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>*,re::Slice<re::ecs2::ShadowProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>,re::Slice<re::ecs2::ShadowProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowProxyComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ShadowProxyComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ShadowProxyComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ShadowProxyComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ShadowProxyComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>,re::Slice<re::ecs2::ShadowProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>*,re::Slice<re::ecs2::ShadowProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowProxyComponent>,re::Slice<re::ecs2::ShadowProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowProxyComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::RenderPassGroupComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::RenderPassGroupComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::RenderPassGroupComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::RenderPassGroupComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

re::ecs2::RenderPassGroupComponent *re::ecs2::ComponentType<re::ecs2::RenderPassGroupComponent>::doMakeComponent@<X0>(re::ecs2::RenderPassGroupComponent **a1@<X8>)
{
  uint64_t v2 = (re::ecs2::RenderPassGroupComponent *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::RenderPassGroupComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType + 7)
                                                                                                + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::RenderPassGroupComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 40, 0);
  double result = re::ecs2::RenderPassGroupComponent::RenderPassGroupComponent(v2);
  *a1 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RenderPassGroupComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F53C0;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RenderPassGroupComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF830E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF830E0))
  {
    qword_26AF830D8 = re::ecs2::introspect_RenderPassGroupComponent(0);
    __cxa_guard_release(&qword_26AF830E0);
  }
  return qword_26AF830D8;
}

__n128 re::ecs2::ComponentType<re::ecs2::RenderPassGroupComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RenderPassGroupComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::RenderPassGroupComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F5350;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F53C0;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RenderPassGroupComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>,re::Slice<re::ecs2::RenderPassGroupComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>*,re::Slice<re::ecs2::RenderPassGroupComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>,re::Slice<re::ecs2::RenderPassGroupComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderPassGroupComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RenderPassGroupComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>,re::Slice<re::ecs2::RenderPassGroupComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>*,re::Slice<re::ecs2::RenderPassGroupComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>,re::Slice<re::ecs2::RenderPassGroupComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderPassGroupComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RenderPassGroupComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>,re::Slice<re::ecs2::RenderPassGroupComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>*,re::Slice<re::ecs2::RenderPassGroupComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>,re::Slice<re::ecs2::RenderPassGroupComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderPassGroupComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RenderPassGroupComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>,re::Slice<re::ecs2::RenderPassGroupComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>*,re::Slice<re::ecs2::RenderPassGroupComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>,re::Slice<re::ecs2::RenderPassGroupComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderPassGroupComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RenderPassGroupComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>,re::Slice<re::ecs2::RenderPassGroupComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>*,re::Slice<re::ecs2::RenderPassGroupComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>,re::Slice<re::ecs2::RenderPassGroupComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderPassGroupComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RenderPassGroupComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>,re::Slice<re::ecs2::RenderPassGroupComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>*,re::Slice<re::ecs2::RenderPassGroupComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>,re::Slice<re::ecs2::RenderPassGroupComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderPassGroupComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RenderPassGroupComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>,re::Slice<re::ecs2::RenderPassGroupComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>*,re::Slice<re::ecs2::RenderPassGroupComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>,re::Slice<re::ecs2::RenderPassGroupComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderPassGroupComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RenderPassGroupComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>,re::Slice<re::ecs2::RenderPassGroupComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>*,re::Slice<re::ecs2::RenderPassGroupComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>,re::Slice<re::ecs2::RenderPassGroupComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderPassGroupComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RenderPassGroupComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RenderPassGroupComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RenderPassGroupComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RenderPassGroupComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>,re::Slice<re::ecs2::RenderPassGroupComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>*,re::Slice<re::ecs2::RenderPassGroupComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupComponent>,re::Slice<re::ecs2::RenderPassGroupComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderPassGroupComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::RenderPassGroupReferenceComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::RenderPassGroupReferenceComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::RenderPassGroupReferenceComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::RenderPassGroupReferenceComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::RenderPassGroupReferenceComponent>::doMakeComponent(uint64_t *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::RenderPassGroupReferenceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::RenderPassGroupReferenceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 56, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(void *)(v2 + 48) = 0;
  *(_OWORD *)(v2 + 32) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F6F48;
  objc_initWeak((id *)(v2 + 32), 0);
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = 0;
  re::ecs2::EntityHandle::reset((re::ecs2::EntityHandle *)(v2 + 32));
  *a1 = v2;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RenderPassGroupReferenceComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F54D8;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RenderPassGroupReferenceComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF830F0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF830F0))
  {
    qword_26AF830E8 = re::ecs2::introspect_RenderPassGroupReferenceComponent(0);
    __cxa_guard_release(&qword_26AF830F0);
  }
  return qword_26AF830E8;
}

__n128 re::ecs2::ComponentType<re::ecs2::RenderPassGroupReferenceComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RenderPassGroupReferenceComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::RenderPassGroupReferenceComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F5468;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::RenderPassGroupReferenceComponent::~RenderPassGroupReferenceComponent(re::ecs2::RenderPassGroupReferenceComponent *this)
{
  uint64_t v2 = (id *)((char *)this + 32);
  re::ecs2::EntityHandle::reset((re::ecs2::RenderPassGroupReferenceComponent *)((char *)this + 32));
  objc_destroyWeak(v2);
  *((void *)this + 4) = 0;
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  id *v2;
  uint64_t vars8;

  uint64_t v2 = (id *)((char *)this + 32);
  re::ecs2::EntityHandle::reset((re::ecs2::RenderPassGroupReferenceComponent *)((char *)this + 32));
  objc_destroyWeak(v2);
  *((void *)this + 4) = 0;
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::RenderPassGroupReferenceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::RenderPassGroupReferenceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::RenderPassGroupReferenceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::RenderPassGroupReferenceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::RenderPassGroupReferenceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F54D8;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RenderPassGroupReferenceComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>,re::Slice<re::ecs2::RenderPassGroupReferenceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>*,re::Slice<re::ecs2::RenderPassGroupReferenceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>,re::Slice<re::ecs2::RenderPassGroupReferenceComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderPassGroupReferenceComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RenderPassGroupReferenceComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>,re::Slice<re::ecs2::RenderPassGroupReferenceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>*,re::Slice<re::ecs2::RenderPassGroupReferenceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>,re::Slice<re::ecs2::RenderPassGroupReferenceComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderPassGroupReferenceComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RenderPassGroupReferenceComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>,re::Slice<re::ecs2::RenderPassGroupReferenceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>*,re::Slice<re::ecs2::RenderPassGroupReferenceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>,re::Slice<re::ecs2::RenderPassGroupReferenceComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderPassGroupReferenceComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RenderPassGroupReferenceComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>,re::Slice<re::ecs2::RenderPassGroupReferenceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>*,re::Slice<re::ecs2::RenderPassGroupReferenceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>,re::Slice<re::ecs2::RenderPassGroupReferenceComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderPassGroupReferenceComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RenderPassGroupReferenceComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>,re::Slice<re::ecs2::RenderPassGroupReferenceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>*,re::Slice<re::ecs2::RenderPassGroupReferenceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>,re::Slice<re::ecs2::RenderPassGroupReferenceComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderPassGroupReferenceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RenderPassGroupReferenceComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>,re::Slice<re::ecs2::RenderPassGroupReferenceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>*,re::Slice<re::ecs2::RenderPassGroupReferenceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>,re::Slice<re::ecs2::RenderPassGroupReferenceComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderPassGroupReferenceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RenderPassGroupReferenceComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>,re::Slice<re::ecs2::RenderPassGroupReferenceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>*,re::Slice<re::ecs2::RenderPassGroupReferenceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>,re::Slice<re::ecs2::RenderPassGroupReferenceComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderPassGroupReferenceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RenderPassGroupReferenceComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>,re::Slice<re::ecs2::RenderPassGroupReferenceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>*,re::Slice<re::ecs2::RenderPassGroupReferenceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>,re::Slice<re::ecs2::RenderPassGroupReferenceComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderPassGroupReferenceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RenderPassGroupReferenceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RenderPassGroupReferenceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RenderPassGroupReferenceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RenderPassGroupReferenceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>,re::Slice<re::ecs2::RenderPassGroupReferenceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>*,re::Slice<re::ecs2::RenderPassGroupReferenceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderPassGroupReferenceComponent>,re::Slice<re::ecs2::RenderPassGroupReferenceComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderPassGroupReferenceComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::AnchoringResourceComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AnchoringResourceComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::AnchoringResourceComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::AnchoringResourceComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::AnchoringResourceComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::AnchoringResourceComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::AnchoringResourceComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 104, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(void *)(v2 + 96) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E3E38;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = 0;
  *(void *)(v3 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 80) = 0u;
  *(void *)(v3 + 96) = 0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AnchoringResourceComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F55F0;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AnchoringResourceComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83100, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF83100))
  {
    qword_26AF830F8 = re::ecs2::introspect_AnchoringResourceComponent(0);
    __cxa_guard_release(&qword_26AF83100);
  }
  return qword_26AF830F8;
}

__n128 re::ecs2::ComponentType<re::ecs2::AnchoringResourceComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AnchoringResourceComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AnchoringResourceComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F5580;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F55F0;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AnchoringResourceComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>,re::Slice<re::ecs2::AnchoringResourceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>*,re::Slice<re::ecs2::AnchoringResourceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>,re::Slice<re::ecs2::AnchoringResourceComponent*>>::Subscription const&,re::Slice<re::ecs2::AnchoringResourceComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AnchoringResourceComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>,re::Slice<re::ecs2::AnchoringResourceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>*,re::Slice<re::ecs2::AnchoringResourceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>,re::Slice<re::ecs2::AnchoringResourceComponent*>>::Subscription const&,re::Slice<re::ecs2::AnchoringResourceComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AnchoringResourceComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>,re::Slice<re::ecs2::AnchoringResourceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>*,re::Slice<re::ecs2::AnchoringResourceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>,re::Slice<re::ecs2::AnchoringResourceComponent*>>::Subscription const&,re::Slice<re::ecs2::AnchoringResourceComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AnchoringResourceComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>,re::Slice<re::ecs2::AnchoringResourceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>*,re::Slice<re::ecs2::AnchoringResourceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>,re::Slice<re::ecs2::AnchoringResourceComponent*>>::Subscription const&,re::Slice<re::ecs2::AnchoringResourceComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AnchoringResourceComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>,re::Slice<re::ecs2::AnchoringResourceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>*,re::Slice<re::ecs2::AnchoringResourceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>,re::Slice<re::ecs2::AnchoringResourceComponent*>>::Subscription const&,re::Slice<re::ecs2::AnchoringResourceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AnchoringResourceComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>,re::Slice<re::ecs2::AnchoringResourceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>*,re::Slice<re::ecs2::AnchoringResourceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>,re::Slice<re::ecs2::AnchoringResourceComponent*>>::Subscription const&,re::Slice<re::ecs2::AnchoringResourceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AnchoringResourceComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>,re::Slice<re::ecs2::AnchoringResourceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>*,re::Slice<re::ecs2::AnchoringResourceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>,re::Slice<re::ecs2::AnchoringResourceComponent*>>::Subscription const&,re::Slice<re::ecs2::AnchoringResourceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AnchoringResourceComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>,re::Slice<re::ecs2::AnchoringResourceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>*,re::Slice<re::ecs2::AnchoringResourceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>,re::Slice<re::ecs2::AnchoringResourceComponent*>>::Subscription const&,re::Slice<re::ecs2::AnchoringResourceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AnchoringResourceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AnchoringResourceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AnchoringResourceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AnchoringResourceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>,re::Slice<re::ecs2::AnchoringResourceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>*,re::Slice<re::ecs2::AnchoringResourceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchoringResourceComponent>,re::Slice<re::ecs2::AnchoringResourceComponent*>>::Subscription const&,re::Slice<re::ecs2::AnchoringResourceComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::GroundingShadowComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::GroundingShadowComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::GroundingShadowComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::GroundingShadowComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::GroundingShadowComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::GroundingShadowComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::GroundingShadowComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 40, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(void *)(v2 + 32) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(void *)uint64_t v3 = &unk_26E6F5708;
  *(void *)&double result = 0x1000000010000;
  *(_DWORD *)(v3 + 24) = 0x10000;
  *(unsigned char *)(v3 + 28) = 1;
  *(_DWORD *)(v3 + 32) = 0;
  *(unsigned char *)(v3 + 36) = 0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::GroundingShadowComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F5790;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::GroundingShadowComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83110, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF83110))
  {
    qword_26AF83108 = re::ecs2::introspect_GroundingShadowComponent(0);
    __cxa_guard_release(&qword_26AF83110);
  }
  return qword_26AF83108;
}

__n128 re::ecs2::ComponentType<re::ecs2::GroundingShadowComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::GroundingShadowComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::GroundingShadowComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F5698;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::GroundingShadowComponent::~GroundingShadowComponent(re::ecs2::GroundingShadowComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::GroundingShadowComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::GroundingShadowComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::GroundingShadowComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::GroundingShadowComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::GroundingShadowComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F5790;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::GroundingShadowComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>,re::Slice<re::ecs2::GroundingShadowComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>*,re::Slice<re::ecs2::GroundingShadowComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>,re::Slice<re::ecs2::GroundingShadowComponent*>>::Subscription const&,re::Slice<re::ecs2::GroundingShadowComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::GroundingShadowComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>,re::Slice<re::ecs2::GroundingShadowComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>*,re::Slice<re::ecs2::GroundingShadowComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>,re::Slice<re::ecs2::GroundingShadowComponent*>>::Subscription const&,re::Slice<re::ecs2::GroundingShadowComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::GroundingShadowComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>,re::Slice<re::ecs2::GroundingShadowComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>*,re::Slice<re::ecs2::GroundingShadowComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>,re::Slice<re::ecs2::GroundingShadowComponent*>>::Subscription const&,re::Slice<re::ecs2::GroundingShadowComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::GroundingShadowComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>,re::Slice<re::ecs2::GroundingShadowComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>*,re::Slice<re::ecs2::GroundingShadowComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>,re::Slice<re::ecs2::GroundingShadowComponent*>>::Subscription const&,re::Slice<re::ecs2::GroundingShadowComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::GroundingShadowComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>,re::Slice<re::ecs2::GroundingShadowComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>*,re::Slice<re::ecs2::GroundingShadowComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>,re::Slice<re::ecs2::GroundingShadowComponent*>>::Subscription const&,re::Slice<re::ecs2::GroundingShadowComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::GroundingShadowComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>,re::Slice<re::ecs2::GroundingShadowComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>*,re::Slice<re::ecs2::GroundingShadowComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>,re::Slice<re::ecs2::GroundingShadowComponent*>>::Subscription const&,re::Slice<re::ecs2::GroundingShadowComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::GroundingShadowComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>,re::Slice<re::ecs2::GroundingShadowComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>*,re::Slice<re::ecs2::GroundingShadowComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>,re::Slice<re::ecs2::GroundingShadowComponent*>>::Subscription const&,re::Slice<re::ecs2::GroundingShadowComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::GroundingShadowComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>,re::Slice<re::ecs2::GroundingShadowComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>*,re::Slice<re::ecs2::GroundingShadowComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>,re::Slice<re::ecs2::GroundingShadowComponent*>>::Subscription const&,re::Slice<re::ecs2::GroundingShadowComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::GroundingShadowComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::GroundingShadowComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::GroundingShadowComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::GroundingShadowComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>,re::Slice<re::ecs2::GroundingShadowComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>*,re::Slice<re::ecs2::GroundingShadowComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundingShadowComponent>,re::Slice<re::ecs2::GroundingShadowComponent*>>::Subscription const&,re::Slice<re::ecs2::GroundingShadowComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::DynamicLightShadowComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::DynamicLightShadowComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::DynamicLightShadowComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::DynamicLightShadowComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::DynamicLightShadowComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::DynamicLightShadowComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::DynamicLightShadowComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 32, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(_WORD *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F58A8;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DynamicLightShadowComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F5930;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DynamicLightShadowComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83120, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF83120))
  {
    qword_26AF83118 = re::ecs2::introspect_DynamicLightShadowComponent(0);
    __cxa_guard_release(&qword_26AF83120);
  }
  return qword_26AF83118;
}

__n128 re::ecs2::ComponentType<re::ecs2::DynamicLightShadowComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DynamicLightShadowComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::DynamicLightShadowComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F5838;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::DynamicLightShadowComponent::~DynamicLightShadowComponent(re::ecs2::DynamicLightShadowComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::DynamicLightShadowComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::DynamicLightShadowComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::DynamicLightShadowComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::DynamicLightShadowComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::DynamicLightShadowComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F5930;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DynamicLightShadowComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>,re::Slice<re::ecs2::DynamicLightShadowComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>*,re::Slice<re::ecs2::DynamicLightShadowComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>,re::Slice<re::ecs2::DynamicLightShadowComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicLightShadowComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DynamicLightShadowComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>,re::Slice<re::ecs2::DynamicLightShadowComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>*,re::Slice<re::ecs2::DynamicLightShadowComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>,re::Slice<re::ecs2::DynamicLightShadowComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicLightShadowComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DynamicLightShadowComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>,re::Slice<re::ecs2::DynamicLightShadowComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>*,re::Slice<re::ecs2::DynamicLightShadowComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>,re::Slice<re::ecs2::DynamicLightShadowComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicLightShadowComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DynamicLightShadowComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>,re::Slice<re::ecs2::DynamicLightShadowComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>*,re::Slice<re::ecs2::DynamicLightShadowComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>,re::Slice<re::ecs2::DynamicLightShadowComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicLightShadowComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DynamicLightShadowComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>,re::Slice<re::ecs2::DynamicLightShadowComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>*,re::Slice<re::ecs2::DynamicLightShadowComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>,re::Slice<re::ecs2::DynamicLightShadowComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicLightShadowComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DynamicLightShadowComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>,re::Slice<re::ecs2::DynamicLightShadowComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>*,re::Slice<re::ecs2::DynamicLightShadowComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>,re::Slice<re::ecs2::DynamicLightShadowComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicLightShadowComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DynamicLightShadowComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>,re::Slice<re::ecs2::DynamicLightShadowComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>*,re::Slice<re::ecs2::DynamicLightShadowComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>,re::Slice<re::ecs2::DynamicLightShadowComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicLightShadowComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DynamicLightShadowComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>,re::Slice<re::ecs2::DynamicLightShadowComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>*,re::Slice<re::ecs2::DynamicLightShadowComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>,re::Slice<re::ecs2::DynamicLightShadowComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicLightShadowComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DynamicLightShadowComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DynamicLightShadowComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DynamicLightShadowComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DynamicLightShadowComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>,re::Slice<re::ecs2::DynamicLightShadowComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>*,re::Slice<re::ecs2::DynamicLightShadowComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicLightShadowComponent>,re::Slice<re::ecs2::DynamicLightShadowComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicLightShadowComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::MaterialRenderStateArrayComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::MaterialRenderStateArrayComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::MaterialRenderStateArrayComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::MaterialRenderStateArrayComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::MaterialRenderStateArrayComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::MaterialRenderStateArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::MaterialRenderStateArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 72, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(void *)(v2 + 64) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F5A48;
  *(void *)(v3 + 64) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = 0;
  *(void *)(v3 + 32) = 0;
  *(_DWORD *)(v3 + 56) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MaterialRenderStateArrayComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F5AD0;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MaterialRenderStateArrayComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83130, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF83130))
  {
    qword_26AF83128 = re::ecs2::introspect_MaterialRenderStateArrayComponent(0);
    __cxa_guard_release(&qword_26AF83130);
  }
  return qword_26AF83128;
}

__n128 re::ecs2::ComponentType<re::ecs2::MaterialRenderStateArrayComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MaterialRenderStateArrayComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::MaterialRenderStateArrayComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F59D8;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::MaterialRenderStateArrayComponent::~MaterialRenderStateArrayComponent(re::ecs2::MaterialRenderStateArrayComponent *this)
{
  *(void *)this = &unk_26E6F5A48;
  re::DynamicArray<unsigned long>::deinit((uint64_t)this + 32);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6F5A48;
  re::DynamicArray<unsigned long>::deinit((uint64_t)this + 32);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::MaterialRenderStateArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::MaterialRenderStateArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::MaterialRenderStateArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return 15;
}

void *re::ecs2::ComponentImpl<re::ecs2::MaterialRenderStateArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::MaterialRenderStateArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F5AD0;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MaterialRenderStateArrayComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>,re::Slice<re::ecs2::MaterialRenderStateArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>*,re::Slice<re::ecs2::MaterialRenderStateArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>,re::Slice<re::ecs2::MaterialRenderStateArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialRenderStateArrayComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MaterialRenderStateArrayComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>,re::Slice<re::ecs2::MaterialRenderStateArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>*,re::Slice<re::ecs2::MaterialRenderStateArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>,re::Slice<re::ecs2::MaterialRenderStateArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialRenderStateArrayComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MaterialRenderStateArrayComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>,re::Slice<re::ecs2::MaterialRenderStateArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>*,re::Slice<re::ecs2::MaterialRenderStateArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>,re::Slice<re::ecs2::MaterialRenderStateArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialRenderStateArrayComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MaterialRenderStateArrayComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>,re::Slice<re::ecs2::MaterialRenderStateArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>*,re::Slice<re::ecs2::MaterialRenderStateArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>,re::Slice<re::ecs2::MaterialRenderStateArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialRenderStateArrayComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MaterialRenderStateArrayComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>,re::Slice<re::ecs2::MaterialRenderStateArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>*,re::Slice<re::ecs2::MaterialRenderStateArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>,re::Slice<re::ecs2::MaterialRenderStateArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialRenderStateArrayComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MaterialRenderStateArrayComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>,re::Slice<re::ecs2::MaterialRenderStateArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>*,re::Slice<re::ecs2::MaterialRenderStateArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>,re::Slice<re::ecs2::MaterialRenderStateArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialRenderStateArrayComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MaterialRenderStateArrayComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>,re::Slice<re::ecs2::MaterialRenderStateArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>*,re::Slice<re::ecs2::MaterialRenderStateArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>,re::Slice<re::ecs2::MaterialRenderStateArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialRenderStateArrayComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MaterialRenderStateArrayComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>,re::Slice<re::ecs2::MaterialRenderStateArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>*,re::Slice<re::ecs2::MaterialRenderStateArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>,re::Slice<re::ecs2::MaterialRenderStateArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialRenderStateArrayComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MaterialRenderStateArrayComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MaterialRenderStateArrayComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MaterialRenderStateArrayComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MaterialRenderStateArrayComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>,re::Slice<re::ecs2::MaterialRenderStateArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>*,re::Slice<re::ecs2::MaterialRenderStateArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialRenderStateArrayComponent>,re::Slice<re::ecs2::MaterialRenderStateArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialRenderStateArrayComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ClientWorldOriginRefComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClientWorldOriginRefComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ClientWorldOriginRefComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::ClientWorldOriginRefComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::ClientWorldOriginRefComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::ClientWorldOriginRefComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::ClientWorldOriginRefComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType+ 7), 40, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(void *)(v2 + 32) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F5BE8;
  *(void *)(v3 + 32) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClientWorldOriginRefComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F5C70;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClientWorldOriginRefComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83140, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF83140))
  {
    qword_26AF83138 = re::ecs2::introspect_ClientWorldOriginRefComponent(0);
    __cxa_guard_release(&qword_26AF83140);
  }
  return qword_26AF83138;
}

__n128 re::ecs2::ComponentType<re::ecs2::ClientWorldOriginRefComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClientWorldOriginRefComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClientWorldOriginRefComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F5B78;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::ClientWorldOriginRefComponent::~ClientWorldOriginRefComponent(re::ecs2::ClientWorldOriginRefComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ClientWorldOriginRefComponent,(re::ecs2::ComponentTypeBase::Flags)1>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::ClientWorldOriginRefComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ClientWorldOriginRefComponent,(re::ecs2::ComponentTypeBase::Flags)1>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::ClientWorldOriginRefComponent,(re::ecs2::ComponentTypeBase::Flags)1>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::ClientWorldOriginRefComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F5C70;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ClientWorldOriginRefComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>,re::Slice<re::ecs2::ClientWorldOriginRefComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>*,re::Slice<re::ecs2::ClientWorldOriginRefComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>,re::Slice<re::ecs2::ClientWorldOriginRefComponent*>>::Subscription const&,re::Slice<re::ecs2::ClientWorldOriginRefComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ClientWorldOriginRefComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>,re::Slice<re::ecs2::ClientWorldOriginRefComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>*,re::Slice<re::ecs2::ClientWorldOriginRefComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>,re::Slice<re::ecs2::ClientWorldOriginRefComponent*>>::Subscription const&,re::Slice<re::ecs2::ClientWorldOriginRefComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ClientWorldOriginRefComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>,re::Slice<re::ecs2::ClientWorldOriginRefComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>*,re::Slice<re::ecs2::ClientWorldOriginRefComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>,re::Slice<re::ecs2::ClientWorldOriginRefComponent*>>::Subscription const&,re::Slice<re::ecs2::ClientWorldOriginRefComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ClientWorldOriginRefComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>,re::Slice<re::ecs2::ClientWorldOriginRefComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>*,re::Slice<re::ecs2::ClientWorldOriginRefComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>,re::Slice<re::ecs2::ClientWorldOriginRefComponent*>>::Subscription const&,re::Slice<re::ecs2::ClientWorldOriginRefComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ClientWorldOriginRefComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>,re::Slice<re::ecs2::ClientWorldOriginRefComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>*,re::Slice<re::ecs2::ClientWorldOriginRefComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>,re::Slice<re::ecs2::ClientWorldOriginRefComponent*>>::Subscription const&,re::Slice<re::ecs2::ClientWorldOriginRefComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ClientWorldOriginRefComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>,re::Slice<re::ecs2::ClientWorldOriginRefComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>*,re::Slice<re::ecs2::ClientWorldOriginRefComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>,re::Slice<re::ecs2::ClientWorldOriginRefComponent*>>::Subscription const&,re::Slice<re::ecs2::ClientWorldOriginRefComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ClientWorldOriginRefComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>,re::Slice<re::ecs2::ClientWorldOriginRefComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>*,re::Slice<re::ecs2::ClientWorldOriginRefComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>,re::Slice<re::ecs2::ClientWorldOriginRefComponent*>>::Subscription const&,re::Slice<re::ecs2::ClientWorldOriginRefComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ClientWorldOriginRefComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>,re::Slice<re::ecs2::ClientWorldOriginRefComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>*,re::Slice<re::ecs2::ClientWorldOriginRefComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>,re::Slice<re::ecs2::ClientWorldOriginRefComponent*>>::Subscription const&,re::Slice<re::ecs2::ClientWorldOriginRefComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ClientWorldOriginRefComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ClientWorldOriginRefComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ClientWorldOriginRefComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ClientWorldOriginRefComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>,re::Slice<re::ecs2::ClientWorldOriginRefComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>*,re::Slice<re::ecs2::ClientWorldOriginRefComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClientWorldOriginRefComponent>,re::Slice<re::ecs2::ClientWorldOriginRefComponent*>>::Subscription const&,re::Slice<re::ecs2::ClientWorldOriginRefComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ClientAnchorSyncComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClientAnchorSyncComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ClientAnchorSyncComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::ClientAnchorSyncComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::ClientAnchorSyncComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::ClientAnchorSyncComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::ClientAnchorSyncComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 96, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F5D88;
  *(_WORD *)(v3 + 2re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = 0;
  *(_OWORD *)(v3 + 32) = xmmword_23435FD50;
  *(_OWORD *)(v3 + 48) = xmmword_23435FD60;
  double result = 0.0;
  *(_OWORD *)(v3 + 64) = xmmword_23435FD80;
  *(_OWORD *)(v3 + 80) = xmmword_23435FBB0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClientAnchorSyncComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F5E10;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClientAnchorSyncComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83150, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF83150))
  {
    qword_26AF83148 = re::ecs2::introspect_ClientAnchorSyncComponent(0);
    __cxa_guard_release(&qword_26AF83150);
  }
  return qword_26AF83148;
}

__n128 re::ecs2::ComponentType<re::ecs2::ClientAnchorSyncComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClientAnchorSyncComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClientAnchorSyncComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F5D18;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::ClientAnchorSyncComponent::~ClientAnchorSyncComponent(re::ecs2::ClientAnchorSyncComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ClientAnchorSyncComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::ClientAnchorSyncComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ClientAnchorSyncComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::ClientAnchorSyncComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::ClientAnchorSyncComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F5E10;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ClientAnchorSyncComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>,re::Slice<re::ecs2::ClientAnchorSyncComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>*,re::Slice<re::ecs2::ClientAnchorSyncComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>,re::Slice<re::ecs2::ClientAnchorSyncComponent*>>::Subscription const&,re::Slice<re::ecs2::ClientAnchorSyncComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ClientAnchorSyncComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>,re::Slice<re::ecs2::ClientAnchorSyncComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>*,re::Slice<re::ecs2::ClientAnchorSyncComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>,re::Slice<re::ecs2::ClientAnchorSyncComponent*>>::Subscription const&,re::Slice<re::ecs2::ClientAnchorSyncComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ClientAnchorSyncComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>,re::Slice<re::ecs2::ClientAnchorSyncComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>*,re::Slice<re::ecs2::ClientAnchorSyncComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>,re::Slice<re::ecs2::ClientAnchorSyncComponent*>>::Subscription const&,re::Slice<re::ecs2::ClientAnchorSyncComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ClientAnchorSyncComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>,re::Slice<re::ecs2::ClientAnchorSyncComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>*,re::Slice<re::ecs2::ClientAnchorSyncComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>,re::Slice<re::ecs2::ClientAnchorSyncComponent*>>::Subscription const&,re::Slice<re::ecs2::ClientAnchorSyncComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ClientAnchorSyncComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>,re::Slice<re::ecs2::ClientAnchorSyncComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>*,re::Slice<re::ecs2::ClientAnchorSyncComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>,re::Slice<re::ecs2::ClientAnchorSyncComponent*>>::Subscription const&,re::Slice<re::ecs2::ClientAnchorSyncComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ClientAnchorSyncComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>,re::Slice<re::ecs2::ClientAnchorSyncComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>*,re::Slice<re::ecs2::ClientAnchorSyncComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>,re::Slice<re::ecs2::ClientAnchorSyncComponent*>>::Subscription const&,re::Slice<re::ecs2::ClientAnchorSyncComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ClientAnchorSyncComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>,re::Slice<re::ecs2::ClientAnchorSyncComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>*,re::Slice<re::ecs2::ClientAnchorSyncComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>,re::Slice<re::ecs2::ClientAnchorSyncComponent*>>::Subscription const&,re::Slice<re::ecs2::ClientAnchorSyncComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ClientAnchorSyncComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>,re::Slice<re::ecs2::ClientAnchorSyncComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>*,re::Slice<re::ecs2::ClientAnchorSyncComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>,re::Slice<re::ecs2::ClientAnchorSyncComponent*>>::Subscription const&,re::Slice<re::ecs2::ClientAnchorSyncComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ClientAnchorSyncComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ClientAnchorSyncComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ClientAnchorSyncComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ClientAnchorSyncComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>,re::Slice<re::ecs2::ClientAnchorSyncComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>*,re::Slice<re::ecs2::ClientAnchorSyncComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClientAnchorSyncComponent>,re::Slice<re::ecs2::ClientAnchorSyncComponent*>>::Subscription const&,re::Slice<re::ecs2::ClientAnchorSyncComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PreviewSupportComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PreviewSupportComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PreviewSupportComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::PreviewSupportComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::PreviewSupportComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::PreviewSupportComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::PreviewSupportComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 32, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F5F28;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PreviewSupportComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F5FB0;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PreviewSupportComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83160, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF83160))
  {
    qword_26AF83158 = re::ecs2::introspect_PreviewSupportComponent(0);
    __cxa_guard_release(&qword_26AF83160);
  }
  return qword_26AF83158;
}

__n128 re::ecs2::ComponentType<re::ecs2::PreviewSupportComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PreviewSupportComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PreviewSupportComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F5EB8;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::PreviewSupportComponent::~PreviewSupportComponent(re::ecs2::PreviewSupportComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PreviewSupportComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::PreviewSupportComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PreviewSupportComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::PreviewSupportComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::PreviewSupportComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F5FB0;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PreviewSupportComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>,re::Slice<re::ecs2::PreviewSupportComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>*,re::Slice<re::ecs2::PreviewSupportComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>,re::Slice<re::ecs2::PreviewSupportComponent*>>::Subscription const&,re::Slice<re::ecs2::PreviewSupportComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PreviewSupportComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>,re::Slice<re::ecs2::PreviewSupportComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>*,re::Slice<re::ecs2::PreviewSupportComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>,re::Slice<re::ecs2::PreviewSupportComponent*>>::Subscription const&,re::Slice<re::ecs2::PreviewSupportComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PreviewSupportComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>,re::Slice<re::ecs2::PreviewSupportComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>*,re::Slice<re::ecs2::PreviewSupportComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>,re::Slice<re::ecs2::PreviewSupportComponent*>>::Subscription const&,re::Slice<re::ecs2::PreviewSupportComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PreviewSupportComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>,re::Slice<re::ecs2::PreviewSupportComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>*,re::Slice<re::ecs2::PreviewSupportComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>,re::Slice<re::ecs2::PreviewSupportComponent*>>::Subscription const&,re::Slice<re::ecs2::PreviewSupportComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PreviewSupportComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>,re::Slice<re::ecs2::PreviewSupportComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>*,re::Slice<re::ecs2::PreviewSupportComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>,re::Slice<re::ecs2::PreviewSupportComponent*>>::Subscription const&,re::Slice<re::ecs2::PreviewSupportComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PreviewSupportComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>,re::Slice<re::ecs2::PreviewSupportComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>*,re::Slice<re::ecs2::PreviewSupportComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>,re::Slice<re::ecs2::PreviewSupportComponent*>>::Subscription const&,re::Slice<re::ecs2::PreviewSupportComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PreviewSupportComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>,re::Slice<re::ecs2::PreviewSupportComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>*,re::Slice<re::ecs2::PreviewSupportComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>,re::Slice<re::ecs2::PreviewSupportComponent*>>::Subscription const&,re::Slice<re::ecs2::PreviewSupportComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PreviewSupportComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>,re::Slice<re::ecs2::PreviewSupportComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>*,re::Slice<re::ecs2::PreviewSupportComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>,re::Slice<re::ecs2::PreviewSupportComponent*>>::Subscription const&,re::Slice<re::ecs2::PreviewSupportComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PreviewSupportComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PreviewSupportComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PreviewSupportComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PreviewSupportComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>,re::Slice<re::ecs2::PreviewSupportComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>*,re::Slice<re::ecs2::PreviewSupportComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PreviewSupportComponent>,re::Slice<re::ecs2::PreviewSupportComponent*>>::Subscription const&,re::Slice<re::ecs2::PreviewSupportComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::SelectableSceneContentIdentifierComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SelectableSceneContentIdentifierComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::SelectableSceneContentIdentifierComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::SelectableSceneContentIdentifierComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::SelectableSceneContentIdentifierComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::SelectableSceneContentIdentifierComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::SelectableSceneContentIdentifierComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 32, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F60C8;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SelectableSceneContentIdentifierComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F6150;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SelectableSceneContentIdentifierComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83170, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF83170))
  {
    qword_26AF83168 = re::ecs2::introspect_SelectableSceneContentIdentifierComponent(0);
    __cxa_guard_release(&qword_26AF83170);
  }
  return qword_26AF83168;
}

__n128 re::ecs2::ComponentType<re::ecs2::SelectableSceneContentIdentifierComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SelectableSceneContentIdentifierComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SelectableSceneContentIdentifierComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F6058;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SelectableSceneContentIdentifierComponent::~SelectableSceneContentIdentifierComponent(re::ecs2::SelectableSceneContentIdentifierComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SelectableSceneContentIdentifierComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::SelectableSceneContentIdentifierComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SelectableSceneContentIdentifierComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::SelectableSceneContentIdentifierComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::SelectableSceneContentIdentifierComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F6150;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SelectableSceneContentIdentifierComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>,re::Slice<re::ecs2::SelectableSceneContentIdentifierComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>*,re::Slice<re::ecs2::SelectableSceneContentIdentifierComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>,re::Slice<re::ecs2::SelectableSceneContentIdentifierComponent*>>::Subscription const&,re::Slice<re::ecs2::SelectableSceneContentIdentifierComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SelectableSceneContentIdentifierComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>,re::Slice<re::ecs2::SelectableSceneContentIdentifierComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>*,re::Slice<re::ecs2::SelectableSceneContentIdentifierComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>,re::Slice<re::ecs2::SelectableSceneContentIdentifierComponent*>>::Subscription const&,re::Slice<re::ecs2::SelectableSceneContentIdentifierComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SelectableSceneContentIdentifierComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>,re::Slice<re::ecs2::SelectableSceneContentIdentifierComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>*,re::Slice<re::ecs2::SelectableSceneContentIdentifierComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>,re::Slice<re::ecs2::SelectableSceneContentIdentifierComponent*>>::Subscription const&,re::Slice<re::ecs2::SelectableSceneContentIdentifierComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SelectableSceneContentIdentifierComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>,re::Slice<re::ecs2::SelectableSceneContentIdentifierComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>*,re::Slice<re::ecs2::SelectableSceneContentIdentifierComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>,re::Slice<re::ecs2::SelectableSceneContentIdentifierComponent*>>::Subscription const&,re::Slice<re::ecs2::SelectableSceneContentIdentifierComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SelectableSceneContentIdentifierComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>,re::Slice<re::ecs2::SelectableSceneContentIdentifierComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>*,re::Slice<re::ecs2::SelectableSceneContentIdentifierComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>,re::Slice<re::ecs2::SelectableSceneContentIdentifierComponent*>>::Subscription const&,re::Slice<re::ecs2::SelectableSceneContentIdentifierComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SelectableSceneContentIdentifierComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>,re::Slice<re::ecs2::SelectableSceneContentIdentifierComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>*,re::Slice<re::ecs2::SelectableSceneContentIdentifierComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>,re::Slice<re::ecs2::SelectableSceneContentIdentifierComponent*>>::Subscription const&,re::Slice<re::ecs2::SelectableSceneContentIdentifierComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SelectableSceneContentIdentifierComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>,re::Slice<re::ecs2::SelectableSceneContentIdentifierComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>*,re::Slice<re::ecs2::SelectableSceneContentIdentifierComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>,re::Slice<re::ecs2::SelectableSceneContentIdentifierComponent*>>::Subscription const&,re::Slice<re::ecs2::SelectableSceneContentIdentifierComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SelectableSceneContentIdentifierComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>,re::Slice<re::ecs2::SelectableSceneContentIdentifierComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>*,re::Slice<re::ecs2::SelectableSceneContentIdentifierComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>,re::Slice<re::ecs2::SelectableSceneContentIdentifierComponent*>>::Subscription const&,re::Slice<re::ecs2::SelectableSceneContentIdentifierComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SelectableSceneContentIdentifierComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SelectableSceneContentIdentifierComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SelectableSceneContentIdentifierComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SelectableSceneContentIdentifierComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>,re::Slice<re::ecs2::SelectableSceneContentIdentifierComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>*,re::Slice<re::ecs2::SelectableSceneContentIdentifierComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SelectableSceneContentIdentifierComponent>,re::Slice<re::ecs2::SelectableSceneContentIdentifierComponent*>>::Subscription const&,re::Slice<re::ecs2::SelectableSceneContentIdentifierComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::BillboardComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::BillboardComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::BillboardComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::BillboardComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::BillboardComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::BillboardComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::BillboardComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 96, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F6268;
  double result = 0.0078125;
  *(_OWORD *)(v3 + 32) = xmmword_23435FD60;
  *(_OWORD *)(v3 + 48) = xmmword_23435FD80;
  *(_OWORD *)(v3 + 64) = xmmword_23435FD60;
  *(_DWORD *)(v3 + 80) = 1065353216;
  *(_WORD *)(v3 + 84) = 1;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::BillboardComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F62F0;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::BillboardComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83180, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF83180))
  {
    qword_26AF83178 = re::ecs2::introspect_BillboardComponent(0);
    __cxa_guard_release(&qword_26AF83180);
  }
  return qword_26AF83178;
}

__n128 re::ecs2::ComponentType<re::ecs2::BillboardComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::BillboardComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::BillboardComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F61F8;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::BillboardComponent::~BillboardComponent(re::ecs2::BillboardComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::BillboardComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::BillboardComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::BillboardComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::BillboardComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::BillboardComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F62F0;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::BillboardComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>,re::Slice<re::ecs2::BillboardComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>*,re::Slice<re::ecs2::BillboardComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>,re::Slice<re::ecs2::BillboardComponent*>>::Subscription const&,re::Slice<re::ecs2::BillboardComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::BillboardComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>,re::Slice<re::ecs2::BillboardComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>*,re::Slice<re::ecs2::BillboardComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>,re::Slice<re::ecs2::BillboardComponent*>>::Subscription const&,re::Slice<re::ecs2::BillboardComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::BillboardComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>,re::Slice<re::ecs2::BillboardComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>*,re::Slice<re::ecs2::BillboardComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>,re::Slice<re::ecs2::BillboardComponent*>>::Subscription const&,re::Slice<re::ecs2::BillboardComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::BillboardComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>,re::Slice<re::ecs2::BillboardComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>*,re::Slice<re::ecs2::BillboardComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>,re::Slice<re::ecs2::BillboardComponent*>>::Subscription const&,re::Slice<re::ecs2::BillboardComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::BillboardComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>,re::Slice<re::ecs2::BillboardComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>*,re::Slice<re::ecs2::BillboardComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>,re::Slice<re::ecs2::BillboardComponent*>>::Subscription const&,re::Slice<re::ecs2::BillboardComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::BillboardComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>,re::Slice<re::ecs2::BillboardComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>*,re::Slice<re::ecs2::BillboardComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>,re::Slice<re::ecs2::BillboardComponent*>>::Subscription const&,re::Slice<re::ecs2::BillboardComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::BillboardComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>,re::Slice<re::ecs2::BillboardComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>*,re::Slice<re::ecs2::BillboardComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>,re::Slice<re::ecs2::BillboardComponent*>>::Subscription const&,re::Slice<re::ecs2::BillboardComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::BillboardComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>,re::Slice<re::ecs2::BillboardComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>*,re::Slice<re::ecs2::BillboardComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>,re::Slice<re::ecs2::BillboardComponent*>>::Subscription const&,re::Slice<re::ecs2::BillboardComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::BillboardComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::BillboardComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::BillboardComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::BillboardComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>,re::Slice<re::ecs2::BillboardComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>*,re::Slice<re::ecs2::BillboardComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BillboardComponent>,re::Slice<re::ecs2::BillboardComponent*>>::Subscription const&,re::Slice<re::ecs2::BillboardComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::SceneSpaceRootComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SceneSpaceRootComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::SceneSpaceRootComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::SceneSpaceRootComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::SceneSpaceRootComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::SceneSpaceRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::SceneSpaceRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 112, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E5A30;
  *(_OWORD *)(v3 + 32) = xmmword_23435FD50;
  *(_OWORD *)(v3 + 48) = xmmword_23435FD60;
  double result = 0.0;
  *(_OWORD *)(v3 + 64) = xmmword_23435FD80;
  *(_OWORD *)(v3 + 80) = xmmword_23435FBB0;
  *(_WORD *)(v3 + 96) = 0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SceneSpaceRootComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F6408;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SceneSpaceRootComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83190, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF83190))
  {
    qword_26AF83188 = re::ecs2::introspect_SceneSpaceRootComponent(0);
    __cxa_guard_release(&qword_26AF83190);
  }
  return qword_26AF83188;
}

__n128 re::ecs2::ComponentType<re::ecs2::SceneSpaceRootComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SceneSpaceRootComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SceneSpaceRootComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F6398;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F6408;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>::registerCallbacks(_DWORD *a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SceneSpaceRootComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>,re::Slice<re::ecs2::SceneSpaceRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>*,re::Slice<re::ecs2::SceneSpaceRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>,re::Slice<re::ecs2::SceneSpaceRootComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneSpaceRootComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SceneSpaceRootComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>,re::Slice<re::ecs2::SceneSpaceRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>*,re::Slice<re::ecs2::SceneSpaceRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>,re::Slice<re::ecs2::SceneSpaceRootComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneSpaceRootComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SceneSpaceRootComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>,re::Slice<re::ecs2::SceneSpaceRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>*,re::Slice<re::ecs2::SceneSpaceRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>,re::Slice<re::ecs2::SceneSpaceRootComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneSpaceRootComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SceneSpaceRootComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>,re::Slice<re::ecs2::SceneSpaceRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>*,re::Slice<re::ecs2::SceneSpaceRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>,re::Slice<re::ecs2::SceneSpaceRootComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneSpaceRootComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SceneSpaceRootComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>,re::Slice<re::ecs2::SceneSpaceRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>*,re::Slice<re::ecs2::SceneSpaceRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>,re::Slice<re::ecs2::SceneSpaceRootComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneSpaceRootComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SceneSpaceRootComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>,re::Slice<re::ecs2::SceneSpaceRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>*,re::Slice<re::ecs2::SceneSpaceRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>,re::Slice<re::ecs2::SceneSpaceRootComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneSpaceRootComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SceneSpaceRootComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>,re::Slice<re::ecs2::SceneSpaceRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>*,re::Slice<re::ecs2::SceneSpaceRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>,re::Slice<re::ecs2::SceneSpaceRootComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneSpaceRootComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SceneSpaceRootComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>,re::Slice<re::ecs2::SceneSpaceRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>*,re::Slice<re::ecs2::SceneSpaceRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>,re::Slice<re::ecs2::SceneSpaceRootComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneSpaceRootComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SceneSpaceRootComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SceneSpaceRootComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SceneSpaceRootComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SceneSpaceRootComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>,re::Slice<re::ecs2::SceneSpaceRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>*,re::Slice<re::ecs2::SceneSpaceRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>,re::Slice<re::ecs2::SceneSpaceRootComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneSpaceRootComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ImmersiveSpaceTrackerComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ImmersiveSpaceTrackerComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ImmersiveSpaceTrackerComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::ImmersiveSpaceTrackerComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::ImmersiveSpaceTrackerComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::ImmersiveSpaceTrackerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::ImmersiveSpaceTrackerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 32, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F6520;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ImmersiveSpaceTrackerComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F65A8;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ImmersiveSpaceTrackerComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF831A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF831A0))
  {
    qword_26AF83198 = re::ecs2::introspect_ImmersiveSpaceTrackerComponent(0);
    __cxa_guard_release(&qword_26AF831A0);
  }
  return qword_26AF83198;
}

__n128 re::ecs2::ComponentType<re::ecs2::ImmersiveSpaceTrackerComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ImmersiveSpaceTrackerComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ImmersiveSpaceTrackerComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F64B0;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::ImmersiveSpaceTrackerComponent::~ImmersiveSpaceTrackerComponent(re::ecs2::ImmersiveSpaceTrackerComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ImmersiveSpaceTrackerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::ImmersiveSpaceTrackerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ImmersiveSpaceTrackerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::ImmersiveSpaceTrackerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::ImmersiveSpaceTrackerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F65A8;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>::registerCallbacks(_DWORD *a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ImmersiveSpaceTrackerComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>*,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>>::Subscription const&,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ImmersiveSpaceTrackerComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>*,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>>::Subscription const&,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ImmersiveSpaceTrackerComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>*,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>>::Subscription const&,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ImmersiveSpaceTrackerComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>*,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>>::Subscription const&,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ImmersiveSpaceTrackerComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>*,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>>::Subscription const&,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ImmersiveSpaceTrackerComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>*,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>>::Subscription const&,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ImmersiveSpaceTrackerComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>*,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>>::Subscription const&,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ImmersiveSpaceTrackerComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>*,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>>::Subscription const&,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ImmersiveSpaceTrackerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ImmersiveSpaceTrackerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ImmersiveSpaceTrackerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ImmersiveSpaceTrackerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>*,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>>::Subscription const&,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::UILayerGeometryComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::UILayerGeometryComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::UILayerGeometryComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::UILayerGeometryComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

id re::ecs2::ComponentType<re::ecs2::UILayerGeometryComponent>::doMakeComponent@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (void *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::UILayerGeometryComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                       + 7)
                                                                    + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::UILayerGeometryComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 960, 0);
  bzero(v2, 0x3C0uLL);
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  v2[2] = 0;
  *((unsigned char *)v2 + 24) = 0;
  void *v2 = &unk_26E6F66C0;
  *(void *)((char *)v2 + 26) = 0x3000100010001;
  *((_WORD *)v2 + 1re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 4;
  *(_OWORD *)((char *)v2 + 36) = xmmword_234386CE0;
  *(void *)((char *)v2 + 52) = 0x3E4CCCCD3F800000;
  *((unsigned char *)v2 + 60) = 0;
  *((_DWORD *)v2 + 16) = 0;
  *((_WORD *)v2 + 34) = 1;
  *(_OWORD *)(v2 + 9) = re::ecs2::UILayerGeometryComponent::kInOutUVMinMax;
  *(_OWORD *)(v2 + re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 11) = xmmword_234386CF0;
  *((_DWORD *)v2 + 26) = 0;
  *((unsigned char *)v2 + 108) = 0;
  *(void *)((char *)v2 + 110) = 0x3000100010001;
  *((_WORD *)v2 + 59) = 4;
  *(_OWORD *)(v2 + 1re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = xmmword_234386CE0;
  v2[17] = 0x3E4CCCCD3F800000;
  *((unsigned char *)v2 + 144) = 0;
  *((_DWORD *)v2 + 3re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 0;
  *((_WORD *)v2 + 76) = 1;
  *((_OWORD *)v2 + 10) = re::ecs2::UILayerGeometryComponent::kInOutUVMinMax;
  *((_OWORD *)v2 + re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 11) = xmmword_234386CF0;
  *((_DWORD *)v2 + 48) = 0;
  re::GeomMesh::GeomMesh((re::GeomMesh *)(v2 + 25), 0);
  *(_OWORD *)(v2 + 11re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 0u;
  id result = objc_initWeak((id *)v2 + 119, 0);
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::UILayerGeometryComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F6748;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::UILayerGeometryComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF831B0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF831B0))
  {
    qword_26AF831A8 = re::ecs2::introspect_UILayerGeometryComponent(0);
    __cxa_guard_release(&qword_26AF831B0);
  }
  return qword_26AF831A8;
}

__n128 re::ecs2::ComponentType<re::ecs2::UILayerGeometryComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::UILayerGeometryComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::UILayerGeometryComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F6650;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::UILayerGeometryComponent::~UILayerGeometryComponent(id *this)
{
  this[119] = 0;
  re::GeomMesh::~GeomMesh((re::GeomMesh *)(this + 25));
  *this = &unk_26E6DECE0;
  objc_destructInstance(this + 1);
}

{
  uint64_t vars8;

  objc_destroyWeak(this + 119);
  this[119] = 0;
  re::GeomMesh::~GeomMesh((re::GeomMesh *)(this + 25));
  *this = &unk_26E6DECE0;
  objc_destructInstance(this + 1);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::UILayerGeometryComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::UILayerGeometryComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::UILayerGeometryComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::UILayerGeometryComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::UILayerGeometryComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F6748;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::UILayerGeometryComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>,re::Slice<re::ecs2::UILayerGeometryComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>*,re::Slice<re::ecs2::UILayerGeometryComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>,re::Slice<re::ecs2::UILayerGeometryComponent*>>::Subscription const&,re::Slice<re::ecs2::UILayerGeometryComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::UILayerGeometryComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>,re::Slice<re::ecs2::UILayerGeometryComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>*,re::Slice<re::ecs2::UILayerGeometryComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>,re::Slice<re::ecs2::UILayerGeometryComponent*>>::Subscription const&,re::Slice<re::ecs2::UILayerGeometryComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::UILayerGeometryComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>,re::Slice<re::ecs2::UILayerGeometryComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>*,re::Slice<re::ecs2::UILayerGeometryComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>,re::Slice<re::ecs2::UILayerGeometryComponent*>>::Subscription const&,re::Slice<re::ecs2::UILayerGeometryComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::UILayerGeometryComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>,re::Slice<re::ecs2::UILayerGeometryComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>*,re::Slice<re::ecs2::UILayerGeometryComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>,re::Slice<re::ecs2::UILayerGeometryComponent*>>::Subscription const&,re::Slice<re::ecs2::UILayerGeometryComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::UILayerGeometryComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>,re::Slice<re::ecs2::UILayerGeometryComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>*,re::Slice<re::ecs2::UILayerGeometryComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>,re::Slice<re::ecs2::UILayerGeometryComponent*>>::Subscription const&,re::Slice<re::ecs2::UILayerGeometryComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::UILayerGeometryComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>,re::Slice<re::ecs2::UILayerGeometryComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>*,re::Slice<re::ecs2::UILayerGeometryComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>,re::Slice<re::ecs2::UILayerGeometryComponent*>>::Subscription const&,re::Slice<re::ecs2::UILayerGeometryComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::UILayerGeometryComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>,re::Slice<re::ecs2::UILayerGeometryComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>*,re::Slice<re::ecs2::UILayerGeometryComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>,re::Slice<re::ecs2::UILayerGeometryComponent*>>::Subscription const&,re::Slice<re::ecs2::UILayerGeometryComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::UILayerGeometryComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>,re::Slice<re::ecs2::UILayerGeometryComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>*,re::Slice<re::ecs2::UILayerGeometryComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>,re::Slice<re::ecs2::UILayerGeometryComponent*>>::Subscription const&,re::Slice<re::ecs2::UILayerGeometryComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::UILayerGeometryComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::UILayerGeometryComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::UILayerGeometryComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::UILayerGeometryComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>,re::Slice<re::ecs2::UILayerGeometryComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>*,re::Slice<re::ecs2::UILayerGeometryComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UILayerGeometryComponent>,re::Slice<re::ecs2::UILayerGeometryComponent*>>::Subscription const&,re::Slice<re::ecs2::UILayerGeometryComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::FrameCountComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::FrameCountComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::FrameCountComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::FrameCountComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::FrameCountComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::FrameCountComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::FrameCountComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 40, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(void *)(v2 + 32) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F6860;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::FrameCountComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F68E8;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::FrameCountComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF831C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF831C0))
  {
    qword_26AF831B8 = re::ecs2::introspect_FrameCountComponent(0);
    __cxa_guard_release(&qword_26AF831C0);
  }
  return qword_26AF831B8;
}

__n128 re::ecs2::ComponentType<re::ecs2::FrameCountComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::FrameCountComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::FrameCountComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F67F0;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::FrameCountComponent::~FrameCountComponent(re::ecs2::FrameCountComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::FrameCountComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::FrameCountComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::FrameCountComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::FrameCountComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::FrameCountComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F68E8;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::FrameCountComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>,re::Slice<re::ecs2::FrameCountComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>*,re::Slice<re::ecs2::FrameCountComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>,re::Slice<re::ecs2::FrameCountComponent*>>::Subscription const&,re::Slice<re::ecs2::FrameCountComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::FrameCountComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>,re::Slice<re::ecs2::FrameCountComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>*,re::Slice<re::ecs2::FrameCountComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>,re::Slice<re::ecs2::FrameCountComponent*>>::Subscription const&,re::Slice<re::ecs2::FrameCountComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::FrameCountComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>,re::Slice<re::ecs2::FrameCountComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>*,re::Slice<re::ecs2::FrameCountComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>,re::Slice<re::ecs2::FrameCountComponent*>>::Subscription const&,re::Slice<re::ecs2::FrameCountComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::FrameCountComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>,re::Slice<re::ecs2::FrameCountComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>*,re::Slice<re::ecs2::FrameCountComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>,re::Slice<re::ecs2::FrameCountComponent*>>::Subscription const&,re::Slice<re::ecs2::FrameCountComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::FrameCountComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>,re::Slice<re::ecs2::FrameCountComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>*,re::Slice<re::ecs2::FrameCountComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>,re::Slice<re::ecs2::FrameCountComponent*>>::Subscription const&,re::Slice<re::ecs2::FrameCountComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::FrameCountComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>,re::Slice<re::ecs2::FrameCountComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>*,re::Slice<re::ecs2::FrameCountComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>,re::Slice<re::ecs2::FrameCountComponent*>>::Subscription const&,re::Slice<re::ecs2::FrameCountComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::FrameCountComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>,re::Slice<re::ecs2::FrameCountComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>*,re::Slice<re::ecs2::FrameCountComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>,re::Slice<re::ecs2::FrameCountComponent*>>::Subscription const&,re::Slice<re::ecs2::FrameCountComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::FrameCountComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>,re::Slice<re::ecs2::FrameCountComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>*,re::Slice<re::ecs2::FrameCountComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>,re::Slice<re::ecs2::FrameCountComponent*>>::Subscription const&,re::Slice<re::ecs2::FrameCountComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::FrameCountComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::FrameCountComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::FrameCountComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::FrameCountComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>,re::Slice<re::ecs2::FrameCountComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>*,re::Slice<re::ecs2::FrameCountComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrameCountComponent>,re::Slice<re::ecs2::FrameCountComponent*>>::Subscription const&,re::Slice<re::ecs2::FrameCountComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::CARETraceComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::CARETraceComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::CARETraceComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::CARETraceComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

int32x4_t re::ecs2::ComponentType<re::ecs2::CARETraceComponent>::doMakeComponent@<Q0>(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::CARETraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::CARETraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 64, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F6A00;
  int32x4_t result = vdupq_n_s32(0x7F800000u);
  *(void *)&long long v5 = 0x7F0000007FLL;
  *((void *)&v5 + 1) = 0x7F0000007FLL;
  *(int32x4_t *)(v3 + 32) = result;
  *(_OWORD *)(v3 + 48) = v5;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CARETraceComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6F6A88;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 320) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 520) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  long long v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CARETraceComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF831D0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF831D0))
  {
    qword_26AF831C8 = re::ecs2::introspect_CARETraceComponent(0);
    __cxa_guard_release(&qword_26AF831D0);
  }
  return qword_26AF831C8;
}

__n128 re::ecs2::ComponentType<re::ecs2::CARETraceComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CARETraceComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::CARETraceComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F6990;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::CARETraceComponent::~CARETraceComponent(re::ecs2::CARETraceComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::CARETraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::CARETraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::CARETraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::CARETraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::CARETraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6F6A88;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      long long v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    long long v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CARETraceComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>,re::Slice<re::ecs2::CARETraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>*,re::Slice<re::ecs2::CARETraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>,re::Slice<re::ecs2::CARETraceComponent*>>::Subscription const&,re::Slice<re::ecs2::CARETraceComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    long long v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CARETraceComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>,re::Slice<re::ecs2::CARETraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>*,re::Slice<re::ecs2::CARETraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>,re::Slice<re::ecs2::CARETraceComponent*>>::Subscription const&,re::Slice<re::ecs2::CARETraceComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    long long v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CARETraceComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>,re::Slice<re::ecs2::CARETraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>*,re::Slice<re::ecs2::CARETraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>,re::Slice<re::ecs2::CARETraceComponent*>>::Subscription const&,re::Slice<re::ecs2::CARETraceComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    long long v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CARETraceComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>,re::Slice<re::ecs2::CARETraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>*,re::Slice<re::ecs2::CARETraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>,re::Slice<re::ecs2::CARETraceComponent*>>::Subscription const&,re::Slice<re::ecs2::CARETraceComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CARETraceComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>,re::Slice<re::ecs2::CARETraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>*,re::Slice<re::ecs2::CARETraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>,re::Slice<re::ecs2::CARETraceComponent*>>::Subscription const&,re::Slice<re::ecs2::CARETraceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CARETraceComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>,re::Slice<re::ecs2::CARETraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>*,re::Slice<re::ecs2::CARETraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>,re::Slice<re::ecs2::CARETraceComponent*>>::Subscription const&,re::Slice<re::ecs2::CARETraceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CARETraceComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>,re::Slice<re::ecs2::CARETraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>*,re::Slice<re::ecs2::CARETraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>,re::Slice<re::ecs2::CARETraceComponent*>>::Subscription const&,re::Slice<re::ecs2::CARETraceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CARETraceComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>,re::Slice<re::ecs2::CARETraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>*,re::Slice<re::ecs2::CARETraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>,re::Slice<re::ecs2::CARETraceComponent*>>::Subscription const&,re::Slice<re::ecs2::CARETraceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CARETraceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CARETraceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CARETraceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CARETraceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>,re::Slice<re::ecs2::CARETraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>*,re::Slice<re::ecs2::CARETraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CARETraceComponent>,re::Slice<re::ecs2::CARETraceComponent*>>::Subscription const&,re::Slice<re::ecs2::CARETraceComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

re *re::internal::destroyPersistent<re::ecs2::ComponentType<re::ecs2::AnchorComponent>>(re *result, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v4 = re::globalAllocators(result)[2];
    (*(void (**)(uint64_t))(*(void *)a3 + 16))(a3);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 40);
    return (re *)v5(v4, a3);
  }
  return result;
}

void std::vector<re::ecs2::PolygonFrustumClipper::Vertex>::reserve(void **a1, unint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (unsigned char *)*a1) >> 5)
  {
    if (a2 >> 59) {
      abort();
    }
    int64_t v5 = (unsigned char *)a1[1] - (unsigned char *)*a1;
    uint64_t v6 = (char *)std::__allocate_at_least[abi:nn180100]<std::allocator<re::ecs2::PolygonFrustumClipper::Vertex>>(v3, a2);
    uint64_t v7 = &v6[v5 & 0xFFFFFFFFFFFFFFE0];
    uint64_t v9 = &v6[32 * v8];
    uint64_t v11 = (char *)*a1;
    uint64_t v10 = (char *)a1[1];
    v12 = v7;
    if (v10 != *a1)
    {
      do
      {
        long long v13 = *((_OWORD *)v10 - 1);
        *((_OWORD *)v12 - 2) = *((_OWORD *)v10 - 2);
        *((_OWORD *)v12 - 1) = v13;
        v12 -= 32;
        v10 -= 32;
      }
      while (v10 != v11);
      uint64_t v10 = (char *)*a1;
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
    {
      operator delete(v10);
    }
  }
}

void re::ecs2::PolygonFrustumClipper::clipToFrustum(char **a1, void **a2)
{
  uint64_t v93 = *MEMORY[0x263EF8340];
  a1[1] = *a1;
  unint64_t v4 = (((unsigned char *)a2[1] - (unsigned char *)*a2) >> 5) + 7;
  std::vector<re::ecs2::PolygonFrustumClipper::Vertex>::reserve((void **)a1, v4);
  std::vector<re::ecs2::PolygonFrustumClipper::Vertex>::reserve(a2, v4);
  int64_t v5 = &re::ecs2::PolygonFrustumClipper::m_planes;
  v89 = a1 + 2;
  do
  {
    uint64_t v6 = (char *)*a2;
    uint64_t v7 = (unsigned char *)a2[1] - (unsigned char *)*a2;
    if (v7 != -32)
    {
      unint64_t v10 = 0;
      BOOL v11 = 0;
      uint64_t v12 = v7 >> 5;
      uint64_t v13 = *v5;
      int v14 = -1;
      uint64_t v90 = v13;
      v88 = v5;
      do
      {
        BOOL v15 = v11;
        if (v12 == v10) {
          uint64_t v16 = 0;
        }
        else {
          uint64_t v16 = v10;
        }
        v17 = (float *)&v6[32 * v16];
        if ((int)v13 > 2)
        {
          BOOL v20 = v17[3] <= 0.0;
        }
        else
        {
          float v18 = v17[v13];
          float v19 = v17[3];
          if (*((unsigned char *)v5 + 4))
          {
            BOOL v11 = v18 < v19;
            goto LABEL_18;
          }
          BOOL v20 = v18 <= (float)-v19;
        }
        BOOL v11 = !v20;
LABEL_18:
        if (v14 == -1 && v11)
        {
          v21 = a1[1];
          unint64_t v22 = (unint64_t)a1[2];
          if ((unint64_t)v21 >= v22)
          {
            uint64_t v23 = (v21 - *a1) >> 5;
            unint64_t v24 = v23 + 1;
            if ((unint64_t)(v23 + 1) >> 59) {
              goto LABEL_110;
            }
            uint64_t v25 = v22 - (void)*a1;
            if (v25 >> 4 > v24) {
              unint64_t v24 = v25 >> 4;
            }
            if ((unint64_t)v25 >= 0x7FFFFFFFFFFFFFE0) {
              unint64_t v26 = 0x7FFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v26 = v24;
            }
            if (v26) {
              v27 = (char *)std::__allocate_at_least[abi:nn180100]<std::allocator<re::ecs2::PolygonFrustumClipper::Vertex>>((uint64_t)v89, v26);
            }
            else {
              v27 = 0;
            }
            v43 = &v27[32 * v23];
            long long v44 = *((_OWORD *)v17 + 1);
            *(_OWORD *)v43 = *(_OWORD *)v17;
            *((_OWORD *)v43 + 1) = v44;
            v46 = *a1;
            v45 = a1[1];
            v47 = v43;
            if (v45 != *a1)
            {
              do
              {
                long long v48 = *((_OWORD *)v45 - 1);
                *((_OWORD *)v47 - 2) = *((_OWORD *)v45 - 2);
                *((_OWORD *)v47 - 1) = v48;
                v47 -= 32;
                v45 -= 32;
              }
              while (v45 != v46);
              goto LABEL_59;
            }
            goto LABEL_60;
          }
LABEL_32:
          long long v30 = *((_OWORD *)v17 + 1);
          *(_OWORD *)v21 = *(_OWORD *)v17;
          *((_OWORD *)v21 + 1) = v30;
          v31 = v21 + 32;
          goto LABEL_63;
        }
        int v28 = !v11;
        if (v12 != v10 && ((!v15 | v28) & 1) == 0)
        {
          v21 = a1[1];
          unint64_t v29 = (unint64_t)a1[2];
          if ((unint64_t)v21 < v29) {
            goto LABEL_32;
          }
          uint64_t v40 = (v21 - *a1) >> 5;
          unint64_t v41 = v40 + 1;
          if ((unint64_t)(v40 + 1) >> 59) {
            goto LABEL_110;
          }
          uint64_t v42 = v29 - (void)*a1;
          if (v42 >> 4 > v41) {
            unint64_t v41 = v42 >> 4;
          }
          if ((unint64_t)v42 >= 0x7FFFFFFFFFFFFFE0) {
            unint64_t v26 = 0x7FFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v26 = v41;
          }
          if (v26) {
            v27 = (char *)std::__allocate_at_least[abi:nn180100]<std::allocator<re::ecs2::PolygonFrustumClipper::Vertex>>((uint64_t)v89, v26);
          }
          else {
            v27 = 0;
          }
          v43 = &v27[32 * v40];
          long long v53 = *((_OWORD *)v17 + 1);
          *(_OWORD *)v43 = *(_OWORD *)v17;
          *((_OWORD *)v43 + 1) = v53;
          v54 = *a1;
          v45 = a1[1];
          v47 = v43;
          if (v45 != *a1)
          {
            do
            {
              long long v55 = *((_OWORD *)v45 - 1);
              *((_OWORD *)v47 - 2) = *((_OWORD *)v45 - 2);
              *((_OWORD *)v47 - 1) = v55;
              v47 -= 32;
              v45 -= 32;
            }
            while (v45 != v54);
LABEL_59:
            v45 = *a1;
          }
LABEL_60:
          v31 = v43 + 32;
          *a1 = v47;
          a1[1] = v43 + 32;
          a1[2] = &v27[32 * v26];
          if (v45) {
            operator delete(v45);
          }
          uint64_t v13 = v90;
LABEL_63:
          a1[1] = v31;
          goto LABEL_64;
        }
        if (v15 != v11)
        {
          char v32 = v15 | v28;
          BOOL v33 = (v32 & 1) == 0;
          if (v32) {
            int v34 = v16;
          }
          else {
            int v34 = v14;
          }
          if (v33) {
            int v35 = v16;
          }
          else {
            int v35 = v14;
          }
          v36 = (float *)&v6[32 * v34];
          v37 = (float *)&v6[32 * v35];
          if (v13 == 3)
          {
            float v38 = v37[3];
            float v39 = v36[3];
          }
          else
          {
            float v49 = v37[3];
            float v50 = v37[v13];
            float v51 = v36[3];
            float v52 = v36[v13];
            if (*((unsigned char *)v5 + 4))
            {
              float v38 = v49 - v50;
              float v39 = v51 - v52;
            }
            else
            {
              float v38 = v49 + v50;
              float v39 = v51 + v52;
            }
          }
          float v56 = v38 / (float)(v38 - v39);
          uint64_t v57 = 0;
          long long v58 = *((_OWORD *)v37 + 1);
          long long v91 = *(_OWORD *)v37;
          long long v92 = v58;
          do
          {
            *(float *)((char *)&v91 + v57 * 4) = *(float *)((char *)&v91 + v57 * 4)
                                               + (float)(v56 * (float)(v36[v57] - v37[v57]));
            ++v57;
          }
          while (v57 != 6);
          v59 = a1[1];
          unint64_t v60 = (unint64_t)a1[2];
          if ((unint64_t)v59 >= v60)
          {
            uint64_t v63 = (v59 - *a1) >> 5;
            unint64_t v64 = v63 + 1;
            if ((unint64_t)(v63 + 1) >> 59) {
              goto LABEL_110;
            }
            uint64_t v65 = v60 - (void)*a1;
            if (v65 >> 4 > v64) {
              unint64_t v64 = v65 >> 4;
            }
            if ((unint64_t)v65 >= 0x7FFFFFFFFFFFFFE0) {
              unint64_t v66 = 0x7FFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v66 = v64;
            }
            if (v66) {
              v67 = (char *)std::__allocate_at_least[abi:nn180100]<std::allocator<re::ecs2::PolygonFrustumClipper::Vertex>>((uint64_t)v89, v66);
            }
            else {
              v67 = 0;
            }
            v68 = &v67[32 * v63];
            long long v69 = v92;
            *(_OWORD *)v68 = v91;
            *((_OWORD *)v68 + 1) = v69;
            v71 = *a1;
            v70 = a1[1];
            v72 = v68;
            if (v70 != *a1)
            {
              do
              {
                long long v73 = *((_OWORD *)v70 - 1);
                *((_OWORD *)v72 - 2) = *((_OWORD *)v70 - 2);
                *((_OWORD *)v72 - 1) = v73;
                v72 -= 32;
                v70 -= 32;
              }
              while (v70 != v71);
              v70 = *a1;
            }
            v62 = v68 + 32;
            *a1 = v72;
            a1[1] = v68 + 32;
            a1[2] = &v67[32 * v66];
            if (v70) {
              operator delete(v70);
            }
            uint64_t v13 = v90;
          }
          else
          {
            long long v61 = v92;
            *(_OWORD *)v59 = v91;
            *((_OWORD *)v59 + 1) = v61;
            v62 = v59 + 32;
          }
          a1[1] = v62;
          char v74 = v12 == v10 || !v11;
          if ((v74 & 1) == 0)
          {
            if ((unint64_t)v62 >= *v89)
            {
              uint64_t v77 = (v62 - *a1) >> 5;
              if ((unint64_t)(v77 + 1) >> 59) {
LABEL_110:
              }
                abort();
              uint64_t v78 = *v89 - (void)*a1;
              uint64_t v79 = v78 >> 4;
              if (v78 >> 4 <= (unint64_t)(v77 + 1)) {
                uint64_t v79 = v77 + 1;
              }
              if ((unint64_t)v78 >= 0x7FFFFFFFFFFFFFE0) {
                unint64_t v80 = 0x7FFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v80 = v79;
              }
              if (v80) {
                v81 = (char *)std::__allocate_at_least[abi:nn180100]<std::allocator<re::ecs2::PolygonFrustumClipper::Vertex>>((uint64_t)v89, v80);
              }
              else {
                v81 = 0;
              }
              v82 = &v81[32 * v77];
              long long v83 = *((_OWORD *)v17 + 1);
              *(_OWORD *)v82 = *(_OWORD *)v17;
              *((_OWORD *)v82 + 1) = v83;
              v85 = *a1;
              v84 = a1[1];
              v86 = v82;
              if (v84 != *a1)
              {
                do
                {
                  long long v87 = *((_OWORD *)v84 - 1);
                  *((_OWORD *)v86 - 2) = *((_OWORD *)v84 - 2);
                  *((_OWORD *)v86 - 1) = v87;
                  v86 -= 32;
                  v84 -= 32;
                }
                while (v84 != v85);
                v84 = *a1;
              }
              v76 = v82 + 32;
              *a1 = v86;
              a1[1] = v82 + 32;
              a1[2] = &v81[32 * v80];
              if (v84) {
                operator delete(v84);
              }
              uint64_t v13 = v90;
            }
            else
            {
              long long v75 = *((_OWORD *)v17 + 1);
              *(_OWORD *)v62 = *(_OWORD *)v17;
              *((_OWORD *)v62 + 1) = v75;
              v76 = v62 + 32;
            }
            a1[1] = v76;
          }
          int64_t v5 = v88;
        }
LABEL_64:
        ++v10;
        uint64_t v6 = (char *)*a2;
        uint64_t v12 = ((unsigned char *)a2[1] - (unsigned char *)*a2) >> 5;
        int v14 = v16;
      }
      while (v12 + 1 > v10);
    }
    *a2 = *a1;
    *a1 = v6;
    uint64_t v8 = (char *)a2[1];
    a2[1] = a1[1];
    a1[1] = v8;
    uint64_t v9 = (char *)a2[2];
    a2[2] = a1[2];
    a1[2] = v9;
    if (a2[1] == *a2) {
      break;
    }
    a1[1] = *a1;
    v5 += 4;
  }
  while (v5 != (int *)&__block_descriptor_56_e33_v24__0__AUAudioUnit_8__NSError_16l);
}

void *std::__allocate_at_least[abi:nn180100]<std::allocator<re::ecs2::PolygonFrustumClipper::Vertex>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 59) {
    std::__throw_bad_array_new_length[abi:nn180100]();
  }
  return operator new(32 * a2);
}

void *re::ecs2::allocInfo_CARESortingService(re::ecs2 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&_MergedGlobals_172, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&_MergedGlobals_172))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF83240, "CARESortingService");
    __cxa_guard_release(&_MergedGlobals_172);
  }
  return &unk_26AF83240;
}

void re::ecs2::initInfo_CARESortingService(re::ecs2 *this, re::IntrospectionBase *a2)
{
  v5[0] = 0xE22FB2B0FA7B3404;
  v5[1] = "CARESortingService";
  re::StringID::destroyString((re::StringID *)v5);
  *((_OWORD *)this + 2) = v6;
  *((void *)this + 2) = 0x800000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 0;
  *((void *)this + re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 8) = &re::ecs2::initInfo_CARESortingService(re::IntrospectionBase *)::structureAttributes;
  re::IntrospectionRegistry::add(this, v3);
  long long v4 = v6;
}

uint64_t re::ecs2::introspect_CARESortingService(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"CARESortingService", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_CARESortingService, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_CARESortingService, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::CARESortingService>, this);
}

void *re::allocInfo_MaterialParametersService(re *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&_MergedGlobals_173, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&_MergedGlobals_173))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF832C0, "MaterialParametersService");
    __cxa_guard_release(&_MergedGlobals_173);
  }
  return &unk_26AF832C0;
}

void re::initInfo_MaterialParametersService(re *this, re::IntrospectionBase *a2)
{
  v5[0] = 0x431BF85351479DC8;
  v5[1] = "MaterialParametersService";
  re::StringID::destroyString((re::StringID *)v5);
  *((_OWORD *)this + 2) = v6;
  *((void *)this + 2) = 0x800000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 0;
  *((void *)this + re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 8) = &re::initInfo_MaterialParametersService(re::IntrospectionBase *)::structureAttributes;
  re::IntrospectionRegistry::add(this, v3);
  long long v4 = v6;
}

uint64_t re::introspect_MaterialParametersService(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"MaterialParametersService", (uint64_t (*)(re::internal *))re::allocInfo_MaterialParametersService, (re::IntrospectionBase *(*)(void))re::initInfo_MaterialParametersService, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::MaterialParametersService>, this);
}

void re::ecs2::introspect_CameraMovementMode(re::ecs2 *this, const re::IntrospectionBase *a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83340, memory_order_acquire) & 1) == 0)
  {
    unint64_t v24 = (re *)__cxa_guard_acquire(&qword_26AF83340);
    if (v24)
    {
      uint64_t v25 = re::introspectionAllocator(v24);
      unint64_t v26 = (re *)(*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v25 + 32))(v25, 24, 8);
      *(_DWORD *)unint64_t v26 = 1;
      *((void *)v26 + 1) = 0;
      *((void *)v26 + 2) = "Fly";
      qword_26AF83368 = (uint64_t)v26;
      v27 = re::introspectionAllocator(v26);
      uint64_t v28 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v27 + 32))(v27, 24, 8);
      *(_DWORD *)uint64_t v28 = 1;
      *(void *)(v28 + 8) = 1;
      *(void *)(v28 + 16) = "Orbit";
      qword_26AF83370 = v28;
      __cxa_guard_release(&qword_26AF83340);
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83348, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF83348))
  {
    re::IntrospectionBasic::IntrospectionBasic((re::IntrospectionBasic *)&qword_26AF83398, "CameraMovementMode", 4, 4, 1, 1);
    qword_26AF83398 = (uint64_t)&unk_26E715E00;
    qword_26AF833D8 = (uint64_t)&re::ecs2::introspect_CameraMovementMode(BOOL)::enumTable;
    dword_26AF833A8 = 9;
    __cxa_guard_release(&qword_26AF83348);
  }
  if ((_MergedGlobals_174 & 1) == 0)
  {
    _MergedGlobals_174 = 1;
    re::IntrospectionRegistry::add((re::IntrospectionRegistry *)&qword_26AF83398, a2);
    uint64_t v30 = 0xB360269A940A05AELL;
    v31 = "CameraMovementMode";
    v34[0] = 208862;
    v34[1] = "int";
    uint64_t v2 = (uint64_t *)re::HashTable<re::StringID,re::StateParameterInt *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::tryGet((uint64_t)&unk_2687A0D30, v34);
    if (v2)
    {
      uint64_t v3 = *v2;
      re::StringID::destroyString((re::StringID *)v34);
      long long v4 = (unsigned int *)qword_26AF833D8;
      v33[1] = v3;
      re::TypeBuilder::beginEnumType((uint64_t)v34, &v30, 1, 1, (uint64_t)v33);
      unint64_t v6 = *v4;
      if (v6)
      {
        for (unint64_t i = 0; i < v6; ++i)
        {
          uint64_t v8 = *(void *)(*((void *)v4 + 1) + 8 * i);
          if (*(_DWORD *)v8 == 1)
          {
            uint64_t v9 = *(char **)(v8 + 16);
            if (v9)
            {
              uint64_t v10 = *v9;
              if (*v9)
              {
                char v11 = v9[1];
                if (v11)
                {
                  uint64_t v12 = (unsigned __int8 *)(v9 + 2);
                  do
                  {
                    uint64_t v10 = 31 * v10 + v11;
                    int v13 = *v12++;
                    char v11 = v13;
                  }
                  while (v13);
                }
              }
            }
            else
            {
              uint64_t v10 = 0;
            }
            uint64_t v14 = *(void *)(v8 + 8);
            *(void *)&v32.var0 = 2 * v10;
            v32.var1 = v9;
            re::TypeBuilder::addEnumConstant((re::TypeBuilder *)v34, v14, &v32);
            re::StringID::destroyString((re::StringID *)&v32);
            unint64_t v6 = *v4;
          }
        }
        if (v6)
        {
          for (unint64_t j = 0; j < v6; ++j)
          {
            uint64_t v16 = *(void *)(*((void *)v4 + 1) + 8 * j);
            if (*(_DWORD *)v16 == 2)
            {
              v17 = *(char **)(v16 + 16);
              if (v17)
              {
                uint64_t v18 = *v17;
                if (*v17)
                {
                  char v19 = v17[1];
                  if (v19)
                  {
                    BOOL v20 = (unsigned __int8 *)(v17 + 2);
                    do
                    {
                      uint64_t v18 = 31 * v18 + v19;
                      int v21 = *v20++;
                      char v19 = v21;
                    }
                    while (v21);
                  }
                }
              }
              else
              {
                uint64_t v18 = 0;
              }
              uint64_t v22 = *(void *)(v16 + 8);
              *(void *)&v32.var0 = 2 * v18;
              v32.var1 = v17;
              re::TypeBuilder::addEnumConstantRenaming((re::TypeBuilder *)v34, v22, &v32);
              re::StringID::destroyString((re::StringID *)&v32);
              unint64_t v6 = *v4;
            }
          }
        }
      }
      re::TypeBuilder::~TypeBuilder((re::TypeBuilder *)v34, v23);
      xmmword_26AF833B8 = (__int128)v32;
      re::StringID::destroyString((re::StringID *)&v30);
    }
    else
    {
      re::StringID::destroyString((re::StringID *)v34);
      re::internal::assertLog((re::internal *)5, v29, "assertion failure: '%s' (%s:line %i) Failed to determine underlying type of enum %s.", "valueID.isValid()", "registerEnumType", 2796, "CameraMovementMode", v30, v31);
      _os_crash();
      __break(1u);
    }
  }
}

void *re::ecs2::allocInfo_CameraMovementComponent(re::ecs2 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83350, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF83350))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF833E0, "CameraMovementComponent");
    __cxa_guard_release(&qword_26AF83350);
  }
  return &unk_26AF833E0;
}

void re::ecs2::initInfo_CameraMovementComponent(re::ecs2 *this, re::IntrospectionBase *a2)
{
  v20[0] = 0x488E787C685DE892;
  v20[1] = "CameraMovementComponent";
  re::StringID::destroyString((re::StringID *)v20);
  *((_OWORD *)this + 2) = v21;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83358, memory_order_acquire) & 1) == 0)
  {
    long long v4 = (re *)__cxa_guard_acquire(&qword_26AF83358);
    if (v4)
    {
      int64_t v5 = re::introspectionAllocator(v4);
      uint64_t v6 = re::ecs2::introspect_Component((re::IntrospectionBase **)1);
      uint64_t v7 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v5 + 32))(v5, 72, 8);
      *(_DWORD *)uint64_t v7 = 1;
      *(void *)(v7 + 8) = "Component";
      *(void *)(v7 + 16) = v6;
      *(void *)(v7 + 24) = 0;
      *(void *)(v7 + 32) = 0;
      *(_DWORD *)(v7 + 40) = 3;
      *(void *)(v7 + 48) = 0;
      *(void *)(v7 + 56) = 0;
      *(_DWORD *)(v7 + 64) = 0;
      qword_26AF83378 = v7;
      uint64_t v8 = re::introspectionAllocator((re *)v7);
      uint64_t v10 = re::introspect_BOOL((re *)1, v9);
      uint64_t v11 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v8 + 32))(v8, 72, 8);
      *(_DWORD *)uint64_t v11 = 1;
      *(void *)(v11 + 8) = "isEnabled";
      *(void *)(v11 + 16) = v10;
      *(void *)(v11 + 24) = 0;
      *(void *)(v11 + 32) = 0x1900000001;
      *(_DWORD *)(v11 + 40) = 0;
      *(void *)(v11 + 48) = 0;
      *(void *)(v11 + 56) = 0;
      *(_DWORD *)(v11 + 64) = 0;
      qword_26AF83380 = v11;
      uint64_t v12 = (re::ecs2 *)re::introspectionAllocator((re *)v11);
      re::ecs2::introspect_CameraMovementMode(v12, v13);
      uint64_t v14 = (*(uint64_t (**)(re::ecs2 *, uint64_t, uint64_t))(*(void *)v12 + 32))(v12, 72, 8);
      *(_DWORD *)uint64_t v14 = 1;
      *(void *)(v14 + 8) = "mode";
      *(void *)(v14 + 16) = &qword_26AF83398;
      *(void *)(v14 + 24) = 0;
      *(void *)(v14 + 32) = 0x1C00000002;
      *(_DWORD *)(v14 + 40) = 0;
      *(void *)(v14 + 48) = 0;
      *(void *)(v14 + 56) = 0;
      *(_DWORD *)(v14 + 64) = 0;
      qword_26AF83388 = v14;
      BOOL v15 = re::introspectionAllocator((re *)v14);
      v17 = re::introspect_float((re *)1, v16);
      uint64_t v18 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v15 + 32))(v15, 72, 8);
      *(_DWORD *)uint64_t v18 = 1;
      *(void *)(v18 + 8) = "moveSpeedMultiplier";
      *(void *)(v18 + 16) = v17;
      *(void *)(v18 + 24) = 0;
      *(void *)(v18 + 32) = 0x2000000003;
      *(_DWORD *)(v18 + 40) = 0;
      *(void *)(v18 + 48) = 0;
      *(void *)(v18 + 56) = 0;
      *(_DWORD *)(v18 + 64) = 0;
      qword_26AF83390 = v18;
      __cxa_guard_release(&qword_26AF83358);
    }
  }
  *((void *)this + 2) = 0xD000000008;
  *((_DWORD *)this + 6) = 16;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 4;
  *((void *)this + 8) = &qword_26AF83378;
  *((void *)this + 9) = re::internal::defaultConstruct<re::ecs2::CameraMovementComponent>;
  *((void *)this + re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 10) = re::internal::defaultDestruct<re::ecs2::CameraMovementComponent>;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::ecs2::CameraMovementComponent>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::ecs2::CameraMovementComponent>;
  re::IntrospectionRegistry::add(this, v3);
  long long v19 = v21;
}

double re::internal::defaultConstruct<re::ecs2::CameraMovementComponent>(uint64_t a1, uint64_t a2, ArcSharedObject *a3)
{
  return re::make::shared::unsafelyInplace<re::ecs2::CameraMovementComponent>(a3);
}

uint64_t re::internal::defaultDestruct<re::ecs2::CameraMovementComponent>(uint64_t a1, uint64_t a2, uint64_t (***a3)(void))
{
  return (**a3)(a3);
}

uint64_t re::internal::defaultDestructV2<re::ecs2::CameraMovementComponent>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

uint64_t re::ecs2::introspect_CameraMovementComponent(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"CameraMovementComponent", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_CameraMovementComponent, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_CameraMovementComponent, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::CameraMovementComponent>, this);
}

void *re::ecs2::allocInfo_CameraMovementSystem(re::ecs2 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83360, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF83360))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF83458, "CameraMovementSystem");
    __cxa_guard_release(&qword_26AF83360);
  }
  return &unk_26AF83458;
}

void re::ecs2::initInfo_CameraMovementSystem(re::ecs2 *this, re::IntrospectionBase *a2)
{
  v5[0] = 0x5BF0EA45CF417CC6;
  v5[1] = "CameraMovementSystem";
  re::StringID::destroyString((re::StringID *)v5);
  *((_OWORD *)this + 2) = v6;
  *((void *)this + 2) = 0x6800000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 0;
  *((void *)this + 8) = &re::ecs2::initInfo_CameraMovementSystem(re::IntrospectionBase *)::structureAttributes;
  *((void *)this + 9) = re::internal::defaultConstruct<re::ecs2::CameraMovementSystem>;
  *((void *)this + 10) = re::internal::defaultDestruct<re::ecs2::CameraMovementSystem>;
  *((void *)this + re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 11) = re::internal::defaultRetain<re::ecs2::CameraMovementSystem>(void)::{lambda(void *)#1}::__invoke;
  *((void *)this + 12) = re::internal::defaultRelease<re::ecs2::CameraMovementSystem>(void)::{lambda(void *)#1}::__invoke;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::ecs2::CameraMovementSystem>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::ecs2::CameraMovementSystem>;
  re::IntrospectionRegistry::add(this, v3);
  long long v4 = v6;
}

void re::internal::defaultConstruct<re::ecs2::CameraMovementSystem>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a3 + 96) = 0;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 80) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  re::ecs2::System::System(a3, 1);
  *uint64_t v3 = &unk_26E6F7278;
}

void *re::internal::defaultDestruct<re::ecs2::CameraMovementSystem>(uint64_t a1, uint64_t a2, void *a3)
{
  *a3 = &unk_26E6DECE0;
  return objc_destructInstance(a3 + 1);
}

void re::internal::defaultConstructV2<re::ecs2::CameraMovementSystem>(uint64_t a1)
{
  *(void *)(a1 + 96) = 0;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  re::ecs2::System::System(a1, 1);
  void *v1 = &unk_26E6F7278;
}

void *re::internal::defaultDestructV2<re::ecs2::CameraMovementSystem>(void *a1)
{
  *a1 = &unk_26E6DECE0;
  return objc_destructInstance(a1 + 1);
}

uint64_t re::ecs2::introspect_CameraMovementSystem(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"CameraMovementSystem", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_CameraMovementSystem, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_CameraMovementSystem, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::CameraMovementSystem>, this);
}

float32x4_t re::ecs2::CameraMovementComponent::MayaModeParameters::computePose@<Q0>(float32x4_t *this@<X0>, float32x4_t *a2@<X8>)
{
  __float2 v4 = __sincosf_stret(this[2].f32[1] * 0.5);
  float32x4_t sinval_low = (float32x4_t)LODWORD(v4.__sinval);
  sinval_low.i32[3] = LODWORD(v4.__cosval);
  float32x4_t v20 = sinval_low;
  __float2 v6 = __sincosf_stret(this[2].f32[2] * 0.5);
  LODWORD(vre::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 0;
  HIDWORD(vre::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = LODWORD(v6.__sinval);
  float32x4_t v8 = (float32x4_t)v7;
  v8.i32[3] = LODWORD(v6.__cosval);
  int8x16_t v9 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)LODWORD(v4.__sinval), (int32x4_t)LODWORD(v4.__sinval)), (int8x16_t)LODWORD(v4.__sinval), 0xCuLL), vnegq_f32((float32x4_t)v7)), (float32x4_t)LODWORD(v4.__sinval), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v7, (int32x4_t)v7), (int8x16_t)v7, 0xCuLL));
  float32x4_t v10 = vmulq_f32(v20, v8);
  float32x4_t v11 = vmlaq_n_f32(vmlaq_n_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v9, (int32x4_t)v9), v9, 0xCuLL), (float32x4_t)LODWORD(v4.__sinval), v6.__cosval), (float32x4_t)v7, v4.__cosval);
  float32x4_t v12 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v11, (int32x4_t)v11), (int8x16_t)v11, 0xCuLL);
  float32x4_t v13 = vnegq_f32(v11);
  float32x4_t v14 = vmulq_f32(v11, (float32x4_t)xmmword_234390E80);
  v11.f32[3] = -(float)(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v10, 2), vaddq_f32(v10, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v10.f32, 1))).f32[0]- (float)(v6.__cosval * v4.__cosval));
  float32x4_t v15 = vmlaq_f32(v14, (float32x4_t)xmmword_234382760, v12);
  int8x16_t v16 = (int8x16_t)vaddq_f32(v15, v15);
  float32x4_t v17 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v16, (int32x4_t)v16), v16, 0xCuLL);
  int8x16_t v18 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v17, (int32x4_t)v17), (int8x16_t)v17, 0xCuLL), v13), v17, v12);
  float32x4_t result = vsubq_f32(this[1], vmulq_n_f32(vaddq_f32(vaddq_f32(vmulq_n_f32(v17, v11.f32[3]), (float32x4_t)xmmword_234382760), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v18, (int32x4_t)v18), v18, 0xCuLL)), this[2].f32[0]));
  *a2 = result;
  a2[1] = v11;
  return result;
}

float32x4_t *re::ecs2::CameraMovementComponent::lookAt(float32x4_t *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = result[1].i64[0];
  if (v5)
  {
    __float2 v6 = result;
    v7.i64[0] = a4;
    v7.i64[1] = a5;
    v8.i64[0] = a2;
    v8.i64[1] = a3;
    int8x16_t v9 = result + 9;
    result[10].i64[0] = a4;
    result[10].i64[1] = a5;
    float32x4_t v10 = vsubq_f32(v7, v8);
    float32x4_t v11 = vmulq_f32(v10, v10);
    v11.i64[0] = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v11, 2), vaddq_f32(v11, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v11.f32, 1))).u64[0];
    v11.f32[0] = sqrtf(v11.f32[0]);
    result[11].i32[0] = v11.i32[0];
    float32x4_t v23 = vdivq_f32(v10, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v11.f32, 0));
    float32x4_t v12 = vmulq_f32(v23, (float32x4_t)xmmword_23435FD60);
    float v13 = acosf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v12, 2), vaddq_f32(v12, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v12.f32, 1))).f32[0]);
    float32x4_t v14 = v23;
    v14.i32[1] = 0;
    int32x4_t v15 = (int32x4_t)vmulq_f32(v14, v14);
    v15.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v15, 2), vadd_f32(*(float32x2_t *)v15.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v15.i8, 1))).u32[0];
    v6[11].f32[1] = 1.5708 - v13;
    float32x2_t v16 = vrsqrte_f32((float32x2_t)v15.u32[0]);
    float32x2_t v17 = vmul_f32(v16, vrsqrts_f32((float32x2_t)v15.u32[0], vmul_f32(v16, v16)));
    float32x4_t v22 = vmulq_n_f32(v14, vmul_f32(v17, vrsqrts_f32((float32x2_t)v15.u32[0], vmul_f32(v17, v17))).f32[0]);
    float32x4_t v18 = vmulq_f32(v22, (float32x4_t)xmmword_234382760);
    float v19 = acosf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v18, 2), vaddq_f32(v18, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v18.f32, 1))).f32[0]);
    float32x4_t v20 = vmulq_f32(vmlaq_f32(vmulq_f32(v22, (float32x4_t)xmmword_234390E80), (float32x4_t)xmmword_234382760, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v22, (int32x4_t)v22), (int8x16_t)v22, 0xCuLL)), (float32x4_t)xmmword_23435FD50);
    if (vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v20.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v20, 2), v20)).f32[0] >= 0.0)float v19 = -v19; {
    v6[11].f32[2] = v19;
    }
    long long v21 = *(void **)(v5 + 240);
    if (!v21) {
      long long v21 = (void *)re::ecs2::EntityComponentCollection::add((re::ecs2::EntityComponentCollection *)(v5 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::TransformComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    }
    re::ecs2::CameraMovementComponent::MayaModeParameters::computePose(v9, v24);
    v25[0] = 0x3F8000003F800000;
    v25[1] = 1065353216;
    float32x4_t v26 = v24[1];
    float32x4_t v27 = v24[0];
    re::ecs2::TransformComponent::setWorldSRT((uint64_t)v21, (uint64_t)v25, 0);
    return (float32x4_t *)re::ecs2::Component::markDirty(v21);
  }
  return result;
}

uint64_t re::ServiceLocator::serviceOrNull<re::InputService>(uint64_t a1)
{
  {
    re::introspect<re::InputService>(void)::info = re::introspect_InputService(0);
  }
  uint64_t v2 = re::introspect<re::InputService>(void)::info;
  re::StringID::invalid((re::StringID *)v5);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, unsigned char *))(*(void *)a1 + 16))(a1, v2, v5);
  re::StringID::destroyString((re::StringID *)v5);
  return v3;
}

void *re::ecs2::CameraMovementComponent::rotateFlyModeImmediate(re::ecs2::CameraMovementComponent *this, float a2, float a3)
{
  uint64_t v6 = *((void *)this + 2);
  uint64_t v7 = *(void *)(v6 + 240);
  if (!v7) {
    uint64_t v7 = re::ecs2::EntityComponentCollection::add((re::ecs2::EntityComponentCollection *)(v6 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::TransformComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
  }
  if (*(void *)(v7 + 16))
  {
    re::ecs2::TransformComponent::worldSRT(*(re::ecs2::TransformComponent ***)(v7 + 16), (const re::ecs2::Entity *)1, (uint64_t)&v34);
  }
  else
  {
    int8x16_t v8 = *(int8x16_t *)(v7 + 48);
    long long v34 = *(_OWORD *)(v7 + 32);
    int8x16_t v35 = v8;
    long long v36 = *(_OWORD *)(v7 + 64);
  }
  float32x2_t v9 = vrsqrte_f32((float32x2_t)1065353216);
  float32x2_t v10 = vmul_f32(v9, vrsqrts_f32((float32x2_t)1065353216, vmul_f32(v9, v9)));
  LODWORD(v32) = vmul_f32(v10, vrsqrts_f32((float32x2_t)1065353216, vmul_f32(v10, v10))).u32[0];
  float32x4_t v30 = vmulq_n_f32((float32x4_t)xmmword_23435FD60, v32);
  _KR00_8 = __sincosf_stret((float)(a2 * -0.006) * 0.5);
  *(float32x2_t *)_Q2.f32 = vmul_n_f32(*(float32x2_t *)v30.f32, _KR00_8.__sinval);
  _Q2.i32[2] = vmuls_lane_f32(_KR00_8.__sinval, v30, 2);
  _Q0 = (int32x4_t)v35;
  int8x16_t v14 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(_Q0, _Q0), v35, 0xCuLL), vnegq_f32(_Q2)), (float32x4_t)v35, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)_Q2, (int32x4_t)_Q2), (int8x16_t)_Q2, 0xCuLL));
  float32x4_t v28 = vmlaq_laneq_f32(vmlaq_n_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v14, (int32x4_t)v14), v14, 0xCuLL), (float32x4_t)v35, _KR00_8.__cosval), _Q2, (float32x4_t)v35, 3);
  __asm { FMLA            S2, S1, V0.S[3] }
  float32x4_t v19 = v28;
  v19.i32[3] = _Q2.i32[0];
  float v29 = _Q2.f32[0];
  float32x4_t v31 = v19;
  float32x4_t v33 = vmulq_n_f32((float32x4_t)xmmword_23435FD50, v32);
  __float2 v20 = __sincosf_stret((float)(a3 * -0.006) * 0.5);
  *(float32x2_t *)v21.i8 = vmul_n_f32(*(float32x2_t *)v33.f32, v20.__sinval);
  v21.i32[2] = vmuls_lane_f32(v20.__sinval, v33, 2);
  int8x16_t v22 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v21, v21), (int8x16_t)v21, 0xCuLL), vnegq_f32(v28)), (float32x4_t)v21, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v28, (int32x4_t)v28), (int8x16_t)v28, 0xCuLL));
  float32x4_t v23 = vmlaq_n_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v22, (int32x4_t)v22), v22, 0xCuLL), (float32x4_t)v21, v29);
  v21.i32[3] = LODWORD(v20.__cosval);
  float32x4_t v24 = vmlaq_n_f32(v23, v28, v20.__cosval);
  float32x4_t v25 = vmulq_f32((float32x4_t)v21, v31);
  v24.f32[3] = -(float)(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v25, 2), vaddq_f32(v25, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v25.f32, 1))).f32[0]- (float)(v29 * v20.__cosval));
  int8x16_t v35 = (int8x16_t)v24;
  float32x4_t v26 = *(void **)(*((void *)this + 2) + 240);
  re::ecs2::TransformComponent::setWorldSRT((uint64_t)v26, (uint64_t)&v34, 0);
  return re::ecs2::Component::markDirty(v26);
}

void re::ecs2::CameraMovementSystem::update(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v2 = re::ecs2::SceneComponentTable::get((re::ecs2::SceneComponentTable *)(a2 + 200), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::CameraMovementComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    if (v2)
    {
      uint64_t v3 = *(void *)(v2 + 24);
      if (v3)
      {
        uint64_t v4 = 0;
        uint64_t v5 = *(uint64_t **)(v2 + 40);
        uint64_t v6 = 8 * v3;
        do
        {
          uint64_t v7 = *v5++;
          uint64_t v8 = *(void *)(v7 + 16);
          if (*(unsigned char *)(v8 + 288)) {
            uint64_t v4 = v8;
          }
          v6 -= 8;
        }
        while (v6);
        if (v4)
        {
          uint64_t v9 = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(v4 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::CameraMovementComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
          if (v9)
          {
            uint64_t v10 = v9;
            if (*(unsigned char *)(v9 + 25))
            {
              double v11 = *(double *)(v9 + 192);
              double v12 = CACurrentMediaTime();
              double v13 = *(double *)(v10 + 192);
              *(double *)(v10 + 192) = v12;
              if (v11 != 0.0)
              {
                float v14 = v12 - v13;
                float v122 = v14;
                uint64_t v15 = *(void *)(v10 + 16);
                do
                {
                  uint64_t v16 = v15;
                  uint64_t v15 = *(void *)(v15 + 24);
                }
                while (v15);
                uint64_t v17 = (*(uint64_t (**)(void))(**(void **)(*(void *)(v16 + 16) + 56) + 32))(*(void *)(*(void *)(v16 + 16) + 56));
                float32x4_t v18 = (uint64_t (***)(void))re::ServiceLocator::serviceOrNull<re::InputService>(v17);
                if (v18)
                {
                  float32x4_t v19 = v18;
                  if (((**v18)(v18) & 1) == 0 && ((*v19)[2](v19) & 1) == 0)
                  {
                    ((void (*)(unint64_t *__return_ptr, uint64_t (***)(void)))(*v19)[4])(v130, v19);
                    float v21 = *(float *)(v10 + 32) + *(float *)(v10 + 32);
                    if ((v130[3] & 0x200000000) != 0) {
                      float v21 = v21 * 4.0;
                    }
                    float v22 = 1.0;
                    if ((v130[0] & 0x4000000) != 0) {
                      float v23 = 1.0;
                    }
                    else {
                      float v23 = 0.0;
                    }
                    if ((v130[0] & 0x400000) == 0) {
                      float v22 = 0.0;
                    }
                    float v24 = v23 - v22;
                    int8x16_t v25 = (int8x16_t)vdupq_n_s64(v130[0]);
                    float32x4_t v26 = (float32x4_t)vceqzq_s64((int64x2_t)vandq_s8(v25, (int8x16_t)xmmword_234390E90));
                    __asm { FMOV            V4.2S, #1.0 }
                    float32x4_t v32 = (float32x4_t)vceqzq_s64((int64x2_t)vandq_s8(v25, (int8x16_t)xmmword_234390EA0));
                    *(float32x2_t *)v32.f32 = vsub_f32((float32x2_t)vbic_s8(_D4, (int8x8_t)vmovn_s64((int64x2_t)v26)), (float32x2_t)vbic_s8(_D4, (int8x8_t)vmovn_s64((int64x2_t)v32)));
                    v32.f32[2] = -v24;
                    float32x4_t v33 = vmulq_n_f32(v32, v21);
                    uint64_t v34 = *(void *)(v10 + 16);
                    uint64_t v35 = *(void *)(v34 + 240);
                    if (!v35)
                    {
                      float32x4_t v119 = v33;
                      uint64_t v35 = re::ecs2::EntityComponentCollection::add((re::ecs2::EntityComponentCollection *)(v34 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::TransformComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
                      float32x4_t v33 = v119;
                    }
                    float32x4_t v36 = vmulq_n_f32(v33, v122);
                    if (*(void *)(v35 + 16))
                    {
                      float32x4_t v120 = v36;
                      re::ecs2::TransformComponent::worldSRT(*(re::ecs2::TransformComponent ***)(v35 + 16), (const re::ecs2::Entity *)1, (uint64_t)&v127);
                      float32x4_t v36 = v120;
                    }
                    else
                    {
                      float32x4_t v37 = *(float32x4_t *)(v35 + 48);
                      float32x4_t v127 = *(float32x4_t *)(v35 + 32);
                      float32x4_t v128 = v37;
                      float32x4_t v129 = *(float32x4_t *)(v35 + 64);
                    }
                    float v38 = v128.f32[0];
                    float v39 = v38 + v38;
                    float v40 = v128.f32[2];
                    v20.f32[0] = v40 + v40;
                    float v41 = v38 * (float)(v38 + v38);
                    float v42 = v128.f32[1] * (float)(v128.f32[1] + v128.f32[1]);
                    float v43 = v40 * (float)(v40 + v40);
                    v37.f32[0] = v39 * v128.f32[1];
                    float v44 = v39 * v128.f32[2];
                    float v45 = (float)(v128.f32[1] + v128.f32[1]) * v128.f32[2];
                    float v46 = v39 * v128.f32[3];
                    v26.f32[0] = (float)(v128.f32[1] + v128.f32[1]) * v128.f32[3];
                    float v47 = v20.f32[0] * v128.f32[3];
                    v20.f32[0] = 1.0 - (float)(v42 + v43);
                    v20.f32[1] = v37.f32[0] + v47;
                    v20.f32[2] = v44 - v26.f32[0];
                    v37.f32[0] = v37.f32[0] - v47;
                    v37.f32[1] = 1.0 - (float)(v41 + v43);
                    v37.f32[2] = v45 + v46;
                    v26.f32[0] = v44 + v26.f32[0];
                    v26.f32[1] = v45 - v46;
                    v26.f32[2] = 1.0 - (float)(v41 + v42);
                    float32x4_t v48 = vmulq_laneq_f32(v26, v127, 2);
                    float32x4_t v49 = v129;
                    float32x4_t v50 = vaddq_f32(*(float32x4_t *)(v10 + 48), vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(vmulq_n_f32(v20, v127.f32[0]), v36.f32[0]), vmulq_n_f32(v37, *(float *)vshrq_n_u64((uint64x2_t)v127, 0x20uLL).i32), *(float32x2_t *)v36.f32, 1), v48, v36, 2));
                    *(float32x4_t *)(v10 + 48) = v50;
                    float32x4_t v129 = vaddq_f32(v49, v50);
                    float v51 = *(void **)(*(void *)(v10 + 16) + 240);
                    re::ecs2::TransformComponent::setWorldSRT((uint64_t)v51, (uint64_t)&v127, 0);
                    re::ecs2::Component::markDirty(v51);
                    *(float32x4_t *)(v10 + 48) = vmulq_n_f32(*(float32x4_t *)(v10 + 48), v122 * 0.015);
                    ((void (*)(int32x2_t *__return_ptr, uint64_t (***)(void)))(*v19)[6])(v125, v19);
                    if (v126)
                    {
                      if (((*v19)[18](v19) & 1) == 0)
                      {
                        int32x2_t v52 = v125[0];
                        uint64_t v53 = *(void *)(v10 + 16);
                        do
                        {
                          uint64_t v54 = v53;
                          uint64_t v53 = *(void *)(v53 + 24);
                        }
                        while (v53);
                        uint64_t v55 = (*(uint64_t (**)(void))(**(void **)(*(void *)(v54 + 16) + 56) + 32))(*(void *)(*(void *)(v54 + 16) + 56));
                        uint64_t v56 = re::ServiceLocator::serviceOrNull<re::InputService>(v55);
                        if (v56)
                        {
                          *(float32x2_t *)v123.f32 = vcvt_f32_s32(v52);
                          (*(void (**)(void *__return_ptr))(*(void *)v56 + 32))(v131);
                          uint64_t v58 = v132;
                          if ((v132 & 0x200000000) != 0)
                          {
                            uint64_t v60 = *(void *)(v10 + 16);
                            uint64_t v61 = *(void *)(v60 + 240);
                            if (!v61) {
                              uint64_t v61 = re::ecs2::EntityComponentCollection::add((re::ecs2::EntityComponentCollection *)(v60 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::TransformComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
                            }
                            if (*(void *)(v61 + 16))
                            {
                              re::ecs2::TransformComponent::worldSRT(*(re::ecs2::TransformComponent ***)(v61 + 16), (const re::ecs2::Entity *)1, (uint64_t)&v137);
                            }
                            else
                            {
                              int32x4_t v62 = *(int32x4_t *)(v61 + 48);
                              float32x4_t v137 = *(float32x4_t *)(v61 + 32);
                              int32x4_t v138 = v62;
                              float32x4_t v139 = *(float32x4_t *)(v61 + 64);
                            }
                            float32x4_t v63 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v138, v138), (int8x16_t)v138, 0xCuLL);
                            float32x4_t v64 = vnegq_f32((float32x4_t)v138);
                            if ((v58 & 0x100000000) != 0)
                            {
                              v57.i64[0] = 0;
                              v57.i64[1] = COERCE_UNSIGNED_INT(vmuls_lane_f32(-0.005, *(float32x2_t *)v123.f32, 1));
                            }
                            else
                            {
                              *(float32x2_t *)v57.f32 = vmul_f32(*(float32x2_t *)v123.f32, (float32x2_t)0x3BA3D70ABBA3D70ALL);
                              v57.i32[2] = 0;
                            }
                            float32x4_t v65 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v57, (int32x4_t)v57), (int8x16_t)v57, 0xCuLL), v64), v57, v63);
                            int8x16_t v66 = (int8x16_t)vaddq_f32(v65, v65);
                            float32x4_t v67 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v66, (int32x4_t)v66), v66, 0xCuLL);
                            int8x16_t v68 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v67, (int32x4_t)v67), (int8x16_t)v67, 0xCuLL), v64), v67, v63);
                            float32x4_t v139 = vaddq_f32(v139, vaddq_f32(vaddq_f32(v57, vmulq_laneq_f32(v67, (float32x4_t)v138, 3)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v68, (int32x4_t)v68), v68, 0xCuLL)));
                            long long v69 = *(void **)(*(void *)(v10 + 16) + 240);
                            v70 = &v137;
                          }
                          else
                          {
                            int v59 = *(_DWORD *)(v10 + 28);
                            if ((v132 & 0x100000000) != 0)
                            {
                              if (v59)
                              {
                                if (v59 != 1) {
                                  return;
                                }
                                goto LABEL_46;
                              }
                            }
                            else if (v59 != 1)
                            {
                              if (v59) {
                                return;
                              }
LABEL_46:
                              re::ecs2::CameraMovementComponent::rotateFlyModeImmediate((re::ecs2::CameraMovementComponent *)v10, v123.f32[0], v123.f32[1]);
                              return;
                            }
                            uint64_t v71 = *(void *)(v10 + 16);
                            uint64_t v72 = *(void *)(v71 + 240);
                            if (!v72) {
                              uint64_t v72 = re::ecs2::EntityComponentCollection::add((re::ecs2::EntityComponentCollection *)(v71 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::TransformComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
                            }
                            if (*(void *)(v72 + 16))
                            {
                              re::ecs2::TransformComponent::worldSRT(*(re::ecs2::TransformComponent ***)(v72 + 16), (const re::ecs2::Entity *)1, (uint64_t)&v133);
                            }
                            else
                            {
                              int32x4_t v73 = *(int32x4_t *)(v72 + 48);
                              float32x4_t v133 = *(float32x4_t *)(v72 + 32);
                              int32x4_t v134 = v73;
                              float32x4_t v135 = *(float32x4_t *)(v72 + 64);
                            }
                            float v74 = *(float *)v134.i32;
                            float v75 = v74 + v74;
                            float v76 = *(float *)&v134.i32[2];
                            float v77 = v76 + v76;
                            float v78 = v74 * (float)(v74 + v74);
                            float v79 = *(float *)&v134.i32[1] * (float)(*(float *)&v134.i32[1] + *(float *)&v134.i32[1]);
                            float v80 = v76 * (float)(v76 + v76);
                            float v81 = v75 * *(float *)&v134.i32[1];
                            float v82 = v75 * *(float *)&v134.i32[2];
                            float v83 = (float)(*(float *)&v134.i32[1] + *(float *)&v134.i32[1]) * *(float *)&v134.i32[2];
                            float v84 = v75 * *(float *)&v134.i32[3];
                            float v85 = (float)(*(float *)&v134.i32[1] + *(float *)&v134.i32[1]) * *(float *)&v134.i32[3];
                            v86.i32[3] = 0;
                            v86.f32[0] = 1.0 - (float)(v79 + v80);
                            v86.f32[1] = v81 + (float)(v77 * *(float *)&v134.i32[3]);
                            v87.i32[3] = 0;
                            v86.f32[2] = v82 - v85;
                            v88.i32[3] = 0;
                            v88.f32[0] = v81 - (float)(v77 * *(float *)&v134.i32[3]);
                            v88.f32[1] = 1.0 - (float)(v78 + v80);
                            v88.f32[2] = v83 + v84;
                            v87.f32[0] = v82 + v85;
                            v87.f32[1] = v83 - v84;
                            v87.f32[2] = 1.0 - (float)(v78 + v79);
                            float32x4_t v118 = vmulq_n_f32(v88, *(float *)vshrq_n_u64((uint64x2_t)v133, 0x20uLL).i32);
                            float32x4_t v121 = vmulq_n_f32(v86, v133.f32[0]);
                            float32x4_t v117 = vmulq_laneq_f32(v87, v133, 2);
                            re::ecs2::CameraMovementComponent::rotateFlyModeImmediate((re::ecs2::CameraMovementComponent *)v10, v123.f32[0], v123.f32[1]);
                            uint64_t v89 = *(void *)(*(void *)(v10 + 16) + 240);
                            uint64_t v90 = *(re::ecs2::TransformComponent ***)(v89 + 16);
                            if (v90)
                            {
                              re::ecs2::TransformComponent::worldSRT(v90, (const re::ecs2::Entity *)1, (uint64_t)&v137);
                            }
                            else
                            {
                              int32x4_t v91 = *(int32x4_t *)(v89 + 48);
                              float32x4_t v137 = *(float32x4_t *)(v89 + 32);
                              int32x4_t v138 = v91;
                              float32x4_t v139 = *(float32x4_t *)(v89 + 64);
                            }
                            float32x4_t v133 = v137;
                            int32x4_t v134 = v138;
                            float32x4_t v135 = v139;
                            float v92 = *(float *)v138.i32;
                            float v93 = v92 + v92;
                            float v94 = *(float *)&v138.i32[2];
                            float v95 = v94 + v94;
                            float v96 = v92 * (float)(v92 + v92);
                            float v97 = *(float *)&v138.i32[1] * (float)(*(float *)&v138.i32[1] + *(float *)&v138.i32[1]);
                            float v98 = v94 * (float)(v94 + v94);
                            float v99 = v93 * *(float *)&v138.i32[1];
                            float v100 = v93 * *(float *)&v138.i32[2];
                            float v101 = (float)(*(float *)&v138.i32[1] + *(float *)&v138.i32[1]) * *(float *)&v138.i32[2];
                            float v102 = (float)(*(float *)&v138.i32[1] + *(float *)&v138.i32[1]) * *(float *)&v138.i32[3];
                            float v103 = v95 * *(float *)&v138.i32[3];
                            v104.i32[3] = 0;
                            v104.f32[0] = 1.0 - (float)(v97 + v98);
                            v104.f32[1] = (float)(v93 * *(float *)&v138.i32[1]) + v103;
                            v104.f32[2] = (float)(v93 * *(float *)&v138.i32[2]) - v102;
                            float v105 = v93 * *(float *)&v138.i32[3];
                            float32_t v106 = 1.0 - (float)(v96 + v98);
                            v107.i32[3] = 0;
                            v107.f32[0] = v99 - v103;
                            v107.f32[1] = v106;
                            v107.f32[2] = v101 + v105;
                            v108.i32[3] = 0;
                            v108.f32[0] = v100 + v102;
                            v108.f32[1] = v101 - v105;
                            v108.f32[2] = 1.0 - (float)(v96 + v97);
                            float32x4_t v124 = vmulq_n_f32(v107, *(float *)vshrq_n_u64((uint64x2_t)v137, 0x20uLL).i32);
                            float32x4_t v115 = vmulq_laneq_f32(v108, v137, 2);
                            float32x4_t v116 = vmulq_n_f32(v104, v137.f32[0]);
                            v141.columns[3] = (simd_float4)xmmword_23435FBB0;
                            v141.columns[1] = (simd_float4)v118;
                            v141.columns[0] = (simd_float4)v121;
                            v141.columns[2] = (simd_float4)v117;
                            simd_float4x4 v142 = __invert_f4(v141);
                            uint64_t v109 = 0;
                            simd_float4x4 v136 = v142;
                            do
                            {
                              *(float32x4_t *)((char *)&v137 + v109 * 16) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v116, COERCE_FLOAT(*(_OWORD *)&v136.columns[v109])), v124, *(float32x2_t *)v136.columns[v109].f32, 1), v115, (float32x4_t)v136.columns[v109], 2), (float32x4_t)xmmword_23435FBB0, (float32x4_t)v136.columns[v109], 3);
                              ++v109;
                            }
                            while (v109 != 4);
                            float32x4_t v110 = vaddq_f32(v140, vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v137, v135.f32[0]), (float32x4_t)v138, *(float32x2_t *)v135.f32, 1), v139, v135, 2));
                            float32x4_t v135 = vdivq_f32(v110, (float32x4_t)vdupq_laneq_s32((int32x4_t)v110, 3));
                            long long v69 = *(void **)(*(void *)(v10 + 16) + 240);
                            v70 = &v133;
                          }
                          re::ecs2::TransformComponent::setWorldSRT((uint64_t)v69, (uint64_t)v70, 0);
                          re::ecs2::Component::markDirty(v69);
                          return;
                        }
                        v111 = (re::internal *)re::introspect<re::InputService>();
                        re::StringID::invalid((re::StringID *)&v136);
                        re::internal::missingServiceErrorMessage(v111, (const re::IntrospectionBase *)&v136, (re::DynamicString *)&v137);
                        re::DynamicString::~DynamicString((re::DynamicString *)&v137);
                        re::StringID::~StringID((re::StringID *)&v136);
                        v112 = (re::internal *)re::introspect<re::InputService>();
                        re::StringID::invalid((re::StringID *)&v136);
                        re::internal::missingServiceErrorMessage(v112, (const re::IntrospectionBase *)&v136, (re::DynamicString *)&v137);
                        if (v137.i8[8]) {
                          v114 = (__int8 *)v138.i64[0];
                        }
                        else {
                          v114 = &v137.i8[9];
                        }
                        re::internal::assertLog((re::internal *)5, v113, "assertion failure: '%s' (%s:line %i) %s", "service", "service", 69, v114);
                        re::DynamicString::~DynamicString((re::DynamicString *)&v137);
                        re::StringID::~StringID((re::StringID *)&v136);
                        _os_crash();
                        __break(1u);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void re::ecs2::CameraMovementSystem::~CameraMovementSystem(re::ecs2::CameraMovementSystem *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::CameraMovementSystem::typeInfo(re::ecs2::CameraMovementSystem *this)
{
  return re::internal::getOrCreateInfo((re::internal *)"CameraMovementSystem", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_CameraMovementSystem, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_CameraMovementSystem, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::CameraMovementSystem>, 0);
}

double re::make::shared::unsafelyInplace<re::ecs2::CameraMovementComponent>(ArcSharedObject *a1)
{
  *((_OWORD *)a1 + re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 11) = 0u;
  *((_OWORD *)a1 + 12) = 0u;
  *((_OWORD *)a1 + 9) = 0u;
  *((_OWORD *)a1 + 10) = 0u;
  *((_OWORD *)a1 + re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 0u;
  *((_OWORD *)a1 + 8) = 0u;
  *((_OWORD *)a1 + re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = 0u;
  *((_OWORD *)a1 + 6) = 0u;
  *((_OWORD *)a1 + 3) = 0u;
  *((_OWORD *)a1 + 4) = 0u;
  *((_OWORD *)a1 + 1) = 0u;
  *((_OWORD *)a1 + 2) = 0u;
  *(_OWORD *)a1 = 0u;
  ArcSharedObject::ArcSharedObject(a1, 0);
  *(void *)(v1 + 16) = 0;
  *(_WORD *)(v1 + 24) = 256;
  *(void *)uint64_t v1 = &unk_26E6E8CC8;
  *(void *)(v1 + 28) = 0x3F80000000000000;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 64) = xmmword_234386CA0;
  *(void *)(v1 + 80) = 1065353216;
  double result = 0.0;
  *(void *)(v1 + 96) = 0;
  *(_OWORD *)(v1 + 112) = 0u;
  *(void *)(v1 + 128) = 0xBF00000041200000;
  *(_DWORD *)(v1 + 136) = -1071644672;
  *(void *)(v1 + 144) = 0;
  *(_OWORD *)(v1 + 160) = 0u;
  *(void *)(v1 + 176) = 0xBF00000041200000;
  *(_DWORD *)(v1 + 184) = -1071644672;
  *(void *)(v1 + 192) = 0;
  *(unsigned char *)(v1 + 200) = 0;
  return result;
}

id re::internal::defaultRetain<re::ecs2::CameraMovementSystem>(void)::{lambda(void *)#1}::__invoke(uint64_t a1)
{
  return (id)(a1 + 8);
}

void re::internal::defaultRelease<re::ecs2::CameraMovementSystem>(void)::{lambda(void *)#1}::__invoke(uint64_t a1)
{
}

uint64_t re::introspect<re::InputService>()
{
  v0 = &qword_268772000;
  {
    v0 = &qword_268772000;
    if (v2)
    {
      re::introspect<re::InputService>(void)::info = re::introspect_InputService(0);
      v0 = &qword_268772000;
    }
  }
  return v0[349];
}

void *re::ecs2::allocInfo_ImmersiveSpaceTrackerComponent(re::ecs2 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&_MergedGlobals_175, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&_MergedGlobals_175))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF834E8, "ImmersiveSpaceTrackerComponent");
    __cxa_guard_release(&_MergedGlobals_175);
  }
  return &unk_26AF834E8;
}

void re::ecs2::initInfo_ImmersiveSpaceTrackerComponent(re::ecs2 *this, re::IntrospectionBase *a2)
{
  v9[0] = 0xE194A93363A863E0;
  v9[1] = "ImmersiveSpaceTrackerComponent";
  re::StringID::destroyString((re::StringID *)v9);
  *((_OWORD *)this + 2) = v10;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF834E0, memory_order_acquire) & 1) == 0)
  {
    uint64_t v4 = (re *)__cxa_guard_acquire(&qword_26AF834E0);
    if (v4)
    {
      uint64_t v5 = re::introspectionAllocator(v4);
      uint64_t v6 = re::ecs2::introspect_Component((re::IntrospectionBase **)1);
      uint64_t v7 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v5 + 32))(v5, 72, 8);
      *(_DWORD *)uint64_t v7 = 1;
      *(void *)(v7 + 8) = "Component";
      *(void *)(v7 + 16) = v6;
      *(void *)(v7 + 24) = 0;
      *(void *)(v7 + 32) = 0;
      *(_DWORD *)(v7 + 40) = 3;
      *(void *)(v7 + 48) = 0;
      *(void *)(v7 + 56) = 0;
      *(_DWORD *)(v7 + 64) = 0;
      qword_26AF834D8 = v7;
      __cxa_guard_release(&qword_26AF834E0);
    }
  }
  *((void *)this + 2) = 0x2000000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 1;
  *((void *)this + 8) = &qword_26AF834D8;
  *((void *)this + 9) = re::internal::defaultConstruct<re::ecs2::ImmersiveSpaceTrackerComponent>;
  *((void *)this + re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 10) = re::internal::defaultDestruct<re::ecs2::ImmersiveSpaceTrackerComponent>;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::ecs2::ImmersiveSpaceTrackerComponent>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::ecs2::ImmersiveSpaceTrackerComponent>;
  re::IntrospectionRegistry::add(this, v3);
  long long v8 = v10;
}

void re::internal::defaultConstruct<re::ecs2::ImmersiveSpaceTrackerComponent>(int a1, int a2, ArcSharedObject *this)
{
  *(_OWORD *)this = 0u;
  *((_OWORD *)this + 1) = 0u;
  ArcSharedObject::ArcSharedObject(this, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F6520;
}

void *re::internal::defaultDestruct<re::ecs2::ImmersiveSpaceTrackerComponent>(uint64_t a1, uint64_t a2, void *a3)
{
  *a3 = &unk_26E6DECE0;
  return objc_destructInstance(a3 + 1);
}

void re::internal::defaultConstructV2<re::ecs2::ImmersiveSpaceTrackerComponent>(ArcSharedObject *a1)
{
  *(_OWORD *)a1 = 0u;
  *((_OWORD *)a1 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(a1, 0);
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 24) = 0;
  *(void *)uint64_t v1 = &unk_26E6F6520;
}

void *re::internal::defaultDestructV2<re::ecs2::ImmersiveSpaceTrackerComponent>(void *a1)
{
  *a1 = &unk_26E6DECE0;
  return objc_destructInstance(a1 + 1);
}

uint64_t re::ecs2::introspect_ImmersiveSpaceTrackerComponent(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"ImmersiveSpaceTrackerComponent", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_ImmersiveSpaceTrackerComponent, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_ImmersiveSpaceTrackerComponent, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::ImmersiveSpaceTrackerComponent>, this);
}

void *re::ecs2::allocInfo_VisualProxyScopeComponent(re::ecs2 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&_MergedGlobals_176, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&_MergedGlobals_176))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF83598, "VisualProxyScopeComponent");
    __cxa_guard_release(&_MergedGlobals_176);
  }
  return &unk_26AF83598;
}

void re::ecs2::initInfo_VisualProxyScopeComponent(re::ecs2 *this, re::IntrospectionBase *a2)
{
  v9[0] = 0x37629D0D0C28E72ELL;
  v9[1] = "VisualProxyScopeComponent";
  re::StringID::destroyString((re::StringID *)v9);
  *((_OWORD *)this + 2) = v10;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83570, memory_order_acquire) & 1) == 0)
  {
    uint64_t v4 = (re *)__cxa_guard_acquire(&qword_26AF83570);
    if (v4)
    {
      uint64_t v5 = re::introspectionAllocator(v4);
      uint64_t v6 = re::ecs2::introspect_Component((re::IntrospectionBase **)1);
      uint64_t v7 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v5 + 32))(v5, 72, 8);
      *(_DWORD *)uint64_t v7 = 1;
      *(void *)(v7 + 8) = "Component";
      *(void *)(v7 + 16) = v6;
      *(void *)(v7 + 24) = 0;
      *(void *)(v7 + 32) = 0;
      *(_DWORD *)(v7 + 40) = 3;
      *(void *)(v7 + 48) = 0;
      *(void *)(v7 + 56) = 0;
      *(_DWORD *)(v7 + 64) = 0;
      qword_26AF83568 = v7;
      __cxa_guard_release(&qword_26AF83570);
    }
  }
  *((void *)this + 2) = 0x2000000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 1;
  *((void *)this + 8) = &qword_26AF83568;
  *((void *)this + 9) = re::internal::defaultConstruct<re::ecs2::VisualProxyScopeComponent>;
  *((void *)this + re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 10) = re::internal::defaultDestruct<re::ecs2::VisualProxyScopeComponent>;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::ecs2::VisualProxyScopeComponent>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::ecs2::VisualProxyScopeComponent>;
  re::IntrospectionRegistry::add(this, v3);
  long long v8 = v10;
}

void re::internal::defaultConstruct<re::ecs2::VisualProxyScopeComponent>(int a1, int a2, ArcSharedObject *this)
{
  *(_OWORD *)this = 0u;
  *((_OWORD *)this + 1) = 0u;
  ArcSharedObject::ArcSharedObject(this, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F2DE8;
  *(_DWORD *)(v3 + 28) = 0;
}

void *re::internal::defaultDestruct<re::ecs2::VisualProxyScopeComponent>(uint64_t a1, uint64_t a2, void *a3)
{
  *a3 = &unk_26E6DECE0;
  return objc_destructInstance(a3 + 1);
}

void re::internal::defaultConstructV2<re::ecs2::VisualProxyScopeComponent>(ArcSharedObject *a1)
{
  *(_OWORD *)a1 = 0u;
  *((_OWORD *)a1 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(a1, 0);
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 24) = 0;
  *(void *)uint64_t v1 = &unk_26E6F2DE8;
  *(_DWORD *)(v1 + 28) = 0;
}

void *re::internal::defaultDestructV2<re::ecs2::VisualProxyScopeComponent>(void *a1)
{
  *a1 = &unk_26E6DECE0;
  return objc_destructInstance(a1 + 1);
}

uint64_t re::ecs2::introspect_VisualProxyScopeComponent(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"VisualProxyScopeComponent", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_VisualProxyScopeComponent, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_VisualProxyScopeComponent, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::VisualProxyScopeComponent>, this);
}

void *re::ecs2::allocInfo_VisualProxyScopeTraceComponent(re::ecs2 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83578, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF83578))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF83610, "VisualProxyScopeTraceComponent");
    __cxa_guard_release(&qword_26AF83578);
  }
  return &unk_26AF83610;
}

void re::ecs2::initInfo_VisualProxyScopeTraceComponent(re::ecs2 *this, re::IntrospectionBase *a2)
{
  v9[0] = 0x4F17B999577D45BCLL;
  v9[1] = "VisualProxyScopeTraceComponent";
  re::StringID::destroyString((re::StringID *)v9);
  *((_OWORD *)this + 2) = v10;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83588, memory_order_acquire) & 1) == 0)
  {
    uint64_t v4 = (re *)__cxa_guard_acquire(&qword_26AF83588);
    if (v4)
    {
      uint64_t v5 = re::introspectionAllocator(v4);
      uint64_t v6 = re::ecs2::introspect_Component((re::IntrospectionBase **)1);
      uint64_t v7 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v5 + 32))(v5, 72, 8);
      *(_DWORD *)uint64_t v7 = 1;
      *(void *)(v7 + 8) = "Component";
      *(void *)(v7 + 16) = v6;
      *(void *)(v7 + 24) = 0;
      *(void *)(v7 + 32) = 0;
      *(_DWORD *)(v7 + 40) = 3;
      *(void *)(v7 + 48) = 0;
      *(void *)(v7 + 56) = 0;
      *(_DWORD *)(v7 + 64) = 0;
      qword_26AF83580 = v7;
      __cxa_guard_release(&qword_26AF83588);
    }
  }
  *((void *)this + 2) = 0x2000000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 1;
  *((void *)this + 8) = &qword_26AF83580;
  *((void *)this + 9) = re::internal::defaultConstruct<re::ecs2::VisualProxyScopeTraceComponent>;
  *((void *)this + re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 10) = re::internal::defaultDestruct<re::ecs2::VisualProxyScopeTraceComponent>;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::ecs2::VisualProxyScopeTraceComponent>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::ecs2::VisualProxyScopeTraceComponent>;
  re::IntrospectionRegistry::add(this, v3);
  long long v8 = v10;
}

void re::internal::defaultConstruct<re::ecs2::VisualProxyScopeTraceComponent>(int a1, int a2, ArcSharedObject *this)
{
  *(_OWORD *)this = 0u;
  *((_OWORD *)this + 1) = 0u;
  ArcSharedObject::ArcSharedObject(this, 0);
  *(void *)(v3 + 16) = 0;
  *(_WORD *)(v3 + 24) = 256;
  *(void *)uint64_t v3 = &unk_26E6F2F88;
  *(_DWORD *)(v3 + 28) = 0;
}

void *re::internal::defaultDestruct<re::ecs2::VisualProxyScopeTraceComponent>(uint64_t a1, uint64_t a2, void *a3)
{
  *a3 = &unk_26E6DECE0;
  return objc_destructInstance(a3 + 1);
}

void re::internal::defaultConstructV2<re::ecs2::VisualProxyScopeTraceComponent>(ArcSharedObject *a1)
{
  *(_OWORD *)a1 = 0u;
  *((_OWORD *)a1 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(a1, 0);
  *(void *)(v1 + 16) = 0;
  *(_WORD *)(v1 + 24) = 256;
  *(void *)uint64_t v1 = &unk_26E6F2F88;
  *(_DWORD *)(v1 + 28) = 0;
}

void *re::internal::defaultDestructV2<re::ecs2::VisualProxyScopeTraceComponent>(void *a1)
{
  *a1 = &unk_26E6DECE0;
  return objc_destructInstance(a1 + 1);
}

uint64_t re::ecs2::introspect_VisualProxyScopeTraceComponent(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"VisualProxyScopeTraceComponent", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_VisualProxyScopeTraceComponent, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_VisualProxyScopeTraceComponent, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::VisualProxyScopeTraceComponent>, this);
}

void *re::ecs2::allocInfo_VisualProxyScopeSystem(re::ecs2 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83590, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF83590))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF83688, "VisualProxyScopeSystem");
    __cxa_guard_release(&qword_26AF83590);
  }
  return &unk_26AF83688;
}

void re::ecs2::initInfo_VisualProxyScopeSystem(re::ecs2 *this, re::IntrospectionBase *a2)
{
  v5[0] = 0xA7D81F4D742C63AALL;
  v5[1] = "VisualProxyScopeSystem";
  re::StringID::destroyString((re::StringID *)v5);
  *((_OWORD *)this + 2) = v6;
  *((void *)this + 2) = 0x1B800000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 0;
  *((void *)this + 8) = &re::ecs2::initInfo_VisualProxyScopeSystem(re::IntrospectionBase *)::structureAttributes;
  *((void *)this + 9) = re::internal::defaultConstruct<re::ecs2::VisualProxyScopeSystem>;
  *((void *)this + 10) = re::internal::defaultDestruct<re::ecs2::VisualProxyScopeSystem>;
  *((void *)this + re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 11) = re::internal::defaultRetain<re::ecs2::VisualProxyScopeSystem>(void)::{lambda(void *)#1}::__invoke;
  *((void *)this + 12) = re::internal::defaultRelease<re::ecs2::VisualProxyScopeSystem>(void)::{lambda(void *)#1}::__invoke;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::ecs2::VisualProxyScopeSystem>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::ecs2::VisualProxyScopeSystem>;
  re::IntrospectionRegistry::add(this, v3);
  long long v4 = v6;
}

re::ecs2::VisualProxyScopeSystem *re::internal::defaultConstruct<re::ecs2::VisualProxyScopeSystem>(uint64_t a1, uint64_t a2, re::ecs2::VisualProxyScopeSystem *a3)
{
  return re::ecs2::VisualProxyScopeSystem::VisualProxyScopeSystem(a3);
}

void *re::internal::defaultDestruct<re::ecs2::VisualProxyScopeSystem>(uint64_t a1, uint64_t a2, void *a3)
{
  re::ecs2::BasicComponentStates<re::ecs2::BlendShapeWeightsBufferComponent>::~BasicComponentStates(a3 + 25);
  a3[20] = &unk_26E6F7300;
  re::FixedArray<CoreIKTransform>::deinit(a3 + 22);
  *a3 = &unk_26E6DECE0;
  return objc_destructInstance(a3 + 1);
}

void *re::internal::defaultDestructV2<re::ecs2::VisualProxyScopeSystem>(void *a1)
{
  re::ecs2::BasicComponentStates<re::ecs2::BlendShapeWeightsBufferComponent>::~BasicComponentStates(a1 + 25);
  a1[20] = &unk_26E6F7300;
  re::FixedArray<CoreIKTransform>::deinit(a1 + 22);
  *a1 = &unk_26E6DECE0;
  return objc_destructInstance(a1 + 1);
}

uint64_t re::ecs2::introspect_VisualProxyScopeSystem(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"VisualProxyScopeSystem", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_VisualProxyScopeSystem, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_VisualProxyScopeSystem, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::VisualProxyScopeSystem>, this);
}

BOOL re::ecs2::VisualProxyScopeSystemStateImpl::processDirtyComponents(uint64_t a1, uint64_t a2, re::ecs2::ComponentBucketsBase **a3, unint64_t a4, uint64_t a5)
{
  re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::DataArrayIterator((uint64_t)&v22, a5, 0);
  unint64_t v8 = v22;
  unint64_t v9 = v23;
  unint64_t v22 = a4;
  unint64_t v23 = v8;
  unint64_t v24 = v9;
  uint64_t v10 = (unsigned __int16)v9;
  uint64_t v11 = v9 & 0xFFFF0000;
  if (v8 != a5 || v10 != 0xFFFF || v11 != 4294901760)
  {
    do
    {
      uint64_t v14 = re::DataArray<re::ecs2::Component *>::DataArrayIterator<re::ecs2::Component *,re::ecs2::Component * const&>::operator*((unsigned __int16 *)&v23);
      BOOL v15 = *(void *)(*(void *)v14 + 176) == 0;
      if (*(void *)(*(void *)v14 + 176)) {
        BOOL v16 = *(unsigned char *)(*(void *)v14 + 32) == 0;
      }
      else {
        BOOL v16 = 0;
      }
      if (v16) {
        BOOL v15 = *(_DWORD *)(*(void *)v14 + 184) == -1;
      }
      if (*(unsigned char *)(*(void *)v14 + 32)) {
        int v17 = 2;
      }
      else {
        int v17 = 3;
      }
      if (v15) {
        unsigned int v18 = 1;
      }
      else {
        unsigned int v18 = v17;
      }
      unint64_t v19 = v22;
      unint64_t v20 = re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::handle((unsigned __int16 *)&v23);
      re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::setComponentState(a3, v19, v20, v18);
      re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::increment(&v23);
    }
    while (v23 != a5 || (unsigned __int16)v24 != 0xFFFF || WORD1(v24) != 0xFFFF);
  }
  return *(_DWORD *)(a5 + 40) != 0;
}

unint64_t re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::setComponentState(re::ecs2::ComponentBucketsBase **a1, unint64_t a2, unint64_t a3, unsigned int a4)
{
  unint64_t v8 = re::ecs2::ComponentBucketsBase::moveComponent(a1[2], a2, a3, (unint64_t)a1[a4 + 3]);
  unint64_t v10 = v8;
  if (!a4 && (v8 != a2 || v9 != a3 || ((v9 ^ a3) & 0xFFFFFF00000000) != 0)) {
    (*(void (**)(void, re::ecs2::ComponentBucketsBase **, unint64_t, uint64_t))(**((void **)*a1 + 28)
  }
                                                                                                 + 16))(*((void *)*a1 + 28), a1, v8, v9);
  return v10;
}

BOOL re::ecs2::VisualProxyScopeSystemStateImpl::processPreparingComponents(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::DataArrayIterator((uint64_t)&v21, a5, 0);
  unint64_t v8 = v21;
  unint64_t v9 = v22;
  unint64_t v21 = a4;
  unint64_t v22 = v8;
  unint64_t v23 = v9;
  uint64_t v10 = (unsigned __int16)v9;
  uint64_t v11 = v9 & 0xFFFF0000;
  if (v8 != a5 || v10 != 0xFFFF || v11 != 4294901760)
  {
    do
    {
      uint64_t v14 = re::DataArray<re::ecs2::Component *>::DataArrayIterator<re::ecs2::Component *,re::ecs2::Component * const&>::operator*((unsigned __int16 *)&v22);
      {
        unint64_t v16 = v21;
        unint64_t v17 = re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::handle((unsigned __int16 *)&v22);
        re::ecs2::ComponentBucketsBase::moveComponent(*(re::ecs2::ComponentBucketsBase **)(a3 + 16), v16, v17, *(void *)(a3 + 48));
      }
      re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::increment(&v22);
    }
    while (v22 != a5 || (unsigned __int16)v23 != 0xFFFF || WORD1(v23) != 0xFFFF);
  }
  return *(_DWORD *)(a5 + 40) != 0;
}

uint64_t re::ecs2::anonymous namespace'::requiredMeshAssetsLoaded(re::ecs2::_anonymous_namespace_ *this, const re::ecs2::Entity *a2)
{
  uint64_t v3 = (re::ecs2::MeshComponentHelper *)*((void *)this + 22);
  if (!v3 || (uint64_t result = re::ecs2::MeshComponentHelper::areRequiredAssetsLoaded(v3, a2), result))
  {
    uint64_t v5 = *((void *)this + 41);
    if (v5)
    {
      long long v6 = (re::ecs2::_anonymous_namespace_ **)*((void *)this + 43);
      uint64_t v7 = 8 * v5 - 8;
      do
      {
        unint64_t v8 = *v6++;
        if (result) {
          BOOL v9 = v7 == 0;
        }
        else {
          BOOL v9 = 1;
        }
        v7 -= 8;
      }
      while (!v9);
    }
    else
    {
      return 1;
    }
  }
  return result;
}

BOOL re::ecs2::VisualProxyScopeSystemStateImpl::processUpdatingComponents(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4, uint64_t a5)
{
  uint64_t v263 = *MEMORY[0x263EF8340];
  uint64_t v212 = *(void *)(a3 + 8);
  uint64_t v6 = re::ecs2::SceneComponentTable::get((re::ecs2::SceneComponentTable *)(v212 + 200), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
  if (v6)
  {
    uint64_t v7 = *(void *)(v6 + 24);
    if (v7)
    {
      unint64_t v8 = *(uint64_t **)(v6 + 40);
      uint64_t v9 = 8 * v7;
      do
      {
        uint64_t v10 = *v8++;
        ++*(_DWORD *)(v10 + 28);
        v9 -= 8;
      }
      while (v9);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(*(void *)(v11 + 112) + 104);
  if (v12)
  {
    double v13 = (re::DynamicString **)re::RenderFrameBox::get(v12 + 344, 0xFFFFFFFFFFFFFFFuLL);
    uint64_t v11 = *(void *)(a1 + 8);
  }
  else
  {
    double v13 = 0;
  }
  unsigned int v226 = 0;
  long long v224 = 0u;
  long long v225 = 0u;
  uint64_t v227 = 0x7FFFFFFFLL;
  v218 = v13[47];
  uint64_t v206 = (*(uint64_t (**)(void))(**(void **)(v11 + 136) + 24))(*(void *)(v11 + 136));
  re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::DataArrayIterator((uint64_t)&v237, a5, 0);
  v222 = a4;
  long long v223 = v237;
  v214 = v13;
  if ((void)v237 == a5 && WORD4(v237) == 0xFFFFLL && (DWORD2(v237) & 0xFFFF0000) == 0xFFFF0000)
  {
    uint64_t v14 = v13;
    unsigned int v15 = 0;
LABEL_140:
    LODWORD(v15re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = 0;
    goto LABEL_141;
  }
  v213 = (_anonymous_namespace_ *)(v13 + 479);
  uint64_t v16 = a1;
  uint64_t v17 = v206;
  do
  {
    uint64_t v18 = re::DataArray<re::ecs2::Component *>::DataArrayIterator<re::ecs2::Component *,re::ecs2::Component * const&>::operator*((unsigned __int16 *)&v223);
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *(void *)(*(void *)v18 + 176);
    (*(void (**)(long long *__return_ptr, uint64_t, void))(*(void *)v17 + 8))(&v237, v17, *(void *)(*(void *)v18 + 16));
    if ((_BYTE)v237) {
      unint64_t v21 = *((void *)&v237 + 1);
    }
    else {
      unint64_t v21 = 0;
    }
    v230 = (void *)v21;
    *(void *)&long long v238 = 0;
    DWORD2(v238) = 0;
    *(void *)&v239[0] = 0;
    long long v237 = (unint64_t)v218;
    re::DynamicArray<re::CameraView>::setCapacity(&v237, 0);
    ++DWORD2(v238);
    *((void *)&v240 + 1) = 0;
    memset((char *)v239 + 8, 0, 24);
    LODWORD(vre::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
    unint64_t v22 = 0x94D049BB133111EBLL
        * ((0xBF58476D1CE4E5B9 * (v21 ^ (v21 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (v21 ^ (v21 >> 30))) >> 27));
    unint64_t v23 = v22 ^ (v22 >> 31);
    if (!(void)v224)
    {
      LODWORD(v24) = 0;
LABEL_22:
      unsigned int v26 = re::HashTable<unsigned long long,re::ecs2::VisualProxyScopeSystemStateImpl::processUpdatingComponents(re::ecs2::System::UpdateContext const&,re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent> *,re::ecs2::ComponentBuckets<re::ecs2::VisualProxyCaptureComponent>::BucketIteration,void *)::VisualProxyPerWorldData,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addAsMove((uint64_t)&v224, v24, v23, &v230, (uint64_t)&v237);
      ++HIDWORD(v227);
      uint64_t v27 = v225 + 104 * v26;
      goto LABEL_24;
    }
    unint64_t v24 = v23 % DWORD2(v225);
    uint64_t v25 = *(unsigned int *)(*((void *)&v224 + 1) + 4 * v24);
    if (v25 == 0x7FFFFFFF) {
      goto LABEL_22;
    }
    while (*(void *)(v225 + 104 * v25 + 16) != v21)
    {
      LODWORD(v2re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = *(_DWORD *)(v225 + 104 * v25 + 8) & 0x7FFFFFFF;
      if (v25 == 0x7FFFFFFF) {
        goto LABEL_22;
      }
    }
    uint64_t v27 = v225 + 104 * v25;
LABEL_24:
    float32x4_t v28 = (_anonymous_namespace_ *)(v27 + 24);
    re::DynamicArray<re::VisualProxyHighFidelityTextureCopyRequest>::deinit((uint64_t)v239 + 8);
    re::DynamicArray<re::CameraView>::deinit((uint64_t)&v237);
    if (*(unsigned char *)(v19 + 32))
    {
      uint64_t v29 = *(void *)(v20 + 16);
      uint64_t v30 = *(void *)(v19 + 16);
      re::ecs2::VisualCopyHelper::makeVisualCopyEntity((re::ecs2::ECSHelper *)v30, (uint64_t)v28 + 40, v212, *(void *)(*(void *)(v16 + 8) + 112), v19 + 88, (re::ecs2::Entity **)buf);
      *((void *)&v238 + 1) = *(void *)(v19 + 160);
      *(void *)&v239[0] = 0;
      float32x4_t v31 = (re *)re::FunctionBase<24ul,void ()(NS::SharedPtr<MTL::Texture>)>::operator=<24ul>((uint64_t)&v237, v19 + 136);
      *((void *)&v239[0] + 1) = v29;
      *(void *)&v239[1] = *(void *)buf;
      if (*(void *)buf) {
        float32x4_t v31 = (re *)(id)(*(void *)buf + 8);
      }
      uint64_t v32 = re::globalAllocators(v31)[2];
      uint64_t v232 = v32;
      uint64_t v233 = 0;
      if (v32) {
        uint64_t v33 = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v32 + 32))(v32, 64, 0);
      }
      else {
        uint64_t v33 = 0;
      }
      *(void *)uint64_t v33 = &unk_26E6F7450;
      *(void *)(v33 + 32) = *((void *)&v238 + 1);
      *(void *)(v33 + 40) = 0;
      re::FunctionBase<24ul,void ()(NS::SharedPtr<MTL::Texture>)>::operator=<24ul>(v33 + 8, (uint64_t)&v237);
      *(_OWORD *)(v33 + 48) = *(_OWORD *)((char *)v239 + 8);
      *(void *)&v239[1] = 0;
      uint64_t v233 = v33;
      re::DynamicArray<re::Function<void ()(re::FrameCount)>>::add(v213, (uint64_t)v231);
      re::FunctionBase<24ul,void ()(re::FrameCount)>::destroyCallable((uint64_t)v231);
      if (*(void *)&v239[1])
      {

        *(void *)&v239[1] = 0;
      }
      re::FunctionBase<24ul,void ()(NS::SharedPtr<MTL::Texture>)>::destroyCallable((uint64_t)&v237);
      re::ecs2::EntityComponentCollection::remove((re::ecs2::EntityComponentCollection *)(v30 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
      if (*(void *)buf) {

      }
      goto LABEL_129;
    }
    v208 = v28;
    uint64_t v34 = *(void *)(v19 + 176);
    uint64_t v35 = *(void *)(v19 + 16);
    re::CameraView::CameraView((re::CameraView *)&v237, v218);
    if (*(unsigned char *)(v19 + 40))
    {
      WeakRetained = (char *)objc_loadWeakRetained((id *)(v19 + 48));
      float32x4_t v37 = WeakRetained - 8;
      if (!WeakRetained) {
        float32x4_t v37 = 0;
      }
    }
    else
    {
      float32x4_t v37 = 0;
    }
    v215 = v37;
    float v38 = 1.0;
    if (!*(unsigned char *)(v19 + 32))
    {
      if (v35 && *(void *)(v35 + 328))
      {
        uint64_t v39 = *(void *)re::ecs2::EntityComponentCollection::operator[](v35 + 304, 0);
        uint64_t v40 = (*(uint64_t (**)(void))(**(void **)(v212 + 56) + 32))(*(void *)(v212 + 56));
        uint64_t v41 = re::ServiceLocator::serviceOrNull<re::ecs2::OpacityService>(v40);
        if (v41) {
          LODWORD(v38) = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v41 + 24))(v41, v39);
        }
      }
      else
      {
        if (re::ecs2::VisualProxyComponent::log(void)::onceToken != -1) {
          dispatch_once(&re::ecs2::VisualProxyComponent::log(void)::onceToken, &__block_literal_global_12);
        }
        float v42 = re::ecs2::VisualProxyComponent::log(void)::log;
        if (os_log_type_enabled((os_log_t)re::ecs2::VisualProxyComponent::log(void)::log, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)buf = 0;
          _os_log_debug_impl(&dword_233120000, v42, OS_LOG_TYPE_DEBUG, "Error: VisualProxyCaptureComponent attached to childless entity, which broke app-structure assumption.", buf, 2u);
        }
      }
    }
    uint64_t v43 = *(void *)(v16 + 8);
    float v44 = v13[47];
    uint64_t v45 = *(unsigned int *)(v19 + 184);
    memset(v239, 0, 24);
    *((void *)&v239[1] + 1) = 0x3F80000000000000;
    re::DynamicString::format(v44, (re::Allocator *)"snapshotCamera_%u", (re::DynamicString *)buf, v45);
    re::DynamicString::operator=((re::DynamicString *)&v237, (re::DynamicString *)buf);
    if (*(void *)buf && (buf[8] & 1) != 0) {
      (*(void (**)(void, void))(**(void **)buf + 40))(*(void *)buf, *(void *)&buf[16]);
    }
    v248[41] = 0;
    float32x4_t v250 = 0uLL;
    int v251 = 0;
    float v46 = *(CGColor **)(v19 + 80);
    if (v46)
    {
      float v47 = *(unsigned __int8 **)(*(void *)(v43 + 112) + 152);
      if (v47) {
        int v48 = *v47;
      }
      else {
        int v48 = 0;
      }
      CGColorSpaceFromWorkingColorGamut = (CGColorSpace *)re::ColorHelpers::getCGColorSpaceFromWorkingColorGamut(v48);
      CopyByMatchingToColorSpace = CGColorCreateCopyByMatchingToColorSpace(CGColorSpaceFromWorkingColorGamut, kCGRenderingIntentDefault, v46, 0);
      Components = CGColorGetComponents(CopyByMatchingToColorSpace);
      float64x2_t v209 = *(float64x2_t *)Components;
      float64_t v203 = Components[2];
      CGFloat Alpha = CGColorGetAlpha(CopyByMatchingToColorSpace);
      v53.f64[0] = v203;
      v53.f64[1] = Alpha;
      float32x4_t v250 = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(v209), v53);
      CGColorRelease(CopyByMatchingToColorSpace);
      CGColorSpaceRelease(CGColorSpaceFromWorkingColorGamut);
    }
    char v252 = 1;
    if (v38 > 0.01 && v38 < 1.0) {
      float v253 = 1.0 / v38;
    }
    int v260 = 1 << v45;
    uint64_t v54 = (os_unfair_lock_s **)(v34 + 32);
    long long v255 = xmmword_2343854A0;
    long long v256 = xmmword_23435FD50;
    long long v257 = xmmword_23435FD60;
    long long v258 = xmmword_23435FD80;
    long long v259 = xmmword_23435FBB0;
    int v254 = 4;
    v248[40] = 1;
    if (!v215
      || (uint64_t v55 = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(v215 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::PerspectiveCameraComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)) == 0)
    {
      uint64_t v67 = *(void *)(v35 + 240);
      if (v67)
      {
        int8x16_t v68 = *(re::ecs2::TransformComponent ***)(v67 + 16);
        if (v68)
        {
          re::ecs2::TransformComponent::worldSRT(v68, (const re::ecs2::Entity *)1, (uint64_t)buf);
        }
        else
        {
          long long v69 = *(_OWORD *)(v67 + 48);
          *(_OWORD *)buf = *(_OWORD *)(v67 + 32);
          *(_OWORD *)&buf[16] = v69;
          *(_OWORD *)&buf[32] = *(_OWORD *)(v67 + 64);
        }
        float32x4_t v211 = *(float32x4_t *)&buf[16];
        long long v202 = *(_OWORD *)&buf[32];
        float32x4_t v204 = *(float32x4_t *)buf;
      }
      else
      {
        long long v202 = 0u;
        float32x4_t v204 = (float32x4_t)xmmword_2343679C0;
        float32x4_t v211 = (float32x4_t)xmmword_23435FBB0;
      }
      PerspectiveCameraInScene = (float *)re::ecs2::PerspectiveCameraComponent::firstPerspectiveCameraInScene(v212);
      if (PerspectiveCameraInScene)
      {
        re::ecs2::PerspectiveCameraComponent::calculateProjection(PerspectiveCameraInScene, (uint64_t)buf, 1.0);
      }
      else
      {
        OrthographicCameraInScene = (float *)re::ecs2::OrthographicCameraComponent::firstOrthographicCameraInScene(v212);
        if (OrthographicCameraInScene)
        {
          re::ecs2::OrthographicCameraComponent::calculateProjection(OrthographicCameraInScene, (uint64_t)buf, 1.0);
        }
        else
        {
          uint64_t CustomMatrixCameraInScene = re::ecs2::CustomMatrixCameraComponent::firstCustomMatrixCameraInScene(v212);
          if (!CustomMatrixCameraInScene)
          {
            float v74 = 65.0;
            goto LABEL_81;
          }
          *(_DWORD *)buf = 0;
          *(_OWORD *)&buf[4] = xmmword_234390F00;
          *(void *)&buf[20] = 0xBDCCCCCD3DCCCCCDLL;
          buf[28] = 0;
          *(_OWORD *)&buf[32] = xmmword_23435FD80;
          LODWORD(v262) = 1;
          *((void *)&v262 + 1) = 0;
          re::Projection::setFromMatrix4x4F((uint64_t)buf, CustomMatrixCameraInScene + 256);
        }
      }
      float v73 = atan2f((float)(*(float *)&buf[20] - *(float *)&buf[24]) * 0.5, *(float *)&buf[4]);
      float v74 = v73 + v73;
LABEL_81:
      re::TextureHandle::metalTexture(v54, buf);
      float v75 = *(void **)buf;
      id v76 = objc_msgSend(*(id *)buf, sel_width);
      re::TextureHandle::metalTexture(v54, v228);
      id v77 = v228[0];
      id v78 = objc_msgSend(v228[0], sel_height);
      if (v77) {

      }
      if (v75) {
      float v79 = tanf(v74 * 0.5) * 0.1;
      }
      float32x4_t v80 = v211;
      float v81 = (float)(v80.f32[0] + v80.f32[0]) * v80.f32[0];
      float v82 = vmuls_lane_f32(v211.f32[1] + v211.f32[1], *(float32x2_t *)v211.f32, 1);
      float v83 = vmuls_lane_f32(v211.f32[2] + v211.f32[2], v211, 2);
      float v84 = vmuls_lane_f32(v80.f32[0] + v80.f32[0], *(float32x2_t *)v80.f32, 1);
      float v85 = vmuls_lane_f32(v80.f32[0] + v80.f32[0], v80, 2);
      float v86 = vmuls_lane_f32(v211.f32[1] + v211.f32[1], v211, 2);
      float v87 = vmuls_lane_f32(v80.f32[0] + v80.f32[0], v80, 3);
      float v88 = vmuls_lane_f32(v211.f32[1] + v211.f32[1], v211, 3);
      float v89 = vmuls_lane_f32(v211.f32[2] + v211.f32[2], v211, 3);
      v90.i32[3] = 0;
      v90.f32[0] = 1.0 - (float)(v82 + v83);
      v90.f32[1] = v84 + v89;
      v90.f32[2] = v85 - v88;
      v91.i32[3] = 0;
      v91.f32[0] = v84 - v89;
      v91.f32[1] = 1.0 - (float)(v81 + v83);
      v91.f32[2] = v86 + v87;
      *(float *)&unsigned int v92 = 1.0 - (float)(v81 + v82);
      v93.f32[0] = v85 + v88;
      v93.f32[1] = v86 - v87;
      v93.i64[1] = v92;
      *(float32x4_t *)buf = vmulq_n_f32(v90, v204.f32[0]);
      *(float32x4_t *)&buf[16] = vmulq_n_f32(v91, *(float *)vshrq_n_u64((uint64x2_t)v204, 0x20uLL).i32);
      long long v94 = v202;
      HIDWORD(v94) = 1.0;
      *(float32x4_t *)&buf[32] = vmulq_laneq_f32(v93, v204, 2);
      long long v262 = v94;
      re::ecs2::MeshComponentHelper::computeEntityMeshBounds(v35, 1, (float32x4_t *)buf, 1, (uint64_t)v228);
      uint32x4_t v95 = (uint32x4_t)vcgtq_f32(*(float32x4_t *)v228, v229);
      v95.i32[3] = v95.i32[2];
      double v13 = v214;
      if ((vmaxvq_u32(v95) & 0x80000000) != 0)
      {
        float32x4_t v65 = v208;
        if (re::ecs2::VisualProxyComponent::log(void)::onceToken != -1) {
          dispatch_once(&re::ecs2::VisualProxyComponent::log(void)::onceToken, &__block_literal_global_12);
        }
        float32x4_t v133 = re::ecs2::VisualProxyComponent::log(void)::log;
        if (os_log_type_enabled((os_log_t)re::ecs2::VisualProxyComponent::log(void)::log, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)buf = 0;
          _os_log_debug_impl(&dword_233120000, v133, OS_LOG_TYPE_DEBUG, "Empty BBox on the entity; will return an empty render.",
            buf,
            2u);
        }
      }
      else
      {
        v96.i64[0] = 0x3F0000003F000000;
        v96.i64[1] = 0x3F0000003F000000;
        float32x4_t v205 = vmulq_f32(vaddq_f32(*(float32x4_t *)v228, v229), v96);
        float32x4_t v97 = vsubq_f32(v229, *(float32x4_t *)v228);
        float32x4_t v98 = vmulq_f32(v97, v97);
        float v99 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v98, 2), vaddq_f32(v98, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v98.f32, 1))).f32[0])* 0.5;
        float v100 = atan2f((float)(v79 + v79) * 0.5, 0.1);
        float v101 = tanf((float)(v100 + v100) * 0.5);
        v102.i64[0] = 0;
        v102.i32[3] = 0;
        *(float *)&v102.i32[2] = v99 / v101;
        float32x4_t v103 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v211, (int32x4_t)v211), (int8x16_t)v211, 0xCuLL);
        float32x4_t v104 = vnegq_f32(v211);
        float32x4_t v105 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v102, v102), (int8x16_t)v102, 0xCuLL), v104), (float32x4_t)v102, v103);
        int8x16_t v106 = (int8x16_t)vaddq_f32(v105, v105);
        float32x4_t v107 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v106, (int32x4_t)v106), v106, 0xCuLL);
        int8x16_t v108 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v107, (int32x4_t)v107), (int8x16_t)v107, 0xCuLL), v104), v107, v103);
        float32x4_t v109 = vaddq_f32(v205, vaddq_f32(vaddq_f32((float32x4_t)v102, vmulq_laneq_f32(v107, v211, 3)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v108, (int32x4_t)v108), v108, 0xCuLL)));
        float32x4_t v110 = vsubq_f32(v109, v205);
        float32x4_t v111 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v110, (int32x4_t)v110), (int8x16_t)v110, 0xCuLL), (float32x4_t)xmmword_23437C080), (float32x4_t)xmmword_23435FD80, v110);
        float32x4_t v112 = vmulq_f32(v111, v111);
        float v113 = fabsf(vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v112.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v112, 2), v112)).f32[0]);
        uint64_t v114 = 3212836864;
        if (v113 >= 1.0e-10) {
          uint64_t v114 = 0;
        }
        uint64_t v115 = 0x3F80000000000000;
        if (v113 < 1.0e-10) {
          uint64_t v115 = 0;
        }
        v116.i64[0] = v115;
        v116.i64[1] = v114;
        int32x4_t v117 = (int32x4_t)vmulq_f32(v110, v110);
        v117.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v117, 2), vadd_f32(*(float32x2_t *)v117.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v117.i8, 1))).u32[0];
        float32x2_t v118 = vrsqrte_f32((float32x2_t)v117.u32[0]);
        float32x2_t v119 = vmul_f32(v118, vrsqrts_f32((float32x2_t)v117.u32[0], vmul_f32(v118, v118)));
        float32x4_t v120 = vmulq_n_f32(v110, vmul_f32(v119, vrsqrts_f32((float32x2_t)v117.u32[0], vmul_f32(v119, v119))).f32[0]);
        float32x4_t v121 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v120, (int32x4_t)v120), (int8x16_t)v120, 0xCuLL);
        float32x4_t v122 = vmlaq_f32(vmulq_f32(v121, vnegq_f32(v116)), v120, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v116, (int32x4_t)v116), (int8x16_t)v116, 0xCuLL));
        float32x4_t v123 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v122, (int32x4_t)v122), (int8x16_t)v122, 0xCuLL);
        int32x4_t v124 = (int32x4_t)vmulq_f32(v122, v122);
        v124.i32[0] = vadd_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)v124.i8, 1), vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v124, 2), *(float32x2_t *)v124.i8)).u32[0];
        float32x2_t v125 = vrsqrte_f32((float32x2_t)v124.u32[0]);
        float32x2_t v126 = vmul_f32(v125, vrsqrts_f32((float32x2_t)v124.u32[0], vmul_f32(v125, v125)));
        float32x4_t v127 = vmulq_n_f32(v123, vmul_f32(v126, vrsqrts_f32((float32x2_t)v124.u32[0], vmul_f32(v126, v126))).f32[0]);
        float v128 = v127.f32[1];
        float32x4_t v129 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v127, (int32x4_t)v127), (int8x16_t)v127, 0xCuLL), vnegq_f32(v120)), v127, v121);
        float v130 = v120.f32[2] + vaddq_f32(v127, v129).f32[0];
        float32x4_t v65 = v208;
        if (v130 >= 0.0)
        {
          v129.f32[0] = sqrtf(v130 + 1.0);
          v127.f32[0] = v129.f32[0] + v129.f32[0];
          float32x2_t v134 = vrecpe_f32((float32x2_t)COERCE_UNSIGNED_INT(v129.f32[0] + v129.f32[0]));
          float32x2_t v135 = vmul_f32(v134, vrecps_f32((float32x2_t)COERCE_UNSIGNED_INT(v129.f32[0] + v129.f32[0]), v134));
          float v136 = vmul_f32(v135, vrecps_f32((float32x2_t)COERCE_UNSIGNED_INT(v129.f32[0] + v129.f32[0]), v135)).f32[0];
          v129.f32[0] = (float)(v129.f32[1] - v120.f32[1]) * v136;
          float v131 = (float)(v120.f32[0] - v127.f32[2]) * v136;
          v120.f32[0] = (float)(v127.f32[1] - v129.f32[2]) * v136;
          float v132 = v127.f32[0] * 0.25;
        }
        else if (v127.f32[0] < v120.f32[2] {
               || (vmovn_s32((int32x4_t)vmvnq_s8((int8x16_t)vcgeq_f32(v127, v129))).u8[0] & 1) != 0)
        }
        {
          v127.f32[0] = 1.0 - v127.f32[0];
          BOOL v137 = v129.f32[0] < v120.f32[2];
          BOOL v138 = v129.f32[0] < v120.f32[2];
          float v139 = sqrtf(v120.f32[2] + (float)(v127.f32[0] - v129.f32[0]));
          *(float *)&unsigned int v140 = v139 + v139;
          float32x2_t v141 = vrecpe_f32((float32x2_t)v140);
          float32x2_t v142 = vmul_f32(v141, vrecps_f32((float32x2_t)v140, v141));
          float v143 = vmul_f32(v142, vrecps_f32((float32x2_t)v140, v142)).f32[0];
          float v144 = (float)(v120.f32[0] + v127.f32[2]) * v143;
          float v145 = (float)(v120.f32[1] + v129.f32[1]) * v143;
          float v146 = *(float *)&v140 * 0.25;
          float v147 = (float)(v127.f32[1] - v129.f32[2]) * v143;
          v129.f32[0] = sqrtf((float)(v127.f32[0] - v120.f32[2]) + v129.f32[0]);
          v129.f32[0] = v129.f32[0] + v129.f32[0];
          *(float32x2_t *)v127.f32 = vrecpe_f32((float32x2_t)v129.u32[0]);
          *(float32x2_t *)v127.f32 = vmul_f32(*(float32x2_t *)v127.f32, vrecps_f32((float32x2_t)v129.u32[0], *(float32x2_t *)v127.f32));
          float v148 = vmul_f32(*(float32x2_t *)v127.f32, vrecps_f32((float32x2_t)v129.u32[0], *(float32x2_t *)v127.f32)).f32[0];
          float v149 = (float)(v128 + v129.f32[2]) * v148;
          float v150 = v129.f32[0] * 0.25;
          float v151 = (float)(v120.f32[1] + v129.f32[1]) * v148;
          float v132 = (float)(v120.f32[0] - v127.f32[2]) * v148;
          if (v137) {
            v129.f32[0] = v144;
          }
          else {
            v129.f32[0] = v149;
          }
          if (v138) {
            float v131 = v145;
          }
          else {
            float v131 = v150;
          }
          if (v138) {
            v120.f32[0] = v146;
          }
          else {
            v120.f32[0] = v151;
          }
          if (v138) {
            float v132 = v147;
          }
        }
        else
        {
          v129.f32[0] = sqrtf(v127.f32[0] + (float)((float)(1.0 - v129.f32[0]) - v120.f32[2]));
          v129.f32[0] = v129.f32[0] + v129.f32[0];
          *(float32x2_t *)v127.f32 = vrecpe_f32((float32x2_t)v129.u32[0]);
          *(float32x2_t *)v127.f32 = vmul_f32(*(float32x2_t *)v127.f32, vrecps_f32((float32x2_t)v129.u32[0], *(float32x2_t *)v127.f32));
          v127.f32[0] = vmul_f32(*(float32x2_t *)v127.f32, vrecps_f32((float32x2_t)v129.u32[0], *(float32x2_t *)v127.f32)).f32[0];
          v129.f32[0] = v129.f32[0] * 0.25;
          float v131 = (float)(v128 + v129.f32[2]) * v127.f32[0];
          v120.f32[0] = (float)(v120.f32[0] + v127.f32[2]) * v127.f32[0];
          float v132 = (float)(v129.f32[1] - v120.f32[1]) * v127.f32[0];
        }
        v129.f32[1] = v131;
        v129.i64[1] = __PAIR64__(LODWORD(v132), v120.u32[0]);
        v239[0] = v109;
        v239[1] = v129;
      }
      LODWORD(vre::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
      *(void *)((char *)&v240 + 4) = 0x447A00003DCCCCCDLL;
      *((float *)&v240 + 3) = -(float)((float)((float)(unint64_t)v76 / (float)(unint64_t)v78) * v79);
      float v241 = (float)((float)(unint64_t)v76 / (float)(unint64_t)v78) * v79;
      float v242 = v79;
      float v243 = -v79;
      char v244 = 0;
      long long v245 = xmmword_23435FD80;
      int v246 = 1;
      uint64_t v247 = 0;
      uint64_t v16 = a1;
      goto LABEL_112;
    }
    uint64_t v56 = v55;
    re::TextureHandle::metalTexture(v54, buf);
    float32x4_t v57 = *(void **)buf;
    id v58 = objc_msgSend(*(id *)buf, sel_width);
    re::TextureHandle::metalTexture(v54, v228);
    id v59 = v228[0];
    id v60 = objc_msgSend(v228[0], sel_height);
    if (v59) {

    }
    double v13 = v214;
    if (v57) {

    }
    float v61 = (float)(unint64_t)v58 / (float)(unint64_t)v60;
    re::ecs2::PerspectiveCameraComponent::calculateWorldPose(v56, 0, (uint64_t)buf);
    v239[0] = *(_OWORD *)buf;
    v239[1] = *(_OWORD *)&buf[16];
    float v62 = (float)(*(float *)(v56 + 36) * 3.1416) / 180.0;
    if (*(_DWORD *)(v56 + 40))
    {
      float v63 = tanf(v62 * 0.5);
      float v64 = atanf(v63 / v61);
      float v62 = v64 + v64;
    }
    uint64_t v16 = a1;
    float32x4_t v65 = v208;
    LODWORD(vre::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
    int v246 = 1;
    *(void *)((char *)&v240 + 4) = *(void *)(v56 + 28);
    float v210 = *((float *)&v240 + 1);
    float v66 = tanf(v62 * 0.5);
    float v242 = v66 * v210;
    float v243 = -(float)(v210 * v66);
    float v241 = v61 * (float)(v66 * v210);
    *((float *)&v240 + 3) = -v241;
LABEL_112:
    re::DynamicArray<re::CameraView>::add(v65, (re::DynamicString *)&v237);
    *(void *)buf = 65290051;
    re::TextureHandle::metalTexture(v54, v228);
    if (BYTE8(v237)) {
      v152 = (const char *)v238;
    }
    else {
      v152 = (const char *)((unint64_t)&v237 | 9);
    }
    re::RenderFrame::specifyScopeLane(v13, (uint64_t *)buf, v228, v152);
    if (v228[0]) {

    }
    re::TextureHandle::metalTexture(v54, v228);
    *(void *)&buf[24] = *(void *)(v19 + 160);
    *(void *)&buf[32] = 0;
    re::FunctionBase<24ul,void ()(NS::SharedPtr<MTL::Texture>)>::operator=<24ul>((uint64_t)buf, v19 + 136);
    *(void *)&buf[40] = v228[0];
    uint64_t v153 = re::globalAllocators(*(re **)&buf[40])[2];
    uint64_t v235 = v153;
    v236 = 0;
    if (v153) {
      v154 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v153 + 32))(v153, 56, 0);
    }
    else {
      v154 = 0;
    }
    uint64_t v17 = v206;
    void *v154 = &unk_26E6F73F8;
    v154[4] = *(void *)&buf[24];
    v154[5] = 0;
    re::FunctionBase<24ul,void ()(NS::SharedPtr<MTL::Texture>)>::operator=<24ul>((uint64_t)(v154 + 1), (uint64_t)buf);
    v154[6] = *(void *)&buf[40];
    *(void *)&buf[40] = 0;
    v236 = v154;
    re::DynamicArray<re::Function<void ()(re::FrameCount)>>::add(v213, (uint64_t)v234);
    re::FunctionBase<24ul,void ()(re::FrameCount)>::destroyCallable((uint64_t)v234);
    if (*(void *)&buf[40])
    {

      *(void *)&buf[40] = 0;
    }
    re::FunctionBase<24ul,void ()(NS::SharedPtr<MTL::Texture>)>::destroyCallable((uint64_t)buf);
    if (v228[0]) {

    }
    if (v215) {
    re::DynamicArray<re::ecs2::ScopeLanePair>::deinit((uint64_t)&v249);
    }
    re::DynamicArray<re::RenderGraphFileProvider>::deinit((uint64_t)v248);
    if (void)v237 && (BYTE8(v237)) {
      (*(void (**)(void))(*(void *)v237 + 40))();
    }
LABEL_129:
    re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::increment(&v223);
  }
  while ((void)v223 != a5 || WORD4(v223) != 0xFFFF || WORD5(v223) != 0xFFFF);
  unsigned int v15 = v226;
  if (!v226)
  {
    uint64_t v14 = v13;
    goto LABEL_140;
  }
  uint64_t v155 = 0;
  v156 = (int *)(v225 + 8);
  while (1)
  {
    int v157 = *v156;
    v156 += 26;
    if (v157 < 0) {
      break;
    }
    if (v226 == ++v155)
    {
      uint64_t v14 = v13;
      LODWORD(v15re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = v226;
      goto LABEL_141;
    }
  }
  uint64_t v14 = v13;
LABEL_141:
  if (v15 != v155)
  {
    v219 = (re::Allocator *)(v14 + 33);
    uint64_t v158 = v155;
    uint64_t v159 = v225;
    v160 = re::KTXTextureCompiler::getSupportedExtensions(void)const::supportedExtensions;
    unsigned int v216 = v15;
    do
    {
      uint64_t v161 = v159 + 104 * v158;
      re::ecs2::RenderingSubsystem::nonOwningStreamNameForWorldRoot(*(re::ecs2::RenderingSubsystem **)(a3 + 8), *(const re::ecs2::Scene **)(v161 + 16), v14, v228);
      if (*(void *)(v161 + 40))
      {
        *(void *)&long long v237 = (unint64_t)v228[0] >> 1;
        uint64_t v162 = **(void **)(re::RenderFrameData::stream(v219, (const re::WeakStringID *)&v237) + 48);
        (*(void (**)(void))(v162 + 616))();
        uint64_t v163 = *(void *)(a3 + 8);
        unint64_t v164 = *((unsigned __int16 *)v160[199] + 8);
        if (*(void *)(v163 + 224) > v164)
        {
          uint64_t v165 = *(void *)(*(void *)(v163 + 240) + 8 * v164);
          if (v165)
          {
            uint64_t v166 = *(void *)(v165 + 24);
            if (v166)
            {
              v167 = *(uint64_t **)(v165 + 40);
              uint64_t v168 = 8 * v166;
              do
              {
                uint64_t v169 = *v167++;
                v170 = (re::ecs2::EntityComponentCollection *)(*(void *)(v169 + 16) + 32);
                re::ecs2::EntityComponentCollection::remove(v170, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
                re::ecs2::EntityComponentCollection::remove(v170, (const re::ecs2::ComponentTypeBase *)v160[199]);
                *(_DWORD *)(re::ecs2::EntityComponentCollection::getOrAdd(v170, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)+ 28) = 0;
                v168 -= 8;
              }
              while (v168);
            }
          }
        }
      }
      v171 = (uint64_t *)(v161 + 64);
      if (v171[2])
      {
        unint64_t v221 = (unint64_t)v228[0] >> 1;
        uint64_t v172 = re::RenderFrameData::stream(v219, (const re::WeakStringID *)&v221);
        v173 = (uint64_t (**)(uint64_t, void, void, void *, void *))re::HashTable<std::type_index,re::RenderFrameDataArrayWrapper,re::Hash<std::type_index>,re::EqualTo<std::type_index>,true,false>::tryGet(v172, (uint64_t *)&v230);
        if (!v173)
        {
          uint64_t v174 = *(void *)(*(void *)(v172 + 48) + 8);
          uint64_t v175 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v174 + 32))(v174, 56, 8);
          *(void *)uint64_t v175 = 0;
          *(void *)(v175 + 8) = 0;
          *(_DWORD *)(v175 + 16) = 1;
          *(void *)(v175 + 32) = 0;
          *(void *)(v175 + 40) = 0;
          *(void *)(v175 + 24) = 0;
          *(_DWORD *)(v175 + 48) = 0;
          v176 = (re *)re::BucketArray<re::VisualProxyHighFidelityHandlerData,4ul>::init(v175, v174, 1uLL);
          uint64_t v177 = re::globalAllocators(v176)[2];
          *(void *)buf = &unk_26E6F74E8;
          *(void *)&buf[8] = v174;
          *(void *)&buf[24] = v177;
          *(void *)&buf[32] = buf;
          *((void *)&v237 + 1) = v175;
          *(void *)&long long v237 = std::__any_imp::_SmallHandler<re::BucketArray<re::VisualProxyHighFidelityHandlerData,4ul> *>::__handle[abi:nn180100];
          *((void *)&v239[1] + 1) = v177;
          *(void *)&long long v240 = 0;
          re::FunctionBase<24ul,void ()(re::RenderFrameDataArrayWrapper *)>::operator=<24ul>((uint64_t)v239, (uint64_t)buf);
          v173 = (uint64_t (**)(uint64_t, void, void, void *, void *))re::HashTable<std::type_index,re::RenderFrameDataArrayWrapper,re::Hash<std::type_index>,re::EqualTo<std::type_index>,true,false>::addNew(v172, (uint64_t *)&v230, (re *)&v237);
          if ((void)v240)
          {
            v222 = &v237;
            (*(void (**)(void, long long **))(*(void *)v240 + 16))(v240, &v222);
          }
          re::FunctionBase<24ul,void ()(re::RenderFrameDataArrayWrapper *)>::destroyCallable((uint64_t)v239);
          if ((void)v237) {
            ((void (*)(void, long long *, void, void, void))v237)(0, &v237, 0, 0, 0);
          }
          re::FunctionBase<24ul,void ()(re::RenderFrameDataArrayWrapper *)>::destroyCallable((uint64_t)buf);
        }
        uint64_t v180 = *v171;
        uint64_t v179 = v171[1];
        uint64_t v181 = v171[2];
        uint64_t *v171 = 0;
        v171[1] = 0;
        v171[2] = 0;
        uint64_t v182 = v171[4];
        v171[4] = 0;
        ++*((_DWORD *)v171 + 6);
        unint64_t v183 = *(void *)(v178 + 40);
        unint64_t v184 = *(void *)(v178 + 8);
        if (v183 + 1 > 4 * v184)
        {
          re::BucketArray<re::VisualProxyHighFidelityHandlerData,4ul>::setBucketsCapacity((void *)v178, (v183 + 4) >> 2);
          unint64_t v184 = *(void *)(v178 + 8);
        }
        if (v184 <= v183 >> 2)
        {
          v222 = 0;
          long long v240 = 0u;
          long long v238 = 0u;
          memset(v239, 0, sizeof(v239));
          long long v237 = 0u;
          os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
          *(_DWORD *)buf = 136315906;
          *(void *)&buf[4] = "operator[]";
          *(_WORD *)&buf[12] = 1024;
          *(_DWORD *)&buf[14] = 858;
          *(_WORD *)&buf[18] = 2048;
          *(void *)&buf[20] = v183 >> 2;
          *(_WORD *)&buf[28] = 2048;
          *(void *)&buf[30] = v184;
          _os_log_send_and_compose_impl();
          _os_crash_msg();
          __break(1u);
LABEL_188:
          re::internal::assertLog((re::internal *)4, v188, "assertion failure: '%s' (%s:line %i) Array is empty", "m_size > 0", "last", 768);
          _os_crash();
          __break(1u);
        }
        if (*(unsigned char *)(v178 + 16)) {
          uint64_t v185 = v178 + 24;
        }
        else {
          uint64_t v185 = *(void *)(v178 + 32);
        }
        uint64_t v186 = *(void *)(v185 + 8 * (v183 >> 2));
        ++*(void *)(v178 + 40);
        ++*(_DWORD *)(v178 + 48);
        uint64_t v187 = v186 + 40 * (v183 & 3);
        *(void *)uint64_t v187 = v180;
        *(void *)&long long v237 = 0;
        *(void *)(v187 + 8) = v179;
        *((void *)&v237 + 1) = 0;
        *(void *)(v187 + 16) = v181;
        *(void *)&long long v238 = 0;
        *(void *)(v187 + 32) = v182;
        *(void *)&v239[0] = 0;
        DWORD2(v238) = 2;
        *(_DWORD *)(v187 + 24) = 1;
        re::DynamicArray<re::VisualProxyHighFidelityTextureCopyRequest>::deinit((uint64_t)&v237);
        uint64_t v189 = *(void *)(v178 + 40);
        if (!v189) {
          goto LABEL_188;
        }
        re::BucketArray<re::DeformationBufferAllocator::VertexBufferAllocation,4ul>::operator[](v178, v189 - 1);
        uint64_t v14 = v214;
        unsigned int v15 = v216;
      }
      re::StringID::destroyString((re::StringID *)v228);
      uint64_t v159 = v225;
      if (v226 <= (int)v155 + 1) {
        unsigned int v190 = v155 + 1;
      }
      else {
        unsigned int v190 = v226;
      }
      v160 = re::KTXTextureCompiler::getSupportedExtensions(void)const::supportedExtensions;
      while (1)
      {
        uint64_t v158 = (v155 + 1);
        if (v190 - 1 == v155) {
          break;
        }
        LODWORD(v15re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = v155 + 1;
        unsigned int v191 = v158;
        if ((*(_DWORD *)(v225 + 104 * v158 + 8) & 0x80000000) != 0) {
          goto LABEL_172;
        }
      }
      unsigned int v191 = v190;
LABEL_172:
      LODWORD(v15re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = v191;
    }
    while (v15 != v191);
  }
  uint64_t v192 = re::ecs2::SceneComponentTable::get((re::ecs2::SceneComponentTable *)(*(void *)(a3 + 8) + 200), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
  if (v192)
  {
    uint64_t v193 = *(void *)(v192 + 24);
    if (v193)
    {
      uint64_t v194 = *(void *)(v192 + 40);
      uint64_t v195 = 8 * v193;
      do
      {
        if (*(int *)(*(void *)v194 + 28) >= 31) {
          re::ecs2::EntityComponentCollection::remove((re::ecs2::EntityComponentCollection *)(*(void *)(*(void *)v194 + 16) + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
        }
        v194 += 8;
        v195 -= 8;
      }
      while (v195);
    }
  }
  uint64_t v196 = re::ecs2::SceneComponentTable::get((re::ecs2::SceneComponentTable *)(*(void *)(a3 + 8) + 200), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
  if (v196)
  {
    uint64_t v197 = *(void *)(v196 + 24);
    if (v197)
    {
      uint64_t v198 = *(void *)(v196 + 40);
      uint64_t v199 = 8 * v197;
      do
      {
        if (*(unsigned char *)(*(void *)v198 + 25)) {
          *(unsigned char *)(*(void *)v198 + 2re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = 0;
        }
        v198 += 8;
        v199 -= 8;
      }
      while (v199);
    }
  }
  BOOL v200 = *(_DWORD *)(a5 + 40) != 0;
  re::HashTable<unsigned long long,re::ecs2::VisualProxyScopeSystemStateImpl::processUpdatingComponents(re::ecs2::System::UpdateContext const&,re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent> *,re::ecs2::ComponentBuckets<re::ecs2::VisualProxyCaptureComponent>::BucketIteration,void *)::VisualProxyPerWorldData,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::~HashTable((uint64_t *)&v224);
  return v200;
}

__n128 re::DynamicArray<re::CameraView>::add(_anonymous_namespace_ *this, re::DynamicString *a2)
{
  unint64_t v4 = *((void *)this + 2);
  if (v4 >= *((void *)this + 1))
  {
    re::DynamicArray<re::CameraView>::growCapacity(this, v4 + 1);
    unint64_t v4 = *((void *)this + 2);
  }
  uint64_t v5 = *((void *)this + 4);
  uint64_t v6 = v5 + 672 * v4;
  re::DynamicString::DynamicString((re::DynamicString *)v6, a2);
  long long v7 = *((_OWORD *)a2 + 2);
  long long v8 = *((_OWORD *)a2 + 3);
  long long v9 = *((_OWORD *)a2 + 5);
  *(_OWORD *)(v6 + 64) = *((_OWORD *)a2 + 4);
  *(_OWORD *)(v6 + 80) = v9;
  *(_OWORD *)(v6 + 32) = v7;
  *(_OWORD *)(v6 + 48) = v8;
  long long v10 = *((_OWORD *)a2 + 6);
  long long v11 = *((_OWORD *)a2 + 7);
  long long v12 = *((_OWORD *)a2 + 9);
  *(_OWORD *)(v6 + 128) = *((_OWORD *)a2 + 8);
  *(_OWORD *)(v6 + 144) = v12;
  *(_OWORD *)(v6 + 96) = v10;
  *(_OWORD *)(v6 + 112) = v11;
  long long v13 = *((_OWORD *)a2 + 10);
  long long v14 = *((_OWORD *)a2 + 11);
  long long v15 = *((_OWORD *)a2 + 13);
  *(_OWORD *)(v6 + 192) = *((_OWORD *)a2 + 12);
  *(_OWORD *)(v6 + 208) = v15;
  *(_OWORD *)(v6 + 160) = v13;
  *(_OWORD *)(v6 + 176) = v14;
  re::DynamicArray<re::RenderGraphFileProvider>::DynamicArray(v6 + 224, (uint64_t *)a2 + 28);
  *(_WORD *)(v6 + 264) = *((_WORD *)a2 + 132);
  re::DynamicArray<re::CameraView::PickupScopeLane>::DynamicArray(v6 + 272, (uint64_t *)a2 + 34);
  *(_OWORD *)(v6 + 320) = *((_OWORD *)a2 + 20);
  long long v16 = *((_OWORD *)a2 + 21);
  long long v17 = *((_OWORD *)a2 + 22);
  long long v18 = *((_OWORD *)a2 + 23);
  *(void *)(v6 + 384) = *((void *)a2 + 48);
  *(_OWORD *)(v6 + 352) = v17;
  *(_OWORD *)(v6 + 368) = v18;
  *(_OWORD *)(v6 + 336) = v16;
  *(unsigned char *)(v6 + 400) = *((unsigned char *)a2 + 400);
  int v19 = *((unsigned __int8 *)a2 + 401);
  *(unsigned char *)(v6 + 401) = v19;
  if (v19) {
    *(unsigned char *)(v5 + 672 * v4 + 402) = *((unsigned char *)a2 + 402);
  }
  int v20 = *((unsigned __int8 *)a2 + 404);
  *(unsigned char *)(v5 + 672 * v4 + 404) = v20;
  if (v20) {
    *(_DWORD *)(v5 + 672 * v4 + 408) = *((_DWORD *)a2 + 102);
  }
  uint64_t v21 = v5 + 672 * v4;
  long long v22 = *((_OWORD *)a2 + 26);
  long long v23 = *((_OWORD *)a2 + 27);
  long long v24 = *((_OWORD *)a2 + 29);
  *(_OWORD *)(v21 + 448) = *((_OWORD *)a2 + 28);
  *(_OWORD *)(v21 + 464) = v24;
  *(_OWORD *)(v21 + 416) = v22;
  *(_OWORD *)(v21 + 432) = v23;
  long long v25 = *((_OWORD *)a2 + 30);
  long long v26 = *((_OWORD *)a2 + 31);
  long long v27 = *((_OWORD *)a2 + 33);
  *(_OWORD *)(v21 + 512) = *((_OWORD *)a2 + 32);
  *(_OWORD *)(v21 + 528) = v27;
  *(_OWORD *)(v21 + 480) = v25;
  *(_OWORD *)(v21 + 496) = v26;
  long long v29 = *((_OWORD *)a2 + 39);
  long long v28 = *((_OWORD *)a2 + 40);
  long long v30 = *((_OWORD *)a2 + 38);
  *(void *)(v21 + 653) = *(void *)((char *)a2 + 653);
  *(_OWORD *)(v21 + 624) = v29;
  *(_OWORD *)(v21 + 640) = v28;
  *(_OWORD *)(v21 + 608) = v30;
  __n128 result = *((__n128 *)a2 + 34);
  long long v32 = *((_OWORD *)a2 + 35);
  long long v33 = *((_OWORD *)a2 + 37);
  *(_OWORD *)(v21 + 576) = *((_OWORD *)a2 + 36);
  *(_OWORD *)(v21 + 592) = v33;
  *(__n128 *)(v21 + 544) = result;
  *(_OWORD *)(v21 + 560) = v32;
  ++*((void *)this + 2);
  ++*((_DWORD *)this + 6);
  return result;
}

uint64_t *re::HashTable<unsigned long long,re::ecs2::VisualProxyScopeSystemStateImpl::processUpdatingComponents(re::ecs2::System::UpdateContext const&,re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent> *,re::ecs2::ComponentBuckets<re::ecs2::VisualProxyCaptureComponent>::BucketIteration,void *)::VisualProxyPerWorldData,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::~HashTable(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2)
  {
    unint64_t v3 = *((unsigned int *)a1 + 8);
    if (v3)
    {
      uint64_t v4 = 0;
      for (unint64_t i = 0; i < v3; ++i)
      {
        uint64_t v6 = a1[2] + v4;
        int v7 = *(_DWORD *)(v6 + 8);
        if (v7 < 0)
        {
          *(_DWORD *)(v6 + 8) = v7 & 0x7FFFFFFF;
          uint64_t v8 = v6 + 24;
          re::DynamicArray<re::VisualProxyHighFidelityTextureCopyRequest>::deinit(v6 + 64);
          re::DynamicArray<re::CameraView>::deinit(v8);
          unint64_t v3 = *((unsigned int *)a1 + 8);
        }
        v4 += 104;
      }
      uint64_t v2 = *a1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)v2 + 40))(v2, a1[1]);
    *((_DWORD *)a1 + 8) = 0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
    *(uint64_t *)((char *)a1 + 36) = 0x7FFFFFFFLL;
  }
  return a1;
}

re::ecs2::VisualProxyScopeSystem *re::ecs2::VisualProxyScopeSystem::VisualProxyScopeSystem(re::ecs2::VisualProxyScopeSystem *this)
{
  v11[1] = *MEMORY[0x263EF8340];
  re::ecs2::System::System((uint64_t)this, 1, 1);
  *(_OWORD *)(v2 + 136) = 0u;
  *(_OWORD *)(v2 + 120) = 0u;
  *(_OWORD *)(v2 + 104) = 0u;
  *(void *)uint64_t v2 = &unk_26E6F7340;
  uint64_t v3 = v2 + 160;
  *(void *)(v2 + 152) = 0;
  *(void *)(v2 + 160) = &unk_26E6F7300;
  *(void *)(v2 + 168) = v2;
  *(void *)(v2 + 184) = 0;
  *(void *)(v2 + 192) = 0;
  *(void *)(v2 + 176) = 0;
  uint64_t v10 = 1;
  v11[0] = re::ecs2::ComponentImpl<re::ecs2::VisualProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
  long long v9 = v11;
  uint64_t v4 = re::FixedArray<re::ecs2::ComponentTypeBase const*>::operator=((_anonymous_namespace_ *)(v2 + 176), (uint64_t)&v9);
  *((void *)this + 26) = 0;
  *((void *)this + 2re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = 0;
  *((_DWORD *)this + 54) = 1;
  *((void *)this + 29) = 0;
  *((void *)this + 30) = 0;
  *((void *)this + 28) = 0;
  *((_DWORD *)this + 62) = 0;
  *((_OWORD *)this + 16) = 0u;
  *((_OWORD *)this + 1re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 0u;
  *((_OWORD *)this + 18) = 0u;
  *((_OWORD *)this + 19) = 0u;
  *((_OWORD *)this + 20) = 0u;
  *((_DWORD *)this + 84) = 1;
  *((void *)this + 4re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 0;
  *(_OWORD *)((char *)this + 344) = 0u;
  *(_OWORD *)((char *)this + 360) = 0u;
  *((_DWORD *)this + 96) = 1;
  *(_OWORD *)((char *)this + 41re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 0u;
  *(_OWORD *)((char *)this + 392) = 0u;
  *(_OWORD *)((char *)this + 408) = 0u;
  int v7 = (_anonymous_namespace_ *)re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)this + 40, 0);
  *((_DWORD *)this + 84) += 2;
  *((void *)this + 4re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = 0;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)this + 46, 0);
  *((_DWORD *)this + 96) += 2;
  *((void *)this + 51) = 0;
  *((void *)this + 52) = this;
  *((void *)this + 53) = v3;
  *((unsigned char *)this + 432) = 1;
  LOWORD(v9) = 257;
  HIDWORD(v9) = 1023969417;
  LOBYTE(v10) = 0;
  re::ecs2::System::setTaskOptions(this, (uint64_t *)&v9);
  return this;
}

void re::ecs2::VisualProxyScopeSystem::updateScenes(uint64_t a1, uint64_t **a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = a3;
  uint64_t v12 = a4;
  uint64_t v5 = *(void *)(a1 + 104);
  if (!v5 || (*(unsigned char *)(v5 + 424) & 0x10) != 0)
  {
    uint64_t v6 = *(void *)(a1 + 112);
    if (!v6)
    {
LABEL_13:
      re::internal::assertLog((re::internal *)4, (uint64_t)a2, "assertion failure: '%s' (%s:line %i) ", "m_renderManager", "updateScenes", 300);
      _os_crash();
      __break(1u);
      return;
    }
    int v7 = a2[1];
    if (v7)
    {
      uint64_t v8 = *a2;
      uint64_t v9 = 8 * (void)v7;
      while (*v8)
      {
        re::ecs2::BasicComponentStates<re::ecs2::VisualProxyCaptureComponent>::updateForScene(a1 + 200, *v8++, (uint64_t)&v11, 0);
        v9 -= 8;
        if (!v9)
        {
          uint64_t v6 = *(void *)(a1 + 112);
          goto LABEL_9;
        }
      }
      re::internal::assertLog((re::internal *)4, 0, "assertion failure: '%s' (%s:line %i) VisualProxyScopeSystem must be added to a scene and not to an ECSService directly.", "scene", "updateScenes", 304, v11, v12);
      _os_crash();
      __break(1u);
      goto LABEL_13;
    }
LABEL_9:
    uint64_t v10 = *(void *)(v6 + 104);
    if (v10) {
      *(_DWORD *)(v10 + 1764) = 0;
    }
  }
}

void re::ecs2::BasicComponentStates<re::ecs2::VisualProxyCaptureComponent>::updateForScene(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a2;
  unint64_t v7 = *(void *)(*(void *)(a1 + 64)
                 + 16
                 * re::HashBrown<re::WeakStringID,re::IndexAndProtectionOptions,re::Hash<re::WeakStringID>,re::EqualTo<re::WeakStringID>,re::Hash<re::IndexAndProtectionOptions>,false>::find((void *)(a1 + 56), &v18)+ 8);
  re::DynamicBitset<unsigned long long,64ul>::clearBit(a1 + 168, v7);
  uint64_t v8 = (void *)re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::BlendShapeWeightsBufferComponent>,4ul>::operator[](a1, v7);
  if (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::update(v8, a3, a4)) {
    re::DynamicBitset<unsigned long long,256ul>::setBit(a1 + 168, v7);
  }
  if (*(unsigned char *)(a1 + 232))
  {
    unint64_t v9 = *(void *)(a1 + 176);
    int v10 = *(_DWORD *)(a1 + 184);
    if (v9 >= 0xB)
    {
      if (v10) {
        uint64_t v11 = (void *)(a1 + 192);
      }
      else {
        uint64_t v11 = *(void **)(a1 + 200);
      }
      uint64_t v13 = 8 * v9;
      while (!*v11)
      {
        ++v11;
        v13 -= 8;
        if (!v13) {
          return;
        }
      }
LABEL_19:
      long long v17 = *(re::ecs2::System **)(a1 + 216);
      if (!*((unsigned char *)v17 + 86)) {
        re::ecs2::System::queueToRun(v17, 0.0);
      }
      return;
    }
    if (v10)
    {
      uint64_t v12 = (uint64_t *)(a1 + 192);
      if (!v9) {
        return;
      }
    }
    else
    {
      uint64_t v12 = *(uint64_t **)(a1 + 200);
      if (!v9) {
        return;
      }
    }
    uint64_t v14 = 0;
    uint64_t v15 = 8 * v9;
    do
    {
      uint64_t v16 = *v12++;
      v14 |= v16;
      v15 -= 8;
    }
    while (v15);
    if (v14) {
      goto LABEL_19;
    }
  }
}

void re::ecs2::VisualProxyScopeSystem::willAddSceneToECSService(re::ecs2::VisualProxyScopeSystem *this, re::ecs2::Scene *a2)
{
}

void re::ecs2::BasicComponentStates<re::ecs2::VisualProxyCaptureComponent>::addScene(uint64_t a1, uint64_t a2)
{
  uint64_t v51 = a2;
  uint64_t v4 = (_anonymous_namespace_ *)(a1 + 120);
  unint64_t v5 = *(void *)(a1 + 128);
  int v6 = *(_DWORD *)(a1 + 136);
  if (v5 >= 0xB)
  {
    if (v6) {
      unint64_t v7 = (void *)(a1 + 144);
    }
    else {
      unint64_t v7 = *(void **)(a1 + 152);
    }
    uint64_t v9 = 8 * v5;
    while (!*v7)
    {
      ++v7;
      v9 -= 8;
      if (!v9) {
        goto LABEL_17;
      }
    }
    goto LABEL_16;
  }
  if (v6)
  {
    uint64_t v8 = (uint64_t *)(a1 + 144);
    if (!v5) {
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v8 = *(uint64_t **)(a1 + 152);
    if (!v5) {
      goto LABEL_17;
    }
  }
  uint64_t v10 = 0;
  uint64_t v11 = 8 * v5;
  do
  {
    uint64_t v12 = *v8++;
    v10 |= v12;
    v11 -= 8;
  }
  while (v11);
  if (v10)
  {
LABEL_16:
    *(void *)&long long v43 = re::DynamicBitset<unsigned long long,64ul>::findFirstBitSet(a1 + 120, 0);
    uint64_t v13 = re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::BlendShapeWeightsBufferComponent>,4ul>::operator[](a1, v43);
    re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::init(v13, a1, a2);
    re::HashBrown<re::ecs2::Scene const*,unsigned long,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,void,false>::addNew((_anonymous_namespace_ *)(a1 + 56), &v51, (uint64_t *)&v43);
    re::DynamicBitset<unsigned long long,64ul>::clearBit((uint64_t)v4, v43);
    uint64_t v14 = a1 + 168;
    unint64_t v15 = v43;
    goto LABEL_43;
  }
LABEL_17:
  long long v43 = 0u;
  *(void *)&long long v44 = 0;
  *((void *)&v44 + 1) = -1;
  long long v45 = 0u;
  long long v46 = 0u;
  uint64_t v47 = 0;
  uint64_t v48 = 1;
  long long v49 = 0uLL;
  long long v50 = 0uLL;
  uint64_t v16 = re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>,4ul>::addUninitialized(a1);
  long long v17 = v44;
  *(void *)(v16 + 48) = 0;
  *(_OWORD *)(v16 + 16) = v17;
  *(_OWORD *)(v16 + 32) = 0u;
  *(_OWORD *)uint64_t v16 = 0u;
  re::BucketArray<RESubscriptionHandle,8ul>::BucketArray(v16 + 56, (uint64_t)&v46 + 8);
  re::ecs2::BasicComponentStateSceneData<re::ecs2::BlendShapeWeightsBufferComponent>::~BasicComponentStateSceneData(&v43);
  uint64_t v19 = *(void *)(a1 + 40);
  if (!v19)
  {
    re::internal::assertLog((re::internal *)4, v18, "assertion failure: '%s' (%s:line %i) Array is empty", "m_size > 0", "last", 768);
    _os_crash();
    __break(1u);
    return;
  }
  uint64_t v20 = re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::BlendShapeWeightsBufferComponent>,4ul>::operator[](a1, v19 - 1);
  re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::init(v20, a1, v51);
  unint64_t v42 = *(void *)(a1 + 40) - 1;
  re::HashBrown<re::ecs2::Scene const*,unsigned long,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,void,false>::addNew((_anonymous_namespace_ *)(a1 + 56), &v51, (uint64_t *)&v42);
  unint64_t v21 = *(void *)(a1 + 40);
  unint64_t v22 = *(void *)(a1 + 160);
  if ((v21 & 0x3F) != 0) {
    unint64_t v23 = (v21 >> 6) + 1;
  }
  else {
    unint64_t v23 = v21 >> 6;
  }
  *(void *)(a1 + 160) = v21;
  *(void *)&long long v43 = 0;
  re::DynamicOverflowArray<unsigned long long,2ul>::resize(v4, v23, &v43);
  if (v21 && v22 > v21)
  {
    uint64_t v24 = 63;
    uint64_t v25 = *(void *)(a1 + 160) & 0x3FLL;
    if (v25 && v25 != 63) {
      uint64_t v24 = ~(-1 << v25);
    }
    if (*(unsigned char *)(a1 + 136)) {
      uint64_t v26 = a1 + 144;
    }
    else {
      uint64_t v26 = *(void *)(a1 + 152);
    }
    *(void *)(v26 + 8 * *(void *)(a1 + 128) - 8) &= v24;
  }
  unint64_t v27 = *(void *)(a1 + 40);
  unint64_t v28 = *(void *)(a1 + 208);
  if ((v27 & 0x3F) != 0) {
    unint64_t v29 = (v27 >> 6) + 1;
  }
  else {
    unint64_t v29 = v27 >> 6;
  }
  *(void *)(a1 + 208) = v27;
  *(void *)&long long v43 = 0;
  re::DynamicOverflowArray<unsigned long long,2ul>::resize((_anonymous_namespace_ *)(a1 + 168), v29, &v43);
  if (v27 && v28 > v27)
  {
    uint64_t v30 = 63;
    uint64_t v31 = *(void *)(a1 + 208) & 0x3FLL;
    if (v31 && v31 != 63) {
      uint64_t v30 = ~(-1 << v31);
    }
    if (*(unsigned char *)(a1 + 184)) {
      uint64_t v32 = a1 + 192;
    }
    else {
      uint64_t v32 = *(void *)(a1 + 200);
    }
    *(void *)(v32 + 8 * *(void *)(a1 + 176) - 8) &= v30;
  }
  unint64_t v15 = v42;
  uint64_t v14 = a1 + 168;
LABEL_43:
  re::DynamicBitset<unsigned long long,256ul>::setBit(v14, v15);
  if (!*(unsigned char *)(a1 + 232)) {
    return;
  }
  unint64_t v33 = *(void *)(a1 + 176);
  int v34 = *(_DWORD *)(a1 + 184);
  if (v33 >= 0xB)
  {
    if (v34) {
      uint64_t v35 = (void *)(a1 + 192);
    }
    else {
      uint64_t v35 = *(void **)(a1 + 200);
    }
    uint64_t v37 = 8 * v33;
    while (!*v35)
    {
      ++v35;
      v37 -= 8;
      if (!v37) {
        return;
      }
    }
LABEL_59:
    uint64_t v41 = *(re::ecs2::System **)(a1 + 216);
    if (!*((unsigned char *)v41 + 86)) {
      re::ecs2::System::queueToRun(v41, 0.0);
    }
    return;
  }
  if (v34)
  {
    float32x4_t v36 = (uint64_t *)(a1 + 192);
    if (!v33) {
      return;
    }
  }
  else
  {
    float32x4_t v36 = *(uint64_t **)(a1 + 200);
    if (!v33) {
      return;
    }
  }
  uint64_t v38 = 0;
  uint64_t v39 = 8 * v33;
  do
  {
    uint64_t v40 = *v36++;
    v38 |= v40;
    v39 -= 8;
  }
  while (v39);
  if (v38) {
    goto LABEL_59;
  }
}

uint64_t re::ecs2::VisualProxyScopeSystem::willRemoveSceneFromECSService(re::ecs2::VisualProxyScopeSystem *this, re::ecs2::Scene *a2)
{
  return re::ecs2::BasicComponentStates<re::ecs2::CharacterControllerComponent>::removeScene((uint64_t)this + 200, (uint64_t)a2);
}

uint64_t re::ecs2::BasicComponentStateImpl<re::ecs2::VisualProxyCaptureComponent>::dependsOnComponents()
{
  return 0;
}

unint64_t re::ecs2::BasicComponentStateImpl<re::ecs2::VisualProxyCaptureComponent>::didDependentComponentChange(uint64_t a1, re::ecs2::ComponentBucketsBase **a2, uint64_t a3)
{
  unint64_t result = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(a3 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
  if (result)
  {
    unint64_t v5 = (re::ecs2::Component *)result;
    uint64_t v6 = 3;
    unint64_t v7 = 0xFFFFFFFFLL;
    do
    {
      unint64_t v8 = re::ecs2::ComponentBucketsBase::componentHandle(a2[2], (unint64_t)a2[v6], v5);
      if (v8 != -1 && (v9 & 0xFFFFFF00000000) != 0)
      {
        unint64_t v11 = v8;
        unint64_t v7 = v9;
        goto LABEL_11;
      }
      ++v6;
    }
    while (v6 != 7);
    unint64_t v11 = -1;
LABEL_11:
    return re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::setComponentState(a2, v11, v7, 0);
  }
  return result;
}

void re::ecs2::VisualProxyScopeSystem::~VisualProxyScopeSystem(re::ecs2::VisualProxyScopeSystem *this)
{
  *((void *)this + 20) = &unk_26E6F7300;
  re::FixedArray<CoreIKTransform>::deinit((uint64_t *)this + 22);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  re::ecs2::BasicComponentStates<re::ecs2::BlendShapeWeightsBufferComponent>::~BasicComponentStates((void *)this + 25);
  *((void *)this + 20) = &unk_26E6F7300;
  re::FixedArray<CoreIKTransform>::deinit((uint64_t *)this + 22);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::VisualProxyScopeSystem::typeInfo(re::ecs2::VisualProxyScopeSystem *this)
{
  return re::internal::getOrCreateInfo((re::internal *)"VisualProxyScopeSystem", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_VisualProxyScopeSystem, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_VisualProxyScopeSystem, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::VisualProxyScopeSystem>, 0);
}

void *re::DynamicArray<re::CameraView>::setCapacity(void *result, unint64_t a2)
{
  uint64_t v3 = result[1];
  if (v3 != a2)
  {
    unint64_t v5 = result;
    if (result[2] <= a2)
    {
      unint64_t result = (void *)*result;
      if (!*v5)
      {
        unint64_t result = (void *)re::DynamicArray<re::CameraView>::setCapacity(v5, a2);
        ++*((_DWORD *)v5 + 6);
        return result;
      }
      if (a2)
      {
        if (is_mul_ok(a2, 0x2A0uLL))
        {
          uint64_t v2 = 672 * a2;
          unint64_t result = (void *)(*(uint64_t (**)(void *, unint64_t, uint64_t))(*result + 32))(result, 672 * a2, 16);
          if (result)
          {
            unint64_t v7 = result;
            if (!v5[1]) {
              goto LABEL_16;
            }
            goto LABEL_11;
          }
        }
        else
        {
          re::internal::assertLog((re::internal *)6, a2, "assertion failure: '%s' (%s:line %i) Size overflow in DynamicArray<T>::setCapacity(). Element size = %zu, capacity = %zu", "!overflow", "setCapacity", 615, 672, a2);
          _os_crash();
          __break(1u);
        }
        re::internal::assertLog((re::internal *)6, v6, "assertion failure: '%s' (%s:line %i) DynamicArray<T> is out of memory (tried to allocate %zu bytes from allocator '%s').", "newData", "setCapacity", 619, v2, *(void *)(*v5 + 8));
        unint64_t result = (void *)_os_crash();
        __break(1u);
        return result;
      }
      unint64_t v7 = 0;
      if (!v3)
      {
LABEL_16:
        v5[4] = v7;
        v5[1] = a2;
        return result;
      }
LABEL_11:
      uint64_t v8 = v5[4];
      uint64_t v9 = v5[2];
      if (v9)
      {
        uint64_t v10 = 672 * v9;
        uint64_t v11 = (uint64_t)v7;
        do
        {
          re::ObjectHelper::move<re::CameraView>(v8, v11);
          v8 += 672;
          v11 += 672;
          v10 -= 672;
        }
        while (v10);
        uint64_t v8 = v5[4];
      }
      unint64_t result = (void *)(*(uint64_t (**)(void, uint64_t))(*(void *)*v5 + 40))(*v5, v8);
      goto LABEL_16;
    }
  }
  return result;
}

double re::ObjectHelper::move<re::CameraView>(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 8);
  *(void *)a2 = *(void *)a1;
  *(void *)a1 = 0;
  uint64_t v4 = *(void *)(a1 + 16);
  *(void *)(a1 + 24) = 0;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a2 + 8) = v3;
  *(void *)(a2 + 16) = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v5;
  long long v7 = *(_OWORD *)(a1 + 32);
  long long v8 = *(_OWORD *)(a1 + 48);
  long long v9 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a2 + 80) = v9;
  *(_OWORD *)(a2 + 32) = v7;
  *(_OWORD *)(a2 + 48) = v8;
  long long v10 = *(_OWORD *)(a1 + 96);
  long long v11 = *(_OWORD *)(a1 + 112);
  long long v12 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(a2 + 128) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(a2 + 144) = v12;
  *(_OWORD *)(a2 + 96) = v10;
  *(_OWORD *)(a2 + 112) = v11;
  long long v13 = *(_OWORD *)(a1 + 160);
  long long v14 = *(_OWORD *)(a1 + 176);
  long long v15 = *(_OWORD *)(a1 + 208);
  *(_OWORD *)(a2 + 192) = *(_OWORD *)(a1 + 192);
  *(_OWORD *)(a2 + 208) = v15;
  *(_OWORD *)(a2 + 160) = v13;
  *(_OWORD *)(a2 + 176) = v14;
  *(void *)(a2 + 256) = 0;
  *(_DWORD *)(a2 + 248) = 0;
  *(void *)(a2 + 232) = 0;
  *(void *)(a2 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 0;
  *(void *)(a2 + 224) = 0;
  uint64_t v16 = *(void *)(a1 + 232);
  uint64_t v17 = a1 + 224;
  *(void *)(a2 + 224) = *(void *)(a1 + 224);
  *(void *)(a2 + 232) = v16;
  *(void *)(a1 + 224) = 0;
  *(void *)(a1 + 232) = 0;
  uint64_t v18 = *(void *)(a2 + 240);
  *(void *)(a2 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = *(void *)(a1 + 240);
  *(void *)(a1 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = v18;
  uint64_t v19 = *(void *)(a2 + 256);
  *(void *)(a2 + 256) = *(void *)(a1 + 256);
  *(void *)(a1 + 256) = v19;
  ++*(_DWORD *)(a1 + 248);
  ++*(_DWORD *)(a2 + 248);
  *(_WORD *)(a2 + 264) = *(_WORD *)(a1 + 264);
  uint64_t v20 = a1 + 272;
  *(void *)(a2 + 304) = 0;
  *(_DWORD *)(a2 + 296) = 0;
  *(void *)(a2 + 280) = 0;
  *(void *)(a2 + 288) = 0;
  *(void *)(a2 + 272) = 0;
  uint64_t v21 = *(void *)(v17 + 56);
  *(void *)(a2 + 272) = *(void *)(v17 + 48);
  *(void *)(a2 + 280) = v21;
  *(void *)(v17 + 48) = 0;
  *(void *)(v17 + 56) = 0;
  uint64_t v22 = *(void *)(a2 + 288);
  *(void *)(a2 + 288) = *(void *)(v17 + 64);
  *(void *)(v17 + 64) = v22;
  uint64_t v23 = *(void *)(a2 + 304);
  *(void *)(a2 + 304) = *(void *)(v17 + 80);
  *(void *)(v17 + 80) = v23;
  ++*(_DWORD *)(v17 + 72);
  ++*(_DWORD *)(a2 + 296);
  *(_OWORD *)(a2 + 320) = *(_OWORD *)(v17 + 96);
  long long v24 = *(_OWORD *)(v17 + 112);
  long long v25 = *(_OWORD *)(v17 + 128);
  long long v26 = *(_OWORD *)(v17 + 144);
  *(void *)(a2 + 384) = *(void *)(v17 + 160);
  *(_OWORD *)(a2 + 352) = v25;
  *(_OWORD *)(a2 + 368) = v26;
  *(_OWORD *)(a2 + 336) = v24;
  *(unsigned char *)(a2 + 400) = *(unsigned char *)(v17 + 176);
  LODWORD(vre::HashSetBase<re::AssetHandle,re::AssetHandle,re::internal::ValueAsKey<re::AssetHandle>,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 23) = *(unsigned __int8 *)(v17 + 177);
  *(unsigned char *)(a2 + 401) = v23;
  if (v23) {
    *(unsigned char *)(a2 + 402) = *(unsigned char *)(a1 + 402);
  }
  int v27 = *(unsigned __int8 *)(a1 + 404);
  *(unsigned char *)(a2 + 404) = v27;
  if (v27) {
    *(_DWORD *)(a2 + 408) = *(_DWORD *)(a1 + 408);
  }
  long long v28 = *(_OWORD *)(a1 + 416);
  long long v29 = *(_OWORD *)(a1 + 432);
  long long v30 = *(_OWORD *)(a1 + 464);
  *(_OWORD *)(a2 + 448) = *(_OWORD *)(a1 + 448);
  *(_OWORD *)(a2 + 464) = v30;
  *(_OWORD *)(a2 + 416) = v28;
  *(_OWORD *)(a2 + 432) = v29;
  long long v31 = *(_OWORD *)(a1 + 480);
  long long v32 = *(_OWORD *)(a1 + 496);
  long long v33 = *(_OWORD *)(a1 + 528);
  *(_OWORD *)(a2 + 512) = *(_OWORD *)(a1 + 512);
  *(_OWORD *)(a2 + 528) = v33;
  *(_OWORD *)(a2 + 480) = v31;
  *(_OWORD *)(a2 + 496) = v32;
  long long v35 = *(_OWORD *)(a1 + 624);
  long long v34 = *(_OWORD *)(a1 + 640);
  long long v36 = *(_OWORD *)(a1 + 608);
  *(void *)(a2 + 653) = *(void *)(a1 + 653);
  *(_OWORD *)(a2 + 624) = v35;
  *(_OWORD *)(a2 + 640) = v34;
  *(_OWORD *)(a2 + 608) = v36;
  long long v37 = *(_OWORD *)(a1 + 544);
  long long v38 = *(_OWORD *)(a1 + 560);
  long long v39 = *(_OWORD *)(a1 + 592);
  *(_OWORD *)(a2 + 576) = *(_OWORD *)(a1 + 576);
  *(_OWORD *)(a2 + 592) = v39;
  *(_OWORD *)(a2 + 544) = v37;
  *(_OWORD *)(a2 + 560) = v38;
  re::DynamicArray<re::ecs2::ScopeLanePair>::deinit(v20);
  re::DynamicArray<re::RenderGraphFileProvider>::deinit(v17);
  return re::DynamicString::deinit((re::DynamicString *)a1);
}

uint64_t re::DynamicArray<re::VisualProxyHighFidelityTextureCopyRequest>::deinit(uint64_t a1)
{
  uint64_t result = *(void *)a1;
  if (result)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    if (v3)
    {
      uint64_t v4 = *(void *)(a1 + 16);
      if (v4)
      {
        uint64_t v5 = 16 * v4;
        uint64_t v6 = (id *)(v3 + 8);
        do
        {
          if (*v6)
          {

            id *v6 = 0;
          }
          long long v7 = *(v6 - 1);
          if (v7)
          {

            *(v6 - 1) = 0;
          }
          v6 += 2;
          v5 -= 16;
        }
        while (v5);
        uint64_t result = *(void *)a1;
        uint64_t v3 = *(void *)(a1 + 32);
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 40))(result, v3);
    }
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = 0;
    ++*(_DWORD *)(a1 + 24);
  }
  return result;
}

re::CameraView *re::CameraView::CameraView(re::CameraView *this, re::Allocator *a2)
{
  uint64_t v4 = (char *)this + 347;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *(void *)this = a2;
  *((void *)this + 1) = 0;
  re::DynamicString::setCapacity(this, 0);
  *((void *)this + 4) = 0;
  *((void *)this + re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 0x3F80000000000000;
  *((_DWORD *)this + 16) = 0;
  *(_OWORD *)((char *)this + 68) = xmmword_234390F00;
  *(void *)((char *)this + 84) = 0xBDCCCCCD3DCCCCCDLL;
  *((unsigned char *)this + 92) = 0;
  *((_OWORD *)this + 6) = xmmword_23435FD80;
  *((_DWORD *)this + 28) = 1;
  *((void *)this + 1re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = 0;
  *((void *)this + 16) = 0;
  *((void *)this + 18) = 0;
  *((void *)this + 19) = 0x3F80000000000000;
  *((void *)this + 1re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 0;
  *((_DWORD *)this + 40) = 0;
  *(_OWORD *)((char *)this + 164) = xmmword_234390F00;
  *(void *)((char *)this + 180) = 0xBDCCCCCD3DCCCCCDLL;
  *((unsigned char *)this + 188) = 0;
  *((_OWORD *)this + 12) = xmmword_23435FD80;
  *((_DWORD *)this + 52) = 1;
  *((void *)this + 2re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 0;
  *((void *)this + 32) = 0;
  *((void *)this + 29) = 0;
  *((void *)this + 30) = 0;
  *((_DWORD *)this + 62) = 0;
  *((void *)this + 28) = a2;
  re::DynamicArray<re::RenderGraphFileProvider>::setCapacity((void *)this + 28, 0);
  ++*((_DWORD *)this + 62);
  *((_WORD *)this + 132) = 0;
  *((void *)this + 38) = 0;
  *((void *)this + 3re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = 0;
  *((void *)this + 36) = 0;
  *((_DWORD *)this + 74) = 0;
  *((void *)this + 34) = a2;
  re::DynamicArray<re::CameraView::PickupScopeLane>::setCapacity((void *)this + 34, 0);
  ++*((_DWORD *)this + 74);
  *((void *)this + 40) = 0;
  *((void *)this + 41) = 0;
  *((_DWORD *)this + 8re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = 0;
  *((_WORD *)this + 172) = 1;
  *((unsigned char *)this + 346) = 1;
  *(_DWORD *)uint64_t v4 = 0;
  *((void *)this + 44) = 0x13F800000;
  *((void *)this + 4re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = 134217472;
  *((void *)this + 46) = 134217472;
  *((unsigned char *)this + 376) = 0;
  *((void *)this + 48) = -1;
  *((_WORD *)this + 200) = 1;
  *((unsigned char *)this + 404) = 0;
  *((_OWORD *)this + 26) = 0u;
  *((_OWORD *)this + 2re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 0u;
  *((_OWORD *)this + 28) = 0u;
  *((_OWORD *)this + 29) = 0u;
  *((_DWORD *)this + 120) = 0;
  *(_OWORD *)(v4 + 13re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = xmmword_234390F00;
  *(void *)((char *)this + 500) = 0xBDCCCCCD3DCCCCCDLL;
  *((unsigned char *)this + 508) = 0;
  *((_OWORD *)this + 32) = xmmword_23435FD80;
  *((_DWORD *)this + 132) = 1;
  *(_OWORD *)((char *)this + 536) = 0u;
  *(_OWORD *)((char *)this + 552) = 0u;
  *(_OWORD *)((char *)this + 568) = 0u;
  *(_OWORD *)((char *)this + 584) = 0u;
  *(_OWORD *)((char *)this + 600) = 0u;
  *(_OWORD *)((char *)this + 616) = 0u;
  *((void *)this + 79) = 0;
  *((void *)this + 80) = -1;
  *((_DWORD *)this + 162) = 0;
  *((_WORD *)this + 326) = 1;
  *((unsigned char *)this + 654) = 0;
  *((_DWORD *)this + 164) = -1;
  *((unsigned char *)this + 660) = 0;
  return this;
}

void *re::DynamicArray<re::RenderGraphFileProvider>::setCapacity(void *result, unint64_t a2)
{
  uint64_t v3 = result[1];
  if (v3 != a2)
  {
    uint64_t v5 = result;
    if (result[2] <= a2)
    {
      uint64_t result = (void *)*result;
      if (!*v5)
      {
        uint64_t result = (void *)re::DynamicArray<re::RenderGraphFileProvider>::setCapacity(v5, a2);
        ++*((_DWORD *)v5 + 6);
        return result;
      }
      if (a2)
      {
        if (is_mul_ok(a2, 0x30uLL))
        {
          uint64_t v2 = 48 * a2;
          uint64_t result = (void *)(*(uint64_t (**)(void *, unint64_t, uint64_t))(*result + 32))(result, 48 * a2, 8);
          if (result)
          {
            long long v7 = result;
            if (!v5[1]) {
              goto LABEL_16;
            }
            goto LABEL_11;
          }
        }
        else
        {
          re::internal::assertLog((re::internal *)6, a2, "assertion failure: '%s' (%s:line %i) Size overflow in DynamicArray<T>::setCapacity(). Element size = %zu, capacity = %zu", "!overflow", "setCapacity", 615, 48, a2);
          _os_crash();
          __break(1u);
        }
        re::internal::assertLog((re::internal *)6, v6, "assertion failure: '%s' (%s:line %i) DynamicArray<T> is out of memory (tried to allocate %zu bytes from allocator '%s').", "newData", "setCapacity", 619, v2, *(void *)(*v5 + 8));
        uint64_t result = (void *)_os_crash();
        __break(1u);
        return result;
      }
      long long v7 = 0;
      if (!v3)
      {
LABEL_16:
        v5[4] = v7;
        v5[1] = a2;
        return result;
      }
LABEL_11:
      long long v8 = (void *)v5[4];
      uint64_t v9 = v5[2];
      if (v9)
      {
        long long v10 = &v8[6 * v9];
        long long v11 = v7;
        do
        {
          *long long v11 = *v8;
          *(_OWORD *)(v11 + 1) = 0u;
          *(_OWORD *)(v11 + 3) = 0u;
          uint64_t v13 = v8[1];
          long long v12 = v8 + 1;
          v11[1] = v13;
          void *v12 = 0;
          v11[4] = v12[3];
          v12[3] = 0;
          uint64_t v15 = v11[2];
          uint64_t v14 = v11[3];
          uint64_t v16 = v12[2];
          void v11[2] = v12[1];
          v11[3] = v16;
          v12[1] = v15;
          v12[2] = v14;
          *((_DWORD *)v11 + 10) = *((_DWORD *)v12 + 8);
          re::DynamicString::deinit((re::DynamicString *)v12);
          long long v8 = v12 + 5;
          v11 += 6;
        }
        while (v8 != v10);
        long long v8 = (void *)v5[4];
      }
      uint64_t result = (void *)(*(uint64_t (**)(void, void *))(*(void *)*v5 + 40))(*v5, v8);
      goto LABEL_16;
    }
  }
  return result;
}

void *re::DynamicArray<re::CameraView::PickupScopeLane>::setCapacity(void *result, unint64_t a2)
{
  uint64_t v3 = result[1];
  if (v3 != a2)
  {
    uint64_t v5 = result;
    if (result[2] <= a2)
    {
      uint64_t result = (void *)*result;
      if (!*v5)
      {
        uint64_t result = (void *)re::DynamicArray<re::CameraView::PickupScopeLane>::setCapacity(v5, a2);
        ++*((_DWORD *)v5 + 6);
        return result;
      }
      if (a2)
      {
        if (a2 >> 58)
        {
          re::internal::assertLog((re::internal *)6, a2, "assertion failure: '%s' (%s:line %i) Size overflow in DynamicArray<T>::setCapacity(). Element size = %zu, capacity = %zu", "!overflow", "setCapacity", 615, 64, a2);
          _os_crash();
          __break(1u);
        }
        else
        {
          unint64_t v2 = a2 << 6;
          uint64_t result = (void *)(*(uint64_t (**)(void *, unint64_t, uint64_t))(*result + 32))(result, a2 << 6, 8);
          if (result)
          {
            long long v7 = result;
            if (!v5[1]) {
              goto LABEL_16;
            }
            goto LABEL_11;
          }
        }
        re::internal::assertLog((re::internal *)6, v6, "assertion failure: '%s' (%s:line %i) DynamicArray<T> is out of memory (tried to allocate %zu bytes from allocator '%s').", "newData", "setCapacity", 619, v2, *(void *)(*v5 + 8));
        uint64_t result = (void *)_os_crash();
        __break(1u);
        return result;
      }
      long long v7 = 0;
      if (!v3)
      {
LABEL_16:
        v5[4] = v7;
        v5[1] = a2;
        return result;
      }
LABEL_11:
      long long v8 = (void *)v5[4];
      uint64_t v9 = v5[2];
      if (v9)
      {
        long long v10 = &v8[8 * v9];
        long long v11 = v7;
        do
        {
          *(_OWORD *)long long v11 = 0u;
          *((_OWORD *)v11 + 1) = 0u;
          v11[3] = v8[3];
          uint64_t v12 = v8[1];
          *long long v11 = *v8;
          *long long v8 = 0;
          uint64_t v13 = v8[2];
          v8[3] = 0;
          uint64_t v15 = v11[1];
          uint64_t v14 = v11[2];
          v11[1] = v12;
          void v11[2] = v13;
          v8[1] = v15;
          v8[2] = v14;
          *((_OWORD *)v11 + 2) = 0u;
          *((_OWORD *)v11 + 3) = 0u;
          v11[4] = v8[4];
          v8[4] = 0;
          v11[7] = v8[7];
          v8[7] = 0;
          uint64_t v17 = v11[5];
          uint64_t v16 = v11[6];
          uint64_t v18 = v8[6];
          v11[5] = v8[5];
          v11[6] = v18;
          v8[5] = v17;
          v8[6] = v16;
          re::DynamicString::deinit((re::DynamicString *)(v8 + 4));
          re::DynamicString::deinit((re::DynamicString *)v8);
          v8 += 8;
          v11 += 8;
        }
        while (v8 != v10);
        long long v8 = (void *)v5[4];
      }
      uint64_t result = (void *)(*(uint64_t (**)(void, void *))(*(void *)*v5 + 40))(*v5, v8);
      goto LABEL_16;
    }
  }
  return result;
}

uint64_t re::FunctionBase<24ul,void ()(NS::SharedPtr<MTL::Texture>)>::operator=<24ul>(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    re::FunctionBase<24ul,void ()(NS::SharedPtr<MTL::Texture>)>::destroyCallable(a1);
    uint64_t v4 = *(void *)(a2 + 32);
    if (v4)
    {
      unint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 40))(v4);
      uint64_t v6 = a1;
      if (v5 >= 0x19)
      {
        unint64_t v7 = v5;
        uint64_t v8 = *(void *)(a1 + 24);
        if (v8) {
          uint64_t v6 = (*(uint64_t (**)(uint64_t, unint64_t, void))(*(void *)v8 + 32))(v8, v7, 0);
        }
        else {
          uint64_t v6 = 0;
        }
      }
      *(void *)(a1 + 32) = v6;
      (*(void (**)(void))(**(void **)(a2 + 32) + 24))(*(void *)(a2 + 32));
    }
  }
  return a1;
}

{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    re::FunctionBase<24ul,void ()(NS::SharedPtr<MTL::Texture>)>::destroyCallable(a1);
    uint64_t v4 = *(void *)(a2 + 32);
    if (*(void *)(a1 + 24) == *(void *)(a2 + 24))
    {
      unint64_t v5 = a2;
      if (v4 != a2)
      {
        *(void *)(a1 + 32) = v4;
        *(void *)(a2 + 32) = 0;
        return a1;
      }
    }
    else
    {
      unint64_t v5 = *(void *)(a2 + 32);
      if (!v4) {
        return a1;
      }
    }
    uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 40))(v5);
    unint64_t v7 = a1;
    if (v6 >= 0x19)
    {
      uint64_t v8 = v6;
      uint64_t v9 = *(void *)(a1 + 24);
      if (v9) {
        unint64_t v7 = (*(uint64_t (**)(uint64_t, unint64_t, void))(*(void *)v9 + 32))(v9, v8, 0);
      }
      else {
        unint64_t v7 = 0;
      }
    }
    *(void *)(a1 + 32) = v7;
    (*(void (**)(void))(**(void **)(a2 + 32) + 32))(*(void *)(a2 + 32));
    re::FunctionBase<24ul,void ()(NS::SharedPtr<MTL::Texture>)>::destroyCallable(a2);
  }
  return a1;
}

void *re::internal::Callable<re::ecs2::VisualProxyScopeSystemStateImpl::processUpdatingComponents(re::ecs2::System::UpdateContext const&,re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent> *,re::ecs2::ComponentBuckets<re::ecs2::VisualProxyCaptureComponent>::BucketIteration,void *)::$_0,void ()(re::FrameCount)>::~Callable(void *a1)
{
  *a1 = &unk_26E6F73F8;
  unint64_t v2 = (void *)a1[6];
  if (v2)
  {

    a1[6] = 0;
  }
  re::FunctionBase<24ul,void ()(NS::SharedPtr<MTL::Texture>)>::destroyCallable((uint64_t)(a1 + 1));
  return a1;
}

void re::internal::Callable<re::ecs2::VisualProxyScopeSystemStateImpl::processUpdatingComponents(re::ecs2::System::UpdateContext const&,re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent> *,re::ecs2::ComponentBuckets<re::ecs2::VisualProxyCaptureComponent>::BucketIteration,void *)::$_0,void ()(re::FrameCount)>::~Callable(void *a1)
{
  *a1 = &unk_26E6F73F8;
  unint64_t v2 = (void *)a1[6];
  if (v2)
  {

    a1[6] = 0;
  }
  re::FunctionBase<24ul,void ()(NS::SharedPtr<MTL::Texture>)>::destroyCallable((uint64_t)(a1 + 1));
  JUMPOUT(0x237DBCBD0);
}

void re::internal::Callable<re::ecs2::VisualProxyScopeSystemStateImpl::processUpdatingComponents(re::ecs2::System::UpdateContext const&,re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent> *,re::ecs2::ComponentBuckets<re::ecs2::VisualProxyCaptureComponent>::BucketIteration,void *)::$_0,void ()(re::FrameCount)>::operator()(uint64_t a1)
{
  id v2 = *(id *)(a1 + 48);
  (*(void (**)(void, id *))(**(void **)(a1 + 40) + 16))(*(void *)(a1 + 40), &v2);
  if (v2) {
}
  }

void *re::internal::Callable<re::ecs2::VisualProxyScopeSystemStateImpl::processUpdatingComponents(re::ecs2::System::UpdateContext const&,re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent> *,re::ecs2::ComponentBuckets<re::ecs2::VisualProxyCaptureComponent>::BucketIteration,void *)::$_0,void ()(re::FrameCount)>::cloneInto(uint64_t a1, void *a2)
{
  *a2 = &unk_26E6F73F8;
  a2[4] = *(void *)(a1 + 32);
  a2[5] = 0;
  re::FunctionBase<24ul,void ()(NS::SharedPtr<MTL::Texture>)>::operator=<24ul>((uint64_t)(a2 + 1), a1 + 8);
  a2[6] = *(id *)(a1 + 48);
  return a2;
}

void *re::internal::Callable<re::ecs2::VisualProxyScopeSystemStateImpl::processUpdatingComponents(re::ecs2::System::UpdateContext const&,re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent> *,re::ecs2::ComponentBuckets<re::ecs2::VisualProxyCaptureComponent>::BucketIteration,void *)::$_0,void ()(re::FrameCount)>::moveInto(uint64_t a1, void *a2)
{
  *a2 = &unk_26E6F73F8;
  a2[4] = *(void *)(a1 + 32);
  a2[5] = 0;
  re::FunctionBase<24ul,void ()(NS::SharedPtr<MTL::Texture>)>::operator=<24ul>((uint64_t)(a2 + 1), a1 + 8);
  a2[6] = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = 0;
  return a2;
}

uint64_t re::internal::Callable<re::ecs2::VisualProxyScopeSystemStateImpl::processUpdatingComponents(re::ecs2::System::UpdateContext const&,re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent> *,re::ecs2::ComponentBuckets<re::ecs2::VisualProxyCaptureComponent>::BucketIteration,void *)::$_0,void ()(re::FrameCount)>::size()
{
  return 56;
}

void *re::internal::Callable<re::ecs2::VisualProxyScopeSystemStateImpl::processUpdatingComponents(re::ecs2::System::UpdateContext const&,re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent> *,re::ecs2::ComponentBuckets<re::ecs2::VisualProxyCaptureComponent>::BucketIteration,void *)::$_1,void ()(re::FrameCount)>::~Callable(void *a1)
{
  *a1 = &unk_26E6F7450;
  uint64_t v2 = a1[7];
  if (v2)
  {

    a1[7] = 0;
  }
  re::FunctionBase<24ul,void ()(NS::SharedPtr<MTL::Texture>)>::destroyCallable((uint64_t)(a1 + 1));
  return a1;
}

void re::internal::Callable<re::ecs2::VisualProxyScopeSystemStateImpl::processUpdatingComponents(re::ecs2::System::UpdateContext const&,re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent> *,re::ecs2::ComponentBuckets<re::ecs2::VisualProxyCaptureComponent>::BucketIteration,void *)::$_1,void ()(re::FrameCount)>::~Callable(void *a1)
{
  *a1 = &unk_26E6F7450;
  uint64_t v2 = a1[7];
  if (v2)
  {

    a1[7] = 0;
  }
  re::FunctionBase<24ul,void ()(NS::SharedPtr<MTL::Texture>)>::destroyCallable((uint64_t)(a1 + 1));
  JUMPOUT(0x237DBCBD0);
}

void re::internal::Callable<re::ecs2::VisualProxyScopeSystemStateImpl::processUpdatingComponents(re::ecs2::System::UpdateContext const&,re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent> *,re::ecs2::ComponentBuckets<re::ecs2::VisualProxyCaptureComponent>::BucketIteration,void *)::$_1,void ()(re::FrameCount)>::operator()(uint64_t a1)
{
  uint64_t v2 = *(re::ecs2::Entity **)(a1 + 48);
  if (v2) {
    re::ecs2::Entity::setParentInternal(*(re::ecs2::Entity **)(a1 + 56), v2, 0xFFFFFFFFFFFFFFFFLL);
  }
  id v3 = 0;
  (*(void (**)(void, id *))(**(void **)(a1 + 40) + 16))(*(void *)(a1 + 40), &v3);
  if (v3) {
}
  }

void *re::internal::Callable<re::ecs2::VisualProxyScopeSystemStateImpl::processUpdatingComponents(re::ecs2::System::UpdateContext const&,re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent> *,re::ecs2::ComponentBuckets<re::ecs2::VisualProxyCaptureComponent>::BucketIteration,void *)::$_1,void ()(re::FrameCount)>::cloneInto(void *a1, void *a2)
{
  *a2 = &unk_26E6F7450;
  a2[4] = a1[4];
  a2[5] = 0;
  re::FunctionBase<24ul,void ()(NS::SharedPtr<MTL::Texture>)>::operator=<24ul>((uint64_t)(a2 + 1), (uint64_t)(a1 + 1));
  uint64_t v4 = a1[7];
  a2[6] = a1[6];
  a2[7] = v4;
  if (v4) {
    id v5 = (id)(v4 + 8);
  }
  return a2;
}

uint64_t re::internal::Callable<re::ecs2::VisualProxyScopeSystemStateImpl::processUpdatingComponents(re::ecs2::System::UpdateContext const&,re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent> *,re::ecs2::ComponentBuckets<re::ecs2::VisualProxyCaptureComponent>::BucketIteration,void *)::$_1,void ()(re::FrameCount)>::moveInto(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26E6F7450;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  *(void *)(a2 + 40) = 0;
  re::FunctionBase<24ul,void ()(NS::SharedPtr<MTL::Texture>)>::operator=<24ul>(a2 + 8, a1 + 8);
  *(_OWORD *)(a2 + 48) = *(_OWORD *)(a1 + 48);
  *(void *)(a1 + 56) = 0;
  return a2;
}

uint64_t re::internal::Callable<re::ecs2::VisualProxyScopeSystemStateImpl::processUpdatingComponents(re::ecs2::System::UpdateContext const&,re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent> *,re::ecs2::ComponentBuckets<re::ecs2::VisualProxyCaptureComponent>::BucketIteration,void *)::$_1,void ()(re::FrameCount)>::size()
{
  return 64;
}

id re::internal::defaultRetain<re::ecs2::VisualProxyScopeSystem>(void)::{lambda(void *)#1}::__invoke(uint64_t a1)
{
  return (id)(a1 + 8);
}

void re::internal::defaultRelease<re::ecs2::VisualProxyScopeSystem>(void)::{lambda(void *)#1}::__invoke(uint64_t a1)
{
}

uint64_t re::HashTable<unsigned long long,re::ecs2::VisualProxyScopeSystemStateImpl::processUpdatingComponents(re::ecs2::System::UpdateContext const&,re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent> *,re::ecs2::ComponentBuckets<re::ecs2::VisualProxyCaptureComponent>::BucketIteration,void *)::VisualProxyPerWorldData,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addAsMove(uint64_t a1, unsigned int a2, unint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v9 = *(unsigned int *)(a1 + 36);
  if (v9 == 0x7FFFFFFF)
  {
    uint64_t v9 = *(unsigned int *)(a1 + 32);
    int v10 = v9;
    if (v9 == *(_DWORD *)(a1 + 24))
    {
      int v11 = *(_DWORD *)(a1 + 28);
      signed int v12 = 2 * v11;
      uint64_t v13 = *(void *)a1;
      if (*(void *)a1)
      {
        if (v12) {
          BOOL v14 = v9 == v12;
        }
        else {
          BOOL v14 = 1;
        }
        if (!v14 && (v11 & 0x80000000) == 0)
        {
          memset(v32, 0, 36);
          *(void *)&v32[36] = 0x7FFFFFFFLL;
          re::HashTable<unsigned long long,re::ecs2::VisualProxyScopeSystemStateImpl::processUpdatingComponents(re::ecs2::System::UpdateContext const&,re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent> *,re::ecs2::ComponentBuckets<re::ecs2::VisualProxyCaptureComponent>::BucketIteration,void *)::VisualProxyPerWorldData,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::init((uint64_t)v32, v13, v12);
          long long v15 = *(_OWORD *)v32;
          *(_OWORD *)long long v32 = *(_OWORD *)a1;
          *(_OWORD *)a1 = v15;
          uint64_t v16 = *(void *)&v32[16];
          uint64_t v17 = *(void *)(a1 + 16);
          *(void *)&v32[16] = v17;
          *(void *)(a1 + 16) = v16;
          long long v19 = *(_OWORD *)&v32[24];
          *(_OWORD *)&v32[24] = *(_OWORD *)(a1 + 24);
          unsigned int v18 = *(_DWORD *)&v32[32];
          *(_OWORD *)(a1 + 24) = v19;
          uint64_t v20 = v18;
          if (v18)
          {
            uint64_t v21 = v17 + 16;
            do
            {
              if ((*(_DWORD *)(v21 - 8) & 0x80000000) != 0) {
                re::HashTable<unsigned long long,re::ecs2::VisualProxyScopeSystemStateImpl::processUpdatingComponents(re::ecs2::System::UpdateContext const&,re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent> *,re::ecs2::ComponentBuckets<re::ecs2::VisualProxyCaptureComponent>::BucketIteration,void *)::VisualProxyPerWorldData,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addAsMove(a1, *(void *)(v21 - 16) % (unint64_t)*(unsigned int *)(a1 + 24), *(void *)(v21 - 16), v21, v21 + 8);
              }
              v21 += 104;
              --v20;
            }
            while (v20);
          }
          re::HashTable<unsigned long long,re::ecs2::VisualProxyScopeSystemStateImpl::processUpdatingComponents(re::ecs2::System::UpdateContext const&,re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent> *,re::ecs2::ComponentBuckets<re::ecs2::VisualProxyCaptureComponent>::BucketIteration,void *)::VisualProxyPerWorldData,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::~HashTable((uint64_t *)v32);
        }
      }
      else
      {
        if (v12) {
          signed int v24 = 2 * v11;
        }
        else {
          signed int v24 = 3;
        }
      }
      a2 = a3 % *(unsigned int *)(a1 + 24);
      int v10 = *(_DWORD *)(a1 + 32);
    }
    *(_DWORD *)(a1 + 32) = v10 + 1;
    uint64_t v22 = *(void *)(a1 + 16);
    int v23 = *(_DWORD *)(v22 + 104 * v9 + 8);
  }
  else
  {
    uint64_t v22 = *(void *)(a1 + 16);
    int v23 = *(_DWORD *)(v22 + 104 * v9 + 8);
    *(_DWORD *)(a1 + 36) = v23 & 0x7FFFFFFF;
  }
  *(_DWORD *)(v22 + 104 * v9 + 8) = v23 | 0x80000000;
  uint64_t v25 = 104 * v9;
  *(_DWORD *)(*(void *)(a1 + 16) + v25 + 8) = *(_DWORD *)(*(void *)(a1 + 16) + v25 + 8) & 0x80000000 | *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2);
  *(void *)(*(void *)(a1 + 16) + v2re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = a3;
  *(void *)(*(void *)(a1 + 16) + v25 + 16) = *a4;
  uint64_t v26 = *(void *)(a1 + 16) + v25;
  *(void *)(v26 + 56) = 0;
  *(_DWORD *)(v26 + 48) = 0;
  *(void *)(v26 + 32) = 0;
  *(void *)(v26 + 40) = 0;
  *(void *)(v26 + 24) = 0;
  *(void *)(v26 + 24) = *(void *)a5;
  *(void *)a5 = 0;
  *(void *)(v26 + 32) = *(void *)(a5 + 8);
  *(void *)(a5 + 8) = 0;
  uint64_t v27 = *(void *)(v26 + 40);
  *(void *)(v26 + 40) = *(void *)(a5 + 16);
  *(void *)(a5 + 16) = v27;
  uint64_t v28 = *(void *)(v26 + 56);
  *(void *)(v26 + 56) = *(void *)(a5 + 32);
  *(void *)(a5 + 32) = v28;
  ++*(_DWORD *)(a5 + 24);
  ++*(_DWORD *)(v26 + 48);
  *(void *)(v26 + 96) = 0;
  *(void *)(v26 + 72) = 0;
  *(void *)(v26 + 80) = 0;
  *(void *)(v26 + 64) = 0;
  *(_DWORD *)(v26 + 88) = 0;
  *(void *)(v26 + 64) = *(void *)(a5 + 40);
  *(void *)(a5 + 40) = 0;
  *(void *)(v26 + 72) = *(void *)(a5 + 48);
  *(void *)(a5 + 48) = 0;
  uint64_t v29 = *(void *)(v26 + 80);
  *(void *)(v26 + 80) = *(void *)(a5 + 56);
  *(void *)(a5 + 56) = v29;
  uint64_t v30 = *(void *)(v26 + 96);
  *(void *)(v26 + 96) = *(void *)(a5 + 72);
  *(void *)(a5 + 72) = v30;
  ++*(_DWORD *)(a5 + 64);
  ++*(_DWORD *)(v26 + 88);
  *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2) = v9;
  ++*(_DWORD *)(a1 + 28);
  return v9;
}

void re::HashTable<unsigned long long,re::ecs2::VisualProxyScopeSystemStateImpl::processUpdatingComponents(re::ecs2::System::UpdateContext const&,re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent> *,re::ecs2::ComponentBuckets<re::ecs2::VisualProxyCaptureComponent>::BucketIteration,void *)::VisualProxyPerWorldData,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::init(uint64_t a1, uint64_t a2, signed int a3)
{
  unint64_t v4 = 245;
  id v5 = (unsigned int *)&re::internal::PrimeHelper::s_primes;
  do
  {
    unint64_t v6 = v4 >> 1;
    unint64_t v7 = &v5[v4 >> 1];
    signed int v9 = *v7;
    uint64_t v8 = v7 + 1;
    v4 += ~(v4 >> 1);
    if (v9 < a3) {
      id v5 = v8;
    }
    else {
      unint64_t v4 = v6;
    }
  }
  while (v4);
  uint64_t v10 = *v5;
  *(void *)a1 = a2;
  uint64_t v11 = (4 * v10 + 15) & 0x7FFFFFFF0;
  signed int v12 = (char *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a2 + 32))(a2, v11 + 104 * v10, 16);
  if (v12)
  {
    BOOL v14 = v12;
    *(void *)(a1 + 8) = v12;
    if (v10) {
      memset_pattern16(v12, &memset_pattern_127, 4 * v10);
    }
    *(void *)(a1 + 16) = &v14[v11];
    *(_DWORD *)(a1 + 24) = v10;
    *(_DWORD *)(a1 + 40) = 0;
  }
  else
  {
    re::internal::assertLog((re::internal *)4, v13, "assertion failure: '%s' (%s:line %i) Out of memory.", "temp", "init", 575);
    _os_crash();
    __break(1u);
  }
}

void *re::DynamicArray<re::CameraView>::growCapacity(void *this, unint64_t a2)
{
  unint64_t v2 = this[1];
  if (v2 < a2)
  {
    unint64_t v3 = a2;
    unint64_t v4 = this;
    if (*this)
    {
      uint64_t v5 = 2 * v2;
      BOOL v6 = v2 == 0;
      unint64_t v7 = 8;
      if (!v6) {
        unint64_t v7 = v5;
      }
      if (v7 > a2) {
        a2 = v7;
      }
      return re::DynamicArray<re::CameraView>::setCapacity(this, a2);
    }
    else
    {
      this = re::DynamicArray<re::CameraView>::setCapacity(v4, v3);
      ++*((_DWORD *)v4 + 6);
    }
  }
  return this;
}

uint64_t re::DynamicArray<re::RenderGraphFileProvider>::DynamicArray(uint64_t a1, uint64_t *a2)
{
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 24) = 0;
  uint64_t v3 = *a2;
  if (*a2)
  {
    unint64_t v5 = a2[2];
    *(void *)a1 = v3;
    re::DynamicArray<re::RenderGraphFileProvider>::setCapacity((void *)a1, v5);
    ++*(_DWORD *)(a1 + 24);
    re::DynamicArray<re::RenderGraphFileProvider>::copy((void *)a1, (uint64_t)a2);
  }
  return a1;
}

void re::DynamicArray<re::RenderGraphFileProvider>::copy(void *a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 16);
  if (v4 >= a1[2])
  {
    re::DynamicArray<re::RenderGraphFileProvider>::setCapacity(a1, *(void *)(a2 + 16));
    std::__unwrap_and_dispatch[abi:nn180100]<std::__overload<std::__copy_loop<std::_ClassicAlgPolicy>,std::__copy_trivial>,re::RenderGraphFileProvider *,re::RenderGraphFileProvider *,re::RenderGraphFileProvider *,0>(*(_DWORD **)(a2 + 32), (_DWORD *)(*(void *)(a2 + 32) + 48 * a1[2]), a1[4]);
    uint64_t v8 = a1[2];
    if (v8 != v4)
    {
      uint64_t v9 = *(void *)(a2 + 32);
      uint64_t v10 = (_DWORD *)(v9 + 48 * v4);
      uint64_t v11 = (48 * v8) | 8;
      signed int v12 = (_DWORD *)(v9 + v11);
      uint64_t v13 = (re::DynamicString *)(a1[4] + v11);
      do
      {
        *((void *)v13 - 1) = *((void *)v12 - 1);
        BOOL v14 = re::DynamicString::DynamicString(v13, (const re::DynamicString *)v12);
        *((_DWORD *)v14 + 8) = v12[8];
        long long v15 = v12 + 10;
        v12 += 12;
        uint64_t v13 = (re::DynamicString *)((char *)v14 + 48);
      }
      while (v15 != v10);
    }
  }
  else
  {
    std::__unwrap_and_dispatch[abi:nn180100]<std::__overload<std::__copy_loop<std::_ClassicAlgPolicy>,std::__copy_trivial>,re::RenderGraphFileProvider *,re::RenderGraphFileProvider *,re::RenderGraphFileProvider *,0>(*(_DWORD **)(a2 + 32), (_DWORD *)(*(void *)(a2 + 32) + 48 * v4), a1[4]);
    uint64_t v5 = a1[2];
    if (v4 != v5)
    {
      uint64_t v6 = 48 * v5 - 48 * v4;
      unint64_t v7 = (re::DynamicString *)(a1[4] + 48 * v4 + 8);
      do
      {
        re::DynamicString::deinit(v7);
        unint64_t v7 = (re::DynamicString *)((char *)v7 + 48);
        v6 -= 48;
      }
      while (v6);
    }
  }
  a1[2] = v4;
}

_DWORD *std::__unwrap_and_dispatch[abi:nn180100]<std::__overload<std::__copy_loop<std::_ClassicAlgPolicy>,std::__copy_trivial>,re::RenderGraphFileProvider *,re::RenderGraphFileProvider *,re::RenderGraphFileProvider *,0>(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  unint64_t v4 = a2;
  uint64_t v5 = a1 + 2;
  do
  {
    *(void *)a3 = *((void *)v5 - 1);
    re::DynamicString::operator=((re::DynamicString *)(a3 + 8), (re::DynamicString *)v5);
    *(_DWORD *)(a3 + 40) = v5[8];
    a3 += 48;
    uint64_t v6 = v5 + 10;
    v5 += 12;
  }
  while (v6 != v4);
  return v4;
}

uint64_t re::DynamicArray<re::CameraView::PickupScopeLane>::DynamicArray(uint64_t a1, uint64_t *a2)
{
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 24) = 0;
  uint64_t v3 = *a2;
  if (*a2)
  {
    unint64_t v5 = a2[2];
    *(void *)a1 = v3;
    re::DynamicArray<re::CameraView::PickupScopeLane>::setCapacity((void *)a1, v5);
    ++*(_DWORD *)(a1 + 24);
    re::DynamicArray<re::CameraView::PickupScopeLane>::copy(a1, (uint64_t)a2);
  }
  return a1;
}

void re::DynamicArray<re::CameraView::PickupScopeLane>::copy(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 16);
  if (v4 >= *(void *)(a1 + 16))
  {
    re::DynamicArray<re::CameraView::PickupScopeLane>::setCapacity((void *)a1, *(void *)(a2 + 16));
    std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:nn180100]<re::CameraView::PickupScopeLane *,re::CameraView::PickupScopeLane *,re::CameraView::PickupScopeLane *>((int)&v13, *(re::DynamicString **)(a2 + 32), (re::DynamicString *)(*(void *)(a2 + 32) + (*(void *)(a1 + 16) << 6)), *(re::DynamicString **)(a1 + 32));
    uint64_t v8 = *(void *)(a1 + 16);
    if (v8 != v4)
    {
      uint64_t v9 = *(void *)(a2 + 32) + (v8 << 6);
      uint64_t v10 = *(void *)(a1 + 32) + (v8 << 6);
      uint64_t v11 = (v4 << 6) - (v8 << 6);
      do
      {
        re::DynamicString::DynamicString((re::DynamicString *)v10, (const re::DynamicString *)v9);
        re::DynamicString::DynamicString((re::DynamicString *)(v10 + 32), (const re::DynamicString *)(v9 + 32));
        v9 += 64;
        v10 += 64;
        v11 -= 64;
      }
      while (v11);
    }
  }
  else
  {
    std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:nn180100]<re::CameraView::PickupScopeLane *,re::CameraView::PickupScopeLane *,re::CameraView::PickupScopeLane *>((int)&v12, *(re::DynamicString **)(a2 + 32), (re::DynamicString *)(*(void *)(a2 + 32) + (v4 << 6)), *(re::DynamicString **)(a1 + 32));
    uint64_t v5 = *(void *)(a1 + 16);
    if (v4 != v5)
    {
      uint64_t v6 = *(void *)(a1 + 32) + (v4 << 6);
      uint64_t v7 = (v5 << 6) - (v4 << 6);
      do
      {
        re::DynamicString::deinit((re::DynamicString *)(v6 + 32));
        re::DynamicString::deinit((re::DynamicString *)v6);
        v6 += 64;
        v7 -= 64;
      }
      while (v7);
    }
  }
  *(void *)(a1 + 16) = v4;
}

re::DynamicString *std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:nn180100]<re::CameraView::PickupScopeLane *,re::CameraView::PickupScopeLane *,re::CameraView::PickupScopeLane *>(int a1, re::DynamicString *a2, re::DynamicString *a3, re::DynamicString *this)
{
  uint64_t v5 = a2;
  if (a2 != a3)
  {
    do
    {
      re::DynamicString::operator=(this, v5);
      re::DynamicString::operator=((re::DynamicString *)((char *)this + 32), (re::DynamicString *)((char *)v5 + 32));
      uint64_t v5 = (re::DynamicString *)((char *)v5 + 64);
      this = (re::DynamicString *)((char *)this + 64);
    }
    while (v5 != a3);
    return a3;
  }
  return v5;
}

uint64_t re::HashTable<std::type_index,re::RenderFrameDataArrayWrapper,re::Hash<std::type_index>,re::EqualTo<std::type_index>,true,false>::tryGet(uint64_t a1, uint64_t *a2)
{
  unint64_t v4 = *(void *)(*a2 + 8);
  if ((v4 & 0x8000000000000000) != 0)
  {
    uint64_t v5 = (unsigned __int8 *)(v4 & 0x7FFFFFFFFFFFFFFFLL);
    uint64_t v6 = 5381;
    do
    {
      unint64_t v4 = v6;
      unsigned int v7 = *v5++;
      uint64_t v6 = (33 * v6) ^ v7;
    }
    while (v7);
  }
  if (!*(void *)a1) {
    return 0;
  }
  uint64_t v8 = *(unsigned int *)(*(void *)(a1 + 8) + 4 * (v4 % *(unsigned int *)(a1 + 24)));
  if (v8 == 0x7FFFFFFF) {
    return 0;
  }
  uint64_t v9 = *(void *)(a1 + 16);
  while (1)
  {
    BOOL v10 = std::type_info::operator==[abi:nn180100](*(void *)(v9 + 96 * v8 + 16), *a2);
    uint64_t v9 = *(void *)(a1 + 16);
    if (v10) {
      break;
    }
    uint64_t v8 = *(_DWORD *)(v9 + 96 * v8 + 8) & 0x7FFFFFFF;
    if (v8 == 0x7FFFFFFF) {
      return 0;
    }
  }
  return v9 + 96 * v8 + 24;
}

uint64_t re::HashTable<std::type_index,re::RenderFrameDataArrayWrapper,re::Hash<std::type_index>,re::EqualTo<std::type_index>,true,false>::addNew(uint64_t a1, uint64_t *a2, re *a3)
{
  unint64_t v6 = *(void *)(*a2 + 8);
  if ((v6 & 0x8000000000000000) != 0)
  {
    unsigned int v7 = (unsigned __int8 *)(v6 & 0x7FFFFFFFFFFFFFFFLL);
    uint64_t v8 = 5381;
    do
    {
      unint64_t v6 = v8;
      unsigned int v9 = *v7++;
      uint64_t v8 = (33 * v8) ^ v9;
    }
    while (v9);
  }
  if (!*(void *)a1)
  {
    LODWORD(v10) = 0;
    goto LABEL_11;
  }
  unint64_t v10 = v6 % *(unsigned int *)(a1 + 24);
  uint64_t v11 = *(unsigned int *)(*(void *)(a1 + 8) + 4 * v10);
  if (v11 == 0x7FFFFFFF)
  {
LABEL_11:
    unsigned int v14 = re::HashTable<std::type_index,re::RenderFrameDataArrayWrapper,re::Hash<std::type_index>,re::EqualTo<std::type_index>,true,false>::addAsMove(a1, v10, v6, a2, a3);
    ++*(_DWORD *)(a1 + 40);
    uint64_t v15 = *(void *)(a1 + 16) + 96 * v14;
    return v15 + 24;
  }
  uint64_t v12 = *(void *)(a1 + 16);
  while (1)
  {
    BOOL v13 = std::type_info::operator==[abi:nn180100](*(void *)(v12 + 96 * v11 + 16), *a2);
    uint64_t v12 = *(void *)(a1 + 16);
    if (v13) {
      break;
    }
    uint64_t v11 = *(_DWORD *)(v12 + 96 * v11 + 8) & 0x7FFFFFFF;
    if (v11 == 0x7FFFFFFF) {
      goto LABEL_11;
    }
  }
  uint64_t v15 = v12 + 96 * v11;
  return v15 + 24;
}

void *re::BucketArray<re::VisualProxyHighFidelityHandlerData,4ul>::init(uint64_t a1, uint64_t a2, unint64_t a3)
{
  *(void *)a1 = a2;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)a1, a3);
  *(_DWORD *)(a1 + 16) += 2;
  *(void *)(a1 + 40) = 0;
  uint64_t result = re::BucketArray<re::VisualProxyHighFidelityHandlerData,4ul>::setBucketsCapacity((void *)a1, a3);
  ++*(_DWORD *)(a1 + 48);
  return result;
}

void *re::BucketArray<re::VisualProxyHighFidelityHandlerData,4ul>::setBucketsCapacity(void *result, unint64_t a2)
{
  uint64_t v3 = result;
  if (*result)
  {
    if (result[5] < 4 * a2)
    {
      while (1)
      {
        unint64_t v4 = v3[1];
        if (v4 <= a2) {
          break;
        }
        uint64_t result = (void *)re::BucketArray<re::CollisionCastHit,10ul>::freeElementBucket(v3);
      }
      if (v4 < a2)
      {
        uint64_t v5 = v3 + 3;
        do
        {
          uint64_t result = (void *)(*(uint64_t (**)(void, uint64_t, void))(*(void *)*v3 + 32))(*v3, 160, 0);
          unint64_t v6 = result;
          if (*v3)
          {
            unint64_t v7 = v3[1];
            int v8 = *((_DWORD *)v3 + 4);
            if ((v8 & 1) == 0)
            {
              unint64_t v9 = *v5;
              BOOL v11 = v7 >= *v5;
              unint64_t v10 = v7 + 1;
              BOOL v11 = !v11 || v9 >= v10;
              if (v11) {
                goto LABEL_24;
              }
              unint64_t v12 = 2 * v9;
              goto LABEL_20;
            }
            unint64_t v10 = v7 + 1;
            if (v10 >= 3)
            {
              unint64_t v12 = 4;
LABEL_20:
              if (v12 <= v10) {
                unint64_t v14 = v10;
              }
              else {
                unint64_t v14 = v12;
              }
              uint64_t result = re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity(v3, v14);
              int v8 = *((_DWORD *)v3 + 4);
            }
          }
          else
          {
            unint64_t v13 = v3[1] + 1;
            uint64_t result = re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity(v3, v13);
            int v8 = *((_DWORD *)v3 + 4) + 2;
            *((_DWORD *)v3 + 4) = v8;
          }
LABEL_24:
          uint64_t v15 = v3 + 3;
          if ((v8 & 1) == 0) {
            uint64_t v15 = (void *)v3[4];
          }
          unint64_t v16 = v3[1];
          v15[v16++] = v6;
          v3[1] = v16;
          *((_DWORD *)v3 + 4) += 2;
        }
        while (v16 < a2);
      }
    }
  }
  else
  {
  }
  return result;
}

uint64_t re::HashTable<std::type_index,re::RenderFrameDataArrayWrapper,re::Hash<std::type_index>,re::EqualTo<std::type_index>,true,false>::addAsMove(uint64_t a1, unsigned int a2, unint64_t a3, void *a4, re *a5)
{
  uint64_t v10 = *(unsigned int *)(a1 + 36);
  if (v10 == 0x7FFFFFFF)
  {
    uint64_t v10 = *(unsigned int *)(a1 + 32);
    int v11 = v10;
    if (v10 == *(_DWORD *)(a1 + 24))
    {
      re::HashTable<std::type_index,re::RenderFrameDataArrayWrapper,re::Hash<std::type_index>,re::EqualTo<std::type_index>,true,false>::setCapacity(a1, 2 * *(_DWORD *)(a1 + 28));
      a2 = a3 % *(unsigned int *)(a1 + 24);
      int v11 = *(_DWORD *)(a1 + 32);
    }
    *(_DWORD *)(a1 + 32) = v11 + 1;
    uint64_t v12 = *(void *)(a1 + 16);
    int v13 = *(_DWORD *)(v12 + 96 * v10 + 8);
  }
  else
  {
    uint64_t v12 = *(void *)(a1 + 16);
    int v13 = *(_DWORD *)(v12 + 96 * v10 + 8);
    *(_DWORD *)(a1 + 36) = v13 & 0x7FFFFFFF;
  }
  *(_DWORD *)(v12 + 96 * v10 + 8) = v13 | 0x80000000;
  *(_DWORD *)(*(void *)(a1 + 16) + 96 * v10 + 8) = *(_DWORD *)(*(void *)(a1 + 16) + 96 * v10 + 8) & 0x80000000 | *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2);
  *(void *)(*(void *)(a1 + 16) + 96 * v10) = a3;
  *(void *)(*(void *)(a1 + 16) + 96 * v10 + 16) = *a4;
  re::RenderFrameDataArrayWrapper::RenderFrameDataArrayWrapper((re *)(*(void *)(a1 + 16) + 96 * v10 + 24), a5);
  *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2) = v10;
  ++*(_DWORD *)(a1 + 28);
  return v10;
}

uint64_t re::FunctionBase<24ul,void ()(re::RenderFrameDataArrayWrapper *)>::operator=<24ul>(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    re::FunctionBase<24ul,void ()(re::RenderFrameDataArrayWrapper *)>::destroyCallable(a1);
    uint64_t v4 = *(void *)(a2 + 32);
    if (*(void *)(a1 + 24) == *(void *)(a2 + 24))
    {
      uint64_t v5 = a2;
      if (v4 != a2)
      {
        *(void *)(a1 + 32) = v4;
        *(void *)(a2 + 32) = 0;
        return a1;
      }
    }
    else
    {
      uint64_t v5 = *(void *)(a2 + 32);
      if (!v4) {
        return a1;
      }
    }
    unint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 40))(v5);
    uint64_t v7 = a1;
    if (v6 >= 0x19)
    {
      unint64_t v8 = v6;
      uint64_t v9 = *(void *)(a1 + 24);
      if (v9) {
        uint64_t v7 = (*(uint64_t (**)(uint64_t, unint64_t, void))(*(void *)v9 + 32))(v9, v8, 0);
      }
      else {
        uint64_t v7 = 0;
      }
    }
    *(void *)(a1 + 32) = v7;
    (*(void (**)(void))(**(void **)(a2 + 32) + 32))(*(void *)(a2 + 32));
    re::FunctionBase<24ul,void ()(re::RenderFrameDataArrayWrapper *)>::destroyCallable(a2);
  }
  return a1;
}

{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    re::FunctionBase<24ul,void ()(re::RenderFrameDataArrayWrapper *)>::destroyCallable(a1);
    uint64_t v4 = *(void *)(a2 + 32);
    if (v4)
    {
      uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 40))(v4);
      unint64_t v6 = a1;
      if (v5 >= 0x19)
      {
        uint64_t v7 = v5;
        unint64_t v8 = *(void *)(a1 + 24);
        if (v8) {
          unint64_t v6 = (*(uint64_t (**)(uint64_t, unint64_t, void))(*(void *)v8 + 32))(v8, v7, 0);
        }
        else {
          unint64_t v6 = 0;
        }
      }
      *(void *)(a1 + 32) = v6;
      (*(void (**)(void))(**(void **)(a2 + 32) + 24))(*(void *)(a2 + 32));
    }
  }
  return a1;
}

uint64_t (***re::FunctionBase<24ul,void ()(re::RenderFrameDataArrayWrapper *)>::destroyCallable(uint64_t a1))(void)
{
  uint64_t result = *(uint64_t (****)(void))(a1 + 32);
  if (result)
  {
    uint64_t result = (uint64_t (***)(void))(**result)(result);
    if (*(void *)(a1 + 32) != a1) {
      uint64_t result = (uint64_t (***)(void))(*(uint64_t (**)(void))(**(void **)(a1 + 24) + 40))(*(void *)(a1 + 24));
    }
    *(void *)(a1 + 32) = 0;
  }
  return result;
}

void re::HashTable<std::type_index,re::RenderFrameDataArrayWrapper,re::Hash<std::type_index>,re::EqualTo<std::type_index>,true,false>::setCapacity(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = *(void *)a1;
  if (*(void *)a1)
  {
    if (a2 && *(_DWORD *)(a1 + 24) != a2 && *(_DWORD *)(a1 + 28) <= a2)
    {
      memset(v13, 0, 36);
      *(void *)&v13[36] = 0x7FFFFFFFLL;
      re::HashTable<std::type_index,re::RenderFrameDataArrayWrapper,re::Hash<std::type_index>,re::EqualTo<std::type_index>,true,false>::init((uint64_t)v13, v4, a2);
      long long v5 = *(_OWORD *)v13;
      *(_OWORD *)int v13 = *(_OWORD *)a1;
      *(_OWORD *)a1 = v5;
      uint64_t v6 = *(void *)&v13[16];
      *(void *)&v13[16] = *(void *)(a1 + 16);
      *(void *)(a1 + 16) = v6;
      long long v8 = *(_OWORD *)&v13[24];
      *(_OWORD *)&v13[24] = *(_OWORD *)(a1 + 24);
      unsigned int v7 = *(_DWORD *)&v13[32];
      *(_OWORD *)(a1 + 24) = v8;
      unsigned int v9 = v7;
      if (v7)
      {
        uint64_t v10 = 0;
        unint64_t v11 = 0;
        do
        {
          if ((*(_DWORD *)(*(void *)&v13[16] + v10 + 8) & 0x80000000) != 0)
          {
            re::HashTable<std::type_index,re::RenderFrameDataArrayWrapper,re::Hash<std::type_index>,re::EqualTo<std::type_index>,true,false>::addAsMove(a1, *(void *)(*(void *)&v13[16] + v10) % (unint64_t)*(unsigned int *)(a1 + 24), *(void *)(*(void *)&v13[16] + v10), *(void *)&v13[16] + v10 + 16, *(void *)&v13[16] + v10 + 24);
            unsigned int v9 = *(_DWORD *)&v13[32];
          }
          ++v11;
          v10 += 96;
        }
        while (v11 < v9);
      }
      re::HashTable<std::type_index,re::RenderFrameDataArrayWrapper,re::Hash<std::type_index>,re::EqualTo<std::type_index>,true,false>::deinit((uint64_t *)v13);
    }
  }
  else
  {
    if (a2) {
      signed int v12 = a2;
    }
    else {
      signed int v12 = 3;
    }
  }
}

void re::HashTable<std::type_index,re::RenderFrameDataArrayWrapper,re::Hash<std::type_index>,re::EqualTo<std::type_index>,true,false>::init(uint64_t a1, uint64_t a2, signed int a3)
{
  unint64_t v4 = 245;
  long long v5 = (unsigned int *)&re::internal::PrimeHelper::s_primes;
  do
  {
    unint64_t v6 = v4 >> 1;
    unsigned int v7 = &v5[v4 >> 1];
    signed int v9 = *v7;
    long long v8 = v7 + 1;
    v4 += ~(v4 >> 1);
    if (v9 < a3) {
      long long v5 = v8;
    }
    else {
      unint64_t v4 = v6;
    }
  }
  while (v4);
  uint64_t v10 = *v5;
  *(void *)a1 = a2;
  uint64_t v11 = (4 * v10 + 15) & 0x7FFFFFFF0;
  signed int v12 = (char *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a2 + 32))(a2, v11 + 96 * v10, 16);
  if (v12)
  {
    unint64_t v14 = v12;
    *(void *)(a1 + 8) = v12;
    if (v10) {
      memset_pattern16(v12, &memset_pattern_127, 4 * v10);
    }
    *(void *)(a1 + 16) = &v14[v11];
    *(_DWORD *)(a1 + 24) = v10;
    *(_DWORD *)(a1 + 40) = 0;
  }
  else
  {
    re::internal::assertLog((re::internal *)4, v13, "assertion failure: '%s' (%s:line %i) Out of memory.", "temp", "init", 575);
    _os_crash();
    __break(1u);
  }
}

double re::HashTable<std::type_index,re::RenderFrameDataArrayWrapper,re::Hash<std::type_index>,re::EqualTo<std::type_index>,true,false>::deinit(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2)
  {
    if (*((_DWORD *)a1 + 8))
    {
      uint64_t v3 = 0;
      unint64_t v4 = 0;
      do
      {
        re::HashTable<std::type_index,re::RenderFrameDataArrayWrapper,re::Hash<std::type_index>,re::EqualTo<std::type_index>,true,false>::EntryWithHash::free((uint64_t (***)(void))(a1[2] + v3));
        ++v4;
        v3 += 96;
      }
      while (v4 < *((unsigned int *)a1 + 8));
      uint64_t v2 = *a1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)v2 + 40))(v2, a1[1]);
    *((_DWORD *)a1 + 8) = 0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
    *(void *)&double result = 0x7FFFFFFFLL;
    *(uint64_t *)((char *)a1 + 36) = 0x7FFFFFFFLL;
  }
  return result;
}

uint64_t (***re::HashTable<std::type_index,re::RenderFrameDataArrayWrapper,re::Hash<std::type_index>,re::EqualTo<std::type_index>,true,false>::EntryWithHash::free(uint64_t (***result)(void)))(void)
{
  int v1 = *((_DWORD *)result + 2);
  if (v1 < 0)
  {
    *((_DWORD *)result + 2) = v1 & 0x7FFFFFFF;
    uint64_t v2 = (uint64_t (**)(void, void, void, void, void))(result + 3);
    uint64_t v3 = (uint64_t)(result + 7);
    unint64_t v4 = result[11];
    if (v4)
    {
      long long v5 = v2;
      (*((void (**)(uint64_t (**)(void), uint64_t (***)(void, void, void, void, void)))*v4
       + 2))(v4, &v5);
    }
    double result = re::FunctionBase<24ul,void ()(re::RenderFrameDataArrayWrapper *)>::destroyCallable(v3);
    if (*v2) {
      return (uint64_t (***)(void))(*v2)(0, v2, 0, 0, 0);
    }
  }
  return result;
}

re *re::RenderFrameDataArrayWrapper::RenderFrameDataArrayWrapper(re *a1, re *a2)
{
  v12[5] = *MEMORY[0x263EF8340];
  *(void *)a1 = 0;
  *((void *)a1 + 1) = 0;
  uint64_t v4 = (uint64_t)a1 + 32;
  uint64_t v5 = re::globalAllocators(a1)[2];
  *((void *)a1 + re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = v5;
  *((void *)a1 + 8) = 0;
  v12[3] = v5;
  v12[4] = 0;
  re::FunctionBase<24ul,void ()(re::RenderFrameDataArrayWrapper *)>::operator=<24ul>((uint64_t)v12, v4);
  re::FunctionBase<24ul,void ()(re::RenderFrameDataArrayWrapper *)>::operator=<24ul>(v4, (uint64_t)a2 + 32);
  re::FunctionBase<24ul,void ()(re::RenderFrameDataArrayWrapper *)>::operator=<24ul>((uint64_t)a2 + 32, (uint64_t)v12);
  re::FunctionBase<24ul,void ()(re::RenderFrameDataArrayWrapper *)>::destroyCallable((uint64_t)v12);
  if (a1 != a2)
  {
    unint64_t v6 = *(void (**)(uint64_t, re *, re *, void, void))a1;
    unsigned int v7 = *(void (**)(uint64_t, re *, re *, void, void))a2;
    if (*(void *)a1 && v7)
    {
      v12[0] = 0;
      v12[1] = 0;
      v7(2, a2, (re *)v12, 0, 0);
      (*(void (**)(uint64_t, re *, re *, void, void))a1)(2, a1, a2, 0, 0);
      ((void (*)(uint64_t, void *, re *, void, void))v12[0])(2, v12, a1, 0, 0);
      unsigned int v7 = (void (*)(uint64_t, re *, re *, void, void))v12[0];
      if (v12[0])
      {
        long long v8 = (re *)v12;
        uint64_t v9 = 0;
        uint64_t v10 = 0;
LABEL_10:
        v7(v9, v8, v10, 0, 0);
      }
    }
    else if (v6)
    {
      v6(2, a1, a2, 0, 0);
    }
    else if (v7)
    {
      uint64_t v9 = 2;
      long long v8 = a2;
      uint64_t v10 = a1;
      goto LABEL_10;
    }
  }
  return a1;
}

void *std::__any_imp::_SmallHandler<re::BucketArray<re::VisualProxyHighFidelityHandlerData,4ul> *>::__handle[abi:nn180100](unsigned int a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v5 = a1;
  switch(v5)
  {
    case 1:
      double result = 0;
      uint64_t v8 = a2[1];
      *a3 = std::__any_imp::_SmallHandler<re::BucketArray<re::VisualProxyHighFidelityHandlerData,4ul> *>::__handle[abi:nn180100];
      a3[1] = v8;
      break;
    case 2:
      double result = 0;
      uint64_t v9 = a2[1];
      *a3 = std::__any_imp::_SmallHandler<re::BucketArray<re::VisualProxyHighFidelityHandlerData,4ul> *>::__handle[abi:nn180100];
      a3[1] = v9;
      goto LABEL_5;
    case 3:
      if (a4) {
      else
      }
        BOOL v10 = a5 == &std::__any_imp::__unique_typeinfo<re::BucketArray<re::VisualProxyHighFidelityHandlerData,4ul> *>::__id;
      if (v10) {
        double result = a2 + 1;
      }
      else {
        double result = 0;
      }
      break;
    case 4:
      return result;
    default:
      double result = 0;
LABEL_5:
      *a2 = 0;
      break;
  }
  return result;
}

void re::internal::Callable<re::RenderFrameDataArrayWrapper & re::RenderFrameDataStream::getOrAddDataArrayWrapper<re::VisualProxyHighFidelityHandlerData>(void)::{lambda(re::RenderFrameDataArrayWrapper*)#1},void ()(re::RenderFrameDataArrayWrapper*)>::~Callable()
{
}

uint64_t *re::internal::Callable<re::RenderFrameDataArrayWrapper & re::RenderFrameDataStream::getOrAddDataArrayWrapper<re::VisualProxyHighFidelityHandlerData>(void)::{lambda(re::RenderFrameDataArrayWrapper*)#1},void ()(re::RenderFrameDataArrayWrapper*)>::operator()(uint64_t a1, uint64_t (***a2)(uint64_t))
{
  uint64_t v2 = *(void *)(a1 + 8);
  double result = (uint64_t *)(**a2)(3);
  uint64_t v4 = *result;
  if (*result)
  {
    uint64_t v5 = *(void *)(v4 + 40);
    if (v5)
    {
      for (unint64_t i = 0; i != v5; ++i)
      {
        uint64_t v7 = re::BucketArray<re::DeformationBufferAllocator::VertexBufferAllocation,4ul>::operator[](v4, i);
        re::DynamicArray<re::VisualProxyHighFidelityTextureCopyRequest>::deinit(v7);
      }
    }
    while (*(void *)(v4 + 8))
      re::BucketArray<re::CollisionCastHit,10ul>::freeElementBucket((uint64_t *)v4);
    re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(v4);
    *(void *)(v4 + 40) = 0;
    ++*(_DWORD *)(v4 + 48);
    re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(v4);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v2 + 40);
    return (uint64_t *)v8(v2, v4);
  }
  return result;
}

void *re::internal::Callable<re::RenderFrameDataArrayWrapper & re::RenderFrameDataStream::getOrAddDataArrayWrapper<re::VisualProxyHighFidelityHandlerData>(void)::{lambda(re::RenderFrameDataArrayWrapper*)#1},void ()(re::RenderFrameDataArrayWrapper*)>::cloneInto(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *a2 = &unk_26E6F74E8;
  a2[1] = v2;
  return a2;
}

void *re::internal::Callable<re::RenderFrameDataArrayWrapper & re::RenderFrameDataStream::getOrAddDataArrayWrapper<re::VisualProxyHighFidelityHandlerData>(void)::{lambda(re::RenderFrameDataArrayWrapper*)#1},void ()(re::RenderFrameDataArrayWrapper*)>::moveInto(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *a2 = &unk_26E6F74E8;
  a2[1] = v2;
  return a2;
}

uint64_t re::internal::Callable<re::RenderFrameDataArrayWrapper & re::RenderFrameDataStream::getOrAddDataArrayWrapper<re::VisualProxyHighFidelityHandlerData>(void)::{lambda(re::RenderFrameDataArrayWrapper*)#1},void ()(re::RenderFrameDataArrayWrapper*)>::size()
{
  return 16;
}

uint64_t re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>,4ul>::init(uint64_t a1, uint64_t a2, unint64_t a3)
{
  *(void *)a1 = a2;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)a1, a3);
  *(_DWORD *)(a1 + 16) += 2;
  *(void *)(a1 + 40) = 0;
  uint64_t result = re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>,4ul>::setBucketsCapacity(a1, a3);
  ++*(_DWORD *)(a1 + 48);
  return result;
}

uint64_t *re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>,4ul>::setBucketsCapacity(uint64_t *result, unint64_t a2)
{
  uint64_t v3 = result;
  if (*result)
  {
    if (result[5] < 4 * a2)
    {
      while (1)
      {
        unint64_t v4 = v3[1];
        if (v4 <= a2) {
          break;
        }
        uint64_t result = (uint64_t *)re::BucketArray<re::CollisionCastHit,10ul>::freeElementBucket(v3);
      }
      while (v4 < a2)
      {
        uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)*v3 + 32))(*v3, 448, 0);
        uint64_t result = (uint64_t *)re::DynamicOverflowArray<RESubscriptionHandle *,2ul>::add((uint64_t)v3, &v5);
        unint64_t v4 = v3[1];
      }
    }
  }
  else
  {
  }
  return result;
}

uint64_t re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::update(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*a1 + 224);
  unint64_t v7 = a1[3];
  unint64_t v8 = re::BucketArray<re::Matrix4x4<float>,8ul>::operator[](a1[2] + 8, v7);
  if (*(_DWORD *)(v8 + 40)) {
    uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t, void *, unint64_t, unint64_t, uint64_t))(*(void *)v6 + 24))(v6, a2, a1, v7, v8, a3);
  }
  else {
    uint64_t v9 = 0;
  }
  unint64_t v10 = a1[5];
  unint64_t v11 = re::BucketArray<re::Matrix4x4<float>,8ul>::operator[](a1[2] + 8, v10);
  if (*(_DWORD *)(v11 + 40)) {
    uint64_t v9 = v9 | (*(unsigned int (**)(uint64_t, uint64_t, void *, unint64_t, unint64_t, uint64_t))(*(void *)v6 + 32))(v6, a2, a1, v10, v11, a3);
  }
  unint64_t v12 = a1[6];
  unint64_t v13 = re::BucketArray<re::Matrix4x4<float>,8ul>::operator[](a1[2] + 8, v12);
  if (*(_DWORD *)(v13 + 40)) {
    return v9 | (*(unsigned int (**)(uint64_t, uint64_t, void *, unint64_t, unint64_t, uint64_t))(*(void *)v6 + 40))(v6, a2, a1, v12, v13, a3);
  }
  return v9;
}

uint64_t *re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::init(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v84 = *MEMORY[0x263EF8340];
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = re::ecs2::SceneComponentTable::get((re::ecs2::SceneComponentTable *)(a3 + 200), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)+ 480;
  for (uint64_t i = 24; i != 56; i += 8)
  {
    unint64_t v7 = (_anonymous_namespace_ *)re::ecs2::ComponentBucketsBase::addBucket(*(re::ecs2::ComponentBucketsBase **)(a1 + 16));
    *(void *)(a1 + i) = v7;
  }
  uint64_t v9 = *(re::EventBus **)(a3 + 288);
  if (v9)
  {
    uint64_t v82 = re::globalAllocators((re *)result)[2];
    unint64_t v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v82 + 32))(v82, 32, 0);
    *unint64_t v10 = &unk_26E6F7550;
    v10[1] = a1;
    v10[2] = re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::componentChangedHandler<REComponentDidChangeEvent>;
    v10[3] = 0;
    float v83 = v10;
    uint64_t v11 = re::EventBus::subscribe<re::ecs2::Entity,REComponentDidChangeEvent>(v9, (uint64_t)v81, (uint64_t)re::ecs2::ComponentImpl<re::ecs2::VisualProxyCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType, 0);
    uint64_t v13 = v12;
    unint64_t v14 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(a1 + 56);
    *unint64_t v14 = v11;
    v14[1] = v13;
    uint64_t v15 = (re *)re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidChangeEvent const&)>::destroyCallable((uint64_t)v81);
    uint64_t v79 = re::globalAllocators(v15)[2];
    unint64_t v16 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v79 + 32))(v79, 32, 0);
    *unint64_t v16 = &unk_26E6F75A8;
    v16[1] = a1;
    v16[2] = re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::componentChangedHandler<REComponentDidActivateEvent>;
    v16[3] = 0;
    float32x4_t v80 = v16;
    uint64_t v17 = re::EventBus::subscribe<re::ecs2::Entity,REComponentDidActivateEvent>(v9, (uint64_t)v78, (uint64_t)re::ecs2::ComponentImpl<re::ecs2::VisualProxyCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType, 0);
    uint64_t v19 = v18;
    uint64_t v20 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(a1 + 56);
    *uint64_t v20 = v17;
    v20[1] = v19;
    uint64_t v21 = (re *)re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidActivateEvent const&)>::destroyCallable((uint64_t)v78);
    uint64_t v76 = re::globalAllocators(v21)[2];
    uint64_t v22 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v76 + 32))(v76, 32, 0);
    *uint64_t v22 = &unk_26E6F7600;
    v22[1] = a1;
    v22[2] = re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::componentChangedHandler<REComponentWillDeactivateEvent>;
    v22[3] = 0;
    id v77 = v22;
    uint64_t v23 = re::EventBus::subscribe<re::ecs2::Entity,REComponentWillDeactivateEvent>(v9, (uint64_t)v75, (uint64_t)re::ecs2::ComponentImpl<re::ecs2::VisualProxyCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType, 0);
    uint64_t v25 = v24;
    uint64_t v26 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(a1 + 56);
    *uint64_t v26 = v23;
    v26[1] = v25;
    uint64_t v27 = (re *)re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentWillDeactivateEvent const&)>::destroyCallable((uint64_t)v75);
    uint64_t v73 = re::globalAllocators(v27)[2];
    uint64_t v28 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v73 + 32))(v73, 32, 0);
    *uint64_t v28 = &unk_26E6F7658;
    v28[1] = a1;
    v28[2] = re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::componentChangedHandler<REComponentDidAddEvent>;
    v28[3] = 0;
    float v74 = v28;
    uint64_t v29 = re::EventBus::subscribe<re::ecs2::Entity,REComponentDidAddEvent>(v9, (uint64_t)v72, (uint64_t)re::ecs2::ComponentImpl<re::ecs2::VisualProxyCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType, 0);
    uint64_t v31 = v30;
    long long v32 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(a1 + 56);
    *long long v32 = v29;
    v32[1] = v31;
    re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidAddEvent const&)>::destroyCallable((uint64_t)v72);
    uint64_t result = (uint64_t *)(***(uint64_t (****)(void))(a2 + 224))();
    if (v33)
    {
      long long v34 = result;
      uint64_t v35 = 8 * v33;
      do
      {
        uint64_t v36 = *v34++;
        uint64_t v70 = re::globalAllocators((re *)result)[2];
        uint64_t v71 = 0;
        long long v37 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v70 + 32))(v70, 32, 0);
        void *v37 = &unk_26E6F7550;
        v37[1] = a1;
        v37[2] = re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::dependentComponentChangedHandler<REComponentDidChangeEvent>;
        v37[3] = 0;
        uint64_t v71 = v37;
        uint64_t v38 = re::EventBus::subscribe<re::ecs2::Entity,REComponentDidChangeEvent>(v9, (uint64_t)v69, v36, 0);
        uint64_t v40 = v39;
        uint64_t v41 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(a1 + 56);
        *uint64_t v41 = v38;
        v41[1] = v40;
        unint64_t v42 = (re *)re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidChangeEvent const&)>::destroyCallable((uint64_t)v69);
        uint64_t v67 = re::globalAllocators(v42)[2];
        int8x16_t v68 = 0;
        long long v43 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v67 + 32))(v67, 32, 0);
        void *v43 = &unk_26E6F75A8;
        v43[1] = a1;
        v43[2] = re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::dependentComponentChangedHandler<REComponentDidActivateEvent>;
        v43[3] = 0;
        int8x16_t v68 = v43;
        uint64_t v44 = re::EventBus::subscribe<re::ecs2::Entity,REComponentDidActivateEvent>(v9, (uint64_t)v66, v36, 0);
        uint64_t v46 = v45;
        uint64_t v47 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(a1 + 56);
        void *v47 = v44;
        v47[1] = v46;
        uint64_t v48 = (re *)re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidActivateEvent const&)>::destroyCallable((uint64_t)v66);
        uint64_t v64 = re::globalAllocators(v48)[2];
        float32x4_t v65 = 0;
        long long v49 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v64 + 32))(v64, 32, 0);
        *long long v49 = &unk_26E6F7600;
        v49[1] = a1;
        v49[2] = re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::dependentComponentChangedHandler<REComponentWillDeactivateEvent>;
        v49[3] = 0;
        float32x4_t v65 = v49;
        uint64_t v50 = re::EventBus::subscribe<re::ecs2::Entity,REComponentWillDeactivateEvent>(v9, (uint64_t)v63, v36, 0);
        uint64_t v52 = v51;
        float64x2_t v53 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(a1 + 56);
        *float64x2_t v53 = v50;
        v53[1] = v52;
        uint64_t v54 = (re *)re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentWillDeactivateEvent const&)>::destroyCallable((uint64_t)v63);
        uint64_t v61 = re::globalAllocators(v54)[2];
        float v62 = 0;
        uint64_t v55 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v61 + 32))(v61, 32, 0);
        *uint64_t v55 = &unk_26E6F7658;
        v55[1] = a1;
        v55[2] = re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::dependentComponentChangedHandler<REComponentDidAddEvent>;
        v55[3] = 0;
        float v62 = v55;
        uint64_t v56 = re::EventBus::subscribe<re::ecs2::Entity,REComponentDidAddEvent>(v9, (uint64_t)v60, v36, 0);
        uint64_t v58 = v57;
        id v59 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(a1 + 56);
        void *v59 = v56;
        v59[1] = v58;
        uint64_t result = (uint64_t *)re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidAddEvent const&)>::destroyCallable((uint64_t)v60);
        v35 -= 8;
      }
      while (v35);
    }
  }
  return result;
}

uint64_t re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::componentChangedHandler<REComponentDidChangeEvent>(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(re::ecs2::ComponentBucketsBase **)a1;
  uint64_t v24 = *(void *)(a1 + 8);
  uint64_t v5 = re::HashBrown<re::WeakStringID,re::IndexAndProtectionOptions,re::Hash<re::WeakStringID>,re::EqualTo<re::WeakStringID>,re::Hash<re::IndexAndProtectionOptions>,false>::find((void *)v4 + 7, &v24);
  if (v5 == -1) {
    goto LABEL_20;
  }
  re::DynamicBitset<unsigned long long,256ul>::setBit((uint64_t)v4 + 168, *(void *)(*((void *)v4 + 8) + 16 * v5 + 8));
  if (!*((unsigned char *)v4 + 232)) {
    goto LABEL_20;
  }
  unint64_t v6 = *((void *)v4 + 22);
  int v7 = *((_DWORD *)v4 + 46);
  if (v6 >= 0xB)
  {
    if (v7) {
      unint64_t v8 = (void *)((char *)v4 + 192);
    }
    else {
      unint64_t v8 = (void *)*((void *)v4 + 25);
    }
    uint64_t v10 = 8 * v6;
    while (!*v8)
    {
      ++v8;
      v10 -= 8;
      if (!v10) {
        goto LABEL_20;
      }
    }
LABEL_18:
    unint64_t v14 = (re::ecs2::System *)*((void *)v4 + 27);
    if (!*((unsigned char *)v14 + 86)) {
      re::ecs2::System::queueToRun(v14, 0.0);
    }
    goto LABEL_20;
  }
  if (v7)
  {
    uint64_t v9 = (uint64_t *)((char *)v4 + 192);
    if (!v6) {
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v9 = (uint64_t *)*((void *)v4 + 25);
    if (!v6) {
      goto LABEL_20;
    }
  }
  uint64_t v11 = 0;
  uint64_t v12 = 8 * v6;
  do
  {
    uint64_t v13 = *v9++;
    v11 |= v13;
    v12 -= 8;
  }
  while (v12);
  if (v11) {
    goto LABEL_18;
  }
LABEL_20:
  uint64_t v15 = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(a2 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
  if (v15)
  {
    unint64_t v16 = (re::ecs2::Component *)v15;
    for (uint64_t i = 24; i != 56; i += 8)
    {
      unint64_t v18 = re::ecs2::ComponentBucketsBase::componentHandle(*(re::ecs2::ComponentBucketsBase **)(a1 + 16), *(void *)(a1 + i), v16);
      if (v18 != -1 && (v19 & 0xFFFFFF00000000) != 0)
      {
        re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::setComponentState((re::ecs2::ComponentBucketsBase **)a1, v18, v19, 0);
        return 0;
      }
    }
    unint64_t v21 = re::ecs2::ComponentBucketsBase::addComponent(*(re::ecs2::ComponentBucketsBase **)(a1 + 16), *(void *)(a1 + 24), v16);
    (*(void (**)(void, uint64_t, unint64_t, uint64_t))(**(void **)(*(void *)a1 + 224) + 16))(*(void *)(*(void *)a1 + 224), a1, v21, v22);
  }
  return 0;
}

uint64_t re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::componentChangedHandler<REComponentDidActivateEvent>(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(re::ecs2::ComponentBucketsBase **)a1;
  uint64_t v24 = *(void *)(a1 + 8);
  uint64_t v5 = re::HashBrown<re::WeakStringID,re::IndexAndProtectionOptions,re::Hash<re::WeakStringID>,re::EqualTo<re::WeakStringID>,re::Hash<re::IndexAndProtectionOptions>,false>::find((void *)v4 + 7, &v24);
  if (v5 == -1) {
    goto LABEL_20;
  }
  re::DynamicBitset<unsigned long long,256ul>::setBit((uint64_t)v4 + 168, *(void *)(*((void *)v4 + 8) + 16 * v5 + 8));
  if (!*((unsigned char *)v4 + 232)) {
    goto LABEL_20;
  }
  unint64_t v6 = *((void *)v4 + 22);
  int v7 = *((_DWORD *)v4 + 46);
  if (v6 >= 0xB)
  {
    if (v7) {
      unint64_t v8 = (void *)((char *)v4 + 192);
    }
    else {
      unint64_t v8 = (void *)*((void *)v4 + 25);
    }
    uint64_t v10 = 8 * v6;
    while (!*v8)
    {
      ++v8;
      v10 -= 8;
      if (!v10) {
        goto LABEL_20;
      }
    }
LABEL_18:
    unint64_t v14 = (re::ecs2::System *)*((void *)v4 + 27);
    if (!*((unsigned char *)v14 + 86)) {
      re::ecs2::System::queueToRun(v14, 0.0);
    }
    goto LABEL_20;
  }
  if (v7)
  {
    uint64_t v9 = (uint64_t *)((char *)v4 + 192);
    if (!v6) {
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v9 = (uint64_t *)*((void *)v4 + 25);
    if (!v6) {
      goto LABEL_20;
    }
  }
  uint64_t v11 = 0;
  uint64_t v12 = 8 * v6;
  do
  {
    uint64_t v13 = *v9++;
    v11 |= v13;
    v12 -= 8;
  }
  while (v12);
  if (v11) {
    goto LABEL_18;
  }
LABEL_20:
  uint64_t v15 = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(a2 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
  if (v15)
  {
    unint64_t v16 = (re::ecs2::Component *)v15;
    for (uint64_t i = 24; i != 56; i += 8)
    {
      unint64_t v18 = re::ecs2::ComponentBucketsBase::componentHandle(*(re::ecs2::ComponentBucketsBase **)(a1 + 16), *(void *)(a1 + i), v16);
      if (v18 != -1 && (v19 & 0xFFFFFF00000000) != 0)
      {
        re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::setComponentState((re::ecs2::ComponentBucketsBase **)a1, v18, v19, 0);
        return 0;
      }
    }
    unint64_t v21 = re::ecs2::ComponentBucketsBase::addComponent(*(re::ecs2::ComponentBucketsBase **)(a1 + 16), *(void *)(a1 + 24), v16);
    (*(void (**)(void, uint64_t, unint64_t, uint64_t))(**(void **)(*(void *)a1 + 224) + 16))(*(void *)(*(void *)a1 + 224), a1, v21, v22);
  }
  return 0;
}

uint64_t re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::componentChangedHandler<REComponentWillDeactivateEvent>(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(re::ecs2::ComponentBucketsBase **)a1;
  uint64_t v24 = *(void *)(a1 + 8);
  uint64_t v5 = re::HashBrown<re::WeakStringID,re::IndexAndProtectionOptions,re::Hash<re::WeakStringID>,re::EqualTo<re::WeakStringID>,re::Hash<re::IndexAndProtectionOptions>,false>::find((void *)v4 + 7, &v24);
  if (v5 == -1) {
    goto LABEL_20;
  }
  re::DynamicBitset<unsigned long long,256ul>::setBit((uint64_t)v4 + 168, *(void *)(*((void *)v4 + 8) + 16 * v5 + 8));
  if (!*((unsigned char *)v4 + 232)) {
    goto LABEL_20;
  }
  unint64_t v6 = *((void *)v4 + 22);
  int v7 = *((_DWORD *)v4 + 46);
  if (v6 >= 0xB)
  {
    if (v7) {
      unint64_t v8 = (void *)((char *)v4 + 192);
    }
    else {
      unint64_t v8 = (void *)*((void *)v4 + 25);
    }
    uint64_t v10 = 8 * v6;
    while (!*v8)
    {
      ++v8;
      v10 -= 8;
      if (!v10) {
        goto LABEL_20;
      }
    }
LABEL_18:
    unint64_t v14 = (re::ecs2::System *)*((void *)v4 + 27);
    if (!*((unsigned char *)v14 + 86)) {
      re::ecs2::System::queueToRun(v14, 0.0);
    }
    goto LABEL_20;
  }
  if (v7)
  {
    uint64_t v9 = (uint64_t *)((char *)v4 + 192);
    if (!v6) {
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v9 = (uint64_t *)*((void *)v4 + 25);
    if (!v6) {
      goto LABEL_20;
    }
  }
  uint64_t v11 = 0;
  uint64_t v12 = 8 * v6;
  do
  {
    uint64_t v13 = *v9++;
    v11 |= v13;
    v12 -= 8;
  }
  while (v12);
  if (v11) {
    goto LABEL_18;
  }
LABEL_20:
  uint64_t v15 = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(a2 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
  if (v15)
  {
    unint64_t v16 = (re::ecs2::Component *)v15;
    for (uint64_t i = 24; i != 56; i += 8)
    {
      unint64_t v18 = re::ecs2::ComponentBucketsBase::componentHandle(*(re::ecs2::ComponentBucketsBase **)(a1 + 16), *(void *)(a1 + i), v16);
      if (v18 != -1 && (v19 & 0xFFFFFF00000000) != 0)
      {
        re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::setComponentState((re::ecs2::ComponentBucketsBase **)a1, v18, v19, 0);
        return 0;
      }
    }
    unint64_t v21 = re::ecs2::ComponentBucketsBase::addComponent(*(re::ecs2::ComponentBucketsBase **)(a1 + 16), *(void *)(a1 + 24), v16);
    (*(void (**)(void, uint64_t, unint64_t, uint64_t))(**(void **)(*(void *)a1 + 224) + 16))(*(void *)(*(void *)a1 + 224), a1, v21, v22);
  }
  return 0;
}

uint64_t re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::componentChangedHandler<REComponentDidAddEvent>(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(re::ecs2::ComponentBucketsBase **)a1;
  uint64_t v24 = *(void *)(a1 + 8);
  uint64_t v5 = re::HashBrown<re::WeakStringID,re::IndexAndProtectionOptions,re::Hash<re::WeakStringID>,re::EqualTo<re::WeakStringID>,re::Hash<re::IndexAndProtectionOptions>,false>::find((void *)v4 + 7, &v24);
  if (v5 == -1) {
    goto LABEL_20;
  }
  re::DynamicBitset<unsigned long long,256ul>::setBit((uint64_t)v4 + 168, *(void *)(*((void *)v4 + 8) + 16 * v5 + 8));
  if (!*((unsigned char *)v4 + 232)) {
    goto LABEL_20;
  }
  unint64_t v6 = *((void *)v4 + 22);
  int v7 = *((_DWORD *)v4 + 46);
  if (v6 >= 0xB)
  {
    if (v7) {
      unint64_t v8 = (void *)((char *)v4 + 192);
    }
    else {
      unint64_t v8 = (void *)*((void *)v4 + 25);
    }
    uint64_t v10 = 8 * v6;
    while (!*v8)
    {
      ++v8;
      v10 -= 8;
      if (!v10) {
        goto LABEL_20;
      }
    }
LABEL_18:
    unint64_t v14 = (re::ecs2::System *)*((void *)v4 + 27);
    if (!*((unsigned char *)v14 + 86)) {
      re::ecs2::System::queueToRun(v14, 0.0);
    }
    goto LABEL_20;
  }
  if (v7)
  {
    uint64_t v9 = (uint64_t *)((char *)v4 + 192);
    if (!v6) {
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v9 = (uint64_t *)*((void *)v4 + 25);
    if (!v6) {
      goto LABEL_20;
    }
  }
  uint64_t v11 = 0;
  uint64_t v12 = 8 * v6;
  do
  {
    uint64_t v13 = *v9++;
    v11 |= v13;
    v12 -= 8;
  }
  while (v12);
  if (v11) {
    goto LABEL_18;
  }
LABEL_20:
  uint64_t v15 = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(a2 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
  if (v15)
  {
    unint64_t v16 = (re::ecs2::Component *)v15;
    for (uint64_t i = 24; i != 56; i += 8)
    {
      unint64_t v18 = re::ecs2::ComponentBucketsBase::componentHandle(*(re::ecs2::ComponentBucketsBase **)(a1 + 16), *(void *)(a1 + i), v16);
      if (v18 != -1 && (v19 & 0xFFFFFF00000000) != 0)
      {
        re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::setComponentState((re::ecs2::ComponentBucketsBase **)a1, v18, v19, 0);
        return 0;
      }
    }
    unint64_t v21 = re::ecs2::ComponentBucketsBase::addComponent(*(re::ecs2::ComponentBucketsBase **)(a1 + 16), *(void *)(a1 + 24), v16);
    (*(void (**)(void, uint64_t, unint64_t, uint64_t))(**(void **)(*(void *)a1 + 224) + 16))(*(void *)(*(void *)a1 + 224), a1, v21, v22);
  }
  return 0;
}

uint64_t re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::dependentComponentChangedHandler<REComponentDidChangeEvent>(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  uint64_t v18 = a1[1];
  uint64_t v7 = re::HashBrown<re::WeakStringID,re::IndexAndProtectionOptions,re::Hash<re::WeakStringID>,re::EqualTo<re::WeakStringID>,re::Hash<re::IndexAndProtectionOptions>,false>::find((void *)(v6 + 56), &v18);
  if (v7 == -1) {
    goto LABEL_20;
  }
  re::DynamicBitset<unsigned long long,256ul>::setBit(v6 + 168, *(void *)(*(void *)(v6 + 64) + 16 * v7 + 8));
  if (!*(unsigned char *)(v6 + 232)) {
    goto LABEL_20;
  }
  unint64_t v8 = *(void *)(v6 + 176);
  int v9 = *(_DWORD *)(v6 + 184);
  if (v8 >= 0xB)
  {
    if (v9) {
      uint64_t v10 = (void *)(v6 + 192);
    }
    else {
      uint64_t v10 = *(void **)(v6 + 200);
    }
    uint64_t v12 = 8 * v8;
    while (!*v10)
    {
      ++v10;
      v12 -= 8;
      if (!v12) {
        goto LABEL_20;
      }
    }
LABEL_18:
    unint64_t v16 = *(re::ecs2::System **)(v6 + 216);
    if (!*((unsigned char *)v16 + 86)) {
      re::ecs2::System::queueToRun(v16, 0.0);
    }
    goto LABEL_20;
  }
  if (v9)
  {
    uint64_t v11 = (uint64_t *)(v6 + 192);
    if (!v8) {
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v11 = *(uint64_t **)(v6 + 200);
    if (!v8) {
      goto LABEL_20;
    }
  }
  uint64_t v13 = 0;
  uint64_t v14 = 8 * v8;
  do
  {
    uint64_t v15 = *v11++;
    v13 |= v15;
    v14 -= 8;
  }
  while (v14);
  if (v13) {
    goto LABEL_18;
  }
LABEL_20:
  (*(void (**)(void, void *, uint64_t, void))(**(void **)(*a1 + 224) + 8))(*(void *)(*a1 + 224), a1, a2, *(void *)(a3 + 8));
  return 0;
}

uint64_t re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::dependentComponentChangedHandler<REComponentDidActivateEvent>(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  uint64_t v18 = a1[1];
  uint64_t v7 = re::HashBrown<re::WeakStringID,re::IndexAndProtectionOptions,re::Hash<re::WeakStringID>,re::EqualTo<re::WeakStringID>,re::Hash<re::IndexAndProtectionOptions>,false>::find((void *)(v6 + 56), &v18);
  if (v7 == -1) {
    goto LABEL_20;
  }
  re::DynamicBitset<unsigned long long,256ul>::setBit(v6 + 168, *(void *)(*(void *)(v6 + 64) + 16 * v7 + 8));
  if (!*(unsigned char *)(v6 + 232)) {
    goto LABEL_20;
  }
  unint64_t v8 = *(void *)(v6 + 176);
  int v9 = *(_DWORD *)(v6 + 184);
  if (v8 >= 0xB)
  {
    if (v9) {
      uint64_t v10 = (void *)(v6 + 192);
    }
    else {
      uint64_t v10 = *(void **)(v6 + 200);
    }
    uint64_t v12 = 8 * v8;
    while (!*v10)
    {
      ++v10;
      v12 -= 8;
      if (!v12) {
        goto LABEL_20;
      }
    }
LABEL_18:
    unint64_t v16 = *(re::ecs2::System **)(v6 + 216);
    if (!*((unsigned char *)v16 + 86)) {
      re::ecs2::System::queueToRun(v16, 0.0);
    }
    goto LABEL_20;
  }
  if (v9)
  {
    uint64_t v11 = (uint64_t *)(v6 + 192);
    if (!v8) {
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v11 = *(uint64_t **)(v6 + 200);
    if (!v8) {
      goto LABEL_20;
    }
  }
  uint64_t v13 = 0;
  uint64_t v14 = 8 * v8;
  do
  {
    uint64_t v15 = *v11++;
    v13 |= v15;
    v14 -= 8;
  }
  while (v14);
  if (v13) {
    goto LABEL_18;
  }
LABEL_20:
  (*(void (**)(void, void *, uint64_t, void))(**(void **)(*a1 + 224) + 8))(*(void *)(*a1 + 224), a1, a2, *(void *)(a3 + 8));
  return 0;
}

uint64_t re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::dependentComponentChangedHandler<REComponentWillDeactivateEvent>(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  uint64_t v18 = a1[1];
  uint64_t v7 = re::HashBrown<re::WeakStringID,re::IndexAndProtectionOptions,re::Hash<re::WeakStringID>,re::EqualTo<re::WeakStringID>,re::Hash<re::IndexAndProtectionOptions>,false>::find((void *)(v6 + 56), &v18);
  if (v7 == -1) {
    goto LABEL_20;
  }
  re::DynamicBitset<unsigned long long,256ul>::setBit(v6 + 168, *(void *)(*(void *)(v6 + 64) + 16 * v7 + 8));
  if (!*(unsigned char *)(v6 + 232)) {
    goto LABEL_20;
  }
  unint64_t v8 = *(void *)(v6 + 176);
  int v9 = *(_DWORD *)(v6 + 184);
  if (v8 >= 0xB)
  {
    if (v9) {
      uint64_t v10 = (void *)(v6 + 192);
    }
    else {
      uint64_t v10 = *(void **)(v6 + 200);
    }
    uint64_t v12 = 8 * v8;
    while (!*v10)
    {
      ++v10;
      v12 -= 8;
      if (!v12) {
        goto LABEL_20;
      }
    }
LABEL_18:
    unint64_t v16 = *(re::ecs2::System **)(v6 + 216);
    if (!*((unsigned char *)v16 + 86)) {
      re::ecs2::System::queueToRun(v16, 0.0);
    }
    goto LABEL_20;
  }
  if (v9)
  {
    uint64_t v11 = (uint64_t *)(v6 + 192);
    if (!v8) {
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v11 = *(uint64_t **)(v6 + 200);
    if (!v8) {
      goto LABEL_20;
    }
  }
  uint64_t v13 = 0;
  uint64_t v14 = 8 * v8;
  do
  {
    uint64_t v15 = *v11++;
    v13 |= v15;
    v14 -= 8;
  }
  while (v14);
  if (v13) {
    goto LABEL_18;
  }
LABEL_20:
  (*(void (**)(void, void *, uint64_t, void))(**(void **)(*a1 + 224) + 8))(*(void *)(*a1 + 224), a1, a2, *(void *)(a3 + 8));
  return 0;
}

uint64_t re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::dependentComponentChangedHandler<REComponentDidAddEvent>(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  uint64_t v18 = a1[1];
  uint64_t v7 = re::HashBrown<re::WeakStringID,re::IndexAndProtectionOptions,re::Hash<re::WeakStringID>,re::EqualTo<re::WeakStringID>,re::Hash<re::IndexAndProtectionOptions>,false>::find((void *)(v6 + 56), &v18);
  if (v7 == -1) {
    goto LABEL_20;
  }
  re::DynamicBitset<unsigned long long,256ul>::setBit(v6 + 168, *(void *)(*(void *)(v6 + 64) + 16 * v7 + 8));
  if (!*(unsigned char *)(v6 + 232)) {
    goto LABEL_20;
  }
  unint64_t v8 = *(void *)(v6 + 176);
  int v9 = *(_DWORD *)(v6 + 184);
  if (v8 >= 0xB)
  {
    if (v9) {
      uint64_t v10 = (void *)(v6 + 192);
    }
    else {
      uint64_t v10 = *(void **)(v6 + 200);
    }
    uint64_t v12 = 8 * v8;
    while (!*v10)
    {
      ++v10;
      v12 -= 8;
      if (!v12) {
        goto LABEL_20;
      }
    }
LABEL_18:
    unint64_t v16 = *(re::ecs2::System **)(v6 + 216);
    if (!*((unsigned char *)v16 + 86)) {
      re::ecs2::System::queueToRun(v16, 0.0);
    }
    goto LABEL_20;
  }
  if (v9)
  {
    uint64_t v11 = (uint64_t *)(v6 + 192);
    if (!v8) {
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v11 = *(uint64_t **)(v6 + 200);
    if (!v8) {
      goto LABEL_20;
    }
  }
  uint64_t v13 = 0;
  uint64_t v14 = 8 * v8;
  do
  {
    uint64_t v15 = *v11++;
    v13 |= v15;
    v14 -= 8;
  }
  while (v14);
  if (v13) {
    goto LABEL_18;
  }
LABEL_20:
  (*(void (**)(void, void *, uint64_t, void))(**(void **)(*a1 + 224) + 8))(*(void *)(*a1 + 224), a1, a2, *(void *)(a3 + 8));
  return 0;
}

void re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::*)(re::ecs2::Entity *,REComponentDidChangeEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidChangeEvent const&)>::~CallableMemFn()
{
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::*)(re::ecs2::Entity *,REComponentDidChangeEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidChangeEvent const&)>::operator()(void *a1, void *a2)
{
  uint64_t v2 = (uint64_t (*)(void *, void))a1[2];
  uint64_t v3 = a1[3];
  unint64_t v4 = (void *)(a1[1] + (v3 >> 1));
  if (v3) {
    uint64_t v2 = *(uint64_t (**)(void *, void))(*v4 + v2);
  }
  return v2(v4, *a2);
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::*)(re::ecs2::Entity *,REComponentDidChangeEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidChangeEvent const&)>::cloneInto(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26E6F7550;
  long long v2 = *(_OWORD *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(_OWORD *)(a2 + 8) = v2;
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::*)(re::ecs2::Entity *,REComponentDidChangeEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidChangeEvent const&)>::moveInto(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)a2 = &unk_26E6F7550;
  *(void *)(a2 + 8) = v2;
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::*)(re::ecs2::Entity *,REComponentDidChangeEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidChangeEvent const&)>::size()
{
  return 32;
}

void re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::*)(re::ecs2::Entity *,REComponentDidActivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidActivateEvent const&)>::~CallableMemFn()
{
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::*)(re::ecs2::Entity *,REComponentDidActivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidActivateEvent const&)>::operator()(void *a1, void *a2)
{
  uint64_t v2 = (uint64_t (*)(void *, void))a1[2];
  uint64_t v3 = a1[3];
  unint64_t v4 = (void *)(a1[1] + (v3 >> 1));
  if (v3) {
    uint64_t v2 = *(uint64_t (**)(void *, void))(*v4 + v2);
  }
  return v2(v4, *a2);
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::*)(re::ecs2::Entity *,REComponentDidActivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidActivateEvent const&)>::cloneInto(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26E6F75A8;
  long long v2 = *(_OWORD *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(_OWORD *)(a2 + 8) = v2;
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::*)(re::ecs2::Entity *,REComponentDidActivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidActivateEvent const&)>::moveInto(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)a2 = &unk_26E6F75A8;
  *(void *)(a2 + 8) = v2;
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::*)(re::ecs2::Entity *,REComponentDidActivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidActivateEvent const&)>::size()
{
  return 32;
}

void re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::*)(re::ecs2::Entity *,REComponentWillDeactivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentWillDeactivateEvent const&)>::~CallableMemFn()
{
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::*)(re::ecs2::Entity *,REComponentWillDeactivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentWillDeactivateEvent const&)>::operator()(void *a1, void *a2)
{
  uint64_t v2 = (uint64_t (*)(void *, void))a1[2];
  uint64_t v3 = a1[3];
  unint64_t v4 = (void *)(a1[1] + (v3 >> 1));
  if (v3) {
    uint64_t v2 = *(uint64_t (**)(void *, void))(*v4 + v2);
  }
  return v2(v4, *a2);
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::*)(re::ecs2::Entity *,REComponentWillDeactivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentWillDeactivateEvent const&)>::cloneInto(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26E6F7600;
  long long v2 = *(_OWORD *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(_OWORD *)(a2 + 8) = v2;
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::*)(re::ecs2::Entity *,REComponentWillDeactivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentWillDeactivateEvent const&)>::moveInto(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)a2 = &unk_26E6F7600;
  *(void *)(a2 + 8) = v2;
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::*)(re::ecs2::Entity *,REComponentWillDeactivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentWillDeactivateEvent const&)>::size()
{
  return 32;
}

void re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::*)(re::ecs2::Entity *,REComponentDidAddEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidAddEvent const&)>::~CallableMemFn()
{
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::*)(re::ecs2::Entity *,REComponentDidAddEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidAddEvent const&)>::operator()(void *a1, void *a2)
{
  uint64_t v2 = (uint64_t (*)(void *, void))a1[2];
  uint64_t v3 = a1[3];
  unint64_t v4 = (void *)(a1[1] + (v3 >> 1));
  if (v3) {
    uint64_t v2 = *(uint64_t (**)(void *, void))(*v4 + v2);
  }
  return v2(v4, *a2);
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::*)(re::ecs2::Entity *,REComponentDidAddEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidAddEvent const&)>::cloneInto(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26E6F7658;
  long long v2 = *(_OWORD *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(_OWORD *)(a2 + 8) = v2;
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::*)(re::ecs2::Entity *,REComponentDidAddEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidAddEvent const&)>::moveInto(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)a2 = &unk_26E6F7658;
  *(void *)(a2 + 8) = v2;
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>::*)(re::ecs2::Entity *,REComponentDidAddEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidAddEvent const&)>::size()
{
  return 32;
}

uint64_t re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>,4ul>::addUninitialized(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 40);
  unint64_t v3 = *(void *)(a1 + 8);
  if (v2 + 1 > 4 * v3)
  {
    re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyCaptureComponent>,4ul>::setBucketsCapacity((uint64_t *)a1, (v2 + 4) >> 2);
    unint64_t v3 = *(void *)(a1 + 8);
  }
  if (v3 <= v2 >> 2)
  {
    os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
    _os_log_send_and_compose_impl();
    _os_crash_msg();
    __break(1u);
  }
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v4 = a1 + 24;
  }
  else {
    uint64_t v4 = *(void *)(a1 + 32);
  }
  uint64_t v5 = *(void *)(v4 + 8 * (v2 >> 2));
  ++*(void *)(a1 + 40);
  ++*(_DWORD *)(a1 + 48);
  return v5 + 112 * (v2 & 3);
}

re::audio::ColorPaletteEditorMaterial *re::audio::ColorPaletteEditorMaterial::ColorPaletteEditorMaterial(re::audio::ColorPaletteEditorMaterial *this)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  *(void *)this = 0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  __asm { FMOV            V0.4S, #1.0 }
  *((_OWORD *)this + 2) = _Q0;
  *((void *)this + 6) = 0;
  uint64_t v7 = (char *)this + 48;
  *((void *)this + re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 0;
  *((void *)this + 8) = 0;
  v9[0] = xmmword_234391680;
  v9[1] = xmmword_234391690;
  void v9[2] = xmmword_2343916A0;
  v9[3] = xmmword_2343916B0;
  v9[4] = xmmword_2343916C0;
  v9[5] = xmmword_2343916D0;
  v9[6] = xmmword_2343916E0;
  v9[7] = xmmword_2343916F0;
  v9[8] = xmmword_234391700;
  v9[9] = xmmword_234391710;
  v9[10] = xmmword_234391720;
  v9[11] = xmmword_234391730;
  v9[12] = xmmword_234391740;
  v9[13] = xmmword_234391750;
  v9[14] = xmmword_234391760;
  v9[15] = xmmword_234391770;
  v9[16] = xmmword_234391780;
  v9[17] = xmmword_234391790;
  v9[18] = xmmword_2343917A0;
  v9[19] = xmmword_2343917B0;
  v9[20] = xmmword_2343917C0;
  v9[21] = xmmword_2343917D0;
  v9[22] = xmmword_2343917E0;
  v9[23] = xmmword_2343917F0;
  v9[24] = xmmword_234391800;
  v9[25] = xmmword_234391810;
  v9[26] = xmmword_234391820;
  v9[27] = xmmword_234391830;
  v9[28] = xmmword_234391840;
  v9[29] = xmmword_234391850;
  v9[30] = xmmword_234391860;
  v9[31] = xmmword_234391870;
  v9[32] = xmmword_234391880;
  _ZNSt3__16vectorIDv4_fNS_9allocatorIS1_EEE18__assign_with_sizeB8nn180100IPKS1_S7_EEvT_T0_l(this, (char *)v9, v10, 0x21uLL);
  std::vector<BOOL>::resize((uint64_t)v7, (uint64_t)(*((void *)this + 1) - *(void *)this) >> 4, 1);
  return this;
}

void std::vector<BOOL>::resize(uint64_t a1, unint64_t a2, int a3)
{
  unint64_t v5 = *(void *)(a1 + 8);
  unint64_t v6 = a2 - v5;
  if (a2 <= v5)
  {
    *(void *)(a1 + 8) = a2;
    return;
  }
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8 << 6 < v6 || v5 > (v8 << 6) - v6)
  {
    if ((a2 & 0x8000000000000000) != 0) {
      goto LABEL_14;
    }
    if ((unint64_t)(v8 << 6) > 0x3FFFFFFFFFFFFFFELL)
    {
      unint64_t v11 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else
    {
      unint64_t v10 = v8 << 7;
      if (v10 <= ((a2 + 63) & 0xFFFFFFFFFFFFFFC0)) {
        unint64_t v11 = (a2 + 63) & 0xFFFFFFFFFFFFFFC0;
      }
      else {
        unint64_t v11 = v10;
      }
      if (!v11)
      {
        uint64_t v15 = 0;
        uint64_t v14 = 0;
        uint64_t v16 = *(void *)(a1 + 8);
LABEL_20:
        unint64_t v17 = v16 + v6;
        uint64_t v18 = *(void **)a1;
        if (v16 < 1)
        {
          LODWORD(v13) = 0;
          uint64_t v12 = v14;
        }
        else
        {
          unint64_t v19 = (unint64_t)v16 >> 6;
          if ((unint64_t)v16 >= 0x40)
          {
            uint64_t v20 = v15;
            memmove(v14, *(const void **)a1, 8 * v19);
            unint64_t v17 = v16 + v6;
            uint64_t v15 = v20;
          }
          uint64_t v12 = &v14[v19];
          uint64_t v13 = v16 & 0x3F;
          if (v13) {
            unint64_t *v12 = *v12 & ~(0xFFFFFFFFFFFFFFFFLL >> -(char)v13) | v18[v19] & (0xFFFFFFFFFFFFFFFFLL >> -(char)v13);
          }
          uint64_t v18 = *(void **)a1;
        }
        *(void *)a1 = v14;
        *(void *)(a1 + 8) = v17;
        *(void *)(a1 + 16) = v15;
        if (v18) {
          operator delete(v18);
        }
        goto LABEL_29;
      }
      if ((v11 & 0x8000000000000000) != 0) {
LABEL_14:
      }
        abort();
    }
    __dst = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    std::vector<BOOL>::__vallocate[abi:nn180100](&__dst, v11);
    if (!v22) {
      *(void *)__dst = 0;
    }
    uint64_t v14 = (unint64_t *)__dst;
    uint64_t v15 = v23;
    uint64_t v16 = *(void *)(a1 + 8);
    goto LABEL_20;
  }
  uint64_t v12 = (unint64_t *)(*(void *)a1 + 8 * (v5 >> 6));
  uint64_t v13 = *(void *)(a1 + 8) & 0x3FLL;
  *(void *)(a1 + 8) = a2;
LABEL_29:
  if (a2 != v5)
  {
    if (a3)
    {
      __dst = v12;
      LODWORD(v22) = v13;
      std::__fill_n[abi:nn180100]<true,std::vector<BOOL>>(&__dst, v6);
    }
    else
    {
      __dst = v12;
      LODWORD(v22) = v13;
      std::__fill_n[abi:nn180100]<false,std::vector<BOOL>>((uint64_t)&__dst, v6);
    }
  }
}

re::audio::ColorPaletteARKitMaterial *re::audio::ColorPaletteARKitMaterial::ColorPaletteARKitMaterial(re::audio::ColorPaletteARKitMaterial *this)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  *(void *)this = 0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  __asm { FMOV            V0.4S, #1.0 }
  *((_OWORD *)this + 2) = _Q0;
  *((void *)this + re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 0;
  *((void *)this + 8) = 0;
  *((void *)this + 6) = 0;
  uint64_t v7 = (char *)this + 48;
  v9[0] = xmmword_234391890;
  v9[1] = xmmword_234391890;
  void v9[2] = xmmword_2343918A0;
  v9[3] = xmmword_2343918B0;
  v9[4] = xmmword_2343918C0;
  v9[5] = xmmword_2343918D0;
  v9[6] = xmmword_2343918E0;
  v9[7] = xmmword_2343918F0;
  v9[8] = xmmword_234391900;
  v9[9] = xmmword_234391910;
  v9[10] = xmmword_234391920;
  v9[11] = xmmword_234391930;
  v9[12] = xmmword_234391940;
  v9[13] = xmmword_234391950;
  v9[14] = xmmword_234391960;
  v9[15] = xmmword_234391970;
  v9[16] = xmmword_234391980;
  v9[17] = xmmword_234391990;
  v9[18] = xmmword_2343919A0;
  v9[19] = xmmword_2343919B0;
  v9[20] = xmmword_2343919C0;
  v9[21] = xmmword_2343919D0;
  v9[22] = xmmword_2343919E0;
  v9[23] = xmmword_2343919F0;
  v9[24] = xmmword_234391A00;
  v9[25] = xmmword_234391A10;
  _ZNSt3__16vectorIDv4_fNS_9allocatorIS1_EEE18__assign_with_sizeB8nn180100IPKS1_S7_EEvT_T0_l(this, (char *)v9, v10, 0x1AuLL);
  std::vector<BOOL>::resize((uint64_t)v7, (uint64_t)(*((void *)this + 1) - *(void *)this) >> 4, 1);
  return this;
}

re::audio::ColorPaletteARKitClassification *re::audio::ColorPaletteARKitClassification::ColorPaletteARKitClassification(re::audio::ColorPaletteARKitClassification *this)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  *(void *)this = 0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  __asm { FMOV            V0.4S, #1.0 }
  *((_OWORD *)this + 2) = _Q0;
  *((void *)this + re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 0;
  *((void *)this + 8) = 0;
  *((void *)this + 6) = 0;
  uint64_t v7 = (char *)this + 48;
  v9[0] = xmmword_234391A20;
  v9[1] = xmmword_234376D50;
  void v9[2] = xmmword_234385470;
  v9[3] = xmmword_234391A30;
  v9[4] = xmmword_234391A40;
  v9[5] = xmmword_234391A50;
  v9[6] = xmmword_234391A60;
  v9[7] = xmmword_234391A70;
  v9[8] = xmmword_234391A80;
  v9[9] = xmmword_234391A90;
  v9[10] = xmmword_234391AA0;
  v9[11] = xmmword_234391AB0;
  v9[12] = xmmword_234391AC0;
  v9[13] = xmmword_234391AD0;
  v9[14] = xmmword_234391AE0;
  v9[15] = xmmword_234391AF0;
  v9[16] = xmmword_234391B00;
  v9[17] = xmmword_234391B10;
  v9[18] = xmmword_234391B20;
  v9[19] = xmmword_234391B30;
  v9[20] = xmmword_234391B40;
  v9[21] = xmmword_234391B50;
  v9[22] = xmmword_234391B60;
  v9[23] = xmmword_234391B70;
  v9[24] = xmmword_234391B80;
  v9[25] = xmmword_234391B90;
  _OWORD v9[26] = xmmword_234391BA0;
  v9[27] = xmmword_234391BB0;
  v9[28] = xmmword_234391BC0;
  v9[29] = xmmword_234391BD0;
  v9[30] = xmmword_234391BE0;
  v9[31] = xmmword_234391BF0;
  v9[32] = xmmword_234391C00;
  _OWORD v9[33] = xmmword_234391C10;
  v9[34] = xmmword_234391C20;
  v9[35] = xmmword_234391C30;
  v9[36] = xmmword_234391C40;
  v9[37] = xmmword_234391C50;
  v9[38] = xmmword_234391C60;
  v9[39] = xmmword_234391C70;
  v9[40] = xmmword_234391C80;
  v9[41] = xmmword_234391C90;
  _ZNSt3__16vectorIDv4_fNS_9allocatorIS1_EEE18__assign_with_sizeB8nn180100IPKS1_S7_EEvT_T0_l(this, (char *)v9, v10, 0x2AuLL);
  std::vector<BOOL>::resize((uint64_t)v7, (uint64_t)(*((void *)this + 1) - *(void *)this) >> 4, 1);
  return this;
}

void *_ZNSt3__16vectorIDv4_fNS_9allocatorIS1_EEE18__assign_with_sizeB8nn180100IPKS1_S7_EEvT_T0_l(void *result, char *__src, char *a3, unint64_t a4)
{
  unint64_t v6 = __src;
  uint64_t v7 = result;
  uint64_t v8 = result[2];
  int v9 = (char *)*result;
  if (a4 > (v8 - *result) >> 4)
  {
    if (v9)
    {
      result[1] = v9;
      operator delete(v9);
      uint64_t v8 = 0;
      *uint64_t v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 >> 60) {
      goto LABEL_23;
    }
    uint64_t v10 = v8 >> 3;
    if (v8 >> 3 <= a4) {
      uint64_t v10 = a4;
    }
    unint64_t v11 = (unint64_t)v8 >= 0x7FFFFFFFFFFFFFF0 ? 0xFFFFFFFFFFFFFFFLL : v10;
    if (v11 >> 60) {
LABEL_23:
    }
      abort();
    uint64_t result = operator new(16 * v11);
    int v9 = (char *)result;
    *uint64_t v7 = result;
    v7[1] = result;
    v7[2] = &result[2 * v11];
    size_t v12 = a3 - v6;
    if (v12) {
      uint64_t result = memcpy(result, v6, v12);
    }
    uint64_t v13 = (void **)(v7 + 1);
    goto LABEL_22;
  }
  uint64_t v13 = (void **)(result + 1);
  uint64_t v14 = (unsigned char *)result[1];
  unint64_t v15 = (v14 - v9) >> 4;
  if (v15 >= a4)
  {
    size_t v12 = a3 - __src;
    if (a3 == __src) {
      goto LABEL_22;
    }
    unint64_t v17 = (void *)*result;
LABEL_21:
    uint64_t result = memmove(v17, __src, v12);
    goto LABEL_22;
  }
  uint64_t v16 = &__src[16 * v15];
  if (v14 != v9)
  {
    uint64_t result = memmove((void *)*result, __src, v14 - v9);
    int v9 = (char *)*v13;
  }
  size_t v12 = a3 - v16;
  if (v12)
  {
    unint64_t v17 = v9;
    __src = v16;
    goto LABEL_21;
  }
LABEL_22:
  *uint64_t v13 = &v9[v12];
  return result;
}

void *std::vector<BOOL>::__vallocate[abi:nn180100](void *a1, uint64_t a2)
{
  if (a2 < 0) {
    abort();
  }
  uint64_t result = std::__allocate_at_least[abi:nn180100]<std::allocator<unsigned long long>>((uint64_t)(a1 + 2), ((unint64_t)(a2 - 1) >> 6) + 1);
  *a1 = result;
  a1[1] = 0;
  a1[2] = v4;
  return result;
}

void *std::__fill_n[abi:nn180100]<true,std::vector<BOOL>>(void *result, unint64_t a2)
{
  unint64_t v2 = a2;
  unint64_t v3 = result;
  int v4 = *((_DWORD *)result + 2);
  unint64_t v5 = (void *)*result;
  if (v4)
  {
    if ((64 - v4) >= a2) {
      unint64_t v6 = a2;
    }
    else {
      unint64_t v6 = (64 - v4);
    }
    *v5++ |= (0xFFFFFFFFFFFFFFFFLL >> (64 - v4 - v6)) & (-1 << v4);
    unint64_t v2 = a2 - v6;
    *uint64_t result = v5;
  }
  unint64_t v7 = v2 >> 6;
  if (v2 >= 0x40) {
    uint64_t result = memset(v5, 255, 8 * v7);
  }
  if ((v2 & 0x3F) != 0)
  {
    uint64_t v8 = &v5[v7];
    *unint64_t v3 = v8;
    *v8 |= 0xFFFFFFFFFFFFFFFFLL >> -(v2 & 0x3F);
  }
  return result;
}

void std::__fill_n[abi:nn180100]<false,std::vector<BOOL>>(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = a2;
  int v4 = *(_DWORD *)(a1 + 8);
  unint64_t v5 = *(void **)a1;
  if (v4)
  {
    if ((64 - v4) >= a2) {
      unint64_t v6 = a2;
    }
    else {
      unint64_t v6 = (64 - v4);
    }
    *v5++ &= ~((0xFFFFFFFFFFFFFFFFLL >> (64 - v4 - v6)) & (-1 << v4));
    unint64_t v2 = a2 - v6;
    *(void *)a1 = v5;
  }
  unint64_t v7 = v2 >> 6;
  if (v2 >= 0x40) {
    bzero(v5, 8 * v7);
  }
  if ((v2 & 0x3F) != 0)
  {
    uint64_t v8 = &v5[v7];
    *(void *)a1 = v8;
    *v8 &= ~(0xFFFFFFFFFFFFFFFFLL >> -(v2 & 0x3F));
  }
}

uint64_t re::ecs2::AudioPlayerComponent_upgradeVersion1(uint64_t a1, uint64_t a2, uint64_t a3)
{
  re::DynamicArray<re::AssetHandle>::operator=(a3 + 168, (uint64_t *)(a2 + 120));
  return 1;
}

void *re::ecs2::allocInfo_AudioPlayerComponent(re::ecs2 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83710, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF83710))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF839C0, "AudioPlayerComponent");
    __cxa_guard_release(&qword_26AF83710);
  }
  return &unk_26AF839C0;
}

void re::ecs2::initInfo_AudioPlayerComponent(re::ecs2 *this, re::IntrospectionBase *a2)
{
  uint64_t v70 = 0x913565130F19710CLL;
  uint64_t v71 = "AudioPlayerComponent";
  re::StringID::destroyString((re::StringID *)&v70);
  *((_OWORD *)this + 2) = v63;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83708, memory_order_acquire) & 1) == 0)
  {
    int v4 = (re *)__cxa_guard_acquire(&qword_26AF83708);
    if (v4)
    {
      unint64_t v5 = re::introspectionAllocator(v4);
      uint64_t v6 = re::ecs2::introspect_Component((re::IntrospectionBase **)1);
      uint64_t v7 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v5 + 32))(v5, 72, 8);
      *(_DWORD *)uint64_t v7 = 1;
      *(void *)(v7 + 8) = "Component";
      *(void *)(v7 + 16) = v6;
      *(void *)(v7 + 24) = 0;
      *(void *)(v7 + 32) = 0;
      *(_DWORD *)(v7 + 40) = 3;
      *(void *)(v7 + 48) = 0;
      *(void *)(v7 + 56) = 0;
      *(_DWORD *)(v7 + 64) = 0;
      qword_26AF83968 = v7;
      int v9 = re::introspectionAllocator((re *)v7);
      if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF837A8, memory_order_acquire) & 1) == 0
        && __cxa_guard_acquire(&qword_26AF837A8))
      {
        re::IntrospectionHashTableBase::IntrospectionHashTableBase((re::IntrospectionHashTableBase *)&qword_26AF838C8);
        qword_26AF838C8 = (uint64_t)&unk_26E6F7770;
        __cxa_guard_release(&qword_26AF837A8);
      }
      if ((_MergedGlobals_177 & 1) == 0)
      {
        uint64_t v10 = re::introspect_uint64_t((re *)1, v8);
        uint64_t v11 = re::introspect_AudioSourceSyncState((re::IntrospectionBase **)1);
        if ((_MergedGlobals_177 & 1) == 0)
        {
          uint64_t v12 = v11;
          _MergedGlobals_177 = 1;
          int v13 = *(_DWORD *)(v11 + 24);
          ArcSharedObject::ArcSharedObject((ArcSharedObject *)&qword_26AF838C8, 0);
          qword_26AF838D8 = 0x3000000007;
          dword_26AF838E0 = v13;
          word_26AF838E4 = 0;
          *(void *)&xmmword_26AF838E8 = 0;
          *((void *)&xmmword_26AF838E8 + 1) = 0xFFFFFFFFLL;
          qword_26AF838F8 = (uint64_t)v10;
          unk_26AF83900 = 0;
          qword_26AF83908 = v12;
          qword_26AF83910 = 0;
          qword_26AF838C8 = (uint64_t)&unk_26E6F7770;
          re::IntrospectionRegistry::add(v14, v15);
          re::getPrettyTypeName((re *)&qword_26AF838C8, (const re::IntrospectionBase *)&v70);
          if (v71) {
            uint64_t v16 = v72;
          }
          else {
            uint64_t v16 = (char *)&v71 + 1;
          }
          if (v70 && (v71 & 1) != 0) {
            (*(void (**)(void))(*(void *)v70 + 40))();
          }
          long long v17 = v10[2];
          long long v65 = *(_OWORD *)(v12 + 32);
          long long v66 = v17;
          uint64_t v18 = (uint64_t *)re::HashTable<re::StringID,re::StateParameterInt *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::tryGet((uint64_t)&unk_2687A0D30, v67);
          if (v18)
          {
            uint64_t v19 = *v18;
            *((void *)&v64 + 1) = v19;
          }
          else
          {
            uint64_t v70 = 0x449AD97C4B77BED4;
            uint64_t v71 = "_CompareFunc";
            uint64_t v20 = (uint64_t *)re::HashTable<re::StringID,re::StateParameterInt *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::tryGet((uint64_t)&unk_2687A0D30, &v70);
            if (v20)
            {
              uint64_t v21 = *v20;
              re::StringID::destroyString((re::StringID *)&v70);
            }
            else
            {
              re::StringID::destroyString((re::StringID *)&v70);
              *(void *)&v75.var0 = 0x449AD97C4B77BED4;
              v75.var1 = "_CompareFunc";
              uint64_t v22 = (void *)v70;
              uint64_t v21 = (uint64_t)v71;
              re::StringID::destroyString((re::StringID *)&v75);
            }
            re::TypeInfo::TypeInfo((uint64_t)&v75, (uint64_t)&v71);
            if (!v22
              || (uint64_t v23 = *v76,
                  uint64_t v70 = v21,
                  uint64_t v71 = v23,
                  LODWORD(v72) = -1,
                  (uint64_t v24 = (_anonymous_namespace_ *)re::HashTable<re::internal::TypeAttributeKey,re::internal::TypeAttributeData,re::Hash<re::internal::TypeAttributeKey>,re::EqualTo<re::internal::TypeAttributeKey>,true,false>::tryGet(*(void *)&v75.var0 + 768, &v70)) == 0)|| !*(void *)v24)
            {
              long long v74 = v66;
              v73[0] = v22;
              v73[1] = v21;
            }
            long long v68 = v65;
            long long v69 = v66;
            re::TypeBuilder::beginDictionaryType((uint64_t)&v70, v67, 1, 0x30uLL, 8uLL, &v69, &v68);
            re::TypeBuilder::setConstructor((uint64_t)&v70, (uint64_t)re::TypeBuilderHelper::registerHashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#1}::__invoke);
            re::TypeBuilder::setDestructor((uint64_t)&v70, (uint64_t)re::TypeBuilderHelper::registerHashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#2}::__invoke);
            re::TypeBuilder::setDictionaryAccessors((uint64_t)&v70, (uint64_t)re::TypeBuilderHelper::registerHashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#1}::__invoke, (uint64_t)re::TypeBuilderHelper::registerHashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *)#1}::__invoke, (uint64_t)re::TypeBuilderHelper::registerHashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#3}::__invoke, (uint64_t)re::TypeBuilderHelper::registerHashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,void const*)#1}::__invoke);
            re::TypeBuilder::setDictionaryIterator((uint64_t)&v70, (void *(*)(void *, re::Allocator *))re::TypeBuilderHelper::registerHashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::Allocator *)#1}::__invoke, (BOOL (*)(void *))re::TypeBuilderHelper::registerHashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#2}::__invoke, (const void *(*)(void *))re::TypeBuilderHelper::registerHashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#3}::__invoke, (void *(*)(void *))re::TypeBuilderHelper::registerHashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#4}::__invoke, (void (*)(void *, re::Allocator *))re::TypeBuilderHelper::registerHashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::Allocator *)#2}::__invoke);
            re::TypeBuilder::~TypeBuilder((re::TypeBuilder *)&v70, v25);
          }
          xmmword_26AF838E8 = v64;
          re::StringID::destroyString((re::StringID *)v67);
        }
      }
      uint64_t v26 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v9 + 32))(v9, 72, 8);
      *(_DWORD *)uint64_t v26 = 1;
      *(void *)(v26 + 8) = "syncStatesByToken";
      *(void *)(v26 + 16) = &qword_26AF838C8;
      *(void *)(v26 + 24) = 0;
      *(void *)(v26 + 32) = 0x2000000001;
      *(_DWORD *)(v26 + 40) = 0;
      *(void *)(v26 + 48) = 0;
      *(void *)(v26 + 56) = 0;
      *(_DWORD *)(v26 + 64) = 0;
      qword_26AF83970 = v26;
      uint64_t v27 = re::introspectionAllocator((re *)v26);
      uint64_t v29 = re::IntrospectionInfo<re::DynamicArray<re::AssetHandle>>::get(1, v28);
      uint64_t v30 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v27 + 32))(v27, 72, 8);
      *(_DWORD *)uint64_t v30 = 1;
      *(void *)(v30 + 8) = "registeredAssets";
      *(void *)(v30 + 16) = v29;
      *(void *)(v30 + 24) = 0;
      *(void *)(v30 + 32) = 0xA800000002;
      *(_DWORD *)(v30 + 40) = 0;
      *(void *)(v30 + 48) = 0;
      *(void *)(v30 + 56) = 0;
      *(_DWORD *)(v30 + 64) = 0;
      qword_26AF83978 = v30;
      uint64_t v31 = re::introspectionAllocator((re *)v30);
      uint64_t v33 = re::introspect_uint64_t((re *)1, v32);
      uint64_t v34 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v31 + 32))(v31, 72, 8);
      *(_DWORD *)uint64_t v34 = 1;
      *(void *)(v34 + 8) = "sharedEntityID";
      *(void *)(v34 + 16) = v33;
      *(void *)(v34 + 24) = 0;
      *(void *)(v34 + 32) = 0x13000000007;
      *(_DWORD *)(v34 + 40) = 0;
      *(void *)(v34 + 48) = 0;
      *(void *)(v34 + 56) = 0;
      *(_DWORD *)(v34 + 64) = 0;
      qword_26AF83980 = v34;
      uint64_t v35 = re::introspectionAllocator((re *)v34);
      long long v37 = re::introspect_float((re *)1, v36);
      uint64_t v38 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v35 + 32))(v35, 72, 8);
      *(_DWORD *)uint64_t v38 = 1;
      *(void *)(v38 + 8) = "gain";
      *(void *)(v38 + 16) = v37;
      *(void *)(v38 + 24) = 0;
      *(void *)(v38 + 32) = 0x11000000008;
      *(_DWORD *)(v38 + 40) = 0;
      *(void *)(v38 + 48) = 0;
      *(void *)(v38 + 56) = 0;
      *(_DWORD *)(v38 + 64) = 0;
      qword_26AF83988 = v38;
      uint64_t v39 = re::introspectionAllocator((re *)v38);
      uint64_t v41 = re::introspect_float((re *)1, v40);
      uint64_t v42 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v39 + 32))(v39, 72, 8);
      *(_DWORD *)uint64_t v42 = 1;
      *(void *)(v42 + 8) = "directLevel";
      *(void *)(v42 + 16) = v41;
      *(void *)(v42 + 24) = 0;
      *(void *)(v42 + 32) = 0x11400000009;
      *(_DWORD *)(v42 + 40) = 0;
      *(void *)(v42 + 48) = 0;
      *(void *)(v42 + 56) = 0;
      *(_DWORD *)(v42 + 64) = 0;
      qword_26AF83990 = v42;
      long long v43 = re::introspectionAllocator((re *)v42);
      uint64_t v45 = re::introspect_float((re *)1, v44);
      uint64_t v46 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v43 + 32))(v43, 72, 8);
      *(_DWORD *)uint64_t v46 = 1;
      *(void *)(v46 + 8) = "reverbLevel";
      *(void *)(v46 + 16) = v45;
      *(void *)(v46 + 24) = 0;
      *(void *)(v46 + 32) = 0x1180000000ALL;
      *(_DWORD *)(v46 + 40) = 0;
      *(void *)(v46 + 48) = 0;
      *(void *)(v46 + 56) = 0;
      *(_DWORD *)(v46 + 64) = 0;
      qword_26AF83998 = v46;
      uint64_t v47 = re::introspectionAllocator((re *)v46);
      uint64_t v48 = re::introspect_AudioGainChange((re::IntrospectionBase **)1);
      uint64_t v49 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v47 + 32))(v47, 72, 8);
      *(_DWORD *)uint64_t v49 = 1;
      *(void *)(v49 + 8) = "gainChange";
      *(void *)(v49 + 16) = v48;
      *(void *)(v49 + 24) = 0;
      *(void *)(v49 + 32) = 0xE00000000BLL;
      *(_DWORD *)(v49 + 40) = 0;
      *(void *)(v49 + 48) = 0;
      *(void *)(v49 + 56) = 0;
      *(_DWORD *)(v49 + 64) = 0;
      qword_26AF839A0 = v49;
      uint64_t v50 = re::introspectionAllocator((re *)v49);
      uint64_t v52 = re::introspect_float((re *)1, v51);
      uint64_t v53 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v50 + 32))(v50, 72, 8);
      *(_DWORD *)uint64_t v53 = 1;
      *(void *)(v53 + 8) = "rolloffFactor";
      *(void *)(v53 + 16) = v52;
      *(void *)(v53 + 24) = 0;
      *(void *)(v53 + 32) = 0x11C0000000CLL;
      *(_DWORD *)(v53 + 40) = 0;
      *(void *)(v53 + 48) = 0;
      *(void *)(v53 + 56) = 0;
      *(_DWORD *)(v53 + 64) = 0;
      qword_26AF839A8 = v53;
      uint64_t v54 = re::introspectionAllocator((re *)v53);
      uint64_t v55 = re::audio::introspect_AudioSourceDirectivityConfiguration((re::IntrospectionBase **)1);
      uint64_t v56 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v54 + 32))(v54, 72, 8);
      *(_DWORD *)uint64_t v56 = 1;
      *(void *)(v56 + 8) = "directivityConfig";
      *(void *)(v56 + 16) = v55;
      *(void *)(v56 + 24) = 0;
      *(void *)(v56 + 32) = 0xD00000000DLL;
      *(_DWORD *)(v56 + 40) = 0;
      *(void *)(v56 + 48) = 0;
      *(void *)(v56 + 56) = 0;
      *(_DWORD *)(v56 + 64) = 0;
      qword_26AF839B0 = v56;
      uint64_t v57 = (re::ecs2::v1 *)re::introspectionAllocator((re *)v56);
      uint64_t v58 = v57;
      id v59 = (re::ecs2::v1 *)qword_26AF83748;
      if (!qword_26AF83748)
      {
        id v59 = (re::ecs2::v1 *)re::ecs2::v1::allocInfo_AudioPlayerComponent(v57);
        qword_26AF83748 = (uint64_t)v59;
        re::ecs2::v1::initInfo_AudioPlayerComponent(v59, v60);
      }
      uint64_t v61 = (*(uint64_t (**)(re::ecs2::v1 *, uint64_t, uint64_t))(*(void *)v58 + 32))(v58, 64, 8);
      *(_DWORD *)uint64_t v61 = 6;
      *(void *)(v61 + 8) = 2;
      *(void *)(v61 + 16) = v59;
      *(void *)(v61 + 24) = 0;
      *(void *)(v61 + 32) = re::ecs2::AudioPlayerComponent_upgradeVersion1;
      *(unsigned char *)(v61 + 40) = 0;
      *(void *)(v61 + 48) = 0;
      *(_DWORD *)(v61 + 56) = 0;
      qword_26AF839B8 = v61;
      __cxa_guard_release(&qword_26AF83708);
    }
  }
  *((void *)this + 2) = 0x1F000000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 11;
  *((void *)this + 8) = &qword_26AF83968;
  *((void *)this + 9) = re::internal::defaultConstruct<re::ecs2::AudioPlayerComponent>;
  *((void *)this + re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 10) = re::internal::defaultDestruct<re::ecs2::AudioPlayerComponent>;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::ecs2::AudioPlayerComponent>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::ecs2::AudioPlayerComponent>;
  re::IntrospectionRegistry::add(this, v3);
  long long v62 = v63;
}

re::ecs2::AudioPlayerComponent *re::internal::defaultConstruct<re::ecs2::AudioPlayerComponent>(int a1, int a2, re::ecs2::AudioPlayerComponent *this)
{
  return re::ecs2::AudioPlayerComponent::AudioPlayerComponent(this);
}

uint64_t re::internal::defaultDestruct<re::ecs2::AudioPlayerComponent>(uint64_t a1, uint64_t a2, uint64_t (***a3)(void))
{
  return (**a3)(a3);
}

uint64_t re::internal::defaultDestructV2<re::ecs2::AudioPlayerComponent>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

uint64_t re::ecs2::introspect_AudioPlayerComponent(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"AudioPlayerComponent", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_AudioPlayerComponent, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_AudioPlayerComponent, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::AudioPlayerComponent>, this);
}

void *re::ecs2::allocInfo_AudioPlayerSystem(re::ecs2 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83718, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF83718))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF83A38, "AudioPlayerSystem");
    __cxa_guard_release(&qword_26AF83718);
  }
  return &unk_26AF83A38;
}

void re::ecs2::initInfo_AudioPlayerSystem(re::ecs2 *this, re::IntrospectionBase *a2)
{
  v5[0] = 0x73CC591B6CA5568CLL;
  v5[1] = "AudioPlayerSystem";
  re::StringID::destroyString((re::StringID *)v5);
  *((_OWORD *)this + 2) = v6;
  *((void *)this + 2) = 0x11800000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 0;
  *((void *)this + 8) = &re::ecs2::initInfo_AudioPlayerSystem(re::IntrospectionBase *)::structureAttributes;
  *((void *)this + 9) = re::internal::defaultConstruct<re::ecs2::AudioPlayerSystem>;
  *((void *)this + 10) = re::internal::defaultDestruct<re::ecs2::AudioPlayerSystem>;
  *((void *)this + re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 11) = re::internal::defaultRetain<re::ecs2::AudioPlayerSystem>(void)::{lambda(void *)#1}::__invoke;
  *((void *)this + 12) = re::internal::defaultRelease<re::ecs2::AudioPlayerSystem>(void)::{lambda(void *)#1}::__invoke;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::ecs2::AudioPlayerSystem>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::ecs2::AudioPlayerSystem>;
  re::IntrospectionRegistry::add(this, v3);
  long long v4 = v6;
}

re::ecs2::AudioPlayerSystem *re::internal::defaultConstruct<re::ecs2::AudioPlayerSystem>(int a1, int a2, re::ecs2::AudioPlayerSystem *this)
{
  return re::ecs2::AudioPlayerSystem::AudioPlayerSystem(this);
}

void *re::internal::defaultDestruct<re::ecs2::AudioPlayerSystem>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table(a3 + 240);
  std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table(a3 + 200);
  re::HashTable<re::ecs2::Scene const*,re::HashTable<unsigned long long,re::SharedPtr<re::AudioSourceState>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,true,false>::deinit((uint64_t *)(a3 + 112));

  *(void *)a3 = &unk_26E6DECE0;
  return objc_destructInstance((id)(a3 + 8));
}

void *re::internal::defaultDestructV2<re::ecs2::AudioPlayerSystem>(uint64_t a1)
{
  std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table(a1 + 240);
  std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table(a1 + 200);
  re::HashTable<re::ecs2::Scene const*,re::HashTable<unsigned long long,re::SharedPtr<re::AudioSourceState>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,true,false>::deinit((uint64_t *)(a1 + 112));

  *(void *)a1 = &unk_26E6DECE0;
  return objc_destructInstance((id)(a1 + 8));
}

uint64_t re::ecs2::introspect_AudioPlayerSystem(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"AudioPlayerSystem", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_AudioPlayerSystem, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_AudioPlayerSystem, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::AudioPlayerSystem>, this);
}

re::ecs2::AudioPlayerComponent *re::ecs2::AudioPlayerComponent::AudioPlayerComponent(re::ecs2::AudioPlayerComponent *this)
{
  ArcSharedObject::ArcSharedObject(this, 0);
  *(void *)(v2 + 16) = 0;
  *(unsigned char *)(v2 + 24) = 0;
  *(void *)uint64_t v2 = &unk_26E6F76B0;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_DWORD *)(v2 + 64) = 0;
  *(void *)(v2 + 68) = 0x7FFFFFFFLL;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_DWORD *)(v2 + 112) = 0;
  *(void *)(v2 + 116) = 0x7FFFFFFFLL;
  *(void *)(v2 + 136) = 0;
  *(void *)(v2 + 144) = 0;
  *(void *)(v2 + 128) = 0;
  *(_DWORD *)(v2 + 152) = 0;
  *(void *)(v2 + 200) = 0;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 176) = 0u;
  *(_DWORD *)(v2 + 192) = 0;
  *(_DWORD *)(v2 + 208) = 1;
  *(_OWORD *)(v2 + 212) = xmmword_234391D00;
  *(_DWORD *)(v2 + 228) = 1065353216;
  *(void *)(v2 + 232) = 0;
  *(_DWORD *)(v2 + re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240) = 1;
  *(_DWORD *)(v2 + 248) = 0;
  *(unsigned char *)(v2 + 252) = 0;
  *(_DWORD *)(v2 + 256) = 1065353216;
  *(void *)(v2 + 276) = 0;
  *(void *)(v2 + 260) = 0;
  *(void *)(v2 + 268) = 0;
  *(_DWORD *)(v2 + 284) = 1065353216;
  *(void *)(v2 + 288) = 0;
  *(unsigned char *)(v2 + 296) = 1;
  unint64_t v3 = (unsigned int *)(v2 + 312);
  long long v4 = (void *)(v2 + 360);
  *(_OWORD *)(v2 + 304) = 0u;
  *(_OWORD *)(v2 + 320) = 0u;
  *(_OWORD *)(v2 + 336) = 0u;
  *(_OWORD *)(v2 + 352) = 0u;
  *(_OWORD *)(v2 + 368) = 0u;
  *(void *)(v2 + 384) = 0;
  re::DynamicString::setCapacity(v4, 0);
  *(_OWORD *)((char *)this + 392) = 0u;
  *(_OWORD *)((char *)this + 408) = 0u;
  *((void *)this + 53) = 0x7FFFFFFF00000000;
  *((_DWORD *)this + 108) = 0;
  *(_OWORD *)((char *)this + 440) = 0u;
  *(_OWORD *)((char *)this + 456) = 0u;
  *((_DWORD *)this + 118) = 0;
  *(void *)((char *)this + 476) = 0x7FFFFFFFLL;
  *((void *)this + 61) = 0;
  unint64_t v5 = (void *)*((void *)this + 36);
  *((void *)this + 36) = 0;

  atomic_store(0, v3);
  atomic_store(0, (unsigned int *)this + 79);
  atomic_store(0, (unsigned int *)this + 80);
  atomic_store(0, (unsigned int *)this + 81);
  return this;
}

void re::ecs2::AudioPlayerComponent::~AudioPlayerComponent(uint64_t **this)
{
  int v1 = (re::ecs2::AudioPlayerComponent *)this;
  *this = (uint64_t *)&unk_26E6F76B0;
  uint64_t v2 = this[41];
  unint64_t v3 = this[42];
  while (v2 != v3)
  {
    uint64_t v4 = *v2;
    if (*v2)
    {
      unint64_t v5 = re::globalAllocators((re *)this);
      this = (uint64_t **)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v5[2] + 40))(v5[2], v4);
    }
    ++v2;
  }
  uint64_t v6 = *((void *)v1 + 18);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)*((void *)v1 + 20);
    uint64_t v8 = 8 * v6;
    do
    {
      uint64_t v9 = *v7;
      if (*v7) {
        id v10 = (id)(v9 + 8);
      }
      *(void *)(v9 + 480) = 0;

      ++v7;
      v8 -= 8;
    }
    while (v8);
  }
  if (*((_DWORD *)v1 + 105))
  {
    uint64_t v11 = *((unsigned int *)v1 + 104);
    if (v11) {
      memset_pattern16(*((void **)v1 + 50), &unk_2343655D0, 4 * v11);
    }
    uint64_t v12 = *((unsigned int *)v1 + 106);
    if (v12)
    {
      uint64_t v13 = 0;
      uint64_t v14 = 32 * v12;
      do
      {
        uint64_t v15 = *((void *)v1 + 51) + v13;
        int v16 = *(_DWORD *)(v15 + 8);
        if (v16 < 0) {
          *(_DWORD *)(v15 + 8) = v16 & 0x7FFFFFFF;
        }
        v13 += 32;
      }
      while (v14 != v13);
    }
    *((_DWORD *)v1 + 10re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 0x7FFFFFFF;
    *(void *)((char *)v1 + 420) = 0;
    ++*((_DWORD *)v1 + 108);
  }
  if (*((_DWORD *)v1 + 27))
  {
    uint64_t v17 = *((unsigned int *)v1 + 26);
    if (v17) {
      memset_pattern16(*((void **)v1 + 11), &unk_2343655D0, 4 * v17);
    }
    uint64_t v18 = *((unsigned int *)v1 + 28);
    if (v18)
    {
      uint64_t v19 = 0;
      uint64_t v20 = 32 * v18;
      do
      {
        uint64_t v21 = *((void *)v1 + 12) + v19;
        int v22 = *(_DWORD *)(v21 + 8);
        if (v22 < 0) {
          *(_DWORD *)(v21 + 8) = v22 & 0x7FFFFFFF;
        }
        v19 += 32;
      }
      while (v20 != v19);
    }
    *((_DWORD *)v1 + 2re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 0;
    *((_DWORD *)v1 + 28) = 0;
    int v23 = *((_DWORD *)v1 + 30) + 1;
    *((_DWORD *)v1 + 29) = 0x7FFFFFFF;
    *((_DWORD *)v1 + 30) = v23;
  }
  uint64_t v24 = *((void *)v1 + 18);
  *((void *)v1 + 18) = 0;
  if (v24)
  {
    uint64_t v25 = *((void *)v1 + 20);
    uint64_t v26 = 8 * v24;
    do
    {
      if (*(void *)v25)
      {

        *(void *)uint64_t v25 = 0;
      }
      v25 += 8;
      v26 -= 8;
    }
    while (v26);
  }
  ++*((_DWORD *)v1 + 38);
  atomic_store(0, (unsigned int *)v1 + 80);
  atomic_store(0, (unsigned int *)v1 + 81);
  re::HashTable<unsigned long long,void({block_pointer} {__strong})(unsigned long long,REAudioPlaybackState,REAudioPlaybackState),re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::deinit((uint64_t *)v1 + 55);
  re::HashTable<void *,re::internal::AnimationCompositionChainBase *,re::Hash<void *>,re::EqualTo<void *>,true,false>::deinit((uint64_t *)v1 + 49);
  re::DynamicString::deinit((re::ecs2::AudioPlayerComponent *)((char *)v1 + 360));
  uint64_t v27 = (void *)*((void *)v1 + 41);
  if (v27)
  {
    *((void *)v1 + 42) = v27;
    operator delete(v27);
  }

  re::DynamicArray<re::AssetHandle>::deinit((uint64_t)v1 + 168);
  uint64_t v28 = *((void *)v1 + 16);
  if (v28)
  {
    uint64_t v29 = *((void *)v1 + 20);
    if (v29)
    {
      uint64_t v30 = *((void *)v1 + 18);
      if (v30)
      {
        uint64_t v31 = 8 * v30;
        do
        {
          if (*(void *)v29)
          {

            *(void *)uint64_t v29 = 0;
          }
          v29 += 8;
          v31 -= 8;
        }
        while (v31);
        uint64_t v28 = *((void *)v1 + 16);
        uint64_t v29 = *((void *)v1 + 20);
      }
      (*(void (**)(uint64_t, uint64_t))(*(void *)v28 + 40))(v28, v29);
    }
    *((void *)v1 + 20) = 0;
    *((void *)v1 + 1re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 0;
    *((void *)v1 + 18) = 0;
    *((void *)v1 + 16) = 0;
    ++*((_DWORD *)v1 + 38);
  }
  re::HashTable<void *,re::internal::AnimationCompositionChainBase *,re::Hash<void *>,re::EqualTo<void *>,true,false>::deinit((uint64_t *)v1 + 10);
  re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::deinit((uint64_t *)v1 + 4);
  *(void *)int v1 = &unk_26E6DECE0;
  objc_destructInstance((char *)v1 + 8);
}

{
  uint64_t vars8;

  re::ecs2::AudioPlayerComponent::~AudioPlayerComponent(this);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::AudioPlayerComponent::audioService(re::ecs2::AudioPlayerComponent *this)
{
  uint64_t v1 = *((void *)this + 2);
  if (!v1) {
    return 0;
  }
  do
  {
    uint64_t v2 = v1;
    uint64_t v1 = *(void *)(v1 + 24);
  }
  while (v1);
  uint64_t v3 = *(void *)(v2 + 16);
  if (!v3) {
    return 0;
  }
  uint64_t v4 = *(void *)(v3 + 56);
  if (!v4) {
    return 0;
  }
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 32))(v4);
  uint64_t v6 = re::ServiceLocator::serviceOrNull<re::AudioSceneService>(v5);
  if (!v6) {
    return 0;
  }
  uint64_t v7 = *(uint64_t (**)(void))(*(void *)v6 + 16);
  return v7();
}

uint64_t re::ecs2::AudioPlayerComponent::getTimebaseService(re::ecs2::AudioPlayerComponent *this)
{
  if (!this) {
    return 0;
  }
  do
  {
    uint64_t v1 = this;
    this = (re::ecs2::AudioPlayerComponent *)*((void *)this + 3);
  }
  while (this);
  uint64_t v2 = *((void *)v1 + 2);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = *(void *)(v2 + 56);
  if (!v3) {
    return 0;
  }
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 32))(v3);
  return re::ServiceLocator::serviceOrNull<re::TimebaseService>(v4);
}

uint64_t re::ServiceLocator::serviceOrNull<re::TimebaseService>(uint64_t a1)
{
  {
    re::introspect<re::TimebaseService>(void)::info = re::introspect_TimebaseService(0);
  }
  uint64_t v2 = re::introspect<re::TimebaseService>(void)::info;
  re::StringID::invalid((re::StringID *)v5);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, unsigned char *))(*(void *)a1 + 16))(a1, v2, v5);
  re::StringID::destroyString((re::StringID *)v5);
  return v3;
}

uint64_t re::ServiceLocator::serviceOrNull<re::SharedClockService>(uint64_t a1)
{
  {
    re::introspect<re::SharedClockService>(void)::info = re::introspect_SharedClockService(0);
  }
  uint64_t v2 = re::introspect<re::SharedClockService>(void)::info;
  re::StringID::invalid((re::StringID *)v5);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, unsigned char *))(*(void *)a1 + 16))(a1, v2, v5);
  re::StringID::destroyString((re::StringID *)v5);
  return v3;
}

re *re::ecs2::AudioPlayerComponent::copyPreferredMasterClock(re::ecs2::AudioPlayerComponent *this)
{
  uint64_t v2 = *((void *)this + 2);
  if (!v2) {
    goto LABEL_9;
  }
  do
  {
    uint64_t v3 = v2;
    uint64_t v2 = *(void *)(v2 + 24);
  }
  while (v2);
  uint64_t v4 = *(void *)(v3 + 16);
  if (!v4
    || (uint64_t v5 = *(void *)(v4 + 56)) == 0
    || (uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 32))(v5),
        (uint64_t v7 = re::ServiceLocator::serviceOrNull<re::SharedClockService>(v6)) == 0)
    || (uint64_t v8 = v7, (result = (re *)(*(uint64_t (**)(uint64_t))(*(void *)v7 + 72))(v7)) == 0)
    && (uint64_t result = (re *)(*(uint64_t (**)(uint64_t))(*(void *)v8 + 80))(v8)) == 0)
  {
LABEL_9:
    uint64_t TimebaseService = re::ecs2::AudioPlayerComponent::getTimebaseService(*((re::ecs2::AudioPlayerComponent **)this + 2));
    if (TimebaseService)
    {
      uint64_t v12 = (const void *)(*(uint64_t (**)(uint64_t))(*(void *)TimebaseService + 32))(TimebaseService);
      return (re *)CFRetain(v12);
    }
    else
    {
      return re::TimebaseService::CreateAudioClock(0, v11);
    }
  }
  return result;
}

void re::ecs2::AudioPlayerComponent::playbackStateDidChange(uint64_t a1, unint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v76 = *MEMORY[0x263EF8340];
  uint64_t v8 = re::audioLogObjects((re *)a1);
  uint64_t v9 = (re *)re::AudioLogObjects::loggingEnabled((re::AudioLogObjects *)v8);
  if (v9)
  {
    uint64_t v54 = (id)*re::audioLogObjects(v9);
    if (os_log_type_enabled(v54, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v55 = *(void **)(a1 + 304);
      if (!v55) {
        uint64_t v55 = *(void **)(a1 + 352);
      }
      uint64_t v56 = *(void *)(a1 + 16);
      if (!v56) {
        goto LABEL_94;
      }
      uint64_t v57 = *(void *)(a1 + 16);
      do
      {
        uint64_t v58 = v57;
        uint64_t v57 = *(void *)(v57 + 24);
      }
      while (v57);
      if (*(void *)(v58 + 16))
      {
        do
        {
          uint64_t v60 = v56;
          uint64_t v56 = *(void *)(v56 + 24);
        }
        while (v56);
        uint64_t v59 = *(void *)(*(void *)(*(void *)(v60 + 16) + 104) + 272) >> 1;
      }
      else
      {
LABEL_94:
        uint64_t v59 = -1;
      }
      uint64_t v61 = v71;
      re::audio::nameForPlaybackState((uint64_t)a3, v71);
      if (v72 < 0) {
        uint64_t v61 = (void **)v71[0];
      }
      re::audio::nameForPlaybackState(a4, __p);
      if (v70 >= 0) {
        long long v62 = __p;
      }
      else {
        long long v62 = (void **)__p[0];
      }
      LODWORD(__b[0]) = 134219010;
      *(void **)((char *)__b + 4) = v55;
      WORD2(__b[1]) = 2048;
      *(void **)((char *)&__b[1] + 6) = (void *)v59;
      HIWORD(__b[2]) = 2048;
      __b[3] = (void *)a2;
      *(_WORD *)long long v74 = 2080;
      *(void *)&v74[2] = v61;
      *(_WORD *)&v74[10] = 2080;
      StringID v75 = v62;
      _os_log_debug_impl(&dword_233120000, v54, OS_LOG_TYPE_DEBUG, "AudioPlayerComponent (entityID=%llu, sceneID=%llu) stream %llu changed state from %s to %s", (uint8_t *)__b, 0x34u);
      if (v70 < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v72) < 0) {
        operator delete(v71[0]);
      }
    }
  }
  uint64_t v10 = re::ecs2::AudioPlayerComponent::sourceStateForToken((re::ecs2::AudioPlayerComponent *)a1, a2);
  uint64_t v11 = v10;
  if (v10)
  {
    int v12 = *(_DWORD *)(v10 + 724);
    if (v12 == 1)
    {
      BOOL v13 = 1;
    }
    else
    {
      BOOL v13 = v12 == 3;
      if (a4 == 1 && v12 == 2)
      {
LABEL_10:
        *(_DWORD *)(v10 + 724) = 0;
        goto LABEL_11;
      }
    }
    switch(a4)
    {
      case 0:
      case 3:
        if (a4 == 2 || v13) {
          goto LABEL_10;
        }
        break;
      case 2:
      case 5:
        goto LABEL_10;
      default:
        break;
    }
  }
LABEL_11:
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14) {
    goto LABEL_34;
  }
  uint64_t v15 = *(void *)(a1 + 16);
  do
  {
    uint64_t v16 = v15;
    uint64_t v15 = *(void *)(v15 + 24);
  }
  while (v15);
  if (!*(void *)(v16 + 16))
  {
LABEL_34:
    BOOL v20 = 0;
    uint64_t v19 = 0;
    LOBYTE(v21) = a4 == 2;
LABEL_35:
    if (!a3 && v21 || a3 == (void *)2 && !a4) {
      return;
    }
    goto LABEL_39;
  }
  uint64_t v17 = *(void *)(a1 + 16);
  do
  {
    uint64_t v18 = v17;
    uint64_t v17 = *(void *)(v17 + 24);
  }
  while (v17);
  uint64_t v19 = *(re::EventBus **)(*(void *)(v18 + 16) + 288);
  BOOL v20 = v19 != 0;
  BOOL v21 = a4 == 2;
  if (a4 != 2 || a3 != (void *)1 || !v19) {
    goto LABEL_35;
  }
  if (*(void *)(a1 + 392))
  {
    unint64_t v22 = 0x94D049BB133111EBLL
        * ((0xBF58476D1CE4E5B9 * (a2 ^ (a2 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (a2 ^ (a2 >> 30))) >> 27));
    uint64_t v23 = *(unsigned int *)(*(void *)(a1 + 400) + 4 * ((v22 ^ (v22 >> 31)) % *(unsigned int *)(a1 + 416)));
    if (v23 != 0x7FFFFFFF)
    {
      uint64_t v24 = *(void *)(a1 + 408);
      if (*(void *)(v24 + 32 * v23 + 16) == a2)
      {
LABEL_25:
        (*(void (**)(unint64_t))(v24 + 32 * v23 + 24))(a2);
      }
      else
      {
        while (1)
        {
          uint64_t v23 = *(_DWORD *)(v24 + 32 * v23 + 8) & 0x7FFFFFFF;
          if (v23 == 0x7FFFFFFF) {
            break;
          }
          if (*(void *)(v24 + 32 * v23 + 16) == a2) {
            goto LABEL_25;
          }
        }
      }
    }
  }
  __b[0] = (void *)a2;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF837B8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF837B8))
  {
    qword_26AF837B0 = re::EventBus::typeStringToId((re::EventBus *)((unint64_t)"29REAudioPlayerDidCompleteEvent" & 0x7FFFFFFFFFFFFFFFLL), v63);
    __cxa_guard_release(&qword_26AF837B8);
  }
  re::EventBus::publish(v19, v14, qword_26AF837B0, (uint64_t)__b, 8uLL, 0);
  if (v11)
  {
    if (*(void *)(v11 + 448) != -1)
    {
      uint64_t v25 = *(OpaqueCMTimebase **)(v11 + 696);
      if (v25)
      {
        if (CMTimebaseGetRate(*(CMTimebaseRef *)(v11 + 696)) != 0.0)
        {
          CMTimebaseGetTime(&time, v25);
          double Seconds = CMTimeGetSeconds(&time);
          if (Seconds >= re::ecs2::AudioPlayerComponent::assetDurationFor((re::ecs2::AudioPlayerComponent *)a1, a2)
                        + -0.01)
            re::ecs2::AudioPlayerComponent::doStop((re::ecs2::AudioPlayerComponent *)a1, a2, (re::AudioSourceState *)v11, 0);
        }
      }
    }
  }
  BOOL v20 = 1;
LABEL_39:
  BOOL v66 = v20;
  long long v65 = v19;
  uint64_t v67 = (void *)v14;
  *(_DWORD *)long long v74 = 0;
  memset(__b, 0, sizeof(__b));
  *(void *)&v74[4] = 0x7FFFFFFFLL;
  uint64_t v27 = *(void *)(a1 + 440);
  if (v27)
  {
    if (*(_DWORD *)(a1 + 468) <= 3u) {
      signed int v28 = 3;
    }
    else {
      signed int v28 = *(_DWORD *)(a1 + 468);
    }
    re::HashTable<re::StringID,unsigned int,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::init((uint64_t)__b, v27, v28);
    if (HIDWORD(__b[3]))
    {
      if (LODWORD(__b[3])) {
        memset_pattern16(__b[1], &unk_2343655D0, 4 * LODWORD(__b[3]));
      }
      unint64_t v29 = *(unsigned int *)v74;
      if (*(_DWORD *)v74)
      {
        uint64_t v30 = 0;
        unint64_t v31 = 0;
        do
        {
          long long v32 = (char *)__b[2] + v30;
          int v33 = *(_DWORD *)((char *)__b[2] + v30 + 8);
          if (v33 < 0)
          {
            *((_DWORD *)v32 + 2) = v33 & 0x7FFFFFFF;

            unint64_t v29 = *(unsigned int *)v74;
          }
          ++v31;
          v30 += 32;
        }
        while (v31 < v29);
      }
      HIDWORD(__b[3]) = 0;
      *(void *)long long v74 = 0x7FFFFFFF00000000;
      ++*(_DWORD *)&v74[8];
    }
    unsigned int v34 = *(_DWORD *)(a1 + 468);
    if (LODWORD(__b[3]) < v34) {
      re::HashTable<unsigned long long,void({block_pointer} {__strong})(unsigned long long,REAudioPlaybackState,REAudioPlaybackState),re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::setCapacity((uint64_t)__b, v34);
    }
    unint64_t v35 = *(unsigned int *)(a1 + 472);
    if (v35)
    {
      uint64_t v36 = 0;
      for (unint64_t i = 0; i < v35; ++i)
      {
        uint64_t v38 = (unint64_t *)(*(void *)(a1 + 456) + v36);
        if ((v38[1] & 0x80000000) != 0)
        {
          unint64_t v39 = *v38;
          uint64_t v40 = *(unsigned int *)&v74[4];
          unint64_t v41 = *v38 % LODWORD(__b[3]);
          if (*(_DWORD *)&v74[4] == 0x7FFFFFFF)
          {
            uint64_t v40 = *(unsigned int *)v74;
            int v42 = *(_DWORD *)v74;
            if (*(_DWORD *)v74 == LODWORD(__b[3]))
            {
              re::HashTable<unsigned long long,void({block_pointer} {__strong})(unsigned long long,REAudioPlaybackState,REAudioPlaybackState),re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::setCapacity((uint64_t)__b, 2 * HIDWORD(__b[3]));
              int v42 = *(_DWORD *)v74;
              unint64_t v41 = v39 % LODWORD(__b[3]);
            }
            *(_DWORD *)long long v74 = v42 + 1;
            long long v43 = __b[2];
            int v44 = *((_DWORD *)__b[2] + 8 * v40 + 2);
          }
          else
          {
            long long v43 = __b[2];
            int v44 = *((_DWORD *)__b[2] + 8 * *(unsigned int *)&v74[4] + 2);
            *(_DWORD *)&v74[4] = v44 & 0x7FFFFFFF;
          }
          v43[8 * v40 + 2] = v44 | 0x80000000;
          *((_DWORD *)__b[2] + 8 * v40 + 2) = *((_DWORD *)__b[2] + 8 * v40 + 2) & 0x80000000 | *((_DWORD *)__b[1] + v41);
          *((void *)__b[2] + 4 * v40) = v39;
          *((void *)__b[2] + 4 * v40 + 2) = v38[2];
          uint64_t v45 = (char *)__b[2] + 32 * v40;
          *((void *)v45 + 3) = _Block_copy((const void *)v38[3]);
          *((_DWORD *)__b[1] + v41) = v40;
          ++HIDWORD(__b[3]);
          unint64_t v35 = *(unsigned int *)(a1 + 472);
        }
        v36 += 32;
      }
    }
  }
  int v46 = *(_DWORD *)v74;
  if (*(_DWORD *)v74)
  {
    uint64_t v47 = 0;
    uint64_t v48 = (int *)((char *)__b[2] + 8);
    while (1)
    {
      int v49 = *v48;
      v48 += 8;
      if (v49 < 0) {
        break;
      }
      if (*(unsigned int *)v74 == ++v47)
      {
        LODWORD(v4re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = *(_DWORD *)v74;
        break;
      }
    }
  }
  else
  {
    LODWORD(v4re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 0;
  }
  if (*(_DWORD *)v74 != v47)
  {
    uint64_t v50 = v47;
    uint64_t v51 = __b[2];
    do
    {
      (*(void (**)(void))(v51[4 * v50 + 3] + 16))(v51[4 * v50 + 3]);
      uint64_t v51 = __b[2];
      if (*(_DWORD *)v74 <= (v47 + 1)) {
        int v52 = v47 + 1;
      }
      else {
        int v52 = *(_DWORD *)v74;
      }
      int v53 = v47;
      while (1)
      {
        uint64_t v50 = (v53 + 1);
        if (v52 - 1 == v53) {
          break;
        }
        ++v53;
        LODWORD(v4re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = v50;
        if ((*((_DWORD *)__b[2] + 8 * v50 + 2) & 0x80000000) != 0) {
          goto LABEL_80;
        }
      }
      LODWORD(v4re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = v52;
LABEL_80:
      ;
    }
    while (v46 != v47);
  }
  if (v66)
  {
    v71[0] = (void *)a2;
    v71[1] = a3;
    uint64_t v72 = a4;
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF837C8, memory_order_acquire) & 1) == 0)
    {
      if (__cxa_guard_acquire(&qword_26AF837C8))
      {
        qword_26AF837C0 = re::EventBus::typeStringToId((re::EventBus *)((unint64_t)"32REAudioPlayerDidChangeStateEvent" & 0x7FFFFFFFFFFFFFFFLL), v64);
        __cxa_guard_release(&qword_26AF837C8);
      }
    }
    re::EventBus::publish(v65, (uint64_t)v67, qword_26AF837C0, (uint64_t)v71, 0x18uLL, 0);
  }
  re::HashTable<unsigned long long,void({block_pointer} {__strong})(unsigned long long,REAudioPlaybackState,REAudioPlaybackState),re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::deinit((uint64_t *)__b);
}

re::ecs2::NetworkComponent *re::ecs2::AudioPlayerComponent::sourceStateForToken(re::ecs2::AudioPlayerComponent *this, unint64_t a2)
{
  unint64_t v8 = a2;
  uint64_t v3 = (char *)this + 80;
  uint64_t result = (re::ecs2::NetworkComponent *)re::HashTable<unsigned long long,re::PeerAttributionContext *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet((uint64_t)this + 80, (uint64_t *)&v8);
  if (result) {
    return *(re::ecs2::NetworkComponent **)result;
  }
  unint64_t v9 = v8;
  uint64_t result = (re::ecs2::NetworkComponent *)re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet((uint64_t)this + 32, (uint64_t *)&v9);
  if (result)
  {
    uint64_t v5 = result;
    uint64_t v6 = *((void *)this + 2);
    if (v6 && (uint64_t result = *(re::ecs2::NetworkComponent **)(v6 + 200)) != 0)
    {
      uint64_t result = (re::ecs2::NetworkComponent *)re::ecs2::NetworkComponent::owningProcessType(result);
      int v7 = (int)result;
    }
    else
    {
      int v7 = 0;
    }
    if (re::ecs2::AudioPlayerComponent::shouldCreateSourceStateForUnmatchedSyncState((uint64_t)result, (uint64_t)v5, v7)) {
      re::ecs2::AudioPlayerComponent::createSourceStateForUnmatchedSyncState(this, v8, (uint64_t)v5, v7, 0);
    }
    uint64_t result = (re::ecs2::NetworkComponent *)re::HashTable<unsigned long long,re::PeerAttributionContext *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet((uint64_t)v3, (uint64_t *)&v8);
    if (result) {
      return *(re::ecs2::NetworkComponent **)result;
    }
  }
  return result;
}

double re::ecs2::AudioPlayerComponent::assetDurationFor(re::ecs2::AudioPlayerComponent *this, unint64_t a2)
{
  uint64_t v2 = re::ecs2::AudioPlayerComponent::sourceStateForToken(this, a2);
  if (!v2) {
    return 0.0;
  }
  uint64_t v3 = re::AssetHandle::AssetHandle((re::AssetHandle *)v11, (const re::AssetHandle *)(v2 + 32));
  double v4 = 0.0;
  if (v12)
  {
    unsigned int v5 = atomic_load((unsigned int *)(v12 + 704));
    if (v5 == 2)
    {
      uint64_t v6 = *(uint64_t **)(v12 + 264);
      if (v6 == re::AudioFileAsset::assetType(v3))
      {
        uint64_t v7 = re::AssetHandle::loadedAsset<re::AudioFileAsset>((re::AudioFileAsset *)v11);
        double v8 = (double)*(unint64_t *)(v7 + 136);
        [*(id *)(*(void *)(v7 + 8) + 8) sampleRate];
        double v4 = v8 / v9;
      }
    }
  }
  re::AssetHandle::~AssetHandle((re::AssetHandle *)v11);
  return v4;
}

void re::ecs2::AudioPlayerComponent::doStop(re::ecs2::AudioPlayerComponent *this, unint64_t a2, re::AudioSourceState *a3, re::AudioSourceSyncState *a4)
{
  uint64_t v36 = *MEMORY[0x263EF8340];
  if (*((unsigned char *)a3 + 720)) {
    return;
  }
  double v8 = (re *)re::ecs2::AudioPlayerComponent::audioService(this);
  int v9 = *((unsigned __int8 *)a3 + 281);
  uint64_t v10 = (id)*re::audioLogObjects(v8);
  BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);
  if (v9)
  {
    if (v11)
    {
      uint64_t v12 = *((void *)this + 2);
      if (v12
        && (uint64_t v13 = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(v12 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioTransientComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType)) != 0)
      {
        uint64_t v14 = *(void *)(v13 + 32);
      }
      else
      {
        uint64_t v14 = 0;
      }
      uint64_t v18 = re::AssetHandle::assetInfo((re::AudioSourceState *)((char *)a3 + 32));
      if (v18[17]) {
        uint64_t v19 = (char *)v18[18];
      }
      else {
        uint64_t v19 = (char *)v18 + 137;
      }
      *(_DWORD *)buf = 134218499;
      unint64_t v31 = a2;
      __int16 v32 = 2048;
      uint64_t v33 = v14;
      __int16 v34 = 2085;
      unint64_t v35 = v19;
      BOOL v20 = "Setting token %llu from connection %llu to stop, REAsset = '%{sensitive}s'";
LABEL_22:
      _os_log_impl(&dword_233120000, v10, OS_LOG_TYPE_DEFAULT, v20, buf, 0x20u);
    }
  }
  else if (v11)
  {
    uint64_t v15 = *((void *)this + 2);
    if (v15
      && (uint64_t v16 = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(v15 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioTransientComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType)) != 0)
    {
      uint64_t v17 = *(void *)(v16 + 32);
    }
    else
    {
      uint64_t v17 = 0;
    }
    BOOL v21 = re::AssetHandle::assetInfo((re::AudioSourceState *)((char *)a3 + 32));
    if (v21[17]) {
      unint64_t v22 = (char *)v21[18];
    }
    else {
      unint64_t v22 = (char *)v21 + 137;
    }
    *(_DWORD *)buf = 134218498;
    unint64_t v31 = a2;
    __int16 v32 = 2048;
    uint64_t v33 = v17;
    __int16 v34 = 2080;
    unint64_t v35 = v22;
    BOOL v20 = "Setting token %llu from connection %llu to stop, REAsset = '%s'";
    goto LABEL_22;
  }

  if (a4) {
    *((void *)a4 + 4) = 0;
  }
  uint64_t v23 = (OpaqueCMTimebase *)*((void *)a3 + 87);
  if (v23)
  {
    CMClockOrTimebaseRef v24 = CMTimebaseCopySource(*((CMTimebaseRef *)a3 + 87));
    CMTime timebaseTime = *(CMTime *)*(void *)&MEMORY[0x263F010E0];
    CMSyncGetTime(&immediateSourceTime, v24);
    CMTimebaseSetRateAndAnchorTime(v23, 0.0, &timebaseTime, &immediateSourceTime);
    CFRelease(v24);
    if (v8)
    {
      uint64_t v26 = *((void *)a3 + 5);
      if (v26)
      {
        uint64_t v27 = *(uint64_t **)(v26 + 264);
        if (v27 == re::AudioFileGroupAsset::assetType(v25)) {
          (*(void (**)(re *, re::AudioSourceState *))(*(void *)v8 + 224))(v8, a3);
        }
      }
      else
      {
        re::AudioFileGroupAsset::assetType(v25);
      }
    }
    if (*((void *)a3 + 60)) {
      re::ecs2::AudioPlayerComponent::setRandomPlaybackPositionForTokenIfAppropriate(this, a2);
    }
  }
}

void re::ecs2::AudioPlayerComponent::registerAudioAsset(uint64_t a1, re::AssetHandle *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  canModifyState = (re *)re::ecs2::AudioPlayerComponent::canModifyState(*(re::ecs2::AudioPlayerComponent **)(a1 + 16));
  if (canModifyState)
  {
    re::DynamicArray<re::AssetHandle>::add((_anonymous_namespace_ *)(a1 + 168), a2);
  }
  else
  {
    unsigned int v5 = *re::audioLogObjects(canModifyState);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      uint64_t v6 = *(void *)(a1 + 304);
      if (!v6) {
        uint64_t v6 = *(void *)(a1 + 352);
      }
      int v7 = 134217984;
      uint64_t v8 = v6;
      _os_log_error_impl(&dword_233120000, v5, OS_LOG_TYPE_ERROR, "AudioPlayerComponent (entityID=%llu) cannot modify state because it is not owned.", (uint8_t *)&v7, 0xCu);
    }
  }
}

uint64_t re::ecs2::AudioPlayerComponent::canModifyState(re::ecs2::AudioPlayerComponent *this)
{
  if (!this) {
    return 1;
  }
  uint64_t v1 = *((void *)this + 25);
  if (!v1
    || !re::ecs2::NetworkComponent::owningProcessType(*((re::ecs2::NetworkComponent **)this + 25))
    || !*(void *)(v1 + 32))
  {
    return 1;
  }
  return RESyncableIsAuthoritative();
}

void re::ecs2::AudioPlayerComponent::unregisterAudioAsset(uint64_t a1, uint64_t a2)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  canModifyState = (re *)re::ecs2::AudioPlayerComponent::canModifyState(*(re::ecs2::AudioPlayerComponent **)(a1 + 16));
  if (canModifyState)
  {
    uint64_t v5 = *(void *)(a1 + 200);
    uint64_t v6 = *(void *)(a1 + 184);
    if (v6)
    {
      uint64_t v7 = 24 * v6;
      uint64_t v8 = *(void *)(a1 + 200);
      while (*(void *)(v8 + 8) != *(void *)(a2 + 8))
      {
        v8 += 24;
        v7 -= 24;
        if (!v7)
        {
          uint64_t v8 = v5 + 24 * v6;
          break;
        }
      }
    }
    else
    {
      uint64_t v8 = *(void *)(a1 + 200);
    }
    unint64_t v11 = 0xAAAAAAAAAAAAAAABLL * ((v8 - v5) >> 3);
    if (v11 != v6)
    {
      re::DynamicArray<re::AssetHandle>::removeAt(a1 + 168, v11);
    }
  }
  else
  {
    uint64_t v9 = *re::audioLogObjects(canModifyState);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      uint64_t v10 = *(void *)(a1 + 304);
      if (!v10) {
        uint64_t v10 = *(void *)(a1 + 352);
      }
      int v12 = 134217984;
      uint64_t v13 = v10;
      _os_log_error_impl(&dword_233120000, v9, OS_LOG_TYPE_ERROR, "AudioPlayerComponent (entityID=%llu) cannot modify state because it is not owned.", (uint8_t *)&v12, 0xCu);
    }
  }
}

uint64_t re::HashTable<unsigned long long,void (*)(unsigned long long),re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addOrReplace<void (*&)(unsigned long long)>(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = 0xBF58476D1CE4E5B9 * (*a2 ^ ((unint64_t)*a2 >> 30));
  unint64_t v8 = (0x94D049BB133111EBLL * (v7 ^ (v7 >> 27))) ^ ((0x94D049BB133111EBLL * (v7 ^ (v7 >> 27))) >> 31);
  if (!*(void *)a1)
  {
    LODWORD(v9) = 0;
    goto LABEL_8;
  }
  unint64_t v9 = v8 % *(unsigned int *)(a1 + 24);
  uint64_t v10 = *(unsigned int *)(*(void *)(a1 + 8) + 4 * v9);
  if (v10 == 0x7FFFFFFF)
  {
LABEL_8:
    unsigned int v13 = re::HashTable<unsigned long long,void (*)(unsigned long long),re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addEmplace<void (*&)(unsigned long long)>(a1, v9, v8, a2, a3);
    ++*(_DWORD *)(a1 + 40);
    uint64_t v12 = *(void *)(a1 + 16);
    uint64_t v10 = v13;
    return v12 + 32 * v10 + 24;
  }
  uint64_t v11 = *(void *)(a1 + 16);
  while (*(void *)(v11 + 32 * v10 + 16) != v6)
  {
    uint64_t v10 = *(_DWORD *)(v11 + 32 * v10 + 8) & 0x7FFFFFFF;
    if (v10 == 0x7FFFFFFF) {
      goto LABEL_8;
    }
  }
  *(void *)(v11 + 32 * v10 + 24) = *a3;
  ++*(_DWORD *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 16);
  return v12 + 32 * v10 + 24;
}

unint64_t re::ecs2::AudioPlayerComponent::prepare(uint64_t a1, re::AssetHandle *a2)
{
  uint64_t v84 = *MEMORY[0x263EF8340];
  atomic_fetch_add((atomic_uint *volatile)(a1 + 316), 1u);
  atomic_fetch_add((atomic_uint *volatile)(a1 + 324), 1u);
  canModifyState = (re *)re::ecs2::AudioPlayerComponent::canModifyState(*(re::ecs2::AudioPlayerComponent **)(a1 + 16));
  if ((canModifyState & 1) == 0)
  {
    unint64_t v22 = *re::audioLogObjects(canModifyState);
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
    {
      uint64_t v23 = *(void *)(a1 + 304);
      if (!v23) {
        uint64_t v23 = *(void *)(a1 + 352);
      }
      LODWORD(__buf[0]) = 134217984;
      *(void *)((char *)__buf + 4) = v23;
      CMClockOrTimebaseRef v24 = "AudioPlayerComponent (entityID=%llu) cannot modify state because it is not owned.";
      goto LABEL_27;
    }
    return 0;
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (!v5)
  {
    unint64_t v22 = *re::audioLogObjects(canModifyState);
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
    {
      uint64_t v25 = *(void *)(a1 + 304);
      if (!v25) {
        uint64_t v25 = *(void *)(a1 + 352);
      }
      LODWORD(__buf[0]) = 134217984;
      *(void *)((char *)__buf + 4) = v25;
      CMClockOrTimebaseRef v24 = "AudioPlayerComponent (entityID=%llu) received null asset";
LABEL_27:
      _os_log_error_impl(&dword_233120000, v22, OS_LOG_TYPE_ERROR, v24, (uint8_t *)__buf, 0xCu);
      return 0;
    }
    return 0;
  }
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
    uint64_t v26 = *re::audioLogObjects(canModifyState);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_FAULT))
    {
      LOWORD(__buf[0]) = 0;
      _os_log_fault_impl(&dword_233120000, v26, OS_LOG_TYPE_FAULT, "AudioPlayerComponent cannot prepare component without valid entity", (uint8_t *)__buf, 2u);
    }
    return 0;
  }
  unsigned int v7 = atomic_load((unsigned int *)(v5 + 704));
  if (v7 != 2) {
    re::AssetHandle::loadAsync(a2);
  }
  *(void *)&__buf[0] = 0;
  do
  {
    arc4random_buf(__buf, 8uLL);
    uint64_t v8 = *(void *)&__buf[0];
  }
  while (*(void *)&__buf[0] < 0x3E8uLL);
  unint64_t v61 = *(void *)&__buf[0];
  if (re::internal::enableSignposts(0, 0))
  {
    re::ecs2::AudioPlayerComponent::getOrInitializePrivateEntityID((re::ecs2::AudioPlayerComponent *)a1);
    re::AssetHandle::assetInfo(a2);
    kdebug_trace();
  }
  ShouldRedactSensitiveInfoFromLogs = (re *)REAudioShouldRedactSensitiveInfoFromLogs();
  int v10 = (int)ShouldRedactSensitiveInfoFromLogs;
  uint64_t v11 = (id)*re::audioLogObjects(ShouldRedactSensitiveInfoFromLogs);
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);
  if (v10)
  {
    if (v12)
    {
      unsigned int v13 = re::AssetHandle::assetInfo(a2);
      uint64_t v14 = (char *)v13 + 137;
      if (v13[17]) {
        uint64_t v14 = (char *)v13[18];
      }
      uint64_t v15 = *(void *)(a1 + 304);
      if (!v15) {
        uint64_t v15 = *(void *)(a1 + 352);
      }
      uint64_t v16 = *(void *)(v6 + 296);
      uint64_t v17 = v6;
      do
      {
        uint64_t v18 = v17;
        uint64_t v17 = *(void *)(v17 + 24);
      }
      while (v17);
      uint64_t v19 = *(void *)(v18 + 16);
      int v20 = *(_DWORD *)(v6 + 288) & 1;
      LODWORD(__buf[0]) = 134219267;
      *(void *)((char *)__buf + 4) = v8;
      WORD6(__buf[0]) = 2085;
      *(void *)((char *)__buf + 14) = v14;
      WORD3(__buf[1]) = 2048;
      *((void *)&__buf[1] + 1) = v16;
      *(_WORD *)long long v64 = 2048;
      *(void *)&v64[2] = v15;
      *(_WORD *)&v64[10] = 2048;
      *(void *)long long v65 = v19;
      *(_WORD *)&v65[8] = 1024;
      *(_DWORD *)&v65[10] = v20;
      BOOL v21 = "AudioPlayerComponent::prepare() Preparing token=%llu asset='%{sensitive}s' on RE Entity %llu (PHASE entity %"
            "llu) in scene %p isActive=%d";
LABEL_40:
      _os_log_impl(&dword_233120000, v11, OS_LOG_TYPE_DEFAULT, v21, (uint8_t *)__buf, 0x3Au);
    }
  }
  else if (v12)
  {
    unint64_t v29 = re::AssetHandle::assetInfo(a2);
    uint64_t v30 = (char *)v29 + 137;
    if (v29[17]) {
      uint64_t v30 = (char *)v29[18];
    }
    uint64_t v31 = *(void *)(a1 + 304);
    if (!v31) {
      uint64_t v31 = *(void *)(a1 + 352);
    }
    uint64_t v32 = *(void *)(v6 + 296);
    uint64_t v33 = v6;
    do
    {
      uint64_t v34 = v33;
      uint64_t v33 = *(void *)(v33 + 24);
    }
    while (v33);
    uint64_t v35 = *(void *)(v34 + 16);
    int v36 = *(_DWORD *)(v6 + 288) & 1;
    LODWORD(__buf[0]) = 134219266;
    *(void *)((char *)__buf + 4) = v8;
    WORD6(__buf[0]) = 2080;
    *(void *)((char *)__buf + 14) = v30;
    WORD3(__buf[1]) = 2048;
    *((void *)&__buf[1] + 1) = v32;
    *(_WORD *)long long v64 = 2048;
    *(void *)&v64[2] = v31;
    *(_WORD *)&v64[10] = 2048;
    *(void *)long long v65 = v35;
    *(_WORD *)&v65[8] = 1024;
    *(_DWORD *)&v65[10] = v36;
    BOOL v21 = "AudioPlayerComponent::prepare() Preparing token=%llu asset='%s' on RE Entity %llu (PHASE entity %llu) in scene %p isActive=%d";
    goto LABEL_40;
  }

  memset(__buf, 0, sizeof(__buf));
  *(void *)long long v64 = 9;
  *(_DWORD *)&v64[8] = 1065353216;
  *(_OWORD *)&v65[4] = 0uLL;
  int v66 = 0;
  uint64_t v67 = 1065353216;
  char v68 = 0;
  __asm { FMOV            V0.2S, #1.0 }
  uint64_t v69 = _D0;
  int v70 = 0;
  uint64_t v71 = 0;
  int v72 = 1065353216;
  v73[0] = 0;
  char v76 = 0;
  long long v78 = 0uLL;
  *((void *)&v77 + 1) = 0;
  long long v43 = (_anonymous_namespace_ *)re::DynamicString::setCapacity(&v77, 0);
  LODWORD(v79) = 1;
  *(void *)((char *)&v79 + 4) = 0x3E051EB800000000;
  HIDWORD(v79) = 1106247680;
  long long v80 = 0u;
  long long v81 = 0u;
  long long v82 = 0u;
  re::DynamicString::setCapacity(&v81, 0);
  __int16 v83 = 0;
  int v44 = (re::AudioGeneratorAsset *)re::AssetHandle::operator=((uint64_t)__buf + 8, (uint64_t *)a2);
  HIBYTE(v83) = v10;
  *(void *)&__buf[0] = 1;
  *(void *)long long v64 = 4;
  long long v79 = *(_OWORD *)(a1 + 208);
  unsigned int v45 = *(_DWORD *)(a1 + 284);
  int v72 = *(_DWORD *)(a1 + 256);
  *(_DWORD *)&v65[12] = 0;
  int v46 = *(_DWORD *)(a1 + 276);
  *(_DWORD *)&v65[16] = *(_DWORD *)(a1 + 280);
  int v66 = v46;
  uint64_t v67 = v45;
  uint64_t v47 = *((void *)a2 + 1);
  if (v47)
  {
    uint64_t v48 = *(uint64_t **)(v47 + 264);
    int v49 = re::AudioGeneratorAsset::assetType(v44);
    if (v48 == v49)
    {
      arc4random_buf(&v80, 8uLL);
      arc4random_buf((char *)&v80 + 8, 8uLL);
    }
  }
  else
  {
    int v49 = re::AudioGeneratorAsset::assetType(v44);
  }
  if (v7 == 2)
  {
    uint64_t v50 = *((void *)a2 + 1);
    if (v50)
    {
      uint64_t v51 = *(re::AudioGeneratorAsset **)(v50 + 264);
      int v52 = (re::AudioGeneratorAsset *)re::AudioFileAsset::assetType((re::AudioFileAsset *)v49);
      if (v51 == v52)
      {
        uint64_t v53 = re::AssetHandle::loadedAsset<re::AudioFileAsset>(a2);
        int v52 = (re::AudioGeneratorAsset *)re::Optional<re::DynamicString>::operator=(v73, (unsigned __int8 *)(v53 + 56));
      }
    }
    else
    {
      int v52 = (re::AudioGeneratorAsset *)re::AudioFileAsset::assetType((re::AudioFileAsset *)v49);
    }
    uint64_t v54 = *((void *)a2 + 1);
    if (v54)
    {
      uint64_t v55 = *(uint64_t **)(v54 + 264);
      if (v55 == re::AudioGeneratorAsset::assetType(v52))
      {
        uint64_t v56 = re::AssetHandle::loadedAsset<re::AudioGeneratorAsset>(a2);
        re::Optional<re::DynamicString>::operator=(v73, (unsigned __int8 *)(v56 + 8));
      }
    }
    else
    {
      re::AudioGeneratorAsset::assetType(v52);
    }
  }
  re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addOrReplace<re::AudioSourceSyncState&>(a1 + 32, (uint64_t *)&v61, (uint64_t)__buf);
  uint64_t v57 = re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet(a1 + 32, (uint64_t *)&v61);
  if (v57)
  {
    uint64_t v58 = v57;
    int v59 = re::ecs2::AudioPlayerComponent::selectInputMode((re::ecs2::AudioPlayerComponent *)a1, v61);
    *(unsigned char *)(v58 + 152) = v59;
    if (v59)
    {
      *(_DWORD *)(v58 + 192) = 0;
      *(_DWORD *)(a1 + 208) = 0;
    }
  }
  unint64_t v62 = v61;
  uint64_t v60 = re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet(a1 + 32, (uint64_t *)&v62);
  re::ecs2::AudioPlayerComponent::createSourceStateForUnmatchedSyncState((re::ecs2::AudioPlayerComponent *)a1, v62, v60, 0, 0);
  unint64_t v27 = v61;
  if ((void)v81)
  {
    if (BYTE8(v81)) {
      (*(void (**)(void))(*(void *)v81 + 40))();
    }
    long long v81 = 0u;
    long long v82 = 0u;
  }
  if ((void)v77)
  {
    if (BYTE8(v77)) {
      (*(void (**)(void))(*(void *)v77 + 40))();
    }
    long long v77 = 0u;
    long long v78 = 0u;
  }
  if (v73[0] && (void)v74)
  {
    if (BYTE8(v74)) {
      (*(void (**)(void))(*(void *)v74 + 40))();
    }
    long long v74 = 0u;
    long long v75 = 0u;
  }
  re::AssetHandle::~AssetHandle((re::AssetHandle *)((char *)__buf + 8));
  return v27;
}

unint64_t re::ecs2::AudioPlayerComponent::getOrInitializePrivateEntityID(re::ecs2::AudioPlayerComponent *this)
{
  unint64_t result = *((void *)this + 38);
  uint64_t v3 = *((void *)this + 44);
  if (result)
  {
    if (result != v3) {
      *((void *)this + 44) = result;
    }
    return result;
  }
  unint64_t result = *((void *)this + 44);
  if (v3) {
    return result;
  }
  uint64_t v4 = *((void *)this + 2);
  if (!v4)
  {
    for (__buf = 0; __buf < 0x3E8; unint64_t result = __buf)
      arc4random_buf(&__buf, 8uLL);
    *((void *)this + 44) = __buf;
    goto LABEL_12;
  }
  unint64_t result = *(void *)(v4 + 296);
  *((void *)this + 44) = result;
  uint64_t v5 = *(re::ecs2::NetworkComponent **)(v4 + 200);
  if (!v5 || (v6 = re::ecs2::NetworkComponent::owningProcessType(v5), unint64_t result = *((void *)this + 44), !v6)) {
LABEL_12:
  }
    *((void *)this + 38) = result;
  return result;
}

re::DynamicString *re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addOrReplace<re::AudioSourceSyncState&>(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = 0xBF58476D1CE4E5B9 * (*a2 ^ ((unint64_t)*a2 >> 30));
  unint64_t v8 = (0x94D049BB133111EBLL * (v7 ^ (v7 >> 27))) ^ ((0x94D049BB133111EBLL * (v7 ^ (v7 >> 27))) >> 31);
  unint64_t v9 = *(void *)a1;
  if (!*(void *)a1
    || (unint64_t v9 = v8 % *(unsigned int *)(a1 + 24),
        uint64_t v10 = *(unsigned int *)(*(void *)(a1 + 8) + 4 * v9),
        v10 == 0x7FFFFFFF))
  {
LABEL_3:
    uint64_t v11 = *(unsigned int *)(a1 + 36);
    if (v11 == 0x7FFFFFFF)
    {
      uint64_t v11 = *(unsigned int *)(a1 + 32);
      int v12 = v11;
      if (v11 == *(_DWORD *)(a1 + 24))
      {
        re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::setCapacity(a1, 2 * *(_DWORD *)(a1 + 28));
        LODWORD(v9) = v8 % *(unsigned int *)(a1 + 24);
        int v12 = *(_DWORD *)(a1 + 32);
        uint64_t v6 = *a2;
      }
      *(_DWORD *)(a1 + 32) = v12 + 1;
      uint64_t v13 = *(void *)(a1 + 16);
      int v14 = *(_DWORD *)(v13 + 288 * v11 + 8);
    }
    else
    {
      uint64_t v13 = *(void *)(a1 + 16);
      int v14 = *(_DWORD *)(v13 + 288 * v11 + 8);
      *(_DWORD *)(a1 + 36) = v14 & 0x7FFFFFFF;
    }
    *(_DWORD *)(v13 + 288 * v11 + 8) = v14 | 0x80000000;
    uint64_t v15 = v9;
    *(_DWORD *)(*(void *)(a1 + 16) + 288 * v11 + 8) = *(_DWORD *)(*(void *)(a1 + 16) + 288 * v11 + 8) & 0x80000000 | *(_DWORD *)(*(void *)(a1 + 8) + 4 * v9);
    *(void *)(*(void *)(a1 + 16) + 288 * vre::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 11) = v8;
    *(void *)(*(void *)(a1 + 16) + 288 * v11 + 16) = v6;
    uint64_t v16 = *(void *)(a1 + 16);
    uint64_t v17 = v16 + 288 * v11;
    *(void *)(v17 + 24) = *(void *)a3;
    re::AssetHandle::AssetHandle((re::AssetHandle *)(v17 + 32), (const re::AssetHandle *)(a3 + 8));
    *(_OWORD *)(v17 + 56) = *(_OWORD *)(a3 + 32);
    long long v18 = *(_OWORD *)(a3 + 48);
    long long v19 = *(_OWORD *)(a3 + 64);
    long long v20 = *(_OWORD *)(a3 + 80);
    *(_OWORD *)(v17 + 116) = *(_OWORD *)(a3 + 92);
    *(_OWORD *)(v17 + 104) = v20;
    *(_OWORD *)(v17 + 88) = v19;
    *(_OWORD *)(v17 + 72) = v18;
    int v21 = *(unsigned __int8 *)(a3 + 112);
    *(unsigned char *)(v17 + 136) = v21;
    if (v21) {
      re::DynamicString::DynamicString((re::DynamicString *)(v16 + 288 * v11 + 144), (const re::DynamicString *)(a3 + 120));
    }
    uint64_t v22 = v16 + 288 * v11;
    *(unsigned char *)(v22 + 176) = *(unsigned char *)(a3 + 152);
    re::DynamicString::DynamicString((re::DynamicString *)(v22 + 184), (const re::DynamicString *)(a3 + 160));
    long long v23 = *(_OWORD *)(a3 + 192);
    *(_OWORD *)(v22 + 232) = *(_OWORD *)(a3 + 208);
    *(_OWORD *)(v22 + 216) = v23;
    unint64_t result = re::DynamicString::DynamicString((re::DynamicString *)(v22 + 248), (const re::DynamicString *)(a3 + 224));
    *(_WORD *)(v22 + 280) = *(_WORD *)(a3 + 256);
    *(_DWORD *)(*(void *)(a1 + 8) + 4 * v1re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = v11;
    ++*(_DWORD *)(a1 + 28);
    goto LABEL_19;
  }
  uint64_t v25 = *(void *)(a1 + 16);
  while (*(void *)(v25 + 288 * v10 + 16) != v6)
  {
    int v26 = *(_DWORD *)(v25 + 288 * v10 + 8);
    uint64_t v10 = v26 & 0x7FFFFFFF;
    if ((v26 & 0x7FFFFFFF) == 0x7FFFFFFF) {
      goto LABEL_3;
    }
  }
  unint64_t v27 = (unsigned char *)(v25 + 288 * v10);
  re::DynamicString::deinit((re::DynamicString *)(v27 + 248));
  re::DynamicString::deinit((re::DynamicString *)(v27 + 184));
  if (v27[136]) {
    re::DynamicString::deinit((re::DynamicString *)(v25 + 288 * v10 + 144));
  }
  re::AssetHandle::~AssetHandle((re::AssetHandle *)(v25 + 288 * v10 + 32));
  uint64_t v28 = *(void *)(a1 + 16);
  uint64_t v29 = v28 + 288 * v10;
  *(void *)(v29 + 24) = *(void *)a3;
  re::AssetHandle::AssetHandle((re::AssetHandle *)(v29 + 32), (const re::AssetHandle *)(a3 + 8));
  *(_OWORD *)(v29 + 56) = *(_OWORD *)(a3 + 32);
  long long v30 = *(_OWORD *)(a3 + 48);
  long long v31 = *(_OWORD *)(a3 + 64);
  long long v32 = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(v29 + 116) = *(_OWORD *)(a3 + 92);
  *(_OWORD *)(v29 + 104) = v32;
  *(_OWORD *)(v29 + 88) = v31;
  *(_OWORD *)(v29 + 72) = v30;
  int v33 = *(unsigned __int8 *)(a3 + 112);
  *(unsigned char *)(v29 + 136) = v33;
  if (v33) {
    re::DynamicString::DynamicString((re::DynamicString *)(v28 + 288 * v10 + 144), (const re::DynamicString *)(a3 + 120));
  }
  uint64_t v34 = v28 + 288 * v10;
  *(unsigned char *)(v34 + 176) = *(unsigned char *)(a3 + 152);
  re::DynamicString::DynamicString((re::DynamicString *)(v34 + 184), (const re::DynamicString *)(a3 + 160));
  long long v35 = *(_OWORD *)(a3 + 192);
  *(_OWORD *)(v34 + 232) = *(_OWORD *)(a3 + 208);
  *(_OWORD *)(v34 + 216) = v35;
  unint64_t result = re::DynamicString::DynamicString((re::DynamicString *)(v34 + 248), (const re::DynamicString *)(a3 + 224));
  *(_WORD *)(v34 + 280) = *(_WORD *)(a3 + 256);
LABEL_19:
  ++*(_DWORD *)(a1 + 40);
  return result;
}

uint64_t re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)a1) {
    return 0;
  }
  uint64_t v2 = *a2;
  unint64_t v3 = 0xBF58476D1CE4E5B9 * (*a2 ^ ((unint64_t)*a2 >> 30));
  uint64_t v4 = *(unsigned int *)(*(void *)(a1 + 8)
                       + 4
                       * (((0x94D049BB133111EBLL * (v3 ^ (v3 >> 27))) ^ ((0x94D049BB133111EBLL * (v3 ^ (v3 >> 27))) >> 31))
                        % *(unsigned int *)(a1 + 24)));
  if (v4 == 0x7FFFFFFF) {
    return 0;
  }
  uint64_t v6 = *(void *)(a1 + 16);
  if (*(void *)(v6 + 288 * v4 + 16) != v2)
  {
    while (1)
    {
      LODWORD(v4) = *(_DWORD *)(v6 + 288 * v4 + 8) & 0x7FFFFFFF;
      if (v4 == 0x7FFFFFFF) {
        break;
      }
      if (*(void *)(v6 + 288 * v4 + 16) == v2) {
        return v6 + 288 * v4 + 24;
      }
    }
    return 0;
  }
  return v6 + 288 * v4 + 24;
}

uint64_t re::ecs2::AudioPlayerComponent::selectInputMode(re::ecs2::AudioPlayerComponent *this, uint64_t a2)
{
  uint64_t v2 = *((void *)this + 2);
  if (!v2) {
    return 0;
  }
  uint64_t v5 = *(unsigned __int16 *)(v2 + 82);
  if (*(_WORD *)(v2 + 82))
  {
    uint64_t v6 = (const __int16 *)((char *)re::ecs2::ComponentImpl<re::ecs2::SpatialAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                         + 16);
    int16x8_t v7 = vld1q_dup_s16(v6);
    unint64_t v8 = *(int16x8_t **)(v2 + 88);
    int v9 = 1;
    uint64_t v10 = v8;
    uint64_t v11 = *(unsigned __int16 *)(v2 + 82);
    while (1)
    {
      uint16x8_t v12 = (uint16x8_t)vandq_s8((int8x16_t)vceqq_s16(v7, *v10), (int8x16_t)xmmword_23436BBD0);
      v12.i16[0] = vmaxvq_u16(v12);
      if (v12.i32[0]) {
        break;
      }
      v9 -= 8;
      ++v10;
      if (!--v11) {
        goto LABEL_8;
      }
    }
    if (v12.u16[0] - v9 < *(unsigned __int16 *)(v2 + 80)) {
      return 0;
    }
LABEL_8:
    uint64_t v13 = (const __int16 *)((char *)re::ecs2::ComponentImpl<re::ecs2::AmbientAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                          + 16);
    int16x8_t v14 = vld1q_dup_s16(v13);
    int v15 = 1;
    uint64_t v16 = *(int16x8_t **)(v2 + 88);
    uint64_t v17 = *(unsigned __int16 *)(v2 + 82);
    while (1)
    {
      uint16x8_t v18 = (uint16x8_t)vandq_s8((int8x16_t)vceqq_s16(v14, *v16), (int8x16_t)xmmword_23436BBD0);
      v18.i16[0] = vmaxvq_u16(v18);
      if (v18.i32[0]) {
        break;
      }
      v15 -= 8;
      ++v16;
      if (!--v17) {
        goto LABEL_14;
      }
    }
    if (v18.u16[0] - v15 < *(unsigned __int16 *)(v2 + 80)) {
      return 2;
    }
LABEL_14:
    long long v20 = (const __int16 *)((char *)re::ecs2::ComponentImpl<re::ecs2::ChannelAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                          + 16);
    int16x8_t v21 = vld1q_dup_s16(v20);
    int v22 = 1;
    while (1)
    {
      uint16x8_t v23 = (uint16x8_t)vandq_s8((int8x16_t)vceqq_s16(v21, *v8), (int8x16_t)xmmword_23436BBD0);
      v23.i16[0] = vmaxvq_u16(v23);
      if (v23.i32[0]) {
        break;
      }
      v22 -= 8;
      ++v8;
      if (!--v5) {
        goto LABEL_20;
      }
    }
    if (v23.u16[0] - v22 < *(unsigned __int16 *)(v2 + 80)) {
      return 1;
    }
  }
LABEL_20:
  if (!re::ecs2::AudioPlayerComponent::hasInputModeOverride(this, a2))
  {
    uint64_t v42 = a2;
    uint64_t result = re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet((uint64_t)this + 32, &v42);
    if (!result) {
      return result;
    }
    uint64_t v24 = result;
    uint64_t v25 = *(void *)(result + 16);
    if (!v25) {
      return 0;
    }
    unsigned int v26 = atomic_load((unsigned int *)(v25 + 704));
    if (v26 != 2) {
      return 0;
    }
    unint64_t v27 = (re::AudioFileGroupAsset *)(result + 8);
    uint64_t v28 = *(void *)(result + 16);
    if (v28)
    {
      uint64_t v29 = *(uint64_t **)(v28 + 264);
      long long v30 = re::AudioFileAsset::assetType((re::AudioFileAsset *)result);
      if (v29 == v30)
      {
        long long v31 = (re::AudioFileAsset *)(v24 + 8);
        return *(unsigned __int8 *)(re::AssetHandle::loadedAsset<re::AudioFileAsset>(v31) + 52);
      }
    }
    else
    {
      long long v30 = re::AudioFileAsset::assetType((re::AudioFileAsset *)result);
    }
    uint64_t v32 = *(void *)(v24 + 16);
    if (v32)
    {
      int v33 = *(uint64_t **)(v32 + 264);
      uint64_t v34 = re::AudioGeneratorAsset::assetType((re::AudioGeneratorAsset *)v30);
      if (v33 == v34) {
        return 0;
      }
    }
    else
    {
      uint64_t v34 = re::AudioGeneratorAsset::assetType((re::AudioGeneratorAsset *)v30);
    }
    uint64_t v35 = *(void *)(v24 + 16);
    if (v35)
    {
      int v36 = *(uint64_t **)(v35 + 264);
      if (v36 == re::AudioFileGroupAsset::assetType((re::AudioFileGroupAsset *)v34))
      {
        uint64_t result = re::AssetHandle::loadedAsset<re::AudioFileGroupAsset>(v27);
        if (!result) {
          return result;
        }
        uint64_t v37 = result;
        if (*(void *)(result + 24))
        {
          uint64_t v38 = *(void *)(*(void *)(result + 40) + 8);
          if (v38)
          {
            unint64_t v39 = *(uint64_t **)(v38 + 264);
            if (v39 == re::AudioFileAsset::assetType((re::AudioFileAsset *)result))
            {
              uint64_t v40 = *(void *)(*(void *)(v37 + 40) + 8);
              if (v40)
              {
                unsigned int v41 = atomic_load((unsigned int *)(v40 + 704));
                if (v41 == 2)
                {
                  long long v31 = *(re::AudioFileAsset **)(v37 + 40);
                  return *(unsigned __int8 *)(re::AssetHandle::loadedAsset<re::AudioFileAsset>(v31) + 52);
                }
              }
            }
          }
          else
          {
            re::AudioFileAsset::assetType((re::AudioFileAsset *)result);
          }
        }
      }
    }
    else
    {
      re::AudioFileGroupAsset::assetType((re::AudioFileGroupAsset *)v34);
    }
    return 0;
  }
  return re::ecs2::AudioPlayerComponent::getInputModeOverride(this, a2);
}

uint64_t re::ecs2::AudioPlayerComponent::prepare(re::ecs2::AudioPlayerComponent *this, __CFString *a2)
{
  uint64_t v53 = *MEMORY[0x263EF8340];
  atomic_fetch_add((atomic_uint *volatile)this + 79, 1u);
  canModifyState = (re *)re::ecs2::AudioPlayerComponent::canModifyState(*((re::ecs2::AudioPlayerComponent **)this + 2));
  if ((canModifyState & 1) == 0)
  {
    uint64_t v6 = *re::audioLogObjects(canModifyState);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      uint64_t v9 = *((void *)this + 38);
      if (!v9) {
        uint64_t v9 = *((void *)this + 44);
      }
      *(_DWORD *)buf = 134217984;
      *(void *)&uint8_t buf[4] = v9;
      unint64_t v8 = "AudioPlayerComponent (entityID=%llu) cannot modify state because it is not owned.";
      goto LABEL_16;
    }
    return 0;
  }
  if (!a2)
  {
    uint64_t v6 = *re::audioLogObjects(canModifyState);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      uint64_t v10 = *((void *)this + 38);
      if (!v10) {
        uint64_t v10 = *((void *)this + 44);
      }
      *(_DWORD *)buf = 134217984;
      *(void *)&uint8_t buf[4] = v10;
      unint64_t v8 = "AudioPlayerComponent (entityID=%llu) received null sts label";
      goto LABEL_16;
    }
    return 0;
  }
  uint64_t v5 = (re *)[(__CFString *)a2 isEqualToString:&stru_26E738380];
  if (v5)
  {
    uint64_t v6 = *re::audioLogObjects(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      uint64_t v7 = *((void *)this + 38);
      if (!v7) {
        uint64_t v7 = *((void *)this + 44);
      }
      *(_DWORD *)buf = 134217984;
      *(void *)&uint8_t buf[4] = v7;
      unint64_t v8 = "AudioPlayerComponent (entityID=%llu) received empty sts label";
LABEL_16:
      _os_log_error_impl(&dword_233120000, v6, OS_LOG_TYPE_ERROR, v8, buf, 0xCu);
      return 0;
    }
    return 0;
  }
  *(void *)buf = 0;
  do
  {
    arc4random_buf(buf, 8uLL);
    uint64_t v11 = *(void *)buf;
  }
  while (*(void *)buf < 0x3E8uLL);
  uint64_t v25 = *(void *)buf;
  *(_OWORD *)buf = 0u;
  long long v30 = 0u;
  uint64_t v31 = 9;
  int v32 = 1065353216;
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  int v35 = 0;
  uint64_t v36 = 1065353216;
  char v37 = 0;
  __asm { FMOV            V0.2S, #1.0 }
  uint64_t v38 = _D0;
  int v39 = 0;
  uint64_t v40 = 0;
  int v41 = 1065353216;
  char v42 = 0;
  char v45 = 0;
  long long v47 = 0uLL;
  *((void *)&v46 + 1) = 0;
  long long v19 = (_anonymous_namespace_ *)re::DynamicString::setCapacity(&v46, 0);
  *(void *)((char *)&v48 + 4) = 0x3E051EB800000000;
  LODWORD(v48) = 1;
  HIDWORD(v48) = 1106247680;
  long long v49 = 0u;
  long long v50 = 0u;
  long long v51 = 0u;
  re::DynamicString::setCapacity(&v50, 0);
  __int16 v52 = 0;
  long long v20 = a2;
  *(void *)unsigned int v26 = [(__CFString *)v20 UTF8String];
  *(void *)&v26[8] = strlen(*(const char **)v26);
  re::DynamicString::operator=((re::DynamicString *)&v50, (uint64_t)v26);
  *(void *)buf = 1;
  uint64_t v31 = 4;
  long long v48 = *((_OWORD *)this + 13);
  LODWORD(v36) = *((_DWORD *)this + 71);
  re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addOrReplace<re::AudioSourceSyncState&>((uint64_t)this + 32, &v25, (uint64_t)buf);
  *(void *)unsigned int v26 = v11;
  uint64_t v21 = re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet((uint64_t)this + 32, (uint64_t *)v26);
  re::ecs2::AudioPlayerComponent::createSourceStateForUnmatchedSyncState(this, *(unint64_t *)v26, v21, 0, 0);
  uint16x8_t v23 = *re::audioLogObjects(v22);
  if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v24 = *((void *)this + 38);
    if (!v24) {
      uint64_t v24 = *((void *)this + 44);
    }
    *(_DWORD *)unsigned int v26 = 134218498;
    *(void *)&v26[4] = v24;
    *(_WORD *)&v26[12] = 2048;
    *(void *)&v26[14] = v11;
    __int16 v27 = 2112;
    uint64_t v28 = v20;
    _os_log_impl(&dword_233120000, v23, OS_LOG_TYPE_DEFAULT, "AudioPlayerComponent (entityID=%llu) Prepared source state token %llu with sts label %@", v26, 0x20u);
  }
  if ((void)v50)
  {
    if (BYTE8(v50)) {
      (*(void (**)(void))(*(void *)v50 + 40))();
    }
    long long v50 = 0u;
    long long v51 = 0u;
  }
  if ((void)v46)
  {
    if (BYTE8(v46)) {
      (*(void (**)(void))(*(void *)v46 + 40))();
    }
    long long v46 = 0u;
    long long v47 = 0u;
  }
  if (v42 && (void)v43)
  {
    if (BYTE8(v43)) {
      (*(void (**)(void))(*(void *)v43 + 40))();
    }
    long long v43 = 0u;
    long long v44 = 0u;
  }
  re::AssetHandle::~AssetHandle((re::AssetHandle *)&buf[8]);
  return v11;
}

unint64_t re::ecs2::AudioPlayerComponent::prepare(uint64_t a1, void *a2, int a3, int a4, double a5, double a6)
{
  uint64_t v99 = *MEMORY[0x263EF8340];
  uint64_t v11 = a2;
  uint16x8_t v12 = v11;
  atomic_fetch_add((atomic_uint *volatile)(a1 + 316), 1u);
  atomic_fetch_add((atomic_uint *volatile)(a1 + 324), 1u);
  uint64_t v13 = *(void **)(a1 + 16);
  if (!v13)
  {
    uint16x8_t v23 = *re::audioLogObjects(v11);
    if (!os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
      goto LABEL_30;
    }
    LODWORD(__buf[0]) = 138412546;
    *(void *)((char *)__buf + 4) = v12;
    WORD6(__buf[0]) = 2048;
    *(void *)((char *)__buf + 14) = a1;
    uint64_t v21 = "cannot prepare external stream %@ on component %p that does not have entity";
LABEL_17:
    int v22 = v23;
    goto LABEL_18;
  }
  canModifyState = (re *)re::ecs2::AudioPlayerComponent::canModifyState(*(re::ecs2::AudioPlayerComponent **)(a1 + 16));
  if ((canModifyState & 1) == 0)
  {
    uint16x8_t v23 = *re::audioLogObjects(canModifyState);
    if (!os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
      goto LABEL_30;
    }
    uint64_t v24 = *(void *)(a1 + 304);
    if (!v24) {
      uint64_t v24 = *(void *)(a1 + 352);
    }
    LODWORD(__buf[0]) = 134218240;
    *(void *)((char *)__buf + 4) = v24;
    WORD6(__buf[0]) = 2048;
    *(void *)((char *)__buf + 14) = a1;
    uint64_t v21 = "AudioPlayerComponent (entityID=%llu) %p cannot modify state because it is not owned.";
    goto LABEL_17;
  }
  if (!v12)
  {
    unsigned int v26 = *re::audioLogObjects(canModifyState);
    if (!os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      goto LABEL_30;
    }
    uint64_t v27 = *(void *)(a1 + 304);
    if (!v27) {
      uint64_t v27 = *(void *)(a1 + 352);
    }
    uint64_t v28 = v26;
    uint64_t v29 = v13[35];
    LODWORD(__buf[0]) = 134218498;
    *(void *)((char *)__buf + 4) = v27;
    WORD6(__buf[0]) = 2048;
    *(void *)((char *)__buf + 14) = a1;
    WORD3(__buf[1]) = 2080;
    *((void *)&__buf[1] + 1) = v29;
    long long v30 = "AudioPlayerComponent (entityID=%llu) %p (entity %s) received nil external stream UUID";
LABEL_28:
    _os_log_error_impl(&dword_233120000, v28, OS_LOG_TYPE_ERROR, v30, (uint8_t *)__buf, 0x20u);

    goto LABEL_30;
  }
  long long v98 = 0uLL;
  int v15 = (re *)[(re *)v12 getUUIDBytes:&v98];
  uint64_t v96 = 0;
  uint64_t v97 = 0;
  if (v98 == 0)
  {
    uint64_t v31 = *re::audioLogObjects(v15);
    if (!os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
      goto LABEL_30;
    }
    uint64_t v32 = *(void *)(a1 + 304);
    if (!v32) {
      uint64_t v32 = *(void *)(a1 + 352);
    }
    uint64_t v28 = v31;
    uint64_t v33 = v13[35];
    LODWORD(__buf[0]) = 134218498;
    *(void *)((char *)__buf + 4) = v32;
    WORD6(__buf[0]) = 2048;
    *(void *)((char *)__buf + 14) = a1;
    WORD3(__buf[1]) = 2080;
    *((void *)&__buf[1] + 1) = v33;
    long long v30 = "AudioPlayerComponent (entityID=%llu) %p (entity %s) received all-zero external stream UUID";
    goto LABEL_28;
  }
  uint64_t v16 = re::ecs2::EntityComponentCollection::getOrAdd((re::ecs2::EntityComponentCollection *)(v13 + 4), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioTransientComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType);
  if (!v16)
  {
    uint64_t v34 = *re::audioLogObjects(0);
    if (!os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
      goto LABEL_30;
    }
    LODWORD(__buf[0]) = 138412290;
    *(void *)((char *)__buf + 4) = v12;
    uint64_t v21 = "cannot prepare external stream %@ b/c failed to create transient component";
    int v22 = v34;
    uint32_t v25 = 12;
    goto LABEL_19;
  }
  uint64_t v17 = v16;
  *(void *)&__buf[0] = 0;
  do
    arc4random_buf(__buf, 8uLL);
  while (*(void *)&__buf[0] < 0x3E8uLL);
  unint64_t v65 = *(void *)&__buf[0];
  uint16x8_t v18 = (unint64_t *)(v17 + 88);
  long long v19 = (re *)re::HashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet(v17 + 88, (uint64_t *)&v65);
  if (v19)
  {
    long long v20 = *re::audioLogObjects(v19);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
    {
      LODWORD(__buf[0]) = 138412546;
      *(void *)((char *)__buf + 4) = v12;
      WORD6(__buf[0]) = 2048;
      *(void *)((char *)__buf + 14) = v65;
      uint64_t v21 = "cannot prepare external stream %@ with token %llu that collides with existing external stream";
      int v22 = v20;
LABEL_18:
      uint32_t v25 = 22;
LABEL_19:
      _os_log_error_impl(&dword_233120000, v22, OS_LOG_TYPE_ERROR, v21, (uint8_t *)__buf, v25);
    }
LABEL_30:
    unint64_t v35 = 0;
    goto LABEL_31;
  }
  unint64_t v37 = v65;
  unint64_t v38 = 0x94D049BB133111EBLL
      * ((0xBF58476D1CE4E5B9 * (v65 ^ (v65 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (v65 ^ (v65 >> 30))) >> 27));
  unint64_t v39 = v38 ^ (v38 >> 31);
  unint64_t v40 = *v18;
  if (!*v18) {
    goto LABEL_34;
  }
  unint64_t v40 = v39 % *(unsigned int *)(v17 + 112);
  uint64_t v41 = *(unsigned int *)(*(void *)(v17 + 96) + 4 * v40);
  if (v41 == 0x7FFFFFFF) {
    goto LABEL_34;
  }
  uint64_t v64 = *(void *)(v17 + 104);
  if (*(void *)(v64 + 48 * v41 + 16) != v65)
  {
    while (1)
    {
      LODWORD(v41) = *(_DWORD *)(v64 + 48 * v41 + 8) & 0x7FFFFFFF;
      if (v41 == 0x7FFFFFFF) {
        break;
      }
      if (*(void *)(v64 + 48 * v41 + 16) == v65) {
        goto LABEL_40;
      }
    }
LABEL_34:
    uint64_t v42 = *(unsigned int *)(v17 + 124);
    if (v42 == 0x7FFFFFFF)
    {
      uint64_t v42 = *(unsigned int *)(v17 + 120);
      int v43 = v42;
      if (v42 == *(_DWORD *)(v17 + 112))
      {
        re::HashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::setCapacity(v17 + 88, 2 * *(_DWORD *)(v17 + 116));
        LODWORD(v40) = v39 % *(unsigned int *)(v17 + 112);
        int v43 = *(_DWORD *)(v17 + 120);
        unint64_t v37 = v65;
      }
      *(_DWORD *)(v17 + 120) = v43 + 1;
      uint64_t v44 = *(void *)(v17 + 104);
      int v45 = *(_DWORD *)(v44 + 48 * v42 + 8);
    }
    else
    {
      uint64_t v44 = *(void *)(v17 + 104);
      int v45 = *(_DWORD *)(v44 + 48 * v42 + 8);
      *(_DWORD *)(v17 + 124) = v45 & 0x7FFFFFFF;
    }
    *(_DWORD *)(v44 + 48 * v42 + 8) = v45 | 0x80000000;
    uint64_t v46 = *(void *)(v17 + 96);
    *(_DWORD *)(*(void *)(v17 + 104) + 48 * v42 + 8) = *(_DWORD *)(*(void *)(v17 + 104) + 48 * v42 + 8) & 0x80000000 | *(_DWORD *)(v46 + 4 * v40);
    *(void *)(*(void *)(v17 + 104) + 48 * v42) = v39;
    *(void *)(*(void *)(v17 + 104) + 48 * v42 + 16) = v37;
    uint64_t v47 = *(void *)(v17 + 104) + 48 * v42;
    *(_DWORD *)(v47 + 24) = a3;
    *(_DWORD *)(v47 + 28) = a4;
    *(double *)(v47 + 32) = a6;
    *(double *)(v47 + 40) = a5;
    *(_DWORD *)(v46 + 4 * v40) = v42;
    ++*(_DWORD *)(v17 + 116);
    ++*(_DWORD *)(v17 + 128);
  }
LABEL_40:
  long long v48 = (re::ecs2::NetworkComponent *)v13[25];
  if (v48) {
    re::ecs2::NetworkComponent::markDirty(v48, (const re::ecs2::Component *)v17);
  }
  memset(__buf, 0, sizeof(__buf));
  uint64_t v74 = 9;
  int v75 = 1065353216;
  uint64_t v76 = 0;
  uint64_t v77 = 0;
  int v78 = 0;
  uint64_t v79 = 1065353216;
  char v80 = 0;
  __asm { FMOV            V0.2S, #1.0 }
  uint64_t v81 = _D0;
  int v82 = 0;
  uint64_t v83 = 0;
  int v84 = 1065353216;
  char v85 = 0;
  char v88 = 0;
  long long v90 = 0uLL;
  *((void *)&v89 + 1) = 0;
  uint64_t v54 = (_anonymous_namespace_ *)re::DynamicString::setCapacity(&v89, 0);
  *(void *)((char *)&v91 + 4) = 0x3E051EB800000000;
  LODWORD(v91) = 1;
  HIDWORD(v91) = 1106247680;
  long long v92 = 0u;
  long long v93 = 0u;
  long long v94 = 0u;
  re::DynamicString::setCapacity(&v93, 0);
  __int16 v95 = 0;
  *(void *)&__buf[0] = 1;
  uint64_t v74 = 4;
  long long v91 = *(_OWORD *)(a1 + 208);
  long long v92 = v98;
  unsigned int v55 = *(_DWORD *)(a1 + 284);
  int v84 = *(_DWORD *)(a1 + 272);
  LODWORD(v7re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 0;
  int v56 = *(_DWORD *)(a1 + 276);
  HIDWORD(v7re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = *(_DWORD *)(a1 + 280);
  int v78 = v56;
  uint64_t v79 = v55;
  re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addOrReplace<re::AudioSourceSyncState&>(a1 + 32, (uint64_t *)&v65, (uint64_t)__buf);
  *(void *)buf = v65;
  uint64_t v57 = re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet(a1 + 32, (uint64_t *)buf);
  re::ecs2::AudioPlayerComponent::createSourceStateForUnmatchedSyncState((re::ecs2::AudioPlayerComponent *)a1, *(unint64_t *)buf, v57, 0, 0);
  uint64_t v58 = (re::AudioService *)re::ecs2::AudioPlayerComponent::audioService((re::ecs2::AudioPlayerComponent *)a1);
  if (v58)
  {
    re::ecs2::AudioPlayerComponent::updateSharedAcousticProperties((re::ecs2::AudioPlayerComponent *)a1, v65, v58);
  }
  else
  {
    uint64_t v60 = *re::audioLogObjects(0);
    BOOL v59 = os_log_type_enabled(v60, OS_LOG_TYPE_DEFAULT);
    if (v59)
    {
      *(_DWORD *)buf = 134217984;
      *(void *)&uint8_t buf[4] = v65;
      _os_log_impl(&dword_233120000, v60, OS_LOG_TYPE_DEFAULT, "stream token %llu will not receive shared acoustic property overrides (i.e. default writes)", buf, 0xCu);
    }
  }
  unint64_t v61 = *re::audioLogObjects((re *)v59);
  if (os_log_type_enabled(v61, OS_LOG_TYPE_DEFAULT))
  {
    unint64_t v62 = v61;
    uint64_t v63 = v13[35];
    *(_DWORD *)buf = 134218754;
    *(void *)&uint8_t buf[4] = a1;
    __int16 v67 = 2080;
    uint64_t v68 = v63;
    __int16 v69 = 2112;
    int v70 = v12;
    __int16 v71 = 2048;
    unint64_t v72 = v65;
    _os_log_impl(&dword_233120000, v62, OS_LOG_TYPE_DEFAULT, "AudioPlayerComponent %p (entity %s) preparing source state with external stream UUID %@ and stream token %llu", buf, 0x2Au);
  }
  unint64_t v35 = v65;
  if ((void)v93)
  {
    if (BYTE8(v93)) {
      (*(void (**)(void))(*(void *)v93 + 40))();
    }
    long long v93 = 0u;
    long long v94 = 0u;
  }
  if ((void)v89)
  {
    if (BYTE8(v89)) {
      (*(void (**)(void))(*(void *)v89 + 40))();
    }
    long long v89 = 0u;
    long long v90 = 0u;
  }
  if (v85 && (void)v86)
  {
    if (BYTE8(v86)) {
      (*(void (**)(void))(*(void *)v86 + 40))();
    }
    long long v86 = 0u;
    long long v87 = 0u;
  }
  re::AssetHandle::~AssetHandle((re::AssetHandle *)((char *)__buf + 8));
LABEL_31:

  return v35;
}

void re::ecs2::AudioPlayerComponent::updateSharedAcousticProperties(re::ecs2::AudioPlayerComponent *this, uint64_t a2, re::AudioService *a3)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  *(void *)uint64_t v13 = a2;
  uint64_t v6 = re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet((uint64_t)this + 32, (uint64_t *)v13);
  if (v6)
  {
    uint64_t v7 = v6;
    float v8 = (*(float (**)(re::AudioService *))(*(void *)a3 + 656))(a3);
    float v9 = __exp10f(v8 / 20.0);
    *(float *)(v7 + 80) = v9;
    *(float *)(v7 + 84) = v9;
    *(void *)(v7 + 96) = 0;
    *(float *)(v7 + 56) = (*(float (**)(re::AudioService *))(*(void *)a3 + 664))(a3);
    uint64_t v10 = *((void *)this + 2);
    if (v10)
    {
      uint64_t v11 = *(re::ecs2::NetworkComponent **)(v10 + 200);
      if (v11) {
        re::ecs2::NetworkComponent::markDirty(v11, this);
      }
    }
  }
  else
  {
    uint16x8_t v12 = *re::audioLogObjects(0);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)uint64_t v13 = 134217984;
      *(void *)&v13[4] = a2;
      _os_log_error_impl(&dword_233120000, v12, OS_LOG_TYPE_ERROR, "Can't update shared acoustic properties for unknown sync state %llu", v13, 0xCu);
    }
  }
}

BOOL re::ecs2::AudioPlayerComponent::shouldCreateSourceStateForUnmatchedSyncState(uint64_t a1, uint64_t a2, int a3)
{
  BOOL result = 1;
  if ((a3 & 0xFFFFFFFD) != 0)
  {
    if (a3 != 1) {
      return 0;
    }
    unint64_t v3 = *(void *)(a2 + 232);
    unint64_t v4 = (v3 & 1) != 0 ? v3 >> 1 : v3 >> 1;
    if (!v4 && (*(void *)(a2 + 16) || *(_OWORD *)(a2 + 208) == 0)) {
      return 0;
    }
  }
  return result;
}

void re::ecs2::AudioPlayerComponent::createSourceStateForUnmatchedSyncState(re::ecs2::AudioPlayerComponent *this, unint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t v69 = *MEMORY[0x263EF8340];
  uint64_t v10 = *((void *)this + 2);
  if (!v10) {
    goto LABEL_7;
  }
  uint64_t v11 = *((void *)this + 2);
  do
  {
    uint64_t v12 = v11;
    uint64_t v11 = *(void *)(v11 + 24);
  }
  while (v11);
  if (*(void *)(v12 + 16))
  {
    do
    {
      uint64_t v13 = v10;
      uint64_t v10 = *(void *)(v10 + 24);
    }
    while (v10);
    uint64_t v14 = *(void *)(*(void *)(*(void *)(v13 + 16) + 104) + 272) >> 1;
  }
  else
  {
LABEL_7:
    uint64_t v14 = -1;
  }
  int v15 = (re *)re::ecs2::AudioPlayerComponent::getOrInitializePrivateEntityID(this);
  int v16 = *(unsigned __int8 *)(a3 + 257);
  uint64_t v17 = *re::audioLogObjects(v15);
  BOOL v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);
  if (v16)
  {
    if (v18)
    {
      long long v19 = v17;
      long long v20 = re::AssetHandle::assetInfo((re::AssetHandle *)(a3 + 8));
      if (v20[17]) {
        uint64_t v21 = (char *)v20[18];
      }
      else {
        uint64_t v21 = (char *)v20 + 137;
      }
      *(_DWORD *)buf = 134219011;
      *(void *)&uint8_t buf[4] = v15;
      *(_WORD *)&unsigned char buf[12] = 2048;
      *(void *)&buf[14] = v14;
      *(_WORD *)&buf[22] = 2048;
      *(void *)&buf[24] = a2;
      LOWORD(v6re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 1024;
      *(_DWORD *)((char *)&v67 + 2) = a4;
      WORD3(v6re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 2085;
      *((void *)&v67 + 1) = v21;
      int v22 = "AudioPlayerComponent (entityID=%llu, sceneID=%llu) Creating audio source state for token=%llu, owningProcess"
            "Type=%d, REAsset='%{sensitive}s'";
LABEL_19:
      _os_log_impl(&dword_233120000, v19, OS_LOG_TYPE_DEFAULT, v22, buf, 0x30u);
    }
  }
  else if (v18)
  {
    long long v19 = v17;
    uint16x8_t v23 = re::AssetHandle::assetInfo((re::AssetHandle *)(a3 + 8));
    if (v23[17]) {
      uint64_t v24 = (char *)v23[18];
    }
    else {
      uint64_t v24 = (char *)v23 + 137;
    }
    *(_DWORD *)buf = 134219010;
    *(void *)&uint8_t buf[4] = v15;
    *(_WORD *)&unsigned char buf[12] = 2048;
    *(void *)&buf[14] = v14;
    *(_WORD *)&buf[22] = 2048;
    *(void *)&buf[24] = a2;
    LOWORD(v6re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 1024;
    *(_DWORD *)((char *)&v67 + 2) = a4;
    WORD3(v6re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 2080;
    *((void *)&v67 + 1) = v24;
    int v22 = "AudioPlayerComponent (entityID=%llu, sceneID=%llu) Creating audio source state for token=%llu, owningProcessTy"
          "pe=%d, REAsset='%s'";
    goto LABEL_19;
  }
  uint32_t v25 = re::globalAllocators((re *)v18);
  uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v25[2] + 32))(v25[2], 816, 16);
  uint64_t v27 = re::AudioSourceState::AudioSourceState((re::AudioSourceState *)v26);
  unint64_t v61 = v27;
  *((void *)v27 + 3) = *(void *)a3;
  re::AssetHandle::operator=((uint64_t)v27 + 32, (uint64_t *)(a3 + 8));
  *(_OWORD *)(v26 + 56) = *(_OWORD *)(a3 + 32);
  long long v28 = *(_OWORD *)(a3 + 48);
  long long v29 = *(_OWORD *)(a3 + 64);
  long long v30 = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(v26 + 116) = *(_OWORD *)(a3 + 92);
  *(_OWORD *)(v26 + 104) = v30;
  *(_OWORD *)(v26 + 88) = v29;
  *(_OWORD *)(v26 + 72) = v28;
  re::Optional<re::DynamicString>::operator=((unsigned char *)(v26 + 136), (unsigned __int8 *)(a3 + 112));
  *(unsigned char *)(v26 + 176) = *(unsigned char *)(a3 + 152);
  re::DynamicString::operator=((re::DynamicString *)(v26 + 184), (re::DynamicString *)(a3 + 160));
  long long v31 = *(_OWORD *)(a3 + 192);
  *(_OWORD *)(v26 + 232) = *(_OWORD *)(a3 + 208);
  *(_OWORD *)(v26 + 216) = v31;
  re::DynamicString::operator=((re::DynamicString *)(v26 + 248), (re::DynamicString *)(a3 + 224));
  *(_WORD *)(v26 + 280) = *(_WORD *)(a3 + 256);
  *(void *)(v26 + 480) = this;
  *(void *)(v26 + 680) = a2;
  *(void *)(v26 + 448) = v14;
  *(unsigned char *)(v26 + 488) = a4 == 0;
  *(unsigned char *)(v26 + 476) = *(unsigned char *)(a3 + 152);
  *(void *)(v26 + 496) = v15;
  *(unsigned char *)(v26 + 672) = 1;
  uint64_t v32 = (re::ecs2::TransformComponent **)*((void *)this + 2);
  if (!v32) {
    goto LABEL_26;
  }
  uint64_t v33 = *((void *)this + 2);
  do
  {
    uint64_t v34 = v33;
    uint64_t v33 = *(void *)(v33 + 24);
  }
  while (v33);
  uint64_t v35 = *(void *)(v34 + 16);
  if (v35)
  {
    uint64_t v36 = *(void *)(v35 + 56);
    if (v36)
    {
      uint64_t v36 = (*(uint64_t (**)(uint64_t))(*(void *)v36 + 32))(v36);
      uint64_t v32 = (re::ecs2::TransformComponent **)*((void *)this + 2);
    }
  }
  else
  {
LABEL_26:
    uint64_t v36 = 0;
  }
  re::ecs2::TransformHelper::computeWorldMatrixForRendering(v32, v36, buf);
  long long v37 = *(_OWORD *)buf;
  long long v38 = *(_OWORD *)&buf[16];
  long long v39 = v67;
  long long v40 = v68;
  *(_OWORD *)(v26 + 384) = *(_OWORD *)buf;
  *(_OWORD *)(v26 + 400) = v38;
  *(_OWORD *)(v26 + 416) = v39;
  *(_OWORD *)(v26 + 432) = v40;
  *(_OWORD *)unint64_t v62 = v37;
  long long v63 = v38;
  long long v64 = v39;
  long long v65 = v40;
  re::audio::cleanUpTransformForPHASE((float32x4_t *)v62, v41, v42, v43, (uint64_t)buf);
  long long v44 = *(_OWORD *)&buf[16];
  long long v45 = v67;
  long long v46 = v68;
  *(_OWORD *)(v26 + 320) = *(_OWORD *)buf;
  *(_OWORD *)(v26 + 336) = v44;
  *(_OWORD *)(v26 + 352) = v45;
  *(_OWORD *)(v26 + 368) = v46;
  if (*(unsigned char *)(v26 + 488) && *(void *)(a3 + 16) && !*(void *)(v26 + 72))
  {
    uint64_t v47 = re::ecs2::AudioPlayerComponent::copyPreferredMasterClock(this);
    *(void *)buf = 0;
    long long v48 = (re *)CMTimebaseCreateWithSourceClock((CFAllocatorRef)*MEMORY[0x263EFFB08], v47, (CMTimebaseRef *)buf);
    if (v48)
    {
      int v49 = (int)v48;
      long long v50 = *re::audioLogObjects(v48);
      if (os_log_type_enabled(v50, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)unint64_t v62 = 67109120;
        *(_DWORD *)&v62[4] = v49;
        _os_log_error_impl(&dword_233120000, v50, OS_LOG_TYPE_ERROR, "Failed to create timebase: %d", v62, 8u);
      }
    }
    else
    {
      re::AudioSourceState::setTimebase((re::AudioSourceState *)v26, *(CFTypeRef *)buf, 0, (void (__cdecl *)(CFNotificationCenterRef, void *, CFNotificationName, const void *, CFDictionaryRef))AudioPlayerComponentHandleTimebaseTimeJumpedOrEffectiveRateChanged);
    }
    if (*(void *)buf) {
      CFRelease(*(CFTypeRef *)buf);
    }
    CFRelease(v47);
  }
  re::DynamicArray<re::SharedPtr<re::AssetLoadRequest>>::add((re::ecs2::AudioPlayerComponent *)((char *)this + 128), (uint64_t *)&v61);
  unint64_t v51 = *((void *)this + 10);
  unint64_t v52 = 0x94D049BB133111EBLL
      * ((0xBF58476D1CE4E5B9 * (a2 ^ (a2 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (a2 ^ (a2 >> 30))) >> 27));
  unint64_t v53 = v52 ^ (v52 >> 31);
  if (v51)
  {
    unint64_t v51 = v53 % *((unsigned int *)this + 26);
    uint64_t v54 = *(unsigned int *)(*((void *)this + 11) + 4 * v51);
    if (v54 != 0x7FFFFFFF)
    {
      uint64_t v60 = *((void *)this + 12);
      if (*(void *)(v60 + 32 * v54 + 16) == a2) {
        goto LABEL_45;
      }
      while (1)
      {
        uint64_t v54 = *(_DWORD *)(v60 + 32 * v54 + 8) & 0x7FFFFFFF;
        if (v54 == 0x7FFFFFFF) {
          break;
        }
        if (*(void *)(v60 + 32 * v54 + 16) == a2) {
          goto LABEL_45;
        }
      }
    }
  }
  uint64_t v55 = *((unsigned int *)this + 29);
  if (v55 == 0x7FFFFFFF)
  {
    uint64_t v55 = *((unsigned int *)this + 28);
    int v56 = v55;
    if (v55 == *((_DWORD *)this + 26))
    {
      re::HashTable<unsigned long long,re::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::setCapacity((uint64_t)this + 80, 2 * *((_DWORD *)this + 27));
      LODWORD(v51) = v53 % *((unsigned int *)this + 26);
      int v56 = *((_DWORD *)this + 28);
    }
    *((_DWORD *)this + 28) = v56 + 1;
    uint64_t v57 = *((void *)this + 12);
    int v58 = *(_DWORD *)(v57 + 32 * v55 + 8);
  }
  else
  {
    uint64_t v57 = *((void *)this + 12);
    int v58 = *(_DWORD *)(v57 + 32 * v55 + 8);
    *((_DWORD *)this + 29) = v58 & 0x7FFFFFFF;
  }
  *(_DWORD *)(v57 + 32 * v55 + 8) = v58 | 0x80000000;
  *(_DWORD *)(*((void *)this + 12) + 32 * v55 + 8) = *(_DWORD *)(*((void *)this + 12) + 32 * v55 + 8) & 0x80000000 | *(_DWORD *)(*((void *)this + 11) + 4 * v51);
  *(void *)(*((void *)this + 12) + 32 * v5re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = v53;
  *(void *)(*((void *)this + 12) + 32 * v55 + 16) = a2;
  *(void *)(*((void *)this + 12) + 32 * v55 + 24) = v26;
  *(_DWORD *)(*((void *)this + 11) + 4 * v51) = v55;
  ++*((_DWORD *)this + 27);
  ++*((_DWORD *)this + 30);
LABEL_45:
  if (re::ecs2::AudioPlayerComponent::syncStateIsReadyToCompletePreparation(this, (void *)a3, a4) && a5)
  {
    uint64_t TimebaseService = (re::TimebaseService *)re::ecs2::AudioPlayerComponent::getTimebaseService(*((re::ecs2::AudioPlayerComponent **)this
                                                                                                + 2));
    re::ecs2::AudioPlayerComponent::completePreparation(this, a2, (re::AudioSourceSyncState *)a3, TimebaseService);
  }
  if (v26) {
}
  }

void *re::ecs2::AudioPlayerComponent::isPrepared(re::ecs2::AudioPlayerComponent *this, uint64_t a2)
{
  uint64_t v5 = a2;
  BOOL result = (void *)re::HashTable<unsigned long long,re::PeerAttributionContext *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet((uint64_t)this + 80, &v5);
  if (result)
  {
    unint64_t v4 = result;
    BOOL result = (void *)re::ecs2::AudioPlayerComponent::audioService(this);
    if (result) {
      return (void *)(*(uint64_t (**)(void *, void))(*result + 200))(result, *v4);
    }
  }
  return result;
}

void AudioPlayerComponentHandleTimebaseTimeJumpedOrEffectiveRateChanged(__CFNotificationCenter *a1, char *a2, const __CFString *a3, OpaqueCMTimebase *a4, const __CFDictionary *a5)
{
  uint64_t v94 = *MEMORY[0x263EF8340];
  uint64_t v6 = (re::ecs2::AudioPlayerComponent *)*((void *)a2 + 60);
  if (!v6) {
    return;
  }
  uint64_t v11 = (re::AudioFileAsset *)re::ecs2::AudioPlayerComponent::audioService(v6);
  if (!v11)
  {
    if (a2[664]) {
      a2[664] = 0;
    }
    if (a2[652]) {
      a2[652] = 0;
    }
    if (a2[624]) {
      a2[624] = 0;
    }
    return;
  }
  uint64_t v12 = v11;
  uint64_t v13 = *((void *)a2 + 5);
  if (v13)
  {
    uint64_t v14 = *(uint64_t **)(v13 + 264);
    int v15 = re::AudioFileAsset::assetType(v11);
    if (v14 == v15) {
      goto LABEL_15;
    }
  }
  else
  {
    int v15 = re::AudioFileAsset::assetType(v11);
  }
  uint64_t v16 = *((void *)a2 + 5);
  if (!v16)
  {
    re::AudioFileGroupAsset::assetType((re::AudioFileGroupAsset *)v15);
    goto LABEL_18;
  }
  uint64_t v17 = *(uint64_t **)(v16 + 264);
  if (v17 != re::AudioFileGroupAsset::assetType((re::AudioFileGroupAsset *)v15))
  {
LABEL_18:
    int v18 = 0;
    goto LABEL_19;
  }
LABEL_15:
  if (!(*(unsigned int (**)(re::AudioFileAsset *))(*(void *)v12 + 544))(v12)) {
    return;
  }
  int v18 = 1;
LABEL_19:
  double EffectiveRate = CMTimebaseGetEffectiveRate(a4);
  long long v20 = (OpaqueCMTimebase *)*((void *)a2 + 87);
  if (v20)
  {
    double v21 = CMTimebaseGetEffectiveRate(v20);
    BOOL v22 = v21 <= 4.0 && v21 >= 0.25;
  }
  else
  {
    BOOL v22 = 0;
  }
  memset(&v85, 0, sizeof(v85));
  CMTimebaseGetTime(&v85, a4);
  uint16x8_t v23 = (re *)(*(uint64_t (**)(re::AudioFileAsset *, char *))(*(void *)v12 + 200))(v12, a2);
  if (!v23 || !a2[478])
  {
    uint16x8_t v23 = (re *)(*(uint64_t (**)(re::AudioFileAsset *, char *))(*(void *)v12 + 216))(v12, a2);
    if (v23)
    {
      re::AudioSourceState::setTimebaseUserInfo((re::AudioSourceState *)a2, a5);
      uint32_t v25 = re::globalAllocators(v24);
      uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v25[2] + 32))(v25[2], 32, 8);
      *(_OWORD *)uint64_t v26 = 0u;
      *(_OWORD *)(v26 + 16) = 0u;
      uint64_t v27 = (char *)CFStringCompare(a3, (CFStringRef)*MEMORY[0x263F010F8], 0);
      if (v27) {
        int v28 = 5;
      }
      else {
        int v28 = 6;
      }
      *(_DWORD *)uint64_t v26 = v28;
      *(void *)(v26 + 8) = *((void *)a2 + 85);
      long long v29 = (void *)*((void *)a2 + 60);
      long long v31 = (uint64_t *)v29[42];
      unint64_t v30 = v29[43];
      if ((unint64_t)v31 >= v30)
      {
        uint64_t v44 = v29[41];
        uint64_t v45 = ((uint64_t)v31 - v44) >> 3;
        if ((unint64_t)(v45 + 1) >> 61) {
          abort();
        }
        uint64_t v46 = v30 - v44;
        uint64_t v47 = v46 >> 2;
        if (v46 >> 2 <= (unint64_t)(v45 + 1)) {
          uint64_t v47 = v45 + 1;
        }
        if ((unint64_t)v46 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v48 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v48 = v47;
        }
        if (v48) {
          unint64_t v48 = (unint64_t)std::__allocate_at_least[abi:nn180100]<std::allocator<zip_entry_t *>>(v48);
        }
        else {
          uint64_t v49 = 0;
        }
        unint64_t v52 = (uint64_t *)(v48 + 8 * v45);
        unint64_t v53 = v48 + 8 * v49;
        *unint64_t v52 = v26;
        uint64_t v32 = v52 + 1;
        uint64_t v54 = (char *)v29[41];
        uint64_t v27 = (char *)v29[42];
        if (v27 != v54)
        {
          do
          {
            uint64_t v55 = *((void *)v27 - 1);
            v27 -= 8;
            *--unint64_t v52 = v55;
          }
          while (v27 != v54);
          uint64_t v27 = (char *)v29[41];
        }
        v29[41] = v52;
        v29[42] = v32;
        v29[43] = v53;
        if (v27) {
          operator delete(v27);
        }
      }
      else
      {
        uint64_t *v31 = v26;
        uint64_t v32 = v31 + 1;
      }
      v29[42] = v32;
      int v56 = *re::audioLogObjects((re *)v27);
      if (os_log_type_enabled(v56, OS_LOG_TYPE_DEFAULT))
      {
        CMTimeValue v57 = *((void *)a2 + 62);
        uint64_t v58 = *((void *)a2 + 56);
        BOOL v59 = v56;
        uint64_t v60 = *((void *)a2 + 85);
        int v61 = *(_DWORD *)v26;
        LODWORD(v90.value) = 134218752;
        *(CMTimeValue *)((char *)&v90.value + 4) = v57;
        LOWORD(v90.flags) = 2048;
        *(void *)((char *)&v90.flags + 2) = v58;
        HIWORD(v90.epoch) = 2048;
        uint64_t v91 = v60;
        __int16 v92 = 1024;
        int v93 = v61;
        _os_log_impl(&dword_233120000, v59, OS_LOG_TYPE_DEFAULT, "AudioPlayerComponent(entityID=%llu, sceneID=%llu) token %llu, resend action %u as the REPhaseSoundEvent is being prepared", (uint8_t *)&v90, 0x26u);
      }
      return;
    }
  }
  char v33 = EffectiveRate == 0.0 || v22;
  if ((v33 & 1) == 0)
  {
    uint64_t v34 = *re::audioLogObjects(v23);
    if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR))
    {
      LODWORD(v90.value) = 134217984;
      *(double *)((char *)&v90.value + 4) = EffectiveRate;
      _os_log_error_impl(&dword_233120000, v34, OS_LOG_TYPE_ERROR, "Rate (%0.2f) set outside of allowable bounds [0.25, 4.0]. Silencing player.", (uint8_t *)&v90, 0xCu);
    }
  }
  CFComparisonResult v35 = CFStringCompare(a3, (CFStringRef)*MEMORY[0x263F01108], 0);
  if (v35 && v22 && a2[664] && *((double *)a2 + 82) != 0.0) {
    return;
  }
  if (v22 && (CMTime time = v85, CMTimeGetSeconds(&time) < -0.02))
  {
    if (!*((void *)a2 + 89))
    {
      uint64_t v36 = dispatch_source_create(MEMORY[0x263EF8400], 0, 0, *(dispatch_queue_t *)(*((void *)a2 + 60) + 288));
      handler[0] = MEMORY[0x263EF8330];
      handler[1] = 3221225472;
      handler[2] = ___Z66AudioPlayerComponentHandleTimebaseTimeJumpedOrEffectiveRateChangedP22__CFNotificationCenterPvPK10__CFStringPKvPK14__CFDictionary_block_invoke;
      handler[3] = &__block_descriptor_72_e5_v8__0l;
      handler[4] = a2;
      handler[5] = a1;
      handler[6] = a2;
      handler[7] = a3;
      handler[8] = a4;
      dispatch_source_set_event_handler(v36, handler);
      re::AudioSourceState::setTimebaseDispatchSource((uint64_t)a2, v36);
    }
    re::AudioSourceState::setTimebaseUserInfo((re::AudioSourceState *)a2, a5);
    long long v37 = *((id *)a2 + 89);
    CMTimeMakeWithSeconds(&fireTime, -0.02, 1000);
    CMTimebaseSetTimerDispatchSourceNextFireTime(a4, v37, &fireTime, 0);

    BOOL v22 = 0;
  }
  else
  {
    long long v38 = *((void *)a2 + 89);
    if (v38)
    {
      CMTime v81 = *(CMTime *)*(void *)&MEMORY[0x263F010B8];
      CMTimebaseSetTimerDispatchSourceNextFireTime(a4, v38, &v81, 0);
    }
  }
  CFDictionaryRef Value = (const __CFDictionary *)CFDictionaryGetValue(a5, (const void *)*MEMORY[0x263F010F0]);
  memset(&v90, 0, sizeof(v90));
  if (Value) {
    CMTimeMakeFromDictionary(&v90, Value);
  }
  else {
    CMTime v90 = *(CMTime *)*(void *)&MEMORY[0x263F01090];
  }
  memset(&v80, 0, sizeof(v80));
  CMTime v79 = *(CMTime *)*(void *)&MEMORY[0x263F010E0];
  CMClockRef HostTimeClock = CMClockGetHostTimeClock();
  CMSyncConvertTime(&v80, &v79, a4, HostTimeClock);
  CMTime hostTime = v80;
  uint64_t v41 = (re *)CMClockConvertHostTimeToSystemUnits(&hostTime);
  uint64_t v42 = v41;
  if (v22)
  {
    int v43 = *re::audioLogObjects(v41);
    if (os_log_type_enabled(v43, OS_LOG_TYPE_DEBUG))
    {
      long long v63 = v43;
      uint64_t v64 = *((void *)a2 + 85);
      CMTime lhs = v80;
      long long v65 = CMClockGetHostTimeClock();
      CMClockGetTime(&rhs, v65);
      CMTimeSubtract(&v77, &lhs, &rhs);
      Float64 Seconds = CMTimeGetSeconds(&v77);
      *(_DWORD *)buf = 134218240;
      uint64_t v87 = v64;
      __int16 v88 = 2048;
      Float64 v89 = Seconds;
      _os_log_debug_impl(&dword_233120000, v63, OS_LOG_TYPE_DEBUG, "playing token %llu %0.3f sec from now.", buf, 0x16u);

      if (v18) {
        goto LABEL_55;
      }
LABEL_93:
      CMTime v68 = v90;
      (*(void (**)(re::AudioFileAsset *, char *, BOOL, re *, CMTime *, double))(*(void *)v12 + 208))(v12, a2, v35 == kCFCompareEqualTo, v42, &v68, EffectiveRate);
      return;
    }
  }
  if (!v18) {
    goto LABEL_93;
  }
LABEL_55:
  if (v35)
  {
    if (!a2[664] || EffectiveRate != *((double *)a2 + 82))
    {
      *((double *)a2 + 82) = EffectiveRate;
      a2[664] = 1;
      if (v22)
      {
        if (a2[652]) {
          a2[652] = 0;
        }
        if (a2[624]) {
          a2[624] = 0;
        }
      }
      CMTime v69 = v90;
      (*(void (**)(re::AudioFileAsset *, char *, void, re *, CMTime *, double))(*(void *)v12 + 208))(v12, a2, 0, v42, &v69, EffectiveRate);
    }
    return;
  }
  long long v50 = a2 + 628;
  if (!a2[652])
  {
    *long long v50 = *(_OWORD *)&v90.value;
    *(void *)(a2 + 644) = v90.epoch;
    goto LABEL_88;
  }
  if (!a2[624]) {
    goto LABEL_77;
  }
  CMTime time1 = v90;
  *(_OWORD *)&time2.value = *v50;
  time2.epoch = *(void *)(a2 + 644);
  if (CMTimeCompare(&time1, &time2)) {
    goto LABEL_77;
  }
  CMTime v72 = v80;
  if (!a2[624])
  {
    long long v67 = (re::ecs2::AudioPlayerComponent *)std::__throw_bad_optional_access[abi:nn180100]();
    re::ecs2::AudioPlayerComponent::syncStateIsReadyToCompletePreparation(v67);
    return;
  }
  CMTime v71 = *(CMTime *)(a2 + 25);
  if (CMTimeCompare(&v72, &v71))
  {
LABEL_77:
    int v51 = a2[652];
    *long long v50 = *(_OWORD *)&v90.value;
    *(void *)(a2 + 644) = v90.epoch;
    if (v51)
    {
LABEL_89:
      int v62 = a2[624];
      *((CMTime *)a2 + 2re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = v80;
      if (!v62) {
        a2[624] = 1;
      }
      CMTime v70 = v90;
      (*(void (**)(re::AudioFileAsset *, char *, uint64_t, re *, CMTime *, double))(*(void *)v12 + 208))(v12, a2, 1, v42, &v70, EffectiveRate);
      return;
    }
LABEL_88:
    a2[652] = 1;
    goto LABEL_89;
  }
}

uint64_t re::ecs2::AudioPlayerComponent::syncStateIsReadyToCompletePreparation(re::ecs2::AudioPlayerComponent *this, void *a2, int a3)
{
  uint64_t v3 = *((void *)this + 2);
  if (!v3) {
    goto LABEL_6;
  }
  uint64_t v7 = *((void *)this + 2);
  do
  {
    uint64_t v8 = v7;
    uint64_t v7 = *(void *)(v7 + 24);
  }
  while (v7);
  if (!*(void *)(v8 + 16) || (*(unsigned char *)(v3 + 288) & 1) == 0)
  {
LABEL_6:
    std::string::basic_string[abi:nn180100]<0>(__p, "[RE/ECS] [Update] The reason that this AudioSource is not able to complete preparation is due to the fact that the entity is not active.");
    float v9 = (re *)re::audio::throttledLog(OS_LOG_TYPE_DEBUG, (long long *)__p);
    int v10 = (int)v9;
    if ((v34 & 0x80000000) == 0)
    {
      if (!v9) {
        return 0;
      }
      goto LABEL_10;
    }
    operator delete(__p[0]);
    if (v10)
    {
LABEL_10:
      uint64_t v11 = *re::audioLogObjects(v9);
      uint64_t result = os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG);
      if (!result) {
        return result;
      }
      LOWORD(__p[0]) = 0;
      uint64_t v13 = "[RE/ECS] [Update] The reason that this AudioSource is not able to complete preparation is due to the fact th"
            "at the entity is not active.";
LABEL_12:
      _os_log_debug_impl(&dword_233120000, v11, OS_LOG_TYPE_DEBUG, v13, (uint8_t *)__p, 2u);
    }
    return 0;
  }
  uint64_t v14 = re::ecs2::AudioPlayerComponent::audioService(this);
  if (a3)
  {
    uint64_t v15 = *((void *)this + 2);
    if (v15)
    {
      uint64_t v16 = v14;
      uint64_t v14 = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(v15 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioTransientComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType);
      if (v14)
      {
        if (*(void *)(v14 + 32) && v16 != 0)
        {
          uint64_t v14 = (*(uint64_t (**)(uint64_t))(*(void *)v16 + 544))(v16);
          if (v14)
          {
            uint64_t v14 = (*(uint64_t (**)(uint64_t))(*(void *)v16 + 112))(v16);
            if ((v14 & 1) == 0)
            {
              std::string::basic_string[abi:nn180100]<0>(__p, "[RE/ECS] [Update] The reason that this AudioSource is not able to complete preparation is due to the host still recovering from media services crash.");
              long long v31 = (re *)re::audio::throttledLog(OS_LOG_TYPE_DEBUG, (long long *)__p);
              int v32 = (int)v31;
              if (v34 < 0) {
                operator delete(__p[0]);
              }
              if (!v32) {
                return 0;
              }
              uint64_t v11 = *re::audioLogObjects(v31);
              uint64_t result = os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG);
              if (!result) {
                return result;
              }
              LOWORD(__p[0]) = 0;
              uint64_t v13 = "[RE/ECS] [Update] The reason that this AudioSource is not able to complete preparation is due to the"
                    " host still recovering from media services crash.";
              goto LABEL_12;
            }
          }
        }
      }
    }
  }
  unint64_t v18 = a2[29];
  if (v18) {
    unint64_t v19 = v18 >> 1;
  }
  else {
    unint64_t v19 = v18 >> 1;
  }
  if (v19) {
    return 1;
  }
  uint64_t v20 = a2[2];
  if (!v20) {
    return a2[26] || a2[27];
  }
  unsigned int v21 = atomic_load((unsigned int *)(v20 + 704));
  if (v21 != 2) {
    return 0;
  }
  uint64_t v22 = a2[2];
  if (v22)
  {
    uint16x8_t v23 = *(uint64_t **)(v22 + 264);
    uint64_t v24 = re::AudioFileAsset::assetType((re::AudioFileAsset *)v14);
    if (v23 == v24) {
      return *(unsigned char *)(re::AssetHandle::loadedAsset<re::AudioFileAsset>((re::AudioFileAsset *)(a2 + 1)) + 153) != 0;
    }
  }
  else
  {
    uint64_t v24 = re::AudioFileAsset::assetType((re::AudioFileAsset *)v14);
  }
  uint64_t v25 = a2[2];
  if (!v25)
  {
    uint64_t v27 = re::AudioFileGroupAsset::assetType((re::AudioFileGroupAsset *)v24);
LABEL_42:
    uint64_t v29 = a2[2];
    if (!v29)
    {
      re::AudioGeneratorAsset::assetType((re::AudioGeneratorAsset *)v27);
      return 0;
    }
    unint64_t v30 = *(uint64_t **)(v29 + 264);
    return v30 == re::AudioGeneratorAsset::assetType((re::AudioGeneratorAsset *)v27);
  }
  uint64_t v26 = *(uint64_t **)(v25 + 264);
  uint64_t v27 = re::AudioFileGroupAsset::assetType((re::AudioFileGroupAsset *)v24);
  if (v26 != v27) {
    goto LABEL_42;
  }
  uint64_t v28 = re::AssetHandle::loadedAsset<re::AudioFileGroupAsset>((re::AudioFileGroupAsset *)(a2 + 1));
  return re::AudioFileGroupAsset::isCompletelyLoaded(v28);
}

void re::ecs2::AudioPlayerComponent::completePreparation(re::ecs2::AudioPlayerComponent *this, unint64_t a2, re::AudioSourceSyncState *a3, re::TimebaseService *a4)
{
  uint64_t v65 = *MEMORY[0x263EF8340];
  unint64_t v56 = a2;
  uint64_t v7 = re::HashTable<unsigned long long,re::PeerAttributionContext *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet((uint64_t)this + 80, (uint64_t *)&v56);
  if (!v7) {
    return;
  }
  uint64_t v8 = *(void *)v7;
  if (*(void *)(*(void *)v7 + 448) == -1) {
    return;
  }
  uint64_t v9 = re::ecs2::AudioPlayerComponent::audioService(this);
  if (v9)
  {
    if (!*((void *)this + 36)) {
      return;
    }
    uint64_t v11 = *((void *)this + 2);
    if (!v11) {
      return;
    }
    uint64_t v12 = v9;
    uint64_t v13 = *((void *)this + 2);
    do
    {
      uint64_t v14 = v13;
      uint64_t v13 = *(void *)(v13 + 24);
    }
    while (v13);
    if (!*(void *)(v14 + 16)) {
      return;
    }
    unint64_t v15 = *((void *)a3 + 29);
    if (v15) {
      unint64_t v16 = v15 >> 1;
    }
    else {
      unint64_t v16 = v15 >> 1;
    }
    if (v16)
    {
      *(unsigned char *)(v8 + 478) = 1;
      return;
    }
    if (!*((void *)a3 + 2) && (*((void *)a3 + 26) || *((void *)a3 + 27)))
    {
      uint64_t v26 = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(v11 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioTransientComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType);
      if (v26)
      {
        uint64_t v27 = re::HashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet(v26 + 88, (uint64_t *)&v56);
        if (v27)
        {
          *(_WORD *)buf = 0;
          buf[2] = 0;
          char v60 = 0;
          char v63 = 0;
          char v64 = 0;
          *(void *)&uint8_t buf[4] = *(void *)v27;
          *(_OWORD *)&uint8_t buf[16] = *(_OWORD *)(v27 + 8);
          (*(void (**)(uint64_t, unint64_t, unsigned char *))(*(void *)v12 + 600))(v12, v56, buf);
          *(unsigned char *)(v8 + 478) = 1;
          if (v60 && v61 && (v62 & 1) != 0) {
            (*(void (**)(void))(*(void *)v61 + 40))();
          }
          return;
        }
        CFComparisonResult v35 = *re::audioLogObjects(0);
        if (!os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
          return;
        }
        unint64_t v18 = v35;
        char v33 = re::AudioSourceSyncState::externalStreamUUID(a3);
        *(_DWORD *)buf = 138412546;
        *(void *)&uint8_t buf[4] = v33;
        *(_WORD *)&unsigned char buf[12] = 2048;
        *(void *)&buf[14] = v56;
        char v34 = "[RE/ECS] [Prepare] Cannot prepare external stream %@ (token=%llu) without accompanying stream state";
      }
      else
      {
        int v32 = *re::audioLogObjects(0);
        if (!os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
          return;
        }
        unint64_t v18 = v32;
        char v33 = re::AudioSourceSyncState::externalStreamUUID(a3);
        *(_DWORD *)buf = 138412546;
        *(void *)&uint8_t buf[4] = v33;
        *(_WORD *)&unsigned char buf[12] = 2048;
        *(void *)&buf[14] = v56;
        char v34 = "[RE/ECS] [Prepare] Cannot prepare external stream %@ (token=%llu) without an attached transient component";
      }
      _os_log_error_impl(&dword_233120000, v18, OS_LOG_TYPE_ERROR, v34, buf, 0x16u);

      goto LABEL_45;
    }
    if (!a4) {
      return;
    }
    unint64_t v18 = re::ecs2::AudioSessionComponent::NearestAudioSessionUpEntityHierarchy(*((re::ecs2::AudioSessionComponent **)this + 2), v10);
    if ((*(unsigned int (**)(uint64_t))(*(void *)v12 + 744))(v12)) {
      BOOL v19 = v18 == 0;
    }
    else {
      BOOL v19 = 0;
    }
    if (v19)
    {
      snprintf(buf, 0x64uLL, "audiosessionrequirement%llu", v56);
      std::string::basic_string[abi:nn180100]<0>(__p, buf);
      uint64_t v28 = (re *)re::audio::throttledLog(OS_LOG_TYPE_ERROR, (long long *)__p);
      int v29 = (int)v28;
      if (v58 < 0) {
        operator delete(__p[0]);
      }
      if (v29)
      {
        unint64_t v30 = *re::audioLogObjects(v28);
        if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
        {
          LODWORD(__p[0]) = 134217984;
          *(void **)((char *)__p + 4) = (void *)v56;
          _os_log_error_impl(&dword_233120000, v30, OS_LOG_TYPE_ERROR, "Not preparing token %llu because it does not have a required audio session", (uint8_t *)__p, 0xCu);
        }
      }
      goto LABEL_45;
    }
    objc_storeStrong((id *)(v8 + 464), v18);
    uint64_t v21 = *((void *)a3 + 2);
    if (!v21 || (unsigned int v22 = atomic_load((unsigned int *)(v21 + 704)), v22 != 2))
    {
      long long v31 = *re::audioLogObjects(v20);
      if (os_log_type_enabled(v31, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)buf = 134217984;
        *(void *)&uint8_t buf[4] = v56;
        _os_log_fault_impl(&dword_233120000, v31, OS_LOG_TYPE_FAULT, "Cannot prepare token %llu with not loaded asset", buf, 0xCu);
      }
      goto LABEL_45;
    }
    uint16x8_t v23 = (re::AudioGeneratorAsset *)re::ecs2::AudioPlayerComponent::completeTimebasePreparation(this, v56, a3, a4);
    if (!v23)
    {
LABEL_45:

      return;
    }
    uint64_t v24 = *(void *)(v8 + 40);
    if (v24)
    {
      uint64_t v25 = *(uint64_t **)(v24 + 264);
      if (v25 == re::AudioGeneratorAsset::assetType(v23) && *(unsigned char *)(v8 + 488))
      {
        v55[3] = (id)MEMORY[0x263EF8330];
        v55[4] = (id)3221225472;
        v55[5] = ___ZN2re4ecs220AudioPlayerComponent19completePreparationEyPNS_20AudioSourceSyncStateEPNS_15TimebaseServiceE_block_invoke;
        v55[6] = &__block_descriptor_56_e33_v24__0__AUAudioUnit_8__NSError_16l;
        v55[7] = this;
        v55[8] = (id)v56;
        v55[9] = (id)v11;
        (*(void (**)(uint64_t))(*(void *)v12 + 560))(v12);
      }
    }
    else
    {
      re::AudioGeneratorAsset::assetType(v23);
    }
    uint64_t v36 = (void *)re::ecs2::AudioPlayerComponent::getOrInitializePrivateEntityID(this);
    objc_initWeak(__p, *(id *)(v8 + 800));
    unint64_t v37 = v56;
    v54[0] = MEMORY[0x263EF8330];
    v54[1] = 3221225472;
    v54[2] = ___ZN2re4ecs220AudioPlayerComponent19completePreparationEyPNS_20AudioSourceSyncStateEPNS_15TimebaseServiceE_block_invoke_30;
    v54[3] = &unk_264BE37E0;
    objc_copyWeak(v55, __p);
    v55[1] = (id)v56;
    v55[2] = v36;
    long long v38 = (re::AudioGeneratorAsset *)(*(uint64_t (**)(uint64_t, unint64_t, void *))(*(void *)v12 + 680))(v12, v37, v54);
    uint64_t v39 = *(void *)(v8 + 40);
    if (v39)
    {
      long long v40 = *(uint64_t **)(v39 + 264);
      if (v40 == re::AudioGeneratorAsset::assetType(v38)) {
        goto LABEL_57;
      }
    }
    else
    {
      re::AudioGeneratorAsset::assetType(v38);
    }
    uint64_t v41 = (re *)(*(uint64_t (**)(uint64_t))(*(void *)v12 + 544))(v12);
    if ((v41 & 1) == 0)
    {
      uint64_t v47 = *re::audioLogObjects(v41);
      if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 134218240;
        *(void *)&uint8_t buf[4] = v8;
        *(_WORD *)&unsigned char buf[12] = 2048;
        *(void *)&buf[14] = v56;
        _os_log_impl(&dword_233120000, v47, OS_LOG_TYPE_DEFAULT, "[RE/PHASE] [Prepare] Preparing sourceState: %p with token: %llu as client of shared simulation", buf, 0x16u);
      }
      re::ecs2::AudioPlayerComponent::setRandomPlaybackPositionForTokenIfAppropriate(this, v56);
      *(unsigned char *)(v8 + 478) = 1;
      re::ecs2::AudioPlayerComponent::triggerPendingActions((re::ecs2::AudioPlayerComponent **)this);
      goto LABEL_63;
    }
LABEL_57:
    *(unsigned char *)(v8 + 476) = re::ecs2::AudioPlayerComponent::selectInputMode(this, v56);
    if (!*(unsigned char *)(v8 + 720)) {
      re::ecs2::AudioPlayerComponent::setRandomPlaybackPositionForTokenIfAppropriate(this, v56);
    }
    memset(buf, 0, 24);
    (*(void (**)(unsigned char *__return_ptr, re::TimebaseService *, void))(*(void *)a4 + 112))(buf, a4, *((void *)a3 + 6));
    *(unsigned char *)(v8 + 479) = 1;
    id v42 = *((id *)this + 36);
    int v43 = (*(void (**)(uint64_t))(*(void *)v12 + 616))(v12);
    long long v52 = *(_OWORD *)buf;
    uint64_t v53 = *(void *)&buf[16];
    v48[0] = MEMORY[0x263EF8330];
    v48[1] = 3221225472;
    v48[2] = ___ZN2re4ecs220AudioPlayerComponent19completePreparationEyPNS_20AudioSourceSyncStateEPNS_15TimebaseServiceE_block_invoke_32;
    v48[3] = &unk_264BE3808;
    id v49 = v43;
    v51[1] = this;
    v51[2] = (id)v56;
    id v44 = v43;
    objc_copyWeak(v51, __p);
    id v50 = v42;
    v51[3] = v36;
    uint64_t v45 = *(void (**)(uint64_t, uint64_t, long long *, void *))(*(void *)v12 + 192);
    id v46 = v42;
    v45(v12, v8, &v52, v48);

    objc_destroyWeak(v51);
LABEL_63:
    objc_destroyWeak(v55);
    objc_destroyWeak(__p);
    goto LABEL_45;
  }
  uint64_t v17 = *re::audioLogObjects(0);
  if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)buf = 0;
    _os_log_error_impl(&dword_233120000, v17, OS_LOG_TYPE_ERROR, "[RE/ECS] [Prepare] Cannot prepare with no AudioService", buf, 2u);
  }
}

uint64_t re::ecs2::AudioPlayerComponent::hasInputModeOverride(re::ecs2::AudioPlayerComponent *this, uint64_t a2)
{
  uint64_t v4 = a2;
  uint64_t v2 = *((void *)this + 2);
  if (!v2) {
    return 0;
  }
  uint64_t result = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(v2 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioTransientComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType);
  if (result) {
    return re::HashTable<unsigned long long,re::PeerAttributionContext *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet(result + 40, &v4) != 0;
  }
  return result;
}

uint64_t re::ecs2::AudioPlayerComponent::getInputModeOverride(re::ecs2::AudioPlayerComponent *this, uint64_t a2)
{
  uint64_t v12 = a2;
  uint64_t v2 = *((void *)this + 2);
  if (!v2)
  {
    uint64_t v6 = *re::audioLogObjects(this);
    uint64_t result = os_log_type_enabled(v6, OS_LOG_TYPE_ERROR);
    if (!result) {
      return result;
    }
    __int16 v11 = 0;
    uint64_t v7 = "cannot get override input mode from component that does not have entity";
    uint64_t v8 = (uint8_t *)&v11;
    goto LABEL_11;
  }
  uint64_t v3 = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(v2 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioTransientComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType);
  if (!v3)
  {
    uint64_t v6 = *re::audioLogObjects(0);
    uint64_t result = os_log_type_enabled(v6, OS_LOG_TYPE_ERROR);
    if (!result) {
      return result;
    }
    __int16 v10 = 0;
    uint64_t v7 = "cannot get override input mode b/c does not have transient component";
    uint64_t v8 = (uint8_t *)&v10;
    goto LABEL_11;
  }
  uint64_t v4 = (unsigned __int8 *)re::HashTable<unsigned long long,re::PeerAttributionContext *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet(v3 + 40, &v12);
  if (v4) {
    return *v4;
  }
  uint64_t v6 = *re::audioLogObjects(0);
  uint64_t result = os_log_type_enabled(v6, OS_LOG_TYPE_ERROR);
  if (result)
  {
    __int16 v9 = 0;
    uint64_t v7 = "cannot get override input mode b/c does not have matching token in transient component";
    uint64_t v8 = (uint8_t *)&v9;
LABEL_11:
    _os_log_error_impl(&dword_233120000, v6, OS_LOG_TYPE_ERROR, v7, v8, 2u);
    return 0;
  }
  return result;
}

void re::ecs2::AudioPlayerComponent::preparationCompleteCallback(re::ecs2::AudioPlayerComponent *this, re::AudioSourceState *a2, re::ecs2::AudioPlayerComponent *a3, NSError *a4)
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  uint64_t v6 = a3;
  uint64_t v7 = v6;
  *((unsigned char *)this + 479) = 0;
  uint64_t v8 = *((void *)this + 85);
  if (v6
    && ([(re::ecs2::AudioPlayerComponent *)v6 domain],
        __int16 v9 = objc_claimAutoreleasedReturnValue(),
        int v10 = [v9 isEqualToString:@"com.apple.re.internal"],
        v9,
        v10))
  {
    __int16 v11 = *re::audioLogObjects(v6);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)uint64_t v26 = 134218242;
      *(void *)&v26[4] = v8;
      *(_WORD *)&v26[12] = 2112;
      *(void *)&v26[14] = v7;
      uint64_t v12 = "Error preparing source %llu: %@";
LABEL_21:
      _os_log_error_impl(&dword_233120000, v11, OS_LOG_TYPE_ERROR, v12, v26, 0x16u);
    }
  }
  else
  {
    uint64_t v13 = *((void *)this + 5);
    if (v13) {
      uint64_t v14 = *(re **)(v13 + 264);
    }
    else {
      uint64_t v14 = 0;
    }
    unint64_t v15 = (re *)re::AudioGeneratorAsset::assetType(v6);
    if (v14 == v15)
    {
      if (*((unsigned char *)this + 488))
      {
        uint64_t v16 = *((void *)a2 + 2);
        if (v16)
        {
          uint64_t v17 = *((void *)a2 + 2);
          do
          {
            uint64_t v18 = v17;
            uint64_t v17 = *(void *)(v17 + 24);
          }
          while (v17);
          if (*(void *)(v18 + 16))
          {
            uint64_t v19 = *((void *)a2 + 2);
            do
            {
              uint64_t v20 = v19;
              uint64_t v19 = *(void *)(v19 + 24);
            }
            while (v19);
            uint64_t v21 = *(re::EventBus **)(*(void *)(v20 + 16) + 288);
            if (v21)
            {
              uint64_t v22 = *((void *)this + 57);
              *(void *)uint64_t v26 = v8;
              *(void *)&v26[8] = v22;
              *(void *)&v26[16] = v7;
              AudioUnit = re::EventBus::getTypeId<REAudioPlayerDidCreateAudioUnitEvent>();
              re::EventBus::publish(v21, v16, (uint64_t)AudioUnit, (uint64_t)v26, 0x18uLL, 0);
              uint64_t v24 = *((void *)this + 57);
              *(void *)uint64_t v26 = v8;
              *(void *)&v26[8] = v24;
              *(void *)&v26[16] = v7;
              Type = re::EventBus::getTypeId<REAudioPlayerDidPrepareAudioUnitEvent>();
              unint64_t v15 = (re *)re::EventBus::publish(v21, v16, (uint64_t)Type, (uint64_t)v26, 0x18uLL, 0);
            }
          }
        }
      }
    }
    if (!v7)
    {
      *((unsigned char *)this + 478) = 1;
      re::ecs2::AudioPlayerComponent::triggerPendingActions((re::ecs2::AudioPlayerComponent **)a2);
      goto LABEL_23;
    }
    __int16 v11 = *re::audioLogObjects(v15);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)uint64_t v26 = 134218242;
      *(void *)&v26[4] = v8;
      *(_WORD *)&v26[12] = 2112;
      *(void *)&v26[14] = v7;
      uint64_t v12 = "Could not complete preparation for token %llu, error = %@";
      goto LABEL_21;
    }
  }
LABEL_23:
}

void re::ecs2::AudioPlayerComponent::triggerPendingActions(re::ecs2::AudioPlayerComponent **this)
{
  uint64_t v55 = *MEMORY[0x263EF8340];
  int canModifyState = re::ecs2::AudioPlayerComponent::canModifyState(this[2]);
  int v48 = 0;
  memset(time, 0, sizeof(time));
  uint64_t v49 = 0x7FFFFFFFLL;
  uint64_t v3 = this[41];
  if (v3 != this[42])
  {
    int v4 = canModifyState;
    id v46 = (__CFString *)*MEMORY[0x263F010F8];
    CFStringRef v5 = (const __CFString *)*MEMORY[0x263F01108];
    do
    {
      uint64_t v6 = *(_DWORD **)v3;
      uint64_t v7 = (unint64_t *)(*(void *)v3 + 8);
      if (!re::HashSetBase<unsigned long long,unsigned long long,re::internal::ValueAsKey<unsigned long long>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::contains((uint64_t)time, (uint64_t *)v7))
      {
        uint64_t v8 = re::ecs2::AudioPlayerComponent::sourceStateForToken((re::ecs2::AudioPlayerComponent *)this, *v7);
        if (v8)
        {
          uint64_t v9 = v8;
          if (re::ecs2::AudioPlayerComponent::audioService((re::ecs2::AudioPlayerComponent *)this))
          {
            uint64_t v10 = re::ecs2::AudioPlayerComponent::audioService((re::ecs2::AudioPlayerComponent *)this);
            if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)v10 + 200))(v10, v9))
            {
              if (*(unsigned char *)(v9 + 478))
              {
                __int16 v11 = this[41];
                if (*v6 == 3)
                {
                  uint64_t v12 = this[42];
                }
                else
                {
                  uint64_t v12 = this[42];
                  if (v11 == v12)
                  {
LABEL_25:
                    uint64_t v19 = 0;
                  }
                  else
                  {
                    uint64_t v18 = this[41];
                    while (1)
                    {
                      uint64_t v19 = *(_DWORD **)v18;
                      if (*(void *)(*(void *)v18 + 8) == *v7 && *v19 == 3) {
                        break;
                      }
                      uint64_t v18 = (re::ecs2::AudioPlayerComponent *)((char *)v18 + 8);
                      if (v18 == v12) {
                        goto LABEL_25;
                      }
                    }
                  }
                  if (v19) {
                    uint64_t v6 = v19;
                  }
                }
                uint64_t v20 = this[41];
                if (v11 != v12)
                {
                  while (*(_DWORD **)v20 != v6)
                  {
                    uint64_t v20 = (re::ecs2::AudioPlayerComponent *)((char *)v20 + 8);
                    if (v20 == v12)
                    {
                      uint64_t v20 = v12;
                      break;
                    }
                  }
                }
                if (v20 != v12)
                {
                  uint64_t v21 = (re::ecs2::AudioPlayerComponent *)((char *)v20 + 8);
                  if ((re::ecs2::AudioPlayerComponent *)((char *)v20 + 8) != v12)
                  {
                    do
                    {
                      if (*(_DWORD **)v21 != v6)
                      {
                        *(void *)uint64_t v20 = *(void *)v21;
                        uint64_t v20 = (re::ecs2::AudioPlayerComponent *)((char *)v20 + 8);
                      }
                      uint64_t v21 = (re::ecs2::AudioPlayerComponent *)((char *)v21 + 8);
                    }
                    while (v21 != v12);
                    uint64_t v12 = this[42];
                  }
                }
                if (v12 != v20) {
                  this[42] = v20;
                }
                re::HashSetBase<re::RigGraphSystem::BuildTask *,re::RigGraphSystem::BuildTask *,re::internal::ValueAsKey<re::RigGraphSystem::BuildTask *>,re::Hash<re::RigGraphSystem::BuildTask *>,re::EqualTo<re::RigGraphSystem::BuildTask *>,true,false>::deinit((uint64_t *)time);
                *(void *)__p = *((void *)v6 + 1);
                uint64_t v22 = re::HashTable<unsigned long long,re::PeerAttributionContext *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet((uint64_t)(this + 10), (uint64_t *)__p);
                if (v22)
                {
                  uint16x8_t v23 = (re::AudioSourceState **)v22;
                  uint64_t v22 = re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet((uint64_t)(this + 4), (uint64_t *)__p);
                  uint64_t v24 = *v23;
                  switch(*v6)
                  {
                    case 0:
                      if (v4) {
                        uint64_t v25 = (re::AudioSourceSyncState *)v22;
                      }
                      else {
                        uint64_t v25 = 0;
                      }
                      re::ecs2::AudioPlayerComponent::doPlay((re::ecs2::AudioPlayerComponent *)this, *((void *)v6 + 1), *v23, v25);
                      break;
                    case 1:
                      if (v4) {
                        uint64_t v28 = (re::AudioSourceSyncState *)v22;
                      }
                      else {
                        uint64_t v28 = 0;
                      }
                      uint64_t v22 = re::ecs2::AudioPlayerComponent::doPause((re::ecs2::AudioPlayerComponent *)this, *((void *)v6 + 1), *v23, v28);
                      break;
                    case 2:
                      if (v4) {
                        int v29 = (re::AudioSourceSyncState *)v22;
                      }
                      else {
                        int v29 = 0;
                      }
                      re::ecs2::AudioPlayerComponent::doStop((re::ecs2::AudioPlayerComponent *)this, *((void *)v6 + 1), *v23, v29);
                      break;
                    case 3:
                      uint64_t v22 = re::ecs2::AudioPlayerComponent::audioService((re::ecs2::AudioPlayerComponent *)this);
                      if (!v22) {
                        break;
                      }
                      uint64_t v30 = v22;
                      long long v31 = (re::AudioGeneratorAsset *)(*(uint64_t (**)(uint64_t))(*(void *)v22 + 544))(v22);
                      if (v31) {
                        goto LABEL_56;
                      }
                      uint64_t v44 = *((void *)v24 + 5);
                      if (v44)
                      {
                        uint64_t v45 = *(void *)(v44 + 264);
                        uint64_t v22 = (uint64_t)re::AudioGeneratorAsset::assetType(v31);
                        if (v45 == v22)
                        {
                          uint64_t v22 = (*(uint64_t (**)(uint64_t))(*(void *)v30 + 552))(v30);
                          if (v22) {
LABEL_56:
                          }
                            uint64_t v22 = (*(uint64_t (**)(uint64_t, re::AudioSourceState *, float, double))(*(void *)v30 + 288))(v30, v24, *((float *)v6 + 4), *((float *)v6 + 5));
                        }
                      }
                      else
                      {
                        uint64_t v22 = (uint64_t)re::AudioGeneratorAsset::assetType(v31);
                      }
                      break;
                    case 4:
                      if (*((unsigned char *)v24 + 720))
                      {
                        uint64_t v32 = *((void *)v6 + 1);
                        char v33 = *re::audioLogObjects((re *)v22);
                        uint64_t v22 = os_log_type_enabled(v33, OS_LOG_TYPE_ERROR);
                        if (v22)
                        {
                          CMTimeValue v34 = (CMTimeValue)this[38];
                          if (!v34) {
                            CMTimeValue v34 = (CMTimeValue)this[44];
                          }
                          LODWORD(__str[0].value) = 134218240;
                          *(CMTimeValue *)((char *)&__str[0].value + 4) = v34;
                          LOWORD(__str[0].flags) = 2048;
                          *(void *)((char *)&__str[0].flags + 2) = v32;
                          _os_log_error_impl(&dword_233120000, v33, OS_LOG_TYPE_ERROR, "AudioPlayerComponent::doSetPlaybackPositionFor() (entityID=%llu) cannot seek un-owned playback token %llu.", (uint8_t *)__str, 0x16u);
                        }
                      }
                      else
                      {
                        double v41 = *((double *)v6 + 3);
                        CMTimeMakeWithSeconds(__str, v41, 48000);
                        id v42 = (OpaqueCMTimebase *)*((void *)v24 + 87);
                        *(CMTime *)CMTime time = __str[0];
                        uint64_t v22 = CMTimebaseSetTime(v42, (CMTime *)time);
                        if (*((unsigned char *)v24 + 736)) {
                          BOOL v43 = *((double *)v24 + 91) == v41;
                        }
                        else {
                          BOOL v43 = 0;
                        }
                        if (v43) {
                          *((unsigned char *)v24 + 736) = 0;
                        }
                      }
                      break;
                    case 5:
                      CFDictionaryRef v35 = re::AudioSourceState::copyTimebaseUserInfo(*((re::AudioSourceState **)v24 + 88));
                      LocalCenter = CFNotificationCenterGetLocalCenter();
                      unint64_t v37 = (OpaqueCMTimebase *)*((void *)v24 + 87);
                      long long v38 = (char *)v24;
                      CFStringRef v39 = v5;
                      goto LABEL_64;
                    case 6:
                      CFDictionaryRef v35 = re::AudioSourceState::copyTimebaseUserInfo(*((re::AudioSourceState **)v24 + 88));
                      LocalCenter = CFNotificationCenterGetLocalCenter();
                      unint64_t v37 = (OpaqueCMTimebase *)*((void *)v24 + 87);
                      long long v38 = (char *)v24;
                      CFStringRef v39 = v46;
LABEL_64:
                      AudioPlayerComponentHandleTimebaseTimeJumpedOrEffectiveRateChanged(LocalCenter, v38, v39, v37, v35);
                      CFRelease(v35);
                      break;
                    default:
                      break;
                  }
                }
                long long v40 = re::globalAllocators((re *)v22);
                (*(void (**)(uint64_t, _DWORD *))(*(void *)v40[2] + 40))(v40[2], v6);
                int v48 = 0;
                memset(time, 0, sizeof(time));
                uint64_t v49 = 0x7FFFFFFFLL;
                uint64_t v3 = this[41];
                continue;
              }
            }
          }
        }
        uint64_t v13 = (re *)re::HashSetBase<unsigned long long,unsigned long long,re::internal::ValueAsKey<unsigned long long>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addNew((uint64_t)time, (uint64_t *)v7);
        uint64_t v14 = re::audioLogObjects(v13);
        if (os_log_type_enabled((os_log_t)*v14, OS_LOG_TYPE_DEBUG))
        {
          snprintf((char *)__str, 0x8DuLL, "AudioPlayerComponent::nextReadyAction() - token %llu not ready for action %d", *((void *)v6 + 1), *v6);
          std::string::basic_string[abi:nn180100]<0>(__p, (char *)__str);
          unint64_t v15 = (re *)re::audio::throttledLog(OS_LOG_TYPE_DEBUG, (long long *)__p);
          int v16 = (int)v15;
          if (v53 < 0)
          {
            operator delete(*(void **)__p);
            if (v16)
            {
LABEL_15:
              uint64_t v17 = *re::audioLogObjects(v15);
              if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
              {
                uint64_t v26 = *((void *)v6 + 1);
                int v27 = *v6;
                *(_DWORD *)__p = 134218240;
                *(void *)&__p[4] = v26;
                __int16 v51 = 1024;
                int v52 = v27;
                _os_log_debug_impl(&dword_233120000, v17, OS_LOG_TYPE_DEBUG, "AudioPlayerComponent::nextReadyAction() - token %llu not ready for action %d", __p, 0x12u);
              }
            }
          }
          else if (v15)
          {
            goto LABEL_15;
          }
        }
      }
      uint64_t v3 = (re::ecs2::AudioPlayerComponent *)((char *)v3 + 8);
    }
    while (v3 != this[42]);
  }
  re::HashSetBase<re::RigGraphSystem::BuildTask *,re::RigGraphSystem::BuildTask *,re::internal::ValueAsKey<re::RigGraphSystem::BuildTask *>,re::Hash<re::RigGraphSystem::BuildTask *>,re::EqualTo<re::RigGraphSystem::BuildTask *>,true,false>::deinit((uint64_t *)time);
}

uint64_t re::ecs2::AudioPlayerComponent::completeTimebasePreparation(re::ecs2::AudioPlayerComponent *this, uint64_t a2, re::AudioSourceSyncState *a3, re::TimebaseService *a4)
{
  uint64_t v46 = *MEMORY[0x263EF8340];
  uint64_t v39 = a2;
  uint64_t result = re::HashTable<unsigned long long,re::PeerAttributionContext *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet((uint64_t)this + 80, &v39);
  if (result)
  {
    uint64_t v8 = *((void *)this + 2);
    if (!v8) {
      return 0;
    }
    uint64_t v9 = *(void *)result;
    uint64_t v10 = *((void *)this + 2);
    do
    {
      uint64_t v11 = v10;
      uint64_t v10 = *(void *)(v10 + 24);
    }
    while (v10);
    uint64_t v12 = *(void *)(v11 + 16);
    if (!v12) {
      return 0;
    }
    uint64_t v13 = *(void **)(v9 + 696);
    if (v13)
    {
      uint64_t v13 = (void *)CFRetain(v13);
      CFTypeRef v14 = v13;
    }
    else
    {
      CFTypeRef v14 = 0;
    }
    CFTypeRef cf = v14;
    if (*(unsigned char *)(v9 + 488) && !*((void *)a3 + 6) && v14)
    {
      buf[0] = 0;
      SceneDataEntity = makeSceneDataEntity(v12, (uint64_t)buf, 1, re::ecs2::Scene::kSharedSceneDataEntityID, 1);
      int v16 = (re::AudioFileAsset *)re::ecs2::EntityComponentCollection::getOrAdd((re::ecs2::Entity *)((char *)SceneDataEntity + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::TimebaseComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
      uint64_t v17 = v16;
      uint64_t v18 = *(void *)(v9 + 40);
      if (v18)
      {
        uint64_t v19 = *(uint64_t **)(v18 + 264);
        uint64_t v20 = re::AudioFileAsset::assetType(v16);
        if (v19 == v20)
        {
          uint64_t v21 = (unsigned __int8 *)(re::AssetHandle::loadedAsset<re::AudioFileAsset>((re::AudioSourceSyncState *)((char *)a3 + 8))
                                  + 152);
LABEL_25:
          BOOL v28 = *v21 == 0;
          goto LABEL_35;
        }
      }
      else
      {
        uint64_t v20 = re::AudioFileAsset::assetType(v16);
      }
      uint64_t v26 = *(void *)(v9 + 40);
      if (v26)
      {
        int v27 = *(uint64_t **)(v26 + 264);
        if (v27 == re::AudioGeneratorAsset::assetType((re::AudioGeneratorAsset *)v20))
        {
          uint64_t v21 = (unsigned __int8 *)(re::AssetHandle::loadedAsset<re::AudioGeneratorAsset>((re::AudioSourceSyncState *)((char *)a3 + 8))
                                  + 88);
          goto LABEL_25;
        }
      }
      else
      {
        re::AudioGeneratorAsset::assetType((re::AudioGeneratorAsset *)v20);
      }
      BOOL v28 = 1;
LABEL_35:
      *((void *)a3 + 6) = (*(uint64_t (**)(re::TimebaseService *, CFTypeRef, uint64_t, BOOL))(*(void *)a4 + 64))(a4, v14, (uint64_t)v17 + 32, v28);
      uint64_t v32 = *(re::ecs2::NetworkComponent **)(v8 + 200);
      if (v32) {
        re::ecs2::NetworkComponent::markDirty(v32, this);
      }
      goto LABEL_37;
    }
    if (v14)
    {
LABEL_37:
      CFRelease(v14);
      return 1;
    }
    if (*(void *)a3)
    {
      if (!*((void *)a3 + 6))
      {
        char v33 = *re::audioLogObjects((re *)v13);
        uint64_t result = os_log_type_enabled(v33, OS_LOG_TYPE_INFO);
        if (!result) {
          return result;
        }
        *(_DWORD *)buf = 134217984;
        uint64_t v41 = v39;
        _os_log_impl(&dword_233120000, v33, OS_LOG_TYPE_INFO, "[RE/ECS] token %llu doesn't have valid timebase ID yet", buf, 0xCu);
        return 0;
      }
      uint64_t v22 = *(void *)a4;
      if (*(unsigned char *)(v9 + 488))
      {
        uint16x8_t v23 = (void *)(*(uint64_t (**)(re::TimebaseService *))(v22 + 104))(a4);
        CFTypeRef v24 = v23;
        int v25 = 0;
        CFTypeRef cf = v23;
        if (!v23) {
          goto LABEL_42;
        }
      }
      else
      {
        uint16x8_t v23 = (void *)(*(uint64_t (**)(re::TimebaseService *))(v22 + 96))(a4);
        CFTypeRef v24 = v23;
        CFTypeRef cf = v23;
        int v25 = 1;
        if (!v23)
        {
LABEL_42:
          CMTimeValue v34 = (id)*re::audioLogObjects((re *)v23);
          if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR))
          {
            uint64_t v35 = *((void *)a3 + 6);
            uint64_t v36 = *((void *)this + 2);
            if (v36)
            {
              uint64_t v37 = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(v36 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioTransientComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType);
              if (v37) {
                uint64_t v36 = *(void *)(v37 + 32);
              }
              else {
                uint64_t v36 = 0;
              }
            }
            *(_DWORD *)buf = 134218496;
            uint64_t v41 = v35;
            __int16 v42 = 1024;
            int v43 = v25;
            __int16 v44 = 2048;
            uint64_t v45 = v36;
            _os_log_error_impl(&dword_233120000, v34, OS_LOG_TYPE_ERROR, "[RE/ECS] Timebase %llu (readonly %d) from connection %llu not available", buf, 0x1Cu);
          }

          return 0;
        }
      }
    }
    else
    {
      int v29 = re::ecs2::AudioPlayerComponent::copyPreferredMasterClock(this);
      uint64_t v30 = (re *)CMTimebaseCreateWithSourceClock((CFAllocatorRef)*MEMORY[0x263EFFB08], v29, (CMTimebaseRef *)&cf);
      if (v30)
      {
        long long v31 = *re::audioLogObjects(v30);
        if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)buf = 0;
          _os_log_error_impl(&dword_233120000, v31, OS_LOG_TYPE_ERROR, "[RE/ECS] Failed to create timebase", buf, 2u);
        }
        CFTypeRef cf = 0;
      }
      CFRelease(v29);
      int v25 = 0;
      CFTypeRef v24 = cf;
      if (!cf) {
        goto LABEL_42;
      }
    }
    re::AudioSourceState::setTimebase((re::AudioSourceState *)v9, v24, v25, (void (__cdecl *)(CFNotificationCenterRef, void *, CFNotificationName, const void *, CFDictionaryRef))AudioPlayerComponentHandleTimebaseTimeJumpedOrEffectiveRateChanged);
    CFTypeRef v14 = cf;
    if (!cf) {
      return 1;
    }
    goto LABEL_37;
  }
  return result;
}

void ___ZN2re4ecs220AudioPlayerComponent19completePreparationEyPNS_20AudioSourceSyncStateEPNS_15TimebaseServiceE_block_invoke(void *a1, void *a2, void *a3)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  id v5 = a2;
  uint64_t v6 = a3;
  uint64_t v7 = v6;
  uint64_t v8 = a1[4];
  if (v6 && (uint64_t v9 = *re::audioLogObjects(v6), os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)))
  {
    uint64_t v17 = a1[5];
    *(_DWORD *)uint64_t v18 = 134218242;
    *(void *)&v18[4] = v17;
    *(_WORD *)&v18[12] = 2112;
    *(void *)&v18[14] = v7;
    _os_log_error_impl(&dword_233120000, v9, OS_LOG_TYPE_ERROR, "[RE/PHASE] Error instantiating audio unit for token %llu: error = %@", v18, 0x16u);
    if (!v8) {
      goto LABEL_12;
    }
  }
  else if (!v8)
  {
    goto LABEL_12;
  }
  uint64_t v10 = *(void *)(v8 + 16);
  if (v10)
  {
    uint64_t v11 = *(void *)(v8 + 16);
    do
    {
      uint64_t v12 = v11;
      uint64_t v11 = *(void *)(v11 + 24);
    }
    while (v11);
    if (*(void *)(v12 + 16))
    {
      do
      {
        uint64_t v13 = v10;
        uint64_t v10 = *(void *)(v10 + 24);
      }
      while (v10);
      CFTypeRef v14 = *(re::EventBus **)(*(void *)(v13 + 16) + 288);
      if (v14)
      {
        uint64_t v15 = a1[6];
        if (v15)
        {
          *(void *)uint64_t v18 = a1[5];
          *(void *)&v18[8] = v5;
          *(void *)&v18[16] = v7;
          Type = re::EventBus::getTypeId<REAudioPlayerDidPrepareAudioUnitEvent>();
          re::EventBus::publish(v14, v15, (uint64_t)Type, (uint64_t)v18, 0x18uLL, 0);
        }
      }
    }
  }
LABEL_12:
}

void ___ZN2re4ecs220AudioPlayerComponent19completePreparationEyPNS_20AudioSourceSyncStateEPNS_15TimebaseServiceE_block_invoke_30(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v7 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v8 = *(void *)([WeakRetained state] + 480);
    if (v8)
    {
      re::ecs2::AudioPlayerComponent::playbackStateDidChange(v8, *(void *)(a1 + 40), a2, a3);
    }
    else
    {
      uint64_t v11 = *re::audioLogObjects(0);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v13 = *(void *)(a1 + 40);
        uint64_t v12 = *(void *)(a1 + 48);
        *(_DWORD *)buf = 134218240;
        uint64_t v20 = v12;
        __int16 v21 = 2048;
        uint64_t v22 = v13;
        _os_log_impl(&dword_233120000, v11, OS_LOG_TYPE_DEFAULT, "[RE/ECS] [Update] AudioPlayerComponent (entityID=%llu) enqueuing state change callback to be called on ecs tick for token %llu", buf, 0x16u);
      }
      uint64_t v14 = [v7 state];
      id v15 = v7;
      uint64_t v16 = *(void *)(a1 + 40);
      uint64_t v17 = operator new(0x28uLL);
      void *v17 = &unk_26E6F7810;
      v17[1] = v15;
      v17[2] = v16;
      v17[3] = a2;
      v17[4] = a3;
      v18[3] = v17;
      re::AudioSourceState::enqueuePendingCallback(v14, (uint64_t)v18);
      std::__function::__value_func<void ()(void)>::~__value_func[abi:nn180100](v18);
    }
  }
  else
  {
    uint64_t v9 = *re::audioLogObjects(0);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = *(void *)(a1 + 40);
      *(_DWORD *)buf = 134217984;
      uint64_t v20 = v10;
      _os_log_impl(&dword_233120000, v9, OS_LOG_TYPE_DEFAULT, "[RE/ECS] [Update] SourceState was deallocated. Cannot invoke state change callback for token %llu", buf, 0xCu);
    }
  }
}

void re::ecs2::AudioPlayerComponent::setRandomPlaybackPositionForTokenIfAppropriate(re::ecs2::AudioPlayerComponent *this, unint64_t a2)
{
  uint64_t v4 = re::ecs2::AudioPlayerComponent::sourceStateForToken(this, a2);
  id v5 = re::AssetHandle::AssetHandle((re::AssetHandle *)v12, (const re::AssetHandle *)(v4 + 32));
  if (v13)
  {
    uint64_t v6 = *(uint64_t **)(v13 + 264);
    if (v6 == re::AudioFileAsset::assetType(v5))
    {
      uint64_t v7 = re::AssetHandle::loadedAsset<re::AudioFileAsset>((re::AudioFileAsset *)v12);
      if (v7)
      {
        uint64_t v8 = v7;
        if (*(unsigned char *)(v7 + 101))
        {
          double v9 = drand48();
          double v10 = (double)*(unint64_t *)(v8 + 136);
          [*(id *)(*(void *)(v8 + 8) + 8) sampleRate];
          re::ecs2::AudioPlayerComponent::setPlaybackPositionFor(this, a2, v9 * (v10 / v11));
        }
      }
    }
  }
  else
  {
    re::AudioFileAsset::assetType(v5);
  }
  re::AssetHandle::~AssetHandle((re::AssetHandle *)v12);
}

void ___ZN2re4ecs220AudioPlayerComponent19completePreparationEyPNS_20AudioSourceSyncStateEPNS_15TimebaseServiceE_block_invoke_32(uint64_t a1, void *a2)
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  uint64_t v3 = a2;
  uint64_t v4 = *(void *)(a1 + 56);
  id v5 = (re *)[*(id *)(a1 + 32) isCancelled];
  if (v5)
  {
    uint64_t v6 = *re::audioLogObjects(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      uint64_t v7 = *(void *)(a1 + 64);
      *(_DWORD *)buf = 134217984;
      uint64_t v24 = v7;
      _os_log_error_impl(&dword_233120000, v6, OS_LOG_TYPE_ERROR, "[RE/PHASE] REEngine was deallocated. cannot invoke preparation callback for token %llu", buf, 0xCu);
    }
  }
  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    if ([WeakRetained state])
    {
      double v9 = (re *)[WeakRetained state];
      double v10 = (re::AudioSourceState *)*((void *)v9 + 60);
      if (v10)
      {
        double v11 = (re::ecs2::AudioPlayerComponent *)[WeakRetained state];
        re::ecs2::AudioPlayerComponent::preparationCompleteCallback(v11, v10, v3, v12);
      }
      else
      {
        id v15 = *re::audioLogObjects(v9);
        if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v17 = *(void *)(a1 + 64);
          uint64_t v16 = *(void *)(a1 + 72);
          *(_DWORD *)buf = 134218240;
          uint64_t v24 = v16;
          __int16 v25 = 2048;
          uint64_t v26 = v17;
          _os_log_impl(&dword_233120000, v15, OS_LOG_TYPE_DEFAULT, "[RE/ECS] [Update] AudioPlayerComponent (entityID=%llu) enqueuing state change callback to be called on ecs tick for token %llu", buf, 0x16u);
        }
        uint64_t v18 = [WeakRetained state];
        id v19 = WeakRetained;
        uint64_t v20 = v3;
        __int16 v21 = operator new(0x20uLL);
        void *v21 = &unk_26E6F7890;
        v21[1] = v4;
        v21[2] = v19;
        v21[3] = v20;
        v22[3] = v21;
        re::AudioSourceState::enqueuePendingCallback(v18, (uint64_t)v22);
        std::__function::__value_func<void ()(void)>::~__value_func[abi:nn180100](v22);
      }
    }
    else
    {
      uint64_t v13 = *re::audioLogObjects(0);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
        uint64_t v14 = *(void *)(a1 + 64);
        *(_DWORD *)buf = 134217984;
        uint64_t v24 = v14;
        _os_log_error_impl(&dword_233120000, v13, OS_LOG_TYPE_ERROR, "[RE/ECS] [Update] SourceState was deallocated. Cannot invoke state change callback for token %llu", buf, 0xCu);
      }
    }
  }
}

void re::ecs2::AudioPlayerComponent::setOneShotSound(re::ecs2::AudioPlayerComponent **this, uint64_t a2)
{
  int canModifyState = (re *)re::ecs2::AudioPlayerComponent::canModifyState(this[2]);
  if ((canModifyState & 1) == 0)
  {
    uint64_t v6 = *re::audioLogObjects(canModifyState);
    if (!os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      return;
    }
    __int16 v10 = 0;
    uint64_t v7 = "AudioPlayerComponent cannot modify state because it is not owned.";
    uint64_t v8 = (uint8_t *)&v10;
LABEL_9:
    _os_log_error_impl(&dword_233120000, v6, OS_LOG_TYPE_ERROR, v7, v8, 2u);
    return;
  }
  uint64_t v11 = a2;
  uint64_t v5 = re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet((uint64_t)(this + 4), &v11);
  if (v5)
  {
    *(unsigned char *)(v5 + 76) = 1;
    return;
  }
  uint64_t v6 = *re::audioLogObjects(0);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
  {
    __int16 v9 = 0;
    uint64_t v7 = "AudioPlayerComponent cannot access sync state for unknown playback token.";
    uint64_t v8 = (uint8_t *)&v9;
    goto LABEL_9;
  }
}

void re::ecs2::AudioPlayerComponent::destroy(re::ecs2::AudioPlayerComponent *this, unint64_t a2)
{
  uint64_t v51 = *MEMORY[0x263EF8340];
  int canModifyState = (re *)re::ecs2::AudioPlayerComponent::canModifyState(*((re::ecs2::AudioPlayerComponent **)this + 2));
  if (canModifyState)
  {
    *(void *)int v48 = a2;
    uint64_t v5 = re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet((uint64_t)this + 32, (uint64_t *)v48);
    if (v5)
    {
      unint64_t v6 = *(void *)(v5 + 232);
      if (!((v6 & 1) != 0 ? v6 >> 1 : v6 >> 1)) {
        atomic_fetch_add((atomic_uint *volatile)this + 81, 0xFFFFFFFF);
      }
    }
    if (*((void *)this + 4))
    {
      unint64_t v8 = 0x94D049BB133111EBLL
         * ((0xBF58476D1CE4E5B9 * (a2 ^ (a2 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (a2 ^ (a2 >> 30))) >> 27));
      unint64_t v9 = (v8 ^ (v8 >> 31)) % *((unsigned int *)this + 14);
      uint64_t v10 = *((void *)this + 5);
      uint64_t v11 = *(unsigned int *)(v10 + 4 * v9);
      if (v11 != 0x7FFFFFFF)
      {
        uint64_t v12 = *((void *)this + 6);
        if (*(void *)(v12 + 288 * v11 + 16) == a2)
        {
          *(_DWORD *)(v10 + 4 * v9) = *(_DWORD *)(v12 + 288 * v11 + 8) & 0x7FFFFFFF;
LABEL_19:
          re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::EntryWithHash::free(*((void *)this + 6) + 288 * v11);
          *(_DWORD *)(*((void *)this + 6) + 288 * v11 + 8) = *(_DWORD *)(*((void *)this + 6) + 288 * v11 + 8) & 0x80000000 | *((_DWORD *)this + 17);
          --*((_DWORD *)this + 15);
          int v17 = *((_DWORD *)this + 18) + 1;
          *((_DWORD *)this + 1re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = v11;
          *((_DWORD *)this + 18) = v17;
        }
        else
        {
          while (1)
          {
            unsigned int v15 = v11;
            int v16 = *(_DWORD *)(v12 + 288 * v11 + 8);
            uint64_t v11 = v16 & 0x7FFFFFFF;
            if ((v16 & 0x7FFFFFFF) == 0x7FFFFFFF) {
              break;
            }
            if (*(void *)(v12 + 288 * v11 + 16) == a2)
            {
              *(_DWORD *)(v12 + 288 * v15 + 8) = *(_DWORD *)(v12 + 288 * v15 + 8) & 0x80000000 | *(_DWORD *)(v12 + 288 * v11 + 8) & 0x7FFFFFFF;
              goto LABEL_19;
            }
          }
        }
      }
    }
    uint64_t v18 = *((void *)this + 2);
    if (v18)
    {
      uint64_t v19 = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(v18 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioTransientComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType);
      if (v19)
      {
        uint64_t v20 = (const re::ecs2::Component *)v19;
        if (*(void *)(v19 + 88))
        {
          unint64_t v21 = 0x94D049BB133111EBLL
              * ((0xBF58476D1CE4E5B9 * (a2 ^ (a2 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (a2 ^ (a2 >> 30))) >> 27));
          unint64_t v22 = (v21 ^ (v21 >> 31)) % *(unsigned int *)(v19 + 112);
          uint64_t v23 = *(void *)(v19 + 96);
          uint64_t v24 = *(unsigned int *)(v23 + 4 * v22);
          if (v24 != 0x7FFFFFFF)
          {
            uint64_t v25 = *(void *)(v19 + 104);
            if (*(void *)(v25 + 48 * v24 + 16) == a2)
            {
              *(_DWORD *)(v23 + 4 * v22) = *(_DWORD *)(v25 + 48 * v24 + 8) & 0x7FFFFFFF;
LABEL_29:
              uint64_t v27 = *(void *)(v19 + 104);
              uint64_t v28 = v27 + 48 * v24;
              int v31 = *(_DWORD *)(v28 + 8);
              uint64_t v30 = (int *)(v28 + 8);
              int v29 = v31;
              if (v31 < 0)
              {
                *uint64_t v30 = v29 & 0x7FFFFFFF;
                uint64_t v27 = *(void *)(v19 + 104);
                int v29 = *(_DWORD *)(v27 + 48 * v24 + 8);
              }
              *(_DWORD *)(v27 + 48 * v24 + 8) = *(_DWORD *)(v19 + 124) | v29 & 0x80000000;
              --*(_DWORD *)(v19 + 116);
              int v32 = *(_DWORD *)(v19 + 128) + 1;
              *(_DWORD *)(v19 + 124) = v24;
              *(_DWORD *)(v19 + 128) = v32;
            }
            else
            {
              while (1)
              {
                unsigned int v26 = v24;
                LODWORD(v24) = *(_DWORD *)(v25 + 48 * v24 + 8) & 0x7FFFFFFF;
                if (v24 == 0x7FFFFFFF) {
                  break;
                }
                if (*(void *)(v25 + 48 * v24 + 16) == a2)
                {
                  *(_DWORD *)(v25 + 48 * v26 + 8) = *(_DWORD *)(v25 + 48 * v26 + 8) & 0x80000000 | *(_DWORD *)(v25 + 48 * v24 + 8) & 0x7FFFFFFF;
                  goto LABEL_29;
                }
              }
            }
          }
        }
        if (*(void *)(v19 + 40))
        {
          unint64_t v33 = 0x94D049BB133111EBLL
              * ((0xBF58476D1CE4E5B9 * (a2 ^ (a2 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (a2 ^ (a2 >> 30))) >> 27));
          unint64_t v34 = (v33 ^ (v33 >> 31)) % *(unsigned int *)(v19 + 64);
          uint64_t v35 = *(void *)(v19 + 48);
          uint64_t v36 = *(unsigned int *)(v35 + 4 * v34);
          if (v36 != 0x7FFFFFFF)
          {
            uint64_t v37 = *(void *)(v19 + 56);
            uint64_t v38 = v37 + 32 * v36;
            if (*(void *)(v38 + 16) == a2)
            {
              *(_DWORD *)(v35 + 4 * v34) = *(_DWORD *)(v38 + 8) & 0x7FFFFFFF;
LABEL_39:
              uint64_t v41 = *(void *)(v19 + 56);
              uint64_t v42 = v41 + 32 * v36;
              int v45 = *(_DWORD *)(v42 + 8);
              __int16 v44 = (int *)(v42 + 8);
              int v43 = v45;
              if (v45 < 0)
              {
                *__int16 v44 = v43 & 0x7FFFFFFF;
                uint64_t v41 = *(void *)(v19 + 56);
                int v43 = *(_DWORD *)(v41 + 32 * v36 + 8);
              }
              *(_DWORD *)(v41 + 32 * v36 + 8) = *(_DWORD *)(v19 + 76) | v43 & 0x80000000;
              --*(_DWORD *)(v19 + 68);
              int v46 = *(_DWORD *)(v19 + 80) + 1;
              *(_DWORD *)(v19 + 76) = v36;
              *(_DWORD *)(v19 + 80) = v46;
            }
            else
            {
              while (1)
              {
                unsigned int v39 = v36;
                uint64_t v36 = *(_DWORD *)(v37 + 32 * v36 + 8) & 0x7FFFFFFF;
                if (v36 == 0x7FFFFFFF) {
                  break;
                }
                uint64_t v40 = v37 + 32 * v36;
                if (*(void *)(v40 + 16) == a2)
                {
                  *(_DWORD *)(v37 + 32 * v39 + 8) = *(_DWORD *)(v37 + 32 * v39 + 8) & 0x80000000 | *(_DWORD *)(v40 + 8) & 0x7FFFFFFF;
                  goto LABEL_39;
                }
              }
            }
          }
        }
        uint64_t v47 = *(re::ecs2::NetworkComponent **)(*((void *)this + 2) + 200);
        if (v47) {
          re::ecs2::NetworkComponent::markDirty(v47, v20);
        }
      }
    }
  }
  else
  {
    uint64_t v13 = *re::audioLogObjects(canModifyState);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      uint64_t v14 = *((void *)this + 38);
      if (!v14) {
        uint64_t v14 = *((void *)this + 44);
      }
      *(_DWORD *)int v48 = 134218240;
      *(void *)&void v48[4] = v14;
      __int16 v49 = 2048;
      unint64_t v50 = a2;
      _os_log_error_impl(&dword_233120000, v13, OS_LOG_TYPE_ERROR, "AudioPlayerComponent (entityID=%llu) cannot modify state for token %llu because it is not owned.", v48, 0x16u);
    }
  }
}

void re::ecs2::AudioPlayerComponent::play(uint64_t a1, unint64_t a2, int a3)
{
  uint64_t v87 = *MEMORY[0x263EF8340];
  atomic_fetch_add((atomic_uint *volatile)(a1 + 312), 1u);
  unint64_t v81 = a2;
  *(void *)block = a2;
  uint64_t v6 = a1 + 32;
  uint64_t v7 = (void *)re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet(a1 + 32, (uint64_t *)block);
  if (!v7) {
    goto LABEL_19;
  }
  unint64_t v8 = v7;
  unint64_t v9 = (re::AudioFileAsset *)(v7 + 1);
  uint64_t v10 = v7[2];
  if (v10)
  {
    uint64_t v11 = *(uint64_t **)(v10 + 264);
    uint64_t v12 = re::AudioFileAsset::assetType((re::AudioFileAsset *)v7);
    if (v11 != v12) {
      goto LABEL_4;
    }
    uint64_t v27 = (re::ecs2::AudioPlayerTelemetryReporter *)re::AssetHandle::loadedAsset<re::AudioFileAsset>(v9);
    if (!v27) {
      goto LABEL_19;
    }
    uint64_t v28 = v27;
    uint64_t Instance = re::ecs2::AudioPlayerTelemetryReporter::getInstance(v27);
    int v25 = *((_DWORD *)v28 + 27);
    uint64_t v26 = *((void *)v28 + 14);
LABEL_17:
    *(void *)block = MEMORY[0x263EF8330];
    *(void *)&block[8] = 3221225472;
    *(void *)&block[16] = ___ZN2re4ecs228AudioPlayerTelemetryReporter31updateCalibrationModeStatisticsE22REAudioCalibrationModed_block_invoke;
    uint64_t v83 = &__block_descriptor_52_e5_v8__0l;
    uint64_t v84 = Instance;
    int v86 = v25;
    uint64_t v85 = v26;
    dispatch_async((dispatch_queue_t)re::ecs2::AudioPlayerTelemetryReporter::m_playerQueue, block);
    goto LABEL_19;
  }
  if (v7[26] || v7[27])
  {
    uint64_t v21 = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(*(void *)(a1 + 16) + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioTransientComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType);
    if (!v21) {
      goto LABEL_19;
    }
    unint64_t v22 = (re::ecs2::AudioPlayerTelemetryReporter *)re::HashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet(v21 + 88, (uint64_t *)&v81);
    if (!v22) {
      goto LABEL_19;
    }
    uint64_t v23 = v22;
    uint64_t Instance = re::ecs2::AudioPlayerTelemetryReporter::getInstance(v22);
    int v25 = *((_DWORD *)v23 + 1);
    uint64_t v26 = *((void *)v23 + 1);
    goto LABEL_17;
  }
  uint64_t v12 = re::AudioFileAsset::assetType((re::AudioFileAsset *)v7);
LABEL_4:
  uint64_t v13 = v8[2];
  if (v13)
  {
    uint64_t v14 = *(uint64_t **)(v13 + 264);
    if (v14 == re::AudioFileGroupAsset::assetType((re::AudioFileGroupAsset *)v12))
    {
      uint64_t v15 = re::AssetHandle::loadedAsset<re::AudioFileGroupAsset>(v9);
      if (v15)
      {
        uint64_t v16 = v15;
        uint32_t v17 = arc4random_uniform(*(_DWORD *)(v15 + 24));
        if (*(void *)(v16 + 24) > (unint64_t)v17)
        {
          uint64_t v18 = (re::ecs2::AudioPlayerTelemetryReporter *)re::AssetHandle::loadedAsset<re::AudioFileAsset>((re::AudioFileAsset *)(*(void *)(v16 + 40) + 24 * v17));
          if (v18)
          {
            uint64_t v19 = v18;
            uint64_t v20 = re::ecs2::AudioPlayerTelemetryReporter::getInstance(v18);
            re::ecs2::AudioPlayerTelemetryReporter::updateCalibrationModeStatistics(v20, *((_DWORD *)v19 + 27), *((double *)v19 + 14));
          }
        }
      }
    }
  }
  else
  {
    re::AudioFileGroupAsset::assetType((re::AudioFileGroupAsset *)v12);
  }
LABEL_19:
  int canModifyState = (re *)re::ecs2::AudioPlayerComponent::canModifyState(*(re::ecs2::AudioPlayerComponent **)(a1 + 16));
  if ((canModifyState & 1) == 0)
  {
    uint64_t v35 = *re::audioLogObjects(canModifyState);
    if (!os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
      return;
    }
    uint64_t v36 = *(void *)(a1 + 304);
    if (!v36) {
      uint64_t v36 = *(void *)(a1 + 352);
    }
    *(_DWORD *)block = 134218240;
    *(void *)&block[4] = v36;
    *(_WORD *)&block[12] = 2048;
    *(void *)&block[14] = a2;
    uint64_t v37 = "AudioPlayerComponent (entityID=%llu) cannot modify state for token %llu because it is not owned.";
    goto LABEL_37;
  }
  uint64_t v30 = re::ecs2::AudioPlayerComponent::sourceStateForToken((re::ecs2::AudioPlayerComponent *)a1, a2);
  if (!v30)
  {
    uint64_t v35 = *re::audioLogObjects(0);
    if (!os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
      return;
    }
    uint64_t v38 = *(void *)(a1 + 304);
    if (!v38) {
      uint64_t v38 = *(void *)(a1 + 352);
    }
    *(_DWORD *)block = 134218240;
    *(void *)&block[4] = v38;
    *(_WORD *)&block[12] = 2048;
    *(void *)&block[14] = a2;
    uint64_t v37 = "AudioPlayerComponent (entityID=%llu) cannot access state for unknown playback token %llu.";
    goto LABEL_37;
  }
  int v31 = v30;
  *(void *)block = a2;
  uint64_t v32 = re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet(v6, (uint64_t *)block);
  if (!v32)
  {
    uint64_t v35 = *re::audioLogObjects(0);
    if (!os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
      return;
    }
    uint64_t v39 = *(void *)(a1 + 304);
    if (!v39) {
      uint64_t v39 = *(void *)(a1 + 352);
    }
    *(_DWORD *)block = 134218240;
    *(void *)&block[4] = v39;
    *(_WORD *)&block[12] = 2048;
    *(void *)&block[14] = a2;
    uint64_t v37 = "AudioPlayerComponent (entityID=%llu) cannot access sync state for unknown playback token %llu.";
LABEL_37:
    _os_log_error_impl(&dword_233120000, v35, OS_LOG_TYPE_ERROR, v37, block, 0x16u);
    return;
  }
  if (*((unsigned char *)v31 + 720)) {
    return;
  }
  uint64_t v33 = v32;
  uint64_t v34 = re::internal::enableSignposts(0, 0);
  if (v34)
  {
    re::AssetHandle::assetInfo((re::AssetHandle *)(v33 + 8));
    uint64_t v34 = kdebug_trace();
  }
  *((_DWORD *)v31 + 181) = 2;
  uint64_t v40 = re::globalAllocators((re *)v34);
  uint64_t v41 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v40[2] + 32))(v40[2], 32, 8);
  uint64_t v42 = v41;
  *(_OWORD *)uint64_t v41 = 0u;
  *(_OWORD *)(v41 + 16) = 0u;
  *(void *)block = v41;
  *(void *)(v41 + 8) = a2;
  if (a3 == 1)
  {
    __int16 v44 = *(uint64_t **)(a1 + 336);
    unint64_t v50 = *(void *)(a1 + 344);
    if ((unint64_t)v44 < v50)
    {
LABEL_47:
      *__int16 v44 = v41;
      uint64_t v51 = v44 + 1;
LABEL_77:
      *(void *)(a1 + 336) = v51;
      return;
    }
    uint64_t v59 = *(void *)(a1 + 328);
    uint64_t v60 = ((uint64_t)v44 - v59) >> 3;
    if (!((unint64_t)(v60 + 1) >> 61))
    {
      uint64_t v61 = v50 - v59;
      uint64_t v62 = v61 >> 2;
      if (v61 >> 2 <= (unint64_t)(v60 + 1)) {
        uint64_t v62 = v60 + 1;
      }
      if ((unint64_t)v61 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v63 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v63 = v62;
      }
      if (v63) {
        unint64_t v63 = (unint64_t)std::__allocate_at_least[abi:nn180100]<std::allocator<zip_entry_t *>>(v63);
      }
      else {
        uint64_t v64 = 0;
      }
      long long v67 = (uint64_t *)(v63 + 8 * v60);
      unint64_t v68 = v63 + 8 * v64;
      uint64_t *v67 = v42;
      uint64_t v51 = v67 + 1;
      CMTime v70 = *(char **)(a1 + 328);
      CMTime v69 = *(char **)(a1 + 336);
      if (v69 != v70)
      {
        do
        {
          uint64_t v71 = *((void *)v69 - 1);
          v69 -= 8;
          *--long long v67 = v71;
        }
        while (v69 != v70);
        CMTime v69 = *(char **)(a1 + 328);
      }
      *(void *)(a1 + 328) = v67;
      *(void *)(a1 + 336) = v51;
      *(void *)(a1 + 344) = v68;
      if (v69) {
        operator delete(v69);
      }
      goto LABEL_77;
    }
LABEL_89:
    abort();
  }
  if (a3) {
    return;
  }
  __int16 v44 = *(uint64_t **)(a1 + 328);
  int v43 = *(uint64_t **)(a1 + 336);
  unint64_t v45 = *(void *)(a1 + 344);
  if ((unint64_t)v43 < v45)
  {
    if (v44 != v43)
    {
      int v46 = (char *)(v44 + 1);
      uint64_t v47 = v43 - 1;
      int v48 = *(void **)(a1 + 336);
      while (v47 < v43)
      {
        uint64_t v49 = *v47++;
        *v48++ = v49;
      }
      *(void *)(a1 + 336) = v48;
      if (v43 != (uint64_t *)v46) {
        memmove(&v43[-(((char *)v43 - v46) >> 3)], v44, (char *)v43 - v46);
      }
      uint64_t v65 = *(void *)block;
      if (v44 > (uint64_t *)block) {
        uint64_t v65 = v42;
      }
      *__int16 v44 = v65;
      return;
    }
    goto LABEL_47;
  }
  unint64_t v52 = v43 - v44 + 1;
  if (v52 >> 61) {
    goto LABEL_89;
  }
  uint64_t v53 = v45 - (void)v44;
  if (v53 >> 2 > v52) {
    unint64_t v52 = v53 >> 2;
  }
  if ((unint64_t)v53 >= 0x7FFFFFFFFFFFFFF8) {
    unint64_t v54 = 0x1FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v54 = v52;
  }
  if (v54)
  {
    uint64_t v55 = (char *)std::__allocate_at_least[abi:nn180100]<std::allocator<zip_entry_t *>>(v54);
    CMTimeValue v57 = v55;
    if (v56)
    {
      char v58 = &v55[8 * v56];
    }
    else
    {
      CMTime v72 = (char *)std::__allocate_at_least[abi:nn180100]<std::allocator<zip_entry_t *>>(1uLL);
      char v58 = &v72[8 * v73];
      if (v57) {
        operator delete(v57);
      }
      CMTimeValue v57 = v72;
    }
  }
  else
  {
    CMTimeValue v57 = (char *)std::__allocate_at_least[abi:nn180100]<std::allocator<zip_entry_t *>>(1uLL);
    char v58 = &v57[8 * v66];
  }
  *(void *)CMTimeValue v57 = v42;
  uint64_t v74 = v57 + 8;
  int v75 = *(uint64_t **)(a1 + 328);
  if (v75 != v44)
  {
    uint64_t v76 = v44;
    do
    {
      uint64_t v77 = *--v76;
      *((void *)v57 - 1) = v77;
      v57 -= 8;
    }
    while (v76 != v75);
  }
  int v78 = *(uint64_t **)(a1 + 336);
  int64_t v79 = (char *)v78 - (char *)v44;
  if (v78 != v44) {
    memmove(v74, v44, (char *)v78 - (char *)v44);
  }
  CMTime v80 = *(void **)(a1 + 328);
  *(void *)(a1 + 328) = v57;
  *(void *)(a1 + 336) = &v74[v79];
  *(void *)(a1 + 344) = v58;
  if (v80) {
    operator delete(v80);
  }
}

void re::ecs2::AudioPlayerComponent::stop(re::ecs2::AudioPlayerComponent **this, unint64_t a2)
{
  uint64_t v35 = *MEMORY[0x263EF8340];
  int canModifyState = (re *)re::ecs2::AudioPlayerComponent::canModifyState(this[2]);
  if ((canModifyState & 1) == 0)
  {
    uint64_t v10 = *re::audioLogObjects(canModifyState);
    if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      return;
    }
    uint64_t v11 = this[38];
    if (!v11) {
      uint64_t v11 = this[44];
    }
    *(_DWORD *)uint64_t v32 = 134218240;
    *(void *)&v32[4] = v11;
    __int16 v33 = 2048;
    unint64_t v34 = a2;
    uint64_t v12 = "AudioPlayerComponent (entityID=%llu) cannot modify state for token %llu because it is not owned.";
    goto LABEL_19;
  }
  uint64_t v5 = re::ecs2::AudioPlayerComponent::sourceStateForToken((re::ecs2::AudioPlayerComponent *)this, a2);
  if (!v5)
  {
    uint64_t v10 = *re::audioLogObjects(0);
    if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      return;
    }
    uint64_t v13 = this[38];
    if (!v13) {
      uint64_t v13 = this[44];
    }
    *(_DWORD *)uint64_t v32 = 134218240;
    *(void *)&v32[4] = v13;
    __int16 v33 = 2048;
    unint64_t v34 = a2;
    uint64_t v12 = "AudioPlayerComponent (entityID=%llu) cannot access state for unknown playback token %llu.";
    goto LABEL_19;
  }
  uint64_t v6 = v5;
  *(void *)uint64_t v32 = a2;
  uint64_t v7 = re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet((uint64_t)(this + 4), (uint64_t *)v32);
  if (!v7)
  {
    uint64_t v10 = *re::audioLogObjects(0);
    if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      return;
    }
    uint64_t v14 = this[38];
    if (!v14) {
      uint64_t v14 = this[44];
    }
    *(_DWORD *)uint64_t v32 = 134218240;
    *(void *)&v32[4] = v14;
    __int16 v33 = 2048;
    unint64_t v34 = a2;
    uint64_t v12 = "AudioPlayerComponent (entityID=%llu) cannot access sync state for unknown playback token %llu.";
LABEL_19:
    _os_log_error_impl(&dword_233120000, v10, OS_LOG_TYPE_ERROR, v12, v32, 0x16u);
    return;
  }
  if (!*((unsigned char *)v6 + 720))
  {
    uint64_t v8 = v7;
    uint64_t v9 = re::internal::enableSignposts(0, 0);
    if (v9)
    {
      re::AssetHandle::assetInfo((re::AssetHandle *)(v8 + 8));
      uint64_t v9 = kdebug_trace();
    }
    *((_DWORD *)v6 + 181) = 3;
    uint64_t v15 = re::globalAllocators((re *)v9);
    uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v15[2] + 32))(v15[2], 32, 8);
    uint64_t v17 = v16;
    *(_OWORD *)uint64_t v16 = 0u;
    *(_OWORD *)(v16 + 16) = 0u;
    *(_DWORD *)uint64_t v16 = 2;
    *(void *)(v16 + 8) = a2;
    uint64_t v19 = (uint64_t *)this[42];
    uint64_t v18 = this[43];
    if (v19 >= (uint64_t *)v18)
    {
      uint64_t v21 = this[41];
      uint64_t v22 = ((char *)v19 - (char *)v21) >> 3;
      if ((unint64_t)(v22 + 1) >> 61) {
        abort();
      }
      uint64_t v23 = v18 - v21;
      uint64_t v24 = v23 >> 2;
      if (v23 >> 2 <= (unint64_t)(v22 + 1)) {
        uint64_t v24 = v22 + 1;
      }
      if ((unint64_t)v23 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v25 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v25 = v24;
      }
      if (v25) {
        unint64_t v25 = (unint64_t)std::__allocate_at_least[abi:nn180100]<std::allocator<zip_entry_t *>>(v25);
      }
      else {
        uint64_t v26 = 0;
      }
      uint64_t v27 = (re::ecs2::AudioPlayerComponent *)(v25 + 8 * v22);
      uint64_t v28 = (re::ecs2::AudioPlayerComponent *)(v25 + 8 * v26);
      *(void *)uint64_t v27 = v17;
      uint64_t v20 = (re::ecs2::AudioPlayerComponent *)((char *)v27 + 8);
      uint64_t v30 = this[41];
      int v29 = this[42];
      if (v29 != v30)
      {
        do
        {
          uint64_t v31 = *((void *)v29 - 1);
          int v29 = (re::ecs2::AudioPlayerComponent *)((char *)v29 - 8);
          *((void *)v27 - 1) = v31;
          uint64_t v27 = (re::ecs2::AudioPlayerComponent *)((char *)v27 - 8);
        }
        while (v29 != v30);
        int v29 = this[41];
      }
      this[41] = v27;
      this[42] = v20;
      this[43] = v28;
      if (v29) {
        operator delete(v29);
      }
    }
    else
    {
      *uint64_t v19 = v16;
      uint64_t v20 = (re::ecs2::AudioPlayerComponent *)(v19 + 1);
    }
    this[42] = v20;
  }
}

void re::ecs2::AudioPlayerComponent::pause(re::ecs2::AudioPlayerComponent **this, unint64_t a2)
{
  uint64_t v35 = *MEMORY[0x263EF8340];
  int canModifyState = (re *)re::ecs2::AudioPlayerComponent::canModifyState(this[2]);
  if ((canModifyState & 1) == 0)
  {
    uint64_t v10 = *re::audioLogObjects(canModifyState);
    if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      return;
    }
    uint64_t v11 = this[38];
    if (!v11) {
      uint64_t v11 = this[44];
    }
    *(_DWORD *)uint64_t v32 = 134218240;
    *(void *)&v32[4] = v11;
    __int16 v33 = 2048;
    unint64_t v34 = a2;
    uint64_t v12 = "AudioPlayerComponent (entityID=%llu) cannot modify state for token %llu because it is not owned.";
    goto LABEL_19;
  }
  uint64_t v5 = re::ecs2::AudioPlayerComponent::sourceStateForToken((re::ecs2::AudioPlayerComponent *)this, a2);
  if (!v5)
  {
    uint64_t v10 = *re::audioLogObjects(0);
    if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      return;
    }
    uint64_t v13 = this[38];
    if (!v13) {
      uint64_t v13 = this[44];
    }
    *(_DWORD *)uint64_t v32 = 134218240;
    *(void *)&v32[4] = v13;
    __int16 v33 = 2048;
    unint64_t v34 = a2;
    uint64_t v12 = "AudioPlayerComponent (entityID=%llu) cannot access state for unknown playback token %llu.";
    goto LABEL_19;
  }
  uint64_t v6 = v5;
  *(void *)uint64_t v32 = a2;
  uint64_t v7 = re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet((uint64_t)(this + 4), (uint64_t *)v32);
  if (!v7)
  {
    uint64_t v10 = *re::audioLogObjects(0);
    if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      return;
    }
    uint64_t v14 = this[38];
    if (!v14) {
      uint64_t v14 = this[44];
    }
    *(_DWORD *)uint64_t v32 = 134218240;
    *(void *)&v32[4] = v14;
    __int16 v33 = 2048;
    unint64_t v34 = a2;
    uint64_t v12 = "AudioPlayerComponent (entityID=%llu) cannot access sync state for unknown playback token %llu.";
LABEL_19:
    _os_log_error_impl(&dword_233120000, v10, OS_LOG_TYPE_ERROR, v12, v32, 0x16u);
    return;
  }
  if (!*((unsigned char *)v6 + 720))
  {
    uint64_t v8 = v7;
    uint64_t v9 = re::internal::enableSignposts(0, 0);
    if (v9)
    {
      re::AssetHandle::assetInfo((re::AssetHandle *)(v8 + 8));
      uint64_t v9 = kdebug_trace();
    }
    *((_DWORD *)v6 + 181) = 1;
    uint64_t v15 = re::globalAllocators((re *)v9);
    uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v15[2] + 32))(v15[2], 32, 8);
    uint64_t v17 = v16;
    *(_OWORD *)uint64_t v16 = 0u;
    *(_OWORD *)(v16 + 16) = 0u;
    *(_DWORD *)uint64_t v16 = 1;
    *(void *)(v16 + 8) = a2;
    uint64_t v19 = (uint64_t *)this[42];
    uint64_t v18 = this[43];
    if (v19 >= (uint64_t *)v18)
    {
      uint64_t v21 = this[41];
      uint64_t v22 = ((char *)v19 - (char *)v21) >> 3;
      if ((unint64_t)(v22 + 1) >> 61) {
        abort();
      }
      uint64_t v23 = v18 - v21;
      uint64_t v24 = v23 >> 2;
      if (v23 >> 2 <= (unint64_t)(v22 + 1)) {
        uint64_t v24 = v22 + 1;
      }
      if ((unint64_t)v23 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v25 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v25 = v24;
      }
      if (v25) {
        unint64_t v25 = (unint64_t)std::__allocate_at_least[abi:nn180100]<std::allocator<zip_entry_t *>>(v25);
      }
      else {
        uint64_t v26 = 0;
      }
      uint64_t v27 = (re::ecs2::AudioPlayerComponent *)(v25 + 8 * v22);
      uint64_t v28 = (re::ecs2::AudioPlayerComponent *)(v25 + 8 * v26);
      *(void *)uint64_t v27 = v17;
      uint64_t v20 = (re::ecs2::AudioPlayerComponent *)((char *)v27 + 8);
      uint64_t v30 = this[41];
      int v29 = this[42];
      if (v29 != v30)
      {
        do
        {
          uint64_t v31 = *((void *)v29 - 1);
          int v29 = (re::ecs2::AudioPlayerComponent *)((char *)v29 - 8);
          *((void *)v27 - 1) = v31;
          uint64_t v27 = (re::ecs2::AudioPlayerComponent *)((char *)v27 - 8);
        }
        while (v29 != v30);
        int v29 = this[41];
      }
      this[41] = v27;
      this[42] = v20;
      this[43] = v28;
      if (v29) {
        operator delete(v29);
      }
    }
    else
    {
      *uint64_t v19 = v16;
      uint64_t v20 = (re::ecs2::AudioPlayerComponent *)(v19 + 1);
    }
    this[42] = v20;
  }
}

void re::ecs2::AudioPlayerComponent::doPlay(re::ecs2::AudioPlayerComponent *this, CMTimeValue a2, re::AudioSourceState *a3, re::AudioSourceSyncState *a4)
{
  uint64_t v67 = *MEMORY[0x263EF8340];
  if (*((unsigned char *)a3 + 720)) {
    return;
  }
  uint64_t v8 = (OpaqueCMTimebase *)*((void *)a3 + 87);
  if (CMTimebaseGetRate(v8) != 0.0)
  {
    uint64_t v10 = *re::audioLogObjects(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(buf.value) = 134217984;
      *(CMTimeValue *)((char *)&buf.value + 4) = a2;
      _os_log_impl(&dword_233120000, v10, OS_LOG_TYPE_DEFAULT, "token %llu is already playing", (uint8_t *)&buf, 0xCu);
    }
    return;
  }
  CMClockOrTimebaseRef v11 = CMTimebaseCopySource(v8);
  CFTypeID v12 = CFGetTypeID(v11);
  CFTypeID TypeID = CMTimebaseGetTypeID();
  CFRelease(v11);
  double v15 = 0.0;
  if (v12 != TypeID)
  {
    uint64_t v16 = *((void *)a3 + 5);
    if (v16)
    {
      unsigned int v17 = atomic_load((unsigned int *)(v16 + 704));
      if (v17 == 2)
      {
        uint64_t v18 = (re::AudioSourceState *)((char *)a3 + 32);
        uint64_t v19 = *((void *)a3 + 5);
        if (v19)
        {
          uint64_t v20 = *(uint64_t **)(v19 + 264);
          uint64_t v21 = re::AudioFileAsset::assetType((re::AudioFileAsset *)v14);
          if (v20 == v21)
          {
            uint64_t v14 = re::AssetHandle::loadedAsset<re::AudioFileAsset>((re::AudioSourceState *)((char *)a3 + 32));
            double v22 = *(double *)(v14 + 144);
LABEL_42:
            if (v22 >= 0.0)
            {
              double v15 = v22;
              if (v22 > 0.5) {
                double v15 = 0.5;
              }
            }
            goto LABEL_45;
          }
        }
        else
        {
          uint64_t v21 = re::AudioFileAsset::assetType((re::AudioFileAsset *)v14);
        }
        uint64_t v23 = *((void *)a3 + 5);
        if (v23)
        {
          uint64_t v24 = *(uint64_t **)(v23 + 264);
          unint64_t v25 = re::AudioGeneratorAsset::assetType((re::AudioGeneratorAsset *)v21);
          if (v24 == v25)
          {
            uint64_t v14 = re::AssetHandle::loadedAsset<re::AudioGeneratorAsset>((re::AudioSourceState *)((char *)a3 + 32));
            double v22 = *(double *)(v14 + 96);
            goto LABEL_42;
          }
        }
        else
        {
          unint64_t v25 = re::AudioGeneratorAsset::assetType((re::AudioGeneratorAsset *)v21);
        }
        uint64_t v26 = *((void *)a3 + 5);
        if (v26)
        {
          uint64_t v27 = *(uint64_t **)(v26 + 264);
          uint64_t v28 = re::AudioFileGroupAsset::assetType((re::AudioFileGroupAsset *)v25);
          if (v27 == v28)
          {
            uint64_t v14 = re::AssetHandle::loadedAsset<re::AudioFileGroupAsset>((re::AudioSourceState *)((char *)a3 + 32));
            if (!*(void *)(v14 + 24)) {
              goto LABEL_45;
            }
            int v29 = (const re::AssetHandle *)re::DynamicArray<re::AssetHandle>::operator[](v14 + 8, 0);
            uint64_t v30 = re::AssetHandle::AssetHandle((re::AssetHandle *)&buf, v29);
            if (*(void *)&buf.timescale)
            {
              uint64_t v31 = *(uint64_t **)(*(void *)&buf.timescale + 264);
              double v22 = 0.0;
              if (v31 == re::AudioFileAsset::assetType(v30)) {
                double v22 = *(double *)(re::AssetHandle::loadedAsset<re::AudioFileAsset>((re::AudioFileAsset *)&buf) + 144);
              }
            }
            else
            {
              re::AudioFileAsset::assetType(v30);
              double v22 = 0.0;
            }
            re::AssetHandle::~AssetHandle((re::AssetHandle *)&buf);
            goto LABEL_42;
          }
        }
        else
        {
          uint64_t v28 = re::AudioFileGroupAsset::assetType((re::AudioFileGroupAsset *)v25);
        }
        int v32 = *((unsigned __int8 *)a3 + 281);
        __int16 v33 = *re::audioLogObjects((re *)v28);
        BOOL v34 = os_log_type_enabled(v33, OS_LOG_TYPE_ERROR);
        if (v32)
        {
          if (!v34) {
            return;
          }
          CMTimeValue v35 = *((void *)this + 38);
          if (!v35) {
            CMTimeValue v35 = *((void *)this + 44);
          }
          uint64_t v36 = v33;
          uint64_t v37 = re::AssetHandle::assetInfo(v18);
          if (v37[17]) {
            uint64_t v38 = (char *)v37[18];
          }
          else {
            uint64_t v38 = (char *)v37 + 137;
          }
          LODWORD(buf.value) = 134218499;
          *(CMTimeValue *)((char *)&buf.value + 4) = v35;
          LOWORD(buf.flags) = 2048;
          *(void *)((char *)&buf.flags + 2) = a2;
          HIWORD(buf.epoch) = 2085;
          double v64 = *(double *)&v38;
          uint64_t v39 = "AudioPlayerComponent (entityID=%llu) token %llu cannot play unknown asset type '%{sensitive}s'.";
        }
        else
        {
          if (!v34) {
            return;
          }
          CMTimeValue v40 = *((void *)this + 38);
          if (!v40) {
            CMTimeValue v40 = *((void *)this + 44);
          }
          uint64_t v36 = v33;
          uint64_t v41 = re::AssetHandle::assetInfo(v18);
          if (v41[17]) {
            uint64_t v42 = (char *)v41[18];
          }
          else {
            uint64_t v42 = (char *)v41 + 137;
          }
          LODWORD(buf.value) = 134218498;
          *(CMTimeValue *)((char *)&buf.value + 4) = v40;
          LOWORD(buf.flags) = 2048;
          *(void *)((char *)&buf.flags + 2) = a2;
          HIWORD(buf.epoch) = 2080;
          double v64 = *(double *)&v42;
          uint64_t v39 = "AudioPlayerComponent (entityID=%llu) token %llu cannot play unknown asset type '%s'.";
        }
        _os_log_error_impl(&dword_233120000, v36, OS_LOG_TYPE_ERROR, v39, (uint8_t *)&buf, 0x20u);

        return;
      }
    }
  }
LABEL_45:
  int v43 = *((unsigned __int8 *)a3 + 281);
  __int16 v44 = (id)*re::audioLogObjects((re *)v14);
  BOOL v45 = os_log_type_enabled(v44, OS_LOG_TYPE_DEFAULT);
  if (v43)
  {
    if (v45)
    {
      uint64_t v46 = *((void *)this + 2);
      if (v46
        && (uint64_t v47 = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(v46 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioTransientComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType)) != 0)
      {
        uint64_t v48 = *(void *)(v47 + 32);
      }
      else
      {
        uint64_t v48 = 0;
      }
      unint64_t v52 = re::AssetHandle::assetInfo((re::AudioSourceState *)((char *)a3 + 32));
      if (v52[17]) {
        uint64_t v53 = (char *)v52[18];
      }
      else {
        uint64_t v53 = (char *)v52 + 137;
      }
      LODWORD(buf.value) = 134218755;
      *(CMTimeValue *)((char *)&buf.value + 4) = a2;
      LOWORD(buf.flags) = 2048;
      *(void *)((char *)&buf.flags + 2) = v48;
      HIWORD(buf.epoch) = 2048;
      double v64 = v15 * 1000.0;
      __int16 v65 = 2085;
      uint64_t v66 = v53;
      unint64_t v54 = "Setting token %llu from connection %llu to play with alignment delay %0.2f msec, REAsset = '%{sensitive}s'";
LABEL_64:
      _os_log_impl(&dword_233120000, v44, OS_LOG_TYPE_DEFAULT, v54, (uint8_t *)&buf, 0x2Au);
    }
  }
  else if (v45)
  {
    uint64_t v49 = *((void *)this + 2);
    if (v49
      && (uint64_t v50 = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(v49 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioTransientComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType)) != 0)
    {
      uint64_t v51 = *(void *)(v50 + 32);
    }
    else
    {
      uint64_t v51 = 0;
    }
    uint64_t v55 = re::AssetHandle::assetInfo((re::AudioSourceState *)((char *)a3 + 32));
    if (v55[17]) {
      uint64_t v56 = (char *)v55[18];
    }
    else {
      uint64_t v56 = (char *)v55 + 137;
    }
    LODWORD(buf.value) = 134218754;
    *(CMTimeValue *)((char *)&buf.value + 4) = a2;
    LOWORD(buf.flags) = 2048;
    *(void *)((char *)&buf.flags + 2) = v51;
    HIWORD(buf.epoch) = 2048;
    double v64 = v15 * 1000.0;
    __int16 v65 = 2080;
    uint64_t v66 = v56;
    unint64_t v54 = "Setting token %llu from connection %llu to play with alignment delay %0.2f msec, REAsset = '%s'";
    goto LABEL_64;
  }

  if (a4) {
    *((void *)a4 + 4) = 1;
  }
  double Rate = CMTimebaseGetRate(v8);
  double v58 = *((float *)a3 + 78);
  if (Rate != v58)
  {
    if (v15 != 0.0)
    {
      memset(&buf, 0, sizeof(buf));
      CMTimeMakeWithSeconds(&buf, v15, 1000000000);
      memset(&v62, 0, sizeof(v62));
      CMTimebaseGetTime(&v62, v8);
      CMTime lhs = v62;
      CMTime v59 = buf;
      CMTimeSubtract(&time, &lhs, &v59);
      CMTimebaseSetTime(v8, &time);
      double v58 = *((float *)a3 + 78);
    }
    CMTimebaseSetRate(v8, v58);
  }
}

void re::ecs2::AudioPlayerComponent::doStopAll(re::ecs2::AudioPlayerComponent *this)
{
  uint64_t v2 = *((unsigned int *)this + 28);
  if (v2)
  {
    uint64_t v3 = 0;
    uint64_t v4 = (int *)(*((void *)this + 12) + 8);
    while (1)
    {
      int v5 = *v4;
      v4 += 8;
      if (v5 < 0) {
        break;
      }
      if (v2 == ++v3)
      {
        LODWORD(v3) = *((_DWORD *)this + 28);
        break;
      }
    }
  }
  else
  {
    LODWORD(v3) = 0;
  }
  if (v2 != v3)
  {
    uint64_t v6 = v3;
    do
    {
      uint64_t v7 = *((void *)this + 12) + 32 * v6;
      uint64_t v9 = *(re::AudioSourceState **)(v7 + 24);
      unint64_t v13 = *(void *)(v7 + 16);
      unint64_t v8 = v13;
      uint64_t v10 = (re::AudioSourceSyncState *)re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet((uint64_t)this + 32, (uint64_t *)&v13);
      re::ecs2::AudioPlayerComponent::doStop(this, v8, v9, v10);
      if (*((_DWORD *)this + 28) <= (v3 + 1)) {
        int v11 = v3 + 1;
      }
      else {
        int v11 = *((_DWORD *)this + 28);
      }
      int v12 = v3;
      while (1)
      {
        uint64_t v6 = (v12 + 1);
        if (v11 - 1 == v12) {
          break;
        }
        ++v12;
        LODWORD(v3) = v6;
        if ((*(_DWORD *)(*((void *)this + 12) + 32 * v6 + 8) & 0x80000000) != 0) {
          goto LABEL_17;
        }
      }
      LODWORD(v3) = v11;
LABEL_17:
      ;
    }
    while (v2 != v3);
  }
}

uint64_t re::ecs2::AudioPlayerComponent::doPause(re::ecs2::AudioPlayerComponent *this, uint64_t a2, re::AudioSourceState *a3, re::AudioSourceSyncState *a4)
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  if (*((unsigned char *)a3 + 720)) {
    return 0;
  }
  int v9 = *((unsigned __int8 *)a3 + 281);
  uint64_t v10 = (id)*re::audioLogObjects(this);
  BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);
  if (v9)
  {
    if (!v11) {
      goto LABEL_23;
    }
    uint64_t v12 = *((void *)this + 2);
    if (v12
      && (uint64_t v13 = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(v12 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioTransientComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType)) != 0)
    {
      uint64_t v14 = *(void *)(v13 + 32);
    }
    else
    {
      uint64_t v14 = 0;
    }
    uint64_t v18 = re::AssetHandle::assetInfo((re::AudioSourceState *)((char *)a3 + 32));
    if (v18[17]) {
      uint64_t v19 = (char *)v18[18];
    }
    else {
      uint64_t v19 = (char *)v18 + 137;
    }
    int v23 = 134218499;
    uint64_t v24 = a2;
    __int16 v25 = 2048;
    uint64_t v26 = v14;
    __int16 v27 = 2085;
    uint64_t v28 = v19;
    uint64_t v20 = "Setting token %llu from connection %llu to pause, REAsset = '%{sensitive}s'";
  }
  else
  {
    if (!v11) {
      goto LABEL_23;
    }
    uint64_t v15 = *((void *)this + 2);
    if (v15
      && (uint64_t v16 = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(v15 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioTransientComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType)) != 0)
    {
      uint64_t v17 = *(void *)(v16 + 32);
    }
    else
    {
      uint64_t v17 = 0;
    }
    uint64_t v21 = re::AssetHandle::assetInfo((re::AudioSourceState *)((char *)a3 + 32));
    if (v21[17]) {
      double v22 = (char *)v21[18];
    }
    else {
      double v22 = (char *)v21 + 137;
    }
    int v23 = 134218498;
    uint64_t v24 = a2;
    __int16 v25 = 2048;
    uint64_t v26 = v17;
    __int16 v27 = 2080;
    uint64_t v28 = v22;
    uint64_t v20 = "Setting token %llu from connection %llu to pause, REAsset = '%s'";
  }
  _os_log_impl(&dword_233120000, v10, OS_LOG_TYPE_DEFAULT, v20, (uint8_t *)&v23, 0x20u);
LABEL_23:

  if (a4)
  {
    if (*((void *)a4 + 4) == 1) {
      *((void *)a4 + 4) = 3;
    }
  }
  if (CMTimebaseGetRate(*((CMTimebaseRef *)a3 + 87)) == 0.0) {
    return 0;
  }
  CMTimebaseSetRate(*((CMTimebaseRef *)a3 + 87), 0.0);
  return 1;
}

void re::ecs2::AudioPlayerComponent::resumeAll(re::ecs2::AudioPlayerComponent **this)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  int canModifyState = (re *)re::ecs2::AudioPlayerComponent::canModifyState(this[2]);
  if (canModifyState)
  {
    uint64_t v3 = *((unsigned int *)this + 28);
    if (v3)
    {
      uint64_t v4 = 0;
      int v5 = (int *)((char *)this[12] + 8);
      while (1)
      {
        int v6 = *v5;
        v5 += 8;
        if (v6 < 0) {
          break;
        }
        if (v3 == ++v4)
        {
          LODWORD(v4) = *((_DWORD *)this + 28);
          break;
        }
      }
    }
    else
    {
      LODWORD(v4) = 0;
    }
    if (v3 != v4)
    {
      uint64_t v9 = v4;
      do
      {
        re::ecs2::AudioPlayerComponent::play((uint64_t)this, *((void *)this[12] + 4 * v9 + 2), 1);
        if (*((_DWORD *)this + 28) <= (v4 + 1)) {
          int v10 = v4 + 1;
        }
        else {
          int v10 = *((_DWORD *)this + 28);
        }
        int v11 = v4;
        while (1)
        {
          uint64_t v9 = (v11 + 1);
          if (v10 - 1 == v11) {
            break;
          }
          ++v11;
          LODWORD(v4) = v9;
          if ((*((_DWORD *)this[12] + 8 * v9 + 2) & 0x80000000) != 0) {
            goto LABEL_22;
          }
        }
        LODWORD(v4) = v10;
LABEL_22:
        ;
      }
      while (v3 != v4);
    }
  }
  else
  {
    uint64_t v7 = *re::audioLogObjects(canModifyState);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      unint64_t v8 = this[38];
      if (!v8) {
        unint64_t v8 = this[44];
      }
      int v12 = 134217984;
      uint64_t v13 = v8;
      _os_log_error_impl(&dword_233120000, v7, OS_LOG_TYPE_ERROR, "AudioPlayerComponent::resumeAll() (entityID=%llu) cannot modify state because component is not owned.", (uint8_t *)&v12, 0xCu);
    }
  }
}

void re::ecs2::AudioPlayerComponent::stopAll(re::ecs2::AudioPlayerComponent **this)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  int canModifyState = (re *)re::ecs2::AudioPlayerComponent::canModifyState(this[2]);
  if (canModifyState)
  {
    uint64_t v3 = *((unsigned int *)this + 28);
    if (v3)
    {
      uint64_t v4 = 0;
      int v5 = (int *)((char *)this[12] + 8);
      while (1)
      {
        int v6 = *v5;
        v5 += 8;
        if (v6 < 0) {
          break;
        }
        if (v3 == ++v4)
        {
          LODWORD(v4) = *((_DWORD *)this + 28);
          break;
        }
      }
    }
    else
    {
      LODWORD(v4) = 0;
    }
    if (v3 != v4)
    {
      uint64_t v9 = v4;
      do
      {
        re::ecs2::AudioPlayerComponent::stop(this, *((void *)this[12] + 4 * v9 + 2));
        if (*((_DWORD *)this + 28) <= (v4 + 1)) {
          int v10 = v4 + 1;
        }
        else {
          int v10 = *((_DWORD *)this + 28);
        }
        int v11 = v4;
        while (1)
        {
          uint64_t v9 = (v11 + 1);
          if (v10 - 1 == v11) {
            break;
          }
          ++v11;
          LODWORD(v4) = v9;
          if ((*((_DWORD *)this[12] + 8 * v9 + 2) & 0x80000000) != 0) {
            goto LABEL_22;
          }
        }
        LODWORD(v4) = v10;
LABEL_22:
        ;
      }
      while (v3 != v4);
    }
  }
  else
  {
    uint64_t v7 = *re::audioLogObjects(canModifyState);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      unint64_t v8 = this[38];
      if (!v8) {
        unint64_t v8 = this[44];
      }
      int v12 = 134217984;
      uint64_t v13 = v8;
      _os_log_error_impl(&dword_233120000, v7, OS_LOG_TYPE_ERROR, "AudioPlayerComponent::stopAll() (entityID=%llu) cannot modify state because component is not owned.", (uint8_t *)&v12, 0xCu);
    }
  }
}

void re::ecs2::AudioPlayerComponent::pauseAll(re::ecs2::AudioPlayerComponent **this)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  int canModifyState = (re *)re::ecs2::AudioPlayerComponent::canModifyState(this[2]);
  if (canModifyState)
  {
    uint64_t v3 = *((unsigned int *)this + 28);
    if (v3)
    {
      uint64_t v4 = 0;
      int v5 = (int *)((char *)this[12] + 8);
      while (1)
      {
        int v6 = *v5;
        v5 += 8;
        if (v6 < 0) {
          break;
        }
        if (v3 == ++v4)
        {
          LODWORD(v4) = *((_DWORD *)this + 28);
          break;
        }
      }
    }
    else
    {
      LODWORD(v4) = 0;
    }
    if (v3 != v4)
    {
      uint64_t v9 = v4;
      do
      {
        re::ecs2::AudioPlayerComponent::pause(this, *((void *)this[12] + 4 * v9 + 2));
        if (*((_DWORD *)this + 28) <= (v4 + 1)) {
          int v10 = v4 + 1;
        }
        else {
          int v10 = *((_DWORD *)this + 28);
        }
        int v11 = v4;
        while (1)
        {
          uint64_t v9 = (v11 + 1);
          if (v10 - 1 == v11) {
            break;
          }
          ++v11;
          LODWORD(v4) = v9;
          if ((*((_DWORD *)this[12] + 8 * v9 + 2) & 0x80000000) != 0) {
            goto LABEL_22;
          }
        }
        LODWORD(v4) = v10;
LABEL_22:
        ;
      }
      while (v3 != v4);
    }
  }
  else
  {
    uint64_t v7 = *re::audioLogObjects(canModifyState);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      unint64_t v8 = this[38];
      if (!v8) {
        unint64_t v8 = this[44];
      }
      int v12 = 134217984;
      uint64_t v13 = v8;
      _os_log_error_impl(&dword_233120000, v7, OS_LOG_TYPE_ERROR, "AudioPlayerComponent::pauseAll() (entityID=%llu) cannot modify state because component is not owned.", (uint8_t *)&v12, 0xCu);
    }
  }
}

double re::ecs2::AudioPlayerComponent::playbackPositionFor(CMTimeValue *this, unint64_t a2)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v4 = re::ecs2::AudioPlayerComponent::sourceStateForToken((re::ecs2::AudioPlayerComponent *)this, a2);
  if (v4)
  {
    int v5 = v4;
    if (*((unsigned char *)v4 + 736))
    {
      Float64 Seconds = *((double *)v4 + 91);
    }
    else
    {
      memset(&buf, 0, sizeof(buf));
      CMTimebaseGetTime(&buf, *((CMTimebaseRef *)v4 + 87));
      CMTime v23 = buf;
      Float64 Seconds = CMTimeGetSeconds(&v23);
    }
    double v8 = 0.0;
    if (Seconds >= 0.0)
    {
      int v10 = re::AssetHandle::AssetHandle((re::AssetHandle *)&buf, (re::ecs2::NetworkComponent *)((char *)v5 + 32));
      if (*(void *)&buf.timescale)
      {
        unsigned int v11 = atomic_load((unsigned int *)(*(void *)&buf.timescale + 704));
        if (v11 == 2)
        {
          int v12 = *(uint64_t **)(*(void *)&buf.timescale + 264);
          if (v12 == re::AudioFileAsset::assetType(v10))
          {
            uint64_t v13 = re::AssetHandle::loadedAsset<re::AudioFileAsset>((re::AudioFileAsset *)&buf);
            unint64_t v14 = *(void *)(v13 + 136);
            [*(id *)(*(void *)(v13 + 8) + 8) sampleRate];
            int v16 = *(_DWORD *)(v13 + 96);
            if (v16)
            {
              double v8 = (double)v14 / v15;
              if (v16 < 0 || Seconds < v8 * (double)v16)
              {
                double v17 = remainder(Seconds, v8);
                double v18 = -0.0;
                if (v17 < 0.0) {
                  double v18 = v8;
                }
                double v8 = v17 + v18;
              }
            }
            else
            {
              double v20 = (double)*(unint64_t *)(v13 + 136);
              [*(id *)(*(void *)(v13 + 8) + 8) sampleRate];
              double v22 = v20 / v21;
              if (Seconds <= v22) {
                double v8 = Seconds;
              }
              else {
                double v8 = v22;
              }
            }
          }
          else
          {
            double v8 = Seconds;
          }
        }
      }
      re::AssetHandle::~AssetHandle((re::AssetHandle *)&buf);
    }
  }
  else
  {
    uint64_t v7 = *re::audioLogObjects(0);
    double v8 = 0.0;
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      CMTimeValue v9 = this[38];
      if (!v9) {
        CMTimeValue v9 = this[44];
      }
      LODWORD(buf.value) = 134218240;
      *(CMTimeValue *)((char *)&buf.value + 4) = v9;
      LOWORD(buf.flags) = 2048;
      *(void *)((char *)&buf.flags + 2) = a2;
      _os_log_error_impl(&dword_233120000, v7, OS_LOG_TYPE_ERROR, "AudioPlayerComponent::playbackPositionFor() (entityID=%llu) cannot access state for unknown playback token %llu.", (uint8_t *)&buf, 0x16u);
    }
  }
  return v8;
}

void re::ecs2::AudioPlayerComponent::setPlaybackPositionFor(re::ecs2::AudioPlayerComponent *this, unint64_t a2, double a3)
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  uint64_t v6 = re::ecs2::AudioPlayerComponent::sourceStateForToken(this, a2);
  if (v6)
  {
    if (*(unsigned char *)(v6 + 720))
    {
      uint64_t v7 = *re::audioLogObjects((re *)v6);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      {
        uint64_t v8 = *((void *)this + 38);
        if (!v8) {
          uint64_t v8 = *((void *)this + 44);
        }
        int v28 = 134218240;
        uint64_t v29 = v8;
        __int16 v30 = 2048;
        unint64_t v31 = a2;
        CMTimeValue v9 = "AudioPlayerComponent::setPlaybackPositionFor() (entityID=%llu) cannot seek un-owned playback token %llu.";
LABEL_11:
        _os_log_error_impl(&dword_233120000, v7, OS_LOG_TYPE_ERROR, v9, (uint8_t *)&v28, 0x16u);
      }
    }
    else
    {
      *(double *)(v6 + 728) = a3;
      *(unsigned char *)(v6 + 736) = 1;
      unsigned int v11 = re::globalAllocators((re *)v6);
      uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v11[2] + 32))(v11[2], 32, 8);
      uint64_t v13 = v12;
      *(void *)uint64_t v12 = 0;
      *(void *)(v12 + 8) = 0;
      *(_DWORD *)uint64_t v12 = 4;
      *(void *)(v12 + 8) = a2;
      *(void *)(v12 + 16) = 0;
      *(double *)(v12 + 24) = a3;
      double v15 = (uint64_t *)*((void *)this + 42);
      unint64_t v14 = *((void *)this + 43);
      if ((unint64_t)v15 >= v14)
      {
        uint64_t v17 = *((void *)this + 41);
        uint64_t v18 = ((uint64_t)v15 - v17) >> 3;
        if ((unint64_t)(v18 + 1) >> 61) {
          abort();
        }
        uint64_t v19 = v14 - v17;
        uint64_t v20 = v19 >> 2;
        if (v19 >> 2 <= (unint64_t)(v18 + 1)) {
          uint64_t v20 = v18 + 1;
        }
        if ((unint64_t)v19 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v21 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v21 = v20;
        }
        if (v21) {
          unint64_t v21 = (unint64_t)std::__allocate_at_least[abi:nn180100]<std::allocator<zip_entry_t *>>(v21);
        }
        else {
          uint64_t v22 = 0;
        }
        CMTime v23 = (uint64_t *)(v21 + 8 * v18);
        unint64_t v24 = v21 + 8 * v22;
        *CMTime v23 = v13;
        int v16 = v23 + 1;
        uint64_t v26 = (char *)*((void *)this + 41);
        uint64_t v25 = (char *)*((void *)this + 42);
        if (v25 != v26)
        {
          do
          {
            uint64_t v27 = *((void *)v25 - 1);
            v25 -= 8;
            *--CMTime v23 = v27;
          }
          while (v25 != v26);
          uint64_t v25 = (char *)*((void *)this + 41);
        }
        *((void *)this + 41) = v23;
        *((void *)this + 42) = v16;
        *((void *)this + 43) = v24;
        if (v25) {
          operator delete(v25);
        }
      }
      else
      {
        *double v15 = v12;
        int v16 = v15 + 1;
      }
      *((void *)this + 42) = v16;
    }
  }
  else
  {
    uint64_t v7 = *re::audioLogObjects(0);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      uint64_t v10 = *((void *)this + 38);
      if (!v10) {
        uint64_t v10 = *((void *)this + 44);
      }
      int v28 = 134218240;
      uint64_t v29 = v10;
      __int16 v30 = 2048;
      unint64_t v31 = a2;
      CMTimeValue v9 = "AudioPlayerComponent::setPlaybackPositionFor() (entityID=%llu) cannot access state for unknown playback token %llu.";
      goto LABEL_11;
    }
  }
}

float re::ecs2::AudioPlayerComponent::playbackSpeed(re::ecs2::AudioPlayerComponent *this, unint64_t a2)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  uint64_t v4 = re::ecs2::AudioPlayerComponent::sourceStateForToken(this, a2);
  if (v4) {
    return *((float *)v4 + 78);
  }
  uint64_t v6 = *re::audioLogObjects(0);
  float v5 = 0.0;
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
  {
    uint64_t v8 = *((void *)this + 38);
    if (!v8) {
      uint64_t v8 = *((void *)this + 44);
    }
    int v9 = 134218240;
    uint64_t v10 = v8;
    __int16 v11 = 2048;
    unint64_t v12 = a2;
    _os_log_error_impl(&dword_233120000, v6, OS_LOG_TYPE_ERROR, "AudioPlayerComponent::playbackSpeed() (entityID=%llu) cannot access state for unknown playback token %llu.", (uint8_t *)&v9, 0x16u);
  }
  return v5;
}

void re::ecs2::AudioPlayerComponent::setPlaybackSpeed(re::ecs2::AudioPlayerComponent **this, unint64_t a2, float a3)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  int canModifyState = (re *)re::ecs2::AudioPlayerComponent::canModifyState(this[2]);
  if (canModifyState)
  {
    uint64_t v7 = re::ecs2::AudioPlayerComponent::sourceStateForToken((re::ecs2::AudioPlayerComponent *)this, a2);
    if (v7 && !*((unsigned char *)v7 + 720))
    {
      *((float *)v7 + 78) = a3;
      __int16 v11 = (OpaqueCMTimebase *)*((void *)v7 + 87);
      if (CMTimebaseGetRate(v11) != 0.0)
      {
        CMTimebaseSetRate(v11, a3);
      }
    }
    else
    {
      uint64_t v8 = *re::audioLogObjects(v7);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        int v9 = this[38];
        if (!v9) {
          int v9 = this[44];
        }
        int v13 = 134218240;
        unint64_t v14 = v9;
        __int16 v15 = 2048;
        unint64_t v16 = a2;
        uint64_t v10 = "AudioPlayerComponent::setPlaybackSpeed() (entityID=%llu) cannot access state for unknown playback token %llu.";
LABEL_17:
        _os_log_error_impl(&dword_233120000, v8, OS_LOG_TYPE_ERROR, v10, (uint8_t *)&v13, 0x16u);
      }
    }
  }
  else
  {
    uint64_t v8 = *re::audioLogObjects(canModifyState);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      unint64_t v12 = this[38];
      if (!v12) {
        unint64_t v12 = this[44];
      }
      int v13 = 134218240;
      unint64_t v14 = v12;
      __int16 v15 = 2048;
      unint64_t v16 = a2;
      uint64_t v10 = "AudioPlayerComponent::setPlaybackSpeed() (entityID=%llu) cannot modify state for token %llu because it is not owned.";
      goto LABEL_17;
    }
  }
}

void re::ecs2::AudioPlayerComponent::overrideInputMode(re *a1, uint64_t a2, char a3)
{
  uint64_t v13 = a2;
  uint64_t v3 = *((void *)a1 + 2);
  if (!v3)
  {
    int v9 = *re::audioLogObjects(a1);
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      return;
    }
    LOWORD(v12) = 0;
    uint64_t v10 = "cannot override input mode on component that does not have entity";
LABEL_9:
    _os_log_error_impl(&dword_233120000, v9, OS_LOG_TYPE_ERROR, v10, (uint8_t *)&v12, 2u);
    return;
  }
  uint64_t v5 = re::ecs2::EntityComponentCollection::getOrAdd((re::ecs2::EntityComponentCollection *)(v3 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioTransientComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType);
  if (!v5)
  {
    int v9 = *re::audioLogObjects(0);
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      return;
    }
    LOWORD(v12) = 0;
    uint64_t v10 = "cannot override input mode b/c failed to create transient component";
    goto LABEL_9;
  }
  uint64_t v6 = (const re::ecs2::Component *)v5;
  uint64_t v7 = v5 + 40;
  uint64_t v8 = (unsigned char *)re::HashTable<unsigned long long,re::PeerAttributionContext *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet(v5 + 40, &v13);
  if (v8)
  {
    *uint64_t v8 = a3;
  }
  else
  {
    HIDWORD(v12) = 6553601;
    LOBYTE(v12) = a3;
    re::HashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::add<re::ecs2::TransientAudioState&>(v7, &v13, &v12);
  }
  __int16 v11 = *(re::ecs2::NetworkComponent **)(v3 + 200);
  if (v11) {
    re::ecs2::NetworkComponent::markDirty(v11, v6);
  }
}

uint64_t re::HashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::add<re::ecs2::TransientAudioState&>(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = 0xBF58476D1CE4E5B9 * (*a2 ^ ((unint64_t)*a2 >> 30));
  unint64_t v8 = (0x94D049BB133111EBLL * (v7 ^ (v7 >> 27))) ^ ((0x94D049BB133111EBLL * (v7 ^ (v7 >> 27))) >> 31);
  if (!*(void *)a1)
  {
    LODWORD(v9) = 0;
    goto LABEL_8;
  }
  unint64_t v9 = v8 % *(unsigned int *)(a1 + 24);
  uint64_t v10 = *(unsigned int *)(*(void *)(a1 + 8) + 4 * v9);
  if (v10 == 0x7FFFFFFF)
  {
LABEL_8:
    unsigned int v13 = re::HashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addAsMove(a1, v9, v8, a2, a3);
    ++*(_DWORD *)(a1 + 40);
    uint64_t v12 = *(void *)(a1 + 16) + 32 * v13;
    return v12 + 24;
  }
  uint64_t v11 = *(void *)(a1 + 16);
  while (*(void *)(v11 + 32 * v10 + 16) != v6)
  {
    uint64_t v10 = *(_DWORD *)(v11 + 32 * v10 + 8) & 0x7FFFFFFF;
    if (v10 == 0x7FFFFFFF) {
      goto LABEL_8;
    }
  }
  uint64_t v12 = v11 + 32 * v10;
  return v12 + 24;
}

float re::ecs2::AudioPlayerComponent::reverbSendLevel(re::ecs2::AudioPlayerComponent *this, uint64_t a2)
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  uint64_t v15 = a2;
  uint64_t v3 = re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet((uint64_t)this + 32, &v15);
  if (v3) {
    return *(float *)(v3 + 56);
  }
  uint64_t v5 = *re::audioLogObjects(0);
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_ERROR);
  if (v6)
  {
    uint64_t v14 = *((void *)this + 38);
    if (!v14) {
      uint64_t v14 = *((void *)this + 44);
    }
    *(_DWORD *)CMTime buf = 134218240;
    *(void *)&uint8_t buf[4] = v14;
    *(_WORD *)&unsigned char buf[12] = 2048;
    *(void *)&buf[14] = v15;
    _os_log_error_impl(&dword_233120000, v5, OS_LOG_TYPE_ERROR, "AudioPlayerComponent::reverbSendLevel() (entityID=%llu) cannot access state for unknown playback token %llu.", buf, 0x16u);
  }
  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0uLL;
  memset(v24, 0, sizeof(v24));
  memset(buf, 0, sizeof(buf));
  uint64_t v17 = 9;
  uint64_t v18 = 1065353216;
  long long v19 = 0uLL;
  long long v20 = 0x3F80000000000000uLL;
  __asm { FMOV            V0.2S, #1.0 }
  long long v21 = _D0;
  uint64_t v22 = 0;
  uint64_t v23 = 1065353216;
  BYTE8(v24[2]) = 0;
  uint64_t v31 = 0;
  long long v26 = 0uLL;
  uint64_t v12 = (_anonymous_namespace_ *)re::DynamicString::setCapacity(&v25, 0);
  *(void *)((char *)&v27 + 4) = 0x3E051EB800000000;
  LODWORD(v2re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 1;
  HIDWORD(v2re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 1106247680;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  re::DynamicString::setCapacity(&v29, 0);
  LOWORD(v31) = 0;
  float v4 = *((float *)&v19 + 2);
  if ((void)v29)
  {
    if (BYTE8(v29)) {
      (*(void (**)(void))(*(void *)v29 + 40))();
    }
    long long v29 = 0u;
    long long v30 = 0u;
  }
  if ((void)v25)
  {
    if (BYTE8(v25)) {
      (*(void (**)(void))(*(void *)v25 + 40))();
    }
    long long v25 = 0u;
    long long v26 = 0u;
  }
  if (LOBYTE(v24[0]) && *((void *)&v24[0] + 1))
  {
    if (v24[1]) {
      (*(void (**)(void))(**((void **)&v24[0] + 1) + 40))();
    }
    memset((char *)v24 + 8, 0, 32);
  }
  re::AssetHandle::~AssetHandle((re::AssetHandle *)&buf[8]);
  return v4;
}

void re::ecs2::AudioPlayerComponent::setReverbSendLevel(re::ecs2::AudioPlayerComponent **this, uint64_t a2, float a3)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v14 = a2;
  int canModifyState = (re *)re::ecs2::AudioPlayerComponent::canModifyState(this[2]);
  if ((canModifyState & 1) == 0)
  {
    unint64_t v8 = *re::audioLogObjects(canModifyState);
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      return;
    }
    unint64_t v9 = this[38];
    if (!v9) {
      unint64_t v9 = this[44];
    }
    *(_DWORD *)CMTime buf = 134218240;
    unint64_t v16 = v9;
    __int16 v17 = 2048;
    uint64_t v18 = a2;
    uint64_t v10 = "AudioPlayerComponent::setReverbSendLevel() (entityID=%llu) cannot modify state for token %llu because it is not owned.";
    uint64_t v11 = v8;
LABEL_13:
    _os_log_error_impl(&dword_233120000, v11, OS_LOG_TYPE_ERROR, v10, buf, 0x16u);
    return;
  }
  uint64_t v7 = re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet((uint64_t)(this + 4), &v14);
  if (v7)
  {
    *(float *)(v7 + 56) = a3;
    return;
  }
  uint64_t v12 = *re::audioLogObjects(0);
  if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
  {
    unsigned int v13 = this[38];
    if (!v13) {
      unsigned int v13 = this[44];
    }
    *(_DWORD *)CMTime buf = 134218240;
    unint64_t v16 = v13;
    __int16 v17 = 2048;
    uint64_t v18 = v14;
    uint64_t v10 = "AudioPlayerComponent::setReverbSendLevel() (entityID=%llu) cannot modify state for unknown playback token %llu.";
    uint64_t v11 = v12;
    goto LABEL_13;
  }
}

float re::ecs2::AudioPlayerComponent::directSendLevel(re::ecs2::AudioPlayerComponent *this, uint64_t a2)
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  uint64_t v15 = a2;
  uint64_t v3 = re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet((uint64_t)this + 32, &v15);
  if (v3) {
    return *(float *)(v3 + 72);
  }
  uint64_t v5 = *re::audioLogObjects(0);
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_ERROR);
  if (v6)
  {
    uint64_t v14 = *((void *)this + 38);
    if (!v14) {
      uint64_t v14 = *((void *)this + 44);
    }
    *(_DWORD *)CMTime buf = 134218240;
    *(void *)&uint8_t buf[4] = v14;
    *(_WORD *)&unsigned char buf[12] = 2048;
    *(void *)&buf[14] = v15;
    _os_log_error_impl(&dword_233120000, v5, OS_LOG_TYPE_ERROR, "AudioPlayerComponent::directSendLevel() (entityID=%llu) cannot access state for unknown playback token %llu.", buf, 0x16u);
  }
  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0uLL;
  memset(v24, 0, sizeof(v24));
  memset(buf, 0, sizeof(buf));
  uint64_t v17 = 9;
  uint64_t v18 = 1065353216;
  long long v19 = 0uLL;
  long long v20 = 0x3F80000000000000uLL;
  __asm { FMOV            V0.2S, #1.0 }
  long long v21 = _D0;
  uint64_t v22 = 0;
  uint64_t v23 = 1065353216;
  BYTE8(v24[2]) = 0;
  uint64_t v31 = 0;
  long long v26 = 0uLL;
  uint64_t v12 = (_anonymous_namespace_ *)re::DynamicString::setCapacity(&v25, 0);
  *(void *)((char *)&v27 + 4) = 0x3E051EB800000000;
  LODWORD(v2re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 1;
  HIDWORD(v2re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 1106247680;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  re::DynamicString::setCapacity(&v29, 0);
  LOWORD(v31) = 0;
  float v4 = *((float *)&v19 + 2);
  if ((void)v29)
  {
    if (BYTE8(v29)) {
      (*(void (**)(void))(*(void *)v29 + 40))();
    }
    long long v29 = 0u;
    long long v30 = 0u;
  }
  if ((void)v25)
  {
    if (BYTE8(v25)) {
      (*(void (**)(void))(*(void *)v25 + 40))();
    }
    long long v25 = 0u;
    long long v26 = 0u;
  }
  if (LOBYTE(v24[0]) && *((void *)&v24[0] + 1))
  {
    if (v24[1]) {
      (*(void (**)(void))(**((void **)&v24[0] + 1) + 40))();
    }
    memset((char *)v24 + 8, 0, 32);
  }
  re::AssetHandle::~AssetHandle((re::AssetHandle *)&buf[8]);
  return v4;
}

void re::ecs2::AudioPlayerComponent::setDirectSendLevel(re::ecs2::AudioPlayerComponent **this, uint64_t a2, float a3)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v14 = a2;
  int canModifyState = (re *)re::ecs2::AudioPlayerComponent::canModifyState(this[2]);
  if ((canModifyState & 1) == 0)
  {
    unint64_t v8 = *re::audioLogObjects(canModifyState);
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      return;
    }
    unint64_t v9 = this[38];
    if (!v9) {
      unint64_t v9 = this[44];
    }
    *(_DWORD *)CMTime buf = 134218240;
    unint64_t v16 = v9;
    __int16 v17 = 2048;
    uint64_t v18 = a2;
    uint64_t v10 = "AudioPlayerComponent::setDirectSendLevel() (entityID=%llu) cannot modify state for token %llu because it is not owned.";
    uint64_t v11 = v8;
LABEL_13:
    _os_log_error_impl(&dword_233120000, v11, OS_LOG_TYPE_ERROR, v10, buf, 0x16u);
    return;
  }
  uint64_t v7 = re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet((uint64_t)(this + 4), &v14);
  if (v7)
  {
    *(float *)(v7 + 72) = a3;
    return;
  }
  uint64_t v12 = *re::audioLogObjects(0);
  if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
  {
    unsigned int v13 = this[38];
    if (!v13) {
      unsigned int v13 = this[44];
    }
    *(_DWORD *)CMTime buf = 134218240;
    unint64_t v16 = v13;
    __int16 v17 = 2048;
    uint64_t v18 = v14;
    uint64_t v10 = "AudioPlayerComponent::setDirectSendLevel() (entityID=%llu) cannot modify state for unknown playback token %llu.";
    uint64_t v11 = v12;
    goto LABEL_13;
  }
}

BOOL re::ecs2::AudioPlayerComponent::deferToSystemAcousticTuning(re::ecs2::AudioPlayerComponent *this, uint64_t a2)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  uint64_t v7 = a2;
  uint64_t v3 = re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet((uint64_t)this + 32, &v7);
  if (v3) {
    return *(unsigned char *)(v3 + 256) != 0;
  }
  uint64_t v5 = *re::audioLogObjects(0);
  BOOL result = os_log_type_enabled(v5, OS_LOG_TYPE_ERROR);
  if (result)
  {
    uint64_t v6 = *((void *)this + 38);
    if (!v6) {
      uint64_t v6 = *((void *)this + 44);
    }
    *(_DWORD *)CMTime buf = 134218240;
    uint64_t v9 = v6;
    __int16 v10 = 2048;
    uint64_t v11 = v7;
    _os_log_error_impl(&dword_233120000, v5, OS_LOG_TYPE_ERROR, "AudioPlayerComponent::deferToSystemAcousticTuning() (entityID=%llu) cannot access deferToSystemAcousticTuning for unknown playback token %llu.", buf, 0x16u);
    return 0;
  }
  return result;
}

void re::ecs2::AudioPlayerComponent::setDeferToSystemAcousticTuning(re::ecs2::AudioPlayerComponent **this, uint64_t a2, char a3)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v14 = a2;
  int canModifyState = (re *)re::ecs2::AudioPlayerComponent::canModifyState(this[2]);
  if ((canModifyState & 1) == 0)
  {
    unint64_t v8 = *re::audioLogObjects(canModifyState);
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      return;
    }
    uint64_t v9 = this[38];
    if (!v9) {
      uint64_t v9 = this[44];
    }
    *(_DWORD *)CMTime buf = 134218240;
    unint64_t v16 = v9;
    __int16 v17 = 2048;
    uint64_t v18 = a2;
    __int16 v10 = "AudioPlayerComponent::setDeferToSystemAcousticTuning() (entityID=%llu) cannot modify deferToSystemAcousticTuni"
          "ng for token %llu because it is not owned.";
    uint64_t v11 = v8;
LABEL_13:
    _os_log_error_impl(&dword_233120000, v11, OS_LOG_TYPE_ERROR, v10, buf, 0x16u);
    return;
  }
  uint64_t v7 = re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet((uint64_t)(this + 4), &v14);
  if (v7)
  {
    *(unsigned char *)(v7 + 256) = a3;
    return;
  }
  uint64_t v12 = *re::audioLogObjects(0);
  if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
  {
    unsigned int v13 = this[38];
    if (!v13) {
      unsigned int v13 = this[44];
    }
    *(_DWORD *)CMTime buf = 134218240;
    unint64_t v16 = v13;
    __int16 v17 = 2048;
    uint64_t v18 = v14;
    __int16 v10 = "AudioPlayerComponent::setDeferToSystemAcousticTuning() (entityID=%llu) cannot modify deferToSystemAcousticTuni"
          "ng for unknown playback token %llu.";
    uint64_t v11 = v12;
    goto LABEL_13;
  }
}

double re::ecs2::AudioPlayerComponent::currentLinearGainForToken(re::ecs2::AudioPlayerComponent *this, unint64_t a2)
{
  if (!re::ecs2::AudioPlayerComponent::sourceStateForToken(this, a2)) {
    return 0.0;
  }
  uint64_t v3 = re::ecs2::AudioPlayerComponent::audioService(this);
  if (!v3) {
    return 0.0;
  }
  float v4 = *(void (**)(void))(*(void *)v3 + 296);
  v4();
  return result;
}

void re::ecs2::AudioPlayerComponent::setComponentFade(re::ecs2::AudioPlayerComponent **this, float a2, float a3)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  int canModifyState = (re *)re::ecs2::AudioPlayerComponent::canModifyState(this[2]);
  if (canModifyState)
  {
    float v7 = 0.0;
    float v8 = 4.0;
    if (a2 <= 4.0) {
      float v8 = a2;
    }
    if (a2 >= 0.0) {
      float v7 = v8;
    }
    if (*((float *)this + 57) == v7 && *((double *)this + 29) == 0.0) {
      a3 = 0.0;
    }
    *((double *)this + 29) = a3;
    *((float *)this + 5re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = v7;
    ++*((_DWORD *)this + 60);
    if (a3 <= 0.0)
    {
      *((float *)this + 56) = v7;
      this[29] = 0;
      *((unsigned char *)this + 252) = 1;
    }
    else if (*((unsigned char *)this + 252))
    {
      float v7 = *((float *)this + 56);
    }
    else
    {
      *((float *)this + 56) = v7;
    }
    *((float *)this + 68) = log10f(v7) * 20.0;
  }
  else
  {
    uint64_t v9 = *re::audioLogObjects(canModifyState);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      __int16 v10 = this[38];
      if (!v10) {
        __int16 v10 = this[44];
      }
      int v11 = 134217984;
      uint64_t v12 = v10;
      _os_log_error_impl(&dword_233120000, v9, OS_LOG_TYPE_ERROR, "AudioPlayerComponent::setComponentFade (entityID=%llu) cannot modify state because entity is not owned", (uint8_t *)&v11, 0xCu);
    }
  }
}

void re::ecs2::AudioPlayerComponent::fadeToGain(re::ecs2::AudioPlayerComponent **this, unint64_t a2, float a3, double a4)
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  unint64_t v21 = a2;
  int canModifyState = (re *)re::ecs2::AudioPlayerComponent::canModifyState(this[2]);
  if ((canModifyState & 1) == 0)
  {
    uint64_t v14 = *re::audioLogObjects(canModifyState);
    if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      return;
    }
    uint64_t v15 = this[38];
    if (!v15) {
      uint64_t v15 = this[44];
    }
    *(_DWORD *)CMTime buf = 134218240;
    uint64_t v23 = v15;
    __int16 v24 = 2048;
    unint64_t v25 = a2;
    unint64_t v16 = "AudioPlayerComponent::fadeToGain() (entityID=%llu) cannot modify state for token %llu because it is not owned.";
    __int16 v17 = v14;
LABEL_23:
    _os_log_error_impl(&dword_233120000, v17, OS_LOG_TYPE_ERROR, v16, buf, 0x16u);
    return;
  }
  uint64_t v9 = re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet((uint64_t)(this + 4), (uint64_t *)&v21);
  if (!v9)
  {
    uint64_t v18 = *re::audioLogObjects(0);
    if (!os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
      return;
    }
    uint64_t v19 = this[38];
    if (!v19) {
      uint64_t v19 = this[44];
    }
    *(_DWORD *)CMTime buf = 134218240;
    uint64_t v23 = v19;
    __int16 v24 = 2048;
    unint64_t v25 = v21;
    unint64_t v16 = "AudioPlayerComponent::fadeToGain() (entityID=%llu) cannot modify state for unknown playback token %llu.";
    __int16 v17 = v18;
    goto LABEL_23;
  }
  uint64_t v10 = v9;
  float v11 = 4.0;
  if (a3 <= 4.0) {
    float v11 = a3;
  }
  if (a3 >= 0.0) {
    float v12 = v11;
  }
  else {
    float v12 = 0.0;
  }
  if (*(float *)(v9 + 84) == v12 && *(double *)(v9 + 96) == 0.0) {
    a4 = *(double *)(v9 + 96);
  }
  *(double *)(v9 + 96) = a4;
  *(float *)(v9 + 84) = v12;
  ++*(_DWORD *)(v9 + 88);
  if (a4 <= 0.0)
  {
    *(float *)(v9 + 80) = v12;
    long long v20 = re::ecs2::AudioPlayerComponent::sourceStateForToken((re::ecs2::AudioPlayerComponent *)this, v21);
    if (v20)
    {
      *((unsigned char *)v20 + 292) = 1;
      *(void *)(v10 + 96) = 0;
    }
  }
  else
  {
    uint64_t v13 = re::ecs2::AudioPlayerComponent::sourceStateForToken((re::ecs2::AudioPlayerComponent *)this, v21);
    if (!v13 || !*((unsigned char *)v13 + 292)) {
      *(float *)(v10 + 80) = v12;
    }
  }
}

void re::ecs2::AudioPlayerComponent::doFadeToGain(re::ecs2::AudioPlayerComponent *this, uint64_t a2, float a3, double a4)
{
  float v8 = re::globalAllocators(this);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v8[2] + 32))(v8[2], 32, 8);
  uint64_t v10 = v9;
  *(_OWORD *)uint64_t v9 = 0u;
  *(_OWORD *)(v9 + 16) = 0u;
  *(_DWORD *)uint64_t v9 = 3;
  *(void *)(v9 + 8) = a2;
  float v11 = a4;
  *(float *)(v9 + 16) = a3;
  *(float *)(v9 + 20) = v11;
  uint64_t v13 = (uint64_t *)*((void *)this + 42);
  unint64_t v12 = *((void *)this + 43);
  if ((unint64_t)v13 >= v12)
  {
    uint64_t v15 = *((void *)this + 41);
    uint64_t v16 = ((uint64_t)v13 - v15) >> 3;
    if ((unint64_t)(v16 + 1) >> 61) {
      abort();
    }
    uint64_t v17 = v12 - v15;
    uint64_t v18 = v17 >> 2;
    if (v17 >> 2 <= (unint64_t)(v16 + 1)) {
      uint64_t v18 = v16 + 1;
    }
    if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v19 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v19 = v18;
    }
    if (v19) {
      unint64_t v19 = (unint64_t)std::__allocate_at_least[abi:nn180100]<std::allocator<zip_entry_t *>>(v19);
    }
    else {
      uint64_t v20 = 0;
    }
    unint64_t v21 = (uint64_t *)(v19 + 8 * v16);
    unint64_t v22 = v19 + 8 * v20;
    uint64_t *v21 = v10;
    uint64_t v14 = v21 + 1;
    __int16 v24 = (char *)*((void *)this + 41);
    uint64_t v23 = (char *)*((void *)this + 42);
    if (v23 != v24)
    {
      do
      {
        uint64_t v25 = *((void *)v23 - 1);
        v23 -= 8;
        *--unint64_t v21 = v25;
      }
      while (v23 != v24);
      uint64_t v23 = (char *)*((void *)this + 41);
    }
    *((void *)this + 41) = v21;
    *((void *)this + 42) = v14;
    *((void *)this + 43) = v22;
    if (v23) {
      operator delete(v23);
    }
  }
  else
  {
    *uint64_t v13 = v9;
    uint64_t v14 = v13 + 1;
  }
  *((void *)this + 42) = v14;
}

BOOL re::ecs2::AudioPlayerComponent::isPlaying(re::ecs2::AudioPlayerComponent *this, unint64_t a2)
{
  uint64_t v2 = *((void *)this + 2);
  if (!v2 || (*(unsigned char *)(v2 + 288) & 1) == 0) {
    return 0;
  }
  uint64_t v6 = re::ecs2::AudioPlayerComponent::sourceStateForToken(this, a2);
  return v6 && *((_DWORD *)v6 + 181) == 2 || re::ecs2::AudioPlayerComponent::playbackStateForToken(this, a2) == 1;
}

uint64_t re::ecs2::AudioPlayerComponent::playbackStateForToken(re::ecs2::AudioPlayerComponent *this, uint64_t a2)
{
  uint64_t v3 = a2;
  uint64_t result = re::HashTable<unsigned long long,re::PeerAttributionContext *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet((uint64_t)this + 80, &v3);
  if (result)
  {
    if (*(void *)result) {
      return playbackStateFromTimebase(*(OpaqueCMTimebase **)(*(void *)result + 696));
    }
    else {
      return 0;
    }
  }
  return result;
}

BOOL re::ecs2::AudioPlayerComponent::isAnythingPlaying(re::ecs2::AudioPlayerComponent *this)
{
  uint64_t v2 = *((unsigned int *)this + 28);
  if (v2)
  {
    uint64_t v3 = 0;
    float v4 = (int *)(*((void *)this + 12) + 8);
    while (1)
    {
      int v5 = *v4;
      v4 += 8;
      if (v5 < 0) {
        break;
      }
      if (v2 == ++v3)
      {
        LODWORD(v3) = *((_DWORD *)this + 28);
        break;
      }
    }
  }
  else
  {
    LODWORD(v3) = 0;
  }
  if (v2 == v3) {
    return 0;
  }
  uint64_t v7 = v3;
  while (1)
  {
    BOOL result = re::ecs2::AudioPlayerComponent::isPlaying(this, *(void *)(*((void *)this + 12) + 32 * v7 + 16));
    if (result) {
      return 1;
    }
    if (*((_DWORD *)this + 28) <= (v3 + 1)) {
      int v8 = v3 + 1;
    }
    else {
      int v8 = *((_DWORD *)this + 28);
    }
    while (1)
    {
      uint64_t v7 = (v3 + 1);
      if (v8 - 1 == v3) {
        break;
      }
      LODWORD(v3) = v3 + 1;
      int v9 = v7;
      if ((*(_DWORD *)(*((void *)this + 12) + 32 * v7 + 8) & 0x80000000) != 0) {
        goto LABEL_18;
      }
    }
    int v9 = v8;
LABEL_18:
    LODWORD(v3) = v9;
    if (v2 == v9) {
      return result;
    }
  }
}

uint64_t re::ecs2::AudioPlayerComponent::forEachToken(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  uint64_t v4 = *(unsigned int *)(result + 64);
  if (v4)
  {
    uint64_t v5 = 0;
    uint64_t v6 = (_DWORD *)(*(void *)(result + 48) + 8);
    while ((*v6 & 0x80000000) == 0)
    {
      v6 += 72;
      if (v4 == ++v5)
      {
        LODWORD(vre::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = *(_DWORD *)(result + 64);
        break;
      }
    }
  }
  else
  {
    LODWORD(vre::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = 0;
  }
  if (v4 != v5)
  {
    uint64_t v7 = v5;
    do
    {
      BOOL result = std::function<void ()(unsigned long long)>::operator()(a2, *(void *)(*(void *)(v3 + 48) + 288 * v7 + 16));
      unsigned int v8 = *(_DWORD *)(v3 + 64);
      if (v8 <= (int)v5 + 1) {
        int v9 = v5 + 1;
      }
      else {
        int v9 = *(_DWORD *)(v3 + 64);
      }
      int v10 = v5;
      while (1)
      {
        uint64_t v7 = (v10 + 1);
        if (v9 - 1 == v10) {
          break;
        }
        ++v10;
        LODWORD(vre::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = v7;
        if ((*(_DWORD *)(*(void *)(v3 + 48) + 288 * v7 + 8) & 0x80000000) != 0) {
          goto LABEL_17;
        }
      }
      LODWORD(vre::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = v9;
LABEL_17:
      ;
    }
    while (v8 != v5);
  }
  return result;
}

uint64_t std::function<void ()(unsigned long long)>::operator()(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a2;
  uint64_t v2 = *(void *)(a1 + 24);
  if (v2) {
    return (*(uint64_t (**)(uint64_t, uint64_t *))(*(void *)v2 + 48))(v2, &v5);
  }
  uint64_t v4 = (re::ecs2::AudioPlayerComponent *)std::__throw_bad_function_call[abi:nn180100]();
  return re::ecs2::AudioPlayerComponent::firstToken(v4);
}

uint64_t re::ecs2::AudioPlayerComponent::firstToken(re::ecs2::AudioPlayerComponent *this)
{
  uint64_t v1 = *((unsigned int *)this + 16);
  if (v1)
  {
    uint64_t v2 = 0;
    uint64_t v3 = (_DWORD *)(*((void *)this + 6) + 8);
    while ((*v3 & 0x80000000) == 0)
    {
      v3 += 72;
      if (v1 == ++v2)
      {
        LODWORD(v2) = *((_DWORD *)this + 16);
        break;
      }
    }
  }
  else
  {
    LODWORD(v2) = 0;
  }
  if (v1 == v2) {
    return 0;
  }
  else {
    return *(void *)(*((void *)this + 6) + 288 * v2 + 16);
  }
}

void re::ecs2::AudioPlayerComponent::setParameterValue(re::ecs2::AudioPlayerComponent **this, unint64_t a2, unint64_t a3, float a4)
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  unint64_t v21 = a3;
  float v20 = a4;
  int canModifyState = (re *)re::ecs2::AudioPlayerComponent::canModifyState(this[2]);
  if ((canModifyState & 1) == 0)
  {
    uint64_t v16 = *re::audioLogObjects(canModifyState);
    if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
      return;
    }
    uint64_t v17 = this[38];
    if (!v17) {
      uint64_t v17 = this[44];
    }
    *(_DWORD *)CMTime buf = 134218240;
    uint64_t v23 = v17;
    __int16 v24 = 2048;
    unint64_t v25 = a2;
    uint64_t v18 = "AudioPlayerComponent::setParameterValue() (entityID=%llu) cannot modify state for token %llu because it is not owned.";
LABEL_17:
    _os_log_error_impl(&dword_233120000, v16, OS_LOG_TYPE_ERROR, v18, buf, 0x16u);
    return;
  }
  int v9 = re::ecs2::AudioPlayerComponent::sourceStateForToken((re::ecs2::AudioPlayerComponent *)this, a2);
  if (!v9)
  {
    uint64_t v16 = *re::audioLogObjects(0);
    if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
      return;
    }
    unint64_t v19 = this[38];
    if (!v19) {
      unint64_t v19 = this[44];
    }
    *(_DWORD *)CMTime buf = 134218240;
    uint64_t v23 = v19;
    __int16 v24 = 2048;
    unint64_t v25 = a2;
    uint64_t v18 = "AudioPlayerComponent::setParameterValue() (entityID=%llu) cannot modify state for unknown playback token %llu.";
    goto LABEL_17;
  }
  int v10 = v9;
  unint64_t v11 = 0x94D049BB133111EBLL
      * ((0xBF58476D1CE4E5B9 * (a3 ^ (a3 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (a3 ^ (a3 >> 30))) >> 27));
  unint64_t v12 = v11 ^ (v11 >> 31);
  if (!*((void *)v9 + 63))
  {
    LODWORD(v13) = 0;
    goto LABEL_19;
  }
  unint64_t v13 = v12 % *((unsigned int *)v9 + 132);
  uint64_t v14 = *(unsigned int *)(*((void *)v9 + 64) + 4 * v13);
  if (v14 == 0x7FFFFFFF)
  {
LABEL_19:
    re::HashTable<unsigned long long,float,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addAsCopy((uint64_t)v9 + 504, v13, v12, &v21, &v20);
    goto LABEL_20;
  }
  uint64_t v15 = *((void *)v9 + 65);
  while (*(void *)(v15 + 32 * v14 + 16) != a3)
  {
    uint64_t v14 = *(_DWORD *)(v15 + 32 * v14 + 8) & 0x7FFFFFFF;
    if (v14 == 0x7FFFFFFF) {
      goto LABEL_19;
    }
  }
  *(float *)(v15 + 32 * v14 + 24) = a4;
LABEL_20:
  ++*((_DWORD *)v10 + 136);
}

float re::ecs2::AudioPlayerComponent::getParameterValue(re::ecs2::AudioPlayerComponent *this, uint64_t a2, unint64_t a3)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  *(void *)uint64_t v15 = a2;
  uint64_t v6 = (re *)re::HashTable<unsigned long long,re::PeerAttributionContext *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet((uint64_t)this + 80, (uint64_t *)v15);
  if (v6 && (uint64_t v7 = *(void *)v6) != 0)
  {
    float v8 = 0.0;
    if (*(void *)(v7 + 504))
    {
      unint64_t v9 = 0x94D049BB133111EBLL
         * ((0xBF58476D1CE4E5B9 * (a3 ^ (a3 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (a3 ^ (a3 >> 30))) >> 27));
      uint64_t v10 = *(unsigned int *)(*(void *)(v7 + 512) + 4 * ((v9 ^ (v9 >> 31)) % *(unsigned int *)(v7 + 528)));
      if (v10 != 0x7FFFFFFF)
      {
        uint64_t v11 = *(void *)(v7 + 520);
        if (*(void *)(v11 + 32 * v10 + 16) == a3)
        {
          return *(float *)(v11 + 32 * v10 + 24);
        }
        else
        {
          while (1)
          {
            uint64_t v10 = *(_DWORD *)(v11 + 32 * v10 + 8) & 0x7FFFFFFF;
            if (v10 == 0x7FFFFFFF) {
              break;
            }
            if (*(void *)(v11 + 32 * v10 + 16) == a3) {
              return *(float *)(v11 + 32 * v10 + 24);
            }
          }
        }
      }
    }
  }
  else
  {
    unint64_t v12 = *re::audioLogObjects(v6);
    float v8 = 0.0;
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      uint64_t v14 = *((void *)this + 38);
      if (!v14) {
        uint64_t v14 = *((void *)this + 44);
      }
      *(_DWORD *)uint64_t v15 = 134218240;
      *(void *)&v15[4] = v14;
      __int16 v16 = 2048;
      uint64_t v17 = a2;
      _os_log_error_impl(&dword_233120000, v12, OS_LOG_TYPE_ERROR, "AudioPlayerComponent::getParameterValue() (entityID=%llu) cannot access state for unknown playback token %llu.", v15, 0x16u);
    }
  }
  return v8;
}

void re::ecs2::AudioPlayerComponent::doDestroy(re::ecs2::AudioPlayerComponent **this, unint64_t a2)
{
  uint64_t v76 = *MEMORY[0x263EF8340];
  uint64_t v4 = *re::audioLogObjects((re *)this);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = this[38];
    if (!v5) {
      uint64_t v5 = this[44];
    }
    uint64_t v6 = v4;
    uint64_t v7 = this[2];
    if (!v7) {
      goto LABEL_10;
    }
    float v8 = this[2];
    do
    {
      unint64_t v9 = v8;
      float v8 = (re::ecs2::AudioPlayerComponent *)*((void *)v8 + 3);
    }
    while (v8);
    if (*((void *)v9 + 2))
    {
      do
      {
        uint64_t v10 = v7;
        uint64_t v7 = (re::ecs2::AudioPlayerComponent *)*((void *)v7 + 3);
      }
      while (v7);
      uint64_t v11 = *(void *)(*(void *)(*((void *)v10 + 2) + 104) + 272) >> 1;
    }
    else
    {
LABEL_10:
      uint64_t v11 = -1;
    }
    LODWORD(buf[0]) = 134218496;
    *(void *)((char *)buf + 4) = a2;
    WORD6(buf[0]) = 2048;
    *(void *)((char *)buf + 14) = v5;
    WORD3(buf[1]) = 2048;
    *((void *)&buf[1] + 1) = v11;
    _os_log_impl(&dword_233120000, v6, OS_LOG_TYPE_DEFAULT, "AudioPlayerComponent::doDestroy(token=%llu) (entityID=%llu, sceneID=%llu)", (uint8_t *)buf, 0x20u);
  }
  unint64_t v12 = re::ecs2::AudioPlayerComponent::sourceStateForToken((re::ecs2::AudioPlayerComponent *)this, a2);
  unint64_t v13 = (re *)re::ecs2::AudioPlayerComponent::audioService((re::ecs2::AudioPlayerComponent *)this);
  uint64_t v14 = v13;
  if (v12)
  {
    unint64_t v15 = a2 ^ (a2 >> 30);
    if (this[10])
    {
      unint64_t v16 = 0x94D049BB133111EBLL * ((0xBF58476D1CE4E5B9 * v15) ^ ((0xBF58476D1CE4E5B9 * v15) >> 27));
      unint64_t v17 = (v16 ^ (v16 >> 31)) % *((unsigned int *)this + 26);
      uint64_t v18 = this[11];
      uint64_t v19 = *((unsigned int *)v18 + v17);
      if (v19 != 0x7FFFFFFF)
      {
        float v20 = this[12];
        unint64_t v21 = (char *)v20 + 32 * v19;
        if (*((void *)v21 + 2) == a2)
        {
          *((_DWORD *)v18 + v1re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = *((_DWORD *)v21 + 2) & 0x7FFFFFFF;
LABEL_22:
          unint64_t v25 = this[12];
          uint64_t v26 = (char *)v25 + 32 * v19;
          int v29 = *((_DWORD *)v26 + 2);
          long long v28 = (int *)(v26 + 8);
          int v27 = v29;
          if (v29 < 0)
          {
            *long long v28 = v27 & 0x7FFFFFFF;
            unint64_t v25 = this[12];
            int v27 = *((_DWORD *)v25 + 8 * v19 + 2);
          }
          *((_DWORD *)v25 + 8 * v19 + 2) = *((_DWORD *)this + 29) | v27 & 0x80000000;
          --*((_DWORD *)this + 27);
          int v30 = *((_DWORD *)this + 30) + 1;
          *((_DWORD *)this + 29) = v19;
          *((_DWORD *)this + 30) = v30;
        }
        else
        {
          while (1)
          {
            unsigned int v23 = v19;
            uint64_t v19 = *((_DWORD *)v20 + 8 * v19 + 2) & 0x7FFFFFFF;
            if (v19 == 0x7FFFFFFF) {
              break;
            }
            __int16 v24 = (char *)v20 + 32 * v19;
            if (*((void *)v24 + 2) == a2)
            {
              *((_DWORD *)v20 + 8 * v23 + 2) = *((_DWORD *)v20 + 8 * v23 + 2) & 0x80000000 | *((_DWORD *)v24 + 2) & 0x7FFFFFFF;
              goto LABEL_22;
            }
          }
        }
      }
    }
    if (this[49])
    {
      unint64_t v31 = 0x94D049BB133111EBLL * ((0xBF58476D1CE4E5B9 * v15) ^ ((0xBF58476D1CE4E5B9 * v15) >> 27));
      unint64_t v32 = (v31 ^ (v31 >> 31)) % *((unsigned int *)this + 104);
      __int16 v33 = this[50];
      uint64_t v34 = *((unsigned int *)v33 + v32);
      if (v34 != 0x7FFFFFFF)
      {
        CMTimeValue v35 = this[51];
        uint64_t v36 = (char *)v35 + 32 * v34;
        if (*((void *)v36 + 2) == a2)
        {
          *((_DWORD *)v33 + v32) = *((_DWORD *)v36 + 2) & 0x7FFFFFFF;
LABEL_32:
          uint64_t v39 = this[51];
          CMTimeValue v40 = (char *)v39 + 32 * v34;
          int v43 = *((_DWORD *)v40 + 2);
          uint64_t v42 = (int *)(v40 + 8);
          int v41 = v43;
          if (v43 < 0)
          {
            *uint64_t v42 = v41 & 0x7FFFFFFF;
            uint64_t v39 = this[51];
            int v41 = *((_DWORD *)v39 + 8 * v34 + 2);
          }
          *((_DWORD *)v39 + 8 * v34 + 2) = *((_DWORD *)this + 107) | v41 & 0x80000000;
          *((_DWORD *)this + 10re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = v34;
          --*((_DWORD *)this + 105);
          ++*((_DWORD *)this + 108);
        }
        else
        {
          while (1)
          {
            unsigned int v37 = v34;
            uint64_t v34 = *((_DWORD *)v35 + 8 * v34 + 2) & 0x7FFFFFFF;
            if (v34 == 0x7FFFFFFF) {
              break;
            }
            uint64_t v38 = (char *)v35 + 32 * v34;
            if (*((void *)v38 + 2) == a2)
            {
              *((_DWORD *)v35 + 8 * v37 + 2) = *((_DWORD *)v35 + 8 * v37 + 2) & 0x80000000 | *((_DWORD *)v38 + 2) & 0x7FFFFFFF;
              goto LABEL_32;
            }
          }
        }
      }
    }
    if (v13)
    {
      *((void *)v12 + 56) = -1;
      (*(void (**)(re *, re::ecs2::NetworkComponent *))(*(void *)v13 + 280))(v13, v12);
      if (!*((void *)v12 + 5) && (*((void *)v12 + 29) || *((void *)v12 + 30))) {
        (*(void (**)(re *, unint64_t))(*(void *)v14 + 624))(v14, a2);
      }
    }
    uint64_t TimebaseService = re::ecs2::AudioPlayerComponent::getTimebaseService(this[2]);
    BOOL v45 = this[2];
    if (v45)
    {
      uint64_t v46 = TimebaseService;
      do
      {
        uint64_t v47 = v45;
        BOOL v45 = (re::ecs2::AudioPlayerComponent *)*((void *)v45 + 3);
      }
      while (v45);
      if (TimebaseService)
      {
        uint64_t v48 = *((void *)v47 + 2);
        if (v48)
        {
          LOBYTE(buf[0]) = 0;
          SceneDataEntity = makeSceneDataEntity(v48, (uint64_t)buf, 1, re::ecs2::Scene::kSharedSceneDataEntityID, 1);
          uint64_t v50 = re::ecs2::EntityComponentCollection::get((re::ecs2::Entity *)((char *)SceneDataEntity + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::TimebaseComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
          if (v50) {
            (*(void (**)(uint64_t, void, uint64_t))(*(void *)v46 + 72))(v46, *((void *)v12 + 87), v50 + 32);
          }
        }
      }
    }
    uint64_t v51 = (char *)v12 + 8;
    unint64_t v52 = (char *)v12 + 8;
    uint64_t v53 = this[20];
    unint64_t v54 = (unint64_t)this[18];
    uint64_t v55 = (char *)v53 + 8 * v54;
    uint64_t v56 = (re::ecs2::NetworkComponent **)v53;
    if (v54)
    {
      uint64_t v57 = 8 * v54;
      uint64_t v56 = (re::ecs2::NetworkComponent **)this[20];
      while (*v56 != v12)
      {
        ++v56;
        v57 -= 8;
        if (!v57)
        {
          uint64_t v56 = (re::ecs2::NetworkComponent **)((char *)v53 + 8 * v54);
          break;
        }
      }
    }
    unint64_t v58 = ((char *)v56 - (char *)v53) >> 3;
    if (v58 != v54)
    {
      if (v54 <= v58)
      {
        memset(buf, 0, sizeof(buf));
        os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
        _os_log_send_and_compose_impl();
        _os_crash_msg();
        __break(1u);
      }
      uint64_t v59 = v54 - 1;
      if (v54 - 1 > v58)
      {
        uint64_t v60 = *((void *)v53 + v58);
        *((void *)v53 + v58) = *((void *)v55 - 1);
        *((void *)v55 - 1) = v60;
        uint64_t v53 = this[20];
      }
      uint64_t v61 = (char *)v53 + 8 * v54;
      uint64_t v62 = *((void *)v61 - 1);
      if (v62)
      {

        *((void *)v61 - 1) = 0;
        uint64_t v59 = (uint64_t)this[18] - 1;
      }
      this[18] = (re::ecs2::AudioPlayerComponent *)v59;
      ++*((_DWORD *)this + 38);
    }
  }
  else
  {
    unint64_t v22 = *re::audioLogObjects(v13);
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
    {
      LODWORD(buf[0]) = 134217984;
      *(void *)((char *)buf + 4) = a2;
      _os_log_error_impl(&dword_233120000, v22, OS_LOG_TYPE_ERROR, "Removing a source state that doesn't exist! (%llu)", (uint8_t *)buf, 0xCu);
    }
  }
  *(void *)&buf[0] = a2;
  unint64_t v63 = (re *)re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet((uint64_t)(this + 4), (uint64_t *)buf);
  double v64 = v63;
  __int16 v65 = this[2];
  if (v65 && (uint64_t v66 = (re::ecs2::NetworkComponent *)*((void *)v65 + 25)) != 0)
  {
    unint64_t v63 = (re *)re::ecs2::NetworkComponent::owningProcessType(*((re::ecs2::NetworkComponent **)v65 + 25));
    if (v64 && !v63)
    {
      *((void *)v64 + 6) = 0;
      re::ecs2::NetworkComponent::markDirty(v66, (const re::ecs2::Component *)this);
    }
  }
  else if (v63)
  {
    *((void *)v63 + 6) = 0;
  }
  uint64_t v67 = this[41];
  unint64_t v68 = this[42];
  if (v67 != v68)
  {
    while (1)
    {
      uint64_t v69 = *(void *)v67;
      if (*(void *)(*(void *)v67 + 8) == a2) {
        break;
      }
      uint64_t v67 = (re::ecs2::AudioPlayerComponent *)((char *)v67 + 8);
      if (v67 == v68)
      {
        uint64_t v67 = this[42];
        goto LABEL_78;
      }
    }
    CMTime v70 = re::globalAllocators(v63);
    uint64_t v71 = (re *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v70[2] + 40))(v70[2], v69);
    if (v67 != v68)
    {
      for (unint64_t i = (re::ecs2::AudioPlayerComponent *)((char *)v67 + 8);
            i != v68;
            unint64_t i = (re::ecs2::AudioPlayerComponent *)((char *)i + 8))
      {
        uint64_t v73 = *(void *)i;
        if (*(void *)(*(void *)i + 8) == a2)
        {
          uint64_t v74 = re::globalAllocators(v71);
          uint64_t v71 = (re *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v74[2] + 40))(v74[2], v73);
        }
        else
        {
          *(void *)uint64_t v67 = v73;
          uint64_t v67 = (re::ecs2::AudioPlayerComponent *)((char *)v67 + 8);
        }
      }
    }
  }
LABEL_78:
  if (v67 != this[42]) {
    this[42] = v67;
  }
  if (v14)
  {
    (*(void (**)(re *, unint64_t))(*(void *)v14 + 568))(v14, a2);
    (*(void (**)(re *, unint64_t, void))(*(void *)v14 + 680))(v14, a2, 0);
  }
}

uint64_t playbackStateFromTimebase(OpaqueCMTimebase *a1)
{
  if (!a1) {
    return 13;
  }
  if (CMTimebaseGetEffectiveRate(a1) != 0.0) {
    return 1;
  }
  CMTimebaseGetTime(&time, a1);
  if (CMTimeGetSeconds(&time) == 0.0) {
    return 0;
  }
  else {
    return 3;
  }
}

BOOL re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::containsKey(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)a1) {
    return 0;
  }
  uint64_t v2 = *a2;
  unint64_t v3 = 0xBF58476D1CE4E5B9 * (*a2 ^ ((unint64_t)*a2 >> 30));
  uint64_t v4 = *(unsigned int *)(*(void *)(a1 + 8)
                       + 4
                       * (((0x94D049BB133111EBLL * (v3 ^ (v3 >> 27))) ^ ((0x94D049BB133111EBLL * (v3 ^ (v3 >> 27))) >> 31))
                        % *(unsigned int *)(a1 + 24)));
  if (v4 == 0x7FFFFFFF) {
    return 0;
  }
  uint64_t v6 = *(void *)(a1 + 16);
  if (*(void *)(v6 + 288 * v4 + 16) == v2) {
    return 1;
  }
  do
  {
    LODWORD(v4) = *(_DWORD *)(v6 + 288 * v4 + 8) & 0x7FFFFFFF;
    BOOL result = v4 != 0x7FFFFFFF;
  }
  while (v4 != 0x7FFFFFFF && *(void *)(v6 + 288 * v4 + 16) != v2);
  return result;
}

CFDictionaryRef re::AudioSourceState::copyTimebaseUserInfo(re::AudioSourceState *this)
{
  if (this) {
    return (CFDictionaryRef)CFRetain(this);
  }
  else {
    return CFDictionaryCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, 0, 0, 0, 0);
  }
}

void re::AudioSourceState::setTimebaseUserInfo(re::AudioSourceState *this, const __CFDictionary *a2)
{
  unint64_t v3 = (const void *)*((void *)this + 88);
  if (a2) {
    CFDictionaryRef Copy = CFDictionaryCreateCopy((CFAllocatorRef)*MEMORY[0x263EFFB08], a2);
  }
  else {
    CFDictionaryRef Copy = 0;
  }
  *((void *)this + 88) = Copy;
  if (v3)
  {
    CFRelease(v3);
  }
}

void ___Z66AudioPlayerComponentHandleTimebaseTimeJumpedOrEffectiveRateChangedP22__CFNotificationCenterPvPK10__CFStringPKvPK14__CFDictionary_block_invoke(uint64_t a1)
{
  CFDictionaryRef v2 = re::AudioSourceState::copyTimebaseUserInfo(*(re::AudioSourceState **)(*(void *)(a1 + 32) + 704));
  AudioPlayerComponentHandleTimebaseTimeJumpedOrEffectiveRateChanged(*(__CFNotificationCenter **)(a1 + 40), *(void **)(a1 + 48), *(const __CFString **)(a1 + 56), *(const void **)(a1 + 64), v2);
  CFRelease(v2);
}

void re::ecs2::AudioPlayerComponent::setComponentDirectivityMode(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 208) = a2;
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v4 = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(v2 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::SpatialAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    if (v4) {
      *(_DWORD *)(v4 + 40) = a2;
    }
  }
  else
  {
    uint64_t v5 = *re::audioLogObjects((re *)a1);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t v6 = 0;
      _os_log_error_impl(&dword_233120000, v5, OS_LOG_TYPE_ERROR, "Unable to set directivity on audio player component with no entity.", v6, 2u);
    }
  }
}

void re::ecs2::AudioPlayerComponent::setComponentDirectivityFocus(re::ecs2::AudioPlayerComponent *this, float a2)
{
  *((float *)this + 53) = a2;
  uint64_t v2 = *((void *)this + 2);
  if (v2)
  {
    uint64_t v4 = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(v2 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::SpatialAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    if (v4) {
      *(_DWORD *)(v4 + 44) = *((_DWORD *)this + 53);
    }
  }
  else
  {
    uint64_t v5 = *re::audioLogObjects(this);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t v6 = 0;
      _os_log_error_impl(&dword_233120000, v5, OS_LOG_TYPE_ERROR, "Unable to set directivity focus on audio player component with no entity.", v6, 2u);
    }
  }
}

void re::ecs2::AudioPlayerComponent::setComponentDirectivitySphericalCap(re::ecs2::AudioPlayerComponent *this, float a2, float a3)
{
  *((float *)this + 54) = a2;
  *((float *)this + 5re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = a3;
  uint64_t v3 = *((void *)this + 2);
  if (v3)
  {
    uint64_t v5 = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(v3 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::SpatialAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    if (v5) {
      *(void *)(v5 + 48) = *((void *)this + 27);
    }
  }
  else
  {
    uint64_t v6 = *re::audioLogObjects(this);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t v7 = 0;
      _os_log_error_impl(&dword_233120000, v6, OS_LOG_TYPE_ERROR, "Unable to set spherical cap directivity parameters on audio player component with no entity.", v7, 2u);
    }
  }
}

uint64_t re::ecs2::AudioPlayerComponent::getSizeOfAudioPlayerComponent(re::ecs2::AudioPlayerComponent *this)
{
  uint64_t v1 = *((void *)this + 2);
  if (!v1) {
    return 0;
  }
  do
  {
    uint64_t v3 = v1;
    uint64_t v1 = *(void *)(v1 + 24);
  }
  while (v1);
  uint64_t v4 = *(void *)(v3 + 16);
  if (!v4) {
    return 0;
  }
  uint64_t v5 = *(void *)(v4 + 56);
  if (!v5) {
    return 0;
  }
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 32))(v5);
  uint64_t v7 = re::ServiceLocator::serviceOrNull<re::AssetService>(v6);
  uint64_t v8 = *((void *)this + 23);
  if (!v8) {
    return 0;
  }
  unint64_t v9 = (re::AssetManager *)v7;
  uint64_t v10 = 0;
  uint64_t v11 = (const re::AssetHandle *)*((void *)this + 25);
  uint64_t v12 = 24 * v8;
  do
  {
    re::AssetHandle::AssetHandle((re::AssetHandle *)v14, v11);
    v10 += re::AssetManager::assetByteSize(v9, (re::AssetHandle *)v14);
    re::AssetHandle::~AssetHandle((re::AssetHandle *)v14);
    uint64_t v11 = (const re::AssetHandle *)((char *)v11 + 24);
    v12 -= 24;
  }
  while (v12);
  return v10;
}

uint64_t re::ecs2::AudioPlayerComponent::copySizeWithPathOfAssetsInAudioComponent(re::ecs2::AudioPlayerComponent *this)
{
  uint64_t v2 = [MEMORY[0x263EFF9A0] dictionary];
  uint64_t v3 = *((void *)this + 2);
  if (!v3) {
    goto LABEL_12;
  }
  do
  {
    uint64_t v4 = v3;
    uint64_t v3 = *(void *)(v3 + 24);
  }
  while (v3);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5 && (uint64_t v6 = *(void *)(v5 + 56)) != 0)
  {
    uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 32))(v6);
    uint64_t v8 = re::ServiceLocator::serviceOrNull<re::AssetService>(v7);
    uint64_t v9 = *((void *)this + 23);
    if (v9)
    {
      uint64_t v10 = (re::AssetManager *)v8;
      uint64_t v11 = 0;
      uint64_t v12 = (const re::AssetHandle *)*((void *)this + 25);
      uint64_t v13 = 24 * v9;
      do
      {
        re::AssetHandle::AssetHandle((re::AssetHandle *)v23, v12);
        uint64_t v14 = NSString;
        unint64_t v15 = re::AssetHandle::assetInfo((re::AssetHandle *)v23);
        if (v15[13]) {
          unint64_t v16 = (char *)v15[14];
        }
        else {
          unint64_t v16 = (char *)v15 + 105;
        }
        unint64_t v17 = [v14 stringWithCString:v16 encoding:4];
        uint64_t v18 = re::AssetManager::assetByteSize(v10, (re::AssetHandle *)v23);
        v11 += v18;
        uint64_t v19 = [NSNumber numberWithUnsignedInteger:v18];
        [v2 setObject:v19 forKey:v17];

        re::AssetHandle::~AssetHandle((re::AssetHandle *)v23);
        uint64_t v12 = (const re::AssetHandle *)((char *)v12 + 24);
        v13 -= 24;
      }
      while (v13);
    }
    else
    {
      uint64_t v11 = 0;
    }
    unint64_t v21 = [NSNumber numberWithUnsignedInteger:v11];
    [v2 setObject:v21 forKey:@"TotalSize"];

    uint64_t v20 = [v2 copy];
  }
  else
  {
LABEL_12:
    uint64_t v20 = 0;
  }

  return v20;
}

uint64_t re::ecs2::AudioPlayerComponent::clearAllSourceStates(re::ecs2::AudioPlayerComponent *this)
{
  re::ecs2::AudioPlayerComponent::doStopAll(this);
  long long v23 = 0u;
  long long v24 = 0u;
  int v25 = 1065353216;
  uint64_t v2 = *((unsigned int *)this + 28);
  if (v2)
  {
    uint64_t v3 = 0;
    uint64_t v4 = (int *)(*((void *)this + 12) + 8);
    while (1)
    {
      int v5 = *v4;
      v4 += 8;
      if (v5 < 0) {
        break;
      }
      if (v2 == ++v3)
      {
        LODWORD(v3) = *((_DWORD *)this + 28);
        break;
      }
    }
  }
  else
  {
    LODWORD(v3) = 0;
  }
  if (v2 != v3)
  {
    uint64_t v6 = v3;
    do
    {
      uint64_t v7 = (unint64_t *)(*((void *)this + 12) + 32 * v6 + 16);
      std::__hash_table<unsigned long long,std::hash<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::__emplace_unique_key_args<unsigned long long,unsigned long long const&>((uint64_t)&v23, v7, v7);
      if (*((_DWORD *)this + 28) <= (v3 + 1)) {
        int v8 = v3 + 1;
      }
      else {
        int v8 = *((_DWORD *)this + 28);
      }
      int v9 = v3;
      while (1)
      {
        uint64_t v6 = (v9 + 1);
        if (v8 - 1 == v9) {
          break;
        }
        ++v9;
        LODWORD(v3) = v6;
        if ((*(_DWORD *)(*((void *)this + 12) + 32 * v6 + 8) & 0x80000000) != 0) {
          goto LABEL_17;
        }
      }
      LODWORD(v3) = v8;
LABEL_17:
      ;
    }
    while (v2 != v3);
    for (unint64_t i = (void *)v24; i; unint64_t i = (void *)*i)
      re::ecs2::AudioPlayerComponent::doDestroy((re::ecs2::AudioPlayerComponent **)this, i[2]);
  }
  uint64_t v11 = *((void *)this + 2);
  if (!v11)
  {
    uint64_t v12 = 0;
    goto LABEL_24;
  }
  uint64_t v12 = *(re::ecs2::NetworkComponent **)(v11 + 200);
  if (!v12)
  {
LABEL_24:
    BOOL v14 = 0;
    BOOL v13 = 1;
    goto LABEL_25;
  }
  BOOL v13 = re::ecs2::NetworkComponent::owningProcessType(*(re::ecs2::NetworkComponent **)(v11 + 200)) != 0;
  BOOL v14 = v13;
LABEL_25:
  if (re::ecs2::AudioPlayerComponent::audioService(this))
  {
    uint64_t v15 = re::ecs2::AudioPlayerComponent::audioService(this);
    if ((((*(unsigned int (**)(uint64_t))(*(void *)v15 + 544))(v15) | v14) & 1) == 0)
    {
      uint64_t v16 = *((unsigned int *)this + 16);
      if (v16)
      {
        uint64_t v17 = 0;
        uint64_t v18 = (_DWORD *)(*((void *)this + 6) + 8);
        while ((*v18 & 0x80000000) == 0)
        {
          v18 += 72;
          if (v16 == ++v17)
          {
            LODWORD(v1re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = *((_DWORD *)this + 16);
            break;
          }
        }
      }
      else
      {
        LODWORD(v1re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 0;
      }
      if (v16 != v17)
      {
        uint64_t v19 = v17;
        do
        {
          *(void *)(*((void *)this + 6) + 288 * v19 + 56) = 4;
          if (v16 <= (int)v17 + 1) {
            int v20 = v17 + 1;
          }
          else {
            int v20 = v16;
          }
          int v21 = v17;
          while (1)
          {
            uint64_t v19 = (v21 + 1);
            if (v20 - 1 == v21) {
              break;
            }
            ++v21;
            LODWORD(v1re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = v19;
            if ((*(_DWORD *)(*((void *)this + 6) + 288 * v19 + 8) & 0x80000000) != 0) {
              goto LABEL_43;
            }
          }
          LODWORD(v1re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = v20;
LABEL_43:
          ;
        }
        while (v16 != v17);
      }
    }
  }
  if (!v13)
  {
    re::ecs2::Component::markDirty(this);
    re::ecs2::NetworkComponent::markDirty(v12, this);
  }
  return std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)&v23);
}

void re::ecs2::AudioPlayerSystem::willAddSystemToECSService(re::ecs2::AudioPlayerSystem *this)
{
  uint64_t v2 = *((void *)this + 5);
  uint64_t Instance = re::ecs2::AudioPlayerTelemetryReporter::getInstance(this);
  re::ecs2::AudioPlayerTelemetryReporter::initializeTimerWith(Instance, *((void **)this + 13), (uint64_t)this);
  if (v2)
  {
    uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 32))(v2);
    uint64_t v5 = re::ServiceLocator::serviceOrNull<re::Engine>(v4);
    if (v5) {
      objc_storeStrong((id *)this + 13, *(id *)(v5 + 432));
    }
    uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 32))(v2);
    *((void *)this + 20) = re::ServiceLocator::serviceOrNull<re::AudioSceneService>(v6);
    uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 32))(v2);
    *((void *)this + 21) = re::ServiceLocator::serviceOrNull<re::TimebaseService>(v7);
    *((void *)this + 22) = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 32))(v2);
  }
}

void re::ecs2::AudioPlayerSystem::willRemoveSystemFromECSService(re::ecs2::AudioPlayerSystem *this)
{
  if (re::ecs2::AudioPlayerTelemetryReporter::m_playerQueue) {
    dispatch_sync((dispatch_queue_t)re::ecs2::AudioPlayerTelemetryReporter::m_playerQueue, &__block_literal_global_5_0);
  }
  *((void *)this + 20) = 0;
  *((void *)this + 21) = 0;
  *((void *)this + 22) = 0;
}

uint64_t re::ecs2::AudioPlayerSystem::willAddSceneToECSService(uint64_t this, re::ecs2::Scene *a2)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  BOOL v14 = a2;
  if (a2)
  {
    uint64_t v2 = this;
    uint64_t v3 = (re::ecs2::Scene *)((char *)a2 + 200);
    uint64_t v4 = re::ecs2::SceneComponentTable::get((re::ecs2::Scene *)((char *)a2 + 200), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioPlayerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    unint64_t v15 = v2;
    uint64_t v16 = re::ecs2::AudioPlayerSystem::didAddComponents;
    uint64_t v17 = 0;
    uint64_t v18 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>,re::Slice<re::ecs2::AudioPlayerComponent*>>::createSubscription<re::ecs2::AudioPlayerSystem>(re::ecs2::AudioPlayerSystem *,REEventHandlerResult (re::ecs2::AudioPlayerSystem::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>*,re::Slice<re::ecs2::AudioPlayerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>,re::Slice<re::ecs2::AudioPlayerComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioPlayerComponent*>&&)#1}::__invoke;
    re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription((_DWORD *)(v4 + 128), (uint64_t)&v15);
    uint64_t v5 = re::ecs2::SceneComponentTable::get(v3, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ChannelAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    unint64_t v15 = v2;
    uint64_t v16 = re::ecs2::AudioPlayerSystem::didAddChannelAudioComponents;
    uint64_t v17 = 0;
    uint64_t v18 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>,re::Slice<re::ecs2::ChannelAudioComponent*>>::createSubscription<re::ecs2::AudioPlayerSystem>(re::ecs2::AudioPlayerSystem *,REEventHandlerResult (re::ecs2::AudioPlayerSystem::*)(re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>*,re::Slice<re::ecs2::ChannelAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>,re::Slice<re::ecs2::ChannelAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::ChannelAudioComponent*>&&)#1}::__invoke;
    re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription((_DWORD *)(v5 + 128), (uint64_t)&v15);
    uint64_t v6 = re::ecs2::SceneComponentTable::get(v3, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AmbientAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    unint64_t v15 = v2;
    uint64_t v16 = re::ecs2::AudioPlayerSystem::didAddAmbientAudioComponents;
    uint64_t v17 = 0;
    uint64_t v18 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>,re::Slice<re::ecs2::AmbientAudioComponent*>>::createSubscription<re::ecs2::AudioPlayerSystem>(re::ecs2::AudioPlayerSystem *,REEventHandlerResult (re::ecs2::AudioPlayerSystem::*)(re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>*,re::Slice<re::ecs2::AmbientAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>,re::Slice<re::ecs2::AmbientAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::AmbientAudioComponent*>&&)#1}::__invoke;
    re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription((_DWORD *)(v6 + 128), (uint64_t)&v15);
    uint64_t v7 = re::ecs2::SceneComponentTable::get(v3, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::SpatialAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    unint64_t v15 = v2;
    uint64_t v16 = re::ecs2::AudioPlayerSystem::didAddSpatialAudioComponents;
    uint64_t v17 = 0;
    uint64_t v18 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::createSubscription<re::ecs2::AudioPlayerSystem>(re::ecs2::AudioPlayerSystem *,REEventHandlerResult (re::ecs2::AudioPlayerSystem::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Slice<re::ecs2::SpatialAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialAudioComponent*>&&)#1}::__invoke;
    re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription((_DWORD *)(v7 + 128), (uint64_t)&v15);
    unint64_t v15 = v2;
    uint64_t v16 = re::ecs2::AudioPlayerSystem::willRemoveComponents;
    uint64_t v17 = 0;
    uint64_t v18 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>,re::Slice<re::ecs2::AudioPlayerComponent*>>::createSubscription<re::ecs2::AudioPlayerSystem>(re::ecs2::AudioPlayerSystem *,REEventHandlerResult (re::ecs2::AudioPlayerSystem::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>*,re::Slice<re::ecs2::AudioPlayerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>,re::Slice<re::ecs2::AudioPlayerComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioPlayerComponent*>&&)#1}::__invoke;
    re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription((_DWORD *)(v4 + 392), (uint64_t)&v15);
    std::__hash_table<re::ecs2::Scene *,std::hash<re::ecs2::Scene *>,std::equal_to<re::ecs2::Scene *>,std::allocator<re::ecs2::Scene *>>::__emplace_unique_key_args<re::ecs2::Scene *,re::ecs2::Scene * const&>(v2 + 240, &v14, &v14);
    this = *(void *)(v2 + 160);
    if (this)
    {
      this = (*(uint64_t (**)(uint64_t, re::ecs2::Scene *))(*(void *)this + 16))(this, v14);
      if (this)
      {
        uint64_t v8 = this;
        v13[0] = MEMORY[0x263EF8330];
        v13[1] = 3221225472;
        v13[2] = ___ZN2re4ecs217AudioPlayerSystem24willAddSceneToECSServiceEPNS0_5SceneE_block_invoke;
        v13[3] = &__block_descriptor_40_e5_v8__0l;
        v13[4] = v14;
        uint64_t v9 = (*(uint64_t (**)(uint64_t, void *))(*(void *)this + 48))(this, v13);
        unint64_t v15 = *(void *)(*((void *)v14 + 13) + 272) >> 1;
        std::__hash_table<std::__hash_value_type<unsigned long long,unsigned long long>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned long long>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned long long>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned long long>>>::__emplace_unique_key_args<unsigned long long,std::piecewise_construct_t const&,std::tuple<unsigned long long &&>,std::tuple<>>((float *)(v2 + 200), v15, &v15)[3] = v9;
        uint64_t v10 = *(void *)(*((void *)v14 + 13) + 272) >> 1;
        v12[0] = MEMORY[0x263EF8330];
        v12[1] = 3221225472;
        v12[2] = ___ZN2re4ecs217AudioPlayerSystem24willAddSceneToECSServiceEPNS0_5SceneE_block_invoke_2;
        v12[3] = &__block_descriptor_40_e5_v8__0l;
        v12[4] = v14;
        (*(void (**)(uint64_t, uint64_t, uint64_t, void *))(*(void *)v8 + 32))(v8, 513, v10, v12);
        v11[0] = MEMORY[0x263EF8330];
        v11[1] = 3221225472;
        void v11[2] = ___ZN2re4ecs217AudioPlayerSystem24willAddSceneToECSServiceEPNS0_5SceneE_block_invoke_3;
        v11[3] = &__block_descriptor_56_e5_v8__0l;
        v11[4] = v14;
        v11[5] = v8;
        v11[6] = v10;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void *))(*(void *)v8 + 32))(v8, 769, v10, v11);
      }
    }
  }
  return this;
}

uint64_t ___ZN2re4ecs217AudioPlayerSystem24willAddSceneToECSServiceEPNS0_5SceneE_block_invoke(uint64_t a1)
{
  uint64_t result = re::ecs2::SceneComponentTable::get((re::ecs2::SceneComponentTable *)(*(void *)(a1 + 32) + 200), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioPlayerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
  uint64_t v2 = *(void *)(result + 24);
  if (v2)
  {
    uint64_t v3 = *(re::ecs2::AudioPlayerComponent ***)(result + 40);
    uint64_t v4 = 8 * v2;
    do
    {
      uint64_t v5 = *v3++;
      uint64_t result = re::ecs2::AudioPlayerComponent::clearAllSourceStates(v5);
      v4 -= 8;
    }
    while (v4);
  }
  return result;
}

void ___ZN2re4ecs217AudioPlayerSystem24willAddSceneToECSServiceEPNS0_5SceneE_block_invoke_2(uint64_t a1)
{
  uint64_t v1 = re::ecs2::SceneComponentTable::get((re::ecs2::SceneComponentTable *)(*(void *)(a1 + 32) + 200), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioPlayerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
  uint64_t v2 = *(void *)(v1 + 24);
  if (v2)
  {
    uint64_t v3 = *(re::ecs2::AudioPlayerComponent ***)(v1 + 40);
    uint64_t v4 = &v3[v2];
    do
    {
      uint64_t v5 = *v3;
      re::ecs2::AudioPlayerComponent::doStopAll(*v3);
      atomic_store(0, (unsigned int *)v5 + 80);
      uint64_t v6 = *((unsigned int *)v5 + 16);
      if (v6)
      {
        uint64_t v7 = 0;
        uint64_t v8 = (_DWORD *)(*((void *)v5 + 6) + 8);
        while ((*v8 & 0x80000000) == 0)
        {
          v8 += 72;
          if (v6 == ++v7)
          {
            LODWORD(vre::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = *((_DWORD *)v5 + 16);
            break;
          }
        }
      }
      else
      {
        LODWORD(vre::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 0;
      }
      if (v6 != v7)
      {
        uint64_t v9 = v7;
        do
        {
          *(void *)(*((void *)v5 + 6) + 288 * v9 + 72) = 0;
          if (v6 <= (int)v7 + 1) {
            int v10 = v7 + 1;
          }
          else {
            int v10 = v6;
          }
          int v11 = v7;
          while (1)
          {
            uint64_t v9 = (v11 + 1);
            if (v10 - 1 == v11) {
              break;
            }
            ++v11;
            LODWORD(vre::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = v9;
            if ((*(_DWORD *)(*((void *)v5 + 6) + 288 * v9 + 8) & 0x80000000) != 0) {
              goto LABEL_19;
            }
          }
          LODWORD(vre::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = v10;
LABEL_19:
          ;
        }
        while (v6 != v7);
      }
      uint64_t v12 = *((void *)v5 + 2);
      if (v12)
      {
        BOOL v13 = *(re::ecs2::NetworkComponent **)(v12 + 200);
        if (v13)
        {
          if (!re::ecs2::NetworkComponent::owningProcessType(*(re::ecs2::NetworkComponent **)(v12 + 200))) {
            re::ecs2::NetworkComponent::markDirty(v13, v5);
          }
        }
      }
      ++v3;
    }
    while (v3 != v4);
  }
}

uint64_t ___ZN2re4ecs217AudioPlayerSystem24willAddSceneToECSServiceEPNS0_5SceneE_block_invoke_3(uint64_t a1)
{
  uint64_t v2 = re::ecs2::SceneComponentTable::get((re::ecs2::SceneComponentTable *)(*(void *)(a1 + 32) + 200), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioPlayerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
  uint64_t v3 = *(void *)(v2 + 24);
  if (v3)
  {
    uint64_t v4 = *(re::ecs2::AudioPlayerComponent ***)(v2 + 40);
    uint64_t v5 = 8 * v3;
    do
    {
      uint64_t v6 = *v4++;
      re::ecs2::AudioPlayerComponent::clearAllSourceStates(v6);
      v5 -= 8;
    }
    while (v5);
  }
  uint64_t v7 = *(uint64_t (**)(void))(**(void **)(a1 + 40) + 88);
  return v7();
}

uint64_t re::ecs2::AudioPlayerSystem::willRemoveSceneFromECSService(uint64_t this, re::ecs2::Scene *a2)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  int v11 = a2;
  if (a2)
  {
    uint64_t v2 = this;
    uint64_t v3 = (re::ecs2::Scene *)((char *)a2 + 200);
    uint64_t v4 = re::ecs2::SceneComponentTable::get((re::ecs2::Scene *)((char *)a2 + 200), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioPlayerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    *(void *)&long long v12 = v2;
    *((void *)&v12 + 1) = re::ecs2::AudioPlayerSystem::didAddComponents;
    uint64_t v13 = 0;
    BOOL v14 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>,re::Slice<re::ecs2::AudioPlayerComponent*>>::createSubscription<re::ecs2::AudioPlayerSystem>(re::ecs2::AudioPlayerSystem *,REEventHandlerResult (re::ecs2::AudioPlayerSystem::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>*,re::Slice<re::ecs2::AudioPlayerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>,re::Slice<re::ecs2::AudioPlayerComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioPlayerComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(v4 + 128, &v12);
    *(void *)&long long v12 = v2;
    *((void *)&v12 + 1) = re::ecs2::AudioPlayerSystem::willRemoveComponents;
    uint64_t v13 = 0;
    BOOL v14 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>,re::Slice<re::ecs2::AudioPlayerComponent*>>::createSubscription<re::ecs2::AudioPlayerSystem>(re::ecs2::AudioPlayerSystem *,REEventHandlerResult (re::ecs2::AudioPlayerSystem::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>*,re::Slice<re::ecs2::AudioPlayerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>,re::Slice<re::ecs2::AudioPlayerComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioPlayerComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(v4 + 392, &v12);
    uint64_t v5 = re::ecs2::SceneComponentTable::get(v3, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ChannelAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    *(void *)&long long v12 = v2;
    *((void *)&v12 + 1) = re::ecs2::AudioPlayerSystem::didAddChannelAudioComponents;
    uint64_t v13 = 0;
    BOOL v14 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>,re::Slice<re::ecs2::ChannelAudioComponent*>>::createSubscription<re::ecs2::AudioPlayerSystem>(re::ecs2::AudioPlayerSystem *,REEventHandlerResult (re::ecs2::AudioPlayerSystem::*)(re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>*,re::Slice<re::ecs2::ChannelAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>,re::Slice<re::ecs2::ChannelAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::ChannelAudioComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(v5 + 128, &v12);
    uint64_t v6 = re::ecs2::SceneComponentTable::get(v3, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AmbientAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    *(void *)&long long v12 = v2;
    *((void *)&v12 + 1) = re::ecs2::AudioPlayerSystem::didAddAmbientAudioComponents;
    uint64_t v13 = 0;
    BOOL v14 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>,re::Slice<re::ecs2::AmbientAudioComponent*>>::createSubscription<re::ecs2::AudioPlayerSystem>(re::ecs2::AudioPlayerSystem *,REEventHandlerResult (re::ecs2::AudioPlayerSystem::*)(re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>*,re::Slice<re::ecs2::AmbientAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>,re::Slice<re::ecs2::AmbientAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::AmbientAudioComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(v6 + 128, &v12);
    uint64_t v7 = re::ecs2::SceneComponentTable::get(v3, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::SpatialAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    *(void *)&long long v12 = v2;
    *((void *)&v12 + 1) = re::ecs2::AudioPlayerSystem::didAddSpatialAudioComponents;
    uint64_t v13 = 0;
    BOOL v14 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::createSubscription<re::ecs2::AudioPlayerSystem>(re::ecs2::AudioPlayerSystem *,REEventHandlerResult (re::ecs2::AudioPlayerSystem::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Slice<re::ecs2::SpatialAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialAudioComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(v7 + 128, &v12);
    std::__hash_table<re::ecs2::Scene *,std::hash<re::ecs2::Scene *>,std::equal_to<re::ecs2::Scene *>,std::allocator<re::ecs2::Scene *>>::__erase_unique<re::ecs2::Scene *>((void *)(v2 + 240), &v11);
    this = *(void *)(v2 + 160);
    if (this)
    {
      this = (*(uint64_t (**)(uint64_t, re::ecs2::Scene *))(*(void *)this + 16))(this, v11);
      if (this)
      {
        uint64_t v8 = this;
        *(void *)&long long v12 = *(void *)(*((void *)v11 + 13) + 272) >> 1;
        uint64_t v9 = std::__hash_table<std::__hash_value_type<unsigned long long,unsigned long long>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned long long>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned long long>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned long long>>>::__emplace_unique_key_args<unsigned long long,std::piecewise_construct_t const&,std::tuple<unsigned long long &&>,std::tuple<>>((float *)(v2 + 200), v12, &v12);
        (*(void (**)(uint64_t, void))(*(void *)v8 + 56))(v8, v9[3]);
        uint64_t v10 = *(void *)(*((void *)v11 + 13) + 272) >> 1;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v8 + 40))(v8, 513, v10);
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v8 + 40))(v8, 769, v10);
      }
    }
  }
  return this;
}

uint64_t re::ecs2::AudioPlayerSystem::didAddComponents(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v74 = *MEMORY[0x263EF8340];
  unint64_t v60 = *(void *)(a2 + 120);
  unint64_t v7 = *(void *)(*(void *)(v60 + 104) + 272);
  uint64_t v8 = (*(uint64_t (**)(void))(**(void **)(a1 + 40) + 32))(*(void *)(a1 + 40));
  uint64_t v9 = re::ServiceLocator::serviceOrNull<re::Engine>(v8);
  if (v9)
  {
    obunint64_t j = *(id *)(v9 + 432);
  }
  else
  {
    obunint64_t j = (id)MEMORY[0x263EF83A0];
    id v10 = MEMORY[0x263EF83A0];
  }
  uint64_t v11 = (*(uint64_t (**)(void))(**(void **)(a1 + 40) + 32))(*(void *)(a1 + 40));
  uint64_t v12 = re::ServiceLocator::serviceOrNull<re::SharedClockService>(v11);
  if (a4)
  {
    uint64_t v13 = v12;
    unint64_t v58 = &a3[a4];
    unint64_t v63 = v7 >> 1;
    uint64_t v59 = v12;
    do
    {
      uint64_t v14 = *a3;
      if (v13) {
        uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)v13 + 32))(v13);
      }
      uint64_t v15 = (id)*re::audioLogObjects((re *)v12);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        unint64_t v16 = *(void *)(v14 + 304);
        if (!v16) {
          unint64_t v16 = *(void *)(v14 + 352);
        }
        uint64_t v17 = *(void *)(v14 + 16);
        if (v17)
        {
          uint64_t v18 = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(v17 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioTransientComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType);
          if (v18) {
            uint64_t v17 = *(void *)(v18 + 32);
          }
          else {
            uint64_t v17 = 0;
          }
        }
        uint64_t v19 = *(void *)(v14 + 144);
        int v20 = *(_DWORD *)(v14 + 60);
        *(_DWORD *)CMTime buf = 134219008;
        unint64_t v65 = v16;
        __int16 v66 = 2048;
        uint64_t v67 = v14;
        __int16 v68 = 2048;
        uint64_t v69 = v17;
        __int16 v70 = 2048;
        uint64_t v71 = v19;
        __int16 v72 = 1024;
        int v73 = v20;
        _os_log_impl(&dword_233120000, v15, OS_LOG_TYPE_DEFAULT, "Adding AudioPlayerComponent (entityID=%llu) %p (connection=%llu) with %zu source states and %u sync states.", buf, 0x30u);
      }

      objc_storeStrong((id *)(v14 + 288), obj);
      uint64_t v21 = *(void *)(v14 + 144);
      if (v21)
      {
        unint64_t v22 = *(void **)(v14 + 160);
        long long v23 = &v22[v21];
        do
        {
          long long v24 = (void *)*v22;
          if (*v22) {
            int v25 = v24 + 1;
          }
          v24[56] = v63;
          unint64_t v26 = v24[85];
          uint64_t v27 = re::HashTable<re::ecs2::Scene const*,re::HashTable<unsigned long long,re::SharedPtr<re::AudioSourceState>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,true,false>::tryGet(a1 + 112, v60);
          if (v27)
          {
            if (*(void *)v27)
            {
              unint64_t v28 = 0x94D049BB133111EBLL
                  * ((0xBF58476D1CE4E5B9 * (v26 ^ (v26 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (v26 ^ (v26 >> 30))) >> 27));
              uint64_t v29 = *(unsigned int *)(*(void *)(v27 + 8) + 4 * ((v28 ^ (v28 >> 31)) % *(unsigned int *)(v27 + 24)));
              if (v29 != 0x7FFFFFFF)
              {
                uint64_t v30 = *(void *)(v27 + 16);
                while (*(void *)(v30 + 32 * v29 + 16) != v26)
                {
                  uint64_t v29 = *(_DWORD *)(v30 + 32 * v29 + 8) & 0x7FFFFFFF;
                  if (v29 == 0x7FFFFFFF) {
                    goto LABEL_29;
                  }
                }
                re::HashTable<unsigned long long,re::SharedPtr<re::AudioSourceState>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::remove(v27, v26);
                unint64_t v32 = *re::audioLogObjects(v31);
                if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
                {
                  *(_DWORD *)CMTime buf = 134217984;
                  unint64_t v65 = v26;
                  _os_log_impl(&dword_233120000, v32, OS_LOG_TYPE_DEFAULT, "[RE/ECS] [Update] didAddSourceState() matched a stale source state to an AudioPlayerComponent with token: %llu", buf, 0xCu);
                }
              }
            }
          }
LABEL_29:

          ++v22;
        }
        while (v22 != v23);
      }
      uint64_t v34 = *(void **)(v14 + 328);
      __int16 v33 = *(void **)(v14 + 336);
      uint64_t v62 = a3;
      if (v34 == v33) {
        goto LABEL_52;
      }
      CMTimeValue v35 = *(void **)(v14 + 336);
      while (1)
      {
        uint64_t v36 = *v34;
        uint64_t v12 = re::HashTable<unsigned long long,re::PeerAttributionContext *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet(v14 + 80, (uint64_t *)(*v34 + 8));
        if (v36 && v12 == 0) {
          break;
        }
        if (!v12) {
          goto LABEL_40;
        }
        if (++v34 == v33) {
          goto LABEL_53;
        }
      }
      uint64_t v38 = re::globalAllocators((re *)v12);
      uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v38[2] + 40))(v38[2], v36);
LABEL_40:
      if (v34 == v33) {
        goto LABEL_53;
      }
      uint64_t v39 = v34 + 1;
      if (v34 + 1 == v33)
      {
LABEL_52:
        CMTimeValue v35 = v34;
      }
      else
      {
        CMTimeValue v35 = v34;
        do
        {
          uint64_t v40 = *v39;
          uint64_t v12 = re::HashTable<unsigned long long,re::PeerAttributionContext *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet(v14 + 80, (uint64_t *)(*v39 + 8));
          if (v40) {
            BOOL v41 = v12 == 0;
          }
          else {
            BOOL v41 = 0;
          }
          if (v41)
          {
            uint64_t v42 = re::globalAllocators((re *)v12);
            uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v42[2] + 40))(v42[2], v40);
          }
          else if (v12)
          {
            *v35++ = *v39;
          }
          ++v39;
        }
        while (v39 != v33);
      }
LABEL_53:
      if (v35 != *(void **)(v14 + 336)) {
        *(void *)(v14 + 336) = v35;
      }
      uint64_t v43 = *(unsigned int *)(v14 + 64);
      if (v43)
      {
        uint64_t v44 = 0;
        BOOL v45 = (_DWORD *)(*(void *)(v14 + 48) + 8);
        while ((*v45 & 0x80000000) == 0)
        {
          v45 += 72;
          if (v43 == ++v44)
          {
            LODWORD(v44) = *(_DWORD *)(v14 + 64);
            break;
          }
        }
      }
      else
      {
        LODWORD(v44) = 0;
      }
      if (v43 != v44)
      {
        uint64_t v46 = v44;
        do
        {
          uint64_t v47 = *(void *)(v14 + 48);
          uint64_t v48 = v47 + 288 * v46;
          uint64_t v12 = re::HashTable<unsigned long long,re::PeerAttributionContext *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet(v14 + 80, (uint64_t *)(v48 + 16));
          if (v12)
          {
            if (*(unsigned char *)(*(void *)v12 + 488))
            {
              uint64_t v49 = v47 + 288 * v46;
              uint64_t v51 = *(void *)(v49 + 72);
              uint64_t v50 = (void *)(v49 + 72);
              if (v51)
              {
                uint64_t TimebaseService = re::ecs2::AudioPlayerComponent::getTimebaseService(*(re::ecs2::AudioPlayerComponent **)(v14 + 16));
                uint64_t v12 = (*(uint64_t (**)(uint64_t, void))(*(void *)TimebaseService + 120))(TimebaseService, *v50);
                if ((v12 & 1) == 0)
                {
                  *uint64_t v50 = 0;
                  uint64_t v53 = *(void *)(v48 + 16);
                  unint64_t v54 = (re::TimebaseService *)re::ecs2::AudioPlayerComponent::getTimebaseService(*(re::ecs2::AudioPlayerComponent **)(v14 + 16));
                  uint64_t v12 = re::ecs2::AudioPlayerComponent::completeTimebasePreparation((re::ecs2::AudioPlayerComponent *)v14, v53, (re::AudioSourceSyncState *)(v48 + 24), v54);
                }
              }
            }
          }
          unsigned int v55 = *(_DWORD *)(v14 + 64);
          if (v55 <= (int)v44 + 1) {
            unsigned int v55 = v44 + 1;
          }
          while (1)
          {
            uint64_t v46 = (v44 + 1);
            if (v55 - 1 == v44) {
              break;
            }
            LODWORD(v44) = v44 + 1;
            unsigned int v56 = v46;
            if ((*(_DWORD *)(*(void *)(v14 + 48) + 288 * v46 + 8) & 0x80000000) != 0) {
              goto LABEL_74;
            }
          }
          unsigned int v56 = v55;
LABEL_74:
          LODWORD(v44) = v56;
        }
        while (v43 != v56);
      }
      a3 = v62 + 1;
      uint64_t v13 = v59;
    }
    while (v62 + 1 != v58);
  }

  return 0;
}

uint64_t re::ecs2::AudioPlayerSystem::didAddChannelAudioComponents(re *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    uint64_t v4 = a3;
    uint64_t v5 = a3 + 8 * a4;
    int8x16_t v6 = (int8x16_t)xmmword_23436BBD0;
    do
    {
      uint64_t v7 = *(void *)(*(void *)v4 + 16);
      if (v7)
      {
        uint64_t v8 = (re::ecs2::EntityComponentCollection *)(v7 + 32);
        uint64_t v9 = *(unsigned __int16 *)(v7 + 82);
        if (*(_WORD *)(v7 + 82))
        {
          id v10 = (const __int16 *)((char *)re::ecs2::ComponentImpl<re::ecs2::AmbientAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                + 16);
          uint64_t v11 = *(int16x8_t **)(v7 + 88);
          int16x8_t v12 = vld1q_dup_s16(v10);
          int v13 = 1;
          uint64_t v14 = v11;
          uint64_t v15 = *(unsigned __int16 *)(v7 + 82);
          while (1)
          {
            uint16x8_t v16 = (uint16x8_t)vandq_s8((int8x16_t)vceqq_s16(v12, *v14), v6);
            v16.i16[0] = vmaxvq_u16(v16);
            if (v16.i32[0]) {
              break;
            }
            v13 -= 8;
            ++v14;
            if (!--v15) {
              goto LABEL_10;
            }
          }
          if (v16.u16[0] - v13 < *(unsigned __int16 *)(v7 + 80))
          {
LABEL_15:
            uint64_t v21 = *re::audioLogObjects(a1);
            if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)CMTime buf = 0;
              _os_log_impl(&dword_233120000, v21, OS_LOG_TYPE_DEFAULT, "An entity may only have a single audio component at a time. The previous audio component is being removed.", buf, 2u);
            }
            re::ecs2::EntityComponentCollection::remove(v8, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AmbientAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
            re::ecs2::EntityComponentCollection::remove(v8, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::SpatialAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
            goto LABEL_18;
          }
LABEL_10:
          uint64_t v17 = (const __int16 *)((char *)re::ecs2::ComponentImpl<re::ecs2::SpatialAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                + 16);
          int16x8_t v18 = vld1q_dup_s16(v17);
          int v19 = 1;
          while (1)
          {
            uint16x8_t v20 = (uint16x8_t)vandq_s8((int8x16_t)vceqq_s16(v18, *v11), v6);
            v20.i16[0] = vmaxvq_u16(v20);
            if (v20.i32[0]) {
              break;
            }
            v19 -= 8;
            ++v11;
            if (!--v9) {
              goto LABEL_18;
            }
          }
          if (v20.u16[0] - v19 < *(unsigned __int16 *)(v7 + 80)) {
            goto LABEL_15;
          }
        }
LABEL_18:
        a1 = (re *)re::ecs2::EntityComponentCollection::getOrAdd(v8, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioPlayerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
        int8x16_t v6 = (int8x16_t)xmmword_23436BBD0;
      }
      v4 += 8;
    }
    while (v4 != v5);
  }
  return 0;
}

uint64_t re::ecs2::AudioPlayerSystem::didAddAmbientAudioComponents(re *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    uint64_t v4 = a3;
    uint64_t v5 = a3 + 8 * a4;
    int8x16_t v6 = (int8x16_t)xmmword_23436BBD0;
    do
    {
      uint64_t v7 = *(void *)(*(void *)v4 + 16);
      if (v7)
      {
        uint64_t v8 = (re::ecs2::EntityComponentCollection *)(v7 + 32);
        uint64_t v9 = *(unsigned __int16 *)(v7 + 82);
        if (*(_WORD *)(v7 + 82))
        {
          id v10 = (const __int16 *)((char *)re::ecs2::ComponentImpl<re::ecs2::ChannelAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                + 16);
          uint64_t v11 = *(int16x8_t **)(v7 + 88);
          int16x8_t v12 = vld1q_dup_s16(v10);
          int v13 = 1;
          uint64_t v14 = v11;
          uint64_t v15 = *(unsigned __int16 *)(v7 + 82);
          while (1)
          {
            uint16x8_t v16 = (uint16x8_t)vandq_s8((int8x16_t)vceqq_s16(v12, *v14), v6);
            v16.i16[0] = vmaxvq_u16(v16);
            if (v16.i32[0]) {
              break;
            }
            v13 -= 8;
            ++v14;
            if (!--v15) {
              goto LABEL_10;
            }
          }
          if (v16.u16[0] - v13 < *(unsigned __int16 *)(v7 + 80))
          {
LABEL_15:
            uint64_t v21 = *re::audioLogObjects(a1);
            if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)CMTime buf = 0;
              _os_log_impl(&dword_233120000, v21, OS_LOG_TYPE_DEFAULT, "An entity may only have a single audio component at a time. The previous audio component is being removed.", buf, 2u);
            }
            re::ecs2::EntityComponentCollection::remove(v8, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ChannelAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
            re::ecs2::EntityComponentCollection::remove(v8, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::SpatialAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
            goto LABEL_18;
          }
LABEL_10:
          uint64_t v17 = (const __int16 *)((char *)re::ecs2::ComponentImpl<re::ecs2::SpatialAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                + 16);
          int16x8_t v18 = vld1q_dup_s16(v17);
          int v19 = 1;
          while (1)
          {
            uint16x8_t v20 = (uint16x8_t)vandq_s8((int8x16_t)vceqq_s16(v18, *v11), v6);
            v20.i16[0] = vmaxvq_u16(v20);
            if (v20.i32[0]) {
              break;
            }
            v19 -= 8;
            ++v11;
            if (!--v9) {
              goto LABEL_18;
            }
          }
          if (v20.u16[0] - v19 < *(unsigned __int16 *)(v7 + 80)) {
            goto LABEL_15;
          }
        }
LABEL_18:
        a1 = (re *)re::ecs2::EntityComponentCollection::getOrAdd(v8, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioPlayerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
        int8x16_t v6 = (int8x16_t)xmmword_23436BBD0;
      }
      v4 += 8;
    }
    while (v4 != v5);
  }
  return 0;
}

uint64_t re::ecs2::AudioPlayerSystem::didAddSpatialAudioComponents(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  if (a4)
  {
    uint64_t v4 = a3;
    uint64_t v5 = &a3[a4];
    int8x16_t v6 = (int8x16_t)xmmword_23436BBD0;
    do
    {
      uint64_t v7 = *v4;
      uint64_t v8 = *(void *)(*v4 + 16);
      if (v8)
      {
        uint64_t v9 = (re::ecs2::EntityComponentCollection *)(v8 + 32);
        uint64_t v10 = *(unsigned __int16 *)(v8 + 82);
        if (*(_WORD *)(v8 + 82))
        {
          uint64_t v11 = (const __int16 *)((char *)re::ecs2::ComponentImpl<re::ecs2::ChannelAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                + 16);
          int16x8_t v12 = *(int16x8_t **)(v8 + 88);
          int16x8_t v13 = vld1q_dup_s16(v11);
          int v14 = 1;
          uint64_t v15 = v12;
          uint64_t v16 = *(unsigned __int16 *)(v8 + 82);
          while (1)
          {
            uint16x8_t v17 = (uint16x8_t)vandq_s8((int8x16_t)vceqq_s16(v13, *v15), v6);
            v17.i16[0] = vmaxvq_u16(v17);
            if (v17.i32[0]) {
              break;
            }
            v14 -= 8;
            ++v15;
            if (!--v16) {
              goto LABEL_10;
            }
          }
          if (v17.u16[0] - v14 < *(unsigned __int16 *)(v8 + 80))
          {
LABEL_15:
            unint64_t v22 = *re::audioLogObjects((re *)a1);
            if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)CMTime buf = 0;
              _os_log_impl(&dword_233120000, v22, OS_LOG_TYPE_DEFAULT, "An entity may only have a single audio component at a time. The previous audio component is being removed.", buf, 2u);
            }
            re::ecs2::EntityComponentCollection::remove(v9, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ChannelAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
            re::ecs2::EntityComponentCollection::remove(v9, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AmbientAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
            goto LABEL_18;
          }
LABEL_10:
          int16x8_t v18 = (const __int16 *)((char *)re::ecs2::ComponentImpl<re::ecs2::AmbientAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                + 16);
          int16x8_t v19 = vld1q_dup_s16(v18);
          int v20 = 1;
          while (1)
          {
            uint16x8_t v21 = (uint16x8_t)vandq_s8((int8x16_t)vceqq_s16(v19, *v12), v6);
            v21.i16[0] = vmaxvq_u16(v21);
            if (v21.i32[0]) {
              break;
            }
            v20 -= 8;
            ++v12;
            if (!--v10) {
              goto LABEL_18;
            }
          }
          if (v21.u16[0] - v20 < *(unsigned __int16 *)(v8 + 80)) {
            goto LABEL_15;
          }
        }
LABEL_18:
        a1 = re::ecs2::EntityComponentCollection::getOrAdd(v9, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioPlayerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
        int8x16_t v6 = (int8x16_t)xmmword_23436BBD0;
        *(void *)(a1 + 276) = *(void *)(v7 + 28);
        *(_DWORD *)(a1 + 284) = *(_DWORD *)(v7 + 36);
      }
      ++v4;
    }
    while (v4 != v5);
  }
  return 0;
}

uint64_t re::ecs2::AudioPlayerSystem::willRemoveComponents(uint64_t a1, uint64_t a2, atomic_uint **a3, uint64_t a4)
{
  uint64_t v67 = *MEMORY[0x263EF8340];
  unint64_t v7 = *(void *)(a2 + 120);
  uint64_t v8 = (*(uint64_t (**)(void))(**(void **)(a1 + 40) + 32))(*(void *)(a1 + 40));
  uint64_t v9 = (re::ecs2::AudioPlayerTelemetryReporter *)re::ServiceLocator::serviceOrNull<re::SharedClockService>(v8);
  unint64_t v58 = v9;
  if (a4)
  {
    unsigned int v56 = &a3[a4];
    unint64_t v10 = 0x94D049BB133111EBLL
        * ((0xBF58476D1CE4E5B9 * (v7 ^ (v7 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (v7 ^ (v7 >> 30))) >> 27));
    uint64_t v59 = (unint64_t *)(a1 + 112);
    unint64_t v60 = v10 ^ (v10 >> 31);
    unint64_t v57 = v7;
    while (1)
    {
      uint64_t v11 = *a3;
      uint64_t Instance = re::ecs2::AudioPlayerTelemetryReporter::getInstance(v9);
      unsigned int v13 = atomic_exchange(v11 + 78, 0);
      unsigned int v14 = atomic_exchange(v11 + 79, 0);
      *(void *)block = MEMORY[0x263EF8330];
      *(void *)&block[8] = 3221225472;
      *(void *)&block[16] = ___ZN2re4ecs228AudioPlayerTelemetryReporter11updateCountEjj_block_invoke;
      double v64 = &__block_descriptor_48_e5_v8__0l;
      *(void *)unint64_t v65 = Instance;
      *(_DWORD *)&v65[8] = v13;
      unsigned int v66 = v14;
      dispatch_async((dispatch_queue_t)re::ecs2::AudioPlayerTelemetryReporter::m_playerQueue, block);
      uint64_t v62 = v11;
      if (*((void *)v11 + 18))
      {
        uint64_t v16 = (id)*re::audioLogObjects(v15);
        if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
        {
          uint16x8_t v17 = v11;
          uint64_t v18 = *((void *)v11 + 38);
          if (!v18) {
            uint64_t v18 = *((void *)v17 + 44);
          }
          uint64_t v19 = *((void *)v17 + 2);
          if (v19)
          {
            uint64_t v20 = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(v19 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioTransientComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType);
            if (v20) {
              uint64_t v19 = *(void *)(v20 + 32);
            }
            else {
              uint64_t v19 = 0;
            }
          }
          uint64_t v21 = *((void *)v62 + 18);
          *(_DWORD *)block = 134218752;
          *(void *)&block[4] = v18;
          uint64_t v11 = v62;
          *(_WORD *)&block[12] = 2048;
          *(void *)&block[14] = v62;
          *(_WORD *)&block[22] = 2048;
          double v64 = (void *)v19;
          *(_WORD *)unint64_t v65 = 2048;
          *(void *)&v65[2] = v21;
          _os_log_impl(&dword_233120000, v16, OS_LOG_TYPE_DEFAULT, "Removing AudioPlayerComponent (entityID=%llu) %p (connection=%llu) with %zu source states", block, 0x2Au);
        }
      }
      unint64_t v22 = *v59;
      uint64_t v61 = a3;
      if (!*v59
        || (unint64_t v22 = v60 % *(unsigned int *)(a1 + 136),
            uint64_t v23 = *(unsigned int *)(*(void *)(a1 + 120) + 4 * v22),
            v23 == 0x7FFFFFFF))
      {
LABEL_18:
        uint64_t v25 = *(unsigned int *)(a1 + 148);
        if (v25 == 0x7FFFFFFF)
        {
          uint64_t v25 = *(unsigned int *)(a1 + 144);
          int v26 = v25;
          if (v25 == *(_DWORD *)(a1 + 136))
          {
            re::HashTable<re::ecs2::Scene const*,re::HashTable<unsigned long long,re::SharedPtr<re::AudioSourceState>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,true,false>::setCapacity((uint64_t)v59, 2 * *(_DWORD *)(a1 + 140));
            unint64_t v22 = v60 % *(unsigned int *)(a1 + 136);
            int v26 = *(_DWORD *)(a1 + 144);
          }
          *(_DWORD *)(a1 + 144) = v26 + 1;
          uint64_t v27 = *(void *)(a1 + 128);
          int v28 = *(_DWORD *)(v27 + 72 * v25 + 8);
        }
        else
        {
          uint64_t v27 = *(void *)(a1 + 128);
          int v28 = *(_DWORD *)(v27 + 72 * v25 + 8);
          *(_DWORD *)(a1 + 148) = v28 & 0x7FFFFFFF;
        }
        *(_DWORD *)(v27 + 72 * v25 + 8) = v28 | 0x80000000;
        *(_DWORD *)(*(void *)(a1 + 128) + 72 * v25 + 8) = *(_DWORD *)(*(void *)(a1 + 128) + 72 * v25 + 8) & 0x80000000 | *(_DWORD *)(*(void *)(a1 + 120) + 4 * v22);
        *(void *)(*(void *)(a1 + 128) + 72 * v2re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = v60;
        *(void *)(*(void *)(a1 + 128) + 72 * v25 + 16) = v7;
        uint64_t v29 = *(void *)(a1 + 128) + 72 * v25;
        *(_OWORD *)(v29 + 56) = 0u;
        *(_OWORD *)(v29 + 40) = 0u;
        *(_OWORD *)(v29 + 24) = 0u;
        *(_DWORD *)(v29 + 60) = 0x7FFFFFFF;
        *(_DWORD *)(*(void *)(a1 + 120) + 4 * v22) = v25;
        ++*(_DWORD *)(a1 + 140);
        ++*(_DWORD *)(a1 + 152);
        uint64_t v30 = *(void *)(a1 + 128) + 72 * v25 + 24;
        uint64_t v11 = v62;
      }
      else
      {
        uint64_t v24 = *(void *)(a1 + 128);
        while (*(void *)(v24 + 72 * v23 + 16) != v7)
        {
          LODWORD(vre::HashSetBase<re::AssetHandle,re::AssetHandle,re::internal::ValueAsKey<re::AssetHandle>,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 23) = *(_DWORD *)(v24 + 72 * v23 + 8) & 0x7FFFFFFF;
          if (v23 == 0x7FFFFFFF) {
            goto LABEL_18;
          }
        }
        uint64_t v30 = v24 + 72 * v23 + 24;
      }
      uint64_t v31 = *((void *)v11 + 18);
      if (v31) {
        break;
      }
LABEL_54:
      if (v58) {
        (*(void (**)(re::ecs2::AudioPlayerTelemetryReporter *))(*(void *)v58 + 40))(v58);
      }
      unint64_t v54 = (void *)*((void *)v62 + 36);
      *((void *)v62 + 36) = 0;

      a3 = v61 + 1;
      unint64_t v7 = v57;
      if (v61 + 1 == v56) {
        return 0;
      }
    }
    unint64_t v32 = (uint64_t *)*((void *)v62 + 20);
    __int16 v33 = &v32[v31];
    while (1)
    {
      uint64_t v34 = *v32;
      if (*v32) {
        uint64_t v15 = (re *)(id)(v34 + 8);
      }
      unint64_t v35 = *(void *)(v34 + 680);
      unint64_t v36 = 0x94D049BB133111EBLL
          * ((0xBF58476D1CE4E5B9 * (v35 ^ (v35 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (v35 ^ (v35 >> 30))) >> 27));
      unint64_t v37 = v36 ^ (v36 >> 31);
      if (!*(void *)v30) {
        break;
      }
      unint64_t v38 = v37 % *(unsigned int *)(v30 + 24);
      uint64_t v39 = *(unsigned int *)(*(void *)(v30 + 8) + 4 * v38);
      if (v39 == 0x7FFFFFFF) {
        goto LABEL_36;
      }
      uint64_t v40 = *(void *)(v30 + 16);
      while (*(void *)(v40 + 32 * v39 + 16) != v35)
      {
        int v41 = *(_DWORD *)(v40 + 32 * v39 + 8);
        uint64_t v39 = v41 & 0x7FFFFFFF;
        if ((v41 & 0x7FFFFFFF) == 0x7FFFFFFF) {
          goto LABEL_36;
        }
      }
      uint64_t v50 = v40 + 32 * v39;
      uint64_t v53 = *(void *)(v50 + 24);
      unint64_t v52 = (void *)(v50 + 24);
      uint64_t v51 = v53;
      if (v53)
      {

        *unint64_t v52 = 0;
        uint64_t v40 = *(void *)(v30 + 16);
      }
      *(void *)(v40 + 32 * v39 + 24) = v34;
      if (v34) {
        uint64_t v15 = (re *)(id)(v34 + 8);
      }
LABEL_44:
      ++*(_DWORD *)(v30 + 40);
      uint64_t v47 = *re::audioLogObjects(v15);
      uint64_t v15 = (re *)os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT);
      if (v15)
      {
        uint64_t v48 = v47;
        uint64_t v49 = *(void *)(v34 + 680);
        *(_DWORD *)block = 134217984;
        *(void *)&block[4] = v49;
        _os_log_impl(&dword_233120000, v48, OS_LOG_TYPE_DEFAULT, "[RE/ECS] [Update] Added stale source state with token: %llu", block, 0xCu);

LABEL_47:
        goto LABEL_48;
      }
      if (v34) {
        goto LABEL_47;
      }
LABEL_48:
      if (++v32 == v33) {
        goto LABEL_54;
      }
    }
    unint64_t v38 = 0;
LABEL_36:
    uint64_t v42 = *(unsigned int *)(v30 + 36);
    if (v42 == 0x7FFFFFFF)
    {
      uint64_t v42 = *(unsigned int *)(v30 + 32);
      int v43 = v42;
      if (v42 == *(_DWORD *)(v30 + 24))
      {
        re::HashTable<unsigned long long,re::SharedPtr<re::SharedObject>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::setCapacity(v30, 2 * *(_DWORD *)(v30 + 28));
        unint64_t v38 = v37 % *(unsigned int *)(v30 + 24);
        int v43 = *(_DWORD *)(v30 + 32);
      }
      *(_DWORD *)(v30 + 32) = v43 + 1;
      uint64_t v44 = *(void *)(v30 + 16);
      int v45 = *(_DWORD *)(v44 + 32 * v42 + 8);
    }
    else
    {
      uint64_t v44 = *(void *)(v30 + 16);
      int v45 = *(_DWORD *)(v44 + 32 * v42 + 8);
      *(_DWORD *)(v30 + 36) = v45 & 0x7FFFFFFF;
    }
    *(_DWORD *)(v44 + 32 * v42 + 8) = v45 | 0x80000000;
    uint64_t v46 = *(void *)(v30 + 8);
    *(_DWORD *)(*(void *)(v30 + 16) + 32 * v42 + 8) = *(_DWORD *)(*(void *)(v30 + 16) + 32 * v42 + 8) & 0x80000000 | *(_DWORD *)(v46 + 4 * v38);
    *(void *)(*(void *)(v30 + 16) + 32 * v42) = v37;
    *(void *)(*(void *)(v30 + 16) + 32 * v42 + 16) = v35;
    *(void *)(*(void *)(v30 + 16) + 32 * v42 + 24) = v34;
    if (v34)
    {
      uint64_t v15 = (re *)(id)(v34 + 8);
      uint64_t v46 = *(void *)(v30 + 8);
    }
    *(_DWORD *)(v46 + 4 * v38) = v42;
    ++*(_DWORD *)(v30 + 28);
    goto LABEL_44;
  }
  return 0;
}

uint64_t re::ecs2::AudioPlayerSystem::update(uint64_t result, unint64_t a2, uint64_t a3)
{
  uint64_t v418 = *MEMORY[0x263EF8340];
  if (a2)
  {
    uint64_t v3 = result;
    if (*(void *)(result + 160))
    {
      int8x16_t v6 = re::ProfilerTimeGuard<(re::ProfilerStatistic)20>::ProfilerTimeGuard(v393);
      isStatisticCollectionEnabled = (re *)re::ProfilerConfig::isStatisticCollectionEnabled((re::ProfilerConfig *)v6);
      if (isStatisticCollectionEnabled)
      {
        uint64_t v8 = re::profilerThreadContext(isStatisticCollectionEnabled);
        uint64_t v9 = re::ecs2::SceneComponentTable::get((re::ecs2::SceneComponentTable *)(a2 + 200), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioPlayerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
        unint64_t v10 = v9 ? *(void *)(v9 + 24) : 0;
        uint64_t v11 = *(int64x2_t **)(v8 + 152);
        if (v11)
        {
          unint64_t v12 = v11[576].u64[0];
          if (v12 >= v10) {
            unint64_t v12 = v10;
          }
          v11[576].i64[0] = v12;
          unint64_t v13 = v11[576].u64[1];
          if (v13 <= v10) {
            unint64_t v13 = v10;
          }
          v11[576].i64[1] = v13;
          int64x2_t v14 = vdupq_n_s64(1uLL);
          v14.i64[0] = v10;
          v11[577] = vaddq_s64(v11[577], v14);
          *(unsigned char *)(v8 + 184) = 0;
        }
      }
      re::ecs2::SceneComponentTable::get((re::ecs2::SceneComponentTable *)(a2 + 200), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioPlayerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
      re::internal::AriadneSignpostScopeGuard::AriadneSignpostScopeGuard((re::internal::AriadneSignpostScopeGuard *)v392, 3059, v3);
      uint64_t v15 = (re *)(*(uint64_t (**)(void, unint64_t))(**(void **)(v3 + 160) + 16))(*(void *)(v3 + 160), a2);
      if (v15)
      {
        uint64_t v16 = v15;
        *(void *)CMTime buf = a2;
        *(void *)&buf[8] = v3;
        uint64_t v409 = re::globalAllocators(v15)[2];
        v408[0] = &unk_26E6F7A90;
        v408[1] = buf;
        v410 = v408;
        (*(void (**)(re *, void *))(*(void *)v16 + 800))(v16, v408);
        if (v410)
        {
          (*(void (**)(void *))*v410)(v410);
          if (v410 != v408) {
            (*(void (**)(uint64_t))(*(void *)v409 + 40))(v409);
          }
          v410 = 0;
        }
      }
      if ((a3 & 0x100000000) != 0)
      {
        uint64_t v95 = *(void *)(*(void *)(a2 + 240)
                        + 8
                        * *((unsigned __int16 *)re::ecs2::ComponentImpl<re::ecs2::AudioPlayerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                          + 8));
        uint64_t v96 = *(void *)(v95 + 24);
        if (v96)
        {
          uint64_t v97 = *(uint64_t **)(v95 + 40);
          long long v98 = &v97[v96];
          do
          {
            uint64_t v99 = *v97;
            int canModifyState = (re *)re::ecs2::AudioPlayerComponent::canModifyState(*(re::ecs2::AudioPlayerComponent **)(*v97 + 16));
            if ((canModifyState & 1) == 0)
            {
              float v101 = *re::audioLogObjects(canModifyState);
              if (os_log_type_enabled(v101, OS_LOG_TYPE_ERROR))
              {
                float v113 = v101;
                uint64_t v114 = *(void *)(v99 + 16);
                if (!v114) {
                  goto LABEL_137;
                }
                uint64_t v115 = *(void *)(v99 + 16);
                do
                {
                  uint64_t v116 = v115;
                  uint64_t v115 = *(void *)(v115 + 24);
                }
                while (v115);
                if (*(void *)(v116 + 16))
                {
                  do
                  {
                    uint64_t v118 = v114;
                    uint64_t v114 = *(void *)(v114 + 24);
                  }
                  while (v114);
                  uint64_t v117 = *(void *)(*(void *)(*(void *)(v118 + 16) + 104) + 272) >> 1;
                }
                else
                {
LABEL_137:
                  uint64_t v117 = -1;
                }
                *(_DWORD *)CMTime buf = 134217984;
                *(void *)&uint8_t buf[4] = v117;
                _os_log_error_impl(&dword_233120000, v113, OS_LOG_TYPE_ERROR, "AudioPlayerComponent::doSuspendAll cannot modify state. Scene ID: %llu", buf, 0xCu);
              }
            }
            uint64_t v102 = *(unsigned int *)(v99 + 112);
            if (v102)
            {
              uint64_t v103 = 0;
              float32x4_t v104 = (int *)(*(void *)(v99 + 96) + 8);
              while (1)
              {
                int v105 = *v104;
                v104 += 8;
                if (v105 < 0) {
                  break;
                }
                if (v102 == ++v103)
                {
                  LODWORD(v103) = *(_DWORD *)(v99 + 112);
                  break;
                }
              }
            }
            else
            {
              LODWORD(v103) = 0;
            }
            if (v102 != v103)
            {
              uint64_t v106 = v103;
              do
              {
                uint64_t v107 = *(void *)(v99 + 96) + 32 * v106;
                uint64_t v108 = *(void *)(v107 + 16);
                float32x4_t v109 = *(re::AudioSourceState **)(v107 + 24);
                float32x4_t v110 = (unint64_t *)(v107 + 16);
                if (re::ecs2::AudioPlayerComponent::doPause((re::ecs2::AudioPlayerComponent *)v99, v108, v109, 0))re::ecs2::AudioPlayerComponent::play(v99, *v110, 0); {
                if (*(_DWORD *)(v99 + 112) <= (v103 + 1))
                }
                  int v111 = v103 + 1;
                else {
                  int v111 = *(_DWORD *)(v99 + 112);
                }
                while (1)
                {
                  uint64_t v106 = (v103 + 1);
                  if (v111 - 1 == v103) {
                    break;
                  }
                  LODWORD(v103) = v103 + 1;
                  int v112 = v106;
                  if ((*(_DWORD *)(*(void *)(v99 + 96) + 32 * v106 + 8) & 0x80000000) != 0) {
                    goto LABEL_130;
                  }
                }
                int v112 = v111;
LABEL_130:
                LODWORD(v103) = v112;
              }
              while (v102 != v112);
            }
            ++v97;
          }
          while (v97 != v98);
        }
      }
      else
      {
        uint64_t v381 = v3;
        float v382 = *(float *)&a3;
        uint64_t v17 = *(void *)(a2 + 240);
        uint64_t v18 = *(void *)(v17
                        + 8
                        * *((unsigned __int16 *)re::ecs2::ComponentImpl<re::ecs2::SpatialAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                          + 8));
        uint64_t v19 = *(void *)(v18 + 24);
        if (v19)
        {
          uint64_t v20 = *(uint64_t **)(v18 + 40);
          uint64_t v21 = 8 * v19;
          do
          {
            uint64_t v22 = *v20;
            uint64_t v23 = *(void *)(*v20 + 16);
            if (v23)
            {
              uint64_t v24 = re::ecs2::EntityComponentCollection::getOrAdd((re::ecs2::EntityComponentCollection *)(v23 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioPlayerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
              uint64_t v25 = v24;
              float v26 = *(float *)(v22 + 32);
              if (*(float *)(v24 + 280) != v26) {
                *(float *)(v24 + 280) = v26;
              }
              float v27 = *(float *)(v22 + 28);
              if (*(float *)(v24 + 276) != v27) {
                *(float *)(v24 + 276) = v27;
              }
              float v28 = *(float *)(v22 + 36);
              if (*(float *)(v24 + 284) != v28) {
                *(float *)(v24 + 284) = v28;
              }
              uint64_t v29 = *(void *)(v22 + 40);
              uint64_t v30 = *(void *)(v22 + 48);
              if (*(_DWORD *)(v24 + 208) != v29
                || *(float *)(v24 + 212) != *((float *)&v29 + 1)
                || *(float *)(v24 + 216) != *(float *)&v30
                || *(float *)(v24 + 220) != *((float *)&v30 + 1))
              {
                *(void *)(v24 + 208) = v29;
                *(void *)(v24 + 216) = v30;
              }
              float v31 = __exp10f(*(float *)(v22 + 56) / 20.0);
              if (*(float *)(v25 + 228) != v31)
              {
                re::ecs2::AudioPlayerComponent::setComponentFade((re::ecs2::AudioPlayerComponent **)v25, v31, 0.0);
                *(_DWORD *)(v25 + 272) = *(_DWORD *)(v22 + 56);
              }
            }
            ++v20;
            v21 -= 8;
          }
          while (v21);
          uint64_t v17 = *(void *)(a2 + 240);
        }
        uint64_t v32 = *(void *)(v17
                        + 8
                        * *((unsigned __int16 *)re::ecs2::ComponentImpl<re::ecs2::ChannelAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                          + 8));
        uint64_t v33 = *(void *)(v32 + 24);
        if (v33)
        {
          uint64_t v34 = *(uint64_t **)(v32 + 40);
          uint64_t v35 = 8 * v33;
          do
          {
            uint64_t v36 = *v34;
            uint64_t v37 = *(void *)(*v34 + 16);
            if (v37)
            {
              uint64_t v38 = re::ecs2::EntityComponentCollection::getOrAdd((re::ecs2::EntityComponentCollection *)(v37 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioPlayerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
              float v39 = __exp10f(*(float *)(v36 + 28) / 20.0);
              if (*(float *)(v38 + 228) != v39)
              {
                re::ecs2::AudioPlayerComponent::setComponentFade((re::ecs2::AudioPlayerComponent **)v38, v39, 0.0);
                *(_DWORD *)(v38 + 272) = *(_DWORD *)(v36 + 28);
              }
            }
            ++v34;
            v35 -= 8;
          }
          while (v35);
          uint64_t v17 = *(void *)(a2 + 240);
        }
        uint64_t v40 = *(void *)(v17
                        + 8
                        * *((unsigned __int16 *)re::ecs2::ComponentImpl<re::ecs2::AmbientAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                          + 8));
        uint64_t v41 = *(void *)(v40 + 24);
        if (v41)
        {
          uint64_t v42 = *(uint64_t **)(v40 + 40);
          uint64_t v43 = 8 * v41;
          do
          {
            uint64_t v44 = *v42;
            uint64_t v45 = *(void *)(*v42 + 16);
            if (v45)
            {
              uint64_t v46 = re::ecs2::EntityComponentCollection::getOrAdd((re::ecs2::EntityComponentCollection *)(v45 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioPlayerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
              float v47 = __exp10f(*(float *)(v44 + 28) / 20.0);
              if (*(float *)(v46 + 228) != v47)
              {
                re::ecs2::AudioPlayerComponent::setComponentFade((re::ecs2::AudioPlayerComponent **)v46, v47, 0.0);
                *(_DWORD *)(v46 + 272) = *(_DWORD *)(v44 + 28);
              }
            }
            ++v42;
            v43 -= 8;
          }
          while (v43);
          uint64_t v17 = *(void *)(a2 + 240);
        }
        unint64_t v368 = a2;
        uint64_t v48 = *(void *)(v17
                        + 8
                        * *((unsigned __int16 *)re::ecs2::ComponentImpl<re::ecs2::AudioPlayerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                          + 8));
        uint64_t v49 = *(void *)(v48 + 24);
        if (v49)
        {
          uint64_t v50 = *(uint64_t **)(v48 + 40);
          uint64_t v51 = 8 * v49;
          do
          {
            uint64_t v52 = *v50;
            float v53 = __exp10f(*(float *)(*v50 + 272) / 20.0);
            if (*(float *)(v52 + 228) != v53) {
              re::ecs2::AudioPlayerComponent::setComponentFade((re::ecs2::AudioPlayerComponent **)v52, v53, 0.0);
            }
            uint64_t v54 = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(*(void *)(v52 + 16) + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::SpatialAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
            uint64_t v55 = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(*(void *)(v52 + 16) + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AmbientAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
            uint64_t v56 = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(*(void *)(v52 + 16) + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ChannelAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
            if (!v54 || (float v57 = *(float *)(v52 + 272), *(float *)(v54 + 56) == v57))
            {
              if (!v55 || (float v58 = *(float *)(v52 + 272), *(float *)(v55 + 28) == v58))
              {
                if (v56)
                {
                  float v59 = *(float *)(v52 + 272);
                  if (*(float *)(v56 + 28) != v59) {
                    *(float *)(v56 + 28) = v59;
                  }
                }
              }
              else
              {
                *(float *)(v55 + 28) = v58;
              }
            }
            else
            {
              *(float *)(v54 + 56) = v57;
            }
            ++v50;
            v51 -= 8;
          }
          while (v51);
        }
        v379 = (void *)(v381 + 112);
        uint64_t v60 = re::HashTable<re::ecs2::Scene const*,re::HashTable<unsigned long long,re::SharedPtr<re::AudioSourceState>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,true,false>::tryGet(v381 + 112, v368);
        if (v60)
        {
          unint64_t v61 = *((unsigned __int16 *)re::ecs2::ComponentImpl<re::ecs2::AudioPlayerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                + 8);
          if (*(void *)(v368 + 224) > v61)
          {
            uint64_t v62 = *(void *)(*(void *)(v368 + 240) + 8 * v61);
            if (v62)
            {
              uint64_t v63 = *(void *)(v62 + 24);
              if (v63)
              {
                uint64_t v64 = v60;
                unint64_t v65 = *(uint64_t **)(v62 + 40);
                v385 = &v65[v63];
                while (1)
                {
                  uint64_t v66 = *v65;
                  uint64_t v67 = *(unsigned int *)(*v65 + 64);
                  if (v67)
                  {
                    uint64_t v68 = 0;
                    uint64_t v69 = (_DWORD *)(*(void *)(v66 + 48) + 8);
                    while ((*v69 & 0x80000000) == 0)
                    {
                      v69 += 72;
                      if (v67 == ++v68)
                      {
                        LODWORD(v68) = *(_DWORD *)(*v65 + 64);
                        break;
                      }
                    }
                  }
                  else
                  {
                    LODWORD(v68) = 0;
                  }
                  if (v67 != v68) {
                    break;
                  }
LABEL_102:
                  if (++v65 == v385) {
                    goto LABEL_103;
                  }
                }
                uint64_t v70 = v68;
                while (1)
                {
                  unint64_t v71 = *(void *)(*(void *)(v66 + 48) + 288 * v70 + 16);
                  *(void *)CMTime immediateSourceTime = v71;
                  if (!*(void *)v64) {
                    goto LABEL_94;
                  }
                  unint64_t v72 = 0x94D049BB133111EBLL
                      * ((0xBF58476D1CE4E5B9 * (v71 ^ (v71 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (v71 ^ (v71 >> 30))) >> 27));
                  unint64_t v73 = v72 ^ (v72 >> 31);
                  uint64_t v74 = *(unsigned int *)(*(void *)(v64 + 8) + 4 * (v73 % *(unsigned int *)(v64 + 24)));
                  if (v74 == 0x7FFFFFFF) {
                    goto LABEL_94;
                  }
                  uint64_t v75 = *(void *)(v64 + 16);
                  while (*(void *)(v75 + 32 * v74 + 16) != v71)
                  {
                    uint64_t v74 = *(_DWORD *)(v75 + 32 * v74 + 8) & 0x7FFFFFFF;
                    if (v74 == 0x7FFFFFFF) {
                      goto LABEL_94;
                    }
                  }
                  uint64_t v76 = (uint64_t *)(v75 + 32 * v74);
                  uint64_t v77 = v76[3];
                  v76 += 3;
                  *(void *)(v77 + 480) = v66;
                  re::DynamicArray<re::SharedPtr<re::AssetLoadRequest>>::add((_anonymous_namespace_ *)(v66 + 128), v76);
                  *(void *)CMTime buf = *v76;
                  if (*(void *)(v66 + 80))
                  {
                    unint64_t v78 = v73 % *(unsigned int *)(v66 + 104);
                    uint64_t v79 = *(unsigned int *)(*(void *)(v66 + 88) + 4 * v78);
                    if (v79 != 0x7FFFFFFF)
                    {
                      uint64_t v80 = *(void *)(v66 + 96);
                      while (*(void *)(v80 + 32 * v79 + 16) != v71)
                      {
                        uint64_t v79 = *(_DWORD *)(v80 + 32 * v79 + 8) & 0x7FFFFFFF;
                        if (v79 == 0x7FFFFFFF) {
                          goto LABEL_91;
                        }
                      }
                      goto LABEL_92;
                    }
                  }
                  else
                  {
                    LODWORD(v78) = 0;
                  }
LABEL_91:
                  re::HashTable<unsigned long long,re::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addAsMove(v66 + 80, v78, v73, immediateSourceTime, buf);
                  ++*(_DWORD *)(v66 + 120);
LABEL_92:
                  re::HashTable<unsigned long long,re::SharedPtr<re::AudioSourceState>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::remove(v64, v71);
                  int v82 = *re::audioLogObjects(v81);
                  if (os_log_type_enabled(v82, OS_LOG_TYPE_DEFAULT))
                  {
                    *(_DWORD *)CMTime buf = 134217984;
                    *(void *)&uint8_t buf[4] = v71;
                    _os_log_impl(&dword_233120000, v82, OS_LOG_TYPE_DEFAULT, "[RE/ECS] [Update] Stale source state with token: %llu matched to syncState", buf, 0xCu);
                  }
LABEL_94:
                  if (*(_DWORD *)(v66 + 64) <= (v68 + 1)) {
                    int v83 = v68 + 1;
                  }
                  else {
                    int v83 = *(_DWORD *)(v66 + 64);
                  }
                  while (1)
                  {
                    uint64_t v70 = (v68 + 1);
                    if (v83 - 1 == v68) {
                      break;
                    }
                    LODWORD(v68) = v68 + 1;
                    int v84 = v70;
                    if ((*(_DWORD *)(*(void *)(v66 + 48) + 288 * v70 + 8) & 0x80000000) != 0) {
                      goto LABEL_101;
                    }
                  }
                  int v84 = v83;
LABEL_101:
                  LODWORD(v68) = v84;
                  if (v67 == v84) {
                    goto LABEL_102;
                  }
                }
              }
            }
          }
        }
LABEL_103:
        unint64_t v85 = v368;
        uint64_t OwnerPeerID = re::HashTable<re::ecs2::Scene const*,re::HashTable<unsigned long long,re::SharedPtr<re::AudioSourceState>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,true,false>::tryGet((uint64_t)v379, v368);
        __int16 v88 = &qword_268772000;
        float v89 = v382;
        if (OwnerPeerID)
        {
          uint64_t v90 = OwnerPeerID;
          uint64_t v91 = *(unsigned int *)(OwnerPeerID + 32);
          if (v91)
          {
            uint64_t v92 = 0;
            int v93 = (int *)(*(void *)(OwnerPeerID + 16) + 8);
            while (1)
            {
              int v94 = *v93;
              v93 += 8;
              if (v94 < 0) {
                break;
              }
              if (v91 == ++v92)
              {
                LODWORD(v92) = *(_DWORD *)(OwnerPeerID + 32);
                break;
              }
            }
          }
          else
          {
            LODWORD(v92) = 0;
          }
          if (v91 != v92)
          {
            uint64_t v119 = v92;
            do
            {
              uint64_t v120 = *(void *)(v90 + 16) + 32 * v119;
              uint64_t v121 = *(void *)(v120 + 24);
              uint64_t v122 = *(void *)(v381 + 160);
              *(void *)(v121 + 448) = -1;
              uint64_t v123 = *(void *)(*(uint64_t (**)(uint64_t, unint64_t))(*(void *)v122 + 16))(v122, v85);
              int32x4_t v124 = (re *)(*(uint64_t (**)(void))(v123 + 280))();
              *(unsigned char *)(v121 + 478) = 0;
              if (!*(unsigned char *)(v121 + 720))
              {
                *(void *)(v121 + 56) = 0;
                float32x2_t v125 = *(OpaqueCMTimebase **)(v121 + 696);
                BOOL v126 = !v125 || *(void *)(v121 + 480) == 0;
                if (!v126)
                {
                  CMClockOrTimebaseRef v127 = CMTimebaseCopySource(*(CMTimebaseRef *)(v121 + 696));
                  *(_OWORD *)CMTime buf = *MEMORY[0x263F010E0];
                  *(void *)&long long v415 = *(void *)(MEMORY[0x263F010E0] + 16);
                  CMSyncGetTime((CMTime *)immediateSourceTime, v127);
                  CMTimebaseSetRateAndAnchorTime(v125, 0.0, (CMTime *)buf, (CMTime *)immediateSourceTime);
                  float v128 = v127;
                  unint64_t v85 = v368;
                  CFRelease(v128);
                }
              }
              float32x4_t v129 = *(uint64_t (**)(void))(v121 + 688);
              if (v129) {
                int32x4_t v124 = (re *)v129(*(void *)(v121 + 680));
              }
              float v130 = *re::audioLogObjects(v124);
              uint64_t OwnerPeerID = os_log_type_enabled(v130, OS_LOG_TYPE_DEFAULT);
              if (OwnerPeerID)
              {
                uint64_t v131 = *(void *)(v120 + 16);
                *(_DWORD *)CMTime buf = 134217984;
                *(void *)&uint8_t buf[4] = v131;
                _os_log_impl(&dword_233120000, v130, OS_LOG_TYPE_DEFAULT, "[RE/ECS] [Update] stopSourceState() stopping stale token: %llu", buf, 0xCu);
              }
              if (*(_DWORD *)(v90 + 32) <= (v92 + 1)) {
                int v132 = v92 + 1;
              }
              else {
                int v132 = *(_DWORD *)(v90 + 32);
              }
              __int16 v88 = &qword_268772000;
              while (1)
              {
                uint64_t v119 = (v92 + 1);
                if (v132 - 1 == v92) {
                  break;
                }
                LODWORD(v92) = v92 + 1;
                int v133 = v119;
                if ((*(_DWORD *)(*(void *)(v90 + 16) + 32 * v119 + 8) & 0x80000000) != 0) {
                  goto LABEL_162;
                }
              }
              int v133 = v132;
LABEL_162:
              LODWORD(v92) = v133;
            }
            while (v91 != v133);
          }
          float v89 = v382;
          if (*v379)
          {
            unint64_t v134 = 0x94D049BB133111EBLL
                 * ((0xBF58476D1CE4E5B9 * (v85 ^ (v85 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (v85 ^ (v85 >> 30))) >> 27));
            unint64_t v135 = (v134 ^ (v134 >> 31)) % *(unsigned int *)(v381 + 136);
            uint64_t v136 = *(void *)(v381 + 120);
            uint64_t v137 = *(unsigned int *)(v136 + 4 * v135);
            if (v137 != 0x7FFFFFFF)
            {
              uint64_t v138 = *(void *)(v381 + 128);
              if (*(void *)(v138 + 72 * v137 + 16) == v85)
              {
                *(_DWORD *)(v136 + 4 * v13re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = *(_DWORD *)(v138 + 72 * v137 + 8) & 0x7FFFFFFF;
LABEL_170:
                uint64_t v141 = *(void *)(v381 + 128);
                uint64_t v142 = v141 + 72 * v137;
                int v145 = *(_DWORD *)(v142 + 8);
                float v144 = (int *)(v142 + 8);
                int v143 = v145;
                if (v145 < 0)
                {
                  *float v144 = v143 & 0x7FFFFFFF;
                  re::HashTable<unsigned long long,re::SharedPtr<re::RealityFile>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::deinit((uint64_t *)(v141 + 72 * v137 + 24));
                  uint64_t v141 = *(void *)(v381 + 128);
                  int v143 = *(_DWORD *)(v141 + 72 * v137 + 8);
                }
                *(_DWORD *)(v141 + 72 * v137 + 8) = *(_DWORD *)(v381 + 148) | v143 & 0x80000000;
                --*(_DWORD *)(v381 + 140);
                int v146 = *(_DWORD *)(v381 + 152) + 1;
                *(_DWORD *)(v381 + 148) = v137;
                *(_DWORD *)(v381 + 152) = v146;
              }
              else
              {
                while (1)
                {
                  unsigned int v139 = v137;
                  int v140 = *(_DWORD *)(v138 + 72 * v137 + 8);
                  uint64_t v137 = v140 & 0x7FFFFFFF;
                  if ((v140 & 0x7FFFFFFF) == 0x7FFFFFFF) {
                    break;
                  }
                  if (*(void *)(v138 + 72 * v137 + 16) == v85)
                  {
                    *(_DWORD *)(v138 + 72 * v139 + 8) = *(_DWORD *)(v138 + 72 * v139 + 8) & 0x80000000 | *(_DWORD *)(v138 + 72 * v137 + 8) & 0x7FFFFFFF;
                    goto LABEL_170;
                  }
                }
              }
            }
          }
        }
        uint64_t v147 = *(void *)(*(void *)(v85 + 240) + 8 * *(unsigned __int16 *)(v88[243] + 16));
        uint64_t v148 = *(void *)(v147 + 24);
        if (v148)
        {
          float v149 = v89;
          float v150 = *(uint64_t **)(v147 + 40);
          float v151 = &v150[v148];
          do
          {
            uint64_t v152 = *v150;
            uint64_t v153 = *(unsigned int *)(*v150 + 112);
            if (v153)
            {
              uint64_t v154 = 0;
              uint64_t v155 = (int *)(*(void *)(v152 + 96) + 8);
              while (1)
              {
                int v156 = *v155;
                v155 += 8;
                if (v156 < 0) {
                  break;
                }
                if (v153 == ++v154)
                {
                  LODWORD(v154) = *(_DWORD *)(*v150 + 112);
                  break;
                }
              }
            }
            else
            {
              LODWORD(v154) = 0;
            }
            if (v153 != v154)
            {
              uint64_t v157 = v154;
              do
              {
                re::AudioSourceState::callPendingCallbacks(*(re::AudioSourceState **)(*(void *)(v152 + 96)
                                                                                    + 32 * v157
                                                                                    + 24));
                if (*(_DWORD *)(v152 + 112) <= (v154 + 1)) {
                  int v158 = v154 + 1;
                }
                else {
                  int v158 = *(_DWORD *)(v152 + 112);
                }
                int v159 = v154;
                while (1)
                {
                  uint64_t v157 = (v159 + 1);
                  if (v158 - 1 == v159) {
                    break;
                  }
                  ++v159;
                  LODWORD(v154) = v157;
                  if ((*(_DWORD *)(*(void *)(v152 + 96) + 32 * v157 + 8) & 0x80000000) != 0) {
                    goto LABEL_191;
                  }
                }
                LODWORD(v154) = v158;
LABEL_191:
                ;
              }
              while (v153 != v154);
            }
            ++v150;
          }
          while (v150 != v151);
          uint64_t v160 = *(void *)(*(void *)(v85 + 240) + 8 * *(unsigned __int16 *)(v88[243] + 16));
          uint64_t v161 = *(void *)(v160 + 24);
          if (v161)
          {
            int v162 = 0;
            int v163 = 0;
            unint64_t v164 = *(uint64_t **)(v160 + 40);
            v369 = &v164[v161];
            uint64_t v362 = *(void *)(*(void *)(v85 + 104) + 272) >> 1;
            *(void *)&long long v87 = 134217984;
            long long v361 = v87;
            uint64_t v165 = v381;
            while (1)
            {
              uint64_t v391 = *v164;
              if (*(void *)(*v164 + 16)) {
                break;
              }
LABEL_499:
              if (++v164 == v369) {
                goto LABEL_504;
              }
            }
            v376 = v164;
            int v377 = v162;
            int v378 = v163;
            uint64_t OwnerPeerID = (*(uint64_t (**)(void, unint64_t))(**(void **)(v165 + 160) + 16))(*(void *)(v165 + 160), v85);
            v390 = (re::AudioService *)OwnerPeerID;
            if (OwnerPeerID)
            {
              uint64_t v166 = *(void *)(v391 + 16);
              if (!v166 || (*(unsigned char *)(v166 + 288) & 1) == 0)
              {
                uint64_t v167 = *(void *)(v391 + 144);
                if (v167)
                {
                  uint64_t v168 = *(uint64_t **)(v391 + 160);
                  uint64_t v169 = 8 * v167;
                  do
                  {
                    uint64_t v170 = *v168;
                    if (*v168) {
                      uint64_t OwnerPeerID = (uint64_t)(id)(v170 + 8);
                    }
                    if (*(void *)(v170 + 448) != -1)
                    {
                      v171 = *(re::audio ***)(v391 + 16);
                      if (v171)
                      {
                        uint64_t v172 = (id)*re::audioLogObjects((re *)OwnerPeerID);
                        if (os_log_type_enabled(v172, OS_LOG_TYPE_DEFAULT))
                        {
                          re::audio::debugStringFromDeactivatedEntityState(v171, *(const re::ecs2::Entity **)(v170 + 680), (std::string *)buf);
                          v173 = buf;
                          if (SBYTE7(v415) < 0) {
                            v173 = *(uint8_t **)buf;
                          }
                          *(_DWORD *)CMTime immediateSourceTime = 136446210;
                          *(void *)&immediateSourceTime[4] = v173;
                          _os_log_impl(&dword_233120000, v172, OS_LOG_TYPE_DEFAULT, "[RE/ECS] [Update] entity unexpectedly deactivated: %{public}s", immediateSourceTime, 0xCu);
                          if (SBYTE7(v415) < 0) {
                            operator delete(*(void **)buf);
                          }
                        }
                      }
                    }
                    *(void *)(v170 + 448) = -1;
                    (*(void (**)(re::AudioService *, uint64_t))(*(void *)v390 + 280))(v390, v170);
                    *(unsigned char *)(v170 + 478) = 0;

                    ++v168;
                    v169 -= 8;
                  }
                  while (v169);
                }
                goto LABEL_498;
              }
              v363 = *(re::TimebaseService **)(v381 + 168);
              uint64_t v174 = *(void *)(v391 + 144);
              if (v174)
              {
                uint64_t v175 = *(uint64_t **)(v391 + 160);
                uint64_t v176 = 8 * v174;
                do
                {
                  uint64_t v177 = *v175;
                  if (*v175) {
                    id v178 = (id)(v177 + 8);
                  }
                  *(void *)(v177 + 448) = v362;

                  ++v175;
                  v176 -= 8;
                }
                while (v176);
                uint64_t v166 = *(void *)(v391 + 16);
              }
              uint64_t v179 = *(re::ecs2::NetworkComponent **)(v166 + 200);
              if (v179)
              {
                uint64_t OwnerPeerID = *((void *)v179 + 4);
                if (OwnerPeerID && (uint64_t OwnerPeerID = RESyncableGetOwnerPeerID()) != 0 || *(unsigned char *)(v391 + 296))
                {
                  int v180 = re::ecs2::NetworkComponent::owningProcessType(v179);
LABEL_226:
                  uint64_t v181 = (const re::ecs2::Component *)(*(uint64_t (**)(re::AudioService *))(*(void *)v390 + 720))(v390);
                  uint64_t v182 = v391;
                  if (!v180)
                  {
                    unint64_t v183 = v181;
                    uint64_t v184 = *(void *)(v391 + 16);
                    if (v184)
                    {
                      uint64_t v181 = (const re::ecs2::Component *)re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(v184 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioTransientComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType);
                      if (v181) {
                        uint64_t v184 = *((void *)v181 + 4);
                      }
                      else {
                        uint64_t v184 = 0;
                      }
                    }
                    if ((const re::ecs2::Component *)v184 != v183)
                    {
                      uint64_t v181 = (const re::ecs2::Component *)re::ecs2::EntityComponentCollection::getOrAdd((re::ecs2::EntityComponentCollection *)(*(void *)(v391 + 16)+ 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioTransientComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType);
                      *((void *)v181 + 4) = v183;
                      if (v179) {
                        re::ecs2::NetworkComponent::markDirty(v179, v181);
                      }
                    }
                  }
                  int v404 = 0;
                  memset(v403, 0, sizeof(v403));
                  uint64_t v405 = 0x7FFFFFFFLL;
                  unsigned int v401 = 0;
                  long long v399 = 0u;
                  long long v400 = 0u;
                  uint64_t v402 = 0x7FFFFFFFLL;
                  *(void *)&buf[8] = 0;
                  long long v415 = 0uLL;
                  re::DynamicString::setCapacity(buf, 0);
                  switch(*(_DWORD *)(v391 + 208))
                  {
                    case 0:
                    case 3:
                      goto LABEL_235;
                    case 1:
                      float v185 = *(float *)(v391 + 212);
                      if (v185 < 0.125) {
                        goto LABEL_235;
                      }
                      uint64_t v186 = @"Simple-025";
                      if (v185 >= 0.375)
                      {
                        uint64_t v186 = @"Simple-050";
                        if (v185 >= 0.625)
                        {
                          uint64_t v186 = @"Simple-075";
                          if (v185 >= 0.875)
                          {
                            uint64_t v186 = @"Simple-100";
                            if (v185 >= 1.125)
                            {
                              uint64_t v186 = @"Simple-125";
                              if (v185 >= 1.375)
                              {
                                uint64_t v186 = @"Simple-200";
                                if (v185 < 1.875) {
                                  uint64_t v186 = @"Simple-175";
                                }
                                if (v185 < 1.625) {
                                  uint64_t v186 = @"Simple-150";
                                }
                              }
                            }
                          }
                        }
                      }
                      uint64_t v187 = v186;
                      if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF837A0, memory_order_acquire) & 1) == 0
                        && __cxa_guard_acquire(&qword_26AF837A0))
                      {
                        qword_26AF83798 = [MEMORY[0x263EFF9A0] dictionary];
                        __cxa_guard_release(&qword_26AF837A0);
                      }
                      uint64_t v188 = objc_msgSend((id)qword_26AF83798, "objectForKeyedSubscript:", v187, v361);

                      if (!v188)
                      {
                        int v189 = v180;
                        re::Bundle::reResourcesFramework((uint64_t)immediateSourceTime);
                        if (immediateSourceTime[0]) {
                          unsigned int v190 = *(void **)&immediateSourceTime[8];
                        }
                        else {
                          unsigned int v190 = 0;
                        }
                        id v191 = v190;
                        if (immediateSourceTime[0]) {

                        }
                        uint64_t v192 = [v191 pathForResource:v187 ofType:@"ir"];
                        [(id)qword_26AF83798 setObject:v192 forKeyedSubscript:v187];

                        int v180 = v189;
                      }
                      uint64_t v193 = [(id)qword_26AF83798 objectForKeyedSubscript:v187];

                      if (v193)
                      {
                        id v194 = v193;
                        uint64_t v195 = (const char *)[v194 UTF8String];
                        size_t v196 = strlen(v195);
                        *(void *)CMTime immediateSourceTime = v195;
                        *(void *)&immediateSourceTime[8] = v196;
                        re::DynamicString::operator=((re::DynamicString *)buf, (uint64_t)immediateSourceTime);
                      }
                      else
                      {
LABEL_235:
                        *(void *)CMTime immediateSourceTime = "omni";
                        *(void *)&immediateSourceTime[8] = 4;
LABEL_259:
                        re::DynamicString::operator=((re::DynamicString *)buf, (uint64_t)immediateSourceTime);
                      }
LABEL_260:
                      re::DynamicString::operator=((re::DynamicString *)(v391 + 360), (re::DynamicString *)buf);
                      if (*(void *)buf && (buf[8] & 1) != 0) {
                        (*(void (**)(void))(**(void **)buf + 40))();
                      }
                      int v364 = v180;
                      *(void *)CMTime buf = &unk_26E6F7990;
                      *(void *)&buf[8] = v391;
                      *((void *)&v415 + 1) = buf;
                      re::ecs2::AudioPlayerComponent::forEachToken(v391, (uint64_t)buf);
                      std::__function::__value_func<void ()(unsigned long long)>::~__value_func[abi:nn180100](buf);
                      *(void *)CMTime buf = &unk_26E6F7A10;
                      *(void *)&buf[8] = v391;
                      *((void *)&v415 + 1) = buf;
                      re::ecs2::AudioPlayerComponent::forEachToken(v391, (uint64_t)buf);
                      std::__function::__value_func<void ()(unsigned long long)>::~__value_func[abi:nn180100](buf);
                      uint64_t v397 = v391 + 224;
                      uint64_t v398 = v391 + 248;
                      re::GainController::updateGainStatus((re::GainController *)&v397, v149);
                      atomic_store(0, (unsigned int *)(v391 + 320));
                      uint64_t v198 = *(unsigned int *)(v391 + 64);
                      if (v198)
                      {
                        uint64_t v199 = 0;
                        BOOL v200 = (_DWORD *)(*(void *)(v391 + 48) + 8);
                        do
                        {
                          if ((*v200 & 0x80000000) != 0) {
                            goto LABEL_269;
                          }
                          v200 += 72;
                          ++v199;
                        }
                        while (v198 != v199);
                        LODWORD(v199) = *(_DWORD *)(v391 + 64);
                      }
                      else
                      {
                        LODWORD(v199) = 0;
                      }
LABEL_269:
                      if (v198 == v199)
                      {
                        uint64_t v201 = v391 + 224;
                        uint64_t v202 = v391 + 248;
                        goto LABEL_387;
                      }
                      uint64_t v203 = v199;
                      break;
                    case 2:
                      if (qword_26AF83790 != -1) {
                        dispatch_once(&qword_26AF83790, &__block_literal_global_14);
                      }
                      size_t v197 = strlen((const char *)qword_26AF83780);
                      *(void *)CMTime immediateSourceTime = qword_26AF83780;
                      *(void *)&immediateSourceTime[8] = v197;
                      goto LABEL_259;
                    default:
                      goto LABEL_260;
                  }
                  while (1)
                  {
                    uint64_t v204 = *(void *)(v182 + 48);
                    if (*(void *)(v204 + 288 * v203 + 56) == 1)
                    {
                      atomic_fetch_add((atomic_uint *volatile)(v182 + 320), 1u);
                      uint64_t v204 = *(void *)(v182 + 48);
                    }
                    unint64_t v396 = 0;
                    uint64_t v205 = 9 * v203;
                    unint64_t v396 = *(void *)(v204 + 288 * v203 + 16);
                    re::HashSetBase<unsigned long long,unsigned long long,re::internal::ValueAsKey<unsigned long long>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addNew((uint64_t)v403, (uint64_t *)&v396);
                    uint64_t v206 = re::AssetHandle::AssetHandle((re::AssetHandle *)v394, (const re::AssetHandle *)(*(void *)(v182 + 48) + 32 * v205 + 32));
                    if (v395)
                    {
                      v207 = (uint64_t *)*((void *)v395 + 33);
                      v208 = re::AudioFileAsset::assetType(v206);
                      if (v207 == v208) {
                        goto LABEL_280;
                      }
                    }
                    else
                    {
                      v208 = re::AudioFileAsset::assetType(v206);
                    }
                    if (v395)
                    {
                      float64x2_t v209 = (uint64_t *)*((void *)v395 + 33);
                      v208 = re::AudioFileGroupAsset::assetType((re::AudioFileGroupAsset *)v208);
                      if (v209 == v208)
                      {
LABEL_280:
                        uint64_t v210 = *(void *)(v182 + 16);
                        if (v210)
                        {
                          v208 = (uint64_t *)re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(v210 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioTransientComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType);
                          if (v208)
                          {
                            if (v208[4]) {
                              goto LABEL_289;
                            }
                          }
                        }
                      }
                    }
                    else
                    {
                      v208 = re::AudioFileGroupAsset::assetType((re::AudioFileGroupAsset *)v208);
                    }
                    if (v395)
                    {
                      float32x4_t v211 = (uint64_t *)*((void *)v395 + 33);
                      v208 = re::AudioGeneratorAsset::assetType((re::AudioGeneratorAsset *)v208);
                      if (v211 == v208) {
                        v208 = (uint64_t *)(*(uint64_t (**)(re::AudioService *))(*(void *)v390 + 496))(v390);
                      }
                    }
                    else
                    {
                      v208 = re::AudioGeneratorAsset::assetType((re::AudioGeneratorAsset *)v208);
                    }
LABEL_289:
                    if (v395)
                    {
                      uint64_t v212 = (uint64_t *)*((void *)v395 + 33);
                      if (v212 == re::AudioFileAsset::assetType((re::AudioFileAsset *)v208))
                      {
                        uint64_t v219 = re::AssetHandle::loadedAsset<re::AudioFileAsset>((re::AudioFileAsset *)v394);
                        if (v219)
                        {
                          if (*(unsigned char *)(v219 + 154))
                          {
                            if (v395)
                            {
                              unsigned int v220 = atomic_load((unsigned int *)v395 + 176);
                              if (v220 == 2)
                              {
                                ++*((_DWORD *)v395 + 65);
                                unint64_t v221 = (re::AudioFileAsset *)re::AssetHandle::loadedAsset<re::AudioFileAsset>((re::AudioFileAsset *)v394);
                                if (v221)
                                {
                                  re::AudioFileAsset::completeLoad(v221, *(AudioSceneService **)(v381 + 160));
                                  re::internal::AssetEntry::updateMutatedRuntimeAssetSize((os_unfair_lock_s *)v395);
                                  re::internal::AssetEntry::updateMutatedAssetNonSharedDataSize(v395);
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    unint64_t v407 = v396;
                    uint64_t v213 = re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet(v391 + 32, (uint64_t *)&v407);
                    uint64_t v214 = re::ecs2::AudioPlayerComponent::audioService((re::ecs2::AudioPlayerComponent *)v182);
                    if (v214)
                    {
                      uint64_t v215 = v214;
                      unsigned int v216 = *(re::ecs2::NetworkComponent **)(*(void *)(v182 + 16) + 200);
                      uint64_t v383 = v213;
                      if (v216) {
                        int v217 = re::ecs2::NetworkComponent::owningProcessType(v216);
                      }
                      else {
                        int v217 = 0;
                      }
                      v222 = (void *)(v391 + 80);
                      if (re::HashTable<unsigned long long,re::PeerAttributionContext *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet(v391 + 80, (uint64_t *)&v407))
                      {
                        goto LABEL_306;
                      }
                      if (re::ecs2::AudioPlayerComponent::shouldCreateSourceStateForUnmatchedSyncState(0, v383, v217))
                      {
                        re::ecs2::AudioPlayerComponent::createSourceStateForUnmatchedSyncState((re::ecs2::AudioPlayerComponent *)v182, v407, v383, v217, 0);
                        v222 = (void *)(v391 + 80);
LABEL_306:
                        if (*v222)
                        {
                          unint64_t v223 = 0x94D049BB133111EBLL
                               * ((0xBF58476D1CE4E5B9 * (v407 ^ (v407 >> 30))) ^ ((0xBF58476D1CE4E5B9
                                                                                   * (v407 ^ (v407 >> 30))) >> 27));
                          unint64_t v224 = (v223 ^ (v223 >> 31)) % *(unsigned int *)(v182 + 104);
                          uint64_t v225 = *(void *)(v182 + 96);
                          uint64_t v226 = *(unsigned int *)(*(void *)(v182 + 88) + 4 * v224);
                          uint64_t v227 = v383;
                          if (v226 == 0x7FFFFFFF)
                          {
LABEL_310:
                            uint64_t v226 = 0x7FFFFFFFLL;
                          }
                          else
                          {
                            while (*(void *)(v225 + 32 * v226 + 16) != v407)
                            {
                              uint64_t v226 = *(_DWORD *)(v225 + 32 * v226 + 8) & 0x7FFFFFFF;
                              if (v226 == 0x7FFFFFFF) {
                                goto LABEL_310;
                              }
                            }
                          }
                        }
                        else
                        {
                          uint64_t v225 = *(void *)(v182 + 96);
                          uint64_t v226 = 0x7FFFFFFFLL;
                          uint64_t v227 = v383;
                        }
                        int v373 = v217;
                        uint64_t v228 = *(void *)(v225 + 32 * v226 + 24);
                        uint64_t v229 = *(void *)(v227 + 96);
                        *(void *)CMTime immediateSourceTime = *(void *)(v227 + 80);
                        *(void *)&immediateSourceTime[8] = v229;
                        *(_DWORD *)&immediateSourceTime[16] = *(_DWORD *)(v227 + 88);
                        uint64_t v388 = v228;
                        *(void *)&long long v406 = immediateSourceTime;
                        *((void *)&v406 + 1) = v228 + 288;
                        v230.n128_f32[0] = re::GainController::updateGainStatus((re::GainController *)&v406, v149);
                        v231 = (re::AudioGeneratorAsset *)(*(uint64_t (**)(uint64_t, __n128))(*(void *)v215 + 544))(v215, v230);
                        if (v231)
                        {
LABEL_313:
                          *(void *)&long long v416 = 0;
                          *(void *)&long long v415 = 0;
                          memset(buf, 0, sizeof(buf));
                          DWORD2(v41re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = 0;
                          re::DynamicArray<re::RigNodeConstraint>::growCapacity(buf, 1uLL);
                          unint64_t v233 = *(void *)&buf[8];
                          uint64_t v232 = v415;
                          int v234 = DWORD2(v415);
                          uint64_t v235 = (re::GainController *)v416;
                          v236 = (void *)(v416 + 16 * v415);
                          void *v236 = v391 + 224;
                          v236[1] = v391 + 248;
                          *(void *)&long long v415 = v232 + 1;
                          DWORD2(v41re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = v234 + 1;
                          if (v232 + 1 >= v233)
                          {
                            re::DynamicArray<re::RigNodeConstraint>::growCapacity(buf, v232 + 2);
                            uint64_t v237 = v415;
                            uint64_t v235 = (re::GainController *)v416;
                          }
                          else
                          {
                            uint64_t v237 = v232 + 1;
                          }
                          *((_OWORD *)v235 + v23re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = v406;
                          if (v237 != -1)
                          {
                            uint64_t v365 = v237;
                            v366 = v235;
                            char v240 = 0;
                            int v386 = 0;
                            int v241 = 0;
                            uint64_t v367 = v407;
                            float v242 = 0.0;
                            float v243 = 1.0;
                            char v244 = (re::GainController *)((char *)v235 + 16 * v237 + 16);
                            float v245 = 1.0;
                            do
                            {
                              uint64_t v247 = *(void *)v235;
                              int v246 = (float *)*((void *)v235 + 1);
                              float v248 = *(float *)(*(void *)v235 + 4);
                              float v249 = *v246;
                              int v250 = *(_DWORD *)(*(void *)v235 + 16);
                              BOOL v251 = *(_DWORD *)v246 != v250 && (*(double *)(v247 + 8) == 0.0 || *(float *)v247 != v248);
                              float v252 = v246[2];
                              if (re::GainController::isFadeInProcess(v235))
                              {
                                ++v241;
                                float v242 = *((double *)v246 + 2);
                                if (LODWORD(v249) != v250)
                                {
                                  double v253 = *(double *)(v247 + 8);
                                  BOOL v254 = v253 <= 0.0;
                                  float v255 = v253;
                                  if (!v254) {
                                    float v242 = v255;
                                  }
                                  int v256 = v386;
                                  if (!v254) {
                                    int v256 = v386 + 1;
                                  }
                                  int v386 = v256;
                                }
                              }
                              float v245 = v245 * v248;
                              float v243 = v243 * v252;
                              v240 |= v251;
                              uint64_t v235 = (re::GainController *)((char *)v235 + 16);
                            }
                            while (v235 != v244);
                            if (v240)
                            {
                              re::ecs2::AudioPlayerComponent::doFadeToGain((re::ecs2::AudioPlayerComponent *)v391, v367, v243, 0.0);
                              if (v241 == 1 && !v386)
                              {
                                uint64_t v182 = v391;
                                uint64_t v227 = v383;
                                uint64_t v235 = v366;
                                goto LABEL_352;
                              }
                            }
                            uint64_t v235 = v366;
                            if (v386 == 1 && v241 == 1)
                            {
                              uint64_t v182 = v391;
                              uint64_t v227 = v383;
                              goto LABEL_352;
                            }
                            BOOL v254 = v241 < 2;
                            uint64_t v182 = v391;
                            uint64_t v227 = v383;
                            if (!v254)
                            {
                              int v257 = 0;
                              long long v258 = (char *)v366 + 8;
                              uint64_t v259 = 16 * v365 + 16;
                              float v260 = 1.0;
                              do
                              {
                                double v261 = *(double *)(*(void *)v258 + 16);
                                if (v261 >= v149)
                                {
                                  float v242 = v261;
                                  ++v257;
                                  float v262 = *(float *)(*(void *)v258 + 8)
                                       + (float)(v149 * *(float *)(*(void *)v258 + 12));
                                }
                                else
                                {
                                  float v262 = *(float *)(*((void *)v258 - 1) + 4);
                                }
                                float v260 = v260 * v262;
                                v258 += 16;
                                v259 -= 16;
                              }
                              while (v259);
                              if (v257 != 1)
                              {
                                float v242 = v149;
                                float v245 = v260;
                              }
LABEL_352:
                              re::ecs2::AudioPlayerComponent::doFadeToGain((re::ecs2::AudioPlayerComponent *)v182, v367, v245, v242);
                            }
                          }
                          if (v235 && *(void *)buf) {
                            (*(void (**)(void, re::GainController *))(**(void **)buf + 40))(*(void *)buf, v235);
                          }
                        }
                        else
                        {
                          uint64_t v238 = *(void *)(v388 + 40);
                          if (v238)
                          {
                            v239 = *(uint64_t **)(v238 + 264);
                            BOOL v126 = v239 == re::AudioGeneratorAsset::assetType(v231);
                            uint64_t v227 = v383;
                            if (v126 && (*(unsigned int (**)(uint64_t))(*(void *)v215 + 552))(v215)) {
                              goto LABEL_313;
                            }
                          }
                          else
                          {
                            re::AudioGeneratorAsset::assetType(v231);
                          }
                        }
                        *(_DWORD *)(v388 + 288) = *(_DWORD *)&immediateSourceTime[16];
                        *(unsigned char *)(v388 + 292) = 0;
                        *(_DWORD *)(v227 + 104) = *(_DWORD *)(v182 + 256);
                        uint64_t v263 = (re::DynamicString *)(v227 + 160);
                        IsReadyToCompletePreparation = re::DynamicString::operator=((re::DynamicString *)(v227 + 160), (re::DynamicString *)(v391 + 360));
                        v265 = (long long *)(v227 + 192);
                        *(_OWORD *)(v227 + 192) = *(_OWORD *)(v391 + 208);
                        *(_DWORD *)(v227 + 68) = *(_DWORD *)(v182 + 284);
                        if (!*(unsigned char *)(v388 + 478) && !*(unsigned char *)(v388 + 479))
                        {
                          IsReadyToCompletePreparation = (re *)re::ecs2::AudioPlayerComponent::syncStateIsReadyToCompletePreparation((re::ecs2::AudioPlayerComponent *)v182, (void *)v227, v373);
                          if (IsReadyToCompletePreparation)
                          {
                            *(void *)(v388 + 24) = *(void *)v227;
                            re::AssetHandle::operator=(v388 + 32, (uint64_t *)(v227 + 8));
                            *(_OWORD *)(v388 + 56) = *(_OWORD *)(v227 + 32);
                            long long v266 = *(_OWORD *)(v227 + 48);
                            long long v267 = *(_OWORD *)(v227 + 64);
                            long long v268 = *(_OWORD *)(v227 + 80);
                            *(_OWORD *)(v388 + 116) = *(_OWORD *)(v227 + 92);
                            *(_OWORD *)(v388 + 104) = v268;
                            *(_OWORD *)(v388 + 88) = v267;
                            *(_OWORD *)(v388 + 72) = v266;
                            re::Optional<re::DynamicString>::operator=((unsigned char *)(v388 + 136), (unsigned __int8 *)(v227 + 112));
                            *(unsigned char *)(v388 + 176) = *(unsigned char *)(v227 + 152);
                            re::DynamicString::operator=((re::DynamicString *)(v388 + 184), (re::DynamicString *)(v227 + 160));
                            long long v269 = *v265;
                            *(_OWORD *)(v388 + 232) = *(_OWORD *)(v227 + 208);
                            *(_OWORD *)(v388 + 216) = v269;
                            re::DynamicString::operator=((re::DynamicString *)(v388 + 248), (re::DynamicString *)(v227 + 224));
                            *(_WORD *)(v388 + 280) = *(_WORD *)(v227 + 256);
                            re::ecs2::AudioPlayerComponent::completePreparation((re::ecs2::AudioPlayerComponent *)v182, v407, (re::AudioSourceSyncState *)v227, v363);
                          }
                        }
                        uint64_t v270 = v227;
                        if (*(void *)v227)
                        {
                          v271 = *(OpaqueCMTimebase **)(v388 + 696);
                          if (v271)
                          {
                            double EffectiveRate = CMTimebaseGetEffectiveRate(v271);
                            uint64_t v270 = v383;
                            uint64_t v273 = *(void *)v383;
                            if (EffectiveRate == 0.0) {
                              double EffectiveRate = 1.0;
                            }
                            float v274 = EffectiveRate;
                            *(float *)(v383 + 40) = v274;
                            if (!v273) {
                              goto LABEL_365;
                            }
                          }
                          else
                          {
                            uint64_t v270 = v383;
                            *(_DWORD *)(v383 + 40) = 1065353216;
                          }
                        }
                        else
                        {
LABEL_365:
                          uint64_t v275 = *(void *)(v270 + 32);
                          if (v275 != *(void *)(v388 + 56))
                          {
                            switch(v275)
                            {
                              case 0:
                                re::ecs2::AudioPlayerComponent::doStop((re::ecs2::AudioPlayerComponent *)v182, v407, (re::AudioSourceState *)v388, 0);
                                break;
                              case 1:
                                re::ecs2::AudioPlayerComponent::doPlay((re::ecs2::AudioPlayerComponent *)v182, v407, (re::AudioSourceState *)v388, 0);
                                break;
                              case 3:
                                re::ecs2::AudioPlayerComponent::doPause((re::ecs2::AudioPlayerComponent *)v182, v407, (re::AudioSourceState *)v388, 0);
                                break;
                              case 5:
                                v286 = *re::audioLogObjects(IsReadyToCompletePreparation);
                                if (os_log_type_enabled(v286, OS_LOG_TYPE_ERROR))
                                {
                                  v287 = v286;
                                  uint64_t v288 = *(void *)(v388 + 680);
                                  *(_DWORD *)CMTime buf = v361;
                                  *(void *)&uint8_t buf[4] = v288;
                                  _os_log_error_impl(&dword_233120000, v287, OS_LOG_TYPE_ERROR, "Sync state in error state, token: %llu", buf, 0xCu);
                                }
                                break;
                              default:
                                break;
                            }
                          }
                          v276 = *(OpaqueCMTimebase **)(v388 + 696);
                          uint64_t v270 = v383;
                          if (v276)
                          {
                            double v277 = CMTimebaseGetEffectiveRate(*(CMTimebaseRef *)(v388 + 696));
                            double v278 = *(float *)(v383 + 40);
                            if (v277 != v278 && *(void *)(v383 + 32) == 1) {
                              CMTimebaseSetRate(v276, v278);
                            }
                          }
                        }
                        *(void *)(v388 + 24) = *(void *)v270;
                        re::AssetHandle::operator=(v388 + 32, (uint64_t *)(v270 + 8));
                        *(_OWORD *)(v388 + 56) = *(_OWORD *)(v270 + 32);
                        long long v279 = *(_OWORD *)(v270 + 48);
                        long long v280 = *(_OWORD *)(v270 + 64);
                        long long v281 = *(_OWORD *)(v270 + 80);
                        *(_OWORD *)(v388 + 116) = *(_OWORD *)(v270 + 92);
                        *(_OWORD *)(v388 + 104) = v281;
                        *(_OWORD *)(v388 + 88) = v280;
                        *(_OWORD *)(v388 + 72) = v279;
                        re::Optional<re::DynamicString>::operator=((unsigned char *)(v388 + 136), (unsigned __int8 *)(v270 + 112));
                        *(unsigned char *)(v388 + 176) = *(unsigned char *)(v270 + 152);
                        re::DynamicString::operator=((re::DynamicString *)(v388 + 184), v263);
                        long long v282 = *v265;
                        *(_OWORD *)(v388 + 232) = v265[1];
                        *(_OWORD *)(v388 + 216) = v282;
                        re::DynamicString::operator=((re::DynamicString *)(v388 + 248), (re::DynamicString *)(v270 + 224));
                        *(_WORD *)(v388 + 280) = *(_WORD *)(v270 + 256);
                      }
                    }
                    else
                    {
                      v218 = *re::audioLogObjects(0);
                      if (os_log_type_enabled(v218, OS_LOG_TYPE_ERROR))
                      {
                        *(_WORD *)CMTime buf = 0;
                        _os_log_error_impl(&dword_233120000, v218, OS_LOG_TYPE_ERROR, "Cannot applyCommandsForStateChanges with no AudioService", buf, 2u);
                      }
                    }
                    re::AssetHandle::~AssetHandle((re::AssetHandle *)v394);
                    unsigned int v283 = *(_DWORD *)(v182 + 64);
                    if (v283 <= (int)v199 + 1) {
                      int v284 = v199 + 1;
                    }
                    else {
                      int v284 = *(_DWORD *)(v182 + 64);
                    }
                    while (1)
                    {
                      uint64_t v203 = (v199 + 1);
                      if (v284 - 1 == v199) {
                        break;
                      }
                      LODWORD(v199) = v199 + 1;
                      int v285 = v203;
                      if ((*(_DWORD *)(*(void *)(v182 + 48) + 288 * v203 + 8) & 0x80000000) != 0) {
                        goto LABEL_381;
                      }
                    }
                    int v285 = v284;
LABEL_381:
                    LODWORD(v199) = v285;
                    if (v283 == v285)
                    {
                      uint64_t v201 = v397;
                      uint64_t v202 = v398;
LABEL_387:
                      *(void *)CMTime buf = &unk_26E6F7910;
                      *(void *)&buf[8] = v182;
                      *((void *)&v415 + 1) = buf;
                      re::ecs2::AudioPlayerComponent::forEachToken(v182, (uint64_t)buf);
                      std::__function::__value_func<void ()(unsigned long long)>::~__value_func[abi:nn180100](buf);
                      *(_DWORD *)uint64_t v202 = *(_DWORD *)(v201 + 16);
                      *(unsigned char *)(v202 + 4) = 0;
                      uint64_t v289 = *(unsigned int *)(v182 + 112);
                      uint64_t v290 = 0;
                      if (v289)
                      {
                        v291 = (int *)(*(void *)(v182 + 96) + 8);
                        while (1)
                        {
                          int v292 = *v291;
                          v291 += 8;
                          if (v292 < 0) {
                            break;
                          }
                          if (v289 == ++v290)
                          {
                            LODWORD(v290) = *(_DWORD *)(v182 + 112);
                            break;
                          }
                        }
                      }
                      if (v289 != v290)
                      {
                        uint64_t v293 = v290;
                        do
                        {
                          *(void *)CMTime buf = 0;
                          *(void *)CMTime buf = *(void *)(*(void *)(v182 + 96) + 32 * v293 + 16);
                          if (!re::HashSetBase<unsigned long long,unsigned long long,re::internal::ValueAsKey<unsigned long long>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::contains((uint64_t)v403, (uint64_t *)buf))re::HashSetBase<unsigned long long,unsigned long long,re::internal::ValueAsKey<unsigned long long>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addNew((uint64_t)&v399, (uint64_t *)buf); {
                          unsigned int v294 = *(_DWORD *)(v182 + 112);
                          }
                          if (v294 <= (int)v290 + 1) {
                            int v295 = v290 + 1;
                          }
                          else {
                            int v295 = *(_DWORD *)(v182 + 112);
                          }
                          while (1)
                          {
                            uint64_t v293 = (v290 + 1);
                            if (v295 - 1 == v290) {
                              break;
                            }
                            LODWORD(v290) = v290 + 1;
                            int v296 = v293;
                            if ((*(_DWORD *)(*(void *)(v182 + 96) + 32 * v293 + 8) & 0x80000000) != 0) {
                              goto LABEL_403;
                            }
                          }
                          int v296 = v295;
LABEL_403:
                          LODWORD(v290) = v296;
                        }
                        while (v294 != v296);
                      }
                      re::ecs2::TransformHelper::computeWorldMatrixForRendering(*(re::ecs2::TransformComponent ***)(v182 + 16), *(void *)(v381 + 176), buf);
                      long long v384 = v415;
                      long long v387 = *(_OWORD *)buf;
                      *(_OWORD *)CMTime immediateSourceTime = *(_OWORD *)buf;
                      *(_OWORD *)&immediateSourceTime[16] = v415;
                      long long v380 = v416;
                      long long v412 = v416;
                      long long v413 = v417;
                      long long v375 = v417;
                      re::audio::cleanUpTransformForPHASE((float32x4_t *)immediateSourceTime, v297, v298, v299, (uint64_t)buf);
                      long long v372 = v415;
                      long long v374 = *(_OWORD *)buf;
                      long long v370 = v417;
                      *(_OWORD *)v371 = v416;
                      if (!v364 && (*(unsigned int (**)(re::AudioService *))(*(void *)v390 + 672))(v390))
                      {
                        uint64_t v300 = *(unsigned int *)(v182 + 64);
                        if (v300)
                        {
                          uint64_t v301 = 0;
                          v302 = (_DWORD *)(*(void *)(v182 + 48) + 8);
                          while ((*v302 & 0x80000000) == 0)
                          {
                            v302 += 72;
                            if (v300 == ++v301)
                            {
                              LODWORD(v301) = *(_DWORD *)(v182 + 64);
                              break;
                            }
                          }
                        }
                        else
                        {
                          LODWORD(v301) = 0;
                        }
                        if (v300 != v301)
                        {
                          uint64_t v303 = v301;
                          unsigned int v304 = *(_DWORD *)(v182 + 64);
                          do
                          {
                            uint64_t v305 = *(void *)(v182 + 48);
                            uint64_t v306 = v305 + 288 * v303;
                            if (!*(void *)(v306 + 40)
                              && (*(void *)(v305 + 288 * v303 + 232) || *(void *)(v305 + 288 * v303 + 240)))
                            {
                              re::ecs2::AudioPlayerComponent::updateSharedAcousticProperties((re::ecs2::AudioPlayerComponent *)v182, *(void *)(v306 + 16), v390);
                              unsigned int v304 = *(_DWORD *)(v182 + 64);
                            }
                            if (v304 <= (int)v301 + 1) {
                              unsigned int v307 = v301 + 1;
                            }
                            else {
                              unsigned int v307 = v304;
                            }
                            while (1)
                            {
                              uint64_t v303 = (v301 + 1);
                              if (v307 - 1 == v301) {
                                break;
                              }
                              LODWORD(v301) = v301 + 1;
                              unsigned int v308 = v303;
                              if ((*(_DWORD *)(*(void *)(v182 + 48) + 288 * v303 + 8) & 0x80000000) != 0) {
                                goto LABEL_425;
                              }
                            }
                            unsigned int v308 = v307;
LABEL_425:
                            LODWORD(v301) = v308;
                          }
                          while (v300 != v308);
                        }
                      }
                      uint64_t v309 = *(void *)(v182 + 144);
                      if (!v309)
                      {
LABEL_480:
                        re::ecs2::AudioPlayerComponent::triggerPendingActions((re::ecs2::AudioPlayerComponent **)v391);
                        unsigned int v346 = v401;
                        if (v401)
                        {
                          uint64_t v347 = 0;
                          v348 = (int *)(v400 + 8);
                          unint64_t v85 = v368;
                          while (1)
                          {
                            int v349 = *v348;
                            v348 += 6;
                            if (v349 < 0) {
                              break;
                            }
                            if (v401 == ++v347)
                            {
                              LODWORD(v34re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = v401;
                              break;
                            }
                          }
                        }
                        else
                        {
                          LODWORD(v34re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 0;
                          unint64_t v85 = v368;
                        }
                        if (v401 != v347)
                        {
                          uint64_t v350 = v347;
                          uint64_t v351 = v400;
                          do
                          {
                            re::ecs2::AudioPlayerComponent::doDestroy((re::ecs2::AudioPlayerComponent **)v391, *(void *)(v351 + 24 * v350 + 16));
                            uint64_t v351 = v400;
                            if (v401 <= (int)v347 + 1) {
                              unsigned int v352 = v347 + 1;
                            }
                            else {
                              unsigned int v352 = v401;
                            }
                            int v353 = v347;
                            while (1)
                            {
                              uint64_t v350 = (v353 + 1);
                              if (v352 - 1 == v353) {
                                break;
                              }
                              ++v353;
                              LODWORD(v34re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = v350;
                              if ((*(_DWORD *)(v400 + 24 * v350 + 8) & 0x80000000) != 0) {
                                goto LABEL_496;
                              }
                            }
                            LODWORD(v34re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = v352;
LABEL_496:
                            ;
                          }
                          while (v346 != v347);
                        }
                        re::HashSetBase<re::RigGraphSystem::BuildTask *,re::RigGraphSystem::BuildTask *,re::internal::ValueAsKey<re::RigGraphSystem::BuildTask *>,re::Hash<re::RigGraphSystem::BuildTask *>,re::EqualTo<re::RigGraphSystem::BuildTask *>,true,false>::deinit((uint64_t *)&v399);
                        re::HashSetBase<re::RigGraphSystem::BuildTask *,re::RigGraphSystem::BuildTask *,re::internal::ValueAsKey<re::RigGraphSystem::BuildTask *>,re::Hash<re::RigGraphSystem::BuildTask *>,re::EqualTo<re::RigGraphSystem::BuildTask *>,true,false>::deinit((uint64_t *)v403);
                        break;
                      }
                      v310 = *(uint64_t **)(v391 + 160);
                      v389 = &v310[v309];
                      while (2)
                      {
                        uint64_t v311 = *v310;
                        if (*v310) {
                          id v312 = (id)(v311 + 8);
                        }
                        if (*(unsigned char *)(v311 + 672))
                        {
                          unint64_t v313 = *(void *)(v311 + 256);
                          if (v313) {
                            unint64_t v314 = v313 >> 1;
                          }
                          else {
                            unint64_t v314 = v313 >> 1;
                          }
                          if (v314 || !*(void *)(v311 + 40) && (*(void *)(v311 + 232) || *(void *)(v311 + 240)))
                          {
                            uint64_t v315 = *(void *)(v391 + 16);
                            if (v315)
                            {
                              uint64_t v316 = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(v315 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioTransientComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType);
                              if (v316)
                              {
                                *(void *)CMTime buf = *(void *)(v311 + 680);
                                uint64_t v317 = re::HashTable<unsigned long long,re::PeerAttributionContext *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet(v316 + 40, (uint64_t *)buf);
                                if (v317) {
                                  *(_DWORD *)(v311 + 472) = *(_DWORD *)(v317 + 4);
                                }
                              }
                            }
                            *(unsigned char *)(v311 + 476) = re::ecs2::AudioPlayerComponent::selectInputMode((re::ecs2::AudioPlayerComponent *)v391, *(void *)(v311 + 680));
                          }
                          *(_OWORD *)(v311 + 320) = v374;
                          *(_OWORD *)(v311 + 336) = v372;
                          *(_OWORD *)(v311 + 352) = *(_OWORD *)v371;
                          *(_OWORD *)(v311 + 368) = v370;
                          *(_OWORD *)(v311 + 384) = v387;
                          *(_OWORD *)(v311 + 400) = v384;
                          *(_OWORD *)(v311 + 416) = v380;
                          *(_OWORD *)(v311 + 432) = v375;
                          (*(void (**)(void))(*(void *)v390 + 280))();
                          uint64_t v318 = *(unsigned int *)(v311 + 536);
                          if (v318)
                          {
                            uint64_t v319 = 0;
                            v320 = (int *)(*(void *)(v311 + 520) + 8);
                            while (1)
                            {
                              int v321 = *v320;
                              v320 += 8;
                              if (v321 < 0) {
                                break;
                              }
                              if (v318 == ++v319)
                              {
                                LODWORD(v319) = *(_DWORD *)(v311 + 536);
                                break;
                              }
                            }
                          }
                          else
                          {
                            LODWORD(v319) = 0;
                          }
                          if (v318 == v319)
                          {
                            if (!v311)
                            {
LABEL_475:
                              if (++v310 == v389) {
                                goto LABEL_480;
                              }
                              continue;
                            }
                          }
                          else
                          {
                            uint64_t v322 = v319;
                            v323 = (unint64_t *)(v311 + 552);
                            do
                            {
                              uint64_t v324 = *(void *)(v311 + 520) + 32 * v322;
                              float v326 = *(float *)(v324 + 24);
                              v325 = (uint64_t *)(v324 + 24);
                              float v327 = v326;
                              v328 = v325 - 1;
                              v329 = (float *)re::HashTable<unsigned long long,re::PeerAttributionContext *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet(v311 + 552, v325 - 1);
                              if (!v329 || *v329 != v327)
                              {
                                uint64_t v330 = *v328;
                                unint64_t v331 = 0xBF58476D1CE4E5B9 * (*v328 ^ ((unint64_t)*v328 >> 30));
                                unint64_t v332 = (0x94D049BB133111EBLL * (v331 ^ (v331 >> 27))) ^ ((0x94D049BB133111EBLL
                                                                                        * (v331 ^ (v331 >> 27))) >> 31);
                                unint64_t v333 = *v323;
                                if (!*v323
                                  || (unint64_t v333 = v332 % *(unsigned int *)(v311 + 576),
                                      uint64_t v334 = *(unsigned int *)(*(void *)(v311 + 560) + 4 * v333),
                                      v334 == 0x7FFFFFFF))
                                {
LABEL_458:
                                  uint64_t v336 = *(unsigned int *)(v311 + 588);
                                  if (v336 == 0x7FFFFFFF)
                                  {
                                    uint64_t v336 = *(unsigned int *)(v311 + 584);
                                    int v337 = v336;
                                    if (v336 == *(_DWORD *)(v311 + 576))
                                    {
                                      re::HashTable<unsigned long long,float,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::setCapacity(v311 + 552, 2 * *(_DWORD *)(v311 + 580));
                                      unint64_t v333 = v332 % *(unsigned int *)(v311 + 576);
                                      int v337 = *(_DWORD *)(v311 + 584);
                                      uint64_t v330 = *v328;
                                    }
                                    *(_DWORD *)(v311 + 584) = v337 + 1;
                                    uint64_t v338 = *(void *)(v311 + 568);
                                    int v339 = *(_DWORD *)(v338 + 32 * v336 + 8);
                                  }
                                  else
                                  {
                                    uint64_t v338 = *(void *)(v311 + 568);
                                    int v339 = *(_DWORD *)(v338 + 32 * v336 + 8);
                                    *(_DWORD *)(v311 + 588) = v339 & 0x7FFFFFFF;
                                  }
                                  *(_DWORD *)(v338 + 32 * v336 + 8) = v339 | 0x80000000;
                                  uint64_t v340 = *(void *)(v311 + 560);
                                  *(_DWORD *)(*(void *)(v311 + 568) + 32 * v336 + 8) = *(_DWORD *)(*(void *)(v311 + 568) + 32 * v336 + 8) & 0x80000000 | *(_DWORD *)(v340 + 4 * v333);
                                  *(void *)(*(void *)(v311 + 568) + 32 * v336) = v332;
                                  *(void *)(*(void *)(v311 + 568) + 32 * v336 + 16) = v330;
                                  *(_DWORD *)(*(void *)(v311 + 568) + 32 * v336 + 24) = *(_DWORD *)v325;
                                  *(_DWORD *)(v340 + 4 * v333) = v336;
                                  ++*(_DWORD *)(v311 + 580);
                                }
                                else
                                {
                                  uint64_t v335 = *(void *)(v311 + 568);
                                  while (*(void *)(v335 + 32 * v334 + 16) != v330)
                                  {
                                    uint64_t v334 = *(_DWORD *)(v335 + 32 * v334 + 8) & 0x7FFFFFFF;
                                    if (v334 == 0x7FFFFFFF) {
                                      goto LABEL_458;
                                    }
                                  }
                                  *(_DWORD *)(v335 + 32 * v334 + 24) = *(_DWORD *)v325;
                                }
                                ++*(_DWORD *)(v311 + 592);
                                v341 = objc_msgSend(*(id *)(v311 + 456), "parameterTree", v361);
                                v342 = [v341 parameterWithAddress:*v328];
                                *(float *)&double v343 = v327;
                                [v342 setValue:v343];
                              }
                              if (*(_DWORD *)(v311 + 536) <= (v319 + 1)) {
                                int v344 = v319 + 1;
                              }
                              else {
                                int v344 = *(_DWORD *)(v311 + 536);
                              }
                              while (1)
                              {
                                uint64_t v322 = (v319 + 1);
                                if (v344 - 1 == v319) {
                                  break;
                                }
                                LODWORD(v319) = v319 + 1;
                                int v345 = v322;
                                if ((*(_DWORD *)(*(void *)(v311 + 520) + 32 * v322 + 8) & 0x80000000) != 0) {
                                  goto LABEL_473;
                                }
                              }
                              int v345 = v344;
LABEL_473:
                              LODWORD(v319) = v345;
                            }
                            while (v318 != v345);
                          }
                        }
                        break;
                      }

                      goto LABEL_475;
                    }
                  }
                }
              }
              else if (*(unsigned char *)(v391 + 296))
              {
                int v180 = 0;
                goto LABEL_226;
              }
            }
LABEL_498:
            uint64_t v354 = v391;
            unsigned int v355 = atomic_load((unsigned int *)(v391 + 320));
            int v356 = v378;
            int v162 = v355 + v377;
            unsigned int v357 = atomic_load((unsigned int *)(v354 + 324));
            int v163 = v357 + v356;
            uint64_t v165 = v381;
            unint64_t v164 = v376;
            goto LABEL_499;
          }
        }
        int v163 = 0;
        int v162 = 0;
LABEL_504:
        uint64_t Instance = re::ecs2::AudioPlayerTelemetryReporter::getInstance((re::ecs2::AudioPlayerTelemetryReporter *)OwnerPeerID);
        *(void *)CMTime buf = MEMORY[0x263EF8330];
        *(void *)&buf[8] = 3221225472;
        *(void *)&long long v415 = ___ZN2re4ecs228AudioPlayerTelemetryReporter25updateConcurrentPlayCountEj_block_invoke;
        *((void *)&v415 + 1) = &__block_descriptor_44_e5_v8__0l;
        *(void *)&long long v416 = Instance;
        DWORD2(v416) = v162;
        dispatch_async((dispatch_queue_t)re::ecs2::AudioPlayerTelemetryReporter::m_playerQueue, buf);
        uint64_t v360 = re::ecs2::AudioPlayerTelemetryReporter::getInstance(v359);
        *(void *)CMTime buf = MEMORY[0x263EF8330];
        *(void *)&buf[8] = 3221225472;
        *(void *)&long long v415 = ___ZN2re4ecs228AudioPlayerTelemetryReporter28updateConcurrentPrepareCountEj_block_invoke;
        *((void *)&v415 + 1) = &__block_descriptor_44_e5_v8__0l;
        *(void *)&long long v416 = v360;
        DWORD2(v416) = v163;
        dispatch_async((dispatch_queue_t)re::ecs2::AudioPlayerTelemetryReporter::m_playerQueue, buf);
      }
      re::internal::AriadneSignpostScopeGuard::~AriadneSignpostScopeGuard((re::internal::AriadneSignpostScopeGuard *)v392);
      return re::ProfilerTimeGuard<(re::ProfilerStatistic)120>::end((uint64_t)v393);
    }
  }
  return result;
}

uint64_t re::HashTable<re::ecs2::Scene const*,re::HashTable<unsigned long long,re::SharedPtr<re::AudioSourceState>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,true,false>::tryGet(uint64_t a1, unint64_t a2)
{
  if (!*(void *)a1) {
    return 0;
  }
  unint64_t v2 = 0x94D049BB133111EBLL
     * ((0xBF58476D1CE4E5B9 * (a2 ^ (a2 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (a2 ^ (a2 >> 30))) >> 27));
  uint64_t v3 = *(unsigned int *)(*(void *)(a1 + 8) + 4 * ((v2 ^ (v2 >> 31)) % *(unsigned int *)(a1 + 24)));
  if (v3 == 0x7FFFFFFF) {
    return 0;
  }
  uint64_t v5 = *(void *)(a1 + 16);
  if (*(void *)(v5 + 72 * v3 + 16) != a2)
  {
    while (1)
    {
      LODWORD(v3) = *(_DWORD *)(v5 + 72 * v3 + 8) & 0x7FFFFFFF;
      if (v3 == 0x7FFFFFFF) {
        break;
      }
      if (*(void *)(v5 + 72 * v3 + 16) == a2) {
        return v5 + 72 * v3 + 24;
      }
    }
    return 0;
  }
  return v5 + 72 * v3 + 24;
}

void re::HashTable<unsigned long long,re::SharedPtr<re::AudioSourceState>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::remove(uint64_t a1, unint64_t a2)
{
  if (*(void *)a1)
  {
    unint64_t v3 = 0x94D049BB133111EBLL
       * ((0xBF58476D1CE4E5B9 * (a2 ^ (a2 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (a2 ^ (a2 >> 30))) >> 27));
    unint64_t v4 = (v3 ^ (v3 >> 31)) % *(unsigned int *)(a1 + 24);
    uint64_t v5 = *(void *)(a1 + 8);
    uint64_t v6 = *(unsigned int *)(v5 + 4 * v4);
    if (v6 != 0x7FFFFFFF)
    {
      uint64_t v7 = *(void *)(a1 + 16);
      uint64_t v8 = v7 + 32 * v6;
      if (*(void *)(v8 + 16) == a2)
      {
        *(_DWORD *)(v5 + 4 * v4) = *(_DWORD *)(v8 + 8) & 0x7FFFFFFF;
LABEL_8:
        uint64_t v12 = *(void *)(a1 + 16) + 32 * v6;
        int v13 = *(_DWORD *)(v12 + 8);
        if (v13 < 0)
        {
          *(_DWORD *)(v12 + 8) = v13 & 0x7FFFFFFF;
          uint64_t v16 = *(void *)(v12 + 24);
          uint64_t v15 = (void *)(v12 + 24);
          uint64_t v14 = v16;
          if (v16)
          {

            *uint64_t v15 = 0;
          }
        }
        int v17 = *(_DWORD *)(a1 + 40);
        *(_DWORD *)(*(void *)(a1 + 16) + 32 * v6 + 8) = *(_DWORD *)(*(void *)(a1 + 16) + 32 * v6 + 8) & 0x80000000 | *(_DWORD *)(a1 + 36);
        --*(_DWORD *)(a1 + 28);
        *(_DWORD *)(a1 + 36) = v6;
        *(_DWORD *)(a1 + 40) = v17 + 1;
      }
      else
      {
        while (1)
        {
          unsigned int v9 = v6;
          int v10 = *(_DWORD *)(v7 + 32 * v6 + 8);
          uint64_t v6 = v10 & 0x7FFFFFFF;
          if ((v10 & 0x7FFFFFFF) == 0x7FFFFFFF) {
            break;
          }
          uint64_t v11 = v7 + 32 * v6;
          if (*(void *)(v11 + 16) == a2)
          {
            *(_DWORD *)(v7 + 32 * v9 + 8) = *(_DWORD *)(v7 + 32 * v9 + 8) & 0x80000000 | *(_DWORD *)(v11 + 8) & 0x7FFFFFFF;
            goto LABEL_8;
          }
        }
      }
    }
  }
}

void *re::ecs2::v1::allocInfo_AudioSourceState(re::ecs2::v1 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83720, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF83720))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF83AB0, "AudioSourceState");
    __cxa_guard_release(&qword_26AF83720);
  }
  return &unk_26AF83AB0;
}

void re::ecs2::v1::initInfo_AudioSourceState(re::ecs2::v1 *this, re::IntrospectionBase *a2)
{
  v22[0] = 0xC107D1832D9E740;
  v22[1] = "AudioSourceState";
  re::StringID::destroyString((re::StringID *)v22);
  *((_OWORD *)this + 2) = v23;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83728, memory_order_acquire) & 1) == 0)
  {
    unint64_t v4 = (re *)__cxa_guard_acquire(&qword_26AF83728);
    if (v4)
    {
      uint64_t v5 = re::introspectionAllocator(v4);
      uint64_t v7 = re::introspect_AssetHandle((re *)1, v6);
      uint64_t v8 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v5 + 32))(v5, 72, 8);
      *(_DWORD *)uint64_t v8 = 1;
      *(void *)(v8 + 8) = "asset";
      *(void *)(v8 + 16) = v7;
      *(void *)(v8 + 24) = 0;
      *(void *)(v8 + 32) = 1;
      *(_DWORD *)(v8 + 40) = 0;
      *(void *)(v8 + 48) = 0;
      *(void *)(v8 + 56) = 0;
      *(_DWORD *)(v8 + 64) = 0;
      qword_26AF83800 = v8;
      unsigned int v9 = re::introspectionAllocator((re *)v8);
      uint64_t v11 = re::introspect_uint32_t((re *)1, v10);
      uint64_t v12 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v9 + 32))(v9, 72, 8);
      *(_DWORD *)uint64_t v12 = 1;
      *(void *)(v12 + 8) = "layoutTag";
      *(void *)(v12 + 16) = v11;
      *(void *)(v12 + 24) = 0;
      *(void *)(v12 + 32) = 0x2800000002;
      *(_DWORD *)(v12 + 40) = 0;
      *(void *)(v12 + 48) = 0;
      *(void *)(v12 + 56) = 0;
      *(_DWORD *)(v12 + 64) = 0;
      qword_26AF83808 = v12;
      int v13 = re::introspectionAllocator((re *)v12);
      uint64_t v15 = re::introspect_float((re *)1, v14);
      uint64_t v16 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v13 + 32))(v13, 72, 8);
      *(_DWORD *)uint64_t v16 = 1;
      *(void *)(v16 + 8) = "playbackSpeed";
      *(void *)(v16 + 16) = v15;
      *(void *)(v16 + 24) = 0;
      *(void *)(v16 + 32) = 0x2000000003;
      *(_DWORD *)(v16 + 40) = 0;
      *(void *)(v16 + 48) = 0;
      *(void *)(v16 + 56) = 0;
      *(_DWORD *)(v16 + 64) = 0;
      qword_26AF83810 = v16;
      int v17 = re::introspectionAllocator((re *)v16);
      uint64_t v19 = re::introspect_float((re *)1, v18);
      uint64_t v20 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v17 + 32))(v17, 72, 8);
      *(_DWORD *)uint64_t v20 = 1;
      *(void *)(v20 + 8) = "reverbSendLevel";
      *(void *)(v20 + 16) = v19;
      *(void *)(v20 + 24) = 0;
      *(void *)(v20 + 32) = 0x2400000004;
      *(_DWORD *)(v20 + 40) = 0;
      *(void *)(v20 + 48) = 0;
      *(void *)(v20 + 56) = 0;
      *(_DWORD *)(v20 + 64) = 0;
      qword_26AF83818 = v20;
      __cxa_guard_release(&qword_26AF83728);
    }
  }
  *((void *)this + 2) = 0x3000000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 4;
  *((void *)this + 8) = &qword_26AF83800;
  *((void *)this + 9) = re::internal::defaultConstruct<re::ecs2::v1::AudioSourceState>;
  *((void *)this + re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 10) = re::internal::defaultDestruct<re::ecs2::v1::AudioSourceState>;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::ecs2::v1::AudioSourceState>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::ecs2::v1::AudioSourceState>;
  re::IntrospectionRegistry::add(this, v3);
  long long v21 = v23;
}

double re::internal::defaultConstruct<re::ecs2::v1::AudioSourceState>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(void *)&double result = 1065353216;
  *(void *)(a3 + 32) = 1065353216;
  *(_DWORD *)(a3 + 40) = 6553601;
  return result;
}

void re::internal::defaultDestruct<re::ecs2::v1::AudioSourceState>(int a1, int a2, re::AssetHandle *this)
{
}

double re::internal::defaultConstructV2<re::ecs2::v1::AudioSourceState>(uint64_t a1)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)&double result = 1065353216;
  *(void *)(a1 + 32) = 1065353216;
  *(_DWORD *)(a1 + 40) = 6553601;
  return result;
}

void *re::ecs2::v1::allocInfo_AudioPlayerComponent(re::ecs2::v1 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83738, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF83738))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF83B28, "AudioPlayerComponent");
    __cxa_guard_release(&qword_26AF83738);
  }
  return &unk_26AF83B28;
}

void re::ecs2::v1::initInfo_AudioPlayerComponent(re::ecs2::v1 *this, re::IntrospectionBase *a2)
{
  v20[0] = 0x913565130F19710CLL;
  v20[1] = "AudioPlayerComponent";
  re::StringID::destroyString((re::StringID *)v20);
  *((_OWORD *)this + 2) = v21;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83740, memory_order_acquire) & 1) == 0)
  {
    unint64_t v4 = (re *)__cxa_guard_acquire(&qword_26AF83740);
    if (v4)
    {
      uint64_t v5 = re::introspectionAllocator(v4);
      uint64_t v6 = re::ecs2::introspect_Component((re::IntrospectionBase **)1);
      uint64_t v7 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v5 + 32))(v5, 72, 8);
      *(_DWORD *)uint64_t v7 = 1;
      *(void *)(v7 + 8) = "Component";
      *(void *)(v7 + 16) = v6;
      *(void *)(v7 + 24) = 0;
      *(void *)(v7 + 32) = 0;
      *(_DWORD *)(v7 + 40) = 3;
      *(void *)(v7 + 48) = 0;
      *(void *)(v7 + 56) = 0;
      *(_DWORD *)(v7 + 64) = 0;
      qword_26AF83820 = v7;
      uint64_t v8 = re::introspectionAllocator((re *)v7);
      re::IntrospectionInfo<re::HashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>>::get((uint64_t)v8, v9);
      uint64_t v10 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v8 + 32))(v8, 72, 8);
      *(_DWORD *)uint64_t v10 = 1;
      *(void *)(v10 + 8) = "sourceStatesByToken";
      *(void *)(v10 + 16) = &qword_26AF83918;
      *(void *)(v10 + 24) = 0;
      *(void *)(v10 + 32) = 0x2000000001;
      *(_DWORD *)(v10 + 40) = 0;
      *(void *)(v10 + 48) = 0;
      *(void *)(v10 + 56) = 0;
      *(_DWORD *)(v10 + 64) = 0;
      qword_26AF83828 = v10;
      uint64_t v11 = re::introspectionAllocator((re *)v10);
      int v13 = re::IntrospectionInfo<re::DynamicArray<re::AssetHandle>>::get(1, v12);
      uint64_t v14 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v11 + 32))(v11, 72, 8);
      *(_DWORD *)uint64_t v14 = 1;
      *(void *)(v14 + 8) = "registeredAssets";
      *(void *)(v14 + 16) = v13;
      *(void *)(v14 + 24) = 0;
      *(void *)(v14 + 32) = 0x7800000002;
      *(_DWORD *)(v14 + 40) = 0;
      *(void *)(v14 + 48) = 0;
      *(void *)(v14 + 56) = 0;
      *(_DWORD *)(v14 + 64) = 0;
      qword_26AF83830 = v14;
      uint64_t v15 = re::introspectionAllocator((re *)v14);
      int v17 = re::introspect_BOOL((re *)1, v16);
      uint64_t v18 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v15 + 32))(v15, 72, 8);
      *(_DWORD *)uint64_t v18 = 1;
      *(void *)(v18 + 8) = "autoplay";
      *(void *)(v18 + 16) = v17;
      *(void *)(v18 + 24) = 0;
      *(void *)(v18 + 32) = 0xA000000003;
      *(_DWORD *)(v18 + 40) = 0;
      *(void *)(v18 + 48) = 0;
      *(void *)(v18 + 56) = 0;
      *(_DWORD *)(v18 + 64) = 0;
      qword_26AF83838 = v18;
      __cxa_guard_release(&qword_26AF83740);
    }
  }
  *((void *)this + 2) = 0xA800000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 4;
  *((void *)this + 8) = &qword_26AF83820;
  *((void *)this + 9) = re::internal::defaultConstruct<re::ecs2::v1::AudioPlayerComponent>;
  *((void *)this + re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 10) = re::internal::defaultDestruct<re::ecs2::v1::AudioPlayerComponent>;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::ecs2::v1::AudioPlayerComponent>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::ecs2::v1::AudioPlayerComponent>;
  re::IntrospectionRegistry::add(this, v3);
  long long v19 = v21;
}

void re::IntrospectionInfo<re::HashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>>::get(uint64_t a1, const re::IntrospectionBase *a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF837D0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF837D0))
  {
    re::IntrospectionHashTableBase::IntrospectionHashTableBase((re::IntrospectionHashTableBase *)&qword_26AF83918);
    qword_26AF83918 = (uint64_t)&unk_26E6F7B50;
    __cxa_guard_release(&qword_26AF837D0);
  }
  if ((byte_26AF83701 & 1) == 0)
  {
    uint64_t v2 = (uint64_t)re::introspect_uint64_t((re *)1, a2);
    uint64_t v3 = v2;
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF837D8, memory_order_acquire) & 1) == 0)
    {
      uint64_t v2 = __cxa_guard_acquire(&qword_26AF837D8);
      if (v2)
      {
        re::IntrospectionPointer::IntrospectionPointer((re::IntrospectionPointer *)&qword_26AF83840);
        __cxa_guard_release(&qword_26AF837D8);
      }
    }
    if ((byte_26AF83702 & 1) == 0)
    {
      byte_26AF83702 = 1;
      unint64_t v4 = (re::ecs2::v1 *)qword_26AF83730;
      if (!qword_26AF83730)
      {
        unint64_t v4 = (re::ecs2::v1 *)re::ecs2::v1::allocInfo_AudioSourceState((re::ecs2::v1 *)v2);
        qword_26AF83730 = (uint64_t)v4;
        re::ecs2::v1::initInfo_AudioSourceState(v4, v5);
      }
      ArcSharedObject::ArcSharedObject((ArcSharedObject *)&qword_26AF83840, 0);
      qword_26AF83850 = 0x800000001;
      dword_26AF83858 = 8;
      word_26AF8385C = 0;
      *(void *)&xmmword_26AF83860 = 0;
      *((void *)&xmmword_26AF83860 + 1) = 0xFFFFFFFFLL;
      qword_26AF83840 = (uint64_t)&unk_26E6CDA08;
      qword_26AF83870 = (uint64_t)v4;
      unk_26AF83878 = 0;
      re::IntrospectionRegistry::add(v6, v7);
      re::getPrettyTypeName((re *)&qword_26AF83840, (const re::IntrospectionBase *)&v29);
      if (BYTE8(v29)) {
        uint64_t v8 = v30;
      }
      else {
        uint64_t v8 = (char *)&v29 + 9;
      }
      if (void)v29 && (BYTE8(v29)) {
        (*(void (**)(void))(*(void *)v29 + 40))();
      }
      if (*(void *)&v33.var0 >> 1 == 94623636 && (v33.var1 == "char*" || !strcmp(v33.var1, "char*")))
      {
        long long v9 = v29;
      }
      else
      {
        long long v29 = *((_OWORD *)v4 + 2);
        long long v9 = v32;
      }
      xmmword_26AF83860 = v9;
      re::StringID::destroyString((re::StringID *)&v33);
    }
    if ((byte_26AF83701 & 1) == 0)
    {
      byte_26AF83701 = 1;
      int v10 = dword_26AF83858;
      ArcSharedObject::ArcSharedObject((ArcSharedObject *)&qword_26AF83918, 0);
      qword_26AF83928 = 0x3000000007;
      dword_26AF83930 = v10;
      word_26AF83934 = 0;
      *(void *)&xmmword_26AF83938 = 0;
      *((void *)&xmmword_26AF83938 + 1) = 0xFFFFFFFFLL;
      qword_26AF83948 = v3;
      qword_26AF83950 = 0;
      qword_26AF83958 = (uint64_t)&qword_26AF83840;
      qword_26AF83960 = 0;
      qword_26AF83918 = (uint64_t)&unk_26E6F7B50;
      re::IntrospectionRegistry::add(v11, v12);
      re::getPrettyTypeName((re *)&qword_26AF83918, (const re::IntrospectionBase *)&v29);
      if (BYTE8(v29)) {
        int v13 = v30;
      }
      else {
        int v13 = (char *)&v29 + 9;
      }
      if (void)v29 && (BYTE8(v29)) {
        (*(void (**)(void))(*(void *)v29 + 40))();
      }
      long long v14 = *(_OWORD *)(v3 + 32);
      long long v24 = xmmword_26AF83860;
      long long v25 = v14;
      uint64_t v15 = (uint64_t *)re::HashTable<re::StringID,re::StateParameterInt *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::tryGet((uint64_t)&unk_2687A0D30, v26);
      if (v15)
      {
        uint64_t v16 = *v15;
        *((void *)&v23 + 1) = v16;
      }
      else
      {
        *(void *)&long long v29 = 0x449AD97C4B77BED4;
        *((void *)&v29 + 1) = "_CompareFunc";
        int v17 = (uint64_t *)re::HashTable<re::StringID,re::StateParameterInt *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::tryGet((uint64_t)&unk_2687A0D30, &v29);
        if (v17)
        {
          uint64_t v18 = *v17;
          re::StringID::destroyString((re::StringID *)&v29);
        }
        else
        {
          re::StringID::destroyString((re::StringID *)&v29);
          *(void *)&v33.var0 = 0x449AD97C4B77BED4;
          v33.var1 = "_CompareFunc";
          uint64_t v18 = *((void *)&v29 + 1);
          long long v19 = (void *)v29;
          re::StringID::destroyString((re::StringID *)&v33);
        }
        re::TypeInfo::TypeInfo((uint64_t)&v33, (uint64_t)&v29 + 8);
        if (!v19
          || (uint64_t v20 = *v34,
              *(void *)&long long v29 = v18,
              *((void *)&v29 + 1) = v20,
              LODWORD(v30) = -1,
              (long long v21 = (_anonymous_namespace_ *)re::HashTable<re::internal::TypeAttributeKey,re::internal::TypeAttributeData,re::Hash<re::internal::TypeAttributeKey>,re::EqualTo<re::internal::TypeAttributeKey>,true,false>::tryGet(*(void *)&v33.var0 + 768, (uint64_t *)&v29)) == 0)|| !*(void *)v21)
        {
          long long v32 = v25;
          v31[0] = v19;
          v31[1] = v18;
        }
        long long v27 = v24;
        long long v28 = v25;
        re::TypeBuilder::beginDictionaryType((uint64_t)&v29, v26, 1, 0x30uLL, 8uLL, &v28, &v27);
        re::TypeBuilder::setConstructor((uint64_t)&v29, (uint64_t)re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#1}::__invoke);
        re::TypeBuilder::setDestructor((uint64_t)&v29, (uint64_t)re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#2}::__invoke);
        re::TypeBuilder::setDictionaryAccessors((uint64_t)&v29, (uint64_t)re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#1}::__invoke, (uint64_t)re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *)#1}::__invoke, (uint64_t)re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#3}::__invoke, (uint64_t)re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,void const*)#1}::__invoke);
        re::TypeBuilder::setDictionaryIterator((uint64_t)&v29, (void *(*)(void *, re::Allocator *))re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::Allocator *)#1}::__invoke, (BOOL (*)(void *))re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#2}::__invoke, (const void *(*)(void *))re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#3}::__invoke, (void *(*)(void *))re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#4}::__invoke, (void (*)(void *, re::Allocator *))re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::Allocator *)#2}::__invoke);
        re::TypeBuilder::~TypeBuilder((re::TypeBuilder *)&v29, v22);
      }
      xmmword_26AF83938 = v23;
      re::StringID::destroyString((re::StringID *)v26);
    }
  }
}

double re::internal::defaultConstruct<re::ecs2::v1::AudioPlayerComponent>(int a1, int a2, ArcSharedObject *this)
{
  *((void *)this + 20) = 0;
  *((_OWORD *)this + 8) = 0u;
  *((_OWORD *)this + 9) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *(_OWORD *)this = 0u;
  *((_OWORD *)this + 1) = 0u;
  ArcSharedObject::ArcSharedObject(this, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F7BF0;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_DWORD *)(v3 + 64) = 0;
  *(void *)&double result = 0x7FFFFFFFLL;
  *(void *)(v3 + 68) = 0x7FFFFFFFLL;
  *(void *)(v3 + 88) = 0;
  *(void *)(v3 + 96) = 0;
  *(void *)(v3 + 80) = 0;
  *(_DWORD *)(v3 + 104) = 0;
  *(void *)(v3 + 152) = 0;
  *(unsigned char *)(v3 + 160) = 0;
  *(_OWORD *)(v3 + 112) = 0u;
  *(_OWORD *)(v3 + 128) = 0u;
  *(_DWORD *)(v3 + 144) = 0;
  return result;
}

uint64_t re::internal::defaultDestruct<re::ecs2::v1::AudioPlayerComponent>(uint64_t a1, uint64_t a2, uint64_t (***a3)(void))
{
  return (**a3)(a3);
}

double re::internal::defaultConstructV2<re::ecs2::v1::AudioPlayerComponent>(uint64_t a1)
{
  *(void *)(a1 + 160) = 0;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)a1, 0);
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 24) = 0;
  *(void *)uint64_t v1 = &unk_26E6F7BF0;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_DWORD *)(v1 + 64) = 0;
  *(void *)&double result = 0x7FFFFFFFLL;
  *(void *)(v1 + 68) = 0x7FFFFFFFLL;
  *(void *)(v1 + 88) = 0;
  *(void *)(v1 + 96) = 0;
  *(void *)(v1 + 80) = 0;
  *(_DWORD *)(v1 + 104) = 0;
  *(void *)(v1 + 152) = 0;
  *(unsigned char *)(v1 + 160) = 0;
  *(_OWORD *)(v1 + 112) = 0u;
  *(_OWORD *)(v1 + 128) = 0u;
  *(_DWORD *)(v1 + 144) = 0;
  return result;
}

uint64_t re::internal::defaultDestructV2<re::ecs2::v1::AudioPlayerComponent>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

uint64_t re::ecs2::v1::introspect_AudioPlayerComponent(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"AudioPlayerComponent", (uint64_t (*)(re::internal *))re::ecs2::v1::allocInfo_AudioPlayerComponent, (re::IntrospectionBase *(*)(void))re::ecs2::v1::initInfo_AudioPlayerComponent, (void (*)(re::IntrospectionBase *))&qword_26AF83748, this);
}

void *re::ecs2::allocInfo_ChannelAudioComponent(re::ecs2 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83750, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF83750))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF83BA0, "ChannelAudioComponent");
    __cxa_guard_release(&qword_26AF83750);
  }
  return &unk_26AF83BA0;
}

void re::ecs2::initInfo_ChannelAudioComponent(re::ecs2 *this, re::IntrospectionBase *a2)
{
  v13[0] = 0xD5EC3C99B0BB5314;
  v13[1] = "ChannelAudioComponent";
  re::StringID::destroyString((re::StringID *)v13);
  *((_OWORD *)this + 2) = v14;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83758, memory_order_acquire) & 1) == 0)
  {
    unint64_t v4 = (re *)__cxa_guard_acquire(&qword_26AF83758);
    if (v4)
    {
      uint64_t v5 = re::introspectionAllocator(v4);
      uint64_t v6 = re::ecs2::introspect_Component((re::IntrospectionBase **)1);
      uint64_t v7 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v5 + 32))(v5, 72, 8);
      *(_DWORD *)uint64_t v7 = 1;
      *(void *)(v7 + 8) = "Component";
      *(void *)(v7 + 16) = v6;
      *(void *)(v7 + 24) = 0;
      *(void *)(v7 + 32) = 0;
      *(_DWORD *)(v7 + 40) = 3;
      *(void *)(v7 + 48) = 0;
      *(void *)(v7 + 56) = 0;
      *(_DWORD *)(v7 + 64) = 0;
      qword_26AF837E0 = v7;
      uint64_t v8 = re::introspectionAllocator((re *)v7);
      int v10 = re::introspect_float((re *)1, v9);
      uint64_t v11 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v8 + 32))(v8, 72, 8);
      *(_DWORD *)uint64_t v11 = 1;
      *(void *)(v11 + 8) = "gain";
      *(void *)(v11 + 16) = v10;
      *(void *)(v11 + 24) = 0;
      *(void *)(v11 + 32) = 0x1C00000001;
      *(_DWORD *)(v11 + 40) = 0;
      *(void *)(v11 + 48) = 0;
      *(void *)(v11 + 56) = 0;
      *(_DWORD *)(v11 + 64) = 0;
      qword_26AF837E8 = v11;
      __cxa_guard_release(&qword_26AF83758);
    }
  }
  *((void *)this + 2) = 0x2000000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 2;
  *((void *)this + 8) = &qword_26AF837E0;
  *((void *)this + 9) = re::internal::defaultConstruct<re::ecs2::ChannelAudioComponent>;
  *((void *)this + re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 10) = re::internal::defaultDestruct<re::ecs2::ChannelAudioComponent>;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::ecs2::ChannelAudioComponent>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::ecs2::ChannelAudioComponent>;
  re::IntrospectionRegistry::add(this, v3);
  long long v12 = v14;
}

void re::internal::defaultConstruct<re::ecs2::ChannelAudioComponent>(int a1, int a2, ArcSharedObject *this)
{
  *(_OWORD *)this = 0u;
  *((_OWORD *)this + 1) = 0u;
  ArcSharedObject::ArcSharedObject(this, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F7058;
  *(_DWORD *)(v3 + 28) = 0;
}

uint64_t re::internal::defaultDestruct<re::ecs2::ChannelAudioComponent>(uint64_t a1, uint64_t a2, uint64_t (***a3)(void))
{
  return (**a3)(a3);
}

void re::internal::defaultConstructV2<re::ecs2::ChannelAudioComponent>(ArcSharedObject *a1)
{
  *(_OWORD *)a1 = 0u;
  *((_OWORD *)a1 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(a1, 0);
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 24) = 0;
  *(void *)uint64_t v1 = &unk_26E6F7058;
  *(_DWORD *)(v1 + 28) = 0;
}

uint64_t re::internal::defaultDestructV2<re::ecs2::ChannelAudioComponent>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

uint64_t re::ecs2::introspect_ChannelAudioComponent(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"ChannelAudioComponent", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_ChannelAudioComponent, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_ChannelAudioComponent, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::ChannelAudioComponent>, this);
}

void *re::ecs2::allocInfo_AmbientAudioComponent(re::ecs2 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83760, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF83760))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF83C18, "AmbientAudioComponent");
    __cxa_guard_release(&qword_26AF83760);
  }
  return &unk_26AF83C18;
}

void re::ecs2::initInfo_AmbientAudioComponent(re::ecs2 *this, re::IntrospectionBase *a2)
{
  v13[0] = 0x6EAB480046526CBELL;
  v13[1] = "AmbientAudioComponent";
  re::StringID::destroyString((re::StringID *)v13);
  *((_OWORD *)this + 2) = v14;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83768, memory_order_acquire) & 1) == 0)
  {
    unint64_t v4 = (re *)__cxa_guard_acquire(&qword_26AF83768);
    if (v4)
    {
      uint64_t v5 = re::introspectionAllocator(v4);
      uint64_t v6 = re::ecs2::introspect_Component((re::IntrospectionBase **)1);
      uint64_t v7 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v5 + 32))(v5, 72, 8);
      *(_DWORD *)uint64_t v7 = 1;
      *(void *)(v7 + 8) = "Component";
      *(void *)(v7 + 16) = v6;
      *(void *)(v7 + 24) = 0;
      *(void *)(v7 + 32) = 0;
      *(_DWORD *)(v7 + 40) = 3;
      *(void *)(v7 + 48) = 0;
      *(void *)(v7 + 56) = 0;
      *(_DWORD *)(v7 + 64) = 0;
      qword_26AF837F0 = v7;
      uint64_t v8 = re::introspectionAllocator((re *)v7);
      int v10 = re::introspect_float((re *)1, v9);
      uint64_t v11 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v8 + 32))(v8, 72, 8);
      *(_DWORD *)uint64_t v11 = 1;
      *(void *)(v11 + 8) = "gain";
      *(void *)(v11 + 16) = v10;
      *(void *)(v11 + 24) = 0;
      *(void *)(v11 + 32) = 0x1C00000001;
      *(_DWORD *)(v11 + 40) = 0;
      *(void *)(v11 + 48) = 0;
      *(void *)(v11 + 56) = 0;
      *(_DWORD *)(v11 + 64) = 0;
      qword_26AF837F8 = v11;
      __cxa_guard_release(&qword_26AF83768);
    }
  }
  *((void *)this + 2) = 0x2000000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 2;
  *((void *)this + 8) = &qword_26AF837F0;
  *((void *)this + 9) = re::internal::defaultConstruct<re::ecs2::AmbientAudioComponent>;
  *((void *)this + re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 10) = re::internal::defaultDestruct<re::ecs2::AmbientAudioComponent>;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::ecs2::AmbientAudioComponent>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::ecs2::AmbientAudioComponent>;
  re::IntrospectionRegistry::add(this, v3);
  long long v12 = v14;
}

void re::internal::defaultConstruct<re::ecs2::AmbientAudioComponent>(int a1, int a2, ArcSharedObject *this)
{
  *(_OWORD *)this = 0u;
  *((_OWORD *)this + 1) = 0u;
  ArcSharedObject::ArcSharedObject(this, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F70E0;
  *(_DWORD *)(v3 + 28) = 0;
}

uint64_t re::internal::defaultDestruct<re::ecs2::AmbientAudioComponent>(uint64_t a1, uint64_t a2, uint64_t (***a3)(void))
{
  return (**a3)(a3);
}

void re::internal::defaultConstructV2<re::ecs2::AmbientAudioComponent>(ArcSharedObject *a1)
{
  *(_OWORD *)a1 = 0u;
  *((_OWORD *)a1 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(a1, 0);
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 24) = 0;
  *(void *)uint64_t v1 = &unk_26E6F70E0;
  *(_DWORD *)(v1 + 28) = 0;
}

uint64_t re::internal::defaultDestructV2<re::ecs2::AmbientAudioComponent>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

uint64_t re::ecs2::introspect_AmbientAudioComponent(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"AmbientAudioComponent", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_AmbientAudioComponent, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_AmbientAudioComponent, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::AmbientAudioComponent>, this);
}

void *re::ecs2::allocInfo_SpatialAudioComponent(re::ecs2 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83770, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF83770))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF83C90, "SpatialAudioComponent");
    __cxa_guard_release(&qword_26AF83770);
  }
  return &unk_26AF83C90;
}

void re::ecs2::initInfo_SpatialAudioComponent(re::ecs2 *this, re::IntrospectionBase *a2)
{
  v41[0] = 0xB3E78A7CC19C6796;
  v41[1] = "SpatialAudioComponent";
  re::StringID::destroyString((re::StringID *)v41);
  *((_OWORD *)this + 2) = v42;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83778, memory_order_acquire) & 1) == 0)
  {
    unint64_t v4 = (re *)__cxa_guard_acquire(&qword_26AF83778);
    if (v4)
    {
      uint64_t v5 = re::introspectionAllocator(v4);
      uint64_t v6 = re::ecs2::introspect_Component((re::IntrospectionBase **)1);
      uint64_t v7 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v5 + 32))(v5, 72, 8);
      *(_DWORD *)uint64_t v7 = 1;
      *(void *)(v7 + 8) = "Component";
      *(void *)(v7 + 16) = v6;
      *(void *)(v7 + 24) = 0;
      *(void *)(v7 + 32) = 0;
      *(_DWORD *)(v7 + 40) = 3;
      *(void *)(v7 + 48) = 0;
      *(void *)(v7 + 56) = 0;
      *(_DWORD *)(v7 + 64) = 0;
      qword_26AF83880 = v7;
      uint64_t v8 = re::introspectionAllocator((re *)v7);
      int v10 = re::introspect_float((re *)1, v9);
      uint64_t v11 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v8 + 32))(v8, 72, 8);
      *(_DWORD *)uint64_t v11 = 1;
      *(void *)(v11 + 8) = "gain";
      *(void *)(v11 + 16) = v10;
      *(void *)(v11 + 24) = 0;
      *(void *)(v11 + 32) = 0x3800000001;
      *(_DWORD *)(v11 + 40) = 0;
      *(void *)(v11 + 48) = 0;
      *(void *)(v11 + 56) = 0;
      *(_DWORD *)(v11 + 64) = 0;
      qword_26AF83888 = v11;
      long long v12 = re::introspectionAllocator((re *)v11);
      long long v14 = re::introspect_float((re *)1, v13);
      uint64_t v15 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v12 + 32))(v12, 72, 8);
      *(_DWORD *)uint64_t v15 = 1;
      *(void *)(v15 + 8) = "directLevel";
      *(void *)(v15 + 16) = v14;
      *(void *)(v15 + 24) = 0;
      *(void *)(v15 + 32) = 0x1C00000002;
      *(_DWORD *)(v15 + 40) = 0;
      *(void *)(v15 + 48) = 0;
      *(void *)(v15 + 56) = 0;
      *(_DWORD *)(v15 + 64) = 0;
      qword_26AF83890 = v15;
      uint64_t v16 = re::introspectionAllocator((re *)v15);
      uint64_t v18 = re::introspect_float((re *)1, v17);
      uint64_t v19 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v16 + 32))(v16, 72, 8);
      *(_DWORD *)uint64_t v19 = 1;
      *(void *)(v19 + 8) = "reverbLevel";
      *(void *)(v19 + 16) = v18;
      *(void *)(v19 + 24) = 0;
      *(void *)(v19 + 32) = 0x2000000003;
      *(_DWORD *)(v19 + 40) = 0;
      *(void *)(v19 + 48) = 0;
      *(void *)(v19 + 56) = 0;
      *(_DWORD *)(v19 + 64) = 0;
      qword_26AF83898 = v19;
      uint64_t v20 = re::introspectionAllocator((re *)v19);
      uint64_t v22 = introspect_REAudioSourceDirectivityMode(1, v21);
      uint64_t v23 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v20 + 32))(v20, 72, 8);
      *(_DWORD *)uint64_t v23 = 1;
      *(void *)(v23 + 8) = "sourceDirectivityMode";
      *(void *)(v23 + 16) = v22;
      *(void *)(v23 + 24) = 0;
      *(void *)(v23 + 32) = 0x2800000004;
      *(_DWORD *)(v23 + 40) = 0;
      *(void *)(v23 + 48) = 0;
      *(void *)(v23 + 56) = 0;
      *(_DWORD *)(v23 + 64) = 0;
      qword_26AF838A0 = v23;
      long long v24 = re::introspectionAllocator((re *)v23);
      float v26 = re::introspect_float((re *)1, v25);
      uint64_t v27 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v24 + 32))(v24, 72, 8);
      *(_DWORD *)uint64_t v27 = 1;
      *(void *)(v27 + 8) = "directivityFocus";
      *(void *)(v27 + 16) = v26;
      *(void *)(v27 + 24) = 0;
      *(void *)(v27 + 32) = 0x2C00000005;
      *(_DWORD *)(v27 + 40) = 0;
      *(void *)(v27 + 48) = 0;
      *(void *)(v27 + 56) = 0;
      *(_DWORD *)(v27 + 64) = 0;
      qword_26AF838A8 = v27;
      long long v28 = re::introspectionAllocator((re *)v27);
      uint64_t v30 = re::introspect_float((re *)1, v29);
      uint64_t v31 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v28 + 32))(v28, 72, 8);
      *(_DWORD *)uint64_t v31 = 1;
      *(void *)(v31 + 8) = "sphericalCapDiameter";
      *(void *)(v31 + 16) = v30;
      *(void *)(v31 + 24) = 0;
      *(void *)(v31 + 32) = 0x3000000006;
      *(_DWORD *)(v31 + 40) = 0;
      *(void *)(v31 + 48) = 0;
      *(void *)(v31 + 56) = 0;
      *(_DWORD *)(v31 + 64) = 0;
      qword_26AF838B0 = v31;
      long long v32 = re::introspectionAllocator((re *)v31);
      uint64_t v34 = re::introspect_float((re *)1, v33);
      uint64_t v35 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v32 + 32))(v32, 72, 8);
      *(_DWORD *)uint64_t v35 = 1;
      *(void *)(v35 + 8) = "sphericalCapOpeningAngle";
      *(void *)(v35 + 16) = v34;
      *(void *)(v35 + 24) = 0;
      *(void *)(v35 + 32) = 0x3400000007;
      *(_DWORD *)(v35 + 40) = 0;
      *(void *)(v35 + 48) = 0;
      *(void *)(v35 + 56) = 0;
      *(_DWORD *)(v35 + 64) = 0;
      qword_26AF838B8 = v35;
      uint64_t v36 = re::introspectionAllocator((re *)v35);
      uint64_t v38 = re::introspect_float((re *)1, v37);
      uint64_t v39 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v36 + 32))(v36, 72, 8);
      *(_DWORD *)uint64_t v39 = 1;
      *(void *)(v39 + 8) = "rolloffFactor";
      *(void *)(v39 + 16) = v38;
      *(void *)(v39 + 24) = 0;
      *(void *)(v39 + 32) = 0x2400000008;
      *(_DWORD *)(v39 + 40) = 0;
      *(void *)(v39 + 48) = 0;
      *(void *)(v39 + 56) = 0;
      *(_DWORD *)(v39 + 64) = 0;
      qword_26AF838C0 = v39;
      __cxa_guard_release(&qword_26AF83778);
    }
  }
  *((void *)this + 2) = 0x4000000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 9;
  *((void *)this + 8) = &qword_26AF83880;
  *((void *)this + 9) = re::internal::defaultConstruct<re::ecs2::SpatialAudioComponent>;
  *((void *)this + re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 10) = re::internal::defaultDestruct<re::ecs2::SpatialAudioComponent>;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::ecs2::SpatialAudioComponent>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::ecs2::SpatialAudioComponent>;
  re::IntrospectionRegistry::add(this, v3);
  long long v40 = v42;
}

double re::internal::defaultConstruct<re::ecs2::SpatialAudioComponent>(uint64_t a1, uint64_t a2, ArcSharedObject *a3)
{
  return re::make::shared::unsafelyInplace<re::ecs2::SpatialAudioComponent>(a3);
}

uint64_t re::internal::defaultDestruct<re::ecs2::SpatialAudioComponent>(uint64_t a1, uint64_t a2, uint64_t (***a3)(void))
{
  return (**a3)(a3);
}

uint64_t re::internal::defaultDestructV2<re::ecs2::SpatialAudioComponent>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

uint64_t re::ecs2::introspect_SpatialAudioComponent(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"SpatialAudioComponent", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_SpatialAudioComponent, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_SpatialAudioComponent, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::SpatialAudioComponent>, this);
}

void re::ecs2::AudioPlayerSystem::~AudioPlayerSystem(re::ecs2::AudioPlayerSystem *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 240);
  std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 200);
  re::HashTable<re::ecs2::Scene const*,re::HashTable<unsigned long long,re::SharedPtr<re::AudioSourceState>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,true,false>::deinit((uint64_t *)this + 14);

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::AudioPlayerSystem::typeInfo(re::ecs2::AudioPlayerSystem *this)
{
  return re::internal::getOrCreateInfo((re::internal *)"AudioPlayerSystem", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_AudioPlayerSystem, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_AudioPlayerSystem, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::AudioPlayerSystem>, 0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AudioPlayerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::AudioPlayerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AudioPlayerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::AudioPlayerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::AudioPlayerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

uint64_t std::__throw_bad_optional_access[abi:nn180100]()
{
  return ___ZL14getHumanIRPathv_block_invoke();
}

void ___ZL14getHumanIRPathv_block_invoke()
{
  re::Bundle::reResourcesFramework((uint64_t)v6);
  if (v6[0]) {
    id v0 = v7;
  }
  else {
    id v0 = 0;
  }
  id v1 = v0;
  if (v6[0]) {

  }
  uint64_t v2 = [v1 pathForResource:@"Human" ofType:@"ir"];
  uint64_t v3 = (void *)qword_26AF83788;
  qword_26AF83788 = v2;

  uint64_t v4 = [(id)qword_26AF83788 UTF8String];
  uint64_t v5 = "";
  if (v4) {
    uint64_t v5 = (const char *)v4;
  }
  qword_26AF83780 = (uint64_t)v5;
}

double re::HashTable<re::ecs2::Scene const*,re::HashTable<unsigned long long,re::SharedPtr<re::AudioSourceState>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,true,false>::deinit(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2)
  {
    unint64_t v3 = *((unsigned int *)a1 + 8);
    if (v3)
    {
      uint64_t v4 = 0;
      for (unint64_t i = 0; i < v3; ++i)
      {
        uint64_t v6 = a1[2] + v4;
        int v7 = *(_DWORD *)(v6 + 8);
        if (v7 < 0)
        {
          *(_DWORD *)(v6 + 8) = v7 & 0x7FFFFFFF;
          re::HashTable<unsigned long long,re::SharedPtr<re::RealityFile>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::deinit((uint64_t *)(v6 + 24));
          unint64_t v3 = *((unsigned int *)a1 + 8);
        }
        v4 += 72;
      }
      uint64_t v2 = *a1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)v2 + 40))(v2, a1[1]);
    *((_DWORD *)a1 + 8) = 0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
    *(void *)&double result = 0x7FFFFFFFLL;
    *(uint64_t *)((char *)a1 + 36) = 0x7FFFFFFFLL;
  }
  return result;
}

void *re::IntrospectionHashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::~IntrospectionHashTable(void *a1)
{
  *a1 = &unk_26E6C0400;
  uint64_t v2 = (uint64_t)(a1 + 6);
  re::SerializedReference<re::IntrospectionBase const*>::reset((uint64_t)(a1 + 8));
  re::SerializedReference<re::IntrospectionBase const*>::reset(v2);
  *a1 = &unk_26E6DECE0;
  objc_destructInstance(a1 + 1);
  return a1;
}

void re::IntrospectionHashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::~IntrospectionHashTable(void *a1)
{
  *a1 = &unk_26E6C0400;
  uint64_t v2 = (uint64_t)(a1 + 6);
  re::SerializedReference<re::IntrospectionBase const*>::reset((uint64_t)(a1 + 8));
  re::SerializedReference<re::IntrospectionBase const*>::reset(v2);
  *a1 = &unk_26E6DECE0;
  objc_destructInstance(a1 + 1);
  JUMPOUT(0x237DBCBD0);
}

double re::IntrospectionHashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::construct(uint64_t a1, uint64_t a2)
{
  double result = 0.0;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)a2 = 0u;
  *(_DWORD *)(a2 + 36) = 0x7FFFFFFF;
  return result;
}

double re::IntrospectionHashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::destroy(uint64_t a1, uint64_t *a2)
{
  return re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::deinit(a2);
}

void re::IntrospectionHashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::init(uint64_t a1, uint64_t *a2, uint64_t a3, unsigned int a4)
{
  re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::deinit(a2);
  if (a4 <= 3) {
    signed int v7 = 3;
  }
  else {
    signed int v7 = a4;
  }
  re::HashTable<re::DynamicString,re::USKTextureProvider,re::Hash<re::DynamicString>,re::EqualTo<re::DynamicString>,true,false>::init((uint64_t)a2, a3, v7);
}

void re::IntrospectionHashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::setCapacity(uint64_t a1, uint64_t a2, unsigned int a3)
{
}

uint64_t re::IntrospectionHashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::size(uint64_t a1, uint64_t a2)
{
  return *(unsigned int *)(a2 + 28);
}

void re::IntrospectionHashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::clear(uint64_t a1, uint64_t a2)
{
}

re::IntrospectionBase *re::IntrospectionHashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addElement(re::Allocator **a1, re *a2, int a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v40 = 0;
  long long v38 = 0u;
  long long v39 = 0u;
  long long v36 = 0u;
  long long v37 = 0u;
  long long v34 = 0uLL;
  memset(v33, 0, sizeof(v33));
  long long v24 = 0u;
  long long v25 = 0u;
  uint64_t v26 = 9;
  uint64_t v27 = 1065353216;
  long long v28 = 0uLL;
  long long v29 = 0x3F80000000000000uLL;
  __asm { FMOV            V0.2S, #1.0 }
  long long v30 = _D0;
  uint64_t v31 = 0;
  uint64_t v32 = 1065353216;
  BYTE8(v33[2]) = 0;
  long long v35 = 0uLL;
  uint64_t v15 = (_anonymous_namespace_ *)re::DynamicString::setCapacity(&v34, 0);
  LODWORD(v36) = 1;
  *(void *)((char *)&v36 + 4) = 0x3E051EB800000000;
  HIDWORD(v36) = 1106247680;
  long long v37 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  re::DynamicString::setCapacity(&v38, 0);
  LOWORD(v40) = 0;
  uint64_t v22 = (re::IntrospectionBase *)re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::add(a4, a5, (uint64_t)&v24);
  if ((void)v38)
  {
    if (BYTE8(v38)) {
      (*(void (**)(void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, uint64_t, uint64_t))(*(void *)v38 + 40))(v38, v39, v16, v17, v18, v19, v20, v21, v24, *((void *)&v24 + 1), v25, *((void *)&v25 + 1), v26, v27);
    }
    long long v38 = 0u;
    long long v39 = 0u;
  }
  if ((void)v34)
  {
    if (BYTE8(v34)) {
      (*(void (**)(void))(*(void *)v34 + 40))();
    }
    long long v34 = 0u;
    long long v35 = 0u;
  }
  if (LOBYTE(v33[0]) && *((void *)&v33[0] + 1))
  {
    if (v33[1]) {
      (*(void (**)(void))(**((void **)&v33[0] + 1) + 40))();
    }
    memset((char *)v33 + 8, 0, 32);
  }
  re::AssetHandle::~AssetHandle((re::AssetHandle *)((char *)&v24 + 8));
  re::introspectionInitElement(a2, a3, a1[8], v22);
  return v22;
}

uint64_t re::IntrospectionHashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::iterate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(unsigned int *)(a2 + 32);
  if (v5)
  {
    uint64_t v6 = 0;
    signed int v7 = (_DWORD *)(*(void *)(a2 + 16) + 8);
    while ((*v7 & 0x80000000) == 0)
    {
      v7 += 72;
      if (v5 == ++v6)
      {
        LODWORD(v6) = *(_DWORD *)(a2 + 32);
        break;
      }
    }
  }
  else
  {
    LODWORD(v6) = 0;
  }
  if (v5 == v6) {
    return 1;
  }
  uint64_t v9 = v6;
  do
  {
    uint64_t result = std::function<BOOL ()(void const*,void *)>::operator()(a3, *(void *)(a2 + 16) + 288 * v9 + 16, *(void *)(a2 + 16) + 288 * v9 + 24);
    if (!result) {
      break;
    }
    int v10 = *(_DWORD *)(a2 + 32) <= (v6 + 1) ? v6 + 1 : *(_DWORD *)(a2 + 32);
    while (1)
    {
      uint64_t v9 = (v6 + 1);
      if (v10 - 1 == v6) {
        break;
      }
      LODWORD(v6) = v6 + 1;
      int v11 = v9;
      if ((*(_DWORD *)(*(void *)(a2 + 16) + 288 * v9 + 8) & 0x80000000) != 0) {
        goto LABEL_18;
      }
    }
    int v11 = v10;
LABEL_18:
    LODWORD(v6) = v11;
  }
  while (v5 != v11);
  return result;
}

double re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::deinit(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2)
  {
    if (*((_DWORD *)a1 + 8))
    {
      uint64_t v3 = 0;
      unint64_t v4 = 0;
      do
      {
        re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::EntryWithHash::free(a1[2] + v3);
        ++v4;
        v3 += 288;
      }
      while (v4 < *((unsigned int *)a1 + 8));
      uint64_t v2 = *a1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)v2 + 40))(v2, a1[1]);
    *((_DWORD *)a1 + 8) = 0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
    *(void *)&double result = 0x7FFFFFFFLL;
    *(uint64_t *)((char *)a1 + 36) = 0x7FFFFFFFLL;
  }
  return result;
}

void re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::EntryWithHash::free(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8);
  if (v1 < 0)
  {
    *(_DWORD *)(a1 + 8) = v1 & 0x7FFFFFFF;
    re::DynamicString::deinit((re::DynamicString *)(a1 + 248));
    re::DynamicString::deinit((re::DynamicString *)(a1 + 184));
    if (*(unsigned char *)(a1 + 136)) {
      re::DynamicString::deinit((re::DynamicString *)(a1 + 144));
    }
    re::AssetHandle::~AssetHandle((re::AssetHandle *)(a1 + 32));
  }
}

void re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::setCapacity(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = *(void *)a1;
  if (*(void *)a1)
  {
    if (a2 && *(_DWORD *)(a1 + 24) != a2 && *(_DWORD *)(a1 + 28) <= a2)
    {
      memset(v13, 0, 36);
      *(void *)&v13[36] = 0x7FFFFFFFLL;
      re::HashTable<re::DynamicString,re::USKTextureProvider,re::Hash<re::DynamicString>,re::EqualTo<re::DynamicString>,true,false>::init((uint64_t)v13, v4, a2);
      long long v5 = *(_OWORD *)v13;
      *(_OWORD *)int v13 = *(_OWORD *)a1;
      *(_OWORD *)a1 = v5;
      uint64_t v6 = *(void *)&v13[16];
      uint64_t v7 = *(void *)(a1 + 16);
      *(void *)&v13[16] = v7;
      *(void *)(a1 + 16) = v6;
      long long v9 = *(_OWORD *)&v13[24];
      *(_OWORD *)&unsigned char v13[24] = *(_OWORD *)(a1 + 24);
      unsigned int v8 = *(_DWORD *)&v13[32];
      *(_OWORD *)(a1 + 24) = v9;
      uint64_t v10 = v8;
      if (v8)
      {
        uint64_t v11 = v7 + 16;
        do
        {
          if ((*(_DWORD *)(v11 - 8) & 0x80000000) != 0) {
            re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addAsMove(a1, *(void *)(v11 - 16) % (unint64_t)*(unsigned int *)(a1 + 24), *(void *)(v11 - 16), v11, v11 + 8);
          }
          v11 += 288;
          --v10;
        }
        while (v10);
      }
      re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::deinit((uint64_t *)v13);
    }
  }
  else
  {
    if (a2) {
      signed int v12 = a2;
    }
    else {
      signed int v12 = 3;
    }
  }
}

uint64_t re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addAsMove(uint64_t a1, unsigned int a2, unint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v9 = *(unsigned int *)(a1 + 36);
  if (v9 == 0x7FFFFFFF)
  {
    uint64_t v9 = *(unsigned int *)(a1 + 32);
    int v10 = v9;
    if (v9 == *(_DWORD *)(a1 + 24))
    {
      re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::setCapacity(a1, 2 * *(_DWORD *)(a1 + 28));
      a2 = a3 % *(unsigned int *)(a1 + 24);
      int v10 = *(_DWORD *)(a1 + 32);
    }
    *(_DWORD *)(a1 + 32) = v10 + 1;
    uint64_t v11 = *(void *)(a1 + 16);
    int v12 = *(_DWORD *)(v11 + 288 * v9 + 8);
  }
  else
  {
    uint64_t v11 = *(void *)(a1 + 16);
    int v12 = *(_DWORD *)(v11 + 288 * v9 + 8);
    *(_DWORD *)(a1 + 36) = v12 & 0x7FFFFFFF;
  }
  *(_DWORD *)(v11 + 288 * v9 + 8) = v12 | 0x80000000;
  *(_DWORD *)(*(void *)(a1 + 16) + 288 * v9 + 8) = *(_DWORD *)(*(void *)(a1 + 16) + 288 * v9 + 8) & 0x80000000 | *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2);
  *(void *)(*(void *)(a1 + 16) + 288 * v9) = a3;
  *(void *)(*(void *)(a1 + 16) + 288 * v9 + 16) = *a4;
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = v13 + 288 * v9;
  *(void *)(v14 + 24) = *(void *)a5;
  *(void *)(v14 + 32) = 0;
  *(void *)(v14 + 40) = 0;
  *(void *)(v14 + 48) = 0;
  *(void *)(v14 + 40) = *(void *)(a5 + 16);
  *(void *)(a5 + 16) = 0;
  uint64_t v15 = *(void *)(v14 + 32);
  *(void *)(v14 + 32) = 0;
  *(void *)(v14 + 32) = *(void *)(a5 + 8);
  *(void *)(a5 + 8) = v15;
  uint64_t v16 = *(void *)(v14 + 48);
  *(void *)(v14 + 48) = *(void *)(a5 + 24);
  *(void *)(a5 + 24) = v16;
  long long v17 = *(_OWORD *)(a5 + 48);
  long long v18 = *(_OWORD *)(a5 + 64);
  long long v19 = *(_OWORD *)(a5 + 80);
  *(_OWORD *)(v14 + 116) = *(_OWORD *)(a5 + 92);
  *(_OWORD *)(v14 + 104) = v19;
  *(_OWORD *)(v14 + 88) = v18;
  *(_OWORD *)(v14 + 72) = v17;
  *(_OWORD *)(v14 + 56) = *(_OWORD *)(a5 + 32);
  LODWORD(v16) = *(unsigned __int8 *)(a5 + 112);
  *(unsigned char *)(v14 + 136) = v16;
  if (v16)
  {
    uint64_t v20 = v13 + 288 * v9;
    *(_OWORD *)(v20 + 144) = 0u;
    *(_OWORD *)(v20 + 160) = 0u;
    *(void *)(v20 + 168) = *(void *)(a5 + 144);
    uint64_t v21 = *(void *)(a5 + 128);
    *(void *)(v20 + 144) = *(void *)(a5 + 120);
    *(void *)(a5 + 120) = 0;
    uint64_t v22 = *(void *)(a5 + 136);
    *(void *)(a5 + 144) = 0;
    uint64_t v24 = *(void *)(v20 + 152);
    uint64_t v23 = *(void *)(v20 + 160);
    *(void *)(v20 + 152) = v21;
    *(void *)(v20 + 160) = v22;
    *(void *)(a5 + 128) = v24;
    *(void *)(a5 + 136) = v23;
  }
  uint64_t v25 = v13 + 288 * v9;
  *(unsigned char *)(v25 + 176) = *(unsigned char *)(a5 + 152);
  *(_OWORD *)(v25 + 184) = 0u;
  *(_OWORD *)(v25 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 200) = 0u;
  *(void *)(v25 + 208) = *(void *)(a5 + 184);
  uint64_t v26 = *(void *)(a5 + 168);
  *(void *)(v25 + 184) = *(void *)(a5 + 160);
  *(void *)(a5 + 160) = 0;
  uint64_t v27 = *(void *)(a5 + 176);
  *(void *)(a5 + 184) = 0;
  uint64_t v29 = *(void *)(v25 + 192);
  uint64_t v28 = *(void *)(v25 + 200);
  *(void *)(v25 + 192) = v26;
  *(void *)(v25 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 200) = v27;
  *(void *)(a5 + 168) = v29;
  *(void *)(a5 + 176) = v28;
  long long v30 = *(_OWORD *)(a5 + 192);
  *(_OWORD *)(v25 + 232) = *(_OWORD *)(a5 + 208);
  *(_OWORD *)(v25 + 216) = v30;
  *(_OWORD *)(v25 + 264) = 0u;
  *(_OWORD *)(v25 + 248) = 0u;
  *(void *)(v25 + 272) = *(void *)(a5 + 248);
  uint64_t v31 = *(void *)(a5 + 232);
  *(void *)(v25 + 248) = *(void *)(a5 + 224);
  *(void *)(a5 + 224) = 0;
  uint64_t v32 = *(void *)(a5 + 240);
  *(void *)(a5 + 248) = 0;
  uint64_t v34 = *(void *)(v25 + 256);
  uint64_t v33 = *(void *)(v25 + 264);
  *(void *)(v25 + 256) = v31;
  *(void *)(v25 + 264) = v32;
  *(void *)(a5 + 232) = v34;
  *(void *)(a5 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 240) = v33;
  *(_WORD *)(v25 + 280) = *(_WORD *)(a5 + 256);
  *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2) = v9;
  ++*(_DWORD *)(a1 + 28);
  return v9;
}

void re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::clear(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 28))
  {
    uint64_t v2 = *(unsigned int *)(a1 + 24);
    if (v2) {
      memset_pattern16(*(void **)(a1 + 8), &unk_2343655D0, 4 * v2);
    }
    if (*(_DWORD *)(a1 + 32))
    {
      uint64_t v3 = 0;
      unint64_t v4 = 0;
      do
      {
        re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::EntryWithHash::free(*(void *)(a1 + 16) + v3);
        ++v4;
        v3 += 288;
      }
      while (v4 < *(unsigned int *)(a1 + 32));
    }
    *(_DWORD *)(a1 + 28) = 0;
    *(_DWORD *)(a1 + 32) = 0;
    int v5 = *(_DWORD *)(a1 + 40) + 1;
    *(_DWORD *)(a1 + 36) = 0x7FFFFFFF;
    *(_DWORD *)(a1 + 40) = v5;
  }
}

uint64_t re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::add(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = 0xBF58476D1CE4E5B9 * (*a2 ^ ((unint64_t)*a2 >> 30));
  unint64_t v8 = (0x94D049BB133111EBLL * (v7 ^ (v7 >> 27))) ^ ((0x94D049BB133111EBLL * (v7 ^ (v7 >> 27))) >> 31);
  if (!*(void *)a1)
  {
    LODWORD(v9) = 0;
    goto LABEL_8;
  }
  unint64_t v9 = v8 % *(unsigned int *)(a1 + 24);
  uint64_t v10 = *(unsigned int *)(*(void *)(a1 + 8) + 4 * v9);
  if (v10 == 0x7FFFFFFF)
  {
LABEL_8:
    unsigned int v23 = re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addAsMove(a1, v9, v8, a2, a3);
    ++*(_DWORD *)(a1 + 40);
    uint64_t v22 = *(void *)(a1 + 16) + 288 * v23;
    return v22 + 24;
  }
  uint64_t v11 = *(void *)(a1 + 16);
  while (*(void *)(v11 + 288 * v10 + 16) != v6)
  {
    uint64_t v10 = *(_DWORD *)(v11 + 288 * v10 + 8) & 0x7FFFFFFF;
    if (v10 == 0x7FFFFFFF) {
      goto LABEL_8;
    }
  }
  uint64_t v12 = 9 * v10;
  uint64_t v13 = v11 + 288 * v10;
  uint64_t v14 = *(void *)(v13 + 40);
  *(void *)(v13 + 40) = *(void *)(a3 + 16);
  *(void *)(a3 + 16) = v14;
  uint64_t v15 = *(void *)(v13 + 32);
  *(void *)(v13 + 32) = 0;
  uint64_t v16 = *(void *)(a3 + 8);
  *(void *)(v13 + 24) = *(void *)a3;
  *(void *)(v13 + 32) = v16;
  *(void *)(a3 + 8) = v15;
  uint64_t v17 = *(void *)(v13 + 48);
  *(void *)(v13 + 48) = *(void *)(a3 + 24);
  *(void *)(a3 + 24) = v17;
  *(_OWORD *)(v13 + 56) = *(_OWORD *)(a3 + 32);
  long long v18 = *(_OWORD *)(a3 + 48);
  long long v19 = *(_OWORD *)(a3 + 64);
  long long v20 = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(v13 + 116) = *(_OWORD *)(a3 + 92);
  *(_OWORD *)(v13 + 104) = v20;
  *(_OWORD *)(v13 + 88) = v19;
  *(_OWORD *)(v13 + 72) = v18;
  re::Optional<re::DynamicString>::operator=((unsigned __int8 *)(v13 + 136), (void *)(a3 + 112));
  *(unsigned char *)(v13 + 176) = *(unsigned char *)(a3 + 152);
  re::DynamicString::operator=((re::DynamicString *)(v13 + 184), (re::DynamicString *)(a3 + 160));
  long long v21 = *(_OWORD *)(a3 + 192);
  *(_OWORD *)(v13 + 232) = *(_OWORD *)(a3 + 208);
  *(_OWORD *)(v13 + 216) = v21;
  re::DynamicString::operator=((re::DynamicString *)(v13 + 248), (re::DynamicString *)(a3 + 224));
  *(_WORD *)(v13 + 280) = *(_WORD *)(a3 + 256);
  ++*(_DWORD *)(a1 + 40);
  uint64_t v22 = *(void *)(a1 + 16) + 32 * v12;
  return v22 + 24;
}

void re::TypeBuilderHelper::registerHashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#1}::__invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_DWORD *)(a1 + 36) = 0x7FFFFFFF;
  re::HashTable<re::DynamicString,re::USKTextureProvider,re::Hash<re::DynamicString>,re::EqualTo<re::DynamicString>,true,false>::init(a1, a3, 3);
}

double re::TypeBuilderHelper::registerHashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#2}::__invoke(uint64_t *a1)
{
  re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::deinit(a1);
  return re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::deinit(a1);
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#1}::__invoke(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

void re::TypeBuilderHelper::registerHashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *)#1}::__invoke(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (*a1 == a3)
  {
    re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::clear((uint64_t)a1);
  }
  else
  {
    re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::deinit(a1);
    re::HashTable<re::DynamicString,re::USKTextureProvider,re::Hash<re::DynamicString>,re::EqualTo<re::DynamicString>,true,false>::init((uint64_t)a1, a3, 3);
  }
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#3}::__invoke(uint64_t a1, void **a2, re::Allocator *a3, uint64_t *a4)
{
  re::TypeRegistry::typeInfo(*a2, a2[2][10], v12);
  re::TypeInfo::TypeInfo((uint64_t)v11, (uint64_t)v13);
  uint64_t Instance = re::TypeInfo::createInstance((re::TypeInfo *)v11, a3, 0);
  uint64_t v9 = re::HashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::add(a1, a4, (uint64_t)Instance);
  re::TypeRegistry::typeInfo(*a2, a2[2][10], v12);
  re::TypeInfo::TypeInfo((uint64_t)v11, (uint64_t)v13);
  re::TypeInfo::releaseInstance((re::TypeInfo *)v11, Instance, a3, 0);
  return v9;
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::Allocator *)#1}::__invoke(uint64_t a1, uint64_t a2)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a2 + 32))(a2, 40, 8);
  *(void *)uint64_t result = a1;
  *(_DWORD *)(result + 8) = *(_DWORD *)(a1 + 40);
  *(unsigned char *)(result + 16) = 0;
  return result;
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#2}::__invoke(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  if (*((_DWORD *)a1 + 2) == *(_DWORD *)(*a1 + 40))
  {
    uint64_t v3 = *(unsigned int *)(v2 + 32);
    if (*((unsigned char *)a1 + 16))
    {
      int v4 = *((_DWORD *)a1 + 8);
      if (v4 == v3)
      {
        LODWORD(vre::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = *(_DWORD *)(v2 + 32);
      }
      else
      {
        uint64_t v7 = a1[3];
        unsigned int v8 = *(_DWORD *)(v7 + 32);
        unsigned int v9 = v4 + 1;
        do
        {
          LODWORD(vre::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = v9;
          *((_DWORD *)a1 + 8) = v9;
          if (v9 >= v8) {
            break;
          }
          int v10 = *(_DWORD *)(*(void *)(v7 + 16) + 288 * v9++ + 8);
        }
        while ((v10 & 0x80000000) == 0);
      }
    }
    else
    {
      uint64_t v5 = 0;
      if (v3)
      {
        uint64_t v6 = (_DWORD *)(*(void *)(v2 + 16) + 8);
        while ((*v6 & 0x80000000) == 0)
        {
          v6 += 72;
          if (v3 == ++v5)
          {
            LODWORD(vre::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = *(_DWORD *)(v2 + 32);
            break;
          }
        }
      }
      *((unsigned char *)a1 + 16) = 1;
      a1[3] = v2;
      a1[4] = v5;
      LODWORD(v3) = *(_DWORD *)(v2 + 32);
    }
    return v5 != v3;
  }
  else
  {
    re::internal::assertLog((re::internal *)4, a2, "assertion failure: '%s' (%s:line %i) HashTable entries may not be added or removed during iteration.", "iter->originalVersion == iter->hashTable->version()", "operator()", 583);
    uint64_t result = _os_crash();
    __break(1u);
  }
  return result;
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#3}::__invoke(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a1 + 8) == *(_DWORD *)(*(void *)a1 + 40)) {
    return *(void *)(*(void *)(a1 + 24) + 16) + 288 * *(unsigned int *)(a1 + 32) + 16;
  }
  re::internal::assertLog((re::internal *)4, a2, "assertion failure: '%s' (%s:line %i) HashTable entries may not be added or removed during iteration.", "iter->originalVersion == iter->hashTable->version()", "operator()", 598);
  uint64_t result = _os_crash();
  __break(1u);
  return result;
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#4}::__invoke(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a1 + 8) == *(_DWORD *)(*(void *)a1 + 40)) {
    return *(void *)(*(void *)(a1 + 24) + 16) + 288 * *(unsigned int *)(a1 + 32) + 24;
  }
  re::internal::assertLog((re::internal *)4, a2, "assertion failure: '%s' (%s:line %i) HashTable entries may not be added or removed during iteration.", "iter->originalVersion == iter->hashTable->version()", "operator()", 607);
  uint64_t result = _os_crash();
  __break(1u);
  return result;
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned long long,re::AudioSourceSyncState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::Allocator *)#2}::__invoke(_DWORD *a1, uint64_t a2)
{
  if (a1[2] == *(_DWORD *)(*(void *)a1 + 40))
  {
    uint64_t v2 = *(uint64_t (**)(uint64_t, _DWORD *))(*(void *)a2 + 40);
    return v2(a2, a1);
  }
  else
  {
    re::internal::assertLog((re::internal *)4, a2, "assertion failure: '%s' (%s:line %i) HashTable entries may not be added or removed during iteration.", "iter->originalVersion == iter->hashTable->version()", "operator()", 616);
    uint64_t result = _os_crash();
    __break(1u);
  }
  return result;
}

re::ecs2::AudioPlayerSystem *re::ecs2::AudioPlayerSystem::AudioPlayerSystem(re::ecs2::AudioPlayerSystem *this)
{
  re::ecs2::System::System((uint64_t)this, 1, 1);
  void *v2 = &unk_26E6F7C78;
  uint64_t v3 = MEMORY[0x263EF83A0];
  id v4 = MEMORY[0x263EF83A0];
  *((void *)this + 13) = v3;
  *((_OWORD *)this + re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 0u;
  *((_OWORD *)this + 8) = 0u;
  *((_DWORD *)this + 36) = 0;
  *(void *)((char *)this + 148) = 0x7FFFFFFFLL;
  *((_OWORD *)this + 10) = 0u;
  *((_OWORD *)this + re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 11) = 0u;
  *((_OWORD *)this + 12) = 0u;
  *((_OWORD *)this + 13) = 0u;
  *((void *)this + 28) = 0;
  *((_DWORD *)this + 58) = 1065353216;
  *((_OWORD *)this + 1re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = 0u;
  *((_OWORD *)this + 16) = 0u;
  *((_DWORD *)this + 68) = 1065353216;
  return this;
}

id re::internal::defaultRetain<re::ecs2::AudioPlayerSystem>(void)::{lambda(void *)#1}::__invoke(uint64_t a1)
{
  return (id)(a1 + 8);
}

void re::internal::defaultRelease<re::ecs2::AudioPlayerSystem>(void)::{lambda(void *)#1}::__invoke(uint64_t a1)
{
}

double re::HashTable<unsigned long long,void({block_pointer} {__strong})(unsigned long long,REAudioPlaybackState,REAudioPlaybackState),re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::deinit(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2)
  {
    unint64_t v3 = *((unsigned int *)a1 + 8);
    if (v3)
    {
      uint64_t v4 = 0;
      for (unint64_t i = 0; i < v3; ++i)
      {
        uint64_t v6 = a1[2] + v4;
        int v7 = *(_DWORD *)(v6 + 8);
        if (v7 < 0)
        {
          *(_DWORD *)(v6 + 8) = v7 & 0x7FFFFFFF;

          unint64_t v3 = *((unsigned int *)a1 + 8);
        }
        v4 += 32;
      }
      uint64_t v2 = *a1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)v2 + 40))(v2, a1[1]);
    *((_DWORD *)a1 + 8) = 0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
    *(void *)&double result = 0x7FFFFFFFLL;
    *(uint64_t *)((char *)a1 + 36) = 0x7FFFFFFFLL;
  }
  return result;
}

void re::HashTable<unsigned long long,void({block_pointer} {__strong})(unsigned long long,REAudioPlaybackState,REAudioPlaybackState),re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::setCapacity(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = *(void *)a1;
  if (*(void *)a1)
  {
    if (a2 && *(_DWORD *)(a1 + 24) != a2 && *(_DWORD *)(a1 + 28) <= a2)
    {
      memset(v13, 0, 36);
      *(void *)&v13[36] = 0x7FFFFFFFLL;
      re::HashTable<re::StringID,unsigned int,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::init((uint64_t)v13, v4, a2);
      long long v5 = *(_OWORD *)v13;
      *(_OWORD *)uint64_t v13 = *(_OWORD *)a1;
      *(_OWORD *)a1 = v5;
      uint64_t v6 = *(void *)&v13[16];
      *(void *)&v13[16] = *(void *)(a1 + 16);
      *(void *)(a1 + 16) = v6;
      long long v8 = *(_OWORD *)&v13[24];
      *(_OWORD *)&unsigned char v13[24] = *(_OWORD *)(a1 + 24);
      unsigned int v7 = *(_DWORD *)&v13[32];
      *(_OWORD *)(a1 + 24) = v8;
      unsigned int v9 = v7;
      if (v7)
      {
        uint64_t v10 = 0;
        unint64_t v11 = 0;
        do
        {
          if ((*(_DWORD *)(*(void *)&v13[16] + v10 + 8) & 0x80000000) != 0)
          {
            re::HashTable<unsigned long long,void({block_pointer} {__strong})(unsigned long long,REAudioPlaybackState,REAudioPlaybackState),re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addAsMove(a1, *(void *)(*(void *)&v13[16] + v10) % (unint64_t)*(unsigned int *)(a1 + 24), *(void *)(*(void *)&v13[16] + v10), (void *)(*(void *)&v13[16] + v10 + 16), (const void **)(*(void *)&v13[16] + v10 + 24));
            unsigned int v9 = *(_DWORD *)&v13[32];
          }
          ++v11;
          v10 += 32;
        }
        while (v11 < v9);
      }
      re::HashTable<unsigned long long,void({block_pointer} {__strong})(unsigned long long,REAudioPlaybackState,REAudioPlaybackState),re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::deinit((uint64_t *)v13);
    }
  }
  else
  {
    if (a2) {
      signed int v12 = a2;
    }
    else {
      signed int v12 = 3;
    }
  }
}

uint64_t re::HashTable<unsigned long long,void({block_pointer} {__strong})(unsigned long long,REAudioPlaybackState,REAudioPlaybackState),re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addAsMove(uint64_t a1, unsigned int a2, unint64_t a3, void *a4, const void **a5)
{
  uint64_t v10 = *(unsigned int *)(a1 + 36);
  if (v10 == 0x7FFFFFFF)
  {
    uint64_t v10 = *(unsigned int *)(a1 + 32);
    int v11 = v10;
    if (v10 == *(_DWORD *)(a1 + 24))
    {
      re::HashTable<unsigned long long,void({block_pointer} {__strong})(unsigned long long,REAudioPlaybackState,REAudioPlaybackState),re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::setCapacity(a1, (2 * *(_DWORD *)(a1 + 28)));
      a2 = a3 % *(unsigned int *)(a1 + 24);
      int v11 = *(_DWORD *)(a1 + 32);
    }
    *(_DWORD *)(a1 + 32) = v11 + 1;
    uint64_t v12 = *(void *)(a1 + 16);
    int v13 = *(_DWORD *)(v12 + 32 * v10 + 8);
  }
  else
  {
    uint64_t v12 = *(void *)(a1 + 16);
    int v13 = *(_DWORD *)(v12 + 32 * v10 + 8);
    *(_DWORD *)(a1 + 36) = v13 & 0x7FFFFFFF;
  }
  *(_DWORD *)(v12 + 32 * v10 + 8) = v13 | 0x80000000;
  *(_DWORD *)(*(void *)(a1 + 16) + 32 * v10 + 8) = *(_DWORD *)(*(void *)(a1 + 16) + 32 * v10 + 8) & 0x80000000 | *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2);
  *(void *)(*(void *)(a1 + 16) + 32 * v10) = a3;
  *(void *)(*(void *)(a1 + 16) + 32 * v10 + 16) = *a4;
  uint64_t v14 = *(void *)(a1 + 16) + 32 * v10;
  *(void *)(v14 + 24) = _Block_copy(*a5);
  *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2) = v10;
  ++*(_DWORD *)(a1 + 28);
  return v10;
}

void re::DynamicArray<re::AssetHandle>::removeAt(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 <= a2)
  {
    os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
    _os_log_send_and_compose_impl();
    _os_crash_msg();
    __break(1u);
  }
  if (v2 - 1 > a2)
  {
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = v4 + 24 * v2;
    uint64_t v6 = (long long *)(v4 + 24 * a2);
    long long v7 = *v6;
    *(void *)uint64_t v6 = 0;
    uint64_t v8 = *(void *)(v5 - 16);
    *(void *)uint64_t v6 = *(void *)(v5 - 24);
    *((void *)v6 + 1) = v8;
    *(_OWORD *)(v5 - 24) = v7;
    uint64_t v9 = *((void *)v6 + 2);
    *((void *)v6 + 2) = *(void *)(v5 - 8);
    *(void *)(v5 - 8) = v9;
  }
  re::AssetHandle::~AssetHandle((re::AssetHandle *)(*(void *)(a1 + 32) + 24 * v2 - 24));
  --*(void *)(a1 + 16);
  ++*(_DWORD *)(a1 + 24);
}

uint64_t re::HashTable<unsigned long long,void (*)(unsigned long long),re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addEmplace<void (*&)(unsigned long long)>(uint64_t a1, unsigned int a2, unint64_t a3, void *a4, void *a5)
{
  uint64_t v9 = *(unsigned int *)(a1 + 36);
  if (v9 == 0x7FFFFFFF)
  {
    uint64_t v9 = *(unsigned int *)(a1 + 32);
    int v10 = v9;
    if (v9 == *(_DWORD *)(a1 + 24))
    {
      re::HashTable<unsigned long long,re::ecs2::Scene const*,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::setCapacity(a1, 2 * *(_DWORD *)(a1 + 28));
      a2 = a3 % *(unsigned int *)(a1 + 24);
      int v10 = *(_DWORD *)(a1 + 32);
    }
    *(_DWORD *)(a1 + 32) = v10 + 1;
    uint64_t v11 = *(void *)(a1 + 16);
    int v12 = *(_DWORD *)(v11 + 32 * v9 + 8);
  }
  else
  {
    uint64_t v11 = *(void *)(a1 + 16);
    int v12 = *(_DWORD *)(v11 + 32 * v9 + 8);
    *(_DWORD *)(a1 + 36) = v12 & 0x7FFFFFFF;
  }
  *(_DWORD *)(v11 + 32 * v9 + 8) = v12 | 0x80000000;
  *(_DWORD *)(*(void *)(a1 + 16) + 32 * v9 + 8) = *(_DWORD *)(*(void *)(a1 + 16) + 32 * v9 + 8) & 0x80000000 | *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2);
  *(void *)(*(void *)(a1 + 16) + 32 * v9) = a3;
  *(void *)(*(void *)(a1 + 16) + 32 * v9 + 16) = *a4;
  *(void *)(*(void *)(a1 + 16) + 32 * v9 + 24) = *a5;
  *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2) = v9;
  ++*(_DWORD *)(a1 + 28);
  return v9;
}

void re::HashTable<unsigned long long,re::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::setCapacity(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = *(void *)a1;
  if (*(void *)a1)
  {
    if (a2 && *(_DWORD *)(a1 + 24) != a2 && *(_DWORD *)(a1 + 28) <= a2)
    {
      memset(v13, 0, 36);
      *(void *)&v13[36] = 0x7FFFFFFFLL;
      re::HashTable<re::StringID,unsigned int,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::init((uint64_t)v13, v4, a2);
      long long v5 = *(_OWORD *)v13;
      *(_OWORD *)int v13 = *(_OWORD *)a1;
      *(_OWORD *)a1 = v5;
      uint64_t v6 = *(void *)&v13[16];
      uint64_t v7 = *(void *)(a1 + 16);
      *(void *)&v13[16] = v7;
      *(void *)(a1 + 16) = v6;
      long long v9 = *(_OWORD *)&v13[24];
      *(_OWORD *)&unsigned char v13[24] = *(_OWORD *)(a1 + 24);
      unsigned int v8 = *(_DWORD *)&v13[32];
      *(_OWORD *)(a1 + 24) = v9;
      uint64_t v10 = v8;
      if (v8)
      {
        uint64_t v11 = (void *)(v7 + 16);
        do
        {
          if ((*(_DWORD *)(v11 - 1) & 0x80000000) != 0) {
            re::HashTable<unsigned long long,re::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addAsMove(a1, *(v11 - 2) % (unint64_t)*(unsigned int *)(a1 + 24), *(v11 - 2), v11, v11 + 1);
          }
          v11 += 4;
          --v10;
        }
        while (v10);
      }
      re::HashTable<void *,re::internal::AnimationCompositionChainBase *,re::Hash<void *>,re::EqualTo<void *>,true,false>::deinit((uint64_t *)v13);
    }
  }
  else
  {
    if (a2) {
      signed int v12 = a2;
    }
    else {
      signed int v12 = 3;
    }
  }
}

uint64_t re::HashTable<unsigned long long,re::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addAsMove(uint64_t result, unsigned int a2, unint64_t a3, void *a4, void *a5)
{
  uint64_t v8 = result;
  uint64_t v9 = *(unsigned int *)(result + 36);
  if (v9 == 0x7FFFFFFF)
  {
    uint64_t v9 = *(unsigned int *)(result + 32);
    int v10 = v9;
    if (v9 == *(_DWORD *)(result + 24))
    {
      double result = re::HashTable<unsigned long long,re::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::setCapacity(result, (2 * *(_DWORD *)(result + 28)));
      a2 = a3 % *(unsigned int *)(v8 + 24);
      int v10 = *(_DWORD *)(v8 + 32);
    }
    *(_DWORD *)(v8 + 32) = v10 + 1;
    uint64_t v11 = *(void *)(v8 + 16);
    int v12 = *(_DWORD *)(v11 + 32 * v9 + 8);
  }
  else
  {
    uint64_t v11 = *(void *)(result + 16);
    int v12 = *(_DWORD *)(v11 + 32 * v9 + 8);
    *(_DWORD *)(result + 36) = v12 & 0x7FFFFFFF;
  }
  *(_DWORD *)(v11 + 32 * v9 + 8) = v12 | 0x80000000;
  *(_DWORD *)(*(void *)(v8 + 16) + 32 * v9 + 8) = *(_DWORD *)(*(void *)(v8 + 16) + 32 * v9 + 8) & 0x80000000 | *(_DWORD *)(*(void *)(v8 + 8) + 4 * a2);
  *(void *)(*(void *)(v8 + 16) + 32 * v9) = a3;
  *(void *)(*(void *)(v8 + 16) + 32 * v9 + 16) = *a4;
  *(void *)(*(void *)(v8 + 16) + 32 * v9 + 24) = *a5;
  *(_DWORD *)(*(void *)(v8 + 8) + 4 * a2) = v9;
  ++*(_DWORD *)(v8 + 28);
  return result;
}

char *re::EventBus::getTypeId<REAudioPlayerDidCreateAudioUnitEvent>()
{
  id v0 = re::KTXTextureCompiler::getSupportedExtensions(void)const::supportedExtensions;
  {
    id v0 = re::KTXTextureCompiler::getSupportedExtensions(void)const::supportedExtensions;
    if (v2)
    {
      re::EventBus::getTypeId<REAudioPlayerDidCreateAudioUnitEvent>(void)const::s_id = re::EventBus::typeStringToId((re::EventBus *)((unint64_t)"36REAudioPlayerDidCreateAudioUnitEvent" & 0x7FFFFFFFFFFFFFFFLL), v3);
      id v0 = re::KTXTextureCompiler::getSupportedExtensions(void)const::supportedExtensions;
    }
  }
  return v0[303];
}

char *re::EventBus::getTypeId<REAudioPlayerDidPrepareAudioUnitEvent>()
{
  id v0 = re::KTXTextureCompiler::getSupportedExtensions(void)const::supportedExtensions;
  {
    id v0 = re::KTXTextureCompiler::getSupportedExtensions(void)const::supportedExtensions;
    if (v2)
    {
      re::EventBus::getTypeId<REAudioPlayerDidPrepareAudioUnitEvent>(void)const::s_id = re::EventBus::typeStringToId((re::EventBus *)((unint64_t)"37REAudioPlayerDidPrepareAudioUnitEvent" & 0x7FFFFFFFFFFFFFFFLL), v3);
      id v0 = re::KTXTextureCompiler::getSupportedExtensions(void)const::supportedExtensions;
    }
  }
  return v0[305];
}

uint64_t _ZNSt3__110__function6__funcIZZN2re4ecs220AudioPlayerComponent19completePreparationEyPNS2_20AudioSourceSyncStateEPNS2_15TimebaseServiceEEUb_E3__0NS_9allocatorIS9_EEFvvEED1Ev(uint64_t a1)
{
  return a1;
}

void _ZNSt3__110__function6__funcIZZN2re4ecs220AudioPlayerComponent19completePreparationEyPNS2_20AudioSourceSyncStateEPNS2_15TimebaseServiceEEUb_E3__0NS_9allocatorIS9_EEFvvEED0Ev(uint64_t a1)
{
  JUMPOUT(0x237DBCBD0);
}

void *_ZNKSt3__110__function6__funcIZZN2re4ecs220AudioPlayerComponent19completePreparationEyPNS2_20AudioSourceSyncStateEPNS2_15TimebaseServiceEEUb_E3__0NS_9allocatorIS9_EEFvvEE7__cloneEv(uint64_t a1)
{
  int v2 = operator new(0x28uLL);
  void *v2 = &unk_26E6F7810;
  v2[1] = *(id *)(a1 + 8);
  *((_OWORD *)v2 + 1) = *(_OWORD *)(a1 + 16);
  v2[4] = *(void *)(a1 + 32);
  return v2;
}

__n128 _ZNKSt3__110__function6__funcIZZN2re4ecs220AudioPlayerComponent19completePreparationEyPNS2_20AudioSourceSyncStateEPNS2_15TimebaseServiceEEUb_E3__0NS_9allocatorIS9_EEFvvEE7__cloneEPNS0_6__baseISC_EE(uint64_t a1, __n128 *a2)
{
  a2->n128_u64[0] = (unint64_t)&unk_26E6F7810;
  a2->n128_u64[1] = (unint64_t)*(id *)(a1 + 8);
  unint64_t v4 = *(void *)(a1 + 32);
  __n128 result = *(__n128 *)(a1 + 16);
  a2[1] = result;
  a2[2].n128_u64[0] = v4;
  return result;
}

void _ZNSt3__110__function6__funcIZZN2re4ecs220AudioPlayerComponent19completePreparationEyPNS2_20AudioSourceSyncStateEPNS2_15TimebaseServiceEEUb_E3__0NS_9allocatorIS9_EEFvvEE7destroyEv(uint64_t a1)
{
}

void _ZNSt3__110__function6__funcIZZN2re4ecs220AudioPlayerComponent19completePreparationEyPNS2_20AudioSourceSyncStateEPNS2_15TimebaseServiceEEUb_E3__0NS_9allocatorIS9_EEFvvEE18destroy_deallocateEv(id *a1)
{
  operator delete(a1);
}

void _ZNSt3__110__function6__funcIZZN2re4ecs220AudioPlayerComponent19completePreparationEyPNS2_20AudioSourceSyncStateEPNS2_15TimebaseServiceEEUb_E3__0NS_9allocatorIS9_EEFvvEEclEv(uint64_t a1)
{
  uint64_t v2 = *(void *)([*(id *)(a1 + 8) state] + 480);
  unint64_t v3 = *(void *)(a1 + 16);
  unint64_t v4 = *(void **)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  re::ecs2::AudioPlayerComponent::playbackStateDidChange(v2, v3, v4, v5);
}

uint64_t _ZNKSt3__110__function6__funcIZZN2re4ecs220AudioPlayerComponent19completePreparationEyPNS2_20AudioSourceSyncStateEPNS2_15TimebaseServiceEEUb_E3__0NS_9allocatorIS9_EEFvvEE6targetERKSt9type_info(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:nn180100](a2, (uint64_t)&_ZTIZZN2re4ecs220AudioPlayerComponent19completePreparationEyPNS_20AudioSourceSyncStateEPNS_15TimebaseServiceEEUb_E3__0))
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *_ZNKSt3__110__function6__funcIZZN2re4ecs220AudioPlayerComponent19completePreparationEyPNS2_20AudioSourceSyncStateEPNS2_15TimebaseServiceEEUb_E3__0NS_9allocatorIS9_EEFvvEE11target_typeEv()
{
  return &_ZTIZZN2re4ecs220AudioPlayerComponent19completePreparationEyPNS_20AudioSourceSyncStateEPNS_15TimebaseServiceEEUb_E3__0;
}

uint64_t _ZNSt3__110__function6__funcIZZN2re4ecs220AudioPlayerComponent19completePreparationEyPNS2_20AudioSourceSyncStateEPNS2_15TimebaseServiceEEUb0_E3__1NS_9allocatorIS9_EEFvvEED1Ev(uint64_t a1)
{
  return a1;
}

void _ZNSt3__110__function6__funcIZZN2re4ecs220AudioPlayerComponent19completePreparationEyPNS2_20AudioSourceSyncStateEPNS2_15TimebaseServiceEEUb0_E3__1NS_9allocatorIS9_EEFvvEED0Ev(uint64_t a1)
{
  JUMPOUT(0x237DBCBD0);
}

void *_ZNKSt3__110__function6__funcIZZN2re4ecs220AudioPlayerComponent19completePreparationEyPNS2_20AudioSourceSyncStateEPNS2_15TimebaseServiceEEUb0_E3__1NS_9allocatorIS9_EEFvvEE7__cloneEv(uint64_t a1)
{
  uint64_t v2 = operator new(0x20uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  unint64_t v4 = *(void **)(a1 + 16);
  void *v2 = &unk_26E6F7890;
  v2[1] = v3;
  v2[2] = v4;
  v2[3] = *(id *)(a1 + 24);
  return v2;
}

id _ZNKSt3__110__function6__funcIZZN2re4ecs220AudioPlayerComponent19completePreparationEyPNS2_20AudioSourceSyncStateEPNS2_15TimebaseServiceEEUb0_E3__1NS_9allocatorIS9_EEFvvEE7__cloneEPNS0_6__baseISC_EE(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void **)(a1 + 16);
  *a2 = &unk_26E6F7890;
  a2[1] = v4;
  a2[2] = v5;
  id result = *(id *)(a1 + 24);
  a2[3] = result;
  return result;
}

void _ZNSt3__110__function6__funcIZZN2re4ecs220AudioPlayerComponent19completePreparationEyPNS2_20AudioSourceSyncStateEPNS2_15TimebaseServiceEEUb0_E3__1NS_9allocatorIS9_EEFvvEE7destroyEv(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
}

void _ZNSt3__110__function6__funcIZZN2re4ecs220AudioPlayerComponent19completePreparationEyPNS2_20AudioSourceSyncStateEPNS2_15TimebaseServiceEEUb0_E3__1NS_9allocatorIS9_EEFvvEE18destroy_deallocateEv(id *a1)
{
  operator delete(a1);
}

void _ZNSt3__110__function6__funcIZZN2re4ecs220AudioPlayerComponent19completePreparationEyPNS2_20AudioSourceSyncStateEPNS2_15TimebaseServiceEEUb0_E3__1NS_9allocatorIS9_EEFvvEEclEv(uint64_t a1)
{
  uint64_t v2 = (re::ecs2::AudioPlayerComponent *)[*(id *)(a1 + 16) state];
  uint64_t v3 = *(re::AudioSourceState **)([*(id *)(a1 + 16) state] + 480);
  uint64_t v5 = *(re::ecs2::AudioPlayerComponent **)(a1 + 24);
  re::ecs2::AudioPlayerComponent::preparationCompleteCallback(v2, v3, v5, v4);
}

uint64_t _ZNKSt3__110__function6__funcIZZN2re4ecs220AudioPlayerComponent19completePreparationEyPNS2_20AudioSourceSyncStateEPNS2_15TimebaseServiceEEUb0_E3__1NS_9allocatorIS9_EEFvvEE6targetERKSt9type_info(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:nn180100](a2, (uint64_t)&_ZTIZZN2re4ecs220AudioPlayerComponent19completePreparationEyPNS_20AudioSourceSyncStateEPNS_15TimebaseServiceEEUb0_E3__1))
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *_ZNKSt3__110__function6__funcIZZN2re4ecs220AudioPlayerComponent19completePreparationEyPNS2_20AudioSourceSyncStateEPNS2_15TimebaseServiceEEUb0_E3__1NS_9allocatorIS9_EEFvvEE11target_typeEv()
{
  return &_ZTIZZN2re4ecs220AudioPlayerComponent19completePreparationEyPNS_20AudioSourceSyncStateEPNS_15TimebaseServiceEEUb0_E3__1;
}

uint64_t re::HashTable<unsigned long long,float,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addAsCopy(uint64_t a1, unsigned int a2, unint64_t a3, void *a4, _DWORD *a5)
{
  uint64_t v9 = *(unsigned int *)(a1 + 36);
  if (v9 == 0x7FFFFFFF)
  {
    uint64_t v9 = *(unsigned int *)(a1 + 32);
    int v10 = v9;
    if (v9 == *(_DWORD *)(a1 + 24))
    {
      re::HashTable<unsigned long long,float,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::setCapacity(a1, (2 * *(_DWORD *)(a1 + 28)));
      a2 = a3 % *(unsigned int *)(a1 + 24);
      int v10 = *(_DWORD *)(a1 + 32);
    }
    *(_DWORD *)(a1 + 32) = v10 + 1;
    uint64_t v11 = *(void *)(a1 + 16);
    int v12 = *(_DWORD *)(v11 + 32 * v9 + 8);
  }
  else
  {
    uint64_t v11 = *(void *)(a1 + 16);
    int v12 = *(_DWORD *)(v11 + 32 * v9 + 8);
    *(_DWORD *)(a1 + 36) = v12 & 0x7FFFFFFF;
  }
  *(_DWORD *)(v11 + 32 * v9 + 8) = v12 | 0x80000000;
  uint64_t v13 = *(void *)(a1 + 8);
  *(_DWORD *)(*(void *)(a1 + 16) + 32 * v9 + 8) = *(_DWORD *)(*(void *)(a1 + 16) + 32 * v9 + 8) & 0x80000000 | *(_DWORD *)(v13 + 4 * a2);
  *(void *)(*(void *)(a1 + 16) + 32 * v9) = a3;
  *(void *)(*(void *)(a1 + 16) + 32 * v9 + 16) = *a4;
  *(_DWORD *)(*(void *)(a1 + 16) + 32 * v9 + 24) = *a5;
  *(_DWORD *)(v13 + 4 * a2) = v9;
  ++*(_DWORD *)(a1 + 28);
  return v9;
}

void re::HashTable<unsigned long long,float,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::setCapacity(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = *(void *)a1;
  if (*(void *)a1)
  {
    if (a2 && *(_DWORD *)(a1 + 24) != a2 && *(_DWORD *)(a1 + 28) <= a2)
    {
      memset(v13, 0, 36);
      *(void *)&v13[36] = 0x7FFFFFFFLL;
      re::HashTable<re::StringID,unsigned int,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::init((uint64_t)v13, v4, a2);
      long long v5 = *(_OWORD *)v13;
      *(_OWORD *)uint64_t v13 = *(_OWORD *)a1;
      *(_OWORD *)a1 = v5;
      uint64_t v6 = *(void *)&v13[16];
      *(void *)&v13[16] = *(void *)(a1 + 16);
      *(void *)(a1 + 16) = v6;
      long long v8 = *(_OWORD *)&v13[24];
      *(_OWORD *)&unsigned char v13[24] = *(_OWORD *)(a1 + 24);
      unsigned int v7 = *(_DWORD *)&v13[32];
      *(_OWORD *)(a1 + 24) = v8;
      unsigned int v9 = v7;
      if (v7)
      {
        uint64_t v10 = 0;
        unint64_t v11 = 0;
        do
        {
          if ((*(_DWORD *)(*(void *)&v13[16] + v10 + 8) & 0x80000000) != 0)
          {
            re::HashTable<unsigned long long,float,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addAsCopy(a1, *(void *)(*(void *)&v13[16] + v10) % (unint64_t)*(unsigned int *)(a1 + 24), *(void *)(*(void *)&v13[16] + v10), (void *)(*(void *)&v13[16] + v10 + 16), (_DWORD *)(*(void *)&v13[16] + v10 + 24));
            unsigned int v9 = *(_DWORD *)&v13[32];
          }
          ++v11;
          v10 += 32;
        }
        while (v11 < v9);
      }
      re::HashTable<void *,re::internal::AnimationCompositionChainBase *,re::Hash<void *>,re::EqualTo<void *>,true,false>::deinit((uint64_t *)v13);
    }
  }
  else
  {
    if (a2) {
      signed int v12 = a2;
    }
    else {
      signed int v12 = 3;
    }
  }
}

void std::__function::__func<re::ecs2::AudioPlayerComponent::applyGainForAllPlaybackTokens(void)::$_0,std::allocator<re::ecs2::AudioPlayerComponent::applyGainForAllPlaybackTokens(void)::$_0>,void ()(unsigned long long)>::~__func()
{
}

void *std::__function::__func<re::ecs2::AudioPlayerComponent::applyGainForAllPlaybackTokens(void)::$_0,std::allocator<re::ecs2::AudioPlayerComponent::applyGainForAllPlaybackTokens(void)::$_0>,void ()(unsigned long long)>::__clone(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = &unk_26E6F7910;
  result[1] = v3;
  return result;
}

uint64_t std::__function::__func<re::ecs2::AudioPlayerComponent::applyGainForAllPlaybackTokens(void)::$_0,std::allocator<re::ecs2::AudioPlayerComponent::applyGainForAllPlaybackTokens(void)::$_0>,void ()(unsigned long long)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_26E6F7910;
  a2[1] = v2;
  return result;
}

uint64_t std::__function::__func<re::ecs2::AudioPlayerComponent::applyGainForAllPlaybackTokens(void)::$_0,std::allocator<re::ecs2::AudioPlayerComponent::applyGainForAllPlaybackTokens(void)::$_0>,void ()(unsigned long long)>::operator()(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  LODWORD(v3) = 0x7FFFFFFF;
  if (*(void *)(v2 + 32))
  {
    uint64_t v4 = *a2;
    unint64_t v5 = 0xBF58476D1CE4E5B9 * (*a2 ^ ((unint64_t)*a2 >> 30));
    uint64_t v6 = *(unsigned int *)(*(void *)(v2 + 40)
                         + 4
                         * (((0x94D049BB133111EBLL * (v5 ^ (v5 >> 27))) ^ ((0x94D049BB133111EBLL * (v5 ^ (v5 >> 27))) >> 31))
                          % *(unsigned int *)(v2 + 56)));
    if (v6 != 0x7FFFFFFF)
    {
      uint64_t v7 = *(void *)(v2 + 48);
      LODWORD(v3) = v6;
      if (*(void *)(v7 + 288 * v6 + 16) != v4)
      {
        uint64_t v3 = v6;
        while (1)
        {
          LODWORD(v3) = *(_DWORD *)(v7 + 288 * v3 + 8) & 0x7FFFFFFF;
          if (v3 == 0x7FFFFFFF) {
            break;
          }
          if (*(void *)(v7 + 288 * v3 + 16) == v4) {
            goto LABEL_9;
          }
        }
        LODWORD(v3) = 0x7FFFFFFF;
      }
    }
  }
LABEL_9:
  *(_DWORD *)(*(void *)(v2 + 48) + 288 * v3 + 128) = *(_DWORD *)(v2 + 256);
  return result;
}

uint64_t std::__function::__func<re::ecs2::AudioPlayerComponent::applyGainForAllPlaybackTokens(void)::$_0,std::allocator<re::ecs2::AudioPlayerComponent::applyGainForAllPlaybackTokens(void)::$_0>,void ()(unsigned long long)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<re::ecs2::AudioPlayerComponent::applyGainForAllPlaybackTokens(void)::$_0,std::allocator<re::ecs2::AudioPlayerComponent::applyGainForAllPlaybackTokens(void)::$_0>,void ()(unsigned long long)>::target_type()
{
}

void std::__function::__func<re::ecs2::AudioPlayerComponent::applyDirectLevelForAllPlaybackTokens(void)::$_0,std::allocator<re::ecs2::AudioPlayerComponent::applyDirectLevelForAllPlaybackTokens(void)::$_0>,void ()(unsigned long long)>::~__func()
{
}

void *std::__function::__func<re::ecs2::AudioPlayerComponent::applyDirectLevelForAllPlaybackTokens(void)::$_0,std::allocator<re::ecs2::AudioPlayerComponent::applyDirectLevelForAllPlaybackTokens(void)::$_0>,void ()(unsigned long long)>::__clone(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = &unk_26E6F7990;
  result[1] = v3;
  return result;
}

uint64_t std::__function::__func<re::ecs2::AudioPlayerComponent::applyDirectLevelForAllPlaybackTokens(void)::$_0,std::allocator<re::ecs2::AudioPlayerComponent::applyDirectLevelForAllPlaybackTokens(void)::$_0>,void ()(unsigned long long)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_26E6F7990;
  a2[1] = v2;
  return result;
}

uint64_t std::__function::__func<re::ecs2::AudioPlayerComponent::applyDirectLevelForAllPlaybackTokens(void)::$_0,std::allocator<re::ecs2::AudioPlayerComponent::applyDirectLevelForAllPlaybackTokens(void)::$_0>,void ()(unsigned long long)>::operator()(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  LODWORD(v3) = 0x7FFFFFFF;
  if (*(void *)(v2 + 32))
  {
    uint64_t v4 = *a2;
    unint64_t v5 = 0xBF58476D1CE4E5B9 * (*a2 ^ ((unint64_t)*a2 >> 30));
    uint64_t v6 = *(unsigned int *)(*(void *)(v2 + 40)
                         + 4
                         * (((0x94D049BB133111EBLL * (v5 ^ (v5 >> 27))) ^ ((0x94D049BB133111EBLL * (v5 ^ (v5 >> 27))) >> 31))
                          % *(unsigned int *)(v2 + 56)));
    if (v6 != 0x7FFFFFFF)
    {
      uint64_t v7 = *(void *)(v2 + 48);
      LODWORD(v3) = v6;
      if (*(void *)(v7 + 288 * v6 + 16) != v4)
      {
        uint64_t v3 = v6;
        while (1)
        {
          LODWORD(v3) = *(_DWORD *)(v7 + 288 * v3 + 8) & 0x7FFFFFFF;
          if (v3 == 0x7FFFFFFF) {
            break;
          }
          if (*(void *)(v7 + 288 * v3 + 16) == v4) {
            goto LABEL_9;
          }
        }
        LODWORD(v3) = 0x7FFFFFFF;
      }
    }
  }
LABEL_9:
  *(_DWORD *)(*(void *)(v2 + 48) + 288 * v3 + 88) = *(_DWORD *)(v2 + 276);
  return result;
}

uint64_t std::__function::__func<re::ecs2::AudioPlayerComponent::applyDirectLevelForAllPlaybackTokens(void)::$_0,std::allocator<re::ecs2::AudioPlayerComponent::applyDirectLevelForAllPlaybackTokens(void)::$_0>,void ()(unsigned long long)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<re::ecs2::AudioPlayerComponent::applyDirectLevelForAllPlaybackTokens(void)::$_0,std::allocator<re::ecs2::AudioPlayerComponent::applyDirectLevelForAllPlaybackTokens(void)::$_0>,void ()(unsigned long long)>::target_type()
{
}

void std::__function::__func<re::ecs2::AudioPlayerComponent::applyReverbLevelForAllPlaybackTokens(void)::$_0,std::allocator<re::ecs2::AudioPlayerComponent::applyReverbLevelForAllPlaybackTokens(void)::$_0>,void ()(unsigned long long)>::~__func()
{
}

void *std::__function::__func<re::ecs2::AudioPlayerComponent::applyReverbLevelForAllPlaybackTokens(void)::$_0,std::allocator<re::ecs2::AudioPlayerComponent::applyReverbLevelForAllPlaybackTokens(void)::$_0>,void ()(unsigned long long)>::__clone(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = &unk_26E6F7A10;
  result[1] = v3;
  return result;
}

uint64_t std::__function::__func<re::ecs2::AudioPlayerComponent::applyReverbLevelForAllPlaybackTokens(void)::$_0,std::allocator<re::ecs2::AudioPlayerComponent::applyReverbLevelForAllPlaybackTokens(void)::$_0>,void ()(unsigned long long)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_26E6F7A10;
  a2[1] = v2;
  return result;
}

uint64_t std::__function::__func<re::ecs2::AudioPlayerComponent::applyReverbLevelForAllPlaybackTokens(void)::$_0,std::allocator<re::ecs2::AudioPlayerComponent::applyReverbLevelForAllPlaybackTokens(void)::$_0>,void ()(unsigned long long)>::operator()(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  LODWORD(v3) = 0x7FFFFFFF;
  if (*(void *)(v2 + 32))
  {
    uint64_t v4 = *a2;
    unint64_t v5 = 0xBF58476D1CE4E5B9 * (*a2 ^ ((unint64_t)*a2 >> 30));
    uint64_t v6 = *(unsigned int *)(*(void *)(v2 + 40)
                         + 4
                         * (((0x94D049BB133111EBLL * (v5 ^ (v5 >> 27))) ^ ((0x94D049BB133111EBLL * (v5 ^ (v5 >> 27))) >> 31))
                          % *(unsigned int *)(v2 + 56)));
    if (v6 != 0x7FFFFFFF)
    {
      uint64_t v7 = *(void *)(v2 + 48);
      LODWORD(v3) = v6;
      if (*(void *)(v7 + 288 * v6 + 16) != v4)
      {
        uint64_t v3 = v6;
        while (1)
        {
          LODWORD(v3) = *(_DWORD *)(v7 + 288 * v3 + 8) & 0x7FFFFFFF;
          if (v3 == 0x7FFFFFFF) {
            break;
          }
          if (*(void *)(v7 + 288 * v3 + 16) == v4) {
            goto LABEL_9;
          }
        }
        LODWORD(v3) = 0x7FFFFFFF;
      }
    }
  }
LABEL_9:
  *(_DWORD *)(*(void *)(v2 + 48) + 288 * v3 + 84) = *(_DWORD *)(v2 + 280);
  return result;
}

uint64_t std::__function::__func<re::ecs2::AudioPlayerComponent::applyReverbLevelForAllPlaybackTokens(void)::$_0,std::allocator<re::ecs2::AudioPlayerComponent::applyReverbLevelForAllPlaybackTokens(void)::$_0>,void ()(unsigned long long)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<re::ecs2::AudioPlayerComponent::applyReverbLevelForAllPlaybackTokens(void)::$_0,std::allocator<re::ecs2::AudioPlayerComponent::applyReverbLevelForAllPlaybackTokens(void)::$_0>,void ()(unsigned long long)>::target_type()
{
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>,re::Slice<re::ecs2::AudioPlayerComponent*>>::createSubscription<re::ecs2::AudioPlayerSystem>(re::ecs2::AudioPlayerSystem *,REEventHandlerResult (re::ecs2::AudioPlayerSystem::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>*,re::Slice<re::ecs2::AudioPlayerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>,re::Slice<re::ecs2::AudioPlayerComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioPlayerComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    uint64_t v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>,re::Slice<re::ecs2::ChannelAudioComponent*>>::createSubscription<re::ecs2::AudioPlayerSystem>(re::ecs2::AudioPlayerSystem *,REEventHandlerResult (re::ecs2::AudioPlayerSystem::*)(re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>*,re::Slice<re::ecs2::ChannelAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>,re::Slice<re::ecs2::ChannelAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::ChannelAudioComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    uint64_t v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>,re::Slice<re::ecs2::AmbientAudioComponent*>>::createSubscription<re::ecs2::AudioPlayerSystem>(re::ecs2::AudioPlayerSystem *,REEventHandlerResult (re::ecs2::AudioPlayerSystem::*)(re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>*,re::Slice<re::ecs2::AmbientAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>,re::Slice<re::ecs2::AmbientAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::AmbientAudioComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    uint64_t v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::createSubscription<re::ecs2::AudioPlayerSystem>(re::ecs2::AudioPlayerSystem *,REEventHandlerResult (re::ecs2::AudioPlayerSystem::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Slice<re::ecs2::SpatialAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialAudioComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    uint64_t v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

void *std::__hash_table<std::__hash_value_type<unsigned long long,unsigned long long>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned long long>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned long long>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned long long>>>::__emplace_unique_key_args<unsigned long long,std::piecewise_construct_t const&,std::tuple<unsigned long long &&>,std::tuple<>>(float *a1, unint64_t a2, void *a3)
{
  unint64_t v7 = *((void *)a1 + 1);
  if (v7)
  {
    uint8x8_t v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      unint64_t v3 = a2;
      if (v7 <= a2) {
        unint64_t v3 = a2 % v7;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & a2;
    }
    unsigned int v9 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v9)
    {
      for (unint64_t i = *v9; i; unint64_t i = (void *)*i)
      {
        unint64_t v11 = i[1];
        if (v11 == a2)
        {
          if (i[2] == a2) {
            return i;
          }
        }
        else
        {
          if (v8.u32[0] > 1uLL)
          {
            if (v11 >= v7) {
              v11 %= v7;
            }
          }
          else
          {
            v11 &= v7 - 1;
          }
          if (v11 != v3) {
            break;
          }
        }
      }
    }
  }
  unint64_t i = operator new(0x20uLL);
  *unint64_t i = 0;
  i[1] = a2;
  i[2] = *a3;
  i[3] = 0;
  float v12 = (float)(unint64_t)(*((void *)a1 + 3) + 1);
  float v13 = a1[8];
  if (!v7 || (float)(v13 * (float)v7) < v12)
  {
    BOOL v14 = 1;
    if (v7 >= 3) {
      BOOL v14 = (v7 & (v7 - 1)) != 0;
    }
    unint64_t v15 = v14 | (2 * v7);
    unint64_t v16 = vcvtps_u32_f32(v12 / v13);
    if (v15 <= v16) {
      int8x8_t prime = (int8x8_t)v16;
    }
    else {
      int8x8_t prime = (int8x8_t)v15;
    }
    if (*(void *)&prime == 1)
    {
      int8x8_t prime = (int8x8_t)2;
    }
    else if ((*(void *)&prime & (*(void *)&prime - 1)) != 0)
    {
      int8x8_t prime = (int8x8_t)std::__next_prime(*(void *)&prime);
      unint64_t v7 = *((void *)a1 + 1);
    }
    if (*(void *)&prime > v7) {
      goto LABEL_30;
    }
    if (*(void *)&prime < v7)
    {
      unint64_t v24 = vcvtps_u32_f32((float)*((unint64_t *)a1 + 3) / a1[8]);
      if (v7 < 3 || (uint8x8_t v25 = (uint8x8_t)vcnt_s8((int8x8_t)v7), v25.i16[0] = vaddlv_u8(v25), v25.u32[0] > 1uLL))
      {
        unint64_t v24 = std::__next_prime(v24);
      }
      else
      {
        uint64_t v26 = 1 << -(char)__clz(v24 - 1);
        if (v24 >= 2) {
          unint64_t v24 = v26;
        }
      }
      if (*(void *)&prime <= v24) {
        int8x8_t prime = (int8x8_t)v24;
      }
      if (*(void *)&prime >= v7)
      {
        unint64_t v7 = *((void *)a1 + 1);
      }
      else
      {
        if (prime)
        {
LABEL_30:
          if (*(void *)&prime >> 61) {
            std::__throw_bad_array_new_length[abi:nn180100]();
          }
          long long v18 = operator new(8 * *(void *)&prime);
          long long v19 = *(void **)a1;
          *(void *)a1 = v18;
          if (v19) {
            operator delete(v19);
          }
          uint64_t v20 = 0;
          *((int8x8_t *)a1 + 1) = prime;
          do
            *(void *)(*(void *)a1 + 8 * v20++) = 0;
          while (*(void *)&prime != v20);
          long long v21 = (void *)*((void *)a1 + 2);
          if (v21)
          {
            unint64_t v22 = v21[1];
            uint8x8_t v23 = (uint8x8_t)vcnt_s8(prime);
            v23.i16[0] = vaddlv_u8(v23);
            if (v23.u32[0] > 1uLL)
            {
              if (v22 >= *(void *)&prime) {
                v22 %= *(void *)&prime;
              }
            }
            else
            {
              v22 &= *(void *)&prime - 1;
            }
            *(void *)(*(void *)a1 + 8 * v22) = a1 + 4;
            uint64_t v27 = (void *)*v21;
            if (*v21)
            {
              do
              {
                unint64_t v28 = v27[1];
                if (v23.u32[0] > 1uLL)
                {
                  if (v28 >= *(void *)&prime) {
                    v28 %= *(void *)&prime;
                  }
                }
                else
                {
                  v28 &= *(void *)&prime - 1;
                }
                if (v28 != v22)
                {
                  if (!*(void *)(*(void *)a1 + 8 * v28))
                  {
                    *(void *)(*(void *)a1 + 8 * v28) = v21;
                    goto LABEL_55;
                  }
                  void *v21 = *v27;
                  void *v27 = **(void **)(*(void *)a1 + 8 * v28);
                  **(void **)(*(void *)a1 + 8 * v28) = v27;
                  uint64_t v27 = v21;
                }
                unint64_t v28 = v22;
LABEL_55:
                long long v21 = v27;
                uint64_t v27 = (void *)*v27;
                unint64_t v22 = v28;
              }
              while (v27);
            }
          }
          unint64_t v7 = (unint64_t)prime;
          goto LABEL_59;
        }
        uint64_t v33 = *(void **)a1;
        *(void *)a1 = 0;
        if (v33) {
          operator delete(v33);
        }
        unint64_t v7 = 0;
        *((void *)a1 + 1) = 0;
      }
    }
LABEL_59:
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v7 <= a2) {
        unint64_t v3 = a2 % v7;
      }
      else {
        unint64_t v3 = a2;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & a2;
    }
  }
  uint64_t v29 = *(void **)a1;
  long long v30 = *(void **)(*(void *)a1 + 8 * v3);
  if (v30)
  {
    *unint64_t i = *v30;
LABEL_72:
    *long long v30 = i;
    goto LABEL_73;
  }
  *unint64_t i = *((void *)a1 + 2);
  *((void *)a1 + 2) = i;
  v29[v3] = a1 + 4;
  if (*i)
  {
    unint64_t v31 = *(void *)(*i + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v31 >= v7) {
        v31 %= v7;
      }
    }
    else
    {
      v31 &= v7 - 1;
    }
    long long v30 = (void *)(*(void *)a1 + 8 * v31);
    goto LABEL_72;
  }
LABEL_73:
  ++*((void *)a1 + 3);
  return i;
}

void re::internal::CallableRef<re::ecs2::AudioPlayerSystem::update(re::ecs2::Scene *,re::ecs2::System::UpdateContext)::$_0,re::Optional<simd_float4x4> ()(unsigned long long)>::~CallableRef()
{
}

void re::internal::CallableRef<re::ecs2::AudioPlayerSystem::update(re::ecs2::Scene *,re::ecs2::System::UpdateContext)::$_0,re::Optional<simd_float4x4> ()(unsigned long long)>::operator()(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
}

uint64_t re::internal::CallableRef<re::ecs2::AudioPlayerSystem::update(re::ecs2::Scene *,re::ecs2::System::UpdateContext)::$_0,re::Optional<simd_float4x4> ()(unsigned long long)>::cloneInto(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(_OWORD **)(a1 + 8);
  *(void *)a2 = &unk_26E6F7AF8;
  *(_OWORD *)(a2 + 8) = *v2;
  return a2;
}

uint64_t re::internal::CallableRef<re::ecs2::AudioPlayerSystem::update(re::ecs2::Scene *,re::ecs2::System::UpdateContext)::$_0,re::Optional<simd_float4x4> ()(unsigned long long)>::moveInto(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 24))();
}

uint64_t re::internal::CallableRef<re::ecs2::AudioPlayerSystem::update(re::ecs2::Scene *,re::ecs2::System::UpdateContext)::$_0,re::Optional<simd_float4x4> ()(unsigned long long)>::size()
{
  return 24;
}

void std::invoke[abi:nn180100]<re::ecs2::AudioPlayerSystem::update(re::ecs2::Scene *,re::ecs2::System::UpdateContext)::$_0 const&,unsigned long long>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)&v18[0] = a4;
  uint64_t v7 = re::HashTable<re::ecs2::Entity const*,re::ecs2::RenderPassGroup,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::tryGet(a2 + 152, (uint64_t *)v18);
  if (!v7)
  {
    uint64_t v8 = *(void *)(a2 + 104);
    if (*(void *)(v8 + 296) == *(void *)&v18[0]) {
      goto LABEL_3;
    }
LABEL_5:
    char v15 = 0;
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)(v7 + 8);
  if (!v8) {
    goto LABEL_5;
  }
LABEL_3:
  re::ecs2::TransformHelper::computeWorldMatrixForRendering((re::ecs2::TransformComponent **)v8, *(void *)(a3 + 176), v16);
  v17[0] = (float32x4_t)v16[0];
  v17[1] = (float32x4_t)v16[1];
  v17[2] = (float32x4_t)v16[2];
  v17[3] = (float32x4_t)v16[3];
  re::audio::cleanUpTransformForPHASE(v17, v9, v10, v11, (uint64_t)v18);
  long long v12 = v18[1];
  long long v13 = v18[2];
  long long v14 = v18[3];
  *(_OWORD *)(a1 + 16) = v18[0];
  *(_OWORD *)(a1 + 32) = v12;
  *(_OWORD *)(a1 + 48) = v13;
  *(_OWORD *)(a1 + 64) = v14;
  char v15 = 1;
LABEL_6:
  *(unsigned char *)a1 = v15;
}

void re::internal::Callable<re::ecs2::AudioPlayerSystem::update(re::ecs2::Scene *,re::ecs2::System::UpdateContext)::$_0,re::Optional<simd_float4x4> ()(unsigned long long)>::~Callable()
{
}

void re::internal::Callable<re::ecs2::AudioPlayerSystem::update(re::ecs2::Scene *,re::ecs2::System::UpdateContext)::$_0,re::Optional<simd_float4x4> ()(unsigned long long)>::operator()(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
}

uint64_t re::internal::Callable<re::ecs2::AudioPlayerSystem::update(re::ecs2::Scene *,re::ecs2::System::UpdateContext)::$_0,re::Optional<simd_float4x4> ()(unsigned long long)>::cloneInto(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26E6F7AF8;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  return a2;
}

uint64_t re::internal::Callable<re::ecs2::AudioPlayerSystem::update(re::ecs2::Scene *,re::ecs2::System::UpdateContext)::$_0,re::Optional<simd_float4x4> ()(unsigned long long)>::moveInto(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26E6F7AF8;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  return a2;
}

uint64_t re::internal::Callable<re::ecs2::AudioPlayerSystem::update(re::ecs2::Scene *,re::ecs2::System::UpdateContext)::$_0,re::Optional<simd_float4x4> ()(unsigned long long)>::size()
{
  return 24;
}

void re::HashTable<re::ecs2::Scene const*,re::HashTable<unsigned long long,re::SharedPtr<re::AudioSourceState>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,true,false>::setCapacity(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = *(void *)a1;
  if (*(void *)a1)
  {
    if (a2 && *(_DWORD *)(a1 + 24) != a2 && *(_DWORD *)(a1 + 28) <= a2)
    {
      memset(v25, 0, 36);
      *(void *)&v25[36] = 0x7FFFFFFFLL;
      re::HashTable<char const*,re::AssetLoadRequest::LoadStatistics::AssetTypeStats,re::Hash<char const*>,re::EqualTo<char const*>,true,false>::init((uint64_t)v25, v4, a2);
      long long v5 = *(_OWORD *)a1;
      *(void *)a1 = *(void *)v25;
      uint64_t v6 = *(void *)(a1 + 16);
      long long v7 = *(_OWORD *)&v25[8];
      *(_OWORD *)uint8x8_t v25 = v5;
      *(void *)&v25[16] = v6;
      *(_OWORD *)(a1 + 8) = v7;
      long long v9 = *(_OWORD *)&v25[24];
      *(_OWORD *)&v25[24] = *(_OWORD *)(a1 + 24);
      unsigned int v8 = *(_DWORD *)&v25[32];
      *(_OWORD *)(a1 + 24) = v9;
      uint64_t v10 = v8;
      if (v8)
      {
        int v11 = DWORD1(v9);
        uint64_t v12 = v7;
        long long v13 = (_DWORD *)(v6 + 60);
        do
        {
          if ((*(v13 - 13) & 0x80000000) != 0)
          {
            unint64_t v14 = *(void *)(v13 - 15);
            unint64_t v15 = *(unsigned int *)(a1 + 24);
            unint64_t v16 = v14 % v15;
            uint64_t v17 = *(unsigned int *)(a1 + 36);
            if (v17 == 0x7FFFFFFF)
            {
              uint64_t v17 = *(unsigned int *)(a1 + 32);
              int v18 = v17;
              if (v17 == v15)
              {
                re::HashTable<re::ecs2::Scene const*,re::HashTable<unsigned long long,re::SharedPtr<re::AudioSourceState>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,true,false>::setCapacity(a1, (2 * v11));
                unint64_t v16 = v14 % *(unsigned int *)(a1 + 24);
                int v18 = *(_DWORD *)(a1 + 32);
                uint64_t v12 = *(void *)(a1 + 8);
              }
              *(_DWORD *)(a1 + 32) = v18 + 1;
              uint64_t v19 = *(void *)(a1 + 16);
              int v20 = *(_DWORD *)(v19 + 72 * v17 + 8);
            }
            else
            {
              uint64_t v19 = *(void *)(a1 + 16);
              int v20 = *(_DWORD *)(v19 + 72 * v17 + 8);
              *(_DWORD *)(a1 + 36) = v20 & 0x7FFFFFFF;
            }
            *(_DWORD *)(v19 + 72 * v17 + 8) = v20 | 0x80000000;
            *(_DWORD *)(*(void *)(a1 + 16) + 72 * v17 + 8) = *(_DWORD *)(*(void *)(a1 + 16) + 72 * v17 + 8) & 0x80000000 | *(_DWORD *)(v12 + 4 * v16);
            *(void *)(*(void *)(a1 + 16) + 72 * v1re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = v14;
            *(void *)(*(void *)(a1 + 16) + 72 * v17 + 16) = *(void *)(v13 - 11);
            uint64_t v21 = *(void *)(a1 + 16) + 72 * v17;
            *(_DWORD *)(v21 + 56) = 0;
            *(_OWORD *)(v21 + 40) = 0u;
            *(_OWORD *)(v21 + 24) = 0u;
            *(void *)(v21 + 60) = 0x7FFFFFFFLL;
            *(void *)(v21 + 24) = *(void *)(v13 - 9);
            *(void *)(v13 - 9) = 0;
            uint64_t v22 = *(void *)(v21 + 32);
            *(void *)(v21 + 32) = *(void *)(v13 - 7);
            *(void *)(v13 - re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = v22;
            uint64_t v23 = *(void *)(v21 + 40);
            *(void *)(v21 + 40) = *(void *)(v13 - 5);
            *(void *)(v13 - re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = v23;
            LODWORD(vre::HashSetBase<re::AssetHandle,re::AssetHandle,re::internal::ValueAsKey<re::AssetHandle>,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 23) = *(_DWORD *)(v21 + 48);
            *(_DWORD *)(v21 + 48) = *(v13 - 3);
            *(v13 - 3) = v23;
            LODWORD(vre::HashSetBase<re::AssetHandle,re::AssetHandle,re::internal::ValueAsKey<re::AssetHandle>,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 23) = *(_DWORD *)(v21 + 52);
            *(_DWORD *)(v21 + 52) = *(v13 - 2);
            *(v13 - 2) = v23;
            LODWORD(vre::HashSetBase<re::AssetHandle,re::AssetHandle,re::internal::ValueAsKey<re::AssetHandle>,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 23) = *(_DWORD *)(v21 + 56);
            *(_DWORD *)(v21 + 56) = *(v13 - 1);
            *(v13 - 1) = v23;
            LODWORD(vre::HashSetBase<re::AssetHandle,re::AssetHandle,re::internal::ValueAsKey<re::AssetHandle>,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 23) = *(_DWORD *)(v21 + 60);
            *(_DWORD *)(v21 + 60) = *v13;
            *long long v13 = v23;
            uint64_t v12 = *(void *)(a1 + 8);
            *(_DWORD *)(v12 + 4 * v16) = v17;
            int v11 = *(_DWORD *)(a1 + 28) + 1;
            *(_DWORD *)(a1 + 28) = v11;
          }
          v13 += 18;
          --v10;
        }
        while (v10);
      }
      re::HashTable<re::ecs2::Scene const*,re::HashTable<unsigned long long,re::SharedPtr<re::AudioSourceState>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,true,false>::deinit((uint64_t *)v25);
    }
  }
  else
  {
    if (a2) {
      signed int v24 = a2;
    }
    else {
      signed int v24 = 3;
    }
  }
}

void *re::IntrospectionHashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::~IntrospectionHashTable(void *a1)
{
  *a1 = &unk_26E6C0400;
  uint64_t v2 = (uint64_t)(a1 + 6);
  re::SerializedReference<re::IntrospectionBase const*>::reset((uint64_t)(a1 + 8));
  re::SerializedReference<re::IntrospectionBase const*>::reset(v2);
  *a1 = &unk_26E6DECE0;
  objc_destructInstance(a1 + 1);
  return a1;
}

void re::IntrospectionHashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::~IntrospectionHashTable(void *a1)
{
  *a1 = &unk_26E6C0400;
  uint64_t v2 = (uint64_t)(a1 + 6);
  re::SerializedReference<re::IntrospectionBase const*>::reset((uint64_t)(a1 + 8));
  re::SerializedReference<re::IntrospectionBase const*>::reset(v2);
  *a1 = &unk_26E6DECE0;
  objc_destructInstance(a1 + 1);
  JUMPOUT(0x237DBCBD0);
}

double re::IntrospectionHashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::construct(uint64_t a1, uint64_t a2)
{
  double result = 0.0;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)a2 = 0u;
  *(_DWORD *)(a2 + 36) = 0x7FFFFFFF;
  return result;
}

double re::IntrospectionHashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::destroy(uint64_t a1, uint64_t *a2)
{
  return re::HashTable<void *,re::internal::AnimationCompositionChainBase *,re::Hash<void *>,re::EqualTo<void *>,true,false>::deinit(a2);
}

void re::IntrospectionHashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::init(uint64_t a1, uint64_t *a2, uint64_t a3, unsigned int a4)
{
  re::HashTable<void *,re::internal::AnimationCompositionChainBase *,re::Hash<void *>,re::EqualTo<void *>,true,false>::deinit(a2);
  if (a4 <= 3) {
    signed int v7 = 3;
  }
  else {
    signed int v7 = a4;
  }
  re::HashTable<re::StringID,unsigned int,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::init((uint64_t)a2, a3, v7);
}

void re::IntrospectionHashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::setCapacity(uint64_t a1, uint64_t a2, unsigned int a3)
{
}

uint64_t re::IntrospectionHashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::size(uint64_t a1, uint64_t a2)
{
  return *(unsigned int *)(a2 + 28);
}

void re::IntrospectionHashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::clear(uint64_t a1, uint64_t a2)
{
}

re::IntrospectionBase *re::IntrospectionHashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addElement(uint64_t a1, re *a2, int a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v10 = 0;
  unsigned int v8 = (re::IntrospectionBase *)re::HashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addOrReplace(a4, a5, &v10);
  re::introspectionInitElement(a2, a3, *(re::Allocator **)(a1 + 64), v8);
  return v8;
}

uint64_t re::IntrospectionHashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::iterate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(unsigned int *)(a2 + 32);
  if (v5)
  {
    uint64_t v6 = 0;
    signed int v7 = (int *)(*(void *)(a2 + 16) + 8);
    while (1)
    {
      int v8 = *v7;
      v7 += 8;
      if (v8 < 0) {
        break;
      }
      if (v5 == ++v6)
      {
        LODWORD(v6) = *(_DWORD *)(a2 + 32);
        break;
      }
    }
  }
  else
  {
    LODWORD(v6) = 0;
  }
  if (v5 == v6) {
    return 1;
  }
  uint64_t v10 = v6;
  do
  {
    uint64_t result = std::function<BOOL ()(void const*,void *)>::operator()(a3, *(void *)(a2 + 16) + 32 * v10 + 16, *(void *)(a2 + 16) + 32 * v10 + 24);
    if (!result) {
      break;
    }
    int v11 = *(_DWORD *)(a2 + 32) <= (v6 + 1) ? v6 + 1 : *(_DWORD *)(a2 + 32);
    while (1)
    {
      uint64_t v10 = (v6 + 1);
      if (v11 - 1 == v6) {
        break;
      }
      LODWORD(v6) = v6 + 1;
      int v12 = v10;
      if ((*(_DWORD *)(*(void *)(a2 + 16) + 32 * v10 + 8) & 0x80000000) != 0) {
        goto LABEL_18;
      }
    }
    int v12 = v11;
LABEL_18:
    LODWORD(v6) = v12;
  }
  while (v5 != v12);
  return result;
}

void re::HashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::setCapacity(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = *(void *)a1;
  if (*(void *)a1)
  {
    if (a2 && *(_DWORD *)(a1 + 24) != a2 && *(_DWORD *)(a1 + 28) <= a2)
    {
      memset(v13, 0, 36);
      *(void *)&v13[36] = 0x7FFFFFFFLL;
      re::HashTable<re::StringID,unsigned int,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::init((uint64_t)v13, v4, a2);
      long long v5 = *(_OWORD *)v13;
      *(_OWORD *)long long v13 = *(_OWORD *)a1;
      *(_OWORD *)a1 = v5;
      uint64_t v6 = *(void *)&v13[16];
      uint64_t v7 = *(void *)(a1 + 16);
      *(void *)&v13[16] = v7;
      *(void *)(a1 + 16) = v6;
      long long v9 = *(_OWORD *)&v13[24];
      *(_OWORD *)&unsigned char v13[24] = *(_OWORD *)(a1 + 24);
      unsigned int v8 = *(_DWORD *)&v13[32];
      *(_OWORD *)(a1 + 24) = v9;
      uint64_t v10 = v8;
      if (v8)
      {
        uint64_t v11 = v7 + 16;
        do
        {
          if ((*(_DWORD *)(v11 - 8) & 0x80000000) != 0) {
            re::HashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addAsMove(a1, *(void *)(v11 - 16) % (unint64_t)*(unsigned int *)(a1 + 24), *(void *)(v11 - 16), v11, v11 + 8);
          }
          v11 += 32;
          --v10;
        }
        while (v10);
      }
      re::HashTable<void *,re::internal::AnimationCompositionChainBase *,re::Hash<void *>,re::EqualTo<void *>,true,false>::deinit((uint64_t *)v13);
    }
  }
  else
  {
    if (a2) {
      signed int v12 = a2;
    }
    else {
      signed int v12 = 3;
    }
  }
}

uint64_t re::HashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addAsMove(uint64_t a1, unsigned int a2, unint64_t a3, void *a4, void *a5)
{
  uint64_t v9 = *(unsigned int *)(a1 + 36);
  if (v9 == 0x7FFFFFFF)
  {
    uint64_t v9 = *(unsigned int *)(a1 + 32);
    int v10 = v9;
    if (v9 == *(_DWORD *)(a1 + 24))
    {
      re::HashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::setCapacity(a1, 2 * *(_DWORD *)(a1 + 28));
      a2 = a3 % *(unsigned int *)(a1 + 24);
      int v10 = *(_DWORD *)(a1 + 32);
    }
    *(_DWORD *)(a1 + 32) = v10 + 1;
    uint64_t v11 = *(void *)(a1 + 16);
    int v12 = *(_DWORD *)(v11 + 32 * v9 + 8);
  }
  else
  {
    uint64_t v11 = *(void *)(a1 + 16);
    int v12 = *(_DWORD *)(v11 + 32 * v9 + 8);
    *(_DWORD *)(a1 + 36) = v12 & 0x7FFFFFFF;
  }
  *(_DWORD *)(v11 + 32 * v9 + 8) = v12 | 0x80000000;
  *(_DWORD *)(*(void *)(a1 + 16) + 32 * v9 + 8) = *(_DWORD *)(*(void *)(a1 + 16) + 32 * v9 + 8) & 0x80000000 | *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2);
  *(void *)(*(void *)(a1 + 16) + 32 * v9) = a3;
  *(void *)(*(void *)(a1 + 16) + 32 * v9 + 16) = *a4;
  *(void *)(*(void *)(a1 + 16) + 32 * v9 + 24) = *a5;
  *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2) = v9;
  ++*(_DWORD *)(a1 + 28);
  return v9;
}

uint64_t re::HashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addOrReplace(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = 0xBF58476D1CE4E5B9 * (*a2 ^ ((unint64_t)*a2 >> 30));
  unint64_t v8 = (0x94D049BB133111EBLL * (v7 ^ (v7 >> 27))) ^ ((0x94D049BB133111EBLL * (v7 ^ (v7 >> 27))) >> 31);
  if (!*(void *)a1)
  {
    LODWORD(v9) = 0;
    goto LABEL_8;
  }
  unint64_t v9 = v8 % *(unsigned int *)(a1 + 24);
  uint64_t v10 = *(unsigned int *)(*(void *)(a1 + 8) + 4 * v9);
  if (v10 == 0x7FFFFFFF)
  {
LABEL_8:
    unsigned int v13 = re::HashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addAsMove(a1, v9, v8, a2, a3);
    ++*(_DWORD *)(a1 + 40);
    uint64_t v12 = *(void *)(a1 + 16);
    uint64_t v10 = v13;
    return v12 + 32 * v10 + 24;
  }
  uint64_t v11 = *(void *)(a1 + 16);
  while (*(void *)(v11 + 32 * v10 + 16) != v6)
  {
    uint64_t v10 = *(_DWORD *)(v11 + 32 * v10 + 8) & 0x7FFFFFFF;
    if (v10 == 0x7FFFFFFF) {
      goto LABEL_8;
    }
  }
  *(void *)(v11 + 32 * v10 + 24) = *a3;
  ++*(_DWORD *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 16);
  return v12 + 32 * v10 + 24;
}

void re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#1}::__invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_DWORD *)(a1 + 36) = 0x7FFFFFFF;
  re::HashTable<re::StringID,unsigned int,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::init(a1, a3, 3);
}

double re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#2}::__invoke(uint64_t *a1)
{
  re::HashTable<void *,re::internal::AnimationCompositionChainBase *,re::Hash<void *>,re::EqualTo<void *>,true,false>::deinit(a1);
  return re::HashTable<void *,re::internal::AnimationCompositionChainBase *,re::Hash<void *>,re::EqualTo<void *>,true,false>::deinit(a1);
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#1}::__invoke(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

void re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *)#1}::__invoke(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (*a1 == a3)
  {
    re::HashTable<void *,unsigned int,re::Hash<void *>,re::EqualTo<void *>,true,false>::clear((uint64_t)a1);
  }
  else
  {
    re::HashTable<void *,re::internal::AnimationCompositionChainBase *,re::Hash<void *>,re::EqualTo<void *>,true,false>::deinit(a1);
    re::HashTable<re::StringID,unsigned int,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::init((uint64_t)a1, a3, 3);
  }
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#3}::__invoke(uint64_t a1, void **a2, re::Allocator *a3, uint64_t *a4)
{
  re::TypeRegistry::typeInfo(*a2, a2[2][10], v12);
  re::TypeInfo::TypeInfo((uint64_t)v11, (uint64_t)v13);
  uint64_t Instance = re::TypeInfo::createInstance((re::TypeInfo *)v11, a3, 0);
  uint64_t v9 = re::HashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addOrReplace(a1, a4, Instance);
  re::TypeRegistry::typeInfo(*a2, a2[2][10], v12);
  re::TypeInfo::TypeInfo((uint64_t)v11, (uint64_t)v13);
  re::TypeInfo::releaseInstance((re::TypeInfo *)v11, Instance, a3, 0);
  return v9;
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,void const*)#1}::__invoke(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)a1) {
    return 0;
  }
  uint64_t v2 = *a2;
  unint64_t v3 = 0xBF58476D1CE4E5B9 * (*a2 ^ ((unint64_t)*a2 >> 30));
  uint64_t v4 = *(unsigned int *)(*(void *)(a1 + 8)
                       + 4
                       * (((0x94D049BB133111EBLL * (v3 ^ (v3 >> 27))) ^ ((0x94D049BB133111EBLL * (v3 ^ (v3 >> 27))) >> 31))
                        % *(unsigned int *)(a1 + 24)));
  if (v4 == 0x7FFFFFFF) {
    return 0;
  }
  uint64_t v6 = *(void *)(a1 + 16);
  if (*(void *)(v6 + 32 * v4 + 16) != v2)
  {
    while (1)
    {
      uint64_t v4 = *(_DWORD *)(v6 + 32 * v4 + 8) & 0x7FFFFFFF;
      if (v4 == 0x7FFFFFFF) {
        break;
      }
      if (*(void *)(v6 + 32 * v4 + 16) == v2) {
        return v6 + 32 * v4 + 24;
      }
    }
    return 0;
  }
  return v6 + 32 * v4 + 24;
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::Allocator *)#1}::__invoke(uint64_t a1, uint64_t a2)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a2 + 32))(a2, 40, 8);
  *(void *)uint64_t result = a1;
  *(_DWORD *)(result + 8) = *(_DWORD *)(a1 + 40);
  *(unsigned char *)(result + 16) = 0;
  return result;
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#2}::__invoke(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  if (*((_DWORD *)a1 + 2) == *(_DWORD *)(*a1 + 40))
  {
    uint64_t v3 = *(unsigned int *)(v2 + 32);
    if (*((unsigned char *)a1 + 16))
    {
      int v4 = *((_DWORD *)a1 + 8);
      if (v4 == v3)
      {
        LODWORD(vre::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = *(_DWORD *)(v2 + 32);
      }
      else
      {
        uint64_t v8 = a1[3];
        unsigned int v9 = *(_DWORD *)(v8 + 32);
        unsigned int v10 = v4 + 1;
        do
        {
          LODWORD(vre::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = v10;
          *((_DWORD *)a1 + 8) = v10;
          if (v10 >= v9) {
            break;
          }
          int v11 = *(_DWORD *)(*(void *)(v8 + 16) + 32 * v10++ + 8);
        }
        while ((v11 & 0x80000000) == 0);
      }
    }
    else
    {
      uint64_t v5 = 0;
      if (v3)
      {
        uint64_t v6 = (int *)(*(void *)(v2 + 16) + 8);
        while (1)
        {
          int v7 = *v6;
          v6 += 8;
          if (v7 < 0) {
            break;
          }
          if (v3 == ++v5)
          {
            LODWORD(vre::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = *(_DWORD *)(v2 + 32);
            break;
          }
        }
      }
      *((unsigned char *)a1 + 16) = 1;
      a1[3] = v2;
      a1[4] = v5;
      LODWORD(v3) = *(_DWORD *)(v2 + 32);
    }
    return v5 != v3;
  }
  else
  {
    re::internal::assertLog((re::internal *)4, a2, "assertion failure: '%s' (%s:line %i) HashTable entries may not be added or removed during iteration.", "iter->originalVersion == iter->hashTable->version()", "operator()", 583);
    uint64_t result = _os_crash();
    __break(1u);
  }
  return result;
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#3}::__invoke(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a1 + 8) == *(_DWORD *)(*(void *)a1 + 40)) {
    return *(void *)(*(void *)(a1 + 24) + 16) + 32 * *(unsigned int *)(a1 + 32) + 16;
  }
  re::internal::assertLog((re::internal *)4, a2, "assertion failure: '%s' (%s:line %i) HashTable entries may not be added or removed during iteration.", "iter->originalVersion == iter->hashTable->version()", "operator()", 598);
  uint64_t result = _os_crash();
  __break(1u);
  return result;
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#4}::__invoke(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a1 + 8) == *(_DWORD *)(*(void *)a1 + 40)) {
    return *(void *)(*(void *)(a1 + 24) + 16) + 32 * *(unsigned int *)(a1 + 32) + 24;
  }
  re::internal::assertLog((re::internal *)4, a2, "assertion failure: '%s' (%s:line %i) HashTable entries may not be added or removed during iteration.", "iter->originalVersion == iter->hashTable->version()", "operator()", 607);
  uint64_t result = _os_crash();
  __break(1u);
  return result;
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::v1::AudioSourceState *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::Allocator *)#2}::__invoke(_DWORD *a1, uint64_t a2)
{
  if (a1[2] == *(_DWORD *)(*(void *)a1 + 40))
  {
    uint64_t v2 = *(uint64_t (**)(uint64_t, _DWORD *))(*(void *)a2 + 40);
    return v2(a2, a1);
  }
  else
  {
    re::internal::assertLog((re::internal *)4, a2, "assertion failure: '%s' (%s:line %i) HashTable entries may not be added or removed during iteration.", "iter->originalVersion == iter->hashTable->version()", "operator()", 616);
    uint64_t result = _os_crash();
    __break(1u);
  }
  return result;
}

void re::ecs2::v1::AudioPlayerComponent::~AudioPlayerComponent(re::ecs2::v1::AudioPlayerComponent *this)
{
  *(void *)this = &unk_26E6F7BF0;
  uint64_t v2 = (uint64_t *)((char *)this + 32);
  re::DynamicArray<re::AssetHandle>::deinit((uint64_t)this + 120);
  re::DynamicArray<unsigned long>::deinit((uint64_t)this + 80);
  re::HashTable<void *,re::internal::AnimationCompositionChainBase *,re::Hash<void *>,re::EqualTo<void *>,true,false>::deinit(v2);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t *v2;
  uint64_t vars8;

  *(void *)this = &unk_26E6F7BF0;
  uint64_t v2 = (uint64_t *)((char *)this + 32);
  re::DynamicArray<re::AssetHandle>::deinit((uint64_t)this + 120);
  re::DynamicArray<unsigned long>::deinit((uint64_t)this + 80);
  re::HashTable<void *,re::internal::AnimationCompositionChainBase *,re::Hash<void *>,re::EqualTo<void *>,true,false>::deinit(v2);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::v1::AudioPlayerComponent,(re::ecs2::ComponentTypeBase::Flags)0>::allocator()
{
  return MEMORY[0x38];
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::v1::AudioPlayerComponent,(re::ecs2::ComponentTypeBase::Flags)0>::commonComponentIndex()
{
  return -1;
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::v1::AudioPlayerComponent,(re::ecs2::ComponentTypeBase::Flags)0>::componentType()
{
  return 0;
}

double re::make::shared::unsafelyInplace<re::ecs2::SpatialAudioComponent>(ArcSharedObject *a1)
{
  *((_OWORD *)a1 + 2) = 0u;
  *((_OWORD *)a1 + 3) = 0u;
  *(_OWORD *)a1 = 0u;
  *((_OWORD *)a1 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(a1, 0);
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 24) = 0;
  *(void *)uint64_t v1 = &unk_26E6F7168;
  *(_DWORD *)(v1 + 28) = 0;
  *(_DWORD *)(v1 + 32) = 0;
  *(void *)(v1 + 36) = 0x13F800000;
  double result = 6.14672757e-10;
  *(_OWORD *)(v1 + 44) = xmmword_234386C90;
  return result;
}

void *re::ecs2::allocInfo_UILayerGeometryComponent(re::ecs2 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83D38, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF83D38))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF83DA0, "UILayerGeometryComponent");
    __cxa_guard_release(&qword_26AF83D38);
  }
  return &unk_26AF83DA0;
}

void re::ecs2::initInfo_UILayerGeometryComponent(re::ecs2 *this, re::IntrospectionBase *a2)
{
  unint64_t v158 = 0xE73E24FF61F3F61CLL;
  int v159 = "UILayerGeometryComponent";
  re::StringID::destroyString((re::StringID *)&v158);
  *((_OWORD *)this + 2) = v154;
  if (atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83D30, memory_order_acquire)) {
    goto LABEL_2;
  }
  int v4 = (re *)__cxa_guard_acquire(&qword_26AF83D30);
  if (!v4) {
    goto LABEL_2;
  }
  uint64_t v5 = re::introspectionAllocator(v4);
  uint64_t v6 = re::ecs2::introspect_Component((re::IntrospectionBase **)1);
  uint64_t v7 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v5 + 32))(v5, 72, 8);
  *(_DWORD *)uint64_t v7 = 1;
  *(void *)(v7 + 8) = "Component";
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = 0;
  *(void *)(v7 + 32) = 0;
  *(_DWORD *)(v7 + 40) = 3;
  *(void *)(v7 + 48) = 0;
  *(void *)(v7 + 56) = 0;
  *(_DWORD *)(v7 + 64) = 0;
  qword_26AF83E18 = v7;
  uint64_t v8 = re::introspectionAllocator((re *)v7);
  unsigned int v10 = re::introspect_uint16_t((re *)1, v9);
  uint64_t v11 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v8 + 32))(v8, 72, 8);
  *(_DWORD *)uint64_t v11 = 1;
  *(void *)(v11 + 8) = "widthSegmentCount";
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = 0;
  *(void *)(v11 + 32) = 0x1A00000001;
  *(_DWORD *)(v11 + 40) = 0;
  *(void *)(v11 + 48) = 0;
  *(void *)(v11 + 56) = 0;
  *(_DWORD *)(v11 + 64) = 0;
  qword_26AF83E20 = v11;
  uint64_t v12 = re::introspectionAllocator((re *)v11);
  unint64_t v14 = re::introspect_uint16_t((re *)1, v13);
  uint64_t v15 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v12 + 32))(v12, 72, 8);
  *(_DWORD *)uint64_t v15 = 1;
  *(void *)(v15 + 8) = "heightSegmentCount";
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = 0;
  *(void *)(v15 + 32) = 0x1C00000002;
  *(_DWORD *)(v15 + 40) = 0;
  *(void *)(v15 + 48) = 0;
  *(void *)(v15 + 56) = 0;
  *(_DWORD *)(v15 + 64) = 0;
  qword_26AF83E28 = v15;
  unint64_t v16 = re::introspectionAllocator((re *)v15);
  int v18 = re::introspect_uint16_t((re *)1, v17);
  uint64_t v19 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v16 + 32))(v16, 72, 8);
  *(_DWORD *)uint64_t v19 = 1;
  *(void *)(v19 + 8) = "flatDepthSegmentCount";
  *(void *)(v19 + 16) = v18;
  *(void *)(v19 + 24) = 0;
  *(void *)(v19 + 32) = 0x1E00000003;
  *(_DWORD *)(v19 + 40) = 0;
  *(void *)(v19 + 48) = 0;
  *(void *)(v19 + 56) = 0;
  *(_DWORD *)(v19 + 64) = 0;
  qword_26AF83E30 = v19;
  int v20 = re::introspectionAllocator((re *)v19);
  uint64_t v22 = re::introspect_uint16_t((re *)1, v21);
  uint64_t v23 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v20 + 32))(v20, 72, 8);
  *(_DWORD *)uint64_t v23 = 1;
  *(void *)(v23 + 8) = "cornerRadiusSegmentCount";
  *(void *)(v23 + 16) = v22;
  *(void *)(v23 + 24) = 0;
  *(void *)(v23 + 32) = 0x2000000004;
  *(_DWORD *)(v23 + 40) = 0;
  *(void *)(v23 + 48) = 0;
  *(void *)(v23 + 56) = 0;
  *(_DWORD *)(v23 + 64) = 0;
  qword_26AF83E38 = v23;
  signed int v24 = re::introspectionAllocator((re *)v23);
  uint64_t v26 = re::introspect_uint16_t((re *)1, v25);
  uint64_t v27 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v24 + 32))(v24, 72, 8);
  *(_DWORD *)uint64_t v27 = 1;
  *(void *)(v27 + 8) = "frontBackBevelSegmentCount";
  *(void *)(v27 + 16) = v26;
  *(void *)(v27 + 24) = 0;
  *(void *)(v27 + 32) = 0x2200000005;
  *(_DWORD *)(v27 + 40) = 0;
  *(void *)(v27 + 48) = 0;
  *(void *)(v27 + 56) = 0;
  *(_DWORD *)(v27 + 64) = 0;
  qword_26AF83E40 = v27;
  unint64_t v28 = re::introspectionAllocator((re *)v27);
  long long v30 = re::introspect_float((re *)1, v29);
  uint64_t v31 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v28 + 32))(v28, 72, 8);
  *(_DWORD *)uint64_t v31 = 1;
  *(void *)(v31 + 8) = "bevelFrontDepth";
  *(void *)(v31 + 16) = v30;
  *(void *)(v31 + 24) = 0;
  *(void *)(v31 + 32) = 0x2400000006;
  *(_DWORD *)(v31 + 40) = 0;
  *(void *)(v31 + 48) = 0;
  *(void *)(v31 + 56) = 0;
  *(_DWORD *)(v31 + 64) = 0;
  qword_26AF83E48 = v31;
  uint64_t v32 = re::introspectionAllocator((re *)v31);
  uint64_t v34 = re::introspect_float((re *)1, v33);
  uint64_t v35 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v32 + 32))(v32, 72, 8);
  *(_DWORD *)uint64_t v35 = 1;
  *(void *)(v35 + 8) = "bevelBackDepth";
  *(void *)(v35 + 16) = v34;
  *(void *)(v35 + 24) = 0;
  *(void *)(v35 + 32) = 0x2800000007;
  *(_DWORD *)(v35 + 40) = 0;
  *(void *)(v35 + 48) = 0;
  *(void *)(v35 + 56) = 0;
  *(_DWORD *)(v35 + 64) = 0;
  qword_26AF83E50 = v35;
  long long v36 = re::introspectionAllocator((re *)v35);
  long long v38 = re::introspect_float((re *)1, v37);
  uint64_t v39 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v36 + 32))(v36, 72, 8);
  *(_DWORD *)uint64_t v39 = 1;
  *(void *)(v39 + 8) = "flatDepth";
  *(void *)(v39 + 16) = v38;
  *(void *)(v39 + 24) = 0;
  *(void *)(v39 + 32) = 0x2C00000008;
  *(_DWORD *)(v39 + 40) = 0;
  *(void *)(v39 + 48) = 0;
  *(void *)(v39 + 56) = 0;
  *(_DWORD *)(v39 + 64) = 0;
  qword_26AF83E58 = v39;
  uint64_t v40 = re::introspectionAllocator((re *)v39);
  long long v42 = re::introspect_float((re *)1, v41);
  uint64_t v43 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v40 + 32))(v40, 72, 8);
  *(_DWORD *)uint64_t v43 = 1;
  *(void *)(v43 + 8) = "width";
  *(void *)(v43 + 16) = v42;
  *(void *)(v43 + 24) = 0;
  *(void *)(v43 + 32) = 0x3000000009;
  *(_DWORD *)(v43 + 40) = 0;
  *(void *)(v43 + 48) = 0;
  *(void *)(v43 + 56) = 0;
  *(_DWORD *)(v43 + 64) = 0;
  qword_26AF83E60 = v43;
  uint64_t v44 = re::introspectionAllocator((re *)v43);
  uint64_t v46 = re::introspect_float((re *)1, v45);
  uint64_t v47 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v44 + 32))(v44, 72, 8);
  *(_DWORD *)uint64_t v47 = 1;
  *(void *)(v47 + 8) = "height";
  *(void *)(v47 + 16) = v46;
  *(void *)(v47 + 24) = 0;
  *(void *)(v47 + 32) = 0x340000000ALL;
  *(_DWORD *)(v47 + 40) = 0;
  *(void *)(v47 + 48) = 0;
  *(void *)(v47 + 56) = 0;
  *(_DWORD *)(v47 + 64) = 0;
  qword_26AF83E68 = v47;
  uint64_t v48 = re::introspectionAllocator((re *)v47);
  uint64_t v50 = re::introspect_float((re *)1, v49);
  uint64_t v51 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v48 + 32))(v48, 72, 8);
  *(_DWORD *)uint64_t v51 = 1;
  *(void *)(v51 + 8) = "cornerRadius";
  *(void *)(v51 + 16) = v50;
  *(void *)(v51 + 24) = 0;
  *(void *)(v51 + 32) = 0x380000000BLL;
  *(_DWORD *)(v51 + 40) = 0;
  *(void *)(v51 + 48) = 0;
  *(void *)(v51 + 56) = 0;
  *(_DWORD *)(v51 + 64) = 0;
  qword_26AF83E70 = v51;
  uint64_t v52 = re::introspectionAllocator((re *)v51);
  uint64_t v54 = re::introspect_BOOL((re *)1, v53);
  uint64_t v55 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v52 + 32))(v52, 72, 8);
  *(_DWORD *)uint64_t v55 = 1;
  *(void *)(v55 + 8) = "needsVertDistanceToPlatterEdge";
  *(void *)(v55 + 16) = v54;
  *(void *)(v55 + 24) = 0;
  *(void *)(v55 + 32) = 0x3C0000000CLL;
  *(_DWORD *)(v55 + 40) = 0;
  *(void *)(v55 + 48) = 0;
  *(void *)(v55 + 56) = 0;
  *(_DWORD *)(v55 + 64) = 0;
  qword_26AF83E78 = v55;
  uint64_t v56 = re::introspectionAllocator((re *)v55);
  float v58 = re::introspect_float((re *)1, v57);
  uint64_t v59 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v56 + 32))(v56, 72, 8);
  *(_DWORD *)uint64_t v59 = 1;
  *(void *)(v59 + 8) = "curveTheta";
  *(void *)(v59 + 16) = v58;
  *(void *)(v59 + 24) = 0;
  *(void *)(v59 + 32) = 0x400000000DLL;
  *(_DWORD *)(v59 + 40) = 0;
  *(void *)(v59 + 48) = 0;
  *(void *)(v59 + 56) = 0;
  *(_DWORD *)(v59 + 64) = 0;
  qword_26AF83E80 = v59;
  uint64_t v60 = re::introspectionAllocator((re *)v59);
  uint64_t v62 = re::introspect_BOOL((re *)1, v61);
  uint64_t v63 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v60 + 32))(v60, 72, 8);
  *(_DWORD *)uint64_t v63 = 1;
  *(void *)(v63 + 8) = "curveDirectionIsFrontward";
  *(void *)(v63 + 16) = v62;
  *(void *)(v63 + 24) = 0;
  *(void *)(v63 + 32) = 0x440000000ELL;
  *(_DWORD *)(v63 + 40) = 0;
  *(void *)(v63 + 48) = 0;
  *(void *)(v63 + 56) = 0;
  *(_DWORD *)(v63 + 64) = 0;
  qword_26AF83E88 = v63;
  uint64_t v64 = re::introspectionAllocator((re *)v63);
  uint64_t v66 = re::introspect_uint16_t((re *)1, v65);
  uint64_t v67 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v64 + 32))(v64, 72, 8);
  *(_DWORD *)uint64_t v67 = 1;
  *(void *)(v67 + 8) = "meshWidthSegmentCount";
  *(void *)(v67 + 16) = v66;
  *(void *)(v67 + 24) = 0;
  *(void *)(v67 + 32) = 0x6E0000000FLL;
  *(_DWORD *)(v67 + 40) = 0;
  *(void *)(v67 + 48) = 0;
  *(void *)(v67 + 56) = 0;
  *(_DWORD *)(v67 + 64) = 0;
  qword_26AF83E90 = v67;
  uint64_t v68 = re::introspectionAllocator((re *)v67);
  uint64_t v70 = re::introspect_uint16_t((re *)1, v69);
  uint64_t v71 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v68 + 32))(v68, 72, 8);
  *(_DWORD *)uint64_t v71 = 1;
  *(void *)(v71 + 8) = "meshHeightSegmentCount";
  *(void *)(v71 + 16) = v70;
  *(void *)(v71 + 24) = 0;
  *(void *)(v71 + 32) = 0x7000000010;
  *(_DWORD *)(v71 + 40) = 0;
  *(void *)(v71 + 48) = 0;
  *(void *)(v71 + 56) = 0;
  *(_DWORD *)(v71 + 64) = 0;
  qword_26AF83E98 = v71;
  unint64_t v72 = re::introspectionAllocator((re *)v71);
  uint64_t v74 = re::introspect_uint16_t((re *)1, v73);
  uint64_t v75 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v72 + 32))(v72, 72, 8);
  *(_DWORD *)uint64_t v75 = 1;
  *(void *)(v75 + 8) = "meshFlatDepthSegmentCount";
  *(void *)(v75 + 16) = v74;
  *(void *)(v75 + 24) = 0;
  *(void *)(v75 + 32) = 0x7200000011;
  *(_DWORD *)(v75 + 40) = 0;
  *(void *)(v75 + 48) = 0;
  *(void *)(v75 + 56) = 0;
  *(_DWORD *)(v75 + 64) = 0;
  qword_26AF83EA0 = v75;
  uint64_t v76 = re::introspectionAllocator((re *)v75);
  unint64_t v78 = re::introspect_uint16_t((re *)1, v77);
  uint64_t v79 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v76 + 32))(v76, 72, 8);
  *(_DWORD *)uint64_t v79 = 1;
  *(void *)(v79 + 8) = "meshCornerRadiusSegmentCount";
  *(void *)(v79 + 16) = v78;
  *(void *)(v79 + 24) = 0;
  *(void *)(v79 + 32) = 0x7400000012;
  *(_DWORD *)(v79 + 40) = 0;
  *(void *)(v79 + 48) = 0;
  *(void *)(v79 + 56) = 0;
  *(_DWORD *)(v79 + 64) = 0;
  qword_26AF83EA8 = v79;
  uint64_t v80 = re::introspectionAllocator((re *)v79);
  int v82 = re::introspect_uint16_t((re *)1, v81);
  uint64_t v83 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v80 + 32))(v80, 72, 8);
  *(_DWORD *)uint64_t v83 = 1;
  *(void *)(v83 + 8) = "meshFrontBackBevelSegmentCount";
  *(void *)(v83 + 16) = v82;
  *(void *)(v83 + 24) = 0;
  *(void *)(v83 + 32) = 0x7600000013;
  *(_DWORD *)(v83 + 40) = 0;
  *(void *)(v83 + 48) = 0;
  *(void *)(v83 + 56) = 0;
  *(_DWORD *)(v83 + 64) = 0;
  qword_26AF83EB0 = v83;
  int v84 = re::introspectionAllocator((re *)v83);
  int v86 = re::introspect_float((re *)1, v85);
  uint64_t v87 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v84 + 32))(v84, 72, 8);
  *(_DWORD *)uint64_t v87 = 1;
  *(void *)(v87 + 8) = "meshBevelFrontDepth";
  *(void *)(v87 + 16) = v86;
  *(void *)(v87 + 24) = 0;
  *(void *)(v87 + 32) = 0x7800000014;
  *(_DWORD *)(v87 + 40) = 0;
  *(void *)(v87 + 48) = 0;
  *(void *)(v87 + 56) = 0;
  *(_DWORD *)(v87 + 64) = 0;
  qword_26AF83EB8 = v87;
  __int16 v88 = re::introspectionAllocator((re *)v87);
  uint64_t v90 = re::introspect_float((re *)1, v89);
  uint64_t v91 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v88 + 32))(v88, 72, 8);
  *(_DWORD *)uint64_t v91 = 1;
  *(void *)(v91 + 8) = "meshBevelBackDepth";
  *(void *)(v91 + 16) = v90;
  *(void *)(v91 + 24) = 0;
  *(void *)(v91 + 32) = 0x7C00000015;
  *(_DWORD *)(v91 + 40) = 0;
  *(void *)(v91 + 48) = 0;
  *(void *)(v91 + 56) = 0;
  *(_DWORD *)(v91 + 64) = 0;
  qword_26AF83EC0 = v91;
  uint64_t v92 = re::introspectionAllocator((re *)v91);
  int v94 = re::introspect_float((re *)1, v93);
  uint64_t v95 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v92 + 32))(v92, 72, 8);
  *(_DWORD *)uint64_t v95 = 1;
  *(void *)(v95 + 8) = "meshFlatDepth";
  *(void *)(v95 + 16) = v94;
  *(void *)(v95 + 24) = 0;
  *(void *)(v95 + 32) = 0x8000000016;
  *(_DWORD *)(v95 + 40) = 0;
  *(void *)(v95 + 48) = 0;
  *(void *)(v95 + 56) = 0;
  *(_DWORD *)(v95 + 64) = 0;
  qword_26AF83EC8 = v95;
  uint64_t v96 = re::introspectionAllocator((re *)v95);
  long long v98 = re::introspect_float((re *)1, v97);
  uint64_t v99 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v96 + 32))(v96, 72, 8);
  *(_DWORD *)uint64_t v99 = 1;
  *(void *)(v99 + 8) = "meshWidth";
  *(void *)(v99 + 16) = v98;
  *(void *)(v99 + 24) = 0;
  *(void *)(v99 + 32) = 0x8400000017;
  *(_DWORD *)(v99 + 40) = 0;
  *(void *)(v99 + 48) = 0;
  *(void *)(v99 + 56) = 0;
  *(_DWORD *)(v99 + 64) = 0;
  qword_26AF83ED0 = v99;
  float v100 = re::introspectionAllocator((re *)v99);
  uint64_t v102 = re::introspect_float((re *)1, v101);
  uint64_t v103 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v100 + 32))(v100, 72, 8);
  *(_DWORD *)uint64_t v103 = 1;
  *(void *)(v103 + 8) = "meshHeight";
  *(void *)(v103 + 16) = v102;
  *(void *)(v103 + 24) = 0;
  *(void *)(v103 + 32) = 0x8800000018;
  *(_DWORD *)(v103 + 40) = 0;
  *(void *)(v103 + 48) = 0;
  *(void *)(v103 + 56) = 0;
  *(_DWORD *)(v103 + 64) = 0;
  qword_26AF83ED8 = v103;
  float32x4_t v104 = re::introspectionAllocator((re *)v103);
  uint64_t v106 = re::introspect_float((re *)1, v105);
  uint64_t v107 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v104 + 32))(v104, 72, 8);
  *(_DWORD *)uint64_t v107 = 1;
  *(void *)(v107 + 8) = "meshCornerRadius";
  *(void *)(v107 + 16) = v106;
  *(void *)(v107 + 24) = 0;
  *(void *)(v107 + 32) = 0x8C00000019;
  *(_DWORD *)(v107 + 40) = 0;
  *(void *)(v107 + 48) = 0;
  *(void *)(v107 + 56) = 0;
  *(_DWORD *)(v107 + 64) = 0;
  qword_26AF83EE0 = v107;
  uint64_t v108 = re::introspectionAllocator((re *)v107);
  float32x4_t v110 = re::introspect_BOOL((re *)1, v109);
  uint64_t v111 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v108 + 32))(v108, 72, 8);
  *(_DWORD *)uint64_t v111 = 1;
  *(void *)(v111 + 8) = "meshNeedsVertDistanceToPlatterEdge";
  *(void *)(v111 + 16) = v110;
  *(void *)(v111 + 24) = 0;
  *(void *)(v111 + 32) = 0x900000001ALL;
  *(_DWORD *)(v111 + 40) = 0;
  *(void *)(v111 + 48) = 0;
  *(void *)(v111 + 56) = 0;
  *(_DWORD *)(v111 + 64) = 0;
  qword_26AF83EE8 = v111;
  int v112 = re::introspectionAllocator((re *)v111);
  uint64_t v114 = re::introspect_float((re *)1, v113);
  uint64_t v115 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v112 + 32))(v112, 72, 8);
  *(_DWORD *)uint64_t v115 = 1;
  *(void *)(v115 + 8) = "meshCurveTheta";
  *(void *)(v115 + 16) = v114;
  *(void *)(v115 + 24) = 0;
  *(void *)(v115 + 32) = 0x940000001BLL;
  *(_DWORD *)(v115 + 40) = 0;
  *(void *)(v115 + 48) = 0;
  *(void *)(v115 + 56) = 0;
  *(_DWORD *)(v115 + 64) = 0;
  qword_26AF83EF0 = v115;
  uint64_t v116 = re::introspectionAllocator((re *)v115);
  uint64_t v118 = re::introspect_BOOL((re *)1, v117);
  uint64_t v119 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v116 + 32))(v116, 72, 8);
  *(_DWORD *)uint64_t v119 = 1;
  *(void *)(v119 + 8) = "meshCurveDirectionIsFrontward";
  *(void *)(v119 + 16) = v118;
  *(void *)(v119 + 24) = 0;
  *(void *)(v119 + 32) = 0x980000001CLL;
  *(_DWORD *)(v119 + 40) = 0;
  *(void *)(v119 + 48) = 0;
  *(void *)(v119 + 56) = 0;
  *(_DWORD *)(v119 + 64) = 0;
  qword_26AF83EF8 = v119;
  uint64_t v121 = re::introspectionAllocator((re *)v119);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83D20, memory_order_acquire) & 1) == 0)
  {
    int v145 = (re *)__cxa_guard_acquire(&qword_26AF83D20);
    if (v145)
    {
      int v146 = re::introspectionAllocator(v145);
      uint64_t v147 = (re *)(*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v146 + 32))(v146, 24, 8);
      *(_DWORD *)uint64_t v147 = 1;
      *((void *)v147 + 1) = 0;
      *((void *)v147 + 2) = "None";
      qword_26AF83D40 = (uint64_t)v147;
      uint64_t v148 = re::introspectionAllocator(v147);
      float v149 = (re *)(*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v148 + 32))(v148, 24, 8);
      *(_DWORD *)float v149 = 1;
      *((void *)v149 + 1) = 1;
      *((void *)v149 + 2) = "FadeUI";
      qword_26AF83D48 = (uint64_t)v149;
      float v150 = re::introspectionAllocator(v149);
      uint64_t v151 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v150 + 32))(v150, 24, 8);
      *(_DWORD *)uint64_t v151 = 1;
      *(void *)(v151 + 8) = 2;
      *(void *)(v151 + 16) = "Constant";
      qword_26AF83D50 = v151;
      __cxa_guard_release(&qword_26AF83D20);
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83D28, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF83D28))
  {
    re::IntrospectionBasic::IntrospectionBasic((re::IntrospectionBasic *)&qword_26AF83D58, "UILayerGeometryGroundingShadowType", 1, 1, 1, 1);
    qword_26AF83D58 = (uint64_t)&unk_26E715E00;
    qword_26AF83D98 = (uint64_t)&re::ecs2::introspect_UILayerGeometryGroundingShadowType(BOOL)::enumTable;
    dword_26AF83D68 = 9;
    __cxa_guard_release(&qword_26AF83D28);
  }
  if (_MergedGlobals_178)
  {
LABEL_33:
    uint64_t v144 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v121 + 32))(v121, 72, 8);
    *(_DWORD *)uint64_t v144 = 1;
    *(void *)(v144 + 8) = "groundingShadowType";
    *(void *)(v144 + 16) = &qword_26AF83D58;
    *(void *)(v144 + 24) = 0;
    *(void *)(v144 + 32) = 0x6C0000001DLL;
    *(_DWORD *)(v144 + 40) = 0;
    *(void *)(v144 + 48) = 0;
    *(void *)(v144 + 56) = 0;
    *(_DWORD *)(v144 + 64) = 0;
    qword_26AF83F00 = v144;
    __cxa_guard_release(&qword_26AF83D30);
LABEL_2:
    *((void *)this + 2) = 0x3C000000008;
    *((_DWORD *)this + 6) = 8;
    *((_WORD *)this + re::HashTable<re::ecs2::Scene const*,re::HashTable<unsigned long long,re::SharedPtr<re::AudioSourceState>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,true,false>::deinit((uint64_t *)this + 14) = 0;
    *((_DWORD *)this + re::HashTable<re::ecs2::Scene const*,re::HashTable<unsigned long long,re::SharedPtr<re::AudioSourceState>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,true,false>::deinit((uint64_t *)this + 14) = 30;
    *((void *)this + 8) = &qword_26AF83E18;
    *((void *)this + 9) = re::internal::defaultConstruct<re::ecs2::UILayerGeometryComponent>;
    *((void *)this + re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 11) = 0;
    *((void *)this + 12) = 0;
    *((void *)this + 10) = re::internal::defaultDestruct<re::ecs2::UILayerGeometryComponent>;
    *((void *)this + 13) = re::internal::defaultConstructV2<re::ecs2::UILayerGeometryComponent>;
    *((void *)this + re::HashTable<re::ecs2::Scene const*,re::HashTable<unsigned long long,re::SharedPtr<re::AudioSourceState>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,true,false>::deinit((uint64_t *)this + 14) = re::internal::defaultDestructV2<re::ecs2::UILayerGeometryComponent>;
    re::IntrospectionRegistry::add(this, v3);
    long long v153 = v154;
    return;
  }
  _MergedGlobals_178 = 1;
  re::IntrospectionRegistry::add((re::IntrospectionRegistry *)&qword_26AF83D58, v120);
  v155[0] = 0xE31EB6F765E1894CLL;
  v155[1] = (uint64_t)"UILayerGeometryGroundingShadowType";
  unint64_t v158 = 0x31CD534126;
  int v159 = "uint8_t";
  uint64_t v122 = (uint64_t *)re::HashTable<re::StringID,re::StateParameterInt *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::tryGet((uint64_t)&unk_2687A0D30, &v158);
  if (v122)
  {
    uint64_t v123 = *v122;
    re::StringID::destroyString((re::StringID *)&v158);
    int32x4_t v124 = (unsigned int *)qword_26AF83D98;
    v157[1] = v123;
    re::TypeBuilder::beginEnumType((uint64_t)&v158, v155, 1, 1, (uint64_t)v157);
    unint64_t v126 = *v124;
    if (v126)
    {
      for (unint64_t i = 0; i < v126; ++i)
      {
        uint64_t v128 = *(void *)(*((void *)v124 + 1) + 8 * i);
        if (*(_DWORD *)v128 == 1)
        {
          float32x4_t v129 = *(char **)(v128 + 16);
          if (v129)
          {
            uint64_t v130 = *v129;
            if (*v129)
            {
              char v131 = v129[1];
              if (v131)
              {
                int v132 = (unsigned __int8 *)(v129 + 2);
                do
                {
                  uint64_t v130 = 31 * v130 + v131;
                  int v133 = *v132++;
                  char v131 = v133;
                }
                while (v133);
              }
            }
          }
          else
          {
            uint64_t v130 = 0;
          }
          uint64_t v134 = *(void *)(v128 + 8);
          *(void *)&v156.var0 = 2 * v130;
          v156.var1 = v129;
          re::TypeBuilder::addEnumConstant((re::TypeBuilder *)&v158, v134, &v156);
          re::StringID::destroyString((re::StringID *)&v156);
          unint64_t v126 = *v124;
        }
      }
      if (v126)
      {
        for (unint64_t j = 0; j < v126; ++j)
        {
          uint64_t v136 = *(void *)(*((void *)v124 + 1) + 8 * j);
          if (*(_DWORD *)v136 == 2)
          {
            uint64_t v137 = *(char **)(v136 + 16);
            if (v137)
            {
              uint64_t v138 = *v137;
              if (*v137)
              {
                char v139 = v137[1];
                if (v139)
                {
                  int v140 = (unsigned __int8 *)(v137 + 2);
                  do
                  {
                    uint64_t v138 = 31 * v138 + v139;
                    int v141 = *v140++;
                    char v139 = v141;
                  }
                  while (v141);
                }
              }
            }
            else
            {
              uint64_t v138 = 0;
            }
            uint64_t v142 = *(void *)(v136 + 8);
            *(void *)&v156.var0 = 2 * v138;
            v156.var1 = v137;
            re::TypeBuilder::addEnumConstantRenaming((re::TypeBuilder *)&v158, v142, &v156);
            re::StringID::destroyString((re::StringID *)&v156);
            unint64_t v126 = *v124;
          }
        }
      }
    }
    re::TypeBuilder::~TypeBuilder((re::TypeBuilder *)&v158, v143);
    xmmword_26AF83D78 = (__int128)v156;
    re::StringID::destroyString((re::StringID *)v155);
    goto LABEL_33;
  }
  re::StringID::destroyString((re::StringID *)&v158);
  re::internal::assertLog((re::internal *)5, v152, "assertion failure: '%s' (%s:line %i) Failed to determine underlying type of enum %s.", "valueID.isValid()", "registerEnumType", 2796, "UILayerGeometryGroundingShadowType");
  _os_crash();
  __break(1u);
}

void *re::internal::defaultConstruct<re::ecs2::UILayerGeometryComponent>(uint64_t a1, uint64_t a2, void *a3)
{
  return re::make::shared::unsafelyInplace<re::ecs2::UILayerGeometryComponent>(a3);
}

void *re::internal::defaultDestruct<re::ecs2::UILayerGeometryComponent>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_destroyWeak((id *)(a3 + 952));
  *(void *)(a3 + 952) = 0;
  re::GeomMesh::~GeomMesh((re::GeomMesh *)(a3 + 200));
  *(void *)a3 = &unk_26E6DECE0;
  return objc_destructInstance((id)(a3 + 8));
}

void *re::internal::defaultDestructV2<re::ecs2::UILayerGeometryComponent>(uint64_t a1)
{
  objc_destroyWeak((id *)(a1 + 952));
  *(void *)(a1 + 952) = 0;
  re::GeomMesh::~GeomMesh((re::GeomMesh *)(a1 + 200));
  *(void *)a1 = &unk_26E6DECE0;
  return objc_destructInstance((id)(a1 + 8));
}

uint64_t re::ecs2::introspect_UILayerGeometryComponent(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"UILayerGeometryComponent", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_UILayerGeometryComponent, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_UILayerGeometryComponent, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::UILayerGeometryComponent>, this);
}

void re::ecs2::UILayerGeometryComponent::buildGeomMesh(re::ecs2::UILayerGeometryComponent *this, double a2)
{
  uint64_t v98 = *MEMORY[0x263EF8340];
  LODWORD(a2) = *((_DWORD *)this + 14);
  uint64_t v59 = *(void *)((char *)this + 26);
  __int16 v60 = *((_WORD *)this + 17);
  uint64_t v62 = *(void *)((char *)this + 36);
  int v63 = *((_DWORD *)this + 11);
  __int16 v65 = 257;
  char v66 = 0;
  float32x2_t v4 = *(float32x2_t *)((char *)this + 48);
  *(float *)&a2 = fminf(*(float *)&a2, fminf(v4.f32[0], v4.f32[1]) * 0.5);
  int v61 = LODWORD(a2);
  float32x2_t v64 = v4;
  __asm { FMOV            V9.2S, #0.25 }
  float32x2_t v10 = vmul_f32(v4, _D9);
  float32x2_t v11 = vmul_f32(v4, (float32x2_t)0x3F0000003F000000);
  float32x2_t v12 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)&a2, 0);
  __asm { FMOV            V8.2S, #1.0 }
  float32x2_t v67 = vsub_f32(_D8, vdiv_f32(vsub_f32((float32x2_t)vbsl_s8((int8x8_t)vcgt_f32(v10, v12), (int8x8_t)v10, vbsl_s8((int8x8_t)vcgt_f32(v12, v11), (int8x8_t)v11, (int8x8_t)v12)), v10), vsub_f32(v11, v10)));
  int v68 = 0;
  if (*((unsigned char *)this + 60)) {
    unint64_t v14 = "vertDistanceToPlatterEdge";
  }
  else {
    unint64_t v14 = 0;
  }
  uint64_t v69 = v14;
  uint64_t v15 = (re::ecs2::UILayerGeometryComponent *)((char *)this + 200);
  re::buildPlatterWithRoundedCorners((unsigned int *)this + 50, (unsigned __int16 *)&v59);
  float v17 = *((float *)this + 16);
  if (v17 > 0.0)
  {
    float v18 = fabsf(v17);
    if (v18 >= (float)((float)(v18 + 1.0) * 0.00001)) {
      re::internal::wrapGeometryAroundCylinder(v15, v15, (re::GeomMesh *)*((unsigned __int8 *)this + 68), v17);
    }
  }
  if (*((unsigned char *)this + 69))
  {
    unint64_t v2 = *((unsigned int *)this + 54);
    uint64_t v19 = re::modifyVertexUVs(v15, v16);
    if (v2)
    {
      uint64_t v20 = v16;
      uint64_t v21 = v16;
      while (v21)
      {
        LODWORD(v22) = *(_DWORD *)v19;
        *((float *)&v22 + 1) = 1.0 - *(float *)(v19 + 4);
        *(void *)uint64_t v19 = v22;
        v19 += 8;
        --v21;
        if (!--v2) {
          goto LABEL_12;
        }
      }
      uint64_t v70 = 0;
      long long v85 = 0u;
      long long v86 = 0u;
      long long v83 = 0u;
      long long v84 = 0u;
      *(_OWORD *)uuid_t out = 0u;
      os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
      *(_DWORD *)CMTime buf = 136315906;
      *(void *)&uint8_t buf[4] = "operator[]";
      *(_WORD *)&unsigned char buf[12] = 1024;
      *(_DWORD *)&buf[14] = 609;
      *(_WORD *)&buf[18] = 2048;
      *(void *)&buf[20] = v20;
      *(_WORD *)&buf[28] = 2048;
      *(void *)&buf[30] = v20;
      _os_log_send_and_compose_impl();
      _os_crash_msg();
      __break(1u);
      goto LABEL_46;
    }
  }
LABEL_12:
  float v23 = *((float *)this + 26);
  if (v23 > 0.0)
  {
    float v24 = fabsf(v23);
    if (v24 >= (float)((float)(v24 + 1.0) * 0.00001))
    {
      uint64_t v70 = *(void *)((char *)this + 26);
      float32x2_t v26 = *(float32x2_t *)((char *)this + 48);
      uint64_t v74 = *((void *)this + 5);
      v25.i32[1] = HIDWORD(v74);
      float v27 = *((float *)this + 14);
      __int16 v71 = *((_WORD *)this + 17);
      __int16 v76 = 257;
      char v77 = 0;
      *(float *)v25.i32 = fminf(v27, fminf(v26.f32[0], v26.f32[1]) * 0.5);
      __int32 v72 = v25.i32[0];
      float v73 = v23;
      float32x2_t v75 = v26;
      float32x2_t v28 = vmul_f32(v26, _D9);
      float32x2_t v29 = vmul_f32(v26, (float32x2_t)0x3F0000003F000000);
      float32x2_t v30 = (float32x2_t)vdup_lane_s32(v25, 0);
      float32x2_t v78 = vsub_f32(_D8, vdiv_f32(vsub_f32((float32x2_t)vbsl_s8((int8x8_t)vcgt_f32(v28, v30), (int8x8_t)v28, vbsl_s8((int8x8_t)vcgt_f32(v30, v29), (int8x8_t)v29, (int8x8_t)v30)), v28), vsub_f32(v29, v28)));
      int v79 = 0;
      if (*((unsigned char *)this + 60)) {
        uint64_t v31 = "vertDistanceToPlatterEdge";
      }
      else {
        uint64_t v31 = 0;
      }
      uint64_t v80 = v31;
      re::GeomMesh::GeomMesh((re::GeomMesh *)out, 0);
      re::buildPlatterWithRoundedCorners((unsigned int *)out, (unsigned __int16 *)&v70);
      float v32 = *((float *)this + 16);
      if (v32 > 0.0)
      {
        float v33 = fabsf(v32);
        if (v33 >= (float)((float)(v33 + 1.0) * 0.00001))
        {
          re::internal::wrapGeometryAroundCylinder((re::internal *)out, (const re::GeomMesh *)out, (re::GeomMesh *)*((unsigned __int8 *)this + 68), v32);
          re::computeSmoothFaceVaryingNormals((re *)out, v34, 0.7854);
        }
      }
      uint64_t v35 = re::GeomMesh::modifyVertexPositions((re::GeomMesh *)out);
      int v37 = v36;
      re::GeomMesh::accessVertexPositions(v15);
      if (v37 == v38)
      {
        if (v37)
        {
          unint64_t v2 = 0;
          uint64_t v39 = 8;
          while (1)
          {
            uint64_t v40 = re::GeomMesh::accessVertexPositions(v15);
            if (v2 >= v41) {
              break;
            }
            *(_DWORD *)(v35 + v39) = *(_DWORD *)(v40 + v39);
            ++v2;
            v39 += 16;
            if (v37 == v2) {
              goto LABEL_25;
            }
          }
LABEL_47:
          uint64_t v58 = v41;
          uint64_t v81 = 0;
          long long v96 = 0u;
          long long v97 = 0u;
          memset(buf, 0, sizeof(buf));
          os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
          int v87 = 136315906;
          __int16 v88 = "operator[]";
          __int16 v89 = 1024;
          int v90 = 601;
          __int16 v91 = 2048;
          unint64_t v92 = v2;
          __int16 v93 = 2048;
          uint64_t v94 = v58;
          _os_log_send_and_compose_impl();
          _os_crash_msg();
          __break(1u);
        }
LABEL_25:
        re::GeomMesh::copy((re::GeomMesh *)out, v15);
      }
      else
      {
        if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83D18, memory_order_acquire) & 1) == 0
          && __cxa_guard_acquire(&qword_26AF83D18))
        {
          qword_26AF83D10 = (uint64_t)os_log_create("com.apple.re", "UILayer");
          __cxa_guard_release(&qword_26AF83D18);
        }
        long long v42 = qword_26AF83D10;
        if (os_log_type_enabled((os_log_t)qword_26AF83D10, OS_LOG_TYPE_DEFAULT))
        {
          re::GeomMesh::accessVertexPositions(v15);
          *(_DWORD *)CMTime buf = 67109376;
          *(_DWORD *)&uint8_t buf[4] = v37;
          *(_WORD *)&buf[8] = 1024;
          *(_DWORD *)&buf[10] = v43;
          _os_log_impl(&dword_233120000, v42, OS_LOG_TYPE_DEFAULT, "Skipped FrontDepthNormals due to mismatch between positionsModifier size (%d) and baseMesh (%d)", buf, 0xEu);
        }
      }
      re::GeomMesh::~GeomMesh((re::GeomMesh *)out);
    }
  }
  uint32x2_t v44 = (uint32x2_t)vmvn_s8((int8x8_t)vceq_f32(*(float32x2_t *)((char *)this + 96), _D8));
  if ((vpmax_u32(v44, v44).u32[0] & 0x80000000) != 0
    || (uint32x2_t v45 = (uint32x2_t)vmvn_s8((int8x8_t)vceq_f32(*(float32x2_t *)((char *)this + 88), (float32x2_t)1056964608)),
        (vpmax_u32(v45, v45).u32[0] & 0x80000000) != 0))
  {
    uint64_t v46 = *((unsigned int *)this + 54);
    uint64_t v47 = (float32x2_t *)re::modifyVertexUVs(v15, v16);
    if (v46)
    {
      uint64_t v15 = (re::internal *)v48;
      uint64_t v49 = v48;
      while (v49)
      {
        float32x2_t v50 = vmla_f32(*(float32x2_t *)((char *)this + 88), *(float32x2_t *)((char *)this + 96), vsub_f32(*v47, *(float32x2_t *)((char *)this + 88)));
        float32x2_t *v47 = v50;
        float v51 = *((float *)this + 18);
        float v52 = *((float *)this + 19);
        if (v51 > v50.f32[0]) {
          float v51 = v50.f32[0];
        }
        *((float *)this + 18) = v51;
        float v53 = v47->f32[1];
        if (v52 <= v53) {
          float v53 = v52;
        }
        *((float *)this + 19) = v53;
        __int32 v54 = v47->i32[0];
        float v55 = *((float *)this + 21);
        if (*((float *)this + 20) >= v47->f32[0]) {
          __int32 v54 = *((_DWORD *)this + 20);
        }
        *((_DWORD *)this + 20) = v54;
        float v56 = v47->f32[1];
        if (v55 >= v56) {
          float v56 = v55;
        }
        *((float *)this + 21) = v56;
        ++v47;
        --v49;
        if (!--v46) {
          goto LABEL_44;
        }
      }
LABEL_46:
      uint64_t v70 = 0;
      long long v85 = 0u;
      long long v86 = 0u;
      long long v83 = 0u;
      long long v84 = 0u;
      *(_OWORD *)uuid_t out = 0u;
      os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
      *(_DWORD *)CMTime buf = 136315906;
      *(void *)&uint8_t buf[4] = "operator[]";
      *(_WORD *)&unsigned char buf[12] = 1024;
      *(_DWORD *)&buf[14] = 609;
      *(_WORD *)&buf[18] = 2048;
      *(void *)&buf[20] = v15;
      *(_WORD *)&buf[28] = 2048;
      *(void *)&buf[30] = v15;
      _os_log_send_and_compose_impl();
      _os_crash_msg();
      __break(1u);
      goto LABEL_47;
    }
  }
LABEL_44:
  uuid_generate_random(out);
  *((void *)this + 11re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = (*(void *)&out[8] + (*(void *)out << 6) + (*(void *)out >> 2) - 0x61C8864680B583E9) ^ *(void *)out;
  *(void *)((char *)this + 110) = *(void *)((char *)this + 26);
  *((_WORD *)this + 59) = *((_WORD *)this + 17);
  *(_OWORD *)((char *)this + 120) = *(_OWORD *)((char *)this + 36);
  *((void *)this + 1re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = *(void *)((char *)this + 52);
  *((unsigned char *)this + 144) = *((unsigned char *)this + 60);
  *((_DWORD *)this + 3re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = *((_DWORD *)this + 16);
  *((_WORD *)this + 76) = *((_WORD *)this + 34);
  long long v57 = *(_OWORD *)((char *)this + 88);
  *((_OWORD *)this + 10) = *(_OWORD *)((char *)this + 72);
  *((_OWORD *)this + re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 11) = v57;
  *((_DWORD *)this + 48) = *((_DWORD *)this + 26);
}

void *re::make::shared::unsafelyInplace<re::ecs2::UILayerGeometryComponent>(void *a1)
{
  a1[2] = 0;
  *((unsigned char *)a1 + 24) = 0;
  *a1 = &unk_26E6F66C0;
  *(void *)((char *)a1 + 26) = 0x3000100010001;
  *((_WORD *)a1 + 1re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 4;
  *(_OWORD *)((char *)a1 + 36) = xmmword_234386CE0;
  *(void *)((char *)a1 + 52) = 0x3E4CCCCD3F800000;
  *((unsigned char *)a1 + 60) = 0;
  *((_DWORD *)a1 + 16) = 0;
  *((_WORD *)a1 + 34) = 1;
  *(_OWORD *)(a1 + 9) = re::ecs2::UILayerGeometryComponent::kInOutUVMinMax;
  *(_OWORD *)(a1 + re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 11) = xmmword_234386CF0;
  *((_DWORD *)a1 + 26) = 0;
  *((unsigned char *)a1 + 108) = 0;
  *(void *)((char *)a1 + 110) = 0x3000100010001;
  *((_WORD *)a1 + 59) = 4;
  *(_OWORD *)(a1 + 1re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = xmmword_234386CE0;
  a1[17] = 0x3E4CCCCD3F800000;
  *((unsigned char *)a1 + 144) = 0;
  *((_DWORD *)a1 + 3re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 0;
  *((_WORD *)a1 + 76) = 1;
  *((_OWORD *)a1 + 10) = re::ecs2::UILayerGeometryComponent::kInOutUVMinMax;
  *((_OWORD *)a1 + re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 11) = xmmword_234386CF0;
  *((_DWORD *)a1 + 48) = 0;
  re::GeomMesh::GeomMesh((re::GeomMesh *)(a1 + 25), 0);
  *(_OWORD *)(a1 + 11re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 0u;
  objc_initWeak((id *)a1 + 119, 0);
  return a1;
}

void *re::ecs2::allocInfo_BillboardComponent(re::ecs2 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&_MergedGlobals_179, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&_MergedGlobals_179))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF83F28, "BillboardComponent");
    __cxa_guard_release(&_MergedGlobals_179);
  }
  return &unk_26AF83F28;
}

void re::ecs2::initInfo_BillboardComponent(re::ecs2 *this, re::IntrospectionBase *a2)
{
  v13[0] = 0x627F7D68FFE4F13CLL;
  v13[1] = "BillboardComponent";
  re::StringID::destroyString((re::StringID *)v13);
  *((_OWORD *)this + 2) = v14;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF83F10, memory_order_acquire) & 1) == 0)
  {
    float32x2_t v4 = (re *)__cxa_guard_acquire(&qword_26AF83F10);
    if (v4)
    {
      uint64_t v5 = re::introspectionAllocator(v4);
      uint64_t v6 = re::ecs2::introspect_Component((re::IntrospectionBase **)1);
      uint64_t v7 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v5 + 32))(v5, 72, 8);
      *(_DWORD *)uint64_t v7 = 1;
      *(void *)(v7 + 8) = "Component";
      *(void *)(v7 + 16) = v6;
      *(void *)(v7 + 24) = 0;
      *(void *)(v7 + 32) = 0;
      *(_DWORD *)(v7 + 40) = 3;
      *(void *)(v7 + 48) = 0;
      *(void *)(v7 + 56) = 0;
      *(_DWORD *)(v7 + 64) = 0;
      qword_26AF83F18 = v7;
      uint64_t v8 = re::introspectionAllocator((re *)v7);
      float32x2_t v10 = re::introspect_float((re *)1, v9);
      uint64_t v11 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v8 + 32))(v8, 72, 8);
      *(_DWORD *)uint64_t v11 = 1;
      *(void *)(v11 + 8) = "blendFactor";
      *(void *)(v11 + 16) = v10;
      *(void *)(v11 + 24) = 0;
      *(void *)(v11 + 32) = 0x5000000004;
      *(_DWORD *)(v11 + 40) = 0;
      *(void *)(v11 + 48) = 0;
      *(void *)(v11 + 56) = 0;
      *(_DWORD *)(v11 + 64) = 0;
      qword_26AF83F20 = v11;
      __cxa_guard_release(&qword_26AF83F10);
    }
  }
  *((void *)this + 2) = 0x6000000008;
  *((_DWORD *)this + 6) = 16;
  *((_WORD *)this + re::HashTable<re::ecs2::Scene const*,re::HashTable<unsigned long long,re::SharedPtr<re::AudioSourceState>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,true,false>::deinit((uint64_t *)this + 14) = 0;
  *((_DWORD *)this + re::HashTable<re::ecs2::Scene const*,re::HashTable<unsigned long long,re::SharedPtr<re::AudioSourceState>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,true,false>::deinit((uint64_t *)this + 14) = 2;
  *((void *)this + 8) = &qword_26AF83F18;
  *((void *)this + 9) = re::internal::defaultConstruct<re::ecs2::BillboardComponent>;
  *((void *)this + re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 10) = re::internal::defaultDestruct<re::ecs2::BillboardComponent>;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::ecs2::BillboardComponent>;
  *((void *)this + re::HashTable<re::ecs2::Scene const*,re::HashTable<unsigned long long,re::SharedPtr<re::AudioSourceState>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,true,false>::deinit((uint64_t *)this + 14) = re::internal::defaultDestructV2<re::ecs2::BillboardComponent>;
  re::IntrospectionRegistry::add(this, v3);
  long long v12 = v14;
}

double re::internal::defaultConstruct<re::ecs2::BillboardComponent>(int a1, int a2, ArcSharedObject *this)
{
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *(_OWORD *)this = 0u;
  *((_OWORD *)this + 1) = 0u;
  ArcSharedObject::ArcSharedObject(this, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F6268;
  double result = 0.0078125;
  *(_OWORD *)(v3 + 32) = xmmword_23435FD60;
  *(_OWORD *)(v3 + 48) = xmmword_23435FD80;
  *(_OWORD *)(v3 + 64) = xmmword_23435FD60;
  *(_DWORD *)(v3 + 80) = 1065353216;
  *(_WORD *)(v3 + 84) = 1;
  return result;
}

void *re::internal::defaultDestruct<re::ecs2::BillboardComponent>(uint64_t a1, uint64_t a2, void *a3)
{
  *a3 = &unk_26E6DECE0;
  return objc_destructInstance(a3 + 1);
}

double re::internal::defaultConstructV2<re::ecs2::BillboardComponent>(ArcSharedObject *a1)
{
  *((_OWORD *)a1 + 4) = 0u;
  *((_OWORD *)a1 + re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = 0u;
  *((_OWORD *)a1 + 2) = 0u;
  *((_OWORD *)a1 + 3) = 0u;
  *(_OWORD *)a1 = 0u;
  *((_OWORD *)a1 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(a1, 0);
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 24) = 0;
  *(void *)uint64_t v1 = &unk_26E6F6268;
  double result = 0.0078125;
  *(_OWORD *)(v1 + 32) = xmmword_23435FD60;
  *(_OWORD *)(v1 + 48) = xmmword_23435FD80;
  *(_OWORD *)(v1 + 64) = xmmword_23435FD60;
  *(_DWORD *)(v1 + 80) = 1065353216;
  *(_WORD *)(v1 + 84) = 1;
  return result;
}

void *re::internal::defaultDestructV2<re::ecs2::BillboardComponent>(void *a1)
{
  *a1 = &unk_26E6DECE0;
  return objc_destructInstance(a1 + 1);
}

uint64_t re::ecs2::introspect_BillboardComponent(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"BillboardComponent", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_BillboardComponent, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_BillboardComponent, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::BillboardComponent>, this);
}

void re::PeerVideoStreamingDecoder::~PeerVideoStreamingDecoder(VTDecompressionSessionRef *this)
{
  VTDecompressionSessionRef v2 = *this;
  if (*this)
  {
    VTDecompressionSessionInvalidate(*this);
    CFRelease(v2);
    *this = 0;
  }
}

void re::PeerVideoStreamingDecoder::decodeFrame(VTDecompressionSessionRef *a1, opaqueCMSampleBuffer *a2, uint64_t a3, id *a4)
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  if (re::internal::enableSignposts(0, 0) && re::internal::enableHighFrequencyNetworkTracing(0, 0)) {
    kdebug_trace();
  }
  FormatDescription = CMSampleBufferGetFormatDescription(a2);
  if (*a1)
  {
    if (VTDecompressionSessionCanAcceptFormatDescription(*a1, FormatDescription)) {
      goto LABEL_23;
    }
    VTDecompressionSessionRef v9 = *a1;
    if (*a1)
    {
      VTDecompressionSessionInvalidate(*a1);
      CFRelease(v9);
    }
  }
  v35[0] = *MEMORY[0x263F04180];
  float32x2_t v10 = [NSNumber numberWithUnsignedInt:1111970369];
  v35[1] = *MEMORY[0x263F04158];
  *(void *)int v36 = v10;
  uint64_t v37 = MEMORY[0x263EFFA88];
  CFDictionaryRef v11 = [NSDictionary dictionaryWithObjects:v36 forKeys:v35 count:2];

  VTSessionRef session = 0;
  long long v12 = (re *)VTDecompressionSessionCreate(0, FormatDescription, MEMORY[0x263EFFA78], v11, 0, (VTDecompressionSessionRef *)&session);
  int v13 = (int)v12;
  long long v14 = *re::peerVideoStreamingLogObjects(v12);
  if (v13)
  {
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)CMTime buf = 67109120;
      int v34 = v13;
      _os_log_error_impl(&dword_233120000, v14, OS_LOG_TYPE_ERROR, "Error creating decompression session, errCode: %d.", buf, 8u);
    }

    *a1 = 0;
LABEL_12:
    unint64_t v16 = *re::peerVideoStreamingLogObjects(v15);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)int v36 = 0;
      _os_log_error_impl(&dword_233120000, v16, OS_LOG_TYPE_ERROR, "Failed to create decompression session", v36, 2u);
    }
    if (re::internal::enableSignposts(0, 0) && re::internal::enableHighFrequencyNetworkTracing(0, 0)) {
      kdebug_trace();
    }
    return;
  }
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)CMTime buf = 0;
    _os_log_impl(&dword_233120000, v14, OS_LOG_TYPE_DEFAULT, "Created decompression session", buf, 2u);
  }
  float v17 = (re *)VTSessionSetProperty(session, (CFStringRef)*MEMORY[0x263F1E758], (CFTypeRef)*MEMORY[0x263EFFB40]);
  if (v17)
  {
    int v18 = (int)v17;
    uint64_t v19 = *re::peerVideoStreamingLogObjects(v17);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)CMTime buf = 67109120;
      int v34 = v18;
      _os_log_error_impl(&dword_233120000, v19, OS_LOG_TYPE_ERROR, "Failed to enable RealTime, errCode: %d.", buf, 8u);
    }
  }
  uint64_t v20 = (OpaqueVTDecompressionSession *)session;

  *a1 = v20;
  if (!v20) {
    goto LABEL_12;
  }
LABEL_23:
  uint64_t v21 = applesauce::dispatch::v1::queue::get(a4);
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 3321888768;
  aBlock[2] = ___ZN2re25PeerVideoStreamingDecoder11decodeFrameEP20opaqueCMSampleBufferNS_8FunctionIFvONS_16OutputVideoFrameEEEEN10applesauce8dispatch2v15queueE_block_invoke;
  aBlock[3] = &unk_26E6F7D10;
  uint64_t v31 = a1;
  id v22 = v21;
  uint64_t v23 = *(void *)(a3 + 24);
  id v30 = v22;
  v32[3] = v23;
  v32[4] = 0;
  re::FunctionBase<24ul,void ()(re::OutputVideoFrame &&)>::operator=<24ul>((uint64_t)v32, a3);
  float v24 = _Block_copy(aBlock);
  int32x2_t v25 = (re *)VTDecompressionSessionDecodeFrameWithOutputHandler(*a1, a2, 1u, 0, v24);
  if (v25)
  {
    int v26 = (int)v25;
    float v27 = *re::peerVideoStreamingLogObjects(v25);
    if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)int v36 = 67109120;
      *(_DWORD *)&v36[4] = v26;
      _os_log_error_impl(&dword_233120000, v27, OS_LOG_TYPE_ERROR, "Failed to decode frame, errCode: %d", v36, 8u);
    }
  }

  re::FunctionBase<24ul,void ()(re::OutputVideoFrame &&)>::destroyCallable((uint64_t)v32);
}

id applesauce::dispatch::v1::queue::get(id *this)
{
  return *this;
}

uint64_t ___ZN2re25PeerVideoStreamingDecoder11decodeFrameEP20opaqueCMSampleBufferNS_8FunctionIFvONS_16OutputVideoFrameEEEEN10applesauce8dispatch2v15queueE_block_invoke(re *a1, int a2, char a3, CFTypeRef cf, uint64_t *a5)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  if (a2)
  {
    uint64_t v6 = *re::peerVideoStreamingLogObjects(a1);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)CMTime buf = 67109120;
      LODWORD(v19) = a2;
      _os_log_error_impl(&dword_233120000, v6, OS_LOG_TYPE_ERROR, "Error decoding frame, errCode: %d", buf, 8u);
    }
    uint64_t result = re::internal::enableSignposts(0, 0);
    if (result)
    {
      uint64_t result = re::internal::enableHighFrequencyNetworkTracing(0, 0);
      if (result) {
        return kdebug_trace();
      }
    }
  }
  else if ((a3 & 2) != 0)
  {
    int v13 = *re::peerVideoStreamingLogObjects(a1);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v14 = *a5;
      *(_DWORD *)CMTime buf = 134217984;
      uint64_t v19 = v14;
      _os_log_impl(&dword_233120000, v13, OS_LOG_TYPE_DEFAULT, "Decoder dropped frame with timestamp %lld", buf, 0xCu);
    }
    uint64_t result = re::internal::enableSignposts(0, 0);
    if (result)
    {
      uint64_t result = re::internal::enableHighFrequencyNetworkTracing(0, 0);
      if (result) {
        return kdebug_trace();
      }
    }
  }
  else if (cf)
  {
    CFRetain(cf);
    CFDictionaryRef v11 = *((void *)a1 + 4);
    v16[0] = MEMORY[0x263EF8330];
    v16[1] = 3321888768;
    v16[2] = ___ZN2re25PeerVideoStreamingDecoder11decodeFrameEP20opaqueCMSampleBufferNS_8FunctionIFvONS_16OutputVideoFrameEEEEN10applesauce8dispatch2v15queueE_block_invoke_1;
    v16[3] = &__block_descriptor_80_a8_40c46_ZTSN2re8FunctionIFvONS_16OutputVideoFrameEEEE_e5_v8__0l;
    uint64_t v12 = *((void *)a1 + 9);
    _OWORD v16[4] = cf;
    v17[3] = v12;
    float32x4_t v17[4] = 0;
    re::FunctionBase<24ul,void ()(re::OutputVideoFrame &&)>::operator=<24ul>((uint64_t)v17, (uint64_t)a1 + 48);
    dispatch_async(v11, v16);
    if (re::internal::enableSignposts(0, 0) && re::internal::enableHighFrequencyNetworkTracing(0, 0)) {
      kdebug_trace();
    }
    return (uint64_t)re::FunctionBase<24ul,void ()(re::OutputVideoFrame &&)>::destroyCallable((uint64_t)v17);
  }
  else
  {
    uint64_t v15 = *re::peerVideoStreamingLogObjects(a1);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)CMTime buf = 0;
      _os_log_error_impl(&dword_233120000, v15, OS_LOG_TYPE_ERROR, "CVImageBuffer for decoded frame is null", buf, 2u);
    }
    uint64_t result = re::internal::enableSignposts(0, 0);
    if (result)
    {
      uint64_t result = re::internal::enableHighFrequencyNetworkTracing(0, 0);
      if (result) {
        return kdebug_trace();
      }
    }
  }
  return result;
}

void ___ZN2re25PeerVideoStreamingDecoder11decodeFrameEP20opaqueCMSampleBufferNS_8FunctionIFvONS_16OutputVideoFrameEEEEN10applesauce8dispatch2v15queueE_block_invoke_1(uint64_t a1)
{
  VTDecompressionSessionRef v2 = *(const void **)(a1 + 32);
  if (v2)
  {
    CFRetain(*(CFTypeRef *)(a1 + 32));
    CFRetain(v2);
    CFRelease(v2);
    uint64_t v3 = *(const void **)(a1 + 32);
  }
  else
  {
    uint64_t v3 = 0;
  }
  cf[0] = v2;
  cf[1] = 0;
  CFRelease(v3);
  (*(void (**)(void, CFTypeRef *))(**(void **)(a1 + 72) + 16))(*(void *)(a1 + 72), cf);
  if (cf[0]) {
    CFRelease(cf[0]);
  }
}

uint64_t __copy_helper_block_a8_40c46_ZTSN2re8FunctionIFvONS_16OutputVideoFrameEEEE(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = 0;
  return re::FunctionBase<24ul,void ()(re::OutputVideoFrame &&)>::operator=<24ul>(a1 + 40, a2 + 40);
}

uint64_t (***__destroy_helper_block_a8_40c46_ZTSN2re8FunctionIFvONS_16OutputVideoFrameEEEE(uint64_t a1))(void)
{
  return re::FunctionBase<24ul,void ()(re::OutputVideoFrame &&)>::destroyCallable(a1 + 40);
}

uint64_t __copy_helper_block_a8_48c46_ZTSN2re8FunctionIFvONS_16OutputVideoFrameEEEE(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = 0;
  return re::FunctionBase<24ul,void ()(re::OutputVideoFrame &&)>::operator=<24ul>(a1 + 48, a2 + 48);
}

uint64_t (***__destroy_helper_block_a8_48c46_ZTSN2re8FunctionIFvONS_16OutputVideoFrameEEEE(uint64_t a1))(void)
{
  return re::FunctionBase<24ul,void ()(re::OutputVideoFrame &&)>::destroyCallable(a1 + 48);
}

uint64_t re::FunctionBase<24ul,void ()(re::OutputVideoFrame &&)>::operator=<24ul>(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    re::FunctionBase<24ul,void ()(re::OutputVideoFrame &&)>::destroyCallable(a1);
    uint64_t v4 = *(void *)(a2 + 32);
    if (v4)
    {
      unint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 40))(v4);
      uint64_t v6 = a1;
      if (v5 >= 0x19)
      {
        unint64_t v7 = v5;
        uint64_t v8 = *(void *)(a1 + 24);
        if (v8) {
          uint64_t v6 = (*(uint64_t (**)(uint64_t, unint64_t, void))(*(void *)v8 + 32))(v8, v7, 0);
        }
        else {
          uint64_t v6 = 0;
        }
      }
      *(void *)(a1 + 32) = v6;
      (*(void (**)(void))(**(void **)(a2 + 32) + 24))(*(void *)(a2 + 32));
    }
  }
  return a1;
}

uint64_t (***re::FunctionBase<24ul,void ()(re::OutputVideoFrame &&)>::destroyCallable(uint64_t a1))(void)
{
  uint64_t result = *(uint64_t (****)(void))(a1 + 32);
  if (result)
  {
    uint64_t result = (uint64_t (***)(void))(**result)(result);
    if (*(void *)(a1 + 32) != a1) {
      uint64_t result = (uint64_t (***)(void))(*(uint64_t (**)(void))(**(void **)(a1 + 24) + 40))(*(void *)(a1 + 24));
    }
    *(void *)(a1 + 32) = 0;
  }
  return result;
}

re::ecs2::BillboardManagerStateTracking *re::ecs2::BillboardManagerStateTracking::BillboardManagerStateTracking(re::ecs2::BillboardManagerStateTracking *this)
{
  v5[3] = *MEMORY[0x263EF8340];
  VTDecompressionSessionRef v2 = (_OWORD *)re::ecs2::HierarchyStateTracking<re::ecs2::BillboardData>::HierarchyStateTracking((uint64_t)this);
  *(void *)VTDecompressionSessionRef v2 = &unk_26E6F7D50;
  *(_OWORD *)((char *)v2 + 248) = 0u;
  VTDecompressionSessionRef v2 = (_OWORD *)((char *)v2 + 248);
  v2[1] = 0u;
  v2[2] = 0u;
  *(_OWORD *)((char *)v2 + 44) = 0u;
  *(void *)((char *)this + 308) = 0x7FFFFFFFLL;
  *((_OWORD *)this + 20) = 0u;
  *((_OWORD *)this + 21) = 0u;
  *((_DWORD *)this + 88) = 0;
  *(void *)((char *)this + 356) = 0x7FFFFFFFLL;
  *((unsigned char *)this + 368) = 0;
  v5[0] = re::ecs2::ComponentImpl<re::ecs2::BillboardComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
  v5[1] = re::ecs2::ComponentImpl<re::ecs2::TransformComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
  void v5[2] = re::ecs2::ComponentImpl<re::ecs2::AnchorComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
  v4[0] = v5;
  v4[1] = 3;
  re::FixedArray<re::ecs2::ComponentTypeBase const*>::operator=((_anonymous_namespace_ *)v2, (uint64_t)v4);
  return this;
}

uint64_t re::ecs2::HierarchyStateTracking<re::ecs2::BillboardData>::HierarchyStateTracking(uint64_t a1)
{
  *(void *)a1 = &unk_26E6F8000;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_DWORD *)(a1 + 40) = 0;
  *(void *)(a1 + 44) = 0x7FFFFFFFLL;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_DWORD *)(a1 + 88) = 0;
  *(_OWORD *)(a1 + 56) = 0u;
  uint64_t v2 = a1 + 56;
  *(void *)(a1 + 92) = 0x7FFFFFFFLL;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_DWORD *)(a1 + 136) = 0;
  *(_OWORD *)(a1 + 104) = 0u;
  uint64_t v3 = a1 + 104;
  *(void *)(a1 + 140) = 0x7FFFFFFFLL;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_DWORD *)(a1 + 184) = 0;
  *(_OWORD *)(a1 + 152) = 0u;
  uint64_t v4 = a1 + 152;
  *(void *)(a1 + 188) = 0x7FFFFFFFLL;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_DWORD *)(a1 + 232) = 0;
  *(_OWORD *)(a1 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 200) = 0u;
  uint64_t v5 = a1 + 200;
  *(void *)(a1 + 236) = 0x7FFFFFFFLL;
  return a1;
}

uint64_t re::ecs2::BillboardManagerStateTracking::billboardComponentAddOrActivateEventHandler<REComponentDidAddEvent>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2;
  char v3 = 1;
  re::HashTable<re::ecs2::Entity const*,BOOL,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::add(a1 + 272, &v4, &v3);
  return 0;
}

uint64_t re::ecs2::BillboardManagerStateTracking::billboardComponentAddOrActivateEventHandler<REComponentDidActivateEvent>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2;
  char v3 = 1;
  re::HashTable<re::ecs2::Entity const*,BOOL,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::add(a1 + 272, &v4, &v3);
  return 0;
}

uint64_t re::ecs2::BillboardManagerStateTracking::billboardComponentRemoveOrDeactivateEventHandler<REComponentWillRemoveEvent>(uint64_t a1, unint64_t a2)
{
  return 0;
}

uint64_t re::ecs2::BillboardManagerStateTracking::billboardComponentRemoveOrDeactivateEventHandler<REComponentWillDeactivateEvent>(uint64_t a1, unint64_t a2)
{
  return 0;
}

uint64_t re::ecs2::BillboardManagerStateTracking::physicsBodyAddOrActivateEventHandler<REComponentDidAddEvent>(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a2;
  char v3 = (re::ecs2::EntityComponentCollection *)(a2 + 32);
  if (re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(a2 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::RigidBodyComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)&& re::ecs2::EntityComponentCollection::get(v3, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ColliderComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType))
  {
    re::HashSetBase<re::ecs2::Entity const*,re::ecs2::Entity const*,re::internal::ValueAsKey<re::ecs2::Entity const*>,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::add(a1 + 320, &v5);
    *(unsigned char *)(a1 + 368) = 1;
  }
  return 0;
}

uint64_t re::ecs2::BillboardManagerStateTracking::physicsBodyAddOrActivateEventHandler<REComponentDidActivateEvent>(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a2;
  char v3 = (re::ecs2::EntityComponentCollection *)(a2 + 32);
  if (re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(a2 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::RigidBodyComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)&& re::ecs2::EntityComponentCollection::get(v3, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ColliderComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType))
  {
    re::HashSetBase<re::ecs2::Entity const*,re::ecs2::Entity const*,re::internal::ValueAsKey<re::ecs2::Entity const*>,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::add(a1 + 320, &v5);
    *(unsigned char *)(a1 + 368) = 1;
  }
  return 0;
}

uint64_t re::ecs2::BillboardManagerStateTracking::physicsBodyRemoveOrDeactivateEventHandler<REComponentWillRemoveEvent>(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a2;
  char v3 = (re::ecs2::EntityComponentCollection *)(a2 + 32);
  if (re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(a2 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::RigidBodyComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)|| re::ecs2::EntityComponentCollection::get(v3, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ColliderComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType))
  {
    re::HashSetBase<re::ecs2::Entity *,re::ecs2::Entity *,re::internal::ValueAsKey<re::ecs2::Entity *>,re::Hash<re::ecs2::Entity *>,re::EqualTo<re::ecs2::Entity *>,true,false>::remove(a1 + 320, &v5);
    *(unsigned char *)(a1 + 368) = 1;
  }
  return 0;
}

uint64_t re::ecs2::BillboardManagerStateTracking::physicsBodyRemoveOrDeactivateEventHandler<REComponentWillDeactivateEvent>(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a2;
  char v3 = (re::ecs2::EntityComponentCollection *)(a2 + 32);
  if (re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(a2 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::RigidBodyComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)|| re::ecs2::EntityComponentCollection::get(v3, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ColliderComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType))
  {
    re::HashSetBase<re::ecs2::Entity *,re::ecs2::Entity *,re::internal::ValueAsKey<re::ecs2::Entity *>,re::Hash<re::ecs2::Entity *>,re::EqualTo<re::ecs2::Entity *>,true,false>::remove(a1 + 320, &v5);
    *(unsigned char *)(a1 + 368) = 1;
  }
  return 0;
}

uint64_t re::ecs2::BillboardManagerStateTracking::physicsBodyReparentEventHandler<RESceneEntityDidReparentEvent>(uint64_t a1, uint64_t a2)
{
  char v3 = (re::ecs2::EntityComponentCollection *)(a2 + 32);
  if (re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(a2 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::RigidBodyComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)&& re::ecs2::EntityComponentCollection::get(v3, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ColliderComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType))
  {
    *(unsigned char *)(a1 + 368) = 1;
  }
  return 0;
}

void re::ecs2::BillboardManagerStateTracking::buildPerEntityStateForDirtyEntityHierarchies(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a1 + 300) && (*(_DWORD *)(a2 + 28) || *(unsigned char *)(a1 + 368)))
  {
    int v133 = (uint64_t *)(a1 + 272);
    re::HashSetBase<re::ecs2::Entity const*,re::ecs2::Entity const*,re::internal::ValueAsKey<re::ecs2::Entity const*>,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::HashSetBase((uint64_t)v138, a2);
    if (!*(unsigned char *)(a1 + 368))
    {
LABEL_104:
      *(void *)&v152[24] = 0;
      long long v151 = 0u;
      memset(v152, 0, 20);
      unsigned int v60 = v140;
      if (v140)
      {
        uint64_t v61 = 0;
        uint64_t v62 = (int *)(v139 + 8);
        while (1)
        {
          int v63 = *v62;
          v62 += 6;
          if (v63 < 0) {
            break;
          }
          if (v140 == ++v61)
          {
            LODWORD(v61) = v140;
            break;
          }
        }
      }
      else
      {
        LODWORD(v61) = 0;
      }
      if (v140 != v61)
      {
        uint64_t v64 = v61;
        uint64_t v65 = v139;
        unsigned int v66 = v140;
        while (1)
        {
          uint64_t v67 = *(void *)(v65 + 24 * v64 + 16);
          if ((*(unsigned char *)(v67 + 288) & 1) == 0)
          {
            re::internal::assertLog((re::internal *)4, v3, "assertion failure: '%s' (%s:line %i) Billboard state tracking should not get inactive entites from the dirty entity list.", "entity->isActive()", "populateAllEntitiesToBeUpdated", 150);
            _os_crash();
            __break(1u);
            return;
          }
          uint64_t v68 = *(void *)(v67 + 328);
          if (!v68) {
            goto LABEL_124;
          }
          uint64_t v69 = *(uint64_t **)(v67 + 344);
          uint64_t v70 = 8 * v68;
          do
          {
            uint64_t v71 = *v69;
            if (!*v69)
            {
              *(void *)&long long v147 = 0;
              if (re::HashSetBase<re::ecs2::Entity *,re::ecs2::Entity *,re::internal::ValueAsKey<re::ecs2::Entity *>,re::Hash<re::ecs2::Entity *>,re::EqualTo<re::ecs2::Entity *>,true,false>::contains((uint64_t)v138, (uint64_t *)&v147))
              {
                goto LABEL_122;
              }
LABEL_119:
              if (*(_DWORD *)(v71 + 288))
              {
                *(void *)&long long v147 = v71;
                re::Queue<re::internal::AssetLoadItem *>::enqueue(&v151, &v147);
              }
              goto LABEL_121;
            }
            id v72 = (id)(v71 + 8);
            *(void *)&long long v147 = v71;
            if (!re::HashSetBase<re::ecs2::Entity *,re::ecs2::Entity *,re::internal::ValueAsKey<re::ecs2::Entity *>,re::Hash<re::ecs2::Entity *>,re::EqualTo<re::ecs2::Entity *>,true,false>::contains((uint64_t)v138, (uint64_t *)&v147))goto LABEL_119; {
LABEL_121:
            }

LABEL_122:
            ++v69;
            v70 -= 8;
          }
          while (v70);
          unsigned int v66 = v140;
          uint64_t v65 = v139;
LABEL_124:
          if (v66 <= (int)v61 + 1) {
            unsigned int v73 = v61 + 1;
          }
          else {
            unsigned int v73 = v66;
          }
          while (1)
          {
            uint64_t v64 = (v61 + 1);
            if (v73 - 1 == v61) {
              break;
            }
            LODWORD(v61) = v61 + 1;
            unsigned int v74 = v64;
            if ((*(_DWORD *)(v65 + 24 * v64 + 8) & 0x80000000) != 0) {
              goto LABEL_131;
            }
          }
          unsigned int v74 = v73;
LABEL_131:
          LODWORD(v61) = v74;
          if (v60 == v74)
          {
            do
            {
LABEL_143:
              if (!*(void *)v152) {
                goto LABEL_144;
              }
              v145.columns[0].i64[0] = 0;
              v145.columns[0].i64[0] = re::Queue<re::internal::AssetLoadItem *>::dequeue((uint64_t)&v151, v3);
              re::HashSetBase<re::ecs2::Entity const*,re::ecs2::Entity const*,re::internal::ValueAsKey<re::ecs2::Entity const*>,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::add((uint64_t)v138, (uint64_t *)&v145);
              uint64_t v75 = *(void *)(v145.columns[0].i64[0] + 328);
            }
            while (!v75);
            __int16 v76 = *(uint64_t **)(v145.columns[0].i64[0] + 344);
            uint64_t v77 = 8 * v75;
            while (2)
            {
              uint64_t v78 = *v76;
              if (*v76)
              {
                id v79 = (id)(v78 + 8);
                *(void *)&long long v147 = v78;
                if (re::HashSetBase<re::ecs2::Entity *,re::ecs2::Entity *,re::internal::ValueAsKey<re::ecs2::Entity *>,re::Hash<re::ecs2::Entity *>,re::EqualTo<re::ecs2::Entity *>,true,false>::contains((uint64_t)v138, (uint64_t *)&v147))
                {
                  goto LABEL_141;
                }
                goto LABEL_139;
              }
              *(void *)&long long v147 = 0;
              if (!re::HashSetBase<re::ecs2::Entity *,re::ecs2::Entity *,re::internal::ValueAsKey<re::ecs2::Entity *>,re::Hash<re::ecs2::Entity *>,re::EqualTo<re::ecs2::Entity *>,true,false>::contains((uint64_t)v138, (uint64_t *)&v147))
              {
LABEL_139:
                if (*(_DWORD *)(v78 + 288))
                {
                  *(void *)&long long v147 = v78;
                  re::Queue<re::internal::AssetLoadItem *>::enqueue(&v151, &v147);
                }
LABEL_141:
              }
              ++v76;
              v77 -= 8;
              if (!v77) {
                goto LABEL_143;
              }
              continue;
            }
          }
        }
      }
LABEL_144:
      if ((void)v151 && *(void *)&v152[24]) {
        (*(void (**)(void))(*(void *)v151 + 40))(v151);
      }
      unsigned int v136 = 0;
      long long v134 = 0u;
      long long v135 = 0u;
      uint64_t v137 = 0x7FFFFFFFLL;
      unsigned int v80 = v140;
      if (v140)
      {
        uint64_t v81 = 0;
        int v82 = (int *)(v139 + 8);
        while (1)
        {
          int v83 = *v82;
          v82 += 6;
          if (v83 < 0) {
            break;
          }
          if (v140 == ++v81)
          {
            LODWORD(v81) = v140;
            break;
          }
        }
      }
      else
      {
        LODWORD(v81) = 0;
      }
      if (v140 == v81)
      {
LABEL_154:
        re::HashTable<void *,re::internal::AnimationCompositionChainBase *,re::Hash<void *>,re::EqualTo<void *>,true,false>::deinit((uint64_t *)&v134);
        re::HashSetBase<re::RigGraphSystem::BuildTask *,re::RigGraphSystem::BuildTask *,re::internal::ValueAsKey<re::RigGraphSystem::BuildTask *>,re::Hash<re::RigGraphSystem::BuildTask *>,re::EqualTo<re::RigGraphSystem::BuildTask *>,true,false>::deinit(v138);
        return;
      }
      uint64_t v84 = v81;
      uint64_t v85 = v139;
      uint64_t v131 = a1 + 56;
      unsigned int v132 = v140;
      while (1)
      {
        unint64_t v86 = *(void *)(v85 + 24 * v84 + 16);
        int v146 = (re::ecs2::TransformComponent **)v86;
        if (v86) {
          break;
        }
LABEL_210:
        uint64_t v85 = v139;
        if (v140 <= (int)v81 + 1) {
          unsigned int v121 = v81 + 1;
        }
        else {
          unsigned int v121 = v140;
        }
        while (1)
        {
          uint64_t v84 = (v81 + 1);
          if (v121 - 1 == v81) {
            break;
          }
          LODWORD(v81) = v81 + 1;
          unsigned int v122 = v84;
          if ((*(_DWORD *)(v139 + 24 * v84 + 8) & 0x80000000) != 0) {
            goto LABEL_217;
          }
        }
        unsigned int v122 = v121;
LABEL_217:
        LODWORD(v81) = v122;
        if (v80 == v122) {
          goto LABEL_154;
        }
      }
      unint64_t v87 = *(void *)(v86 + 24);
      if (v87)
      {
        while (1)
        {
          if ((*(unsigned char *)(v87 + 288) & 0x80) != 0)
          {
            int v90 = 0;
            unint64_t v87 = 0;
            goto LABEL_169;
          }
          if (re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(v87 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::BillboardComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType))
          {
            int v90 = (re::ecs2::TransformComponent **)v87;
            goto LABEL_169;
          }
          if ((void)v134)
          {
            unint64_t v88 = 0x94D049BB133111EBLL
                * ((0xBF58476D1CE4E5B9 * (v87 ^ (v87 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (v87 ^ (v87 >> 30))) >> 27));
            uint64_t v89 = *(unsigned int *)(*((void *)&v134 + 1) + 4 * ((v88 ^ (v88 >> 31)) % DWORD2(v135)));
            if (v89 != 0x7FFFFFFF) {
              break;
            }
          }
LABEL_165:
          unint64_t v87 = *(void *)(v87 + 24);
          if (!v87) {
            goto LABEL_166;
          }
        }
        while (*(void *)(v135 + 32 * v89 + 16) != v87)
        {
          uint64_t v89 = *(_DWORD *)(v135 + 32 * v89 + 8) & 0x7FFFFFFF;
          if (v89 == 0x7FFFFFFF) {
            goto LABEL_165;
          }
        }
        int v90 = *(re::ecs2::TransformComponent ***)(v135 + 32 * v89 + 24);
      }
      else
      {
LABEL_166:
        int v90 = 0;
      }
LABEL_169:
      if (v87 != v86 && v90 != (re::ecs2::TransformComponent **)v86)
      {
        unint64_t v91 = v86;
        do
        {
          unint64_t v92 = 0x94D049BB133111EBLL
              * ((0xBF58476D1CE4E5B9 * (v91 ^ (v91 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (v91 ^ (v91 >> 30))) >> 27));
          unint64_t v93 = v92 ^ (v92 >> 31);
          unint64_t v94 = v134;
          if (!(void)v134
            || (unint64_t v94 = v93 % DWORD2(v135),
                uint64_t v95 = *(unsigned int *)(*((void *)&v134 + 1) + 4 * v94),
                v95 == 0x7FFFFFFF))
          {
LABEL_176:
            uint64_t v96 = v137;
            if (v137 == 0x7FFFFFFF)
            {
              uint64_t v96 = v136;
              unsigned int v97 = v136;
              if (v136 == DWORD2(v135))
              {
                re::HashTable<unsigned long long,re::ecs2::Scene const*,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::setCapacity((uint64_t)&v134, 2 * HIDWORD(v135));
                unsigned int v97 = v136;
                unint64_t v94 = v93 % DWORD2(v135);
              }
              unsigned int v136 = v97 + 1;
              uint64_t v98 = v135;
              int v99 = *(_DWORD *)(v135 + 32 * v96 + 8);
            }
            else
            {
              uint64_t v98 = v135;
              int v99 = *(_DWORD *)(v135 + 32 * v137 + 8);
              LODWORD(v13re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = v99 & 0x7FFFFFFF;
            }
            uint64_t v100 = v98 + 32 * v96;
            *(_DWORD *)(v100 + 8) = v99 | 0x80000000;
            uint64_t v101 = *((void *)&v134 + 1);
            *(_DWORD *)(v100 + 8) = *(_DWORD *)(*((void *)&v134 + 1) + 4 * v94) | 0x80000000;
            *(void *)uint64_t v100 = v93;
            *(void *)(v100 + 16) = v91;
            *(void *)(v100 + 24) = v90;
            *(_DWORD *)(v101 + 4 * v94) = v96;
            ++HIDWORD(v135);
            ++HIDWORD(v137);
          }
          else
          {
            while (*(void *)(v135 + 32 * v95 + 16) != v91)
            {
              uint64_t v95 = *(_DWORD *)(v135 + 32 * v95 + 8) & 0x7FFFFFFF;
              if (v95 == 0x7FFFFFFF) {
                goto LABEL_176;
              }
            }
          }
          uint64_t v102 = *(void *)(v91 + 24);
          if (v102)
          {
            if ((*(unsigned char *)(v102 + 288) & 0x80) != 0) {
              unint64_t v91 = 0;
            }
            else {
              unint64_t v91 = *(void *)(v91 + 24);
            }
          }
          else
          {
            unint64_t v91 = 0;
          }
        }
        while (v87 != v91 && v90 != (re::ecs2::TransformComponent **)v91);
      }
      uint64_t v103 = (unsigned char *)re::HashTable<re::ecs2::Entity const*,re::SharedPtr<re::ecs2::CAMeshCodirectionalGroup>,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::tryGet((uint64_t)v133, v86);
      if (v103 && *v103)
      {
        int v104 = 1;
        if (!v90) {
          goto LABEL_198;
        }
      }
      else
      {
        int v104 = 0;
        if (!v90) {
          goto LABEL_198;
        }
      }
      int v105 = (unsigned char *)re::HashTable<re::ecs2::Entity const*,re::SharedPtr<re::ecs2::CAMeshCodirectionalGroup>,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::tryGet((uint64_t)v133, (unint64_t)v90);
      if (v105 && *v105)
      {
        if (!v104)
        {
          uint64_t v116 = re::HashTable<re::ecs2::Entity const*,re::ecs2::BillboardData,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::add<>(v131, (uint64_t *)&v146);
          *(unsigned char *)(v116 + 72) = 0;
          *(void *)(v116 + 64) = v90;
          re::ecs2::TransformComponent::worldMatrix4x4F(v90, (const re::ecs2::Entity *)1, &v145);
          simd_float4x4 v155 = __invert_f4(v145);
          float32x4_t v128 = (float32x4_t)v155.columns[0];
          float32x4_t v130 = (float32x4_t)v155.columns[1];
          float32x4_t v124 = (float32x4_t)v155.columns[3];
          float32x4_t v126 = (float32x4_t)v155.columns[2];
          re::ecs2::TransformComponent::worldMatrix4x4F(v146, (const re::ecs2::Entity *)1, &v141);
          uint64_t v117 = 0;
          long long v147 = v141;
          long long v148 = v142;
          long long v149 = v143;
          long long v150 = v144;
          do
          {
            *(float32x4_t *)&v152[v117 - 16] = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v128, COERCE_FLOAT(*(long long *)((char *)&v147 + v117))), v130, *(float32x2_t *)((char *)&v147 + v117), 1), v126, *(float32x4_t *)((char *)&v147 + v117), 2), v124, *(float32x4_t *)((char *)&v147 + v117), 3);
            v117 += 16;
          }
          while (v117 != 64);
          long long v118 = *(_OWORD *)v152;
          long long v119 = *(_OWORD *)&v152[16];
          long long v120 = v153;
          *(_OWORD *)uint64_t v116 = v151;
          *(_OWORD *)(v116 + 16) = v118;
          *(_OWORD *)(v116 + 32) = v119;
          *(_OWORD *)(v116 + 48) = v120;
          goto LABEL_209;
        }
        int v106 = 1;
        goto LABEL_200;
      }
LABEL_198:
      if ((v104 & 1) == 0)
      {
        re::HashTable<re::ecs2::Entity const*,re::ecs2::BillboardData,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::remove(v131, v86);
LABEL_209:
        unsigned int v80 = v132;
        goto LABEL_210;
      }
      int v106 = 0;
LABEL_200:
      uint64_t v107 = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(v86 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::BillboardComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
      uint64_t v108 = re::HashTable<re::ecs2::Entity const*,re::ecs2::BillboardData,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::add<>(v131, (uint64_t *)&v146);
      float32x4_t v109 = (_OWORD *)v108;
      *(unsigned char *)(v108 + 72) = 1;
      *(_OWORD *)(v108 + 80) = *(_OWORD *)(v107 + 32);
      *(_OWORD *)(v108 + 96) = *(_OWORD *)(v107 + 48);
      *(_OWORD *)(v108 + 112) = *(_OWORD *)(v107 + 64);
      *(_DWORD *)(v108 + 128) = *(_DWORD *)(v107 + 80);
      *(_WORD *)(v108 + 132) = *(_WORD *)(v107 + 84);
      if (v106)
      {
        *(void *)(v108 + 64) = v90;
        re::ecs2::TransformComponent::worldMatrix4x4F(v90, (const re::ecs2::Entity *)1, &v145);
        simd_float4x4 v154 = __invert_f4(v145);
        float32x4_t v127 = (float32x4_t)v154.columns[0];
        float32x4_t v129 = (float32x4_t)v154.columns[1];
        float32x4_t v123 = (float32x4_t)v154.columns[3];
        float32x4_t v125 = (float32x4_t)v154.columns[2];
        re::ecs2::TransformComponent::worldMatrix4x4F(v146, (const re::ecs2::Entity *)1, &v141);
        uint64_t v110 = 0;
        long long v147 = v141;
        long long v148 = v142;
        long long v149 = v143;
        long long v150 = v144;
        do
        {
          *(float32x4_t *)&v152[v110 - 16] = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v127, COERCE_FLOAT(*(long long *)((char *)&v147 + v110))), v129, *(float32x2_t *)((char *)&v147 + v110), 1), v125, *(float32x4_t *)((char *)&v147 + v110), 2), v123, *(float32x4_t *)((char *)&v147 + v110), 3);
          v110 += 16;
        }
        while (v110 != 64);
        long long v111 = *(_OWORD *)v152;
        long long v112 = *(_OWORD *)&v152[16];
        long long v113 = v153;
        *float32x4_t v109 = v151;
        v109[1] = v111;
        v109[2] = v112;
        v109[3] = v113;
      }
      else
      {
        re::ecs2::TransformComponent::worldMatrix4x4F((re::ecs2::TransformComponent **)v86, (const re::ecs2::Entity *)1, &v151);
        long long v114 = *(_OWORD *)v152;
        *float32x4_t v109 = v151;
        v109[1] = v114;
        long long v115 = v153;
        v109[2] = *(_OWORD *)&v152[16];
        v109[3] = v115;
      }
      goto LABEL_209;
    }
    long long v151 = 0u;
    memset(v152, 0, 20);
    *(void *)&v152[20] = 0x7FFFFFFFLL;
    if (*v133)
    {
      if (*(_DWORD *)(a1 + 300) <= 3u) {
        signed int v4 = 3;
      }
      else {
        signed int v4 = *(_DWORD *)(a1 + 300);
      }
      re::HashTable<re::StringID,unsigned int,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::init((uint64_t)&v151, *v133, v4);
      unsigned int v5 = *(_DWORD *)&v152[8];
      if (*(_DWORD *)&v152[12])
      {
        if (*(_DWORD *)&v152[8]) {
          memset_pattern16(*((void **)&v151 + 1), &unk_2343655D0, 4 * *(unsigned int *)&v152[8]);
        }
        uint64_t v6 = *(unsigned int *)&v152[16];
        if (*(_DWORD *)&v152[16])
        {
          unint64_t v7 = (_DWORD *)(*(void *)v152 + 8);
          do
          {
            if ((*v7 & 0x80000000) != 0) {
              *v7 &= ~0x80000000;
            }
            v7 += 8;
            --v6;
          }
          while (v6);
        }
        *(void *)&v152[12] = 0;
        *(_DWORD *)&v152[20] = 0x7FFFFFFF;
        ++*(_DWORD *)&v152[24];
      }
      unsigned int v8 = *(_DWORD *)(a1 + 300);
      if (v5 < v8) {
        re::HashTable<re::ecs2::Entity const*,BOOL,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::setCapacity((uint64_t)&v151, v8);
      }
      unsigned int v9 = *(_DWORD *)(a1 + 304);
      if (v9)
      {
        uint64_t v10 = 0;
        for (unint64_t i = 0; i < v9; ++i)
        {
          uint64_t v12 = (uint64_t *)(*(void *)(a1 + 288) + v10);
          if ((v12[1] & 0x80000000) != 0)
          {
            unint64_t v13 = *v12;
            uint64_t v14 = *(unsigned int *)&v152[20];
            unint64_t v15 = *v12 % (unint64_t)*(unsigned int *)&v152[8];
            if (*(_DWORD *)&v152[20] == 0x7FFFFFFF)
            {
              uint64_t v14 = *(unsigned int *)&v152[16];
              int v16 = *(_DWORD *)&v152[16];
              if (*(_DWORD *)&v152[16] == *(_DWORD *)&v152[8])
              {
                re::HashTable<re::ecs2::Entity const*,BOOL,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::setCapacity((uint64_t)&v151, 2 * *(_DWORD *)&v152[12]);
                int v16 = *(_DWORD *)&v152[16];
                unint64_t v15 = v13 % *(unsigned int *)&v152[8];
              }
              *(_DWORD *)&v152[16] = v16 + 1;
              uint64_t v17 = *(void *)v152;
              int v18 = *(_DWORD *)(*(void *)v152 + 32 * v14 + 8);
            }
            else
            {
              uint64_t v17 = *(void *)v152;
              int v18 = *(_DWORD *)(*(void *)v152 + 32 * *(unsigned int *)&v152[20] + 8);
              *(_DWORD *)&v152[20] = v18 & 0x7FFFFFFF;
            }
            uint64_t v19 = v17 + 32 * v14;
            *(_DWORD *)(v19 + 8) = v18 | 0x80000000;
            uint64_t v20 = *((void *)&v151 + 1);
            *(_DWORD *)(v19 + 8) = *(_DWORD *)(*((void *)&v151 + 1) + 4 * v15) | 0x80000000;
            *(void *)uint64_t v19 = v13;
            *(void *)(v19 + 16) = v12[2];
            *(unsigned char *)(v19 + 24) = *((unsigned char *)v12 + 24);
            *(_DWORD *)(v20 + 4 * v1re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = v14;
            ++*(_DWORD *)&v152[12];
            unsigned int v9 = *(_DWORD *)(a1 + 304);
          }
          v10 += 32;
        }
        if (v9)
        {
LABEL_31:
          uint64_t v21 = 0;
          id v22 = (int *)(*(void *)(a1 + 288) + 8);
          while (1)
          {
            int v23 = *v22;
            v22 += 8;
            if (v23 < 0) {
              break;
            }
            if (v9 == ++v21)
            {
              LODWORD(v21) = v9;
              break;
            }
          }
LABEL_37:
          if (v9 != v21)
          {
            uint64_t v24 = v21;
            uint64_t v25 = *(void *)(a1 + 288);
            do
            {
              *(unsigned char *)(v25 + 32 * v24 + 24) = 1;
              uint64_t v25 = *(void *)(a1 + 288);
              if (v9 <= (int)v21 + 1) {
                unsigned int v26 = v21 + 1;
              }
              else {
                unsigned int v26 = v9;
              }
              int v27 = v21;
              while (1)
              {
                uint64_t v24 = (v27 + 1);
                if (v26 - 1 == v27) {
                  break;
                }
                ++v27;
                LODWORD(v21) = v24;
                if ((*(_DWORD *)(v25 + 32 * v24 + 8) & 0x80000000) != 0) {
                  goto LABEL_47;
                }
              }
              LODWORD(v21) = v26;
LABEL_47:
              ;
            }
            while (v9 != v21);
          }
          uint64_t v28 = *(unsigned int *)(a1 + 352);
          if (v28)
          {
            uint64_t v29 = 0;
            id v30 = (int *)(*(void *)(a1 + 336) + 8);
            while (1)
            {
              int v31 = *v30;
              v30 += 6;
              if (v31 < 0) {
                break;
              }
              if (v28 == ++v29)
              {
                LODWORD(v29) = *(_DWORD *)(a1 + 352);
                break;
              }
            }
          }
          else
          {
            LODWORD(v29) = 0;
          }
          if (v28 == v29) {
            goto LABEL_77;
          }
          uint64_t v32 = v29;
          uint64_t v33 = *(void *)(a1 + 336);
          uint64_t v34 = *(void *)(a1 + 272);
          do
          {
            unint64_t v35 = *(void *)(v33 + 24 * v32 + 16);
            if (!v35) {
              goto LABEL_69;
            }
            unint64_t v36 = *(unsigned int *)(a1 + 296);
            uint64_t v37 = *(void *)(a1 + 280);
            do
            {
              if (!v34) {
                goto LABEL_66;
              }
              unint64_t v38 = 0x94D049BB133111EBLL
                  * ((0xBF58476D1CE4E5B9 * (v35 ^ (v35 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (v35 ^ (v35 >> 30))) >> 27));
              uint64_t v39 = *(unsigned int *)(v37 + 4 * ((v38 ^ (v38 >> 31)) % v36));
              if (v39 == 0x7FFFFFFF) {
                goto LABEL_66;
              }
              uint64_t v40 = *(void *)(a1 + 288);
              while (*(void *)(v40 + 32 * v39 + 16) != v35)
              {
                uint64_t v39 = *(_DWORD *)(v40 + 32 * v39 + 8) & 0x7FFFFFFF;
                if (v39 == 0x7FFFFFFF) {
                  goto LABEL_66;
                }
              }
              uint64_t v41 = v40 + 32 * v39;
              int v43 = *(unsigned __int8 *)(v41 + 24);
              long long v42 = (unsigned char *)(v41 + 24);
              if (!v43) {
                break;
              }
              *long long v42 = 0;
LABEL_66:
              unint64_t v35 = *(void *)(v35 + 24);
            }
            while (v35 && (*(unsigned char *)(v35 + 288) & 0x80) == 0);
            uint64_t v33 = *(void *)(a1 + 336);
LABEL_69:
            if (v28 <= (int)v29 + 1) {
              int v44 = v29 + 1;
            }
            else {
              int v44 = v28;
            }
            while (1)
            {
              uint64_t v32 = (v29 + 1);
              if (v44 - 1 == v29) {
                break;
              }
              LODWORD(v29) = v29 + 1;
              int v45 = v32;
              if ((*(_DWORD *)(v33 + 24 * v32 + 8) & 0x80000000) != 0) {
                goto LABEL_76;
              }
            }
            int v45 = v44;
LABEL_76:
            LODWORD(v29) = v45;
          }
          while (v28 != v45);
LABEL_77:
          unsigned int v46 = *(_DWORD *)&v152[16];
          if (*(_DWORD *)&v152[16])
          {
            uint64_t v47 = 0;
            unsigned int v48 = (int *)(*(void *)v152 + 8);
            while (1)
            {
              int v49 = *v48;
              v48 += 8;
              if (v49 < 0) {
                break;
              }
              if (*(unsigned int *)&v152[16] == ++v47)
              {
                LODWORD(v4re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = *(_DWORD *)&v152[16];
                break;
              }
            }
          }
          else
          {
            LODWORD(v4re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = 0;
          }
          if (*(_DWORD *)&v152[16] != v47)
          {
            uint64_t v50 = v47;
            uint64_t v51 = *(void *)v152;
            do
            {
              uint64_t v52 = v51 + 32 * v50;
              unint64_t v53 = *(void *)(v52 + 16);
              if ((*(unsigned char *)(v53 + 288) & 1) == 0) {
                goto LABEL_95;
              }
              if (*v133)
              {
                unint64_t v54 = 0x94D049BB133111EBLL
                    * ((0xBF58476D1CE4E5B9 * (v53 ^ (v53 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (v53 ^ (v53 >> 30))) >> 27));
                unint64_t v55 = (v54 ^ (v54 >> 31)) % *(unsigned int *)(a1 + 296);
                uint64_t v56 = *(void *)(a1 + 288);
                uint64_t v57 = *(unsigned int *)(*(void *)(a1 + 280) + 4 * v55);
                if (v57 != 0x7FFFFFFF)
                {
                  while (*(void *)(v56 + 32 * v57 + 16) != v53)
                  {
                    uint64_t v57 = *(_DWORD *)(v56 + 32 * v57 + 8) & 0x7FFFFFFF;
                    if (v57 == 0x7FFFFFFF) {
                      goto LABEL_92;
                    }
                  }
                  goto LABEL_93;
                }
              }
              else
              {
                uint64_t v56 = *(void *)(a1 + 288);
              }
LABEL_92:
              uint64_t v57 = 0x7FFFFFFFLL;
LABEL_93:
              if (*(unsigned __int8 *)(v52 + 24) != *(unsigned __int8 *)(v56 + 32 * v57 + 24)) {
                re::HashSetBase<re::ecs2::Entity const*,re::ecs2::Entity const*,re::internal::ValueAsKey<re::ecs2::Entity const*>,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::add((uint64_t)v138, (uint64_t *)(v52 + 16));
              }
LABEL_95:
              if (v46 <= (int)v47 + 1) {
                unsigned int v58 = v47 + 1;
              }
              else {
                unsigned int v58 = v46;
              }
              while (1)
              {
                uint64_t v50 = (v47 + 1);
                if (v58 - 1 == v47) {
                  break;
                }
                LODWORD(v4re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = v47 + 1;
                unsigned int v59 = v50;
                if ((*(_DWORD *)(v51 + 32 * v50 + 8) & 0x80000000) != 0) {
                  goto LABEL_102;
                }
              }
              unsigned int v59 = v58;
LABEL_102:
              LODWORD(v4re::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = v59;
            }
            while (v46 != v59);
          }
          re::HashTable<void *,re::internal::AnimationCompositionChainBase *,re::Hash<void *>,re::EqualTo<void *>,true,false>::deinit((uint64_t *)&v151);
          *(unsigned char *)(a1 + 368) = 0;
          goto LABEL_104;
        }
      }
    }
    else
    {
      unsigned int v9 = *(_DWORD *)(a1 + 304);
      if (v9) {
        goto LABEL_31;
      }
    }
    LODWORD(v21) = 0;
    goto LABEL_37;
  }
}

uint64_t re::HashTable<re::ecs2::Entity const*,re::ecs2::BillboardData,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::add<>(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = 0xBF58476D1CE4E5B9 * (*a2 ^ ((unint64_t)*a2 >> 30));
  unint64_t v6 = (0x94D049BB133111EBLL * (v5 ^ (v5 >> 27))) ^ ((0x94D049BB133111EBLL * (v5 ^ (v5 >> 27))) >> 31);
  unint64_t v7 = *(void *)a1;
  if (*(void *)a1)
  {
    unint64_t v7 = v6 % *(unsigned int *)(a1 + 24);
    uint64_t v8 = *(unsigned int *)(*(void *)(a1 + 8) + 4 * v7);
    if (v8 != 0x7FFFFFFF)
    {
      uint64_t v16 = *(void *)(a1 + 16);
      if (*(void *)(v16 + 176 * v8 + 16) == v4)
      {
LABEL_12:
        uint64_t v15 = v16 + 176 * v8;
        return v15 + 32;
      }
      while (1)
      {
        LODWORD(v8) = *(_DWORD *)(v16 + 176 * v8 + 8) & 0x7FFFFFFF;
        if (v8 == 0x7FFFFFFF) {
          break;
        }
        if (*(void *)(v16 + 176 * v8 + 16) == v4) {
          goto LABEL_12;
        }
      }
    }
  }
  unsigned int v9 = *(_DWORD *)(a1 + 36);
  if (v9 == 0x7FFFFFFF)
  {
    unsigned int v9 = *(_DWORD *)(a1 + 32);
    unsigned int v10 = v9;
    if (v9 == *(_DWORD *)(a1 + 24))
    {
      re::HashTable<re::ecs2::Entity const*,re::ecs2::BillboardData,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::setCapacity(a1, 2 * *(_DWORD *)(a1 + 28));
      LODWORD(vre::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = v6 % *(unsigned int *)(a1 + 24);
      unsigned int v10 = *(_DWORD *)(a1 + 32);
      uint64_t v4 = *a2;
    }
    *(_DWORD *)(a1 + 32) = v10 + 1;
    uint64_t v11 = *(void *)(a1 + 16);
    int v12 = *(_DWORD *)(v11 + 176 * v9 + 8);
  }
  else
  {
    uint64_t v11 = *(void *)(a1 + 16);
    int v12 = *(_DWORD *)(v11 + 176 * v9 + 8);
    *(_DWORD *)(a1 + 36) = v12 & 0x7FFFFFFF;
  }
  uint64_t v13 = 176 * v9;
  *(_DWORD *)(v11 + v13 + 8) = v12 | 0x80000000;
  *(_DWORD *)(*(void *)(a1 + 16) + v13 + 8) = *(_DWORD *)(*(void *)(a1 + 16) + v13 + 8) & 0x80000000 | *(_DWORD *)(*(void *)(a1 + 8) + 4 * v7);
  *(void *)(*(void *)(a1 + 16) + v13) = v6;
  *(void *)(*(void *)(a1 + 16) + v13 + 16) = v4;
  uint64_t v14 = *(void *)(a1 + 16) + v13;
  *(_OWORD *)(v14 + 32) = xmmword_23435FD50;
  *(_OWORD *)(v14 + 48) = xmmword_23435FD60;
  *(_OWORD *)(v14 + 64) = xmmword_23435FD80;
  *(_OWORD *)(v14 + 80) = xmmword_23435FBB0;
  *(void *)(v14 + 96) = 0;
  *(unsigned char *)(v14 + 104) = 0;
  *(_OWORD *)(v14 + 112) = xmmword_23435FD60;
  *(_OWORD *)(v14 + 128) = xmmword_23435FD80;
  *(_OWORD *)(v14 + 144) = xmmword_23435FD60;
  *(_DWORD *)(v14 + 160) = 1065353216;
  *(_WORD *)(v14 + 164) = 0;
  *(_DWORD *)(*(void *)(a1 + 8) + 4 * vre::FixedArray<re::FullBodyIKSolver>::deinit((void *)this + 7) = v9;
  ++*(_DWORD *)(a1 + 28);
  ++*(_DWORD *)(a1 + 40);
  uint64_t v15 = *(void *)(a1 + 16) + v13;
  return v15 + 32;
}

uint64_t re::HashTable<re::ecs2::Entity const*,re::ecs2::BillboardData,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::remove(uint64_t result, unint64_t a2)
{
  if (*(void *)result)
  {
    unint64_t v2 = 0x94D049BB133111EBLL
       * ((0xBF58476D1CE4E5B9 * (a2 ^ (a2 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (a2 ^ (a2 >> 30))) >> 27));
    unint64_t v3 = (v2 ^ (v2 >> 31)) % *(unsigned int *)(result + 24);
    uint64_t v4 = *(void *)(result + 8);
    uint64_t v5 = *(unsigned int *)(v4 + 4 * v3);
    if (v5 != 0x7FFFFFFF)
    {
      uint64_t v6 = *(void *)(result + 16);
      if (*(void *)(v6 + 176 * v5 + 16) == a2)
      {
        *(_DWORD *)(v4 + 4 * v3) = *(_DWORD *)(v6 + 176 * v5 + 8) & 0x7FFFFFFF;
LABEL_8:
        uint64_t v8 = *(void *)(result + 16);
        uint64_t v9 = v8 + 176 * v5;
        int v12 = *(_DWORD *)(v9 + 8);
        uint64_t v11 = (int *)(v9 + 8);
        int v10 = v12;
        if (v12 < 0)
        {
          *uint64_t v11 = v10 & 0x7FFFFFFF;
          uint64_t v8 = *(void *)(result + 16);
          int v10 = *(_DWORD *)(v8 + 176 * v5 + 8);
        }
        int v13 = *(_DWORD *)(result + 40);
        *(_DWORD *)(v8 + 176 * v5 + 8) = *(_DWORD *)(result + 36) | v10 & 0x80000000;
        --*(_DWORD *)(result + 28);
        *(_DWORD *)(result + 36) = v5;
        *(_DWORD *)(result + 40) = v13 + 1;
      }
      else
      {
        while (1)
        {
          unsigned int v7 = v5;
          LODWORD(vre::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = *(_DWORD *)(v6 + 176 * v5 + 8) & 0x7FFFFFFF;
          if (v5 == 0x7FFFFFFF) {
            break;
          }
          if (*(void *)(v6 + 176 * v5 + 16) == a2)
          {
            *(_DWORD *)(v6 + 176 * v7 + 8) = *(_DWORD *)(v6 + 176 * v7 + 8) & 0x80000000 | *(_DWORD *)(v6 + 176 * v5 + 8) & 0x7FFFFFFF;
            goto LABEL_8;
          }
        }
      }
    }
  }
  return result;
}

void re::ecs2::BillboardManager::registerScene(re::ecs2::BillboardManager *this, re::ecs2::Scene *a2)
{
  uint64_t v257 = *MEMORY[0x263EF8340];
  unint64_t v213 = (unint64_t)a2;
  v247[0] = (uint64_t)a2;
  unint64_t v2 = (re::EventBus *)*((void *)a2 + 36);
  if (!v2)
  {
    re::internal::assertLog((re::internal *)4, (uint64_t)a2, "assertion failure: '%s' (%s:line %i) An event bus is expected for this system to track entity state changes.", "eventBus", "registerScene", 100);
    _os_crash();
    __break(1u);
  }
  uint64_t v5 = (re::ecs2::BillboardManager *)((char *)this + 16);
  long long v250 = 0uLL;
  LODWORD(v251) = 1;
  long long v252 = 0uLL;
  *((void *)&v251 + 1) = 0;
  int v253 = 0;
  uint64_t v6 = (re *)(*(uint64_t (**)(re *))(*(void *)v5 + 16))(v5);
  if (v7)
  {
    uint64_t v8 = (uint64_t *)v6;
    uint64_t v9 = 8 * v7;
    do
    {
      uint64_t v10 = *v8++;
      uint64_t v255 = re::globalAllocators(v6)[2];
      uint64_t v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v255 + 32))(v255, 32, 0);
      *uint64_t v11 = &unk_26E6F8040;
      v11[1] = v5;
      void v11[2] = re::ecs2::HierarchyStateTracking<re::ecs2::BillboardData>::invalidateEntityHierarchyEventHandler<REComponentDidChangeEvent>;
      v11[3] = 0;
      int v256 = v11;
      uint64_t v12 = re::EventBus::subscribe<re::ecs2::Entity,REComponentDidChangeEvent>(v2, (uint64_t)v254, v10, 0);
      uint64_t v14 = v13;
      uint64_t v15 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized((uint64_t)&v250);
      *uint64_t v15 = v12;
      v15[1] = v14;
      re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidChangeEvent const&)>::destroyCallable((uint64_t)v254);
      re::ecs2::HierarchyStateTracking<re::ecs2::BillboardData>::subscribeToEventToInvalidateEntityHierarchy<REComponentDidActivateEvent>(v5, v2, (uint64_t)&v250, v10);
      uint64_t v6 = (re *)re::ecs2::HierarchyStateTracking<re::ecs2::BillboardData>::subscribeToEventToInvalidateEntityHierarchy<REComponentWillDeactivateEvent>(v5, v2, (uint64_t)&v250, v10);
      v9 -= 8;
    }
    while (v9);
  }
  uint64_t v16 = (re *)(*(uint64_t (**)(re *))(*(void *)v5 + 24))(v5);
  if (v17)
  {
    int v18 = (uint64_t *)v16;
    uint64_t v19 = 8 * v17;
    do
    {
      uint64_t v20 = *v18++;
      re::ecs2::HierarchyStateTracking<re::ecs2::BillboardData>::subscribeToEventToInvalidateEntityHierarchy<REComponentDidActivateEvent>(v5, v2, (uint64_t)&v250, v20);
      uint64_t v16 = (re *)re::ecs2::HierarchyStateTracking<re::ecs2::BillboardData>::subscribeToEventToInvalidateEntityHierarchy<REComponentWillDeactivateEvent>(v5, v2, (uint64_t)&v250, v20);
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v255 = re::globalAllocators(v16)[2];
  uint64_t v21 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v255 + 32))(v255, 32, 0);
  void *v21 = &unk_26E6F8148;
  v21[1] = v5;
  v21[2] = re::ecs2::HierarchyStateTracking<re::ecs2::BillboardData>::invalidateEntityHierarchyEventHandler<RESceneEntityDidReparentEvent>;
  v21[3] = 0;
  int v256 = v21;
  uint64_t v22 = re::EventBus::subscribe<re::ecs2::Entity,RESceneEntityDidReparentEvent>(v2, (uint64_t)v254, 0, 0);
  uint64_t v24 = v23;
  uint64_t v25 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized((uint64_t)&v250);
  *uint64_t v25 = v22;
  v25[1] = v24;
  unsigned int v26 = (re *)re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,RESceneEntityDidReparentEvent const&)>::destroyCallable((uint64_t)v254);
  uint64_t v255 = re::globalAllocators(v26)[2];
  int v27 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v255 + 32))(v255, 32, 0);
  void *v27 = &unk_26E6F81A0;
  v27[1] = v5;
  v27[2] = re::ecs2::HierarchyStateTracking<re::ecs2::BillboardData>::invalidateEntityHierarchyEventHandler<RESceneEntityDidActivateEvent>;
  v27[3] = 0;
  int v256 = v27;
  uint64_t v28 = re::EventBus::subscribe<re::ecs2::Entity,RESceneEntityDidActivateEvent>(v2, (uint64_t)v254, 0, 0);
  uint64_t v30 = v29;
  int v31 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized((uint64_t)&v250);
  void *v31 = v28;
  v31[1] = v30;
  uint64_t v32 = (re *)re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,RESceneEntityDidActivateEvent const&)>::destroyCallable((uint64_t)v254);
  uint64_t v255 = re::globalAllocators(v32)[2];
  uint64_t v33 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v255 + 32))(v255, 32, 0);
  *uint64_t v33 = &unk_26E6F81F8;
  v33[1] = v5;
  void v33[2] = re::ecs2::HierarchyStateTracking<re::ecs2::BillboardData>::invalidateEntityHierarchyEventHandler<RESceneEntityWillDeactivateEvent>;
  _OWORD v33[3] = 0;
  int v256 = v33;
  uint64_t v34 = re::EventBus::subscribe<re::ecs2::Entity,RESceneEntityWillDeactivateEvent>(v2, (uint64_t)v254, 0, 0);
  uint64_t v36 = v35;
  uint64_t v37 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized((uint64_t)&v250);
  void *v37 = v34;
  v37[1] = v36;
  re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,RESceneEntityWillDeactivateEvent const&)>::destroyCallable((uint64_t)v254);
  unint64_t v38 = (void *)((char *)this + 168);
  re::HashTable<re::ecs2::Scene const*,re::BucketArray<RESubscriptionHandle,8ul>,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,true,false>::add((uint64_t)this + 168, v247, (uint64_t)&v250);
  re::HashSetBase<re::ecs2::Scene const*,re::ecs2::Scene const*,re::internal::ValueAsKey<re::ecs2::Scene const*>,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,true,false>::add((uint64_t)this + 24, v247);
  re::BucketArray<RESubscriptionHandle,8ul>::deinit((uint64_t)&v250);
  uint64_t v39 = (re *)v250;
  if ((void)v250 && (v251 & 1) == 0) {
    uint64_t v39 = (re *)(*(uint64_t (**)(void, void))(*(void *)v250 + 40))(v250, v252);
  }
  uint64_t v40 = (re::EventBus *)*((void *)a2 + 36);
  if (v40)
  {
    LODWORD(v41) = 0x7FFFFFFF;
    unint64_t v42 = (unint64_t)a2 ^ ((unint64_t)a2 >> 30);
    if (*v38)
    {
      unint64_t v43 = 0x94D049BB133111EBLL * ((0xBF58476D1CE4E5B9 * v42) ^ ((0xBF58476D1CE4E5B9 * v42) >> 27));
      uint64_t v44 = *(unsigned int *)(*((void *)this + 22) + 4 * ((v43 ^ (v43 >> 31)) % *((unsigned int *)this + 48)));
      if (v44 != 0x7FFFFFFF)
      {
        uint64_t v45 = *((void *)this + 23);
        if (*(re::ecs2::Scene **)(v45 + 80 * v44 + 16) == a2)
        {
          LODWORD(v41) = v44;
        }
        else
        {
          uint64_t v41 = v44;
          while (1)
          {
            LODWORD(v41) = *(_DWORD *)(v45 + 80 * v41 + 8) & 0x7FFFFFFF;
            if (v41 == 0x7FFFFFFF) {
              break;
            }
            if (*(re::ecs2::Scene **)(v45 + 80 * v41 + 16) == a2) {
              goto LABEL_21;
            }
          }
          LODWORD(v41) = 0x7FFFFFFF;
        }
      }
    }
LABEL_21:
    uint64_t v46 = *((void *)this + 23) + 80 * v41 + 24;
    *((void *)&v251 + 1) = re::globalAllocators(v39)[2];
    *(void *)&long long v252 = 0;
    uint64_t v47 = (void *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)&v251 + 1) + 32))(*((void *)&v251 + 1), 32, 0);
    void *v47 = &unk_26E6F7E48;
    v47[1] = v5;
    v47[2] = re::ecs2::BillboardManagerStateTracking::billboardComponentAddOrActivateEventHandler<REComponentDidAddEvent>;
    v47[3] = 0;
    *(void *)&long long v252 = v47;
    uint64_t v48 = re::EventBus::subscribe<re::ecs2::Entity,REComponentDidAddEvent>(v40, (uint64_t)&v250, (uint64_t)re::ecs2::ComponentImpl<re::ecs2::BillboardComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType, 0);
    uint64_t v50 = v49;
    uint64_t v51 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(v46);
    *uint64_t v51 = v48;
    v51[1] = v50;
    uint64_t v52 = (re *)re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidAddEvent const&)>::destroyCallable((uint64_t)&v250);
    if (*((void *)this + 21))
    {
      unint64_t v53 = 0x94D049BB133111EBLL * ((0xBF58476D1CE4E5B9 * v42) ^ ((0xBF58476D1CE4E5B9 * v42) >> 27));
      unint64_t v54 = (v53 ^ (v53 >> 31)) % *((unsigned int *)this + 48);
      uint64_t v55 = *((void *)this + 23);
      uint64_t v56 = *(unsigned int *)(*((void *)this + 22) + 4 * v54);
      unsigned int v57 = 0x7FFFFFFF;
      if (v56 != 0x7FFFFFFF)
      {
        if (*(re::ecs2::Scene **)(v55 + 80 * v56 + 16) == a2)
        {
LABEL_26:
          unsigned int v57 = v56;
        }
        else
        {
          while (1)
          {
            LODWORD(v56) = *(_DWORD *)(v55 + 80 * v56 + 8) & 0x7FFFFFFF;
            unsigned int v57 = 0x7FFFFFFF;
            if (v56 == 0x7FFFFFFF) {
              break;
            }
            if (*(re::ecs2::Scene **)(v55 + 80 * v56 + 16) == a2) {
              goto LABEL_26;
            }
          }
        }
      }
    }
    else
    {
      uint64_t v55 = *((void *)this + 23);
      unsigned int v57 = 0x7FFFFFFF;
    }
    uint64_t v58 = v55 + 80 * v57 + 24;
    uint64_t v255 = re::globalAllocators(v52)[2];
    int v256 = 0;
    unsigned int v59 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v255 + 32))(v255, 32, 0);
    void *v59 = &unk_26E6F7EA0;
    v59[1] = v5;
    v59[2] = re::ecs2::BillboardManagerStateTracking::billboardComponentAddOrActivateEventHandler<REComponentDidActivateEvent>;
    v59[3] = 0;
    int v256 = v59;
    uint64_t v60 = re::EventBus::subscribe<re::ecs2::Entity,REComponentDidActivateEvent>(v40, (uint64_t)v254, (uint64_t)re::ecs2::ComponentImpl<re::ecs2::BillboardComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType, 0);
    uint64_t v62 = v61;
    int v63 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(v58);
    *int v63 = v60;
    v63[1] = v62;
    uint64_t v64 = (re *)re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidActivateEvent const&)>::destroyCallable((uint64_t)v254);
    if (*v38)
    {
      unint64_t v65 = 0x94D049BB133111EBLL * ((0xBF58476D1CE4E5B9 * v42) ^ ((0xBF58476D1CE4E5B9 * v42) >> 27));
      unint64_t v66 = (v65 ^ (v65 >> 31)) % *((unsigned int *)this + 48);
      uint64_t v67 = *((void *)this + 23);
      uint64_t v68 = *(unsigned int *)(*((void *)this + 22) + 4 * v66);
      unsigned int v69 = 0x7FFFFFFF;
      if (v68 != 0x7FFFFFFF)
      {
        if (*(re::ecs2::Scene **)(v67 + 80 * v68 + 16) == a2)
        {
LABEL_33:
          unsigned int v69 = v68;
        }
        else
        {
          while (1)
          {
            LODWORD(v68) = *(_DWORD *)(v67 + 80 * v68 + 8) & 0x7FFFFFFF;
            unsigned int v69 = 0x7FFFFFFF;
            if (v68 == 0x7FFFFFFF) {
              break;
            }
            if (*(re::ecs2::Scene **)(v67 + 80 * v68 + 16) == a2) {
              goto LABEL_33;
            }
          }
        }
      }
    }
    else
    {
      uint64_t v67 = *((void *)this + 23);
      unsigned int v69 = 0x7FFFFFFF;
    }
    uint64_t v70 = v67 + 80 * v69 + 24;
    uint64_t v248 = re::globalAllocators(v64)[2];
    float v249 = 0;
    uint64_t v71 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v248 + 32))(v248, 32, 0);
    void *v71 = &unk_26E6F7EF8;
    v71[1] = v5;
    v71[2] = re::ecs2::BillboardManagerStateTracking::billboardComponentRemoveOrDeactivateEventHandler<REComponentWillRemoveEvent>;
    v71[3] = 0;
    float v249 = v71;
    uint64_t v72 = re::EventBus::subscribe<re::ecs2::Entity,REComponentWillRemoveEvent>(v40, (uint64_t)v247, (uint64_t)re::ecs2::ComponentImpl<re::ecs2::BillboardComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType, 0);
    uint64_t v74 = v73;
    uint64_t v75 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(v70);
    *uint64_t v75 = v72;
    v75[1] = v74;
    __int16 v76 = (re *)re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentWillRemoveEvent const&)>::destroyCallable((uint64_t)v247);
    if (*v38)
    {
      unint64_t v77 = 0x94D049BB133111EBLL * ((0xBF58476D1CE4E5B9 * v42) ^ ((0xBF58476D1CE4E5B9 * v42) >> 27));
      unint64_t v78 = (v77 ^ (v77 >> 31)) % *((unsigned int *)this + 48);
      uint64_t v79 = *((void *)this + 23);
      uint64_t v80 = *(unsigned int *)(*((void *)this + 22) + 4 * v78);
      unsigned int v81 = 0x7FFFFFFF;
      if (v80 != 0x7FFFFFFF)
      {
        if (*(re::ecs2::Scene **)(v79 + 80 * v80 + 16) == a2)
        {
LABEL_40:
          unsigned int v81 = v80;
        }
        else
        {
          while (1)
          {
            LODWORD(v80) = *(_DWORD *)(v79 + 80 * v80 + 8) & 0x7FFFFFFF;
            unsigned int v81 = 0x7FFFFFFF;
            if (v80 == 0x7FFFFFFF) {
              break;
            }
            if (*(re::ecs2::Scene **)(v79 + 80 * v80 + 16) == a2) {
              goto LABEL_40;
            }
          }
        }
      }
    }
    else
    {
      uint64_t v79 = *((void *)this + 23);
      unsigned int v81 = 0x7FFFFFFF;
    }
    uint64_t v82 = v79 + 80 * v81 + 24;
    uint64_t v245 = re::globalAllocators(v76)[2];
    int v246 = 0;
    int v83 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v245 + 32))(v245, 32, 0);
    *int v83 = &unk_26E6F7F50;
    v83[1] = v5;
    v83[2] = re::ecs2::BillboardManagerStateTracking::billboardComponentRemoveOrDeactivateEventHandler<REComponentWillDeactivateEvent>;
    v83[3] = 0;
    int v246 = v83;
    uint64_t v84 = re::EventBus::subscribe<re::ecs2::Entity,REComponentWillDeactivateEvent>(v40, (uint64_t)v244, (uint64_t)re::ecs2::ComponentImpl<re::ecs2::BillboardComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType, 0);
    uint64_t v86 = v85;
    unint64_t v87 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(v82);
    *unint64_t v87 = v84;
    v87[1] = v86;
    unint64_t v88 = (re *)re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentWillDeactivateEvent const&)>::destroyCallable((uint64_t)v244);
    if (*v38)
    {
      unint64_t v89 = 0x94D049BB133111EBLL * ((0xBF58476D1CE4E5B9 * v42) ^ ((0xBF58476D1CE4E5B9 * v42) >> 27));
      unint64_t v90 = (v89 ^ (v89 >> 31)) % *((unsigned int *)this + 48);
      uint64_t v91 = *((void *)this + 23);
      uint64_t v92 = *(unsigned int *)(*((void *)this + 22) + 4 * v90);
      unsigned int v93 = 0x7FFFFFFF;
      if (v92 != 0x7FFFFFFF)
      {
        if (*(re::ecs2::Scene **)(v91 + 80 * v92 + 16) == a2)
        {
LABEL_47:
          unsigned int v93 = v92;
        }
        else
        {
          while (1)
          {
            LODWORD(v92) = *(_DWORD *)(v91 + 80 * v92 + 8) & 0x7FFFFFFF;
            unsigned int v93 = 0x7FFFFFFF;
            if (v92 == 0x7FFFFFFF) {
              break;
            }
            if (*(re::ecs2::Scene **)(v91 + 80 * v92 + 16) == a2) {
              goto LABEL_47;
            }
          }
        }
      }
    }
    else
    {
      uint64_t v91 = *((void *)this + 23);
      unsigned int v93 = 0x7FFFFFFF;
    }
    uint64_t v94 = v91 + 80 * v93 + 24;
    uint64_t v242 = re::globalAllocators(v88)[2];
    float v243 = 0;
    uint64_t v95 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v242 + 32))(v242, 32, 0);
    *uint64_t v95 = &unk_26E6F7E48;
    v95[1] = v5;
    v95[2] = re::ecs2::BillboardManagerStateTracking::physicsBodyAddOrActivateEventHandler<REComponentDidAddEvent>;
    v95[3] = 0;
    float v243 = v95;
    uint64_t v96 = re::EventBus::subscribe<re::ecs2::Entity,REComponentDidAddEvent>(v40, (uint64_t)v241, (uint64_t)re::ecs2::ComponentImpl<re::ecs2::RigidBodyComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType, 0);
    uint64_t v98 = v97;
    int v99 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(v94);
    *int v99 = v96;
    v99[1] = v98;
    uint64_t v100 = (re *)re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidAddEvent const&)>::destroyCallable((uint64_t)v241);
    if (*v38)
    {
      unint64_t v101 = 0x94D049BB133111EBLL * ((0xBF58476D1CE4E5B9 * v42) ^ ((0xBF58476D1CE4E5B9 * v42) >> 27));
      unint64_t v102 = (v101 ^ (v101 >> 31)) % *((unsigned int *)this + 48);
      uint64_t v103 = *((void *)this + 23);
      uint64_t v104 = *(unsigned int *)(*((void *)this + 22) + 4 * v102);
      unsigned int v105 = 0x7FFFFFFF;
      if (v104 != 0x7FFFFFFF)
      {
        if (*(re::ecs2::Scene **)(v103 + 80 * v104 + 16) == a2)
        {
LABEL_54:
          unsigned int v105 = v104;
        }
        else
        {
          while (1)
          {
            LODWORD(v104) = *(_DWORD *)(v103 + 80 * v104 + 8) & 0x7FFFFFFF;
            unsigned int v105 = 0x7FFFFFFF;
            if (v104 == 0x7FFFFFFF) {
              break;
            }
            if (*(re::ecs2::Scene **)(v103 + 80 * v104 + 16) == a2) {
              goto LABEL_54;
            }
          }
        }
      }
    }
    else
    {
      uint64_t v103 = *((void *)this + 23);
      unsigned int v105 = 0x7FFFFFFF;
    }
    uint64_t v106 = v103 + 80 * v105 + 24;
    uint64_t v239 = re::globalAllocators(v100)[2];
    char v240 = 0;
    uint64_t v107 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v239 + 32))(v239, 32, 0);
    *uint64_t v107 = &unk_26E6F7EA0;
    v107[1] = v5;
    v107[2] = re::ecs2::BillboardManagerStateTracking::physicsBodyAddOrActivateEventHandler<REComponentDidActivateEvent>;
    v107[3] = 0;
    char v240 = v107;
    uint64_t v108 = re::EventBus::subscribe<re::ecs2::Entity,REComponentDidActivateEvent>(v40, (uint64_t)v238, (uint64_t)re::ecs2::ComponentImpl<re::ecs2::RigidBodyComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType, 0);
    uint64_t v110 = v109;
    long long v111 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(v106);
    void *v111 = v108;
    v111[1] = v110;
    long long v112 = (re *)re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidActivateEvent const&)>::destroyCallable((uint64_t)v238);
    if (*v38)
    {
      unint64_t v113 = 0x94D049BB133111EBLL * ((0xBF58476D1CE4E5B9 * v42) ^ ((0xBF58476D1CE4E5B9 * v42) >> 27));
      unint64_t v114 = (v113 ^ (v113 >> 31)) % *((unsigned int *)this + 48);
      uint64_t v115 = *((void *)this + 23);
      uint64_t v116 = *(unsigned int *)(*((void *)this + 22) + 4 * v114);
      unsigned int v117 = 0x7FFFFFFF;
      if (v116 != 0x7FFFFFFF)
      {
        if (*(re::ecs2::Scene **)(v115 + 80 * v116 + 16) == a2)
        {
LABEL_61:
          unsigned int v117 = v116;
        }
        else
        {
          while (1)
          {
            LODWORD(v116) = *(_DWORD *)(v115 + 80 * v116 + 8) & 0x7FFFFFFF;
            unsigned int v117 = 0x7FFFFFFF;
            if (v116 == 0x7FFFFFFF) {
              break;
            }
            if (*(re::ecs2::Scene **)(v115 + 80 * v116 + 16) == a2) {
              goto LABEL_61;
            }
          }
        }
      }
    }
    else
    {
      uint64_t v115 = *((void *)this + 23);
      unsigned int v117 = 0x7FFFFFFF;
    }
    uint64_t v118 = v115 + 80 * v117 + 24;
    uint64_t v236 = re::globalAllocators(v112)[2];
    uint64_t v237 = 0;
    long long v119 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v236 + 32))(v236, 32, 0);
    *long long v119 = &unk_26E6F7EF8;
    v119[1] = v5;
    v119[2] = re::ecs2::BillboardManagerStateTracking::physicsBodyRemoveOrDeactivateEventHandler<REComponentWillRemoveEvent>;
    v119[3] = 0;
    uint64_t v237 = v119;
    uint64_t v120 = re::EventBus::subscribe<re::ecs2::Entity,REComponentWillRemoveEvent>(v40, (uint64_t)v235, (uint64_t)re::ecs2::ComponentImpl<re::ecs2::RigidBodyComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType, 0);
    uint64_t v122 = v121;
    float32x4_t v123 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(v118);
    *float32x4_t v123 = v120;
    v123[1] = v122;
    float32x4_t v124 = (re *)re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentWillRemoveEvent const&)>::destroyCallable((uint64_t)v235);
    if (*v38)
    {
      unint64_t v125 = 0x94D049BB133111EBLL * ((0xBF58476D1CE4E5B9 * v42) ^ ((0xBF58476D1CE4E5B9 * v42) >> 27));
      unint64_t v126 = (v125 ^ (v125 >> 31)) % *((unsigned int *)this + 48);
      uint64_t v127 = *((void *)this + 23);
      uint64_t v128 = *(unsigned int *)(*((void *)this + 22) + 4 * v126);
      unsigned int v129 = 0x7FFFFFFF;
      if (v128 != 0x7FFFFFFF)
      {
        if (*(re::ecs2::Scene **)(v127 + 80 * v128 + 16) == a2)
        {
LABEL_68:
          unsigned int v129 = v128;
        }
        else
        {
          while (1)
          {
            LODWORD(v128) = *(_DWORD *)(v127 + 80 * v128 + 8) & 0x7FFFFFFF;
            unsigned int v129 = 0x7FFFFFFF;
            if (v128 == 0x7FFFFFFF) {
              break;
            }
            if (*(re::ecs2::Scene **)(v127 + 80 * v128 + 16) == a2) {
              goto LABEL_68;
            }
          }
        }
      }
    }
    else
    {
      uint64_t v127 = *((void *)this + 23);
      unsigned int v129 = 0x7FFFFFFF;
    }
    uint64_t v130 = v127 + 80 * v129 + 24;
    uint64_t v233 = re::globalAllocators(v124)[2];
    int v234 = 0;
    uint64_t v131 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v233 + 32))(v233, 32, 0);
    *uint64_t v131 = &unk_26E6F7F50;
    v131[1] = v5;
    v131[2] = re::ecs2::BillboardManagerStateTracking::physicsBodyRemoveOrDeactivateEventHandler<REComponentWillDeactivateEvent>;
    void v131[3] = 0;
    int v234 = v131;
    uint64_t v132 = re::EventBus::subscribe<re::ecs2::Entity,REComponentWillDeactivateEvent>(v40, (uint64_t)v232, (uint64_t)re::ecs2::ComponentImpl<re::ecs2::RigidBodyComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType, 0);
    uint64_t v134 = v133;
    long long v135 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(v130);
    *long long v135 = v132;
    v135[1] = v134;
    unsigned int v136 = (re *)re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentWillDeactivateEvent const&)>::destroyCallable((uint64_t)v232);
    if (*v38)
    {
      unint64_t v137 = 0x94D049BB133111EBLL * ((0xBF58476D1CE4E5B9 * v42) ^ ((0xBF58476D1CE4E5B9 * v42) >> 27));
      unint64_t v138 = (v137 ^ (v137 >> 31)) % *((unsigned int *)this + 48);
      uint64_t v139 = *((void *)this + 23);
      uint64_t v140 = *(unsigned int *)(*((void *)this + 22) + 4 * v138);
      unsigned int v141 = 0x7FFFFFFF;
      if (v140 != 0x7FFFFFFF)
      {
        if (*(re::ecs2::Scene **)(v139 + 80 * v140 + 16) == a2)
        {
LABEL_75:
          unsigned int v141 = v140;
        }
        else
        {
          while (1)
          {
            LODWORD(v140) = *(_DWORD *)(v139 + 80 * v140 + 8) & 0x7FFFFFFF;
            unsigned int v141 = 0x7FFFFFFF;
            if (v140 == 0x7FFFFFFF) {
              break;
            }
            if (*(re::ecs2::Scene **)(v139 + 80 * v140 + 16) == a2) {
              goto LABEL_75;
            }
          }
        }
      }
    }
    else
    {
      uint64_t v139 = *((void *)this + 23);
      unsigned int v141 = 0x7FFFFFFF;
    }
    uint64_t v142 = v139 + 80 * v141 + 24;
    uint64_t v230 = re::globalAllocators(v136)[2];
    long long v143 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v230 + 32))(v230, 32, 0);
    *long long v143 = &unk_26E6F7FA8;
    v143[1] = v5;
    v143[2] = re::ecs2::BillboardManagerStateTracking::physicsBodyReparentEventHandler<RESceneEntityDidReparentEvent>;
    v143[3] = 0;
    v231 = v143;
    uint64_t v144 = re::EventBus::subscribe<re::ecs2::Entity,RESceneEntityDidReparentEvent>(v40, (uint64_t)v229, (uint64_t)re::ecs2::ComponentImpl<re::ecs2::RigidBodyComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType, 0);
    uint64_t v146 = v145;
    long long v147 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(v142);
    *long long v147 = v144;
    v147[1] = v146;
    long long v148 = (re *)re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,RESceneEntityDidReparentEvent const&)>::destroyCallable((uint64_t)v229);
    if (*v38)
    {
      unint64_t v149 = 0x94D049BB133111EBLL * ((0xBF58476D1CE4E5B9 * v42) ^ ((0xBF58476D1CE4E5B9 * v42) >> 27));
      unint64_t v150 = (v149 ^ (v149 >> 31)) % *((unsigned int *)this + 48);
      uint64_t v151 = *((void *)this + 23);
      uint64_t v152 = *(unsigned int *)(*((void *)this + 22) + 4 * v150);
      unsigned int v153 = 0x7FFFFFFF;
      if (v152 != 0x7FFFFFFF)
      {
        if (*(re::ecs2::Scene **)(v151 + 80 * v152 + 16) == a2)
        {
LABEL_82:
          unsigned int v153 = v152;
        }
        else
        {
          while (1)
          {
            LODWORD(v152) = *(_DWORD *)(v151 + 80 * v152 + 8) & 0x7FFFFFFF;
            unsigned int v153 = 0x7FFFFFFF;
            if (v152 == 0x7FFFFFFF) {
              break;
            }
            if (*(re::ecs2::Scene **)(v151 + 80 * v152 + 16) == a2) {
              goto LABEL_82;
            }
          }
        }
      }
    }
    else
    {
      uint64_t v151 = *((void *)this + 23);
      unsigned int v153 = 0x7FFFFFFF;
    }
    uint64_t v154 = v151 + 80 * v153 + 24;
    uint64_t v227 = re::globalAllocators(v148)[2];
    simd_float4x4 v155 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v227 + 32))(v227, 32, 0);
    *simd_float4x4 v155 = &unk_26E6F7E48;
    v155[1] = v5;
    uint64_t v155[2] = re::ecs2::BillboardManagerStateTracking::physicsBodyAddOrActivateEventHandler<REComponentDidAddEvent>;
    v155[3] = 0;
    uint64_t v228 = v155;
    uint64_t v156 = re::EventBus::subscribe<re::ecs2::Entity,REComponentDidAddEvent>(v40, (uint64_t)v226, (uint64_t)re::ecs2::ComponentImpl<re::ecs2::ColliderComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType, 0);
    uint64_t v158 = v157;
    int v159 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(v154);
    *int v159 = v156;
    v159[1] = v158;
    uint64_t v160 = (re *)re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidAddEvent const&)>::destroyCallable((uint64_t)v226);
    if (*v38)
    {
      unint64_t v161 = 0x94D049BB133111EBLL * ((0xBF58476D1CE4E5B9 * v42) ^ ((0xBF58476D1CE4E5B9 * v42) >> 27));
      unint64_t v162 = (v161 ^ (v161 >> 31)) % *((unsigned int *)this + 48);
      uint64_t v163 = *((void *)this + 23);
      uint64_t v164 = *(unsigned int *)(*((void *)this + 22) + 4 * v162);
      unsigned int v165 = 0x7FFFFFFF;
      if (v164 != 0x7FFFFFFF)
      {
        if (*(re::ecs2::Scene **)(v163 + 80 * v164 + 16) == a2)
        {
LABEL_89:
          unsigned int v165 = v164;
        }
        else
        {
          while (1)
          {
            LODWORD(v164) = *(_DWORD *)(v163 + 80 * v164 + 8) & 0x7FFFFFFF;
            unsigned int v165 = 0x7FFFFFFF;
            if (v164 == 0x7FFFFFFF) {
              break;
            }
            if (*(re::ecs2::Scene **)(v163 + 80 * v164 + 16) == a2) {
              goto LABEL_89;
            }
          }
        }
      }
    }
    else
    {
      uint64_t v163 = *((void *)this + 23);
      unsigned int v165 = 0x7FFFFFFF;
    }
    uint64_t v166 = v163 + 80 * v165 + 24;
    uint64_t v224 = re::globalAllocators(v160)[2];
    uint64_t v167 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v224 + 32))(v224, 32, 0);
    void *v167 = &unk_26E6F7EA0;
    v167[1] = v5;
    v167[2] = re::ecs2::BillboardManagerStateTracking::physicsBodyAddOrActivateEventHandler<REComponentDidActivateEvent>;
    v167[3] = 0;
    uint64_t v225 = v167;
    uint64_t v168 = re::EventBus::subscribe<re::ecs2::Entity,REComponentDidActivateEvent>(v40, (uint64_t)v223, (uint64_t)re::ecs2::ComponentImpl<re::ecs2::ColliderComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType, 0);
    uint64_t v170 = v169;
    v171 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(v166);
    void *v171 = v168;
    v171[1] = v170;
    uint64_t v172 = (re *)re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidActivateEvent const&)>::destroyCallable((uint64_t)v223);
    if (*v38)
    {
      unint64_t v173 = 0x94D049BB133111EBLL * ((0xBF58476D1CE4E5B9 * v42) ^ ((0xBF58476D1CE4E5B9 * v42) >> 27));
      unint64_t v174 = (v173 ^ (v173 >> 31)) % *((unsigned int *)this + 48);
      uint64_t v175 = *((void *)this + 23);
      uint64_t v176 = *(unsigned int *)(*((void *)this + 22) + 4 * v174);
      unsigned int v177 = 0x7FFFFFFF;
      if (v176 != 0x7FFFFFFF)
      {
        if (*(re::ecs2::Scene **)(v175 + 80 * v176 + 16) == a2)
        {
LABEL_96:
          unsigned int v177 = v176;
        }
        else
        {
          while (1)
          {
            LODWORD(v176) = *(_DWORD *)(v175 + 80 * v176 + 8) & 0x7FFFFFFF;
            unsigned int v177 = 0x7FFFFFFF;
            if (v176 == 0x7FFFFFFF) {
              break;
            }
            if (*(re::ecs2::Scene **)(v175 + 80 * v176 + 16) == a2) {
              goto LABEL_96;
            }
          }
        }
      }
    }
    else
    {
      uint64_t v175 = *((void *)this + 23);
      unsigned int v177 = 0x7FFFFFFF;
    }
    uint64_t v178 = v175 + 80 * v177 + 24;
    uint64_t v221 = re::globalAllocators(v172)[2];
    uint64_t v179 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v221 + 32))(v221, 32, 0);
    *uint64_t v179 = &unk_26E6F7EF8;
    v179[1] = v5;
    v179[2] = re::ecs2::BillboardManagerStateTracking::physicsBodyRemoveOrDeactivateEventHandler<REComponentWillRemoveEvent>;
    v179[3] = 0;
    v222 = v179;
    uint64_t v180 = re::EventBus::subscribe<re::ecs2::Entity,REComponentWillRemoveEvent>(v40, (uint64_t)v220, (uint64_t)re::ecs2::ComponentImpl<re::ecs2::ColliderComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType, 0);
    uint64_t v182 = v181;
    unint64_t v183 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(v178);
    *unint64_t v183 = v180;
    v183[1] = v182;
    uint64_t v184 = (re *)re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentWillRemoveEvent const&)>::destroyCallable((uint64_t)v220);
    if (*v38)
    {
      unint64_t v185 = 0x94D049BB133111EBLL * ((0xBF58476D1CE4E5B9 * v42) ^ ((0xBF58476D1CE4E5B9 * v42) >> 27));
      unint64_t v186 = (v185 ^ (v185 >> 31)) % *((unsigned int *)this + 48);
      uint64_t v187 = *((void *)this + 23);
      uint64_t v188 = *(unsigned int *)(*((void *)this + 22) + 4 * v186);
      unsigned int v189 = 0x7FFFFFFF;
      if (v188 != 0x7FFFFFFF)
      {
        if (*(re::ecs2::Scene **)(v187 + 80 * v188 + 16) == a2)
        {
LABEL_103:
          unsigned int v189 = v188;
        }
        else
        {
          while (1)
          {
            LODWORD(v188) = *(_DWORD *)(v187 + 80 * v188 + 8) & 0x7FFFFFFF;
            unsigned int v189 = 0x7FFFFFFF;
            if (v188 == 0x7FFFFFFF) {
              break;
            }
            if (*(re::ecs2::Scene **)(v187 + 80 * v188 + 16) == a2) {
              goto LABEL_103;
            }
          }
        }
      }
    }
    else
    {
      uint64_t v187 = *((void *)this + 23);
      unsigned int v189 = 0x7FFFFFFF;
    }
    uint64_t v190 = v187 + 80 * v189 + 24;
    uint64_t v218 = re::globalAllocators(v184)[2];
    id v191 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v218 + 32))(v218, 32, 0);
    *id v191 = &unk_26E6F7F50;
    v191[1] = v5;
    v191[2] = re::ecs2::BillboardManagerStateTracking::physicsBodyRemoveOrDeactivateEventHandler<REComponentWillDeactivateEvent>;
    v191[3] = 0;
    uint64_t v219 = v191;
    uint64_t v192 = re::EventBus::subscribe<re::ecs2::Entity,REComponentWillDeactivateEvent>(v40, (uint64_t)v217, (uint64_t)re::ecs2::ComponentImpl<re::ecs2::ColliderComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType, 0);
    uint64_t v194 = v193;
    uint64_t v195 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(v190);
    *uint64_t v195 = v192;
    v195[1] = v194;
    size_t v196 = (re *)re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentWillDeactivateEvent const&)>::destroyCallable((uint64_t)v217);
    if (*v38)
    {
      unint64_t v197 = 0x94D049BB133111EBLL * ((0xBF58476D1CE4E5B9 * v42) ^ ((0xBF58476D1CE4E5B9 * v42) >> 27));
      unint64_t v198 = (v197 ^ (v197 >> 31)) % *((unsigned int *)this + 48);
      uint64_t v199 = *((void *)this + 23);
      uint64_t v200 = *(unsigned int *)(*((void *)this + 22) + 4 * v198);
      unsigned int v201 = 0x7FFFFFFF;
      if (v200 != 0x7FFFFFFF)
      {
        if (*(re::ecs2::Scene **)(v199 + 80 * v200 + 16) == a2)
        {
LABEL_110:
          unsigned int v201 = v200;
        }
        else
        {
          while (1)
          {
            LODWORD(vstd::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 200) = *(_DWORD *)(v199 + 80 * v200 + 8) & 0x7FFFFFFF;
            unsigned int v201 = 0x7FFFFFFF;
            if (v200 == 0x7FFFFFFF) {
              break;
            }
            if (*(re::ecs2::Scene **)(v199 + 80 * v200 + 16) == a2) {
              goto LABEL_110;
            }
          }
        }
      }
    }
    else
    {
      uint64_t v199 = *((void *)this + 23);
      unsigned int v201 = 0x7FFFFFFF;
    }
    uint64_t v202 = v199 + 80 * v201 + 24;
    uint64_t v215 = re::globalAllocators(v196)[2];
    uint64_t v203 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v215 + 32))(v215, 32, 0);
    *uint64_t v203 = &unk_26E6F7FA8;
    v203[1] = v5;
    v203[2] = re::ecs2::BillboardManagerStateTracking::physicsBodyReparentEventHandler<RESceneEntityDidReparentEvent>;
    v203[3] = 0;
    unsigned int v216 = v203;
    uint64_t v204 = re::EventBus::subscribe<re::ecs2::Entity,RESceneEntityDidReparentEvent>(v40, (uint64_t)v214, (uint64_t)re::ecs2::ComponentImpl<re::ecs2::ColliderComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType, 0);
    uint64_t v206 = v205;
    v207 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(v202);
    void *v207 = v204;
    v207[1] = v206;
    re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,RESceneEntityDidReparentEvent const&)>::destroyCallable((uint64_t)v214);
  }
  if (!*((void *)this + 1)) {
    *((void *)this + 1) = *((void *)a2 + 7);
  }
  long long v251 = 0u;
  long long v252 = 0u;
  long long v250 = 0u;
  unint64_t v208 = 0x94D049BB133111EBLL
       * ((0xBF58476D1CE4E5B9 * (v213 ^ (v213 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (v213 ^ (v213 >> 30))) >> 27));
  unint64_t v209 = v208 ^ (v208 >> 31);
  if (*((void *)this + 54))
  {
    unint64_t v210 = v209 % *((unsigned int *)this + 114);
    uint64_t v211 = *(unsigned int *)(*((void *)this + 55) + 4 * v210);
    if (v211 != 0x7FFFFFFF)
    {
      uint64_t v212 = *((void *)this + 56);
      if (*(void *)(v212 + 80 * v211 + 16) == v213) {
        return;
      }
      while (1)
      {
        LODWORD(v2re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 11) = *(_DWORD *)(v212 + 80 * v211 + 8) & 0x7FFFFFFF;
        if (v211 == 0x7FFFFFFF) {
          break;
        }
        if (*(void *)(v212 + 80 * v211 + 16) == v213) {
          return;
        }
      }
    }
  }
  else
  {
    LODWORD(v210) = 0;
  }
  re::HashTable<re::ecs2::Scene const*,re::ecs2::CameraPosition,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,true,false>::addAsMove((uint64_t)this + 432, v210, v209, &v213, (uint64_t)&v250);
  ++*((_DWORD *)this + 118);
}

uint64_t re::ecs2::BillboardManager::unregisterScene(re::ecs2::BillboardManager *this, re::ecs2::Scene *a2)
{
  uint64_t v14 = a2;
  re::HashSetBase<re::ecs2::Entity *,re::ecs2::Entity *,re::internal::ValueAsKey<re::ecs2::Entity *>,re::Hash<re::ecs2::Entity *>,re::EqualTo<re::ecs2::Entity *>,true,false>::remove((uint64_t)this + 24, (uint64_t *)&v14);
  uint64_t v3 = *((void *)v14 + 13);
  uint64_t v4 = *(void *)(v3 + 328);
  if (v4)
  {
    uint64_t v5 = *(void *)(v3 + 344);
    uint64_t v6 = 8 * v4;
    do
    {
      if (*(unsigned char *)(*(void *)v5 + 288)) {
        (*(void (**)(char *))(*((void *)this + 2) + 40))((char *)this + 16);
      }
      v5 += 8;
      v6 -= 8;
    }
    while (v6);
  }
  uint64_t v7 = (char *)this + 168;
  uint64_t result = re::HashTable<re::ecs2::Scene const*,re::BucketArray<RESubscriptionHandle,8ul>,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,true,false>::tryGet((uint64_t)v7, (uint64_t *)&v14);
  if (result)
  {
    uint64_t v9 = *((void *)v14 + 36);
    if (v9)
    {
      uint64_t v10 = result;
      uint64_t v11 = *(void *)(result + 40);
      if (v11)
      {
        for (unint64_t i = 0; i != v11; ++i)
        {
          uint64_t v13 = re::BucketArray<RESubscriptionHandle,8ul>::operator[](v10, i);
          re::EventBus::unsubscribe(v9, *(void *)v13, *(void *)(v13 + 8));
        }
      }
    }
    return re::HashTable<re::ecs2::Scene *,re::BucketArray<RESubscriptionHandle,8ul>,re::Hash<re::ecs2::Scene *>,re::EqualTo<re::ecs2::Scene *>,true,false>::remove((uint64_t)v7, (uint64_t *)&v14);
  }
  return result;
}

void re::ecs2::BillboardManager::update(re::ecs2::BillboardManager *this)
{
  if (*((_DWORD *)this + 79))
  {
    re::ecs2::HierarchyStateTracking<re::ecs2::BillboardData>::updatePerEntityStateData((uint64_t)this + 16);
    uint64_t v2 = *((unsigned int *)this + 116);
    if (v2)
    {
      uint64_t v3 = 0;
      uint64_t v4 = (int *)(*((void *)this + 56) + 8);
      while (1)
      {
        int v5 = *v4;
        v4 += 20;
        if (v5 < 0) {
          break;
        }
        if (v2 == ++v3)
        {
          LODWORD(v3) = *((_DWORD *)this + 116);
          break;
        }
      }
    }
    else
    {
      LODWORD(v3) = 0;
    }
    if (v2 != v3)
    {
      uint64_t v6 = v3;
      do
      {
        *(unsigned char *)(*((void *)this + 56) + 80 * v6 + 32) = 0;
        if (v2 <= (int)v3 + 1) {
          int v7 = v3 + 1;
        }
        else {
          int v7 = v2;
        }
        int v8 = v3;
        while (1)
        {
          uint64_t v6 = (v8 + 1);
          if (v7 - 1 == v8) {
            break;
          }
          ++v8;
          LODWORD(v3) = v6;
          if ((*(_DWORD *)(*((void *)this + 56) + 80 * v6 + 8) & 0x80000000) != 0) {
            goto LABEL_18;
          }
        }
        LODWORD(v3) = v7;
LABEL_18:
        ;
      }
      while (v2 != v3);
    }
    if (re::ecs2::BillboardService::isBillboardEnabled(void)::onceToken != -1) {
      dispatch_once(&re::ecs2::BillboardService::isBillboardEnabled(void)::onceToken, &__block_literal_global_25);
    }
    if (re::ecs2::gIsBillboardEnabled) {
      uint64_t v9 = (char *)this + 72;
    }
    else {
      uint64_t v9 = 0;
    }
    if (re::ecs2::gIsBillboardEnabled)
    {
      uint64_t v10 = *((unsigned int *)this + 128);
      if (v10)
      {
        uint64_t v11 = 0;
        uint64_t v12 = (int *)(*((void *)this + 62) + 8);
        while (1)
        {
          int v13 = *v12;
          v12 += 44;
          if (v13 < 0) {
            break;
          }
          if (v10 == ++v11)
          {
            LODWORD(vre::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 11) = *((_DWORD *)this + 128);
            break;
          }
        }
      }
      else
      {
        LODWORD(vre::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 11) = 0;
      }
      if (v10 != v11)
      {
        uint64_t v20 = v11;
        unsigned int v21 = *((_DWORD *)this + 128);
        do
        {
          uint64_t v22 = *((void *)this + 62);
          unint64_t v23 = *(void *)(v22 + 176 * v20 + 16);
          if (re::HashTable<re::ecs2::Entity const*,re::ecs2::BillboardData,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::containsKey((uint64_t)v9, v23))
          {
            *(unsigned char *)(v22 + 176 * v20 + 32) = 0;
          }
          else if (*((void *)this + 60))
          {
            unint64_t v24 = 0x94D049BB133111EBLL
                * ((0xBF58476D1CE4E5B9 * (v23 ^ (v23 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (v23 ^ (v23 >> 30))) >> 27));
            unint64_t v25 = (v24 ^ (v24 >> 31)) % *((unsigned int *)this + 126);
            uint64_t v26 = *((void *)this + 61);
            uint64_t v27 = *(unsigned int *)(v26 + 4 * v25);
            if (v27 != 0x7FFFFFFF)
            {
              if (*(void *)(v22 + 176 * v27 + 16) == v23)
              {
                *(_DWORD *)(v26 + 4 * v2re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5) = *(_DWORD *)(v22 + 176 * v27 + 8) & 0x7FFFFFFF;
LABEL_51:
                uint64_t v29 = *((void *)this + 62);
                uint64_t v30 = v29 + 176 * v27;
                int v33 = *(_DWORD *)(v30 + 8);
                uint64_t v32 = (int *)(v30 + 8);
                int v31 = v33;
                if (v33 < 0)
                {
                  *uint64_t v32 = v31 & 0x7FFFFFFF;
                  uint64_t v29 = *((void *)this + 62);
                  int v31 = *(_DWORD *)(v29 + 176 * v27 + 8);
                }
                *(_DWORD *)(v29 + 176 * v27 + 8) = *((_DWORD *)this + 129) | v31 & 0x80000000;
                *((_DWORD *)this + 129) = v27;
                --*((_DWORD *)this + 127);
                ++*((_DWORD *)this + 130);
                unsigned int v21 = *((_DWORD *)this + 128);
              }
              else
              {
                while (1)
                {
                  uint64_t v28 = v27;
                  uint64_t v27 = *(_DWORD *)(v22 + 176 * v27 + 8) & 0x7FFFFFFF;
                  if (v27 == 0x7FFFFFFF) {
                    break;
                  }
                  if (*(void *)(v22 + 176 * v27 + 16) == v23)
                  {
                    *(_DWORD *)(v22 + 176 * v28 + 8) = *(_DWORD *)(v22 + 176 * v28 + 8) & 0x80000000 | *(_DWORD *)(v22 + 176 * v27 + 8) & 0x7FFFFFFF;
                    goto LABEL_51;
                  }
                }
              }
            }
          }
          if (v21 <= (int)v11 + 1) {
            unsigned int v34 = v11 + 1;
          }
          else {
            unsigned int v34 = v21;
          }
          while (1)
          {
            uint64_t v20 = (v11 + 1);
            if (v34 - 1 == v11) {
              break;
            }
            LODWORD(vre::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 11) = v11 + 1;
            unsigned int v35 = v20;
            if ((*(_DWORD *)(*((void *)this + 62) + 176 * v20 + 8) & 0x80000000) != 0) {
              goto LABEL_61;
            }
          }
          unsigned int v35 = v34;
LABEL_61:
          LODWORD(vre::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 11) = v35;
        }
        while (v10 != v35);
      }
    }
    else if (*((_DWORD *)this + 127))
    {
      uint64_t v14 = *((unsigned int *)this + 126);
      if (v14) {
        memset_pattern16(*((void **)this + 61), &unk_2343655D0, 4 * v14);
      }
      unsigned int v15 = *((_DWORD *)this + 128);
      if (v15)
      {
        uint64_t v16 = 0;
        uint64_t v17 = 176 * v15;
        do
        {
          uint64_t v18 = *((void *)this + 62) + v16;
          int v19 = *(_DWORD *)(v18 + 8);
          if (v19 < 0) {
            *(_DWORD *)(v18 + 8) = v19 & 0x7FFFFFFF;
          }
          v16 += 176;
        }
        while (v17 != v16);
      }
      *((_DWORD *)this + 129) = 0x7FFFFFFF;
      *(void *)((char *)this + 508) = 0;
      ++*((_DWORD *)this + 130);
    }
    if (re::ecs2::gIsBillboardEnabled) {
      uint64_t v36 = (char *)this + 72;
    }
    else {
      uint64_t v36 = 0;
    }
    if (re::ecs2::gIsBillboardEnabled)
    {
      uint64_t v37 = *((unsigned int *)this + 26);
      if (v37)
      {
        uint64_t v38 = 0;
        uint64_t v39 = (int *)(*((void *)this + 11) + 8);
        while (1)
        {
          int v40 = *v39;
          v39 += 44;
          if (v40 < 0) {
            break;
          }
          if (v37 == ++v38)
          {
            LODWORD(v38) = *((_DWORD *)this + 26);
            break;
          }
        }
      }
      else
      {
        LODWORD(v38) = 0;
      }
      if (v37 != v38)
      {
        uint64_t v41 = v38;
        do
        {
          re::ecs2::BillboardManager::getBillboardedTransform((float32x4_t *)this, *(re::ecs2::TransformComponent ***)(*((void *)v36 + 2) + 176 * v41 + 16), v44);
          if (*((_DWORD *)this + 26) <= (v38 + 1)) {
            int v42 = v38 + 1;
          }
          else {
            int v42 = *((_DWORD *)this + 26);
          }
          int v43 = v38;
          while (1)
          {
            uint64_t v41 = (v43 + 1);
            if (v42 - 1 == v43) {
              break;
            }
            ++v43;
            LODWORD(v38) = v41;
            if ((*(_DWORD *)(*((void *)v36 + 2) + 176 * v41 + 8) & 0x80000000) != 0) {
              goto LABEL_82;
            }
          }
          LODWORD(v38) = v42;
LABEL_82:
          ;
        }
        while (v37 != v38);
      }
    }
  }
}

void re::ecs2::HierarchyStateTracking<re::ecs2::BillboardData>::updatePerEntityStateData(uint64_t a1)
{
  uint64_t v1 = a1 + 104;
  uint64_t v2 = a1 + 200;
  (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 32))(a1, a1 + 104);
  re::HashSetBase<re::ecs2::Entity *,re::ecs2::Entity *,re::internal::ValueAsKey<re::ecs2::Entity *>,re::Hash<re::ecs2::Entity *>,re::EqualTo<re::ecs2::Entity *>,true,false>::clear(v1);
  re::HashSetBase<re::ecs2::Entity *,re::ecs2::Entity *,re::internal::ValueAsKey<re::ecs2::Entity *>,re::Hash<re::ecs2::Entity *>,re::EqualTo<re::ecs2::Entity *>,true,false>::clear(v2);
}

uint64_t re::ecs2::BillboardManager::billboardDataPerEntity(re::ecs2::BillboardManager *this)
{
  if (re::ecs2::BillboardService::isBillboardEnabled(void)::onceToken != -1) {
    dispatch_once(&re::ecs2::BillboardService::isBillboardEnabled(void)::onceToken, &__block_literal_global_25);
  }
  if (re::ecs2::gIsBillboardEnabled) {
    return (uint64_t)this + 72;
  }
  else {
    return 0;
  }
}

BOOL re::HashTable<re::ecs2::Entity const*,re::ecs2::BillboardData,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::containsKey(uint64_t a1, unint64_t a2)
{
  if (!*(void *)a1) {
    return 0;
  }
  unint64_t v2 = 0x94D049BB133111EBLL
     * ((0xBF58476D1CE4E5B9 * (a2 ^ (a2 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (a2 ^ (a2 >> 30))) >> 27));
  uint64_t v3 = *(unsigned int *)(*(void *)(a1 + 8) + 4 * ((v2 ^ (v2 >> 31)) % *(unsigned int *)(a1 + 24)));
  if (v3 == 0x7FFFFFFF) {
    return 0;
  }
  uint64_t v5 = *(void *)(a1 + 16);
  if (*(void *)(v5 + 176 * v3 + 16) == a2) {
    return 1;
  }
  do
  {
    LODWORD(v3) = *(_DWORD *)(v5 + 176 * v3 + 8) & 0x7FFFFFFF;
    BOOL result = v3 != 0x7FFFFFFF;
  }
  while (v3 != 0x7FFFFFFF && *(void *)(v5 + 176 * v3 + 16) != a2);
  return result;
}

void re::ecs2::BillboardManager::getBillboardedTransform(float32x4_t *this@<X0>, re::ecs2::TransformComponent **a2@<X1>, _OWORD *a3@<X8>)
{
  if (a2)
  {
    if (re::ecs2::BillboardService::isBillboardEnabled(void)::onceToken != -1) {
      dispatch_once(&re::ecs2::BillboardService::isBillboardEnabled(void)::onceToken, &__block_literal_global_25);
    }
    if (re::ecs2::gIsBillboardEnabled
      && re::HashTable<re::ecs2::Entity const*,re::ecs2::BillboardData,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::containsKey((uint64_t)&this[4].i64[1], (unint64_t)a2))
    {
      if (this[25].i8[0])
      {
        LOBYTE(v24) = 1;
        float32x4_t v6 = this[26];
LABEL_8:
        v25[0] = v6;
LABEL_9:
        re::ecs2::BillboardManager::getBillboardedTransformByCamera((uint64_t)a2, (uint64_t)this, v25, 1, a3);
        return;
      }
      int v7 = a2;
      do
      {
        int v8 = v7;
        int v7 = (re::ecs2::TransformComponent **)v7[3];
      }
      while (v7);
      if (this[27].i64[0])
      {
        unint64_t v9 = (unint64_t)v8[2];
        unint64_t v10 = 0x94D049BB133111EBLL
            * ((0xBF58476D1CE4E5B9 * (v9 ^ (v9 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (v9 ^ (v9 >> 30))) >> 27));
        uint64_t v11 = *(unsigned int *)(this[27].i64[1] + 4 * ((v10 ^ (v10 >> 31)) % this[28].u32[2]));
        if (v11 != 0x7FFFFFFF)
        {
          uint64_t v12 = this[28].i64[0];
          if (*(void *)(v12 + 80 * v11 + 16) == v9)
          {
LABEL_22:
            uint64_t v14 = v12 + 80 * v11;
            int v16 = *(unsigned __int8 *)(v14 + 32);
            unsigned int v15 = (unsigned char *)(v14 + 32);
            if (v16)
            {
              LOBYTE(v24) = *(unsigned char *)(v12 + 80 * v11 + 48);
              if ((_BYTE)v24)
              {
                float32x4_t v6 = *(float32x4_t *)(v12 + 80 * v11 + 64);
                goto LABEL_8;
              }
            }
            else
            {
              uint64_t PerspectiveCameraInScene = re::ecs2::PerspectiveCameraComponent::firstPerspectiveCameraInScene(v9);
              if (PerspectiveCameraInScene
                || (uint64_t PerspectiveCameraInScene = re::ecs2::OrthographicCameraComponent::firstOrthographicCameraInScene(v9)) != 0
                || (uint64_t PerspectiveCameraInScene = re::ecs2::CustomMatrixCameraComponent::firstCustomMatrixCameraInScene(v9)) != 0)
              {
                re::ecs2::TransformComponent::worldMatrix4x4F(*(re::ecs2::TransformComponent ***)(PerspectiveCameraInScene + 16), (const re::ecs2::Entity *)1, &v24);
                LOBYTE(v24) = 1;
                v25[0] = v25[2];
                uint64_t v18 = (float32x4_t *)(v12 + 80 * v11);
                int v20 = v18[3].u8[0];
                int v19 = v18 + 3;
                if (!v20) {
                  v19->i8[0] = 1;
                }
                v19[1] = v25[0];
                *unsigned int v15 = 1;
                goto LABEL_9;
              }
              uint64_t v21 = v12 + 80 * v11;
              int v23 = *(unsigned __int8 *)(v21 + 48);
              uint64_t v22 = (unsigned char *)(v21 + 48);
              if (v23) {
                *uint64_t v22 = 0;
              }
              *unsigned int v15 = 1;
            }
          }
          else
          {
            while (1)
            {
              int v13 = *(_DWORD *)(v12 + 80 * v11 + 8);
              uint64_t v11 = v13 & 0x7FFFFFFF;
              if ((v13 & 0x7FFFFFFF) == 0x7FFFFFFF) {
                break;
              }
              if (*(void *)(v12 + 80 * v11 + 16) == v9) {
                goto LABEL_22;
              }
            }
          }
        }
      }
    }
    else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
    {
      __break(0xC471u);
    }
    re::ecs2::TransformComponent::worldMatrix4x4F(a2, (const re::ecs2::Entity *)1, a3);
  }
  else
  {
    *a3 = xmmword_23435FD50;
    a3[1] = xmmword_23435FD60;
    a3[2] = xmmword_23435FD80;
    a3[3] = xmmword_23435FBB0;
  }
}

uint64_t re::makeQuaternionFromMatrix<float>(float32x4_t *a1)
{
  float32x4_t v1 = a1[1];
  int32x4_t v2 = (int32x4_t)vmulq_f32(*a1, *a1);
  v2.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v2, 2), vadd_f32(*(float32x2_t *)v2.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v2.i8, 1))).u32[0];
  float32x2_t v3 = vrsqrte_f32((float32x2_t)v2.u32[0]);
  float32x2_t v4 = vmul_f32(v3, vrsqrts_f32((float32x2_t)v2.u32[0], vmul_f32(v3, v3)));
  float32x4_t v5 = vmulq_n_f32(*a1, vmul_f32(v4, vrsqrts_f32((float32x2_t)v2.u32[0], vmul_f32(v4, v4))).f32[0]);
  float32x4_t v6 = vmulq_f32(v1, v5);
  float32x4_t v7 = vmulq_f32(v5, v5);
  float v8 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v7, 2), vaddq_f32(v7, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v7.f32, 1))).f32[0];
  float32x4_t v9 = vsubq_f32(v1, vmulq_n_f32(v5, vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v6, 2), vaddq_f32(v6, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v6.f32, 1))).f32[0]/ v8));
  int32x4_t v10 = (int32x4_t)vmulq_f32(v9, v9);
  v10.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v10, 2), vadd_f32(*(float32x2_t *)v10.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v10.i8, 1))).u32[0];
  *(float32x2_t *)v7.f32 = vrsqrte_f32((float32x2_t)v10.u32[0]);
  *(float32x2_t *)v7.f32 = vmul_f32(*(float32x2_t *)v7.f32, vrsqrts_f32((float32x2_t)v10.u32[0], vmul_f32(*(float32x2_t *)v7.f32, *(float32x2_t *)v7.f32)));
  float32x4_t v11 = vmulq_n_f32(v9, vmul_f32(*(float32x2_t *)v7.f32, vrsqrts_f32((float32x2_t)v10.u32[0], vmul_f32(*(float32x2_t *)v7.f32, *(float32x2_t *)v7.f32))).f32[0]);
  float32x4_t v12 = a1[2];
  float32x4_t v13 = vmulq_f32(v5, v12);
  float32x4_t v14 = vmulq_n_f32(v5, vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v13, 2), vaddq_f32(v13, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v13.f32, 1))).f32[0]/ v8);
  float32x4_t v15 = vmulq_f32(v12, v11);
  float32x4_t v16 = vsubq_f32(v12, v14);
  v14.f32[0] = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v15, 2), vaddq_f32(v15, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v15.f32, 1))).f32[0];
  float32x4_t v17 = vmulq_f32(v11, v11);
  float32x4_t v18 = vsubq_f32(v16, vmulq_n_f32(v11, v14.f32[0]/ vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v17, 2), vaddq_f32(v17, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v17.f32, 1))).f32[0]));
  int32x4_t v19 = (int32x4_t)vmulq_f32(v18, v18);
  v19.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v19, 2), vadd_f32(*(float32x2_t *)v19.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v19.i8, 1))).u32[0];
  *(float32x2_t *)v17.f32 = vrsqrte_f32((float32x2_t)v19.u32[0]);
  *(float32x2_t *)v17.f32 = vmul_f32(*(float32x2_t *)v17.f32, vrsqrts_f32((float32x2_t)v19.u32[0], vmul_f32(*(float32x2_t *)v17.f32, *(float32x2_t *)v17.f32)));
  int32x4_t v20 = (int32x4_t)vmulq_n_f32(v18, vmul_f32(*(float32x2_t *)v17.f32, vrsqrts_f32((float32x2_t)v19.u32[0], vmul_f32(*(float32x2_t *)v17.f32, *(float32x2_t *)v17.f32))).f32[0]);
  float v21 = (float)(v5.f32[0] + v11.f32[1]) + *(float *)&v20.i32[2];
  if (v21 >= 0.0)
  {
    float v33 = sqrtf(v21 + 1.0);
    float32x2_t v34 = vrecpe_f32((float32x2_t)COERCE_UNSIGNED_INT(v33 + v33));
    float32x2_t v35 = vmul_f32(v34, vrecps_f32((float32x2_t)COERCE_UNSIGNED_INT(v33 + v33), v34));
    return (uint64_t)vmul_n_f32(vsub_f32((float32x2_t)*(_OWORD *)&vzip2q_s32((int32x4_t)v11, vuzp1q_s32((int32x4_t)v11, v20)), (float32x2_t)*(_OWORD *)&vtrn2q_s32(v20, vzip2q_s32(v20, (int32x4_t)v5))), vmul_f32(v35, vrecps_f32((float32x2_t)COERCE_UNSIGNED_INT(v33 + v33), v35)).f32[0]);
  }
  else if (v5.f32[0] < v11.f32[1] || v5.f32[0] < *(float *)&v20.i32[2])
  {
    float v36 = 1.0 - v5.f32[0];
    if (v11.f32[1] >= *(float *)&v20.i32[2])
    {
      float v43 = sqrtf(v11.f32[1] + (float)(v36 - *(float *)&v20.i32[2]));
      *(float *)&unsigned int v44 = v43 + v43;
      float32x2_t v45 = vrecpe_f32((float32x2_t)v44);
      float32x2_t v46 = vmul_f32(v45, vrecps_f32((float32x2_t)v44, v45));
      v47.i32[0] = vmul_f32(v46, vrecps_f32((float32x2_t)v44, v46)).u32[0];
      v46.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_lane_s32(*(int32x2_t *)v5.f32, 1), *(float32x2_t *)v11.f32).u32[0];
      v46.i32[1] = v44;
      v47.i32[1] = 0.25;
      return (uint64_t)vmul_f32(v46, v47);
    }
    else
    {
      float32x2_t v37 = (float32x2_t)__PAIR64__(v5.u32[1], COERCE_UNSIGNED_INT(sqrtf((float)(v36 - v11.f32[1]) + *(float *)&v20.i32[2])));
      float32x2_t v38 = vadd_f32((float32x2_t)*(_OWORD *)&vzip2q_s32((int32x4_t)v5, (int32x4_t)v11), *(float32x2_t *)v20.i8);
      float32x2_t v39 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v11.f32, 0);
      v39.i32[0] = 2.0;
      v39.i32[0] = vmul_f32(v37, v39).u32[0];
      float32x2_t v40 = vrecpe_f32((float32x2_t)v39.u32[0]);
      float32x2_t v41 = vmul_f32(v40, vrecps_f32((float32x2_t)v39.u32[0], v40));
      float32x2_t v32 = vmul_n_f32(v38, vmul_f32(v41, vrecps_f32((float32x2_t)v39.u32[0], v41)).f32[0]);
      __asm { FMOV            V2.2S, #0.25 }
    }
  }
  else
  {
    float32x2_t v22 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v11.f32, 0);
    float32x2_t v23 = vadd_f32(*(float32x2_t *)v5.f32, v22);
    v22.i32[0] = 2.0;
    v22.i32[0] = vmul_f32((float32x2_t)__PAIR64__(v5.u32[1], COERCE_UNSIGNED_INT(sqrtf(v5.f32[0] + (float)((float)(1.0 - v11.f32[1])- *(float *)&v20.i32[2])))), v22).u32[0];
    v22.i32[1] = v23.i32[1];
    float32x2_t v24 = vrecpe_f32((float32x2_t)v22.u32[0]);
    float32x2_t v25 = vmul_f32(v24, vrecps_f32((float32x2_t)v22.u32[0], v24));
    unsigned __int32 v26 = vmul_f32(v25, vrecps_f32((float32x2_t)v22.u32[0], v25)).u32[0];
    __asm { FMOV            V5.2S, #0.25 }
    _D5.i32[1] = v26;
    return (uint64_t)vmul_f32(v22, _D5);
  }
  return (uint64_t)v32;
}