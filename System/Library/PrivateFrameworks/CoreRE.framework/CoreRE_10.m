uint64_t re::ecs2::PhysicsSimulationTracking::clearPhysicsSimulationEventHandler<RESceneEntityWillDeactivateEvent>(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v15;

  v4 = a1 + 512;
  v5 = re::HashTable<re::ecs2::Entity const*,re::SharedPtr<re::ecs2::CAMeshCodirectionalGroup>,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::tryGet(a1 + 512, a2);
  if (v5)
  {
    v6 = (uint64_t *)v5;
    v7 = a2;
    do
    {
      v8 = v7;
      v7 = *(void *)(v7 + 24);
    }
    while (v7);
    v15 = *(void *)(v8 + 16);
    v9 = re::HashTable<re::ecs2::Scene const*,re::DataArray<re::ecs2::PhysicsSimulationData>,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,true,false>::tryGet(a1 + 416, &v15);
    if (v9)
    {
      if (re::DataArray<re::ecs2::PhysicsSimulationData>::tryGet(v9, *v6))
      {
        v10 = a1 + 360;
        v11 = v15;
        v12 = *v6;
        v13 = (void *)re::BucketArray<re::Pair<re::ecs2::Scene const*,re::DataArrayHandle<re::ecs2::PhysicsSimulationData>,true>,8ul>::addUninitialized(v10);
        *v13 = v11;
        v13[1] = v12;
        re::HashTable<void *,re::internal::AnimationCompositionChainBase *,re::Hash<void *>,re::EqualTo<void *>,true,false>::remove(v4, a2);
      }
    }
  }
  return 0;
}

re::ecs2::Scene **re::ecs2::PhysicsSimulationTracking::unregisterScene(re::ecs2::PhysicsSimulationTracking *this, re::ecs2::Scene *a2)
{
  v6 = a2;
  re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::unregisterScene((uint64_t)this, (uint64_t)a2);
  re::HashTable<re::ecs2::Entity const*,re::ecs2::EntityVisualProxyScopeData,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::remove((uint64_t)this + 464, (uint64_t *)&v6);
  result = (re::ecs2::Scene **)re::HashTable<re::ecs2::Scene const*,re::DataArray<re::ecs2::PhysicsSimulationData>,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,true,false>::remove((uint64_t)this + 416, (uint64_t *)&v6);
  if (*((void *)this + 50))
  {
    unint64_t v4 = 0;
    do
    {
      v5 = v6;
      result = (re::ecs2::Scene **)re::BucketArray<RESubscriptionHandle,8ul>::operator[]((uint64_t)this + 360, v4);
      if (v5 == *result) {
        result = (re::ecs2::Scene **)re::BucketArray<re::Pair<re::ecs2::Scene const*,re::DataArrayHandle<re::ecs2::PhysicsSimulationData>,true>,8ul>::removeAt((uint64_t)this + 360, v4);
      }
      else {
        ++v4;
      }
    }
    while (v4 < *((void *)this + 50));
  }
  return result;
}

uint64_t re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::unregisterScene(uint64_t a1, uint64_t a2)
{
  uint64_t v14 = a2;
  re::HashSetBase<re::ecs2::Entity *,re::ecs2::Entity *,re::internal::ValueAsKey<re::ecs2::Entity *>,re::Hash<re::ecs2::Entity *>,re::EqualTo<re::ecs2::Entity *>,true,false>::remove(a1 + 8, &v14);
  uint64_t v3 = *(void *)(v14 + 104);
  uint64_t v4 = *(void *)(v3 + 328);
  if (v4)
  {
    uint64_t v5 = *(void *)(v3 + 344);
    uint64_t v6 = 8 * v4;
    do
    {
      if (*(unsigned char *)(*(void *)v5 + 288)) {
        (*(void (**)(uint64_t))(*(void *)a1 + 40))(a1);
      }
      v5 += 8;
      v6 -= 8;
    }
    while (v6);
  }
  uint64_t v7 = a1 + 152;
  uint64_t result = re::HashTable<re::ecs2::Scene const*,re::BucketArray<RESubscriptionHandle,8ul>,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,true,false>::tryGet(v7, &v14);
  if (result)
  {
    uint64_t v9 = *(void *)(v14 + 288);
    if (v9)
    {
      uint64_t v10 = result;
      uint64_t v11 = *(void *)(result + 40);
      if (v11)
      {
        for (unint64_t i = 0; i != v11; ++i)
        {
          uint64_t v13 = re::BucketArray<RESubscriptionHandle,8ul>::operator[](v10, i);
          re::EventBus::unsubscribe(v9, *(void *)v13, *(void *)(v13 + 8));
        }
      }
    }
    return re::HashTable<re::ecs2::Scene *,re::BucketArray<RESubscriptionHandle,8ul>,re::Hash<re::ecs2::Scene *>,re::EqualTo<re::ecs2::Scene *>,true,false>::remove(v7, &v14);
  }
  return result;
}

uint64_t re::HashTable<re::ecs2::Scene const*,re::DataArray<re::ecs2::PhysicsSimulationData>,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,true,false>::remove(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)a1) {
    return 0;
  }
  uint64_t v3 = *a2;
  unint64_t v4 = 0xBF58476D1CE4E5B9 * (*a2 ^ ((unint64_t)*a2 >> 30));
  unint64_t v5 = ((0x94D049BB133111EBLL * (v4 ^ (v4 >> 27))) ^ ((0x94D049BB133111EBLL * (v4 ^ (v4 >> 27))) >> 31))
     % *(unsigned int *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(unsigned int *)(v6 + 4 * v5);
  if (v7 == 0x7FFFFFFF) {
    return 0;
  }
  uint64_t v9 = *(void *)(a1 + 16);
  if (*(void *)(v9 + 88 * v7 + 16) != v3)
  {
    while (1)
    {
      unsigned int v10 = v7;
      int v11 = *(_DWORD *)(v9 + 88 * v7 + 8);
      uint64_t v7 = v11 & 0x7FFFFFFF;
      if ((v11 & 0x7FFFFFFF) == 0x7FFFFFFF) {
        return 0;
      }
      if (*(void *)(v9 + 88 * v7 + 16) == v3)
      {
        *(_DWORD *)(v9 + 88 * v10 + 8) = *(_DWORD *)(v9 + 88 * v10 + 8) & 0x80000000 | *(_DWORD *)(v9 + 88 * v7 + 8) & 0x7FFFFFFF;
        goto LABEL_9;
      }
    }
  }
  *(_DWORD *)(v6 + 4 * v5) = *(_DWORD *)(v9 + 88 * v7 + 8) & 0x7FFFFFFF;
LABEL_9:
  re::HashTable<re::ecs2::Scene const*,re::DataArray<re::ecs2::PhysicsSimulationData>,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,true,false>::EntryWithHash::free(*(void *)(a1 + 16) + 88 * v7);
  uint64_t v12 = *(void *)(a1 + 16) + 88 * v7;
  int v13 = *(_DWORD *)(a1 + 40);
  *(_DWORD *)(v12 + 8) = *(_DWORD *)(v12 + 8) & 0x80000000 | *(_DWORD *)(a1 + 36);
  --*(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 36) = v7;
  *(_DWORD *)(a1 + 40) = v13 + 1;
  return 1;
}

uint64_t re::BucketArray<re::Pair<re::ecs2::Scene const*,re::DataArrayHandle<re::ecs2::PhysicsSimulationData>,true>,8ul>::removeAt(uint64_t a1, unint64_t a2)
{
  unint64_t v3 = *(void *)(a1 + 40);
  if (v3 <= a2)
  {
    re::internal::assertLog((re::internal *)6, a2, "assertion failure: '%s' (%s:line %i) Index out of range. index = %zu, size = %zu", "index < m_size", "removeAt", 848, a2, v3);
    uint64_t result = _os_crash();
    __break(1u);
  }
  else
  {
    unint64_t v5 = v3 - 1;
    if (v3 - 1 > a2)
    {
      uint64_t v6 = (_OWORD *)re::BucketArray<RESubscriptionHandle,8ul>::operator[](a1, v5);
      *(_OWORD *)re::BucketArray<RESubscriptionHandle,8ul>::operator[](a1, a2) = *v6;
      unint64_t v5 = *(void *)(a1 + 40) - 1;
    }
    uint64_t result = re::BucketArray<RESubscriptionHandle,8ul>::operator[](a1, v5);
    --*(void *)(a1 + 40);
    ++*(_DWORD *)(a1 + 48);
  }
  return result;
}

uint64_t re::ecs2::PhysicsSimulationTracking::setDefaultGravity(uint64_t result, _OWORD *a2)
{
  uint64_t v3 = result;
  *(_OWORD *)(result + 320) = *a2;
  uint64_t v4 = *(unsigned int *)(result + 448);
  if (v4)
  {
    uint64_t v5 = 0;
    uint64_t v6 = (int *)(*(void *)(result + 432) + 8);
    while (1)
    {
      int v7 = *v6;
      v6 += 22;
      if (v7 < 0) {
        break;
      }
      if (v4 == ++v5)
      {
        LODWORD(v5) = *(_DWORD *)(result + 448);
        break;
      }
    }
  }
  else
  {
    LODWORD(v5) = 0;
  }
  if (v4 != v5)
  {
    uint64_t v8 = v5;
    do
    {
      uint64_t v9 = *(void *)(v3 + 432) + 88 * v8 + 24;
      uint64_t result = re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::DataArrayIterator((uint64_t)&v18, v9, 0);
      if (v9 != v18 || (unsigned __int16)v19 != 0xFFFFLL || (v19 & 0xFFFF0000) != 4294901760)
      {
        do
        {
          uint64_t v12 = re::DataArray<re::ecs2::PhysicsSimulationData>::DataArrayIterator<re::ecs2::PhysicsSimulationData,re::ecs2::PhysicsSimulationData&>::operator*((unsigned __int16 *)&v18);
          if (!*(unsigned char *)(v12 + 64))
          {
            uint64_t v13 = *(void *)(v12 + 8);
            if (v13) {
              (*(void (**)(void, _OWORD *))(*(void *)v13 + 80))(*(void *)(v12 + 8), a2);
            }
            else {
              *(_OWORD *)(v12 + 240) = *a2;
            }
          }
          uint64_t result = (uint64_t)re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::increment(&v18);
        }
        while (v18 != v9 || (unsigned __int16)v19 != 0xFFFF || WORD1(v19) != 0xFFFF);
      }
      if (*(_DWORD *)(v3 + 448) <= (v5 + 1)) {
        int v16 = v5 + 1;
      }
      else {
        int v16 = *(_DWORD *)(v3 + 448);
      }
      while (1)
      {
        uint64_t v8 = (v5 + 1);
        if (v16 - 1 == v5) {
          break;
        }
        LODWORD(v5) = v5 + 1;
        int v17 = v8;
        if ((*(_DWORD *)(*(void *)(v3 + 432) + 88 * v8 + 8) & 0x80000000) != 0) {
          goto LABEL_35;
        }
      }
      int v17 = v16;
LABEL_35:
      LODWORD(v5) = v17;
    }
    while (v4 != v17);
  }
  return result;
}

uint64_t re::ecs2::PhysicsSimulationTracking::updateDefaultFixedTimeStepsForPhysicsSimulations(uint64_t this)
{
  uint64_t v1 = this;
  float v2 = *(float *)(this + 344);
  if (v2 <= 0.0) {
    float v2 = *(float *)(this + 348);
  }
  uint64_t v3 = *(unsigned int *)(this + 448);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (int *)(*(void *)(this + 432) + 8);
    while (1)
    {
      int v6 = *v5;
      v5 += 22;
      if (v6 < 0) {
        break;
      }
      if (v3 == ++v4)
      {
        LODWORD(v4) = *(_DWORD *)(this + 448);
        break;
      }
    }
  }
  else
  {
    LODWORD(v4) = 0;
  }
  if (v3 != v4)
  {
    uint64_t v7 = v4;
    do
    {
      uint64_t v8 = *(void *)(v1 + 432) + 88 * v7 + 24;
      this = re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::DataArrayIterator((uint64_t)&v17, v8, 0);
      if (v8 != v17 || (unsigned __int16)v18 != 0xFFFFLL || (v18 & 0xFFFF0000) != 4294901760)
      {
        do
        {
          uint64_t v11 = re::DataArray<re::ecs2::PhysicsSimulationData>::DataArrayIterator<re::ecs2::PhysicsSimulationData,re::ecs2::PhysicsSimulationData&>::operator*((unsigned __int16 *)&v17);
          if (!*(unsigned char *)(v11 + 96))
          {
            uint64_t v12 = *(void *)(v11 + 8);
            if (v12) {
              *(float *)(v12 + 68) = v2;
            }
            else {
              *(float *)(v11 + 256) = v2;
            }
          }
          this = (uint64_t)re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::increment(&v17);
        }
        while (v17 != v8 || (unsigned __int16)v18 != 0xFFFF || WORD1(v18) != 0xFFFF);
      }
      if (*(_DWORD *)(v1 + 448) <= (v4 + 1)) {
        int v15 = v4 + 1;
      }
      else {
        int v15 = *(_DWORD *)(v1 + 448);
      }
      while (1)
      {
        uint64_t v7 = (v4 + 1);
        if (v15 - 1 == v4) {
          break;
        }
        LODWORD(v4) = v4 + 1;
        int v16 = v7;
        if ((*(_DWORD *)(*(void *)(v1 + 432) + 88 * v7 + 8) & 0x80000000) != 0) {
          goto LABEL_37;
        }
      }
      int v16 = v15;
LABEL_37:
      LODWORD(v4) = v16;
    }
    while (v3 != v16);
  }
  return this;
}

uint64_t re::ecs2::PhysicsSimulationTracking::setDefaultMaxSubStepCount(uint64_t this, int a2)
{
  uint64_t v3 = this;
  *(_DWORD *)(this + 352) = a2;
  uint64_t v4 = *(unsigned int *)(this + 448);
  if (v4)
  {
    uint64_t v5 = 0;
    int v6 = (int *)(*(void *)(this + 432) + 8);
    while (1)
    {
      int v7 = *v6;
      v6 += 22;
      if (v7 < 0) {
        break;
      }
      if (v4 == ++v5)
      {
        LODWORD(v5) = *(_DWORD *)(this + 448);
        break;
      }
    }
  }
  else
  {
    LODWORD(v5) = 0;
  }
  if (v4 != v5)
  {
    uint64_t v8 = v5;
    do
    {
      uint64_t v9 = *(void *)(v3 + 432) + 88 * v8 + 24;
      this = re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::DataArrayIterator((uint64_t)&v19, v9, 0);
      if (v9 != v19 || (unsigned __int16)v20 != 0xFFFFLL || (v20 & 0xFFFF0000) != 4294901760)
      {
        do
        {
          uint64_t v12 = re::DataArray<re::ecs2::PhysicsSimulationData>::DataArrayIterator<re::ecs2::PhysicsSimulationData,re::ecs2::PhysicsSimulationData&>::operator*((unsigned __int16 *)&v19);
          uint64_t v13 = *(void *)(v12 + 8);
          if (v13) {
            uint64_t v14 = (_DWORD *)(v13 + 64);
          }
          else {
            uint64_t v14 = (_DWORD *)(v12 + 260);
          }
          *uint64_t v14 = a2;
          this = (uint64_t)re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::increment(&v19);
        }
        while (v19 != v9 || (unsigned __int16)v20 != 0xFFFF || WORD1(v20) != 0xFFFF);
      }
      if (*(_DWORD *)(v3 + 448) <= (v5 + 1)) {
        int v17 = v5 + 1;
      }
      else {
        int v17 = *(_DWORD *)(v3 + 448);
      }
      while (1)
      {
        uint64_t v8 = (v5 + 1);
        if (v17 - 1 == v5) {
          break;
        }
        LODWORD(v5) = v5 + 1;
        int v18 = v8;
        if ((*(_DWORD *)(*(void *)(v3 + 432) + 88 * v8 + 8) & 0x80000000) != 0) {
          goto LABEL_34;
        }
      }
      int v18 = v17;
LABEL_34:
      LODWORD(v5) = v18;
    }
    while (v4 != v18);
  }
  return this;
}

uint64_t re::ecs2::PhysicsSimulationTracking::destroyPendingSimulations(re::ecs2::PhysicsSimulationTracking *this)
{
  uint64_t v1 = (char *)this + 360;
  uint64_t v2 = *((void *)this + 50);
  if (v2)
  {
    unint64_t v3 = 0;
    uint64_t v4 = (char *)this + 416;
    do
    {
      long long v7 = *(_OWORD *)re::BucketArray<RESubscriptionHandle,8ul>::operator[]((uint64_t)v1, v3);
      uint64_t v5 = re::HashTable<re::ecs2::Scene const*,re::DataArray<re::ecs2::PhysicsSimulationData>,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,true,false>::tryGet((uint64_t)v4, (uint64_t *)&v7);
      if (v5) {
        re::DataArray<re::ecs2::PhysicsSimulationData>::destroy(v5, *((unint64_t *)&v7 + 1));
      }
      ++v3;
    }
    while (v2 != v3);
  }
  return re::BucketArray<re::Pair<re::ecs2::Scene const*,re::DataArrayHandle<re::ecs2::PhysicsSimulationData>,true>,8ul>::clear((uint64_t)v1);
}

uint64_t re::BucketArray<re::Pair<re::ecs2::Scene const*,re::DataArrayHandle<re::ecs2::PhysicsSimulationData>,true>,8ul>::clear(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(void *)(result + 40);
  if (v2)
  {
    for (unint64_t i = 0; i != v2; ++i)
      uint64_t result = re::BucketArray<RESubscriptionHandle,8ul>::operator[](v1, i);
  }
  *(void *)(v1 + 40) = 0;
  ++*(_DWORD *)(v1 + 48);
  return result;
}

uint64_t re::ServiceLocator::serviceOrNull<re::Engine>(uint64_t a1)
{
  {
    re::introspect<re::Engine>(void)::info = re::introspect_Engine(0);
  }
  uint64_t v2 = re::introspect<re::Engine>(void)::info;
  re::StringID::invalid((re::StringID *)v5);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, unsigned char *))(*(void *)a1 + 16))(a1, v2, v5);
  re::StringID::destroyString((re::StringID *)v5);
  return v3;
}

re::ecs2::PhysicsSimulationTracking *re::ecs2::PhysicsSimulationTracking::PhysicsSimulationTracking(re::ecs2::PhysicsSimulationTracking *this)
{
  v16[3] = *MEMORY[0x263EF8340];
  *(void *)this = &unk_26E6C8E28;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  *(void *)((char *)this + 44) = 0x7FFFFFFFLL;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_DWORD *)this + 22) = 0;
  *(_OWORD *)((char *)this + 56) = 0u;
  uint64_t v2 = (char *)this + 56;
  *(void *)((char *)this + 92) = 0x7FFFFFFFLL;
  *(_OWORD *)((char *)this + 120) = 0u;
  *((_DWORD *)this + 34) = 0;
  *(_OWORD *)((char *)this + 104) = 0u;
  uint64_t v3 = (char *)this + 104;
  *(void *)((char *)this + 140) = 0x7FFFFFFFLL;
  *(_OWORD *)((char *)this + 168) = 0u;
  *((_DWORD *)this + 46) = 0;
  *(_OWORD *)((char *)this + 152) = 0u;
  uint64_t v4 = (char *)this + 152;
  *(void *)((char *)this + 188) = 0x7FFFFFFFLL;
  *(_OWORD *)((char *)this + 216) = 0u;
  *((_DWORD *)this + 58) = 0;
  *(_OWORD *)((char *)this + 200) = 0u;
  uint64_t v5 = (char *)this + 200;
  *(void *)((char *)this + 236) = 0x7FFFFFFFLL;
  *(void *)this = &unk_26E6E47C8;
  *((void *)this + 37) = 0;
  *(_OWORD *)((char *)this + 248) = 0u;
  *(_OWORD *)((char *)this + 264) = 0u;
  *(_OWORD *)((char *)this + 280) = 0u;
  *((unsigned char *)this + 304) = 1;
  *((_OWORD *)this + 20) = re::PhysicsSimulation::kDefaultGravity;
  *((_OWORD *)this + 21) = xmmword_234384D80;
  *((_DWORD *)this + 88) = 4;
  *((void *)this + 45) = 0;
  *((void *)this + 46) = 0;
  *((_DWORD *)this + 94) = 1;
  *((void *)this + 49) = 0;
  *((void *)this + 50) = 0;
  *((void *)this + 48) = 0;
  *((_DWORD *)this + 102) = 0;
  *((_DWORD *)this + 112) = 0;
  *((_OWORD *)this + 26) = 0u;
  *((_OWORD *)this + 27) = 0u;
  *(void *)((char *)this + 452) = 0x7FFFFFFFLL;
  *((_OWORD *)this + 29) = 0u;
  *((_OWORD *)this + 30) = 0u;
  *((_DWORD *)this + 124) = 0;
  *(void *)((char *)this + 500) = 0x7FFFFFFFLL;
  *((_OWORD *)this + 32) = 0u;
  *((_OWORD *)this + 33) = 0u;
  *((_DWORD *)this + 136) = 0;
  *(void *)((char *)this + 548) = 0x7FFFFFFFLL;
  *((unsigned char *)this + 560) = 0;
  v16[0] = re::ecs2::ComponentImpl<re::ecs2::PhysicsSimulationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
  v16[1] = re::ecs2::ComponentImpl<re::ecs2::AnchorComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
  v16[2] = re::ecs2::ComponentImpl<re::ecs2::AnchoringComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
  uint64_t v13 = (void **)v16;
  uint64_t v14 = 3;
  re::FixedArray<re::ecs2::ComponentTypeBase const*>::operator=((re::ecs2::PhysicsSimulationTracking *)((char *)this + 272), (uint64_t)&v13);
  uint64_t v14 = 1;
  int v15 = re::ecs2::ComponentImpl<re::ecs2::AnchoringComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
  uint64_t v13 = &v15;
  uint64_t v9 = re::FixedArray<re::ecs2::ComponentTypeBase const*>::operator=((re::ecs2::PhysicsSimulationTracking *)((char *)this + 248), (uint64_t)&v13);
  return this;
}

_anonymous_namespace_ *re::FixedArray<re::ecs2::ComponentTypeBase const*>::operator=(_anonymous_namespace_ *a1, uint64_t a2)
{
  if (*(void *)a1) {
    goto LABEL_4;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4)
  {
LABEL_4:
    re::FixedArray<re::ecs2::ComponentTypeBase const*>::copy(a1, (const void **)a2);
  }
  return a1;
}

void re::ecs2::PhysicsSimulationTracking::buildPerEntityStateForDirtyEntityHierarchies(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v215 = *MEMORY[0x263EF8340];
  uint64_t v6 = *(unsigned int *)(a3 + 32);
  uint64_t v7 = 0;
  if (v6)
  {
    uint64_t v8 = (int *)(*(void *)(a3 + 16) + 8);
    while (1)
    {
      int v9 = *v8;
      v8 += 6;
      if (v9 < 0) {
        break;
      }
      if (v6 == ++v7)
      {
        LODWORD(v7) = *(_DWORD *)(a3 + 32);
        break;
      }
    }
  }
  if (v6 != v7)
  {
    uint64_t v10 = v7;
    v191 = (unint64_t *)(a1 + 56);
    uint64_t v192 = a1 + 512;
    uint64_t v190 = a1 + 360;
    v175 = (_OWORD *)(a1 + 320);
    uint64_t v11 = *(void *)(a3 + 16);
    unsigned int v12 = *(_DWORD *)(a3 + 32);
    unsigned int v180 = v12;
    while (1)
    {
      unint64_t v13 = *(void *)(v11 + 24 * v10 + 16);
      if (*v191)
      {
        unint64_t v14 = 0x94D049BB133111EBLL
            * ((0xBF58476D1CE4E5B9 * (v13 ^ (v13 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (v13 ^ (v13 >> 30))) >> 27));
        uint64_t v15 = *(unsigned int *)(*(void *)(a1 + 64) + 4 * ((v14 ^ (v14 >> 31)) % *(unsigned int *)(a1 + 80)));
        if (v15 != 0x7FFFFFFF)
        {
          uint64_t v16 = *(void *)(a1 + 72);
          while (*(void *)(v16 + 56 * v15 + 16) != v13)
          {
            LODWORD(v15) = *(_DWORD *)(v16 + 56 * v15 + 8) & 0x7FFFFFFF;
            if (v15 == 0x7FFFFFFF) {
              goto LABEL_13;
            }
          }
          goto LABEL_123;
        }
      }
LABEL_13:
      unint64_t v17 = *(void *)(v13 + 24);
      if (!v17 || (*(unsigned char *)(v17 + 288) & 0x80) != 0) {
        break;
      }
      while (1)
      {
        unint64_t v18 = v17;
        if (*v191)
        {
          unint64_t v19 = 0x94D049BB133111EBLL
              * ((0xBF58476D1CE4E5B9 * (v17 ^ (v17 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (v17 ^ (v17 >> 30))) >> 27));
          uint64_t v20 = *(unsigned int *)(*(void *)(a1 + 64) + 4 * ((v19 ^ (v19 >> 31)) % *(unsigned int *)(a1 + 80)));
          if (v20 != 0x7FFFFFFF) {
            break;
          }
        }
LABEL_20:
        unint64_t v17 = *(void *)(v18 + 24);
        if (v17)
        {
          unint64_t v13 = v18;
          if ((*(unsigned char *)(v17 + 288) & 0x80) == 0) {
            continue;
          }
        }
        unint64_t v13 = v18;
        goto LABEL_25;
      }
      uint64_t v21 = *(void *)(a1 + 72);
      while (*(void *)(v21 + 56 * v20 + 16) != v18)
      {
        LODWORD(v20) = *(_DWORD *)(v21 + 56 * v20 + 8) & 0x7FFFFFFF;
        if (v20 == 0x7FFFFFFF) {
          goto LABEL_20;
        }
      }
      uint64_t v22 = v21 + 56 * v20;
      unint64_t v23 = *(unsigned int *)(v22 + 24);
      int v185 = *(_DWORD *)(v22 + 28);
      if (!v23) {
        break;
      }
      long long v187 = *(_OWORD *)(v22 + 32);
      v24 = (uint64_t *)(v22 + 48);
LABEL_35:
      uint64_t v32 = *v24;
      re::StackScratchAllocator::StackScratchAllocator((re::StackScratchAllocator *)v198);
      *(void *)v200 = 0;
      *(void *)&v200[8] = 0;
      unint64_t v33 = 1;
      *(_DWORD *)&v200[16] = 1;
      memset(&v200[24], 0, 24);
      LODWORD(v201) = 0;
      re::BucketArray<re::ecs2::Entity const*,32ul>::init((uint64_t)v200, (uint64_t)v198, 1uLL);
      long long v194 = 0uLL;
      LODWORD(v195) = 1;
      long long v196 = 0uLL;
      *((void *)&v195 + 1) = 0;
      int v197 = 0;
      re::BucketArray<re::ecs2::RootPhysicsSimulationData,32ul>::init((uint64_t)&v194, (uint64_t)v198, 1uLL);
      *(void *)re::BucketArray<re::ecs2::Entity const*,32ul>::addUninitialized((uint64_t)v200) = v13;
      uint64_t v34 = re::BucketArray<re::ecs2::RootPhysicsSimulationData,32ul>::addUninitialized((uint64_t)&v194);
      *(_DWORD *)uint64_t v34 = v23;
      *(_DWORD *)(v34 + 4) = v185;
      *(_OWORD *)(v34 + 8) = v187;
      *(void *)(v34 + 24) = v32;
      do
      {
        unint64_t v35 = v13;
        unint64_t v13 = *(void *)(v13 + 24);
      }
      while (v13);
      if (!*(void *)(a1 + 416))
      {
        uint64_t v39 = *(void *)(a1 + 432);
LABEL_43:
        LODWORD(v40) = 0x7FFFFFFF;
        goto LABEL_44;
      }
      unint64_t v36 = *(void *)(v35 + 16);
      unint64_t v37 = 0x94D049BB133111EBLL
          * ((0xBF58476D1CE4E5B9 * (v36 ^ (v36 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (v36 ^ (v36 >> 30))) >> 27));
      unint64_t v38 = (v37 ^ (v37 >> 31)) % *(unsigned int *)(a1 + 440);
      uint64_t v39 = *(void *)(a1 + 432);
      uint64_t v40 = *(unsigned int *)(*(void *)(a1 + 424) + 4 * v38);
      if (v40 == 0x7FFFFFFF) {
        goto LABEL_43;
      }
      while (*(void *)(v39 + 88 * v40 + 16) != v36)
      {
        uint64_t v40 = *(_DWORD *)(v39 + 88 * v40 + 8) & 0x7FFFFFFF;
        if (v40 == 0x7FFFFFFF) {
          goto LABEL_43;
        }
      }
LABEL_44:
      uint64_t v41 = *(void *)&v200[40];
      if (*(void *)&v200[40])
      {
        v188 = (void *)(v39 + 88 * v40 + 24);
        uint64_t v42 = v39 + 88 * v40;
        v182 = (int *)(v42 + 80);
        v183 = (_DWORD *)(v42 + 76);
        v178 = (_DWORD *)(v42 + 72);
        v179 = (unsigned __int16 *)(v42 + 78);
        v176 = (_DWORD *)(v42 + 68);
        v177 = (_DWORD *)(v42 + 64);
        while (1)
        {
          unint64_t v43 = *(void *)re::BucketArray<re::ecs2::Entity const*,32ul>::operator[]((uint64_t)v200, v41 - 1);
          unint64_t v193 = v43;
          re::BucketArray<re::ecs2::Entity const*,32ul>::operator[]((uint64_t)v200, *(void *)&v200[40] - 1);
          --*(void *)&v200[40];
          LODWORD(v201) = v201 + 1;
          if (!*((void *)&v196 + 1))
          {
            re::internal::assertLog((re::internal *)4, v44, "assertion failure: '%s' (%s:line %i) Array is empty", "m_size > 0", "last", 768);
            _os_crash();
            __break(1u);
LABEL_271:
            re::internal::assertLog((re::internal *)6, v98, "assertion failure: '%s' (%s:line %i) Index out of range. index = %zu, size = %zu", "index < m_size", "operator[]", 1018, v43, v155);
            _os_crash();
            __break(1u);
LABEL_272:
            uint64_t v199 = 0;
            long long v213 = 0u;
            long long v214 = 0u;
            long long v211 = 0u;
            long long v212 = 0u;
            long long v210 = 0u;
            os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
            *(_DWORD *)v203 = 136315906;
            *(void *)&v203[4] = "operator[]";
            __int16 v204 = 1024;
            int v205 = 866;
            __int16 v206 = 2048;
            unint64_t v207 = v23;
            __int16 v208 = 2048;
            unint64_t v209 = v4;
            _os_log_send_and_compose_impl();
            _os_crash_msg();
            __break(1u);
LABEL_273:
            *(void *)v203 = 0;
            long long v213 = 0u;
            long long v214 = 0u;
            long long v211 = 0u;
            long long v212 = 0u;
            long long v210 = 0u;
            os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
            *(_DWORD *)v200 = 136315906;
            *(void *)&v200[4] = "operator[]";
            *(_WORD *)&v200[12] = 1024;
            *(_DWORD *)&v200[14] = 858;
            *(_WORD *)&v200[18] = 2048;
            *(void *)&v200[20] = v4;
            *(_WORD *)&v200[28] = 2048;
            *(void *)&v200[30] = v13;
            _os_log_send_and_compose_impl();
            _os_crash_msg();
            __break(1u);
LABEL_274:
            uint64_t v199 = 0;
            *(_OWORD *)(v43 + 176) = 0u;
            *(_OWORD *)(v43 + 192) = 0u;
            *(_OWORD *)(v43 + 144) = 0u;
            *(_OWORD *)(v43 + 160) = 0u;
            *(_OWORD *)(v43 + 128) = 0u;
            os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
            *(_DWORD *)v203 = 136315906;
            *(void *)(v43 + 84) = "operator[]";
            __int16 v204 = 1024;
            *(_DWORD *)(v43 + 94) = 789;
            __int16 v206 = 2048;
            *(void *)(v43 + 100) = v23;
            __int16 v208 = 2048;
            *(void *)(v43 + 110) = 0;
            _os_log_send_and_compose_impl();
            _os_crash_msg();
            __break(1u);
LABEL_275:
            uint64_t v199 = 0;
            long long v213 = 0u;
            long long v214 = 0u;
            long long v211 = 0u;
            long long v212 = 0u;
            long long v210 = 0u;
            os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
            *(_DWORD *)v203 = 136315906;
            *(void *)&v203[4] = "operator[]";
            __int16 v204 = 1024;
            int v205 = 789;
            __int16 v206 = 2048;
            unint64_t v207 = v23;
            __int16 v208 = 2048;
            unint64_t v209 = v3;
            _os_log_send_and_compose_impl();
            _os_crash_msg();
            __break(1u);
LABEL_276:
            re::internal::assertLog((re::internal *)5, v57, "assertion failure: '%s' (%s:line %i) m_tailBlockLinearAllocationCount (%u) is too large for a 16-bit unsigned integer", "!overflow", "create", 601, v33);
            _os_crash();
            __break(1u);
          }
          unint64_t v4 = *((void *)&v196 + 1) - 1;
          v45 = (unsigned int *)re::BucketArray<re::ecs2::RootPhysicsSimulationData,32ul>::operator[]((uint64_t)&v194, *((void *)&v196 + 1) - 1);
          unint64_t v33 = *v45;
          unsigned int v46 = v45[1];
          unint64_t v47 = *((void *)v45 + 1);
          unint64_t v13 = *((void *)v45 + 2);
          unint64_t v23 = *((void *)v45 + 3);
          re::BucketArray<re::ecs2::RootPhysicsSimulationData,32ul>::operator[]((uint64_t)&v194, v4);
          *((void *)&v196 + 1) = v4;
          ++v197;
          if (*(unsigned char *)(v43 + 288)) {
            break;
          }
LABEL_95:
          uint64_t v41 = *(void *)&v200[40];
          if (!*(void *)&v200[40]) {
            goto LABEL_111;
          }
        }
        uint64_t v48 = *(unsigned __int16 *)(v43 + 82);
        if (!*(_WORD *)(v43 + 82)) {
          goto LABEL_76;
        }
        v49 = (const __int16 *)((char *)re::ecs2::ComponentImpl<re::ecs2::PhysicsSimulationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                              + 16);
        v50 = *(int16x8_t **)(v43 + 88);
        int16x8_t v51 = vld1q_dup_s16(v49);
        int v52 = 1;
        v53 = v50;
        uint64_t v54 = *(unsigned __int16 *)(v43 + 82);
        while (1)
        {
          uint16x8_t v55 = (uint16x8_t)vandq_s8((int8x16_t)vceqq_s16(v51, *v53), (int8x16_t)xmmword_23436BBD0);
          v55.i16[0] = vmaxvq_u16(v55);
          if (v55.i32[0]) {
            break;
          }
          v52 -= 8;
          ++v53;
          if (!--v54) {
            goto LABEL_69;
          }
        }
        if (v55.u16[0] - v52 < *(unsigned __int16 *)(v43 + 80))
        {
          unint64_t v4 = 3;
          goto LABEL_55;
        }
LABEL_69:
        if (!*(void *)(v43 + 128)) {
          goto LABEL_76;
        }
        v66 = (const __int16 *)((char *)re::ecs2::ComponentImpl<re::ecs2::AnchoringComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                              + 16);
        int16x8_t v67 = vld1q_dup_s16(v66);
        int v68 = 1;
        while (1)
        {
          uint16x8_t v69 = (uint16x8_t)vandq_s8((int8x16_t)vceqq_s16(v67, *v50), (int8x16_t)xmmword_23436BBD0);
          v69.i16[0] = vmaxvq_u16(v69);
          if (v69.i32[0]) {
            break;
          }
          v68 -= 8;
          ++v50;
          if (!--v48) {
            goto LABEL_76;
          }
        }
        if (v69.u16[0] - v68 >= *(unsigned __int16 *)(v43 + 80)
          || *(unsigned char *)(a1 + 560)
          || (unint64_t v4 = 2
                 * (*(_DWORD *)(re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(v43 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AnchoringComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)+ 244) == 1), !v4))
        {
LABEL_76:
          v70 = (uint64_t *)re::HashTable<re::ecs2::Entity const*,re::SharedPtr<re::ecs2::CAMeshCodirectionalGroup>,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::tryGet(v192, v43);
          if (v70)
          {
            unint64_t v71 = v43;
            do
            {
              unint64_t v72 = v71;
              unint64_t v71 = *(void *)(v71 + 24);
            }
            while (v71);
            unint64_t v3 = *(void *)(v72 + 16);
            uint64_t v73 = *v70;
            v74 = (void *)re::BucketArray<re::Pair<re::ecs2::Scene const*,re::DataArrayHandle<re::ecs2::PhysicsSimulationData>,true>,8ul>::addUninitialized(v190);
            void *v74 = v3;
            v74[1] = v73;
            re::HashTable<void *,re::internal::AnimationCompositionChainBase *,re::Hash<void *>,re::EqualTo<void *>,true,false>::remove(v192, v43);
          }
          unint64_t v4 = v33;
          goto LABEL_81;
        }
LABEL_55:
        if (!*(unsigned char *)(a1 + 304)) {
          goto LABEL_76;
        }
        v56 = (unint64_t *)re::HashTable<re::ecs2::Entity const*,re::SharedPtr<re::ecs2::CAMeshCodirectionalGroup>,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::tryGet(v192, v43);
        if (!v56)
        {
          float v58 = *(float *)(a1 + 344);
          v59 = v182;
          if (v58 <= 0.0) {
            float v58 = *(float *)(a1 + 348);
          }
          uint64_t v60 = *(void *)(a1 + 296);
          if ((*v182 + 1) >> 24) {
            int v61 = 1;
          }
          else {
            int v61 = *v182 + 1;
          }
          int *v182 = v61;
          unint64_t v33 = *(unsigned __int16 *)v183;
          unint64_t v23 = *v179;
          v62 = v188;
          if (v33 == 0xFFFF && v23 == 0xFFFF)
          {
            if (*v178 >= *v176)
            {
              re::DataArray<re::ecs2::PhysicsSimulationData>::allocBlock(v188);
              v59 = v182;
              v62 = v188;
            }
            uint64_t v63 = v62[2];
            unint64_t v23 = (unsigned __int16)(v63 - 1);
            unint64_t v43 = (unint64_t)v200;
            if (!v63) {
              goto LABEL_274;
            }
            unint64_t v33 = *v178;
            if (v33 >= 0x10000) {
              goto LABEL_276;
            }
            v64 = (void *)(v62[4] + 16 * v23);
            _DWORD *v178 = v33 + 1;
            *(_DWORD *)(v64[1] + 4 * v33) = *v59;
            v65 = (_DWORD *)(*v64 + 272 * v33);
            unint64_t v43 = v193;
          }
          else
          {
            unint64_t v3 = v188[2];
            if (v3 <= v23) {
              goto LABEL_275;
            }
            v87 = (void *)(v188[4] + 16 * v23);
            *(_DWORD *)(v87[1] + 4 * v33) = v61;
            v65 = (_DWORD *)(*v87 + 272 * v33);
            _DWORD *v183 = *v65;
          }
          unint64_t v3 = (unint64_t)v59;
          ++*v177;
          re::ecs2::PhysicsSimulationData::PhysicsSimulationData((uint64_t)v65, v60, v43, v175, *(_DWORD *)(a1 + 352), 0, v58);
          *(void *)&long long v210 = (v23 << 16) | ((unint64_t)(*(_DWORD *)v3 & 0xFFFFFF) << 32) | v33;
          unint64_t v88 = 0x94D049BB133111EBLL
              * ((0xBF58476D1CE4E5B9 * (v43 ^ (v43 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (v43 ^ (v43 >> 30))) >> 27));
          unint64_t v89 = v88 ^ (v88 >> 31);
          if (*(void *)(a1 + 512))
          {
            unint64_t v90 = v89 % *(unsigned int *)(a1 + 536);
            uint64_t v91 = *(unsigned int *)(*(void *)(a1 + 520) + 4 * v90);
            if (v91 != 0x7FFFFFFF)
            {
              uint64_t v92 = *(void *)(a1 + 528);
              while (*(void *)(v92 + 32 * v91 + 16) != v43)
              {
                uint64_t v91 = *(_DWORD *)(v92 + 32 * v91 + 8) & 0x7FFFFFFF;
                if (v91 == 0x7FFFFFFF) {
                  goto LABEL_108;
                }
              }
              v56 = (unint64_t *)(v92 + 32 * v91 + 24);
              goto LABEL_109;
            }
          }
          else
          {
            LODWORD(v90) = 0;
          }
LABEL_108:
          unsigned int v93 = re::HashTable<re::ecs2::Entity const*,re::DataArrayHandle<re::ecs2::PhysicsSimulationData>,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::addAsMove(v192, v90, v89, &v193, &v210);
          ++*(_DWORD *)(a1 + 552);
          v56 = (unint64_t *)(*(void *)(a1 + 528) + 32 * v93 + 24);
        }
LABEL_109:
        unint64_t v23 = *v56;
        unint64_t v47 = v43;
LABEL_81:
        unint64_t v75 = 0x94D049BB133111EBLL
            * ((0xBF58476D1CE4E5B9 * (v43 ^ (v43 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (v43 ^ (v43 >> 30))) >> 27));
        unint64_t v33 = v75 ^ (v75 >> 31);
        unint64_t v76 = *v191;
        if (!*v191
          || (unint64_t v76 = v33 % *(unsigned int *)(a1 + 80),
              uint64_t v77 = *(unsigned int *)(*(void *)(a1 + 64) + 4 * v76),
              v77 == 0x7FFFFFFF))
        {
LABEL_86:
          unint64_t v3 = *(unsigned int *)(a1 + 92);
          if (v3 == 0x7FFFFFFF)
          {
            unint64_t v3 = *(unsigned int *)(a1 + 88);
            int v79 = v3;
            if (v3 == *(_DWORD *)(a1 + 80))
            {
              re::HashTable<re::ecs2::Entity const*,re::ecs2::RootPhysicsSimulationData,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::setCapacity((uint64_t)v191, 2 * *(_DWORD *)(a1 + 84));
              unint64_t v76 = v33 % *(unsigned int *)(a1 + 80);
              int v79 = *(_DWORD *)(a1 + 88);
            }
            *(_DWORD *)(a1 + 88) = v79 + 1;
            uint64_t v80 = *(void *)(a1 + 72);
            int v81 = *(_DWORD *)(v80 + 56 * v3 + 8);
          }
          else
          {
            uint64_t v80 = *(void *)(a1 + 72);
            int v81 = *(_DWORD *)(v80 + 56 * v3 + 8);
            *(_DWORD *)(a1 + 92) = v81 & 0x7FFFFFFF;
          }
          *(_DWORD *)(v80 + 56 * v3 + 8) = v81 | 0x80000000;
          *(_DWORD *)(*(void *)(a1 + 72) + 56 * v3 + 8) = *(_DWORD *)(*(void *)(a1 + 72) + 56 * v3 + 8) & 0x80000000 | *(_DWORD *)(*(void *)(a1 + 64) + 4 * v76);
          *(void *)(*(void *)(a1 + 72) + 56 * v3) = v33;
          *(void *)(*(void *)(a1 + 72) + 56 * v3 + 16) = v43;
          uint64_t v82 = *(void *)(a1 + 72) + 56 * v3;
          *(_DWORD *)(v82 + 24) = v4;
          *(_DWORD *)(v82 + 28) = v46;
          *(void *)(v82 + 32) = v47;
          *(void *)(v82 + 40) = v13;
          *(void *)(v82 + 48) = v23;
          *(_DWORD *)(*(void *)(a1 + 64) + 4 * v76) = v3;
          ++*(_DWORD *)(a1 + 84);
          ++*(_DWORD *)(a1 + 96);
        }
        else
        {
          uint64_t v78 = *(void *)(a1 + 72);
          while (*(void *)(v78 + 56 * v77 + 16) != v43)
          {
            LODWORD(v77) = *(_DWORD *)(v78 + 56 * v77 + 8) & 0x7FFFFFFF;
            if (v77 == 0x7FFFFFFF) {
              goto LABEL_86;
            }
          }
        }
        uint64_t v83 = *(void *)(v43 + 328);
        if (v83)
        {
          v84 = *(unint64_t **)(v43 + 344);
          unint64_t v33 = 8 * v83;
          do
          {
            unint64_t v85 = *v84++;
            unint64_t v3 = v85;
            *(void *)re::BucketArray<re::ecs2::Entity const*,32ul>::addUninitialized((uint64_t)v200) = v85;
            uint64_t v86 = re::BucketArray<re::ecs2::RootPhysicsSimulationData,32ul>::addUninitialized((uint64_t)&v194);
            *(_DWORD *)uint64_t v86 = v4;
            *(_DWORD *)(v86 + 4) = v46;
            *(void *)(v86 + 8) = v47;
            *(void *)(v86 + 16) = v13;
            *(void *)(v86 + 24) = v23;
            v33 -= 8;
          }
          while (v33);
        }
        goto LABEL_95;
      }
LABEL_111:
      uint64_t v94 = *((void *)&v196 + 1);
      if (*((void *)&v196 + 1))
      {
        unint64_t v95 = 0;
        do
          re::BucketArray<re::ecs2::RootPhysicsSimulationData,32ul>::operator[]((uint64_t)&v194, v95++);
        while (v94 != v95);
      }
      while (*((void *)&v194 + 1))
        re::BucketArray<re::CollisionCastHit,10ul>::freeElementBucket((uint64_t *)&v194);
      if ((void)v194 && (v195 & 1) == 0) {
        (*(void (**)(void))(*(void *)v194 + 40))();
      }
      re::BucketArray<re::ecs2::Entity const*,32ul>::deinit((uint64_t)v200);
      if (*(void *)v200 && (v200[16] & 1) == 0) {
        (*(void (**)(void))(**(void **)v200 + 40))();
      }
      re::StackScratchAllocator::~StackScratchAllocator((re::StackScratchAllocator *)v198);
      unsigned int v12 = *(_DWORD *)(a3 + 32);
      uint64_t v11 = *(void *)(a3 + 16);
      LODWORD(v6) = v180;
LABEL_123:
      if (v12 <= (int)v7 + 1) {
        unsigned int v96 = v7 + 1;
      }
      else {
        unsigned int v96 = v12;
      }
      while (1)
      {
        uint64_t v10 = (v7 + 1);
        if (v96 - 1 == v7) {
          break;
        }
        LODWORD(v7) = v7 + 1;
        unsigned int v97 = v10;
        if ((*(_DWORD *)(v11 + 24 * v10 + 8) & 0x80000000) != 0) {
          goto LABEL_130;
        }
      }
      unsigned int v97 = v96;
LABEL_130:
      LODWORD(v7) = v97;
      if (v6 == v97) {
        goto LABEL_131;
      }
    }
LABEL_25:
    unint64_t v25 = v13;
    do
    {
      unint64_t v26 = v25;
      unint64_t v25 = *(void *)(v25 + 24);
    }
    while (v25);
    if (*(void *)(a1 + 464))
    {
      unint64_t v27 = *(void *)(v26 + 16);
      unint64_t v28 = 0x94D049BB133111EBLL
          * ((0xBF58476D1CE4E5B9 * (v27 ^ (v27 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (v27 ^ (v27 >> 30))) >> 27));
      unint64_t v29 = (v28 ^ (v28 >> 31)) % *(unsigned int *)(a1 + 488);
      uint64_t v30 = *(void *)(a1 + 480);
      uint64_t v31 = *(unsigned int *)(*(void *)(a1 + 472) + 4 * v29);
      if (v31 != 0x7FFFFFFF)
      {
        while (*(void *)(v30 + 32 * v31 + 16) != v27)
        {
          uint64_t v31 = *(_DWORD *)(v30 + 32 * v31 + 8) & 0x7FFFFFFF;
          if (v31 == 0x7FFFFFFF) {
            goto LABEL_33;
          }
        }
        goto LABEL_34;
      }
    }
    else
    {
      uint64_t v30 = *(void *)(a1 + 480);
    }
LABEL_33:
    uint64_t v31 = 0x7FFFFFFFLL;
LABEL_34:
    v24 = (uint64_t *)(v30 + 32 * v31 + 24);
    long long v187 = 0u;
    unint64_t v23 = 1;
    goto LABEL_35;
  }
LABEL_131:
  if (a2)
  {
    re::StackScratchAllocator::StackScratchAllocator((re::StackScratchAllocator *)v198);
    LODWORD(v196) = 0;
    long long v194 = 0u;
    long long v195 = 0u;
    *(void *)((char *)&v196 + 4) = 0x7FFFFFFFLL;
    re::HashTable<re::ecs2::Scene *,re::BucketArray<RESubscriptionHandle,8ul>,re::Hash<re::ecs2::Scene *>,re::EqualTo<re::ecs2::Scene *>,true,false>::init((uint64_t)&v194, (uint64_t)v198, 3);
    uint64_t v99 = *(unsigned int *)(a1 + 496);
    if (v99)
    {
      uint64_t v100 = 0;
      v101 = (int *)(*(void *)(a1 + 480) + 8);
      while (1)
      {
        int v102 = *v101;
        v101 += 8;
        if (v102 < 0) {
          break;
        }
        if (v99 == ++v100)
        {
          LODWORD(v100) = *(_DWORD *)(a1 + 496);
          break;
        }
      }
    }
    else
    {
      LODWORD(v100) = 0;
    }
    if (v99 != v100)
    {
      uint64_t v103 = v100;
      unint64_t v4 = 80;
      do
      {
        uint64_t v104 = *(void *)(a1 + 480) + 32 * v103;
        long long v210 = 0uLL;
        LODWORD(v211) = 1;
        long long v212 = 0uLL;
        *((void *)&v211 + 1) = 0;
        LODWORD(v213) = 0;
        re::BucketArray<re::ecs2::Entity const*,8ul>::init((uint64_t)&v210, (uint64_t)v198, 1uLL);
        unint64_t v107 = *(void *)(v104 + 16);
        v106 = (void *)(v104 + 16);
        unint64_t v105 = v107;
        unint64_t v108 = 0x94D049BB133111EBLL
             * ((0xBF58476D1CE4E5B9 * (v107 ^ (v107 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (v107 ^ (v107 >> 30))) >> 27));
        unint64_t v109 = v108 ^ (v108 >> 31);
        if ((void)v194)
        {
          unint64_t v110 = v109 % DWORD2(v195);
          uint64_t v111 = *(unsigned int *)(*((void *)&v194 + 1) + 4 * v110);
          if (v111 != 0x7FFFFFFF)
          {
            while (*(void *)(v195 + 80 * v111 + 16) != v105)
            {
              LODWORD(v111) = *(_DWORD *)(v195 + 80 * v111 + 8) & 0x7FFFFFFF;
              if (v111 == 0x7FFFFFFF) {
                goto LABEL_146;
              }
            }
            goto LABEL_147;
          }
        }
        else
        {
          LODWORD(v110) = 0;
        }
LABEL_146:
        re::HashTable<re::ecs2::Scene const*,re::BucketArray<re::ecs2::Entity const*,8ul>,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,true,false>::addAsMove((uint64_t)&v194, v110, v109, v106, (uint64_t)&v210);
        ++DWORD2(v196);
LABEL_147:
        re::BucketArray<re::ecs2::Entity const*,8ul>::deinit((uint64_t)&v210);
        if ((void)v210 && (v211 & 1) == 0) {
          (*(void (**)(void))(*(void *)v210 + 40))();
        }
        if (*(_DWORD *)(a1 + 496) <= (v100 + 1)) {
          int v112 = v100 + 1;
        }
        else {
          int v112 = *(_DWORD *)(a1 + 496);
        }
        while (1)
        {
          uint64_t v103 = (v100 + 1);
          if (v112 - 1 == v100) {
            break;
          }
          LODWORD(v100) = v100 + 1;
          int v113 = v103;
          if ((*(_DWORD *)(*(void *)(a1 + 480) + 32 * v103 + 8) & 0x80000000) != 0) {
            goto LABEL_157;
          }
        }
        int v113 = v112;
LABEL_157:
        LODWORD(v100) = v113;
      }
      while (v99 != v113);
    }
    uint64_t v114 = *(unsigned int *)(a1 + 544);
    if (v114)
    {
      unint64_t v23 = 0;
      v115 = (int *)(*(void *)(a1 + 528) + 8);
      while (1)
      {
        int v116 = *v115;
        v115 += 8;
        if (v116 < 0) {
          break;
        }
        if (v114 == ++v23)
        {
          unint64_t v23 = *(unsigned int *)(a1 + 544);
          break;
        }
      }
    }
    else
    {
      unint64_t v23 = 0;
    }
    if (v114 != v23)
    {
      unint64_t v117 = v23;
      do
      {
        uint64_t v118 = *(void *)(*(void *)(a1 + 528) + 32 * v117 + 16);
        uint64_t v119 = v118;
        do
        {
          uint64_t v120 = v119;
          uint64_t v119 = *(void *)(v119 + 24);
        }
        while (v119);
        if ((void)v194)
        {
          unint64_t v121 = *(void *)(v120 + 16);
          unint64_t v122 = 0x94D049BB133111EBLL
               * ((0xBF58476D1CE4E5B9 * (v121 ^ (v121 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (v121 ^ (v121 >> 30))) >> 27));
          unint64_t v43 = v195;
          unint64_t v33 = *(unsigned int *)(*((void *)&v194 + 1) + 4 * ((v122 ^ (v122 >> 31)) % DWORD2(v195)));
          if (v33 != 0x7FFFFFFF)
          {
            while (*(void *)(v195 + 80 * v33 + 16) != v121)
            {
              unint64_t v33 = *(_DWORD *)(v195 + 80 * v33 + 8) & 0x7FFFFFFF;
              if (v33 == 0x7FFFFFFF) {
                goto LABEL_174;
              }
            }
            goto LABEL_175;
          }
        }
        else
        {
          unint64_t v43 = v195;
        }
LABEL_174:
        unint64_t v33 = 0x7FFFFFFFLL;
LABEL_175:
        unint64_t v123 = v43 + 80 * v33;
        unint64_t v125 = *(void *)(v123 + 64);
        unint64_t v3 = v123 + 64;
        unint64_t v124 = v125;
        unint64_t v13 = *(void *)(v3 - 32);
        if (v125 + 1 > 8 * v13)
        {
          uint64_t v126 = v114;
          uint64_t v127 = v118;
          re::BucketArray<re::ecs2::Entity const*,8ul>::setBucketsCapacity((uint64_t *)(v3 - 40), (v124 + 8) >> 3);
          uint64_t v118 = v127;
          uint64_t v114 = v126;
          unint64_t v13 = *(void *)(v3 - 32);
        }
        unint64_t v4 = v124 >> 3;
        if (v13 <= v124 >> 3) {
          goto LABEL_273;
        }
        if (*(unsigned char *)(v3 - 24)) {
          unint64_t v128 = v3 - 16;
        }
        else {
          unint64_t v128 = *(void *)(v3 - 8);
        }
        uint64_t v129 = *(void *)(v128 + 8 * v4);
        ++*(void *)v3;
        ++*(_DWORD *)(v43 + 80 * v33 + 72);
        *(void *)(v129 + 8 * (v124 & 7)) = v118;
        unsigned int v130 = *(_DWORD *)(a1 + 544);
        if (v130 <= (int)v23 + 1) {
          unint64_t v131 = (v23 + 1);
        }
        else {
          unint64_t v131 = v130;
        }
        while (1)
        {
          unint64_t v117 = (v23 + 1);
          if (v131 - 1 == v23) {
            break;
          }
          LODWORD(v23) = v23 + 1;
          unint64_t v132 = v117;
          if ((*(_DWORD *)(*(void *)(a1 + 528) + 32 * v117 + 8) & 0x80000000) != 0) {
            goto LABEL_188;
          }
        }
        unint64_t v132 = v131;
LABEL_188:
        unint64_t v23 = v132;
      }
      while (v114 != v132);
    }
    int v133 = v196;
    if (v196)
    {
      uint64_t v134 = 0;
      v135 = (int *)(v195 + 8);
      while (1)
      {
        int v136 = *v135;
        v135 += 20;
        if (v136 < 0) {
          break;
        }
        if (v196 == ++v134)
        {
          LODWORD(v134) = v196;
          break;
        }
      }
    }
    else
    {
      LODWORD(v134) = 0;
    }
    if (v196 == v134)
    {
LABEL_196:
      re::HashTable<re::ecs2::Scene const*,re::BucketArray<re::ecs2::Entity const*,8ul>,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,true,false>::deinit((uint64_t *)&v194);
      re::StackScratchAllocator::~StackScratchAllocator((re::StackScratchAllocator *)v198);
      return;
    }
    uint64_t v137 = v134;
    uint64_t v138 = v195;
    unsigned int v186 = v196;
    int v184 = v196;
    while (1)
    {
      uint64_t v139 = v138 + 80 * v137;
      unint64_t v140 = *(void *)(v139 + 16);
      uint64_t v189 = v138;
      if (!*(void *)(a1 + 416)) {
        break;
      }
      unint64_t v141 = 0x94D049BB133111EBLL
           * ((0xBF58476D1CE4E5B9 * (v140 ^ (v140 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (v140 ^ (v140 >> 30))) >> 27));
      unint64_t v142 = (v141 ^ (v141 >> 31)) % *(unsigned int *)(a1 + 440);
      uint64_t v143 = *(void *)(a1 + 432);
      uint64_t v144 = *(unsigned int *)(*(void *)(a1 + 424) + 4 * v142);
      if (v144 == 0x7FFFFFFF) {
        goto LABEL_205;
      }
      while (*(void *)(v143 + 88 * v144 + 16) != v140)
      {
        uint64_t v144 = *(_DWORD *)(v143 + 88 * v144 + 8) & 0x7FFFFFFF;
        if (v144 == 0x7FFFFFFF) {
          goto LABEL_205;
        }
      }
LABEL_206:
      unint64_t v13 = v143 + 88 * v144 + 24;
      v200[0] = 0;
      unint64_t v145 = *((unsigned __int16 *)re::ecs2::ComponentImpl<re::ecs2::PhysicsOriginComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
             + 8);
      if (*(void *)(v140 + 224) > v145)
      {
        uint64_t v146 = *(void *)(*(void *)(v140 + 240) + 8 * v145);
        if (v146)
        {
          uint64_t v147 = *(void *)(v146 + 24);
          if (v147)
          {
            uint64_t v148 = *(void *)(v146 + 40);
            uint64_t v149 = 8 * v147;
            while (1)
            {
              uint64_t v150 = *(void *)(*(void *)v148 + 16);
              if ((*(unsigned char *)(v150 + 288) & 1) != 0 && !*(unsigned char *)(v150 + 371)) {
                break;
              }
              v148 += 8;
              v149 -= 8;
              if (!v149) {
                goto LABEL_213;
              }
            }
            re::ecs2::TransformComponent::worldMatrix4x4F((re::ecs2::TransformComponent **)v150, (const re::ecs2::Entity *)1, &v210);
            if (!v200[0]) {
              v200[0] = 1;
            }
            *(_OWORD *)&v200[16] = v210;
            *(_OWORD *)&v200[32] = v211;
            long long v201 = v212;
            long long v202 = v213;
            re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::DataArrayIterator((uint64_t)&v210, v13, 0);
            if (v13 != (void)v210 || WORD4(v210) != 0xFFFFLL || (DWORD2(v210) & 0xFFFF0000) != 0xFFFF0000)
            {
              do
              {
                uint64_t v171 = re::DataArray<re::ecs2::PhysicsSimulationData>::DataArrayIterator<re::ecs2::PhysicsSimulationData,re::ecs2::PhysicsSimulationData&>::operator*((unsigned __int16 *)&v210);
                re::ecs2::PhysicsSimulationData::updatePhysicsOrigin(v171, (long long *)&v200[16]);
                re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::increment(&v210);
              }
              while ((void)v210 != v13 || WORD4(v210) != 0xFFFF || WORD5(v210) != 0xFFFF);
            }
            unsigned int v186 = v196;
            uint64_t v138 = v195;
            goto LABEL_247;
          }
        }
      }
LABEL_213:
      uint64_t v151 = v138 + 80 * v137;
      unint64_t v153 = *(void *)(v151 + 64);
      v152 = (unint64_t *)(v151 + 64);
      unint64_t v33 = v153;
      if (v153)
      {
        unint64_t v43 = 0;
        uint64_t v154 = v139 + 24;
        unint64_t v3 = v139 + 48;
        do
        {
          unint64_t v155 = *v152;
          if (*v152 <= v43) {
            goto LABEL_271;
          }
          unint64_t v23 = v43 >> 3;
          unint64_t v4 = *(void *)(v154 + 8);
          if (v4 <= v43 >> 3) {
            goto LABEL_272;
          }
          unint64_t v156 = v3;
          if ((*(unsigned char *)(v154 + 16) & 1) == 0) {
            unint64_t v156 = *(void *)(v154 + 32);
          }
          unint64_t v23 = *(void *)(*(void *)(v156 + 8 * v23) + 8 * (v43 & 7));
          re::ecs2::TransformComponent::worldMatrix4x4F((re::ecs2::TransformComponent **)v23, (const re::ecs2::Entity *)1, &v210);
          if (*(void *)(a1 + 512))
          {
            unint64_t v157 = 0x94D049BB133111EBLL
                 * ((0xBF58476D1CE4E5B9 * (v23 ^ (v23 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (v23 ^ (v23 >> 30))) >> 27));
            uint64_t v158 = *(unsigned int *)(*(void *)(a1 + 520) + 4 * ((v157 ^ (v157 >> 31)) % *(unsigned int *)(a1 + 536)));
            uint64_t v159 = *(void *)(a1 + 528);
            if (v158 != 0x7FFFFFFF)
            {
              while (*(void *)(v159 + 32 * v158 + 16) != v23)
              {
                uint64_t v158 = *(_DWORD *)(v159 + 32 * v158 + 8) & 0x7FFFFFFF;
                if (v158 == 0x7FFFFFFF) {
                  goto LABEL_225;
                }
              }
              goto LABEL_226;
            }
          }
          else
          {
            uint64_t v159 = *(void *)(a1 + 528);
          }
LABEL_225:
          uint64_t v158 = 0x7FFFFFFFLL;
LABEL_226:
          uint64_t v160 = re::DataArray<re::ecs2::PhysicsSimulationData>::get(v13, *(void *)(v159 + 32 * v158 + 24));
          re::ecs2::PhysicsSimulationData::updatePhysicsOrigin(v160, &v210);
          ++v43;
        }
        while (v43 != v33);
      }
      uint64_t v161 = *(unsigned int *)(a1 + 496);
      if (v161)
      {
        unint64_t v23 = 0;
        v162 = (int *)(*(void *)(a1 + 480) + 8);
        while (1)
        {
          int v163 = *v162;
          v162 += 8;
          if (v163 < 0) {
            break;
          }
          if (v161 == ++v23)
          {
            unint64_t v23 = *(unsigned int *)(a1 + 496);
            break;
          }
        }
      }
      else
      {
        unint64_t v23 = 0;
      }
      if (v161 == v23)
      {
        int v133 = v184;
      }
      else
      {
        unint64_t v164 = v23;
        do
        {
          uint64_t v165 = re::DataArray<re::ecs2::PhysicsSimulationData>::get(v13, *(void *)(*(void *)(a1 + 480) + 32 * v164 + 24));
          long long v210 = xmmword_23435FD50;
          long long v211 = xmmword_23435FD60;
          long long v212 = xmmword_23435FD80;
          long long v213 = xmmword_23435FBB0;
          re::ecs2::PhysicsSimulationData::updatePhysicsOrigin(v165, &v210);
          unsigned int v166 = *(_DWORD *)(a1 + 496);
          if (v166 <= (int)v23 + 1) {
            unint64_t v167 = (v23 + 1);
          }
          else {
            unint64_t v167 = v166;
          }
          int v168 = v23;
          while (1)
          {
            unint64_t v164 = (v168 + 1);
            if (v167 - 1 == v168) {
              break;
            }
            ++v168;
            unint64_t v23 = v164;
            if ((*(_DWORD *)(*(void *)(a1 + 480) + 32 * v164 + 8) & 0x80000000) != 0) {
              goto LABEL_244;
            }
          }
          unint64_t v23 = v167;
LABEL_244:
          ;
        }
        while (v161 != v23);
        int v133 = v184;
      }
      uint64_t v138 = v189;
LABEL_247:
      if (v186 <= (int)v134 + 1) {
        unsigned int v169 = v134 + 1;
      }
      else {
        unsigned int v169 = v186;
      }
      while (1)
      {
        uint64_t v137 = (v134 + 1);
        if (v169 - 1 == v134) {
          break;
        }
        LODWORD(v134) = v134 + 1;
        unsigned int v170 = v137;
        if ((*(_DWORD *)(v138 + 80 * v137 + 8) & 0x80000000) != 0) {
          goto LABEL_254;
        }
      }
      unsigned int v170 = v169;
LABEL_254:
      LODWORD(v134) = v170;
      if (v133 == v170) {
        goto LABEL_196;
      }
    }
    uint64_t v143 = *(void *)(a1 + 432);
LABEL_205:
    LODWORD(v144) = 0x7FFFFFFF;
    goto LABEL_206;
  }
}

uint64_t re::DataArray<re::ecs2::PhysicsSimulationData>::get(uint64_t a1, int a2)
{
  if (*(void *)(a1 + 16) <= (unint64_t)HIWORD(a2))
  {
    os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
    _os_log_send_and_compose_impl();
    _os_crash_msg();
    __break(1u);
  }
  return *(void *)(*(void *)(a1 + 32) + 16 * HIWORD(a2)) + 272 * (unsigned __int16)a2;
}

void *re::ecs2::PhysicsSimulationManager::init(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(a1 + 312) = a2;
  *(unsigned char *)(a1 + 320) = a3;
  re::ecs2::PhysicsSimulationTracking::updateEnginePreferredUpdateRate((re::ecs2::PhysicsSimulationTracking *)(a1 + 16));
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)re::PhysicsFactory::m_defaultFactory
                                                                            + 32))(re::PhysicsFactory::m_defaultFactory, re::PhysicsFactory::m_defaultAllocator);
  *(void *)(a1 + 592) = v5;
  uint64_t v6 = re::ServiceLocator::serviceOrNull<re::JobService>(a2);
  uint64_t v8 = re::globalAllocators(v7);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v8[2] + 32))(v8[2], 48, 16);
  *(unsigned char *)(v9 + 16) = 1;
  *(void *)uint64_t v9 = &unk_26E716478;
  *(void *)(v9 + 8) = 0;
  *(_OWORD *)(v9 + 32) = xmmword_234384D90;
  *(void *)(a1 + 600) = v9;
  uint64_t v10 = *(void *)(a1 + 592);
  uint64_t v16 = (re::ForceEffect *)v9;
  re::DynamicArray<re::TransitionCondition *>::add((void *)(v10 + 256), &v16);
  uint64_t v11 = (re *)re::ForceEffect::setSimulation(v16, *(re::PhysicsSimulation **)(v10 + 248));
  unsigned int v12 = re::globalAllocators(v11);
  uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v12[2] + 32))(v12[2], 32, 8);
  *(unsigned char *)(v13 + 16) = 1;
  *(void *)uint64_t v13 = &unk_26E717240;
  *(void *)(v13 + 8) = 0;
  *(void *)(v13 + 20) = 0x3E4CCCCD3CA3D70ALL;
  *(void *)(a1 + 608) = v13;
  uint64_t v14 = *(void *)(a1 + 592);
  uint64_t v16 = (re::ForceEffect *)v13;
  re::DynamicArray<re::TransitionCondition *>::add((void *)(v14 + 256), &v16);
  return re::ForceEffect::setSimulation(v16, *(re::PhysicsSimulation **)(v14 + 248));
}

uint64_t re::ServiceLocator::serviceOrNull<re::JobService>(uint64_t a1)
{
  {
    re::introspect<re::JobService>(void)::info = re::introspect_JobService(0);
  }
  uint64_t v2 = re::introspect<re::JobService>(void)::info;
  re::StringID::invalid((re::StringID *)v5);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, unsigned char *))(*(void *)a1 + 16))(a1, v2, v5);
  re::StringID::destroyString((re::StringID *)v5);
  return v3;
}

re *re::ecs2::PhysicsSimulationManager::deinit(re::ecs2::PhysicsSimulationManager *this)
{
  *((void *)this + 39) = 0;
  uint64_t result = re::internal::destroyPersistent<re::PhysicsSimulation>((re *)"deinit", 449, *((void (****)(void))this + 74));
  *((void *)this + 74) = 0;
  uint64_t v3 = *((void *)this + 75);
  if (v3)
  {
    unint64_t v4 = re::globalAllocators(result);
    uint64_t result = (re *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4[2] + 40))(v4[2], v3);
  }
  *((void *)this + 75) = 0;
  uint64_t v5 = *((void *)this + 76);
  if (v5)
  {
    uint64_t v6 = re::globalAllocators(result);
    uint64_t result = (re *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v6[2] + 40))(v6[2], v5);
  }
  *((void *)this + 76) = 0;
  return result;
}

re *re::internal::destroyPersistent<re::PhysicsSimulation>(re *result, uint64_t a2, void (***a3)(void))
{
  if (a3)
  {
    uint64_t v4 = re::globalAllocators(result)[2];
    (**a3)(a3);
    uint64_t v5 = *(uint64_t (**)(uint64_t, void (***)(void)))(*(void *)v4 + 40);
    return (re *)v5(v4, a3);
  }
  return result;
}

uint64_t re::ecs2::PhysicsSimulationTracking::trackedComponents(re::ecs2::PhysicsSimulationTracking *this)
{
  return *((void *)this + 33);
}

uint64_t re::ecs2::PhysicsSimulationTracking::trackedActivationComponents(re::ecs2::PhysicsSimulationTracking *this)
{
  return *((void *)this + 36);
}

void re::ecs2::PhysicsSimulationTracking::buildPerEntityStateForDirtyEntityHierarchies(uint64_t a1, uint64_t a2)
{
}

void re::internal::CallableMemFn<re::ecs2::PhysicsSimulationTracking,REEventHandlerResult (re::ecs2::PhysicsSimulationTracking::*)(re::ecs2::Entity *,RESceneEntityWillDeactivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,RESceneEntityWillDeactivateEvent const&)>::~CallableMemFn()
{
}

uint64_t re::internal::CallableMemFn<re::ecs2::PhysicsSimulationTracking,REEventHandlerResult (re::ecs2::PhysicsSimulationTracking::*)(re::ecs2::Entity *,RESceneEntityWillDeactivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,RESceneEntityWillDeactivateEvent const&)>::operator()(void *a1, void *a2)
{
  uint64_t v2 = (uint64_t (*)(void *, void))a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = (void *)(a1[1] + (v3 >> 1));
  if (v3) {
    uint64_t v2 = *(uint64_t (**)(void *, void))(*v4 + v2);
  }
  return v2(v4, *a2);
}

uint64_t re::internal::CallableMemFn<re::ecs2::PhysicsSimulationTracking,REEventHandlerResult (re::ecs2::PhysicsSimulationTracking::*)(re::ecs2::Entity *,RESceneEntityWillDeactivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,RESceneEntityWillDeactivateEvent const&)>::cloneInto(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26E6E4820;
  long long v2 = *(_OWORD *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(_OWORD *)(a2 + 8) = v2;
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::PhysicsSimulationTracking,REEventHandlerResult (re::ecs2::PhysicsSimulationTracking::*)(re::ecs2::Entity *,RESceneEntityWillDeactivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,RESceneEntityWillDeactivateEvent const&)>::moveInto(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)a2 = &unk_26E6E4820;
  *(void *)(a2 + 8) = v2;
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::PhysicsSimulationTracking,REEventHandlerResult (re::ecs2::PhysicsSimulationTracking::*)(re::ecs2::Entity *,RESceneEntityWillDeactivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,RESceneEntityWillDeactivateEvent const&)>::size()
{
  return 32;
}

_anonymous_namespace_ *re::DataArray<re::ecs2::PhysicsSimulationData>::allocBlock(void *a1)
{
  uint64_t v3 = 272 * *((unsigned int *)a1 + 11);
  uint64_t v4 = (*(uint64_t (**)(void, uint64_t, void))(*(void *)*a1 + 32))(*a1, v3, 0);
  if (!v4)
  {
    re::internal::assertLog((re::internal *)6, v5, "assertion failure: '%s' (%s:line %i) DataArray<T> is out of memory (tried to allocate %zu bytes from allocator '%s').", "block.elements", "allocBlock", 520, v3, *(void *)(*a1 + 8));
    _os_crash();
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v6 = v4;
  uint64_t v1 = 4 * *((unsigned int *)a1 + 11);
  uint64_t result = (_anonymous_namespace_ *)(*(uint64_t (**)(void, uint64_t, void))(*(void *)*a1 + 32))(*a1, v1, 0);
  if (!result)
  {
LABEL_16:
    re::internal::assertLog((re::internal *)6, v8, "assertion failure: '%s' (%s:line %i) DataArray<T> is out of memory (tried to allocate %zu bytes from allocator '%s').", "block.allocationCounters", "allocBlock", 528, v1, *(void *)(*a1 + 8));
    uint64_t result = (_anonymous_namespace_ *)_os_crash();
    __break(1u);
    return result;
  }
  uint64_t v9 = result;
  unint64_t v11 = a1[1];
  unint64_t v10 = a1[2];
  if (v10 >= v11)
  {
    unint64_t v12 = v10 + 1;
    if (v11 < v10 + 1)
    {
      if (*a1)
      {
        unint64_t v13 = 2 * v11;
        if (!v11) {
          unint64_t v13 = 8;
        }
        if (v13 <= v12) {
          unint64_t v14 = v12;
        }
        else {
          unint64_t v14 = v13;
        }
        uint64_t result = (_anonymous_namespace_ *)re::DynamicArray<re::RigNodeConstraint>::setCapacity(a1, v14);
      }
      else
      {
        uint64_t result = (_anonymous_namespace_ *)re::DynamicArray<re::RigNodeConstraint>::setCapacity(a1, v12);
        ++*((_DWORD *)a1 + 6);
      }
    }
    unint64_t v10 = a1[2];
  }
  uint64_t v15 = (uint64_t *)(a1[4] + 16 * v10);
  *uint64_t v15 = v6;
  v15[1] = (uint64_t)v9;
  a1[2] = v10 + 1;
  ++*((_DWORD *)a1 + 6);
  *((_DWORD *)a1 + 12) = 0;
  return result;
}

uint64_t re::HashTable<re::ecs2::Scene const*,re::DataArray<re::ecs2::PhysicsSimulationData>,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,true,false>::addAsMove(uint64_t a1, unsigned int a2, unint64_t a3, void *a4, _DWORD *a5)
{
  uint64_t v9 = *(unsigned int *)(a1 + 36);
  if (v9 == 0x7FFFFFFF)
  {
    uint64_t v9 = *(unsigned int *)(a1 + 32);
    int v10 = v9;
    if (v9 == *(_DWORD *)(a1 + 24))
    {
      int v11 = *(_DWORD *)(a1 + 28);
      signed int v12 = 2 * v11;
      uint64_t v13 = *(void *)a1;
      if (*(void *)a1)
      {
        if (v12) {
          BOOL v14 = v9 == v12;
        }
        else {
          BOOL v14 = 1;
        }
        if (!v14 && (v11 & 0x80000000) == 0)
        {
          memset(v39, 0, 36);
          *(void *)&v39[36] = 0x7FFFFFFFLL;
          re::HashTable<re::StringID,re::RigDataTypeClass,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::init((uint64_t)v39, v13, v12);
          long long v15 = *(_OWORD *)v39;
          *(_OWORD *)uint64_t v39 = *(_OWORD *)a1;
          *(_OWORD *)a1 = v15;
          uint64_t v16 = *(void *)&v39[16];
          uint64_t v17 = *(void *)(a1 + 16);
          *(void *)&v39[16] = v17;
          *(void *)(a1 + 16) = v16;
          long long v19 = *(_OWORD *)&v39[24];
          *(_OWORD *)&v39[24] = *(_OWORD *)(a1 + 24);
          unsigned int v18 = *(_DWORD *)&v39[32];
          *(_OWORD *)(a1 + 24) = v19;
          unint64_t v20 = v18;
          if (v18)
          {
            unint64_t v21 = 0;
            uint64_t v22 = v17 + 16;
            do
            {
              if ((*(_DWORD *)(v22 - 8) & 0x80000000) != 0) {
                re::HashTable<re::ecs2::Scene const*,re::DataArray<re::ecs2::PhysicsSimulationData>,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,true,false>::addAsMove(a1, *(void *)(v22 - 16) % (unint64_t)*(unsigned int *)(a1 + 24), *(void *)(v22 - 16), v22, v22 + 8);
              }
              ++v21;
              v22 += 88;
            }
            while (v21 < v20);
          }
          re::HashTable<re::ecs2::Scene const*,re::DataArray<re::ecs2::PhysicsSimulationData>,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,true,false>::deinit((uint64_t *)v39);
        }
      }
      else
      {
        if (v12) {
          signed int v25 = 2 * v11;
        }
        else {
          signed int v25 = 3;
        }
      }
      a2 = a3 % *(unsigned int *)(a1 + 24);
      int v10 = *(_DWORD *)(a1 + 32);
    }
    *(_DWORD *)(a1 + 32) = v10 + 1;
    uint64_t v23 = *(void *)(a1 + 16);
    int v24 = *(_DWORD *)(v23 + 88 * v9 + 8);
  }
  else
  {
    uint64_t v23 = *(void *)(a1 + 16);
    int v24 = *(_DWORD *)(v23 + 88 * v9 + 8);
    *(_DWORD *)(a1 + 36) = v24 & 0x7FFFFFFF;
  }
  uint64_t v26 = 88 * v9;
  *(_DWORD *)(v23 + v26 + 8) = v24 | 0x80000000;
  uint64_t v27 = a2;
  *(_DWORD *)(*(void *)(a1 + 16) + v26 + 8) = *(_DWORD *)(*(void *)(a1 + 16) + v26 + 8) & 0x80000000 | *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2);
  *(void *)(*(void *)(a1 + 16) + v26) = a3;
  *(void *)(*(void *)(a1 + 16) + v26 + 16) = *a4;
  uint64_t v28 = *(void *)(a1 + 16);
  uint64_t v29 = v28 + v26;
  *(void *)(v28 + v26 + 76) = 0x1FFFFFFFFLL;
  uint64_t v30 = (int *)(v28 + v26 + 76);
  *(_DWORD *)(v29 + 72) = 0;
  *(void *)(v29 + 64) = 0;
  *(_OWORD *)uint64_t v39 = 0u;
  *(_OWORD *)(v29 + 24) = 0u;
  uint64_t v31 = v28 + v26 + 24;
  *(void *)&v39[16] = 0;
  *(void *)(v31 + 16) = 0;
  *(void *)&v39[32] = 0;
  *(void *)(v31 + 32) = 0;
  *(_DWORD *)(v31 + 24) = 1;
  *(_DWORD *)&v39[24] = 1;
  re::DynamicArray<re::DataArray<re::RigGraphNode>::ElementBlock>::operator=(v31, (uint64_t)a5);
  re::DynamicArray<re::DataArray<re::RigGraphNode>::ElementBlock>::operator=((uint64_t)a5, (uint64_t)v39);
  if (*(void *)v39 && *(void *)&v39[32]) {
    (*(void (**)(void))(**(void **)v39 + 40))();
  }
  uint64_t v32 = (_DWORD *)(v28 + 88 * v9);
  int v33 = v32[16];
  v32[16] = a5[10];
  a5[10] = v33;
  int v34 = v32[17];
  v32[17] = a5[11];
  a5[11] = v34;
  int v35 = v32[18];
  v32[18] = a5[12];
  a5[12] = v35;
  int v36 = *v30;
  *uint64_t v30 = a5[13];
  a5[13] = v36;
  int v37 = v32[20];
  v32[20] = a5[14];
  a5[14] = v37;
  *(_DWORD *)(*(void *)(a1 + 8) + 4 * v27) = v9;
  ++*(_DWORD *)(a1 + 28);
  return v9;
}

uint64_t re::ecs2::PhysicsSimulationData::PhysicsSimulationData(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, int a5, char a6, float a7)
{
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  BOOL v14 = (id *)(a1 + 48);
  *(_OWORD *)a1 = 0u;
  objc_initWeak((id *)(a1 + 48), 0);
  *(unsigned char *)(a1 + 64) = 0;
  *(unsigned char *)(a1 + 96) = 0;
  *(_OWORD *)(a1 + 112) = xmmword_23435FD50;
  *(_OWORD *)(a1 + 128) = xmmword_23435FD60;
  *(_OWORD *)(a1 + 144) = xmmword_23435FD80;
  *(_OWORD *)(a1 + 160) = xmmword_23435FBB0;
  *(_OWORD *)(a1 + 176) = xmmword_23435FD50;
  *(_OWORD *)(a1 + 192) = xmmword_23435FD60;
  *(_OWORD *)(a1 + 208) = xmmword_23435FD80;
  *(_OWORD *)(a1 + 224) = xmmword_23435FBB0;
  *(void *)(a1 + 248) = 0;
  *(void *)(a1 + 256) = 0;
  *(void *)(a1 + 240) = 0;
  *(unsigned char *)(a1 + 264) = 0;
  if (a3) {
    long long v15 = (void *)(a3 + 8);
  }
  else {
    long long v15 = 0;
  }
  *(void *)a1 = a2;
  objc_storeWeak(v14, v15);
  *(_OWORD *)(a1 + 240) = *a4;
  *(float *)(a1 + 256) = a7;
  *(_DWORD *)(a1 + 260) = a5;
  *(unsigned char *)(a1 + 264) = a6;
  return a1;
}

void re::HashTable<re::ecs2::Scene const*,re::DataArrayHandle<re::ecs2::PhysicsSimulationData>,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,true,false>::addAsMove(uint64_t a1, unsigned int a2, unint64_t a3, void *a4, void *a5)
{
  uint64_t v9 = *(unsigned int *)(a1 + 36);
  if (v9 == 0x7FFFFFFF)
  {
    uint64_t v9 = *(unsigned int *)(a1 + 32);
    int v10 = v9;
    if (v9 == *(_DWORD *)(a1 + 24))
    {
      int v11 = *(_DWORD *)(a1 + 28);
      signed int v12 = 2 * v11;
      uint64_t v13 = *(void *)a1;
      if (*(void *)a1)
      {
        if (v12) {
          BOOL v14 = v9 == v12;
        }
        else {
          BOOL v14 = 1;
        }
        if (!v14 && (v11 & 0x80000000) == 0)
        {
          memset(v26, 0, 36);
          *(void *)&v26[36] = 0x7FFFFFFFLL;
          re::HashTable<re::StringID,unsigned int,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::init((uint64_t)v26, v13, v12);
          long long v15 = *(_OWORD *)v26;
          *(_OWORD *)uint64_t v26 = *(_OWORD *)a1;
          *(_OWORD *)a1 = v15;
          uint64_t v16 = *(void *)&v26[16];
          uint64_t v17 = *(void *)(a1 + 16);
          *(void *)&v26[16] = v17;
          *(void *)(a1 + 16) = v16;
          long long v19 = *(_OWORD *)&v26[24];
          *(_OWORD *)&v26[24] = *(_OWORD *)(a1 + 24);
          unsigned int v18 = *(_DWORD *)&v26[32];
          *(_OWORD *)(a1 + 24) = v19;
          unint64_t v20 = v18;
          if (v18)
          {
            unint64_t v21 = 0;
            uint64_t v22 = v17 + 16;
            do
            {
              if ((*(_DWORD *)(v22 - 8) & 0x80000000) != 0) {
                re::HashTable<re::ecs2::Scene const*,re::DataArrayHandle<re::ecs2::PhysicsSimulationData>,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,true,false>::addAsMove(a1, *(void *)(v22 - 16) % (unint64_t)*(unsigned int *)(a1 + 24), *(void *)(v22 - 16), v22, v22 + 8);
              }
              ++v21;
              v22 += 32;
            }
            while (v21 < v20);
          }
          re::HashTable<void *,re::internal::AnimationCompositionChainBase *,re::Hash<void *>,re::EqualTo<void *>,true,false>::deinit((uint64_t *)v26);
        }
      }
      else
      {
        if (v12) {
          signed int v25 = 2 * v11;
        }
        else {
          signed int v25 = 3;
        }
      }
      a2 = a3 % *(unsigned int *)(a1 + 24);
      int v10 = *(_DWORD *)(a1 + 32);
    }
    *(_DWORD *)(a1 + 32) = v10 + 1;
    uint64_t v23 = *(void *)(a1 + 16);
    int v24 = *(_DWORD *)(v23 + 32 * v9 + 8);
  }
  else
  {
    uint64_t v23 = *(void *)(a1 + 16);
    int v24 = *(_DWORD *)(v23 + 32 * v9 + 8);
    *(_DWORD *)(a1 + 36) = v24 & 0x7FFFFFFF;
  }
  *(_DWORD *)(v23 + 32 * v9 + 8) = v24 | 0x80000000;
  *(_DWORD *)(*(void *)(a1 + 16) + 32 * v9 + 8) = *(_DWORD *)(*(void *)(a1 + 16) + 32 * v9 + 8) & 0x80000000 | *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2);
  *(void *)(*(void *)(a1 + 16) + 32 * v9) = a3;
  *(void *)(*(void *)(a1 + 16) + 32 * v9 + 16) = *a4;
  *(void *)(*(void *)(a1 + 16) + 32 * v9 + 24) = *a5;
  *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2) = v9;
  ++*(_DWORD *)(a1 + 28);
}

uint64_t (***re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::subscribeToEventToInvalidateEntityHierarchy<REComponentDidActivateEvent>(re *a1, re::EventBus *a2, uint64_t a3, uint64_t a4))(void)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  uint64_t v15 = re::globalAllocators(a1)[2];
  uint64_t v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v15 + 32))(v15, 32, 0);
  *uint64_t v8 = &unk_26E6E48D0;
  v8[1] = a1;
  v8[2] = re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::invalidateEntityHierarchyEventHandler<REComponentDidActivateEvent>;
  v8[3] = 0;
  uint64_t v16 = v8;
  uint64_t v9 = re::EventBus::subscribe<re::ecs2::Entity,REComponentDidActivateEvent>(a2, (uint64_t)v14, a4, 0);
  uint64_t v11 = v10;
  signed int v12 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(a3);
  *signed int v12 = v9;
  v12[1] = v11;
  return re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidActivateEvent const&)>::destroyCallable((uint64_t)v14);
}

uint64_t (***re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::subscribeToEventToInvalidateEntityHierarchy<REComponentWillDeactivateEvent>(re *a1, re::EventBus *a2, uint64_t a3, uint64_t a4))(void)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  uint64_t v15 = re::globalAllocators(a1)[2];
  uint64_t v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v15 + 32))(v15, 32, 0);
  *uint64_t v8 = &unk_26E6E4928;
  v8[1] = a1;
  v8[2] = re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::invalidateEntityHierarchyEventHandler<REComponentWillDeactivateEvent>;
  v8[3] = 0;
  uint64_t v16 = v8;
  uint64_t v9 = re::EventBus::subscribe<re::ecs2::Entity,REComponentWillDeactivateEvent>(a2, (uint64_t)v14, a4, 0);
  uint64_t v11 = v10;
  signed int v12 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(a3);
  *signed int v12 = v9;
  v12[1] = v11;
  return re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentWillDeactivateEvent const&)>::destroyCallable((uint64_t)v14);
}

uint64_t re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::invalidateEntityHierarchyEventHandler<REComponentDidChangeEvent>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2;
  if (!*(unsigned char *)(a2 + 371)
    && (*(unsigned char *)(a2 + 288) & 1) != 0
    && !re::HashSetBase<re::ecs2::Entity *,re::ecs2::Entity *,re::internal::ValueAsKey<re::ecs2::Entity *>,re::Hash<re::ecs2::Entity *>,re::EqualTo<re::ecs2::Entity *>,true,false>::contains(a1 + 200, &v4))
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 40))(a1, v4);
    re::HashSetBase<re::ecs2::Entity const*,re::ecs2::Entity const*,re::internal::ValueAsKey<re::ecs2::Entity const*>,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::add(a1 + 104, &v4);
  }
  return 0;
}

void re::internal::CallableMemFn<re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>,REEventHandlerResult (re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::*)(re::ecs2::Entity *,REComponentDidChangeEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidChangeEvent const&)>::~CallableMemFn()
{
}

uint64_t re::internal::CallableMemFn<re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>,REEventHandlerResult (re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::*)(re::ecs2::Entity *,REComponentDidChangeEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidChangeEvent const&)>::operator()(void *a1, void *a2)
{
  uint64_t v2 = (uint64_t (*)(void *, void))a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = (void *)(a1[1] + (v3 >> 1));
  if (v3) {
    uint64_t v2 = *(uint64_t (**)(void *, void))(*v4 + v2);
  }
  return v2(v4, *a2);
}

uint64_t re::internal::CallableMemFn<re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>,REEventHandlerResult (re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::*)(re::ecs2::Entity *,REComponentDidChangeEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidChangeEvent const&)>::cloneInto(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26E6E4878;
  long long v2 = *(_OWORD *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(_OWORD *)(a2 + 8) = v2;
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>,REEventHandlerResult (re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::*)(re::ecs2::Entity *,REComponentDidChangeEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidChangeEvent const&)>::moveInto(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)a2 = &unk_26E6E4878;
  *(void *)(a2 + 8) = v2;
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>,REEventHandlerResult (re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::*)(re::ecs2::Entity *,REComponentDidChangeEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidChangeEvent const&)>::size()
{
  return 32;
}

uint64_t re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::invalidateEntityHierarchyEventHandler<REComponentDidActivateEvent>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2;
  if (!*(unsigned char *)(a2 + 371)
    && (*(unsigned char *)(a2 + 288) & 1) != 0
    && !re::HashSetBase<re::ecs2::Entity *,re::ecs2::Entity *,re::internal::ValueAsKey<re::ecs2::Entity *>,re::Hash<re::ecs2::Entity *>,re::EqualTo<re::ecs2::Entity *>,true,false>::contains(a1 + 200, &v4))
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 40))(a1, v4);
    re::HashSetBase<re::ecs2::Entity const*,re::ecs2::Entity const*,re::internal::ValueAsKey<re::ecs2::Entity const*>,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::add(a1 + 104, &v4);
  }
  return 0;
}

void re::internal::CallableMemFn<re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>,REEventHandlerResult (re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::*)(re::ecs2::Entity *,REComponentDidActivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidActivateEvent const&)>::~CallableMemFn()
{
}

uint64_t re::internal::CallableMemFn<re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>,REEventHandlerResult (re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::*)(re::ecs2::Entity *,REComponentDidActivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidActivateEvent const&)>::operator()(void *a1, void *a2)
{
  uint64_t v2 = (uint64_t (*)(void *, void))a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = (void *)(a1[1] + (v3 >> 1));
  if (v3) {
    uint64_t v2 = *(uint64_t (**)(void *, void))(*v4 + v2);
  }
  return v2(v4, *a2);
}

uint64_t re::internal::CallableMemFn<re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>,REEventHandlerResult (re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::*)(re::ecs2::Entity *,REComponentDidActivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidActivateEvent const&)>::cloneInto(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26E6E48D0;
  long long v2 = *(_OWORD *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(_OWORD *)(a2 + 8) = v2;
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>,REEventHandlerResult (re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::*)(re::ecs2::Entity *,REComponentDidActivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidActivateEvent const&)>::moveInto(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)a2 = &unk_26E6E48D0;
  *(void *)(a2 + 8) = v2;
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>,REEventHandlerResult (re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::*)(re::ecs2::Entity *,REComponentDidActivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidActivateEvent const&)>::size()
{
  return 32;
}

uint64_t re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::invalidateEntityHierarchyEventHandler<REComponentWillDeactivateEvent>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2;
  if (!*(unsigned char *)(a2 + 371)
    && (*(unsigned char *)(a2 + 288) & 1) != 0
    && !re::HashSetBase<re::ecs2::Entity *,re::ecs2::Entity *,re::internal::ValueAsKey<re::ecs2::Entity *>,re::Hash<re::ecs2::Entity *>,re::EqualTo<re::ecs2::Entity *>,true,false>::contains(a1 + 200, &v4))
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 40))(a1, v4);
    re::HashSetBase<re::ecs2::Entity const*,re::ecs2::Entity const*,re::internal::ValueAsKey<re::ecs2::Entity const*>,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::add(a1 + 104, &v4);
  }
  return 0;
}

void re::internal::CallableMemFn<re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>,REEventHandlerResult (re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::*)(re::ecs2::Entity *,REComponentWillDeactivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentWillDeactivateEvent const&)>::~CallableMemFn()
{
}

uint64_t re::internal::CallableMemFn<re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>,REEventHandlerResult (re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::*)(re::ecs2::Entity *,REComponentWillDeactivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentWillDeactivateEvent const&)>::operator()(void *a1, void *a2)
{
  uint64_t v2 = (uint64_t (*)(void *, void))a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = (void *)(a1[1] + (v3 >> 1));
  if (v3) {
    uint64_t v2 = *(uint64_t (**)(void *, void))(*v4 + v2);
  }
  return v2(v4, *a2);
}

uint64_t re::internal::CallableMemFn<re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>,REEventHandlerResult (re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::*)(re::ecs2::Entity *,REComponentWillDeactivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentWillDeactivateEvent const&)>::cloneInto(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26E6E4928;
  long long v2 = *(_OWORD *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(_OWORD *)(a2 + 8) = v2;
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>,REEventHandlerResult (re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::*)(re::ecs2::Entity *,REComponentWillDeactivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentWillDeactivateEvent const&)>::moveInto(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)a2 = &unk_26E6E4928;
  *(void *)(a2 + 8) = v2;
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>,REEventHandlerResult (re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::*)(re::ecs2::Entity *,REComponentWillDeactivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentWillDeactivateEvent const&)>::size()
{
  return 32;
}

uint64_t re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::invalidateEntityHierarchyEventHandler<RESceneEntityDidReparentEvent>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2;
  if (!*(unsigned char *)(a2 + 371)
    && (*(unsigned char *)(a2 + 288) & 1) != 0
    && !re::HashSetBase<re::ecs2::Entity *,re::ecs2::Entity *,re::internal::ValueAsKey<re::ecs2::Entity *>,re::Hash<re::ecs2::Entity *>,re::EqualTo<re::ecs2::Entity *>,true,false>::contains(a1 + 200, &v4))
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 40))(a1, v4);
    re::HashSetBase<re::ecs2::Entity const*,re::ecs2::Entity const*,re::internal::ValueAsKey<re::ecs2::Entity const*>,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::add(a1 + 104, &v4);
  }
  return 0;
}

void re::internal::CallableMemFn<re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>,REEventHandlerResult (re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::*)(re::ecs2::Entity *,RESceneEntityDidReparentEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,RESceneEntityDidReparentEvent const&)>::~CallableMemFn()
{
}

uint64_t re::internal::CallableMemFn<re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>,REEventHandlerResult (re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::*)(re::ecs2::Entity *,RESceneEntityDidReparentEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,RESceneEntityDidReparentEvent const&)>::operator()(void *a1, void *a2)
{
  uint64_t v2 = (uint64_t (*)(void *, void))a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = (void *)(a1[1] + (v3 >> 1));
  if (v3) {
    uint64_t v2 = *(uint64_t (**)(void *, void))(*v4 + v2);
  }
  return v2(v4, *a2);
}

uint64_t re::internal::CallableMemFn<re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>,REEventHandlerResult (re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::*)(re::ecs2::Entity *,RESceneEntityDidReparentEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,RESceneEntityDidReparentEvent const&)>::cloneInto(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26E6E4980;
  long long v2 = *(_OWORD *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(_OWORD *)(a2 + 8) = v2;
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>,REEventHandlerResult (re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::*)(re::ecs2::Entity *,RESceneEntityDidReparentEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,RESceneEntityDidReparentEvent const&)>::moveInto(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)a2 = &unk_26E6E4980;
  *(void *)(a2 + 8) = v2;
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>,REEventHandlerResult (re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::*)(re::ecs2::Entity *,RESceneEntityDidReparentEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,RESceneEntityDidReparentEvent const&)>::size()
{
  return 32;
}

uint64_t re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::invalidateEntityHierarchyEventHandler<RESceneEntityDidActivateEvent>(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a2;
  if (!*(unsigned char *)(a2 + 371))
  {
    uint64_t v3 = a1 + 200;
    (*(void (**)(uint64_t))(*(void *)a1 + 40))(a1);
    re::HashSetBase<re::ecs2::Entity const*,re::ecs2::Entity const*,re::internal::ValueAsKey<re::ecs2::Entity const*>,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::add(a1 + 104, &v5);
    re::HashSetBase<re::ecs2::Entity *,re::ecs2::Entity *,re::internal::ValueAsKey<re::ecs2::Entity *>,re::Hash<re::ecs2::Entity *>,re::EqualTo<re::ecs2::Entity *>,true,false>::remove(v3, &v5);
  }
  return 0;
}

void re::internal::CallableMemFn<re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>,REEventHandlerResult (re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::*)(re::ecs2::Entity *,RESceneEntityDidActivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,RESceneEntityDidActivateEvent const&)>::~CallableMemFn()
{
}

uint64_t re::internal::CallableMemFn<re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>,REEventHandlerResult (re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::*)(re::ecs2::Entity *,RESceneEntityDidActivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,RESceneEntityDidActivateEvent const&)>::operator()(void *a1, void *a2)
{
  uint64_t v2 = (uint64_t (*)(void *, void))a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = (void *)(a1[1] + (v3 >> 1));
  if (v3) {
    uint64_t v2 = *(uint64_t (**)(void *, void))(*v4 + v2);
  }
  return v2(v4, *a2);
}

uint64_t re::internal::CallableMemFn<re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>,REEventHandlerResult (re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::*)(re::ecs2::Entity *,RESceneEntityDidActivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,RESceneEntityDidActivateEvent const&)>::cloneInto(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26E6E49D8;
  long long v2 = *(_OWORD *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(_OWORD *)(a2 + 8) = v2;
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>,REEventHandlerResult (re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::*)(re::ecs2::Entity *,RESceneEntityDidActivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,RESceneEntityDidActivateEvent const&)>::moveInto(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)a2 = &unk_26E6E49D8;
  *(void *)(a2 + 8) = v2;
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>,REEventHandlerResult (re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::*)(re::ecs2::Entity *,RESceneEntityDidActivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,RESceneEntityDidActivateEvent const&)>::size()
{
  return 32;
}

uint64_t re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::invalidateEntityHierarchyEventHandler<RESceneEntityWillDeactivateEvent>(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a2;
  uint64_t v3 = a1 + 200;
  (*(void (**)(uint64_t))(*(void *)a1 + 40))(a1);
  re::HashSetBase<re::ecs2::Entity *,re::ecs2::Entity *,re::internal::ValueAsKey<re::ecs2::Entity *>,re::Hash<re::ecs2::Entity *>,re::EqualTo<re::ecs2::Entity *>,true,false>::remove(a1 + 104, &v5);
  re::HashSetBase<re::ecs2::Entity const*,re::ecs2::Entity const*,re::internal::ValueAsKey<re::ecs2::Entity const*>,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::add(v3, &v5);
  return 0;
}

void re::internal::CallableMemFn<re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>,REEventHandlerResult (re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::*)(re::ecs2::Entity *,RESceneEntityWillDeactivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,RESceneEntityWillDeactivateEvent const&)>::~CallableMemFn()
{
}

uint64_t re::internal::CallableMemFn<re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>,REEventHandlerResult (re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::*)(re::ecs2::Entity *,RESceneEntityWillDeactivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,RESceneEntityWillDeactivateEvent const&)>::operator()(void *a1, void *a2)
{
  uint64_t v2 = (uint64_t (*)(void *, void))a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = (void *)(a1[1] + (v3 >> 1));
  if (v3) {
    uint64_t v2 = *(uint64_t (**)(void *, void))(*v4 + v2);
  }
  return v2(v4, *a2);
}

uint64_t re::internal::CallableMemFn<re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>,REEventHandlerResult (re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::*)(re::ecs2::Entity *,RESceneEntityWillDeactivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,RESceneEntityWillDeactivateEvent const&)>::cloneInto(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26E6E4A30;
  long long v2 = *(_OWORD *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(_OWORD *)(a2 + 8) = v2;
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>,REEventHandlerResult (re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::*)(re::ecs2::Entity *,RESceneEntityWillDeactivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,RESceneEntityWillDeactivateEvent const&)>::moveInto(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)a2 = &unk_26E6E4A30;
  *(void *)(a2 + 8) = v2;
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>,REEventHandlerResult (re::ecs2::HierarchyStateTracking<re::ecs2::RootPhysicsSimulationData>::*)(re::ecs2::Entity *,RESceneEntityWillDeactivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,RESceneEntityWillDeactivateEvent const&)>::size()
{
  return 32;
}

void *re::FixedArray<re::ecs2::ComponentTypeBase const*>::copy(void *result, const void **a2)
{
  uint64_t v2 = (const void *)result[1];
  if (v2 == a2[1])
  {
    if (v2)
    {
      uint64_t v3 = *a2;
      uint64_t v4 = (void *)result[2];
      return memmove(v4, v3, 8 * (void)v2);
    }
  }
  else
  {
    re::internal::assertLog((re::internal *)4, (uint64_t)a2, "assertion failure: '%s' (%s:line %i) Cannot copy from a Slice of a different size", "m_size == other.size()", "copy", 378);
    uint64_t result = (void *)_os_crash();
    __break(1u);
  }
  return result;
}

void *re::BucketArray<re::ecs2::RootPhysicsSimulationData,32ul>::init(uint64_t a1, uint64_t a2, unint64_t a3)
{
  *(void *)a1 = a2;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)a1, a3);
  *(_DWORD *)(a1 + 16) += 2;
  *(void *)(a1 + 40) = 0;
  uint64_t result = re::BucketArray<re::ecs2::RootPhysicsSimulationData,32ul>::setBucketsCapacity((void *)a1, a3);
  ++*(_DWORD *)(a1 + 48);
  return result;
}

void *re::BucketArray<re::ecs2::RootPhysicsSimulationData,32ul>::setBucketsCapacity(void *result, unint64_t a2)
{
  uint64_t v3 = result;
  if (*result)
  {
    if (result[5] < 32 * a2)
    {
      while (1)
      {
        unint64_t v4 = v3[1];
        if (v4 <= a2) {
          break;
        }
        uint64_t result = (void *)re::BucketArray<re::CollisionCastHit,10ul>::freeElementBucket(v3);
      }
      if (v4 < a2)
      {
        uint64_t v5 = v3 + 3;
        do
        {
          uint64_t result = (void *)(*(uint64_t (**)(void, uint64_t, void))(*(void *)*v3 + 32))(*v3, 1024, 0);
          uint64_t v6 = result;
          if (*v3)
          {
            unint64_t v7 = v3[1];
            int v8 = *((_DWORD *)v3 + 4);
            if ((v8 & 1) == 0)
            {
              unint64_t v9 = *v5;
              BOOL v11 = v7 >= *v5;
              unint64_t v10 = v7 + 1;
              BOOL v11 = !v11 || v9 >= v10;
              if (v11) {
                goto LABEL_24;
              }
              unint64_t v12 = 2 * v9;
              goto LABEL_20;
            }
            unint64_t v10 = v7 + 1;
            if (v10 >= 3)
            {
              unint64_t v12 = 4;
LABEL_20:
              if (v12 <= v10) {
                unint64_t v14 = v10;
              }
              else {
                unint64_t v14 = v12;
              }
              uint64_t result = re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity(v3, v14);
              int v8 = *((_DWORD *)v3 + 4);
            }
          }
          else
          {
            unint64_t v13 = v3[1] + 1;
            uint64_t result = re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity(v3, v13);
            int v8 = *((_DWORD *)v3 + 4) + 2;
            *((_DWORD *)v3 + 4) = v8;
          }
LABEL_24:
          uint64_t v15 = v3 + 3;
          if ((v8 & 1) == 0) {
            uint64_t v15 = (void *)v3[4];
          }
          unint64_t v16 = v3[1];
          v15[v16++] = v6;
          v3[1] = v16;
          *((_DWORD *)v3 + 4) += 2;
        }
        while (v16 < a2);
      }
    }
  }
  else
  {
  }
  return result;
}

uint64_t re::BucketArray<re::ecs2::RootPhysicsSimulationData,32ul>::operator[](uint64_t a1, unint64_t a2)
{
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 <= a2)
  {
    re::internal::assertLog((re::internal *)6, a2, "assertion failure: '%s' (%s:line %i) Index out of range. index = %zu, size = %zu", "index < m_size", "operator[]", 1011, a2, v2);
    _os_crash();
    __break(1u);
LABEL_8:
    os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
    _os_log_send_and_compose_impl();
    _os_crash_msg();
    __break(1u);
  }
  if (*(void *)(a1 + 8) <= a2 >> 5) {
    goto LABEL_8;
  }
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v3 = a1 + 24;
  }
  else {
    uint64_t v3 = *(void *)(a1 + 32);
  }
  return *(void *)(v3 + 8 * (a2 >> 5)) + 32 * (a2 & 0x1F);
}

uint64_t re::BucketArray<re::ecs2::RootPhysicsSimulationData,32ul>::addUninitialized(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 40);
  unint64_t v3 = *(void *)(a1 + 8);
  if (v2 + 1 > 32 * v3)
  {
    re::BucketArray<re::ecs2::RootPhysicsSimulationData,32ul>::setBucketsCapacity((void *)a1, (v2 + 32) >> 5);
    unint64_t v3 = *(void *)(a1 + 8);
  }
  if (v3 <= v2 >> 5)
  {
    os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
    _os_log_send_and_compose_impl();
    _os_crash_msg();
    __break(1u);
  }
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v4 = a1 + 24;
  }
  else {
    uint64_t v4 = *(void *)(a1 + 32);
  }
  uint64_t v5 = *(void *)(v4 + 8 * (v2 >> 5));
  ++*(void *)(a1 + 40);
  ++*(_DWORD *)(a1 + 48);
  return v5 + 32 * (v2 & 0x1F);
}

uint64_t re::HashTable<re::ecs2::Entity const*,re::DataArrayHandle<re::ecs2::PhysicsSimulationData>,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::addAsMove(uint64_t a1, unsigned int a2, unint64_t a3, void *a4, void *a5)
{
  uint64_t v9 = *(unsigned int *)(a1 + 36);
  if (v9 == 0x7FFFFFFF)
  {
    uint64_t v9 = *(unsigned int *)(a1 + 32);
    int v10 = v9;
    if (v9 == *(_DWORD *)(a1 + 24))
    {
      int v11 = *(_DWORD *)(a1 + 28);
      signed int v12 = 2 * v11;
      uint64_t v13 = *(void *)a1;
      if (*(void *)a1)
      {
        if (v12) {
          BOOL v14 = v9 == v12;
        }
        else {
          BOOL v14 = 1;
        }
        if (!v14 && (v11 & 0x80000000) == 0)
        {
          memset(v27, 0, 36);
          *(void *)&v27[36] = 0x7FFFFFFFLL;
          re::HashTable<re::StringID,unsigned int,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::init((uint64_t)v27, v13, v12);
          long long v15 = *(_OWORD *)v27;
          *(_OWORD *)uint64_t v27 = *(_OWORD *)a1;
          *(_OWORD *)a1 = v15;
          uint64_t v16 = *(void *)&v27[16];
          uint64_t v17 = *(void *)(a1 + 16);
          *(void *)&v27[16] = v17;
          *(void *)(a1 + 16) = v16;
          long long v19 = *(_OWORD *)&v27[24];
          *(_OWORD *)&v27[24] = *(_OWORD *)(a1 + 24);
          unsigned int v18 = *(_DWORD *)&v27[32];
          *(_OWORD *)(a1 + 24) = v19;
          unint64_t v20 = v18;
          if (v18)
          {
            unint64_t v21 = 0;
            uint64_t v22 = v17 + 16;
            do
            {
              if ((*(_DWORD *)(v22 - 8) & 0x80000000) != 0) {
                re::HashTable<re::ecs2::Entity const*,re::DataArrayHandle<re::ecs2::PhysicsSimulationData>,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::addAsMove(a1, *(void *)(v22 - 16) % (unint64_t)*(unsigned int *)(a1 + 24), *(void *)(v22 - 16), v22, v22 + 8);
              }
              ++v21;
              v22 += 32;
            }
            while (v21 < v20);
          }
          re::HashTable<void *,re::internal::AnimationCompositionChainBase *,re::Hash<void *>,re::EqualTo<void *>,true,false>::deinit((uint64_t *)v27);
        }
      }
      else
      {
        if (v12) {
          signed int v25 = 2 * v11;
        }
        else {
          signed int v25 = 3;
        }
      }
      a2 = a3 % *(unsigned int *)(a1 + 24);
      int v10 = *(_DWORD *)(a1 + 32);
    }
    *(_DWORD *)(a1 + 32) = v10 + 1;
    uint64_t v23 = *(void *)(a1 + 16);
    int v24 = *(_DWORD *)(v23 + 32 * v9 + 8);
  }
  else
  {
    uint64_t v23 = *(void *)(a1 + 16);
    int v24 = *(_DWORD *)(v23 + 32 * v9 + 8);
    *(_DWORD *)(a1 + 36) = v24 & 0x7FFFFFFF;
  }
  *(_DWORD *)(v23 + 32 * v9 + 8) = v24 | 0x80000000;
  *(_DWORD *)(*(void *)(a1 + 16) + 32 * v9 + 8) = *(_DWORD *)(*(void *)(a1 + 16) + 32 * v9 + 8) & 0x80000000 | *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2);
  *(void *)(*(void *)(a1 + 16) + 32 * v9) = a3;
  *(void *)(*(void *)(a1 + 16) + 32 * v9 + 16) = *a4;
  *(void *)(*(void *)(a1 + 16) + 32 * v9 + 24) = *a5;
  *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2) = v9;
  ++*(_DWORD *)(a1 + 28);
  return v9;
}

uint64_t re::BucketArray<re::Pair<re::ecs2::Scene const*,re::DataArrayHandle<re::ecs2::PhysicsSimulationData>,true>,8ul>::addUninitialized(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 40);
  unint64_t v3 = *(void *)(a1 + 8);
  if (v2 + 1 > 8 * v3)
  {
    re::BucketArray<re::Pair<re::ecs2::Scene const*,re::DataArrayHandle<re::ecs2::PhysicsSimulationData>,true>,8ul>::setBucketsCapacity((void *)a1, (v2 + 8) >> 3);
    unint64_t v3 = *(void *)(a1 + 8);
  }
  if (v3 <= v2 >> 3)
  {
    os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
    _os_log_send_and_compose_impl();
    _os_crash_msg();
    __break(1u);
  }
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v4 = a1 + 24;
  }
  else {
    uint64_t v4 = *(void *)(a1 + 32);
  }
  uint64_t v5 = *(void *)(v4 + 8 * (v2 >> 3));
  ++*(void *)(a1 + 40);
  ++*(_DWORD *)(a1 + 48);
  return v5 + 16 * (v2 & 7);
}

void *re::BucketArray<re::Pair<re::ecs2::Scene const*,re::DataArrayHandle<re::ecs2::PhysicsSimulationData>,true>,8ul>::setBucketsCapacity(void *result, unint64_t a2)
{
  unint64_t v3 = result;
  if (*result)
  {
    if (result[5] < 8 * a2)
    {
      while (1)
      {
        unint64_t v4 = v3[1];
        if (v4 <= a2) {
          break;
        }
        uint64_t result = (void *)re::BucketArray<re::CollisionCastHit,10ul>::freeElementBucket(v3);
      }
      if (v4 < a2)
      {
        uint64_t v5 = v3 + 3;
        do
        {
          uint64_t result = (void *)(*(uint64_t (**)(void, uint64_t, void))(*(void *)*v3 + 32))(*v3, 128, 0);
          uint64_t v6 = result;
          if (*v3)
          {
            unint64_t v7 = v3[1];
            int v8 = *((_DWORD *)v3 + 4);
            if ((v8 & 1) == 0)
            {
              unint64_t v9 = *v5;
              BOOL v11 = v7 >= *v5;
              unint64_t v10 = v7 + 1;
              BOOL v11 = !v11 || v9 >= v10;
              if (v11) {
                goto LABEL_22;
              }
              unint64_t v12 = 2 * v9;
              goto LABEL_18;
            }
            unint64_t v10 = v7 + 1;
            if (v10 >= 3)
            {
              unint64_t v12 = 4;
LABEL_18:
              if (v12 <= v10) {
                unint64_t v14 = v10;
              }
              else {
                unint64_t v14 = v12;
              }
              uint64_t result = re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity(v3, v14);
              int v8 = *((_DWORD *)v3 + 4);
            }
          }
          else
          {
            unint64_t v13 = v3[1] + 1;
            uint64_t result = re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity(v3, v13);
            int v8 = *((_DWORD *)v3 + 4) + 2;
            *((_DWORD *)v3 + 4) = v8;
          }
LABEL_22:
          long long v15 = v3 + 3;
          if ((v8 & 1) == 0) {
            long long v15 = (void *)v3[4];
          }
          unint64_t v16 = v3[1];
          v15[v16++] = v6;
          v3[1] = v16;
          *((_DWORD *)v3 + 4) += 2;
        }
        while (v16 < a2);
      }
    }
  }
  else
  {
    re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity(v3, a2);
    *((_DWORD *)v3 + 4) += 2;
    v3[5] = 0;
    uint64_t result = (void *)re::BucketArray<re::Pair<re::ecs2::Scene const*,re::DataArrayHandle<re::ecs2::PhysicsSimulationData>,true>,8ul>::setBucketsCapacity(v3, a2);
    ++*((_DWORD *)v3 + 12);
  }
  return result;
}

void re::HashTable<re::ecs2::Entity const*,re::ecs2::RootPhysicsSimulationData,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::setCapacity(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = *(void *)a1;
  if (*(void *)a1)
  {
    if (a2 && *(_DWORD *)(a1 + 24) != a2 && *(_DWORD *)(a1 + 28) <= a2)
    {
      memset(v25, 0, 36);
      *(void *)&v25[36] = 0x7FFFFFFFLL;
      re::HashTable<re::Pair<re::StringSlice,re::StringSlice,true>,unsigned long,re::Hash<re::Pair<re::StringSlice,re::StringSlice,true>>,re::EqualTo<re::Pair<re::StringSlice,re::StringSlice,true>>,true,false>::init((uint64_t)v25, v4, a2);
      long long v5 = *(_OWORD *)a1;
      *(void *)a1 = *(void *)v25;
      uint64_t v6 = *(void *)(a1 + 16);
      long long v7 = *(_OWORD *)&v25[8];
      *(_OWORD *)signed int v25 = v5;
      *(void *)&v25[16] = v6;
      *(_OWORD *)(a1 + 8) = v7;
      long long v9 = *(_OWORD *)&v25[24];
      *(_OWORD *)&v25[24] = *(_OWORD *)(a1 + 24);
      unsigned int v8 = *(_DWORD *)&v25[32];
      *(_OWORD *)(a1 + 24) = v9;
      unint64_t v10 = v8;
      if (v8)
      {
        unint64_t v11 = 0;
        int v12 = DWORD1(v9);
        uint64_t v13 = v7;
        uint64_t v14 = v6 + 16;
        do
        {
          if ((*(_DWORD *)(v14 - 8) & 0x80000000) != 0)
          {
            unint64_t v15 = *(void *)(v14 - 16);
            unint64_t v16 = *(unsigned int *)(a1 + 24);
            unint64_t v17 = v15 % v16;
            uint64_t v18 = *(unsigned int *)(a1 + 36);
            if (v18 == 0x7FFFFFFF)
            {
              uint64_t v18 = *(unsigned int *)(a1 + 32);
              int v19 = v18;
              if (v18 == v16)
              {
                re::HashTable<re::ecs2::Entity const*,re::ecs2::RootPhysicsSimulationData,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::setCapacity(a1, (2 * v12));
                unint64_t v17 = v15 % *(unsigned int *)(a1 + 24);
                int v19 = *(_DWORD *)(a1 + 32);
                uint64_t v13 = *(void *)(a1 + 8);
              }
              *(_DWORD *)(a1 + 32) = v19 + 1;
              uint64_t v20 = *(void *)(a1 + 16);
              int v21 = *(_DWORD *)(v20 + 56 * v18 + 8);
            }
            else
            {
              uint64_t v20 = *(void *)(a1 + 16);
              int v21 = *(_DWORD *)(v20 + 56 * v18 + 8);
              *(_DWORD *)(a1 + 36) = v21 & 0x7FFFFFFF;
            }
            *(_DWORD *)(v20 + 56 * v18 + 8) = v21 | 0x80000000;
            *(_DWORD *)(*(void *)(a1 + 16) + 56 * v18 + 8) = *(_DWORD *)(*(void *)(a1 + 16) + 56 * v18 + 8) & 0x80000000 | *(_DWORD *)(v13 + 4 * v17);
            *(void *)(*(void *)(a1 + 16) + 56 * v18) = v15;
            *(void *)(*(void *)(a1 + 16) + 56 * v18 + 16) = *(void *)v14;
            uint64_t v22 = *(void *)(a1 + 16) + 56 * v18;
            long long v23 = *(_OWORD *)(v14 + 8);
            *(_OWORD *)(v22 + 40) = *(_OWORD *)(v14 + 24);
            *(_OWORD *)(v22 + 24) = v23;
            uint64_t v13 = *(void *)(a1 + 8);
            *(_DWORD *)(v13 + 4 * v17) = v18;
            int v12 = *(_DWORD *)(a1 + 28) + 1;
            *(_DWORD *)(a1 + 28) = v12;
          }
          ++v11;
          v14 += 56;
        }
        while (v11 < v10);
      }
      re::HashTable<re::Pair<re::StringSlice,re::StringSlice,true>,unsigned long,re::Hash<re::Pair<re::StringSlice,re::StringSlice,true>>,re::EqualTo<re::Pair<re::StringSlice,re::StringSlice,true>>,true,false>::deinit((uint64_t *)v25);
    }
  }
  else
  {
    if (a2) {
      signed int v24 = a2;
    }
    else {
      signed int v24 = 3;
    }
  }
}

double re::HashTable<re::ecs2::Scene const*,re::BucketArray<re::ecs2::Entity const*,8ul>,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,true,false>::deinit(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2)
  {
    unint64_t v3 = *((unsigned int *)a1 + 8);
    if (v3)
    {
      uint64_t v4 = 0;
      for (unint64_t i = 0; i < v3; ++i)
      {
        uint64_t v6 = a1[2] + v4;
        int v7 = *(_DWORD *)(v6 + 8);
        if (v7 < 0)
        {
          *(_DWORD *)(v6 + 8) = v7 & 0x7FFFFFFF;
          uint64_t v8 = v6 + 24;
          re::BucketArray<re::ecs2::Entity const*,8ul>::deinit(v6 + 24);
          re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(v8);
          unint64_t v3 = *((unsigned int *)a1 + 8);
        }
        v4 += 80;
      }
      uint64_t v2 = *a1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)v2 + 40))(v2, a1[1]);
    *((_DWORD *)a1 + 8) = 0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
    *(void *)&double result = 0x7FFFFFFFLL;
    *(uint64_t *)((char *)a1 + 36) = 0x7FFFFFFFLL;
  }
  return result;
}

uint64_t *re::BucketArray<re::ecs2::Entity const*,8ul>::init(uint64_t a1, uint64_t a2, unint64_t a3)
{
  *(void *)a1 = a2;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)a1, a3);
  *(_DWORD *)(a1 + 16) += 2;
  *(void *)(a1 + 40) = 0;
  double result = re::BucketArray<re::ecs2::Entity const*,8ul>::setBucketsCapacity((uint64_t *)a1, a3);
  ++*(_DWORD *)(a1 + 48);
  return result;
}

uint64_t *re::BucketArray<re::ecs2::Entity const*,8ul>::setBucketsCapacity(uint64_t *result, unint64_t a2)
{
  unint64_t v3 = result;
  if (*result)
  {
    if (result[5] < 8 * a2)
    {
      while (1)
      {
        unint64_t v4 = v3[1];
        if (v4 <= a2) {
          break;
        }
        double result = (uint64_t *)re::BucketArray<re::CollisionCastHit,10ul>::freeElementBucket(v3);
      }
      while (v4 < a2)
      {
        uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)*v3 + 32))(*v3, 64, 0);
        double result = (uint64_t *)re::DynamicOverflowArray<RESubscriptionHandle *,2ul>::add((uint64_t)v3, &v5);
        unint64_t v4 = v3[1];
      }
    }
  }
  else
  {
  }
  return result;
}

uint64_t re::BucketArray<re::ecs2::Entity const*,8ul>::deinit(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  unint64_t v3 = *(void *)(a1 + 8);
  if (v2)
  {
    for (unint64_t i = 0; i != v2; ++i)
    {
      if (v3 <= i >> 3)
      {
        os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
        _os_log_send_and_compose_impl();
        _os_crash_msg();
        __break(1u);
      }
    }
  }
  else if (!v3)
  {
    goto LABEL_8;
  }
  do
    re::BucketArray<re::CollisionCastHit,10ul>::freeElementBucket((uint64_t *)a1);
  while (*(void *)(a1 + 8));
LABEL_8:
  uint64_t result = re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1);
  *(void *)(a1 + 40) = 0;
  ++*(_DWORD *)(a1 + 48);
  return result;
}

uint64_t re::HashTable<re::ecs2::Scene const*,re::BucketArray<re::ecs2::Entity const*,8ul>,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,true,false>::addAsMove(uint64_t a1, unsigned int a2, unint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v9 = *(unsigned int *)(a1 + 36);
  if (v9 == 0x7FFFFFFF)
  {
    uint64_t v9 = *(unsigned int *)(a1 + 32);
    int v10 = v9;
    if (v9 == *(_DWORD *)(a1 + 24))
    {
      int v11 = *(_DWORD *)(a1 + 28);
      signed int v12 = 2 * v11;
      uint64_t v13 = *(void *)a1;
      if (*(void *)a1)
      {
        if (v12) {
          BOOL v14 = v9 == v12;
        }
        else {
          BOOL v14 = 1;
        }
        if (!v14 && (v11 & 0x80000000) == 0)
        {
          memset(v31, 0, 36);
          *(void *)&v31[36] = 0x7FFFFFFFLL;
          re::HashTable<re::ecs2::Scene *,re::BucketArray<RESubscriptionHandle,8ul>,re::Hash<re::ecs2::Scene *>,re::EqualTo<re::ecs2::Scene *>,true,false>::init((uint64_t)v31, v13, v12);
          long long v15 = *(_OWORD *)v31;
          *(_OWORD *)uint64_t v31 = *(_OWORD *)a1;
          *(_OWORD *)a1 = v15;
          uint64_t v16 = *(void *)&v31[16];
          uint64_t v17 = *(void *)(a1 + 16);
          *(void *)&v31[16] = v17;
          *(void *)(a1 + 16) = v16;
          long long v19 = *(_OWORD *)&v31[24];
          *(_OWORD *)&v31[24] = *(_OWORD *)(a1 + 24);
          unsigned int v18 = *(_DWORD *)&v31[32];
          *(_OWORD *)(a1 + 24) = v19;
          uint64_t v20 = v18;
          if (v18)
          {
            uint64_t v21 = v17 + 16;
            do
            {
              if ((*(_DWORD *)(v21 - 8) & 0x80000000) != 0) {
                re::HashTable<re::ecs2::Scene const*,re::BucketArray<re::ecs2::Entity const*,8ul>,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,true,false>::addAsMove(a1, *(void *)(v21 - 16) % (unint64_t)*(unsigned int *)(a1 + 24), *(void *)(v21 - 16), v21, v21 + 8);
              }
              v21 += 80;
              --v20;
            }
            while (v20);
          }
          re::HashTable<re::ecs2::Scene const*,re::BucketArray<re::ecs2::Entity const*,8ul>,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,true,false>::deinit((uint64_t *)v31);
        }
      }
      else
      {
        if (v12) {
          signed int v24 = 2 * v11;
        }
        else {
          signed int v24 = 3;
        }
      }
      a2 = a3 % *(unsigned int *)(a1 + 24);
      int v10 = *(_DWORD *)(a1 + 32);
    }
    *(_DWORD *)(a1 + 32) = v10 + 1;
    uint64_t v22 = *(void *)(a1 + 16);
    int v23 = *(_DWORD *)(v22 + 80 * v9 + 8);
  }
  else
  {
    uint64_t v22 = *(void *)(a1 + 16);
    int v23 = *(_DWORD *)(v22 + 80 * v9 + 8);
    *(_DWORD *)(a1 + 36) = v23 & 0x7FFFFFFF;
  }
  *(_DWORD *)(v22 + 80 * v9 + 8) = v23 | 0x80000000;
  *(_DWORD *)(*(void *)(a1 + 16) + 80 * v9 + 8) = *(_DWORD *)(*(void *)(a1 + 16) + 80 * v9 + 8) & 0x80000000 | *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2);
  *(void *)(*(void *)(a1 + 16) + 80 * v9) = a3;
  *(void *)(*(void *)(a1 + 16) + 80 * v9 + 16) = *a4;
  uint64_t v25 = *(void *)(a1 + 16);
  uint64_t v26 = v25 + 80 * v9;
  *(void *)(v26 + 24) = 0;
  *(void *)(v26 + 32) = 0;
  v26 += 24;
  *(void *)(v26 + 32) = 0;
  *(void *)(v26 + 40) = 0;
  uint64_t v27 = a2;
  *(void *)(v26 + 24) = 0;
  *(_DWORD *)(v26 + 48) = 0;
  *(void *)&v31[24] = 0;
  *(void *)&v31[32] = 0;
  *(_OWORD *)uint64_t v31 = 0uLL;
  *(_DWORD *)(v26 + 16) = 3;
  *(_DWORD *)&v31[16] = 3;
  re::DynamicOverflowArray<RESubscriptionHandle *,2ul>::operator=(v26, a5);
  re::DynamicOverflowArray<RESubscriptionHandle *,2ul>::operator=(a5, (uint64_t)v31);
  uint64_t result = *(void *)v31;
  if (*(void *)v31 && (v31[16] & 1) == 0) {
    uint64_t result = (*(uint64_t (**)(void))(**(void **)v31 + 40))();
  }
  uint64_t v29 = v25 + 80 * v9;
  uint64_t v30 = *(void *)(v29 + 64);
  *(void *)(v29 + 64) = *(void *)(a5 + 40);
  *(void *)(a5 + 40) = v30;
  ++*(_DWORD *)(v29 + 72);
  ++*(_DWORD *)(a5 + 48);
  *(_DWORD *)(*(void *)(a1 + 8) + 4 * v27) = v9;
  ++*(_DWORD *)(a1 + 28);
  return result;
}

void *re::ecs2::allocInfo_GroundPlaneSystem(re::ecs2 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&_MergedGlobals_152, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&_MergedGlobals_152))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF80F98, "GroundPlaneSystem");
    __cxa_guard_release(&_MergedGlobals_152);
  }
  return &unk_26AF80F98;
}

void re::ecs2::initInfo_GroundPlaneSystem(re::ecs2 *this, re::IntrospectionBase *a2)
{
  v5[0] = 0xD8D974E6B5794F08;
  v5[1] = "GroundPlaneSystem";
  re::StringID::destroyString((re::StringID *)v5);
  *((_OWORD *)this + 2) = v6;
  *((void *)this + 2) = 0x6800000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 0;
  *((void *)this + 8) = &re::ecs2::initInfo_GroundPlaneSystem(re::IntrospectionBase *)::structureAttributes;
  *((void *)this + 9) = re::internal::defaultConstruct<re::ecs2::GroundPlaneSystem>;
  *((void *)this + 10) = re::internal::defaultDestruct<re::ecs2::GroundPlaneSystem>;
  *((void *)this + 11) = re::internal::defaultRetain<re::ecs2::GroundPlaneSystem>(void)::{lambda(void *)#1}::__invoke;
  *((void *)this + 12) = re::internal::defaultRelease<re::ecs2::GroundPlaneSystem>(void)::{lambda(void *)#1}::__invoke;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::ecs2::GroundPlaneSystem>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::ecs2::GroundPlaneSystem>;
  re::IntrospectionRegistry::add(this, v3);
  long long v4 = v6;
}

void re::internal::defaultConstruct<re::ecs2::GroundPlaneSystem>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a3 + 96) = 0;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 80) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  re::ecs2::System::System(a3, 1);
  *unint64_t v3 = &unk_26E6E4A88;
}

void *re::internal::defaultDestruct<re::ecs2::GroundPlaneSystem>(uint64_t a1, uint64_t a2, void *a3)
{
  *a3 = &unk_26E6DECE0;
  return objc_destructInstance(a3 + 1);
}

void re::internal::defaultConstructV2<re::ecs2::GroundPlaneSystem>(uint64_t a1)
{
  *(void *)(a1 + 96) = 0;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  re::ecs2::System::System(a1, 1);
  *uint64_t v1 = &unk_26E6E4A88;
}

void *re::internal::defaultDestructV2<re::ecs2::GroundPlaneSystem>(void *a1)
{
  *a1 = &unk_26E6DECE0;
  return objc_destructInstance(a1 + 1);
}

uint64_t re::ecs2::introspect_GroundPlaneSystem(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"GroundPlaneSystem", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_GroundPlaneSystem, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_GroundPlaneSystem, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::GroundPlaneSystem>, this);
}

void re::ecs2::GroundPlaneSystem::update(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (re::ecs2::SceneComponentTable *)(a2 + 200);
  uint64_t v3 = re::ecs2::SceneComponentTable::get((re::ecs2::SceneComponentTable *)(a2 + 200), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingRenderOptionsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
  BOOL v4 = !v3 || !*(void *)(v3 + 24) || *(unsigned char *)(**(void **)(v3 + 40) + 31) == 0;
  uint64_t v5 = re::ecs2::SceneComponentTable::get(v2, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::GroundPlaneComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
  if (v5)
  {
    uint64_t v6 = *(void *)(v5 + 24);
    if (v6)
    {
      int v7 = *(uint64_t **)(v5 + 40);
      uint64_t v8 = 8 * v6;
      do
      {
        uint64_t v9 = *v7++;
        int v10 = *(re::ecs2::Entity **)(v9 + 16);
        if (*(unsigned char *)(v9 + 25)) {
          int v11 = v4;
        }
        else {
          int v11 = 1;
        }
        re::ecs2::Entity::setSelfEnabled(v10, v11);
        v8 -= 8;
      }
      while (v8);
    }
  }
}

void re::ecs2::GroundPlaneSystem::~GroundPlaneSystem(re::ecs2::GroundPlaneSystem *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::GroundPlaneSystem::typeInfo(re::ecs2::GroundPlaneSystem *this)
{
  return re::internal::getOrCreateInfo((re::internal *)"GroundPlaneSystem", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_GroundPlaneSystem, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_GroundPlaneSystem, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::GroundPlaneSystem>, 0);
}

id re::internal::defaultRetain<re::ecs2::GroundPlaneSystem>(void)::{lambda(void *)#1}::__invoke(uint64_t a1)
{
  return (id)(a1 + 8);
}

void re::internal::defaultRelease<re::ecs2::GroundPlaneSystem>(void)::{lambda(void *)#1}::__invoke(uint64_t a1)
{
}

void re::StateMachineBlackboardBinding::collectAllGraphParameters(uint64_t a1, uint64_t a2)
{
  re::HashSetBase<re::StringID,re::StringID,re::internal::ValueAsKey<re::StringID>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::clear(a2);
  re::HashSetBase<re::StringID,re::StringID,re::internal::ValueAsKey<re::StringID>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::clear(a2 + 48);
  re::HashSetBase<re::StringID,re::StringID,re::internal::ValueAsKey<re::StringID>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::clear(a2 + 96);
  re::HashSetBase<re::StringID,re::StringID,re::internal::ValueAsKey<re::StringID>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::clear(a2 + 144);
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v5 = *(void **)(a1 + 32);
    uint64_t v20 = &v5[v4];
    while (1)
    {
      uint64_t v21 = v5;
      uint64_t v6 = *v5;
      uint64_t v7 = *(void *)(v6 + 40);
      if (v7) {
        break;
      }
LABEL_19:
      uint64_t v5 = v21 + 1;
      if (v21 + 1 == v20) {
        return;
      }
    }
    uint64_t v8 = *(void **)(v6 + 56);
    uint64_t v22 = &v8[v7];
    while (1)
    {
      int v23 = v8;
      uint64_t v9 = *v8;
      uint64_t v10 = *(void *)(v9 + 24);
      if (v10) {
        break;
      }
LABEL_18:
      uint64_t v8 = v23 + 1;
      if (v23 + 1 == v22) {
        goto LABEL_19;
      }
    }
    uint64_t v11 = *(void *)(v9 + 40);
    uint64_t v24 = v11 + 8 * v10;
    while (1)
    {
      uint64_t v12 = *(void *)(*(void *)v11 + 16);
      if (v12) {
        break;
      }
LABEL_17:
      v11 += 8;
      if (v11 == v24) {
        goto LABEL_18;
      }
    }
    uint64_t v13 = *(uint64_t **)(*(void *)v11 + 32);
    uint64_t v14 = 8 * v12;
    while (1)
    {
      uint64_t v15 = *v13;
      if (*v13)
      {
        uint64_t v17 = a2;
        if (v16) {
          goto LABEL_15;
        }
        uint64_t v17 = a2 + 48;
        if (v18) {
          goto LABEL_15;
        }
        {
          re::HashSetBase<re::StringID,re::StringID,re::internal::ValueAsKey<re::StringID>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::add(a2 + 144, (StringID *)(v15 + 8));
          uint64_t v17 = a2 + 96;
LABEL_15:
          re::HashSetBase<re::StringID,re::StringID,re::internal::ValueAsKey<re::StringID>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::add(v17, (StringID *)(v15 + 8));
          goto LABEL_16;
        }
        uint64_t v17 = a2 + 96;
        if (v19) {
          goto LABEL_15;
        }
      }
LABEL_16:
      ++v13;
      v14 -= 8;
      if (!v14) {
        goto LABEL_17;
      }
    }
  }
}

void re::HashSetBase<re::StringID,re::StringID,re::internal::ValueAsKey<re::StringID>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::clear(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 28))
  {
    uint64_t v2 = *(unsigned int *)(a1 + 24);
    if (v2) {
      memset_pattern16(*(void **)(a1 + 8), &unk_2343655D0, 4 * v2);
    }
    unint64_t v3 = *(unsigned int *)(a1 + 32);
    if (v3)
    {
      uint64_t v4 = 0;
      for (unint64_t i = 0; i < v3; ++i)
      {
        uint64_t v6 = *(void *)(a1 + 16);
        int v7 = *(_DWORD *)(v6 + v4);
        if (v7 < 0)
        {
          *(_DWORD *)(v6 + v4) = v7 & 0x7FFFFFFF;
          re::StringID::destroyString((re::StringID *)(v6 + v4 + 8));
          unint64_t v3 = *(unsigned int *)(a1 + 32);
        }
        v4 += 24;
      }
    }
    *(_DWORD *)(a1 + 28) = 0;
    *(_DWORD *)(a1 + 32) = 0;
    int v8 = *(_DWORD *)(a1 + 40) + 1;
    *(_DWORD *)(a1 + 36) = 0x7FFFFFFF;
    *(_DWORD *)(a1 + 40) = v8;
  }
}

uint64_t re::HashSetBase<re::StringID,re::StringID,re::internal::ValueAsKey<re::StringID>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::add(uint64_t a1, StringID *a2)
{
  unint64_t v4 = 0xBF58476D1CE4E5B9 * ((*(void *)&a2->var0 >> 31) ^ (*(void *)&a2->var0 >> 1));
  unint64_t v5 = (0x94D049BB133111EBLL * (v4 ^ (v4 >> 27))) ^ ((0x94D049BB133111EBLL * (v4 ^ (v4 >> 27))) >> 31);
  unint64_t v6 = *(unsigned int *)(a1 + 24);
  if (!v6)
  {
    LODWORD(v7) = 0;
    goto LABEL_8;
  }
  unint64_t v7 = v5 % v6;
  uint64_t v8 = *(unsigned int *)(*(void *)(a1 + 8) + 4 * (v5 % v6));
  if (v8 == 0x7FFFFFFF)
  {
LABEL_8:
    unsigned int v11 = re::HashSetBase<re::StringID,re::StringID,re::internal::ValueAsKey<re::StringID>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::addAsCopy(a1, v7, v5, (int)a2, a2);
    ++*(_DWORD *)(a1 + 40);
    return *(void *)(a1 + 16) + 24 * v11 + 8;
  }
  uint64_t v9 = *(void *)(a1 + 16);
  while (1)
  {
    uint64_t v10 = (void *)(v9 + 24 * v8 + 8);
    if (re::StringID::operator==(v10, a2)) {
      return (uint64_t)v10;
    }
    uint64_t v8 = *(_DWORD *)(v9 + 24 * v8) & 0x7FFFFFFF;
    if (v8 == 0x7FFFFFFF) {
      goto LABEL_8;
    }
  }
}

uint64_t re::StateMachineBlackboardBinding::removeUnreferencedParameters(uint64_t a1, uint64_t a2)
{
  v62 = 0;
  v59[1] = 0;
  uint64_t v60 = 0;
  v59[0] = 0;
  int v61 = 0;
  uint64_t v4 = *(unsigned int *)(a1 + 40);
  if (v4)
  {
    uint64_t v5 = 0;
    unint64_t v6 = *(int **)(a1 + 24);
    while (1)
    {
      int v7 = *v6;
      v6 += 8;
      if (v7 < 0) {
        break;
      }
      if (v4 == ++v5)
      {
        LODWORD(v5) = *(_DWORD *)(a1 + 40);
        break;
      }
    }
  }
  else
  {
    LODWORD(v5) = 0;
  }
  if (v4 == v5) {
    goto LABEL_26;
  }
  uint64_t v8 = v5;
  uint64_t v9 = *(void *)(a1 + 24);
  do
  {
    uint64_t v10 = (StringID *)(v9 + 32 * v8 + 8);
    if (!re::HashSetBase<re::StringID,re::StringID,re::internal::ValueAsKey<re::StringID>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::contains(a2, v10))re::DynamicArray<re::StringID>::add((_anonymous_namespace_ *)v59, v10); {
    uint64_t v9 = *(void *)(a1 + 24);
    }
    if (*(_DWORD *)(a1 + 40) <= (v5 + 1)) {
      int v11 = v5 + 1;
    }
    else {
      int v11 = *(_DWORD *)(a1 + 40);
    }
    while (1)
    {
      uint64_t v8 = (v5 + 1);
      if (v11 - 1 == v5) {
        break;
      }
      LODWORD(v5) = v5 + 1;
      int v12 = v8;
      if ((*(_DWORD *)(v9 + 32 * v8) & 0x80000000) != 0) {
        goto LABEL_18;
      }
    }
    int v12 = v11;
LABEL_18:
    LODWORD(v5) = v12;
  }
  while (v4 != v12);
  if (!v60)
  {
LABEL_26:
    uint64_t v60 = 0;
  }
  else
  {
    uint64_t v13 = v62;
    uint64_t v14 = 16 * v60;
    do
    {
      re::StateParameterBlackboard::removeStateParameterInt((re::StateParameterBlackboard *)a1, v13);
      uint64_t v13 = (re::StringID *)((char *)v13 + 16);
      v14 -= 16;
    }
    while (v14);
    uint64_t v15 = v62;
    uint64_t v16 = v60;
    uint64_t v60 = 0;
    if (v16)
    {
      uint64_t v17 = 16 * v16;
      do
      {
        re::StringID::destroyString(v15);
        uint64_t v15 = (re::StringID *)((char *)v15 + 16);
        v17 -= 16;
      }
      while (v17);
    }
  }
  ++v61;
  uint64_t v18 = *(unsigned int *)(a1 + 88);
  if (v18)
  {
    uint64_t v19 = 0;
    uint64_t v20 = *(int **)(a1 + 72);
    while (1)
    {
      int v21 = *v20;
      v20 += 8;
      if (v21 < 0) {
        break;
      }
      if (v18 == ++v19)
      {
        LODWORD(v19) = *(_DWORD *)(a1 + 88);
        break;
      }
    }
  }
  else
  {
    LODWORD(v19) = 0;
  }
  if (v18 != v19)
  {
    uint64_t v22 = v19;
    uint64_t v23 = *(void *)(a1 + 72);
    do
    {
      uint64_t v24 = (StringID *)(v23 + 32 * v22 + 8);
      if (!re::HashSetBase<re::StringID,re::StringID,re::internal::ValueAsKey<re::StringID>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::contains(a2 + 48, v24))re::DynamicArray<re::StringID>::add((_anonymous_namespace_ *)v59, v24); {
      uint64_t v23 = *(void *)(a1 + 72);
      }
      if (*(_DWORD *)(a1 + 88) <= (v19 + 1)) {
        int v25 = v19 + 1;
      }
      else {
        int v25 = *(_DWORD *)(a1 + 88);
      }
      while (1)
      {
        uint64_t v22 = (v19 + 1);
        if (v25 - 1 == v19) {
          break;
        }
        LODWORD(v19) = v19 + 1;
        int v26 = v22;
        if ((*(_DWORD *)(v23 + 32 * v22) & 0x80000000) != 0) {
          goto LABEL_44;
        }
      }
      int v26 = v25;
LABEL_44:
      LODWORD(v19) = v26;
    }
    while (v18 != v26);
  }
  if (v60)
  {
    uint64_t v27 = v62;
    uint64_t v28 = 16 * v60;
    do
    {
      re::StateParameterBlackboard::removeStateParameterFloat((re::StateParameterBlackboard *)a1, v27);
      uint64_t v27 = (re::StringID *)((char *)v27 + 16);
      v28 -= 16;
    }
    while (v28);
    uint64_t v29 = v60;
    uint64_t v30 = v62;
    uint64_t v60 = 0;
    if (v29)
    {
      uint64_t v31 = 16 * v29;
      do
      {
        re::StringID::destroyString(v30);
        uint64_t v30 = (re::StringID *)((char *)v30 + 16);
        v31 -= 16;
      }
      while (v31);
    }
  }
  else
  {
    uint64_t v60 = 0;
  }
  ++v61;
  uint64_t v32 = *(unsigned int *)(a1 + 136);
  if (v32)
  {
    uint64_t v33 = 0;
    int v34 = *(int **)(a1 + 120);
    while (1)
    {
      int v35 = *v34;
      v34 += 8;
      if (v35 < 0) {
        break;
      }
      if (v32 == ++v33)
      {
        LODWORD(v33) = *(_DWORD *)(a1 + 136);
        break;
      }
    }
  }
  else
  {
    LODWORD(v33) = 0;
  }
  if (v32 != v33)
  {
    uint64_t v36 = v33;
    uint64_t v37 = *(void *)(a1 + 120);
    do
    {
      unint64_t v38 = (StringID *)(v37 + 32 * v36 + 8);
      if (!re::HashSetBase<re::StringID,re::StringID,re::internal::ValueAsKey<re::StringID>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::contains(a2 + 96, v38))re::DynamicArray<re::StringID>::add((_anonymous_namespace_ *)v59, v38); {
      uint64_t v37 = *(void *)(a1 + 120);
      }
      if (*(_DWORD *)(a1 + 136) <= (v33 + 1)) {
        int v39 = v33 + 1;
      }
      else {
        int v39 = *(_DWORD *)(a1 + 136);
      }
      while (1)
      {
        uint64_t v36 = (v33 + 1);
        if (v39 - 1 == v33) {
          break;
        }
        LODWORD(v33) = v33 + 1;
        int v40 = v36;
        if ((*(_DWORD *)(v37 + 32 * v36) & 0x80000000) != 0) {
          goto LABEL_70;
        }
      }
      int v40 = v39;
LABEL_70:
      LODWORD(v33) = v40;
    }
    while (v32 != v40);
  }
  if (v60)
  {
    uint64_t v41 = v62;
    uint64_t v42 = 16 * v60;
    do
    {
      re::StateParameterBlackboard::removeStateParameterBool((re::StateParameterBlackboard *)a1, v41);
      uint64_t v41 = (re::StringID *)((char *)v41 + 16);
      v42 -= 16;
    }
    while (v42);
    uint64_t v43 = v60;
    uint64_t v44 = v62;
    uint64_t v60 = 0;
    if (v43)
    {
      uint64_t v45 = 16 * v43;
      do
      {
        re::StringID::destroyString(v44);
        uint64_t v44 = (re::StringID *)((char *)v44 + 16);
        v45 -= 16;
      }
      while (v45);
    }
  }
  else
  {
    uint64_t v60 = 0;
  }
  ++v61;
  uint64_t v46 = *(unsigned int *)(a1 + 184);
  if (v46)
  {
    uint64_t v47 = 0;
    uint64_t v48 = *(int **)(a1 + 168);
    while (1)
    {
      int v49 = *v48;
      v48 += 8;
      if (v49 < 0) {
        break;
      }
      if (v46 == ++v47)
      {
        LODWORD(v47) = *(_DWORD *)(a1 + 184);
        break;
      }
    }
  }
  else
  {
    LODWORD(v47) = 0;
  }
  if (v46 != v47)
  {
    uint64_t v50 = v47;
    uint64_t v51 = a2 + 144;
    uint64_t v52 = *(void *)(a1 + 168);
    do
    {
      v53 = (StringID *)(v52 + 32 * v50 + 8);
      if (!re::HashSetBase<re::StringID,re::StringID,re::internal::ValueAsKey<re::StringID>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::contains(v51, v53))re::DynamicArray<re::StringID>::add((_anonymous_namespace_ *)v59, v53); {
      uint64_t v52 = *(void *)(a1 + 168);
      }
      if (*(_DWORD *)(a1 + 184) <= (v47 + 1)) {
        int v54 = v47 + 1;
      }
      else {
        int v54 = *(_DWORD *)(a1 + 184);
      }
      while (1)
      {
        uint64_t v50 = (v47 + 1);
        if (v54 - 1 == v47) {
          break;
        }
        LODWORD(v47) = v47 + 1;
        int v55 = v50;
        if ((*(_DWORD *)(v52 + 32 * v50) & 0x80000000) != 0) {
          goto LABEL_96;
        }
      }
      int v55 = v54;
LABEL_96:
      LODWORD(v47) = v55;
    }
    while (v46 != v55);
  }
  if (v60)
  {
    v56 = v62;
    uint64_t v57 = 16 * v60;
    do
    {
      re::StateParameterBlackboard::removeStateParameterTrigger((re::StateParameterBlackboard *)a1, v56);
      v56 = (re::StringID *)((char *)v56 + 16);
      v57 -= 16;
    }
    while (v57);
  }
  return re::DynamicArray<re::StringID>::deinit((uint64_t)v59);
}

BOOL re::HashSetBase<re::StringID,re::StringID,re::internal::ValueAsKey<re::StringID>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::contains(uint64_t a1, void *a2)
{
  unint64_t v2 = *(unsigned int *)(a1 + 24);
  if (!v2) {
    return 0;
  }
  unint64_t v4 = 0xBF58476D1CE4E5B9 * ((*a2 >> 31) ^ (*a2 >> 1));
  uint64_t v5 = *(unsigned int *)(*(void *)(a1 + 8)
                       + 4
                       * (((0x94D049BB133111EBLL * (v4 ^ (v4 >> 27))) ^ ((0x94D049BB133111EBLL * (v4 ^ (v4 >> 27))) >> 31))
                        % v2));
  if (v5 == 0x7FFFFFFF) {
    return 0;
  }
  uint64_t v7 = *(void *)(a1 + 16);
  do
  {
    BOOL result = re::StringID::operator==((void *)(v7 + 24 * v5 + 8), a2);
    if (result) {
      break;
    }
    uint64_t v5 = *(_DWORD *)(v7 + 24 * v5) & 0x7FFFFFFF;
  }
  while (v5 != 0x7FFFFFFF);
  return result;
}

uint64_t re::StateMachineBlackboardBinding::addMissingParameters(uint64_t result, uint64_t a2, void *a3)
{
  uint64_t v3 = a2;
  uint64_t v4 = result;
  v78[4] = *(re::BindNode **)MEMORY[0x263EF8340];
  uint64_t v61 = *(unsigned int *)(a2 + 32);
  uint64_t v5 = 0;
  if (v61)
  {
    unint64_t v6 = *(int **)(a2 + 16);
    while (1)
    {
      int v7 = *v6;
      v6 += 6;
      if (v7 < 0) {
        break;
      }
      if (v61 == ++v5)
      {
        LODWORD(v5) = *(_DWORD *)(a2 + 32);
        break;
      }
    }
  }
  if (v61 != v5)
  {
    uint64_t v8 = v5;
    uint64_t v9 = *(void *)(a2 + 16);
    uint64_t v60 = (re::ecs2::EntityComponentCollection *)(a3 + 4);
    do
    {
      if (!*(void *)(v4 + 8)
        || (unint64_t v10 = 0xBF58476D1CE4E5B9 * ((*(void *)(v9 + 24 * v8 + 8) >> 31) ^ (*(void *)(v9 + 24 * v8 + 8) >> 1)),
            uint64_t v11 = *(unsigned int *)(*(void *)(v4 + 16)
                                  + 4
                                  * (((0x94D049BB133111EBLL * (v10 ^ (v10 >> 27))) ^ ((0x94D049BB133111EBLL
                                                                                     * (v10 ^ (v10 >> 27))) >> 31))
                                   % *(unsigned int *)(v4 + 32))),
            v11 == 0x7FFFFFFF))
      {
LABEL_13:
        uint64_t v68 = 0;
        long long v65 = 0u;
        long long v66 = 0u;
        int v67 = 0;
        uint64_t v13 = (void *)a3[21];
        if (!v13) {
          uint64_t v13 = (void *)re::ecs2::EntityComponentCollection::add(v60, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::KeyValueComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
        }
        if (!re::HashTable<re::StringID,re::StateParameterInt *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::tryGet((uint64_t)(v13 + 89), (void *)(v9 + 24 * v8 + 8)))
        {
          *(void *)&long long v69 = 0;
          re::KeyValueStore::addOrReplaceValue<long long>((re::KeyValueStore *)(v13 + 4), (const re::StringID *)(v9 + 24 * v8 + 8), &v69);
          re::ecs2::Component::markDirty(v13);
        }
        re::makeBindNode((re *)a3, (uint64_t)v78);
        re::DynamicString::operator+((re::DynamicString *)&v73, *(const char **)(v9 + 24 * v8 + 16), (re::DynamicString *)&v69);
        re::DynamicString::operator+((re::DynamicString *)&v69, "]", (re::DynamicString *)&v75);
        if ((void)v69)
        {
          if (BYTE8(v69)) {
            (*(void (**)(void))(*(void *)v69 + 40))();
          }
          long long v69 = 0u;
          long long v70 = 0u;
        }
        if (v73 && (v74 & 1) != 0) {
          (*(void (**)(void))(*(void *)v73 + 40))();
        }
        uint64_t v15 = v77;
        if ((v76 & 1) == 0) {
          uint64_t v15 = (char *)&v76 + 1;
        }
        unint64_t v16 = v76 >> 1;
        if (v76) {
          unint64_t v16 = v76 >> 1;
        }
        uint64_t v73 = v15;
        unint64_t v74 = v16;
        re::BindNode::bindPoint<long long>(v78, (uint64_t *)&v73, (uint64_t)&v69);
        *(void *)&long long v65 = v69;
        re::DynamicArray<re::RigDataValue>::operator=((uint64_t)&v65 + 8, (uint64_t)&v69 + 8);
        re::DynamicArray<re::BindPoint::BindPointData>::deinit((uint64_t)&v69 + 8);
        re::DynamicArray<re::BindPoint::BindPointData>::deinit((uint64_t)&v69 + 8);
        uint64_t v17 = *((void *)&v66 + 1);
        if (v75 && (v76 & 1) != 0) {
          (*(void (**)(uint64_t, char *))(*(void *)v75 + 40))(v75, v77);
        }
        re::BindNode::deinit((re::BindNode *)v78);
        if (v17) {
          re::StateParameterBlackboard::addStateParameterInt((re::StateParameterBlackboard *)v4, (StringID *)(v9 + 24 * v8 + 8), (const re::BindPoint *)&v65);
        }
        re::DynamicArray<re::BindPoint::BindPointData>::deinit((uint64_t)&v65 + 8);
        BOOL result = re::DynamicArray<re::BindPoint::BindPointData>::deinit((uint64_t)&v65 + 8);
      }
      else
      {
        uint64_t v12 = *(void *)(v4 + 24);
        while (1)
        {
          BOOL result = re::StringID::operator==((void *)(v12 + 32 * v11 + 8), (void *)(v9 + 24 * v8 + 8));
          if (result) {
            break;
          }
          uint64_t v11 = *(_DWORD *)(v12 + 32 * v11) & 0x7FFFFFFF;
          if (v11 == 0x7FFFFFFF) {
            goto LABEL_13;
          }
        }
      }
      uint64_t v3 = a2;
      unsigned int v18 = *(_DWORD *)(a2 + 32);
      uint64_t v9 = *(void *)(a2 + 16);
      if (v18 <= (int)v5 + 1) {
        unsigned int v18 = v5 + 1;
      }
      while (1)
      {
        uint64_t v8 = (v5 + 1);
        if (v18 - 1 == v5) {
          break;
        }
        LODWORD(v5) = v5 + 1;
        unsigned int v19 = v8;
        if ((*(_DWORD *)(v9 + 24 * v8) & 0x80000000) != 0) {
          goto LABEL_40;
        }
      }
      unsigned int v19 = v18;
LABEL_40:
      LODWORD(v5) = v19;
    }
    while (v61 != v19);
  }
  uint64_t v62 = *(unsigned int *)(v3 + 80);
  uint64_t v20 = 0;
  if (v62)
  {
    int v21 = *(int **)(v3 + 64);
    while (1)
    {
      int v22 = *v21;
      v21 += 6;
      if (v22 < 0) {
        break;
      }
      if (v62 == ++v20)
      {
        LODWORD(v20) = *(_DWORD *)(v3 + 80);
        break;
      }
    }
  }
  if (v62 != v20)
  {
    uint64_t v23 = v20;
    uint64_t v24 = *(void *)(v3 + 64);
    do
    {
      int v25 = (StringID *)(v24 + 24 * v23 + 8);
      if (!*(void *)(v4 + 56)
        || (unint64_t v26 = 0xBF58476D1CE4E5B9 * ((*(void *)&v25->var0 >> 31) ^ (*(void *)&v25->var0 >> 1)),
            uint64_t v27 = *(unsigned int *)(*(void *)(v4 + 64)
                                  + 4
                                  * (((0x94D049BB133111EBLL * (v26 ^ (v26 >> 27))) ^ ((0x94D049BB133111EBLL
                                                                                     * (v26 ^ (v26 >> 27))) >> 31))
                                   % *(unsigned int *)(v4 + 80))),
            v27 == 0x7FFFFFFF))
      {
LABEL_53:
        uint64_t v68 = 0;
        long long v65 = 0u;
        long long v66 = 0u;
        int v67 = 0;
        uint64_t v29 = (void *)a3[21];
        if (!v29) {
          uint64_t v29 = (void *)re::ecs2::EntityComponentCollection::add((re::ecs2::EntityComponentCollection *)(a3 + 4), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::KeyValueComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
        }
        if (!re::HashTable<re::StringID,re::StateParameterInt *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::tryGet((uint64_t)(v29 + 17), (void *)(v24 + 24 * v23 + 8)))
        {
          LODWORD(v69) = 0;
          re::KeyValueStore::addOrReplaceValue<float>((re::KeyValueStore *)(v29 + 4), (const re::StringID *)(v24 + 24 * v23 + 8), &v69);
          re::ecs2::Component::markDirty(v29);
        }
        re::makeBindNode((re *)a3, (uint64_t)v78);
        re::DynamicString::operator+((re::DynamicString *)&v73, *(const char **)(v24 + 24 * v23 + 16), (re::DynamicString *)&v69);
        re::DynamicString::operator+((re::DynamicString *)&v69, "]", (re::DynamicString *)&v75);
        if ((void)v69)
        {
          if (BYTE8(v69)) {
            (*(void (**)(void))(*(void *)v69 + 40))();
          }
          long long v69 = 0u;
          long long v70 = 0u;
        }
        if (v73 && (v74 & 1) != 0) {
          (*(void (**)(void))(*(void *)v73 + 40))();
        }
        uint64_t v31 = v77;
        if ((v76 & 1) == 0) {
          uint64_t v31 = (char *)&v76 + 1;
        }
        unint64_t v32 = v76 >> 1;
        if (v76) {
          unint64_t v32 = v76 >> 1;
        }
        uint64_t v73 = v31;
        unint64_t v74 = v32;
        re::BindNode::bindPoint<float>(v78, (uint64_t *)&v73, (uint64_t)&v69);
        *(void *)&long long v65 = v69;
        re::DynamicArray<re::RigDataValue>::operator=((uint64_t)&v65 + 8, (uint64_t)&v69 + 8);
        re::DynamicArray<re::BindPoint::BindPointData>::deinit((uint64_t)&v69 + 8);
        re::DynamicArray<re::BindPoint::BindPointData>::deinit((uint64_t)&v69 + 8);
        uint64_t v33 = *((void *)&v66 + 1);
        if (v75 && (v76 & 1) != 0) {
          (*(void (**)(uint64_t, char *))(*(void *)v75 + 40))(v75, v77);
        }
        re::BindNode::deinit((re::BindNode *)v78);
        if (v33) {
          re::StateParameterBlackboard::addStateParameterFloat((re::StateParameterBlackboard *)v4, v25, (const re::BindPoint *)&v65);
        }
        re::DynamicArray<re::BindPoint::BindPointData>::deinit((uint64_t)&v65 + 8);
        BOOL result = re::DynamicArray<re::BindPoint::BindPointData>::deinit((uint64_t)&v65 + 8);
      }
      else
      {
        uint64_t v28 = *(void *)(v4 + 72);
        while (1)
        {
          BOOL result = re::StringID::operator==((void *)(v28 + 32 * v27 + 8), (void *)(v24 + 24 * v23 + 8));
          if (result) {
            break;
          }
          uint64_t v27 = *(_DWORD *)(v28 + 32 * v27) & 0x7FFFFFFF;
          if (v27 == 0x7FFFFFFF) {
            goto LABEL_53;
          }
        }
      }
      uint64_t v3 = a2;
      unsigned int v34 = *(_DWORD *)(a2 + 80);
      uint64_t v24 = *(void *)(a2 + 64);
      if (v34 <= (int)v20 + 1) {
        unsigned int v34 = v20 + 1;
      }
      while (1)
      {
        uint64_t v23 = (v20 + 1);
        if (v34 - 1 == v20) {
          break;
        }
        LODWORD(v20) = v20 + 1;
        unsigned int v35 = v23;
        if ((*(_DWORD *)(v24 + 24 * v23) & 0x80000000) != 0) {
          goto LABEL_80;
        }
      }
      unsigned int v35 = v34;
LABEL_80:
      LODWORD(v20) = v35;
    }
    while (v62 != v35);
  }
  uint64_t v36 = *(unsigned int *)(v3 + 128);
  if (v36)
  {
    uint64_t v37 = 0;
    unint64_t v38 = *(int **)(v3 + 112);
    while (1)
    {
      int v39 = *v38;
      v38 += 6;
      if (v39 < 0) {
        break;
      }
      if (v36 == ++v37)
      {
        LODWORD(v37) = *(_DWORD *)(v3 + 128);
        break;
      }
    }
  }
  else
  {
    LODWORD(v37) = 0;
  }
  if (v36 != v37)
  {
    uint64_t v40 = v37;
    uint64_t v41 = *(void *)(v3 + 112);
    do
    {
      uint64_t v42 = (StringID *)(v41 + 24 * v40 + 8);
      if (!*(void *)(v4 + 104)
        || (unint64_t v43 = 0xBF58476D1CE4E5B9 * ((*(void *)&v42->var0 >> 31) ^ (*(void *)&v42->var0 >> 1)),
            uint64_t v44 = *(unsigned int *)(*(void *)(v4 + 112)
                                  + 4
                                  * (((0x94D049BB133111EBLL * (v43 ^ (v43 >> 27))) ^ ((0x94D049BB133111EBLL
                                                                                     * (v43 ^ (v43 >> 27))) >> 31))
                                   % *(unsigned int *)(v4 + 128))),
            v44 == 0x7FFFFFFF))
      {
LABEL_94:
        uint64_t v72 = 0;
        long long v69 = 0u;
        long long v70 = 0u;
        int v71 = 0;
          re::StateParameterBlackboard::addStateParameterBool((re::StateParameterBlackboard *)v4, v42, (const re::BindPoint *)&v69);
        re::DynamicArray<re::BindPoint::BindPointData>::deinit((uint64_t)&v69 + 8);
        BOOL result = re::DynamicArray<re::BindPoint::BindPointData>::deinit((uint64_t)&v69 + 8);
      }
      else
      {
        uint64_t v45 = *(void *)(v4 + 120);
        while (1)
        {
          BOOL result = re::StringID::operator==((void *)(v45 + 32 * v44 + 8), v42);
          if (result) {
            break;
          }
          uint64_t v44 = *(_DWORD *)(v45 + 32 * v44) & 0x7FFFFFFF;
          if (v44 == 0x7FFFFFFF) {
            goto LABEL_94;
          }
        }
      }
      uint64_t v41 = *(void *)(v3 + 112);
      if (*(_DWORD *)(v3 + 128) <= (v37 + 1)) {
        int v46 = v37 + 1;
      }
      else {
        int v46 = *(_DWORD *)(v3 + 128);
      }
      while (1)
      {
        uint64_t v40 = (v37 + 1);
        if (v46 - 1 == v37) {
          break;
        }
        LODWORD(v37) = v37 + 1;
        int v47 = v40;
        if ((*(_DWORD *)(v41 + 24 * v40) & 0x80000000) != 0) {
          goto LABEL_104;
        }
      }
      int v47 = v46;
LABEL_104:
      LODWORD(v37) = v47;
    }
    while (v36 != v47);
  }
  uint64_t v48 = *(unsigned int *)(v3 + 176);
  if (v48)
  {
    uint64_t v49 = 0;
    uint64_t v50 = *(int **)(v3 + 160);
    while (1)
    {
      int v51 = *v50;
      v50 += 6;
      if (v51 < 0) {
        break;
      }
      if (v48 == ++v49)
      {
        LODWORD(v49) = *(_DWORD *)(v3 + 176);
        break;
      }
    }
  }
  else
  {
    LODWORD(v49) = 0;
  }
  if (v48 != v49)
  {
    uint64_t v52 = v49;
    uint64_t v53 = *(void *)(v3 + 160);
    do
    {
      int v54 = (StringID *)(v53 + 24 * v52 + 8);
      if (!*(void *)(v4 + 152)
        || (unint64_t v55 = 0xBF58476D1CE4E5B9 * ((*(void *)&v54->var0 >> 31) ^ (*(void *)&v54->var0 >> 1)),
            uint64_t v56 = *(unsigned int *)(*(void *)(v4 + 160)
                                  + 4
                                  * (((0x94D049BB133111EBLL * (v55 ^ (v55 >> 27))) ^ ((0x94D049BB133111EBLL
                                                                                     * (v55 ^ (v55 >> 27))) >> 31))
                                   % *(unsigned int *)(v4 + 176))),
            v56 == 0x7FFFFFFF))
      {
LABEL_118:
        uint64_t v72 = 0;
        long long v69 = 0u;
        long long v70 = 0u;
        int v71 = 0;
        {
          re::StateParameterBlackboard::addStateParameterBool((re::StateParameterBlackboard *)v4, v54, (const re::BindPoint *)&v69);
          re::StateParameterBlackboard::addStateParameterTrigger((re::StateParameterBlackboard *)v4, v54, (const re::BindPoint *)&v69);
        }
        re::DynamicArray<re::BindPoint::BindPointData>::deinit((uint64_t)&v69 + 8);
        BOOL result = re::DynamicArray<re::BindPoint::BindPointData>::deinit((uint64_t)&v69 + 8);
      }
      else
      {
        uint64_t v57 = *(void *)(v4 + 168);
        while (1)
        {
          BOOL result = re::StringID::operator==((void *)(v57 + 32 * v56 + 8), v54);
          if (result) {
            break;
          }
          uint64_t v56 = *(_DWORD *)(v57 + 32 * v56) & 0x7FFFFFFF;
          if (v56 == 0x7FFFFFFF) {
            goto LABEL_118;
          }
        }
      }
      uint64_t v53 = *(void *)(v3 + 160);
      if (*(_DWORD *)(v3 + 176) <= (v49 + 1)) {
        int v58 = v49 + 1;
      }
      else {
        int v58 = *(_DWORD *)(v3 + 176);
      }
      while (1)
      {
        uint64_t v52 = (v49 + 1);
        if (v58 - 1 == v49) {
          break;
        }
        LODWORD(v49) = v49 + 1;
        int v59 = v52;
        if ((*(_DWORD *)(v53 + 24 * v52) & 0x80000000) != 0) {
          goto LABEL_128;
        }
      }
      int v59 = v58;
LABEL_128:
      LODWORD(v49) = v59;
    }
    while (v48 != v59);
  }
  return result;
}

uint64_t re::StateParameterBlackboard::addStateParameterInt(re::StateParameterBlackboard *this, StringID *a2, const re::BindPoint *a3)
{
  unint64_t v6 = re::globalAllocators(this);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v6[2] + 32))(v6[2], 64, 8);
  *(void *)(v7 + 48) = 0;
  *(void *)(v7 + 56) = 0;
  *(void *)(v7 + 40) = 0;
  *(_OWORD *)(v7 + 8) = 0u;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_DWORD *)(v7 + 40) = 0;
  uint64_t v10 = v7;
  uint64_t v8 = *(void *)a3;
  *(void *)uint64_t v7 = &unk_26E6E4B10;
  *(void *)(v7 + 8) = v8;
  re::DynamicArray<re::BindPoint::BindPointData>::operator=(v7 + 16, (uint64_t *)a3 + 1);
  return re::HashTable<re::StringID,re::StateParameterInt *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::add<re::StateParameterInt *&>((uint64_t)this + 8, a2, &v10);
}

uint64_t re::StateParameterBlackboard::addStateParameterFloat(re::StateParameterBlackboard *this, StringID *a2, const re::BindPoint *a3)
{
  unint64_t v6 = re::globalAllocators(this);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v6[2] + 32))(v6[2], 64, 8);
  *(void *)(v7 + 48) = 0;
  *(void *)(v7 + 56) = 0;
  *(void *)(v7 + 40) = 0;
  *(_OWORD *)(v7 + 8) = 0u;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_DWORD *)(v7 + 40) = 0;
  uint64_t v10 = v7;
  uint64_t v8 = *(void *)a3;
  *(void *)uint64_t v7 = &unk_26E6E4B48;
  *(void *)(v7 + 8) = v8;
  re::DynamicArray<re::BindPoint::BindPointData>::operator=(v7 + 16, (uint64_t *)a3 + 1);
  return re::HashTable<re::StringID,re::StateParameterFloat *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::add<re::StateParameterFloat *&>((uint64_t)this + 56, a2, &v10);
}

BOOL anonymous namespace'::createKeyValueEntryAndBindPoint<BOOL>(const char **a1, void *a2, void *a3)
{
  v17[4] = *(re::BindNode **)MEMORY[0x263EF8340];
  unint64_t v6 = (void *)a2[21];
  if (!v6) {
    unint64_t v6 = (void *)re::ecs2::EntityComponentCollection::add((re::ecs2::EntityComponentCollection *)(a2 + 4), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::KeyValueComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
  }
  if (!re::HashTable<re::StringID,re::StateParameterInt *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::tryGet((uint64_t)(v6 + 11), a1))
  {
    LOBYTE(v12[0]) = 0;
    re::KeyValueStore::addOrReplaceValue<BOOL>((re::KeyValueStore *)(v6 + 4), (const re::StringID *)a1, v12);
    re::ecs2::Component::markDirty(v6);
  }
  re::makeBindNode((re *)a2, (uint64_t)v17);
  re::DynamicString::operator+((re::DynamicString *)&v13, a1[1], (re::DynamicString *)v12);
  re::DynamicString::operator+((re::DynamicString *)v12, "]", (re::DynamicString *)&v15);
  if (*(void *)&v12[0])
  {
    if (BYTE8(v12[0])) {
      (*(void (**)(void))(**(void **)&v12[0] + 40))();
    }
    memset(v12, 0, 32);
  }
  if (v13 && (v14 & 1) != 0) {
    (*(void (**)(void))(*(void *)v13 + 40))();
  }
  uint64_t v8 = (char *)v16[1];
  if ((v16[0] & 1) == 0) {
    uint64_t v8 = (char *)v16 + 1;
  }
  uint64_t v9 = LOBYTE(v16[0]) >> 1;
  if (v16[0]) {
    uint64_t v9 = v16[0] >> 1;
  }
  uint64_t v13 = v8;
  uint64_t v14 = v9;
  re::BindNode::bindPoint<BOOL>(v17, (uint64_t *)&v13, (uint64_t)v12);
  *a3 = *(void *)&v12[0];
  re::DynamicArray<re::RigDataValue>::operator=((uint64_t)(a3 + 1), (uint64_t)v12 + 8);
  re::DynamicArray<re::BindPoint::BindPointData>::deinit((uint64_t)v12 + 8);
  re::DynamicArray<re::BindPoint::BindPointData>::deinit((uint64_t)v12 + 8);
  uint64_t v10 = a3[3];
  if (v15 && (v16[0] & 1) != 0) {
    (*(void (**)(void))(*(void *)v15 + 40))();
  }
  re::BindNode::deinit((re::BindNode *)v17);
  return v10 != 0;
}

uint64_t re::StateParameterBlackboard::addStateParameterBool(re::StateParameterBlackboard *this, StringID *a2, const re::BindPoint *a3)
{
  unint64_t v6 = re::globalAllocators(this);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v6[2] + 32))(v6[2], 64, 8);
  *(void *)(v7 + 48) = 0;
  *(void *)(v7 + 56) = 0;
  *(void *)(v7 + 40) = 0;
  *(_OWORD *)(v7 + 8) = 0u;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_DWORD *)(v7 + 40) = 0;
  uint64_t v10 = v7;
  uint64_t v8 = *(void *)a3;
  *(void *)uint64_t v7 = &unk_26E6E4B80;
  *(void *)(v7 + 8) = v8;
  re::DynamicArray<re::BindPoint::BindPointData>::operator=(v7 + 16, (uint64_t *)a3 + 1);
  return re::HashTable<re::StringID,re::StateParameterBool *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::add<re::StateParameterBool *&>((uint64_t)this + 104, a2, &v10);
}

uint64_t re::StateParameterBlackboard::addStateParameterTrigger(re::StateParameterBlackboard *this, StringID *a2, const re::BindPoint *a3)
{
  unint64_t v6 = re::globalAllocators(this);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v6[2] + 32))(v6[2], 64, 8);
  *(void *)(v7 + 48) = 0;
  *(void *)(v7 + 56) = 0;
  *(void *)(v7 + 40) = 0;
  *(_OWORD *)(v7 + 8) = 0u;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_DWORD *)(v7 + 40) = 0;
  uint64_t v10 = v7;
  uint64_t v8 = *(void *)a3;
  *(void *)uint64_t v7 = &unk_26E6E4BB8;
  *(void *)(v7 + 8) = v8;
  re::DynamicArray<re::BindPoint::BindPointData>::operator=(v7 + 16, (uint64_t *)a3 + 1);
  return re::HashTable<re::StringID,re::StateParameterTrigger *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::add<re::StateParameterTrigger *&>((uint64_t)this + 152, a2, &v10);
}

uint64_t re::StateMachineBlackboardBinding::populateFromExplicitParameterBinding(re::StateMachineBlackboardBinding *this, re::StateParameterBlackboard *a2, re::StateMachineParameterBinding *a3, re::ecs2::Entity *a4)
{
  v24[4] = *(re::BindNode **)MEMORY[0x263EF8340];
  int v6 = *((_DWORD *)a2 + 6);
  if ((a4 & 1) == 0 && v6 == *((_DWORD *)a2 + 10)) {
    return 1;
  }
  *((_DWORD *)a2 + 10) = v6;
  re::makeBindNode(a3, (uint64_t)v24);
  if (!*((void *)a2 + 2))
  {
LABEL_16:
    uint64_t v7 = 1;
    goto LABEL_19;
  }
  unint64_t v8 = 0;
  while (1)
  {
    uint64_t v9 = (StringID *)re::StateMachineParameterBinding::name(a2, v8);
    unint64_t v10 = re::StateMachineParameterBinding::bindTarget(a2, v8);
    int v11 = re::StateMachineParameterBinding::type(a2, v8);
    if (v11 == 3)
    {
      uint64_t v14 = *(const char **)(v10 + 8);
      size_t v15 = strlen(v14);
      unsigned int v19 = v14;
      size_t v20 = v15;
      re::BindNode::bindPoint<BOOL>(v24, (uint64_t *)&v19, (uint64_t)v21);
      if (!v23) {
        goto LABEL_17;
      }
      re::StateParameterBlackboard::addStateParameterBool(this, v9, (const re::BindPoint *)v21);
      re::StateParameterBlackboard::addStateParameterTrigger(this, v9, (const re::BindPoint *)v21);
      goto LABEL_15;
    }
    if (v11 != 2) {
      break;
    }
    unint64_t v16 = *(const char **)(v10 + 8);
    size_t v17 = strlen(v16);
    unsigned int v19 = v16;
    size_t v20 = v17;
    re::BindNode::bindPoint<float>(v24, (uint64_t *)&v19, (uint64_t)v21);
    if (!v23) {
      goto LABEL_17;
    }
    re::StateParameterBlackboard::addStateParameterFloat(this, v9, (const re::BindPoint *)v21);
LABEL_15:
    re::DynamicArray<re::BindPoint::BindPointData>::deinit((uint64_t)v22);
    re::DynamicArray<re::BindPoint::BindPointData>::deinit((uint64_t)v22);
    if (++v8 >= *((void *)a2 + 2)) {
      goto LABEL_16;
    }
  }
  if (v11 != 1) {
    goto LABEL_18;
  }
  uint64_t v12 = *(const char **)(v10 + 8);
  size_t v13 = strlen(v12);
  unsigned int v19 = v12;
  size_t v20 = v13;
  re::BindNode::bindPoint<long long>(v24, (uint64_t *)&v19, (uint64_t)v21);
  if (v23)
  {
    re::StateParameterBlackboard::addStateParameterInt(this, v9, (const re::BindPoint *)v21);
    goto LABEL_15;
  }
LABEL_17:
  re::DynamicArray<re::BindPoint::BindPointData>::deinit((uint64_t)v22);
  re::DynamicArray<re::BindPoint::BindPointData>::deinit((uint64_t)v22);
LABEL_18:
  uint64_t v7 = 0;
LABEL_19:
  re::BindNode::deinit((re::BindNode *)v24);
  return v7;
}

unint64_t re::StateMachineParameterBinding::name(re::StateMachineParameterBinding *this, unint64_t a2)
{
  if (*((void *)this + 2) <= a2)
  {
    os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
    _os_log_send_and_compose_impl();
    _os_crash_msg();
    __break(1u);
  }
  return *((void *)this + 4) + 40 * a2;
}

unint64_t re::StateMachineParameterBinding::bindTarget(re::StateMachineParameterBinding *this, unint64_t a2)
{
  if (*((void *)this + 2) <= a2)
  {
    os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
    _os_log_send_and_compose_impl();
    _os_crash_msg();
    __break(1u);
  }
  return *((void *)this + 4) + 40 * a2 + 24;
}

uint64_t re::StateMachineParameterBinding::type(re::StateMachineParameterBinding *this, unint64_t a2)
{
  if (*((void *)this + 2) <= a2)
  {
    os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
    _os_log_send_and_compose_impl();
    _os_crash_msg();
    __break(1u);
  }
  return *(unsigned __int8 *)(*((void *)this + 4) + 40 * a2 + 16);
}

double re::BindNode::bindPoint<long long>@<D0>(re::BindNode **a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = a2;
  uint64_t v4 = re::KTXTextureCompiler::getSupportedExtensions(void)const::supportedExtensions;
  {
    uint64_t v12 = a1;
    uint64_t v10 = a3;
    uint64_t v4 = re::KTXTextureCompiler::getSupportedExtensions(void)const::supportedExtensions;
    a3 = v10;
    uint64_t v3 = a2;
    int v9 = v7;
    a1 = v12;
    if (v9)
    {
      re::introspect<long long>(void)::info = (uint64_t)re::introspect_int64_t(0, v8);
      uint64_t v4 = re::KTXTextureCompiler::getSupportedExtensions(void)const::supportedExtensions;
      a3 = v10;
      uint64_t v3 = a2;
      a1 = v12;
    }
  }
  uint64_t v5 = (uint64_t)v4[147];
  return re::BindNode::bindPoint(a1, v5, v3, a3);
}

double re::BindNode::bindPoint<float>@<D0>(re::BindNode **a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = a2;
  unint64_t v4 = 0x268771000uLL;
  {
    uint64_t v12 = a1;
    uint64_t v10 = a3;
    unint64_t v4 = 0x268771000;
    a3 = v10;
    uint64_t v3 = a2;
    int v9 = v7;
    a1 = v12;
    if (v9)
    {
      re::introspect<float>(void)::info = re::introspect_float(0, v8);
      unint64_t v4 = 0x268771000;
      a3 = v10;
      uint64_t v3 = a2;
      a1 = v12;
    }
  }
  uint64_t v5 = *(void *)(v4 + 3632);
  return re::BindNode::bindPoint(a1, v5, v3, a3);
}

double re::BindNode::bindPoint<BOOL>@<D0>(re::BindNode **a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = a2;
  unint64_t v4 = &off_268773000;
  {
    uint64_t v12 = a1;
    uint64_t v10 = a3;
    unint64_t v4 = &off_268773000;
    a3 = v10;
    uint64_t v3 = a2;
    int v9 = v7;
    a1 = v12;
    if (v9)
    {
      re::introspect<BOOL>(void)::info = re::introspect_BOOL(0, v8);
      unint64_t v4 = &off_268773000;
      a3 = v10;
      uint64_t v3 = a2;
      a1 = v12;
    }
  }
  uint64_t v5 = (uint64_t)v4[187];
  return re::BindNode::bindPoint(a1, v5, v3, a3);
}

uint64_t re::StateMachineBlackboardBinding::updateFromGraphsAndParameterBinding(re::StateMachineBlackboardBinding *this, re::StateParameterBlackboard *a2, const re::AssetHandle *a3, re::StateMachineParameterBinding *a4, re::ecs2::Entity *a5)
{
  int v13 = 0;
  memset(v12, 0, sizeof(v12));
  uint64_t v14 = 0x7FFFFFFFLL;
  memset(v15, 0, sizeof(v15));
  int v16 = 0;
  uint64_t v17 = 0x7FFFFFFFLL;
  memset(v18, 0, sizeof(v18));
  uint64_t v20 = 0x7FFFFFFFLL;
  memset(v21, 0, sizeof(v21));
  int v19 = 0;
  int v22 = 0;
  uint64_t v23 = 0x7FFFFFFFLL;
  if (a5)
  {
    unint64_t v8 = (void *)re::AssetHandle::asset<re::StateMachineAsset>(a2);
    if (v8)
    {
      re::StateMachineAsset::getAllGraphs(v8, (uint64_t)v11);
      re::StateMachineBlackboardBinding::collectAllGraphParameters((uint64_t)v11, (uint64_t)v12);
      if (v11[0] && v11[4]) {
        (*(void (**)(void))(*(void *)v11[0] + 40))();
      }
      re::StateMachineBlackboardBinding::removeUnreferencedParameters((uint64_t)this, (uint64_t)v12);
    }
    uint64_t v9 = 1;
    re::StateMachineBlackboardBinding::populateFromExplicitParameterBinding(this, a3, a4, (re::ecs2::Entity *)1);
    re::StateMachineBlackboardBinding::addMissingParameters((uint64_t)this, (uint64_t)v12, a4);
  }
  else
  {
    uint64_t v9 = re::StateMachineBlackboardBinding::populateFromExplicitParameterBinding(this, a3, a4, 0);
  }
  re::HashSetBase<re::StringID,re::StringID,re::internal::ValueAsKey<re::StringID>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit(v21);
  re::HashSetBase<re::StringID,re::StringID,re::internal::ValueAsKey<re::StringID>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit(v18);
  re::HashSetBase<re::StringID,re::StringID,re::internal::ValueAsKey<re::StringID>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)v15);
  re::HashSetBase<re::StringID,re::StringID,re::internal::ValueAsKey<re::StringID>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)v12);
  return v9;
}

uint64_t re::AssetHandle::asset<re::StateMachineAsset>(re::StateMachineAsset *a1)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  unint64_t v2 = re::StateMachineAsset::assetType(a1);
  uint64_t v3 = re::AssetHandle::assetWithType(a1, (const re::AssetType *)v2, 0);
  if (!v3)
  {
    unint64_t v4 = *re::assetsLogObjects(0);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v6 = re::AssetHandle::assetInfo(a1);
      if (v6[17]) {
        int v7 = (char *)v6[18];
      }
      else {
        int v7 = (char *)v6 + 137;
      }
      int v8 = 136315138;
      uint64_t v9 = v7;
      _os_log_error_impl(&dword_233120000, v4, OS_LOG_TYPE_ERROR, "Invalid asset: '%s'", (uint8_t *)&v8, 0xCu);
    }
  }
  return v3;
}

uint64_t re::HashTable<re::StringID,re::StateParameterInt *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::add<re::StateParameterInt *&>(uint64_t a1, StringID *a2, void *a3)
{
  unint64_t v6 = 0xBF58476D1CE4E5B9 * ((*(void *)&a2->var0 >> 31) ^ (*(void *)&a2->var0 >> 1));
  unint64_t v7 = (0x94D049BB133111EBLL * (v6 ^ (v6 >> 27))) ^ ((0x94D049BB133111EBLL * (v6 ^ (v6 >> 27))) >> 31);
  if (!*(void *)a1)
  {
    LODWORD(v8) = 0;
    goto LABEL_8;
  }
  unint64_t v8 = v7 % *(unsigned int *)(a1 + 24);
  uint64_t v9 = *(unsigned int *)(*(void *)(a1 + 8) + 4 * v8);
  if (v9 == 0x7FFFFFFF)
  {
LABEL_8:
    unsigned int v12 = re::HashTable<re::StringID,re::StateParameterInt *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::addEmplace<re::StateParameterInt *&>(a1, v8, v7, a2, a3);
    ++*(_DWORD *)(a1 + 40);
    return *(void *)(a1 + 16) + 32 * v12 + 24;
  }
  uint64_t v10 = *(void *)(a1 + 16);
  while (1)
  {
    uint64_t v11 = v10 + 32 * v9;
    if (re::StringID::operator==((void *)(v11 + 8), a2)) {
      return v11 + 24;
    }
    uint64_t v9 = *(_DWORD *)(v10 + 32 * v9) & 0x7FFFFFFF;
    if (v9 == 0x7FFFFFFF) {
      goto LABEL_8;
    }
  }
}

uint64_t re::HashTable<re::StringID,re::StateParameterInt *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::addEmplace<re::StateParameterInt *&>(uint64_t a1, unsigned int a2, unint64_t a3, StringID *a4, void *a5)
{
  uint64_t v9 = *(unsigned int *)(a1 + 36);
  if (v9 == 0x7FFFFFFF)
  {
    uint64_t v9 = *(unsigned int *)(a1 + 32);
    int v10 = v9;
    if (v9 == *(_DWORD *)(a1 + 24))
    {
      re::HashTable<re::StringID,re::StateParameterInt *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::setCapacity(a1, 2 * *(_DWORD *)(a1 + 28));
      a2 = a3 % *(unsigned int *)(a1 + 24);
      int v10 = *(_DWORD *)(a1 + 32);
    }
    *(_DWORD *)(a1 + 32) = v10 + 1;
    uint64_t v12 = *(void *)(a1 + 16);
    int v13 = *(_DWORD *)(v12 + 32 * v9);
  }
  else
  {
    uint64_t v12 = *(void *)(a1 + 16);
    int v13 = *(_DWORD *)(v12 + 32 * v9);
    *(_DWORD *)(a1 + 36) = v13 & 0x7FFFFFFF;
  }
  uint64_t v14 = 32 * v9;
  *(_DWORD *)(v12 + v14) = v13 | 0x80000000;
  *(_DWORD *)(*(void *)(a1 + 16) + v14) = *(_DWORD *)(*(void *)(a1 + 16) + 32 * v9) & 0x80000000 | *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2);
  re::StringID::StringID((re::StringID *)(*(void *)(a1 + 16) + 32 * v9 + 8), a4);
  *(void *)(*(void *)(a1 + 16) + 32 * v9 + 24) = *a5;
  *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2) = v9;
  ++*(_DWORD *)(a1 + 28);
  return v9;
}

void re::HashTable<re::StringID,re::StateParameterInt *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::setCapacity(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = *(void *)a1;
  if (*(void *)a1)
  {
    if (a2 && *(_DWORD *)(a1 + 24) != a2 && *(_DWORD *)(a1 + 28) <= a2)
    {
      memset(v15, 0, 36);
      *(void *)&v15[36] = 0x7FFFFFFFLL;
      re::HashTable<re::StringID,unsigned int,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::init((uint64_t)v15, v4, a2);
      long long v5 = *(_OWORD *)v15;
      *(_OWORD *)size_t v15 = *(_OWORD *)a1;
      *(_OWORD *)a1 = v5;
      uint64_t v6 = *(void *)&v15[16];
      *(void *)&v15[16] = *(void *)(a1 + 16);
      *(void *)(a1 + 16) = v6;
      long long v8 = *(_OWORD *)&v15[24];
      *(_OWORD *)&v15[24] = *(_OWORD *)(a1 + 24);
      unsigned int v7 = *(_DWORD *)&v15[32];
      *(_OWORD *)(a1 + 24) = v8;
      unsigned int v9 = v7;
      if (v7)
      {
        uint64_t v10 = 0;
        unint64_t v11 = 0;
        do
        {
          if ((*(_DWORD *)(*(void *)&v15[16] + v10) & 0x80000000) != 0)
          {
            unint64_t v12 = 0xBF58476D1CE4E5B9
                * ((*(void *)(*(void *)&v15[16] + v10 + 8) >> 31) ^ (*(void *)(*(void *)&v15[16] + v10 + 8) >> 1));
            unint64_t v13 = (0x94D049BB133111EBLL * (v12 ^ (v12 >> 27))) ^ ((0x94D049BB133111EBLL * (v12 ^ (v12 >> 27))) >> 31);
            re::HashTable<re::StringID,re::StateParameterInt *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::addEmplace<re::StateParameterInt *&>(a1, v13 % *(unsigned int *)(a1 + 24), v13, (StringID *)(*(void *)&v15[16] + v10 + 8));
            unsigned int v9 = *(_DWORD *)&v15[32];
          }
          ++v11;
          v10 += 32;
        }
        while (v11 < v9);
      }
      re::HashTable<re::StringID,re::DataArrayHandle<re::RigGraphOperatorDefinition>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)v15);
    }
  }
  else
  {
    if (a2) {
      signed int v14 = a2;
    }
    else {
      signed int v14 = 3;
    }
  }
}

uint64_t re::HashTable<re::StringID,re::StateParameterFloat *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::add<re::StateParameterFloat *&>(uint64_t a1, StringID *a2, void *a3)
{
  unint64_t v6 = 0xBF58476D1CE4E5B9 * ((*(void *)&a2->var0 >> 31) ^ (*(void *)&a2->var0 >> 1));
  unint64_t v7 = (0x94D049BB133111EBLL * (v6 ^ (v6 >> 27))) ^ ((0x94D049BB133111EBLL * (v6 ^ (v6 >> 27))) >> 31);
  if (!*(void *)a1)
  {
    LODWORD(v8) = 0;
    goto LABEL_8;
  }
  unint64_t v8 = v7 % *(unsigned int *)(a1 + 24);
  uint64_t v9 = *(unsigned int *)(*(void *)(a1 + 8) + 4 * v8);
  if (v9 == 0x7FFFFFFF)
  {
LABEL_8:
    unsigned int v12 = re::HashTable<re::StringID,re::StateParameterFloat *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::addEmplace<re::StateParameterFloat *&>(a1, v8, v7, a2, a3);
    ++*(_DWORD *)(a1 + 40);
    return *(void *)(a1 + 16) + 32 * v12 + 24;
  }
  uint64_t v10 = *(void *)(a1 + 16);
  while (1)
  {
    uint64_t v11 = v10 + 32 * v9;
    if (re::StringID::operator==((void *)(v11 + 8), a2)) {
      return v11 + 24;
    }
    uint64_t v9 = *(_DWORD *)(v10 + 32 * v9) & 0x7FFFFFFF;
    if (v9 == 0x7FFFFFFF) {
      goto LABEL_8;
    }
  }
}

uint64_t re::HashTable<re::StringID,re::StateParameterFloat *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::addEmplace<re::StateParameterFloat *&>(uint64_t a1, unsigned int a2, unint64_t a3, StringID *a4, void *a5)
{
  uint64_t v9 = *(unsigned int *)(a1 + 36);
  if (v9 == 0x7FFFFFFF)
  {
    uint64_t v9 = *(unsigned int *)(a1 + 32);
    int v10 = v9;
    if (v9 == *(_DWORD *)(a1 + 24))
    {
      re::HashTable<re::StringID,re::StateParameterFloat *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::setCapacity(a1, 2 * *(_DWORD *)(a1 + 28));
      a2 = a3 % *(unsigned int *)(a1 + 24);
      int v10 = *(_DWORD *)(a1 + 32);
    }
    *(_DWORD *)(a1 + 32) = v10 + 1;
    uint64_t v12 = *(void *)(a1 + 16);
    int v13 = *(_DWORD *)(v12 + 32 * v9);
  }
  else
  {
    uint64_t v12 = *(void *)(a1 + 16);
    int v13 = *(_DWORD *)(v12 + 32 * v9);
    *(_DWORD *)(a1 + 36) = v13 & 0x7FFFFFFF;
  }
  uint64_t v14 = 32 * v9;
  *(_DWORD *)(v12 + v14) = v13 | 0x80000000;
  *(_DWORD *)(*(void *)(a1 + 16) + v14) = *(_DWORD *)(*(void *)(a1 + 16) + 32 * v9) & 0x80000000 | *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2);
  re::StringID::StringID((re::StringID *)(*(void *)(a1 + 16) + 32 * v9 + 8), a4);
  *(void *)(*(void *)(a1 + 16) + 32 * v9 + 24) = *a5;
  *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2) = v9;
  ++*(_DWORD *)(a1 + 28);
  return v9;
}

void re::HashTable<re::StringID,re::StateParameterFloat *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::setCapacity(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = *(void *)a1;
  if (*(void *)a1)
  {
    if (a2 && *(_DWORD *)(a1 + 24) != a2 && *(_DWORD *)(a1 + 28) <= a2)
    {
      memset(v15, 0, 36);
      *(void *)&v15[36] = 0x7FFFFFFFLL;
      re::HashTable<re::StringID,unsigned int,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::init((uint64_t)v15, v4, a2);
      long long v5 = *(_OWORD *)v15;
      *(_OWORD *)size_t v15 = *(_OWORD *)a1;
      *(_OWORD *)a1 = v5;
      uint64_t v6 = *(void *)&v15[16];
      *(void *)&v15[16] = *(void *)(a1 + 16);
      *(void *)(a1 + 16) = v6;
      long long v8 = *(_OWORD *)&v15[24];
      *(_OWORD *)&v15[24] = *(_OWORD *)(a1 + 24);
      unsigned int v7 = *(_DWORD *)&v15[32];
      *(_OWORD *)(a1 + 24) = v8;
      unsigned int v9 = v7;
      if (v7)
      {
        uint64_t v10 = 0;
        unint64_t v11 = 0;
        do
        {
          if ((*(_DWORD *)(*(void *)&v15[16] + v10) & 0x80000000) != 0)
          {
            unint64_t v12 = 0xBF58476D1CE4E5B9
                * ((*(void *)(*(void *)&v15[16] + v10 + 8) >> 31) ^ (*(void *)(*(void *)&v15[16] + v10 + 8) >> 1));
            unint64_t v13 = (0x94D049BB133111EBLL * (v12 ^ (v12 >> 27))) ^ ((0x94D049BB133111EBLL * (v12 ^ (v12 >> 27))) >> 31);
            re::HashTable<re::StringID,re::StateParameterFloat *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::addEmplace<re::StateParameterFloat *&>(a1, v13 % *(unsigned int *)(a1 + 24), v13, (StringID *)(*(void *)&v15[16] + v10 + 8));
            unsigned int v9 = *(_DWORD *)&v15[32];
          }
          ++v11;
          v10 += 32;
        }
        while (v11 < v9);
      }
      re::HashTable<re::StringID,re::DataArrayHandle<re::RigGraphOperatorDefinition>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)v15);
    }
  }
  else
  {
    if (a2) {
      signed int v14 = a2;
    }
    else {
      signed int v14 = 3;
    }
  }
}

uint64_t re::HashTable<re::StringID,re::StateParameterBool *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::add<re::StateParameterBool *&>(uint64_t a1, StringID *a2, void *a3)
{
  unint64_t v6 = 0xBF58476D1CE4E5B9 * ((*(void *)&a2->var0 >> 31) ^ (*(void *)&a2->var0 >> 1));
  unint64_t v7 = (0x94D049BB133111EBLL * (v6 ^ (v6 >> 27))) ^ ((0x94D049BB133111EBLL * (v6 ^ (v6 >> 27))) >> 31);
  if (!*(void *)a1)
  {
    LODWORD(v8) = 0;
    goto LABEL_8;
  }
  unint64_t v8 = v7 % *(unsigned int *)(a1 + 24);
  uint64_t v9 = *(unsigned int *)(*(void *)(a1 + 8) + 4 * v8);
  if (v9 == 0x7FFFFFFF)
  {
LABEL_8:
    unsigned int v12 = re::HashTable<re::StringID,re::StateParameterBool *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::addEmplace<re::StateParameterBool *&>(a1, v8, v7, a2, a3);
    ++*(_DWORD *)(a1 + 40);
    return *(void *)(a1 + 16) + 32 * v12 + 24;
  }
  uint64_t v10 = *(void *)(a1 + 16);
  while (1)
  {
    uint64_t v11 = v10 + 32 * v9;
    if (re::StringID::operator==((void *)(v11 + 8), a2)) {
      return v11 + 24;
    }
    uint64_t v9 = *(_DWORD *)(v10 + 32 * v9) & 0x7FFFFFFF;
    if (v9 == 0x7FFFFFFF) {
      goto LABEL_8;
    }
  }
}

uint64_t re::HashTable<re::StringID,re::StateParameterBool *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::addEmplace<re::StateParameterBool *&>(uint64_t a1, unsigned int a2, unint64_t a3, StringID *a4, void *a5)
{
  uint64_t v9 = *(unsigned int *)(a1 + 36);
  if (v9 == 0x7FFFFFFF)
  {
    uint64_t v9 = *(unsigned int *)(a1 + 32);
    int v10 = v9;
    if (v9 == *(_DWORD *)(a1 + 24))
    {
      re::HashTable<re::StringID,re::StateParameterBool *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::setCapacity(a1, 2 * *(_DWORD *)(a1 + 28));
      a2 = a3 % *(unsigned int *)(a1 + 24);
      int v10 = *(_DWORD *)(a1 + 32);
    }
    *(_DWORD *)(a1 + 32) = v10 + 1;
    uint64_t v12 = *(void *)(a1 + 16);
    int v13 = *(_DWORD *)(v12 + 32 * v9);
  }
  else
  {
    uint64_t v12 = *(void *)(a1 + 16);
    int v13 = *(_DWORD *)(v12 + 32 * v9);
    *(_DWORD *)(a1 + 36) = v13 & 0x7FFFFFFF;
  }
  uint64_t v14 = 32 * v9;
  *(_DWORD *)(v12 + v14) = v13 | 0x80000000;
  *(_DWORD *)(*(void *)(a1 + 16) + v14) = *(_DWORD *)(*(void *)(a1 + 16) + 32 * v9) & 0x80000000 | *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2);
  re::StringID::StringID((re::StringID *)(*(void *)(a1 + 16) + 32 * v9 + 8), a4);
  *(void *)(*(void *)(a1 + 16) + 32 * v9 + 24) = *a5;
  *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2) = v9;
  ++*(_DWORD *)(a1 + 28);
  return v9;
}

void re::HashTable<re::StringID,re::StateParameterBool *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::setCapacity(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = *(void *)a1;
  if (*(void *)a1)
  {
    if (a2 && *(_DWORD *)(a1 + 24) != a2 && *(_DWORD *)(a1 + 28) <= a2)
    {
      memset(v15, 0, 36);
      *(void *)&v15[36] = 0x7FFFFFFFLL;
      re::HashTable<re::StringID,unsigned int,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::init((uint64_t)v15, v4, a2);
      long long v5 = *(_OWORD *)v15;
      *(_OWORD *)size_t v15 = *(_OWORD *)a1;
      *(_OWORD *)a1 = v5;
      uint64_t v6 = *(void *)&v15[16];
      *(void *)&v15[16] = *(void *)(a1 + 16);
      *(void *)(a1 + 16) = v6;
      long long v8 = *(_OWORD *)&v15[24];
      *(_OWORD *)&v15[24] = *(_OWORD *)(a1 + 24);
      unsigned int v7 = *(_DWORD *)&v15[32];
      *(_OWORD *)(a1 + 24) = v8;
      unsigned int v9 = v7;
      if (v7)
      {
        uint64_t v10 = 0;
        unint64_t v11 = 0;
        do
        {
          if ((*(_DWORD *)(*(void *)&v15[16] + v10) & 0x80000000) != 0)
          {
            unint64_t v12 = 0xBF58476D1CE4E5B9
                * ((*(void *)(*(void *)&v15[16] + v10 + 8) >> 31) ^ (*(void *)(*(void *)&v15[16] + v10 + 8) >> 1));
            unint64_t v13 = (0x94D049BB133111EBLL * (v12 ^ (v12 >> 27))) ^ ((0x94D049BB133111EBLL * (v12 ^ (v12 >> 27))) >> 31);
            re::HashTable<re::StringID,re::StateParameterBool *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::addEmplace<re::StateParameterBool *&>(a1, v13 % *(unsigned int *)(a1 + 24), v13, (StringID *)(*(void *)&v15[16] + v10 + 8));
            unsigned int v9 = *(_DWORD *)&v15[32];
          }
          ++v11;
          v10 += 32;
        }
        while (v11 < v9);
      }
      re::HashTable<re::StringID,re::DataArrayHandle<re::RigGraphOperatorDefinition>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)v15);
    }
  }
  else
  {
    if (a2) {
      signed int v14 = a2;
    }
    else {
      signed int v14 = 3;
    }
  }
}

uint64_t re::HashTable<re::StringID,re::StateParameterTrigger *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::add<re::StateParameterTrigger *&>(uint64_t a1, StringID *a2, void *a3)
{
  unint64_t v6 = 0xBF58476D1CE4E5B9 * ((*(void *)&a2->var0 >> 31) ^ (*(void *)&a2->var0 >> 1));
  unint64_t v7 = (0x94D049BB133111EBLL * (v6 ^ (v6 >> 27))) ^ ((0x94D049BB133111EBLL * (v6 ^ (v6 >> 27))) >> 31);
  if (!*(void *)a1)
  {
    LODWORD(v8) = 0;
    goto LABEL_8;
  }
  unint64_t v8 = v7 % *(unsigned int *)(a1 + 24);
  uint64_t v9 = *(unsigned int *)(*(void *)(a1 + 8) + 4 * v8);
  if (v9 == 0x7FFFFFFF)
  {
LABEL_8:
    unsigned int v12 = re::HashTable<re::StringID,re::StateParameterTrigger *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::addEmplace<re::StateParameterTrigger *&>(a1, v8, v7, a2, a3);
    ++*(_DWORD *)(a1 + 40);
    return *(void *)(a1 + 16) + 32 * v12 + 24;
  }
  uint64_t v10 = *(void *)(a1 + 16);
  while (1)
  {
    uint64_t v11 = v10 + 32 * v9;
    if (re::StringID::operator==((void *)(v11 + 8), a2)) {
      return v11 + 24;
    }
    uint64_t v9 = *(_DWORD *)(v10 + 32 * v9) & 0x7FFFFFFF;
    if (v9 == 0x7FFFFFFF) {
      goto LABEL_8;
    }
  }
}

uint64_t re::StateParameterTrigger::parameterReset(re::StateParameterTrigger *this)
{
  return re::StateParameterBool::setValue(this, 0);
}

uint64_t re::StateParameterBool::setValue(re::StateParameterBool *this, unsigned __int8 a2)
{
  unsigned __int8 v4 = a2;
  if (!*((void *)this + 4)) {
    return 0;
  }
  unint64_t v2 = (unsigned __int8 *)this + 8;
  uint64_t result = re::BindPoint::isAlive((re::StateParameterBool *)((char *)this + 8));
  if (result)
  {
    re::BindPoint::setValue<BOOL>(v2, &v4);
    return 1;
  }
  return result;
}

unsigned __int8 *re::BindPoint::setValue<BOOL>(unsigned __int8 *result, unsigned __int8 *a2)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  uint64_t v2 = *((void *)result + 3);
  if (v2)
  {
    unsigned __int8 v4 = (re::BindPoint *)result;
    MEMORY[0x270FA5388](result);
    unint64_t v6 = (void *)((char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
    if (v5 >= 0x200) {
      size_t v7 = 512;
    }
    else {
      size_t v7 = v5;
    }
    bzero((char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = *((void *)v4 + 3);
    do
    {
      if (v10 == v9)
      {
        v17[1] = 0;
        long long v29 = 0u;
        long long v30 = 0u;
        long long v27 = 0u;
        long long v28 = 0u;
        long long v26 = 0u;
        os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
        int v18 = 136315906;
        int v19 = "operator[]";
        __int16 v20 = 1024;
        int v21 = 797;
        __int16 v22 = 2048;
        uint64_t v23 = v10;
        __int16 v24 = 2048;
        uint64_t v25 = v10;
        _os_log_send_and_compose_impl();
        _os_crash_msg();
        __break(1u);
      }
      uint64_t v11 = (void *)(*((void *)v4 + 5) + v8);
      if (!*v11) {
        uint64_t v11 = (void *)v11[2];
      }
      v6[v9++] = v11;
      v8 += 32;
    }
    while (v2 != v9);
    uint64_t v12 = v2 - 1;
    uint64_t v13 = (*(uint64_t (**)(void, void, void *, uint64_t))(*(void *)*v6 + 120))(*v6, 0, v6 + 1, v12);
    if (v13)
    {
      signed int v14 = (unsigned char *)v13;
      uint64_t result = (unsigned __int8 *)re::BindPoint::isOverridden(v4);
      int v15 = *a2;
      if (!result || *v14 != v15)
      {
        *signed int v14 = v15;
        re::BindPoint::setIsOverridden((uint64_t)v4, 1);
        return (unsigned __int8 *)re::BindPoint::markAsWritten((uint64_t)v4);
      }
    }
    else
    {
      uint64_t result = (unsigned __int8 *)(*(uint64_t (**)(void, void, void *, uint64_t))(*(void *)*v6 + 88))(*v6, 0, v6 + 1, v12);
      if (result)
      {
        int v16 = *a2;
        if (*result != v16)
        {
          *uint64_t result = v16;
          return (unsigned __int8 *)re::BindPoint::markAsWritten((uint64_t)v4);
        }
      }
    }
  }
  return result;
}

uint64_t re::HashTable<re::StringID,re::StateParameterTrigger *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::addEmplace<re::StateParameterTrigger *&>(uint64_t a1, unsigned int a2, unint64_t a3, StringID *a4, void *a5)
{
  uint64_t v9 = *(unsigned int *)(a1 + 36);
  if (v9 == 0x7FFFFFFF)
  {
    uint64_t v9 = *(unsigned int *)(a1 + 32);
    int v10 = v9;
    if (v9 == *(_DWORD *)(a1 + 24))
    {
      re::HashTable<re::StringID,re::StateParameterTrigger *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::setCapacity(a1, 2 * *(_DWORD *)(a1 + 28));
      a2 = a3 % *(unsigned int *)(a1 + 24);
      int v10 = *(_DWORD *)(a1 + 32);
    }
    *(_DWORD *)(a1 + 32) = v10 + 1;
    uint64_t v12 = *(void *)(a1 + 16);
    int v13 = *(_DWORD *)(v12 + 32 * v9);
  }
  else
  {
    uint64_t v12 = *(void *)(a1 + 16);
    int v13 = *(_DWORD *)(v12 + 32 * v9);
    *(_DWORD *)(a1 + 36) = v13 & 0x7FFFFFFF;
  }
  uint64_t v14 = 32 * v9;
  *(_DWORD *)(v12 + v14) = v13 | 0x80000000;
  *(_DWORD *)(*(void *)(a1 + 16) + v14) = *(_DWORD *)(*(void *)(a1 + 16) + 32 * v9) & 0x80000000 | *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2);
  re::StringID::StringID((re::StringID *)(*(void *)(a1 + 16) + 32 * v9 + 8), a4);
  *(void *)(*(void *)(a1 + 16) + 32 * v9 + 24) = *a5;
  *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2) = v9;
  ++*(_DWORD *)(a1 + 28);
  return v9;
}

void re::HashTable<re::StringID,re::StateParameterTrigger *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::setCapacity(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = *(void *)a1;
  if (*(void *)a1)
  {
    if (a2 && *(_DWORD *)(a1 + 24) != a2 && *(_DWORD *)(a1 + 28) <= a2)
    {
      memset(v15, 0, 36);
      *(void *)&v15[36] = 0x7FFFFFFFLL;
      re::HashTable<re::StringID,unsigned int,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::init((uint64_t)v15, v4, a2);
      long long v5 = *(_OWORD *)v15;
      *(_OWORD *)int v15 = *(_OWORD *)a1;
      *(_OWORD *)a1 = v5;
      uint64_t v6 = *(void *)&v15[16];
      *(void *)&v15[16] = *(void *)(a1 + 16);
      *(void *)(a1 + 16) = v6;
      long long v8 = *(_OWORD *)&v15[24];
      *(_OWORD *)&v15[24] = *(_OWORD *)(a1 + 24);
      unsigned int v7 = *(_DWORD *)&v15[32];
      *(_OWORD *)(a1 + 24) = v8;
      unsigned int v9 = v7;
      if (v7)
      {
        uint64_t v10 = 0;
        unint64_t v11 = 0;
        do
        {
          if ((*(_DWORD *)(*(void *)&v15[16] + v10) & 0x80000000) != 0)
          {
            unint64_t v12 = 0xBF58476D1CE4E5B9
                * ((*(void *)(*(void *)&v15[16] + v10 + 8) >> 31) ^ (*(void *)(*(void *)&v15[16] + v10 + 8) >> 1));
            unint64_t v13 = (0x94D049BB133111EBLL * (v12 ^ (v12 >> 27))) ^ ((0x94D049BB133111EBLL * (v12 ^ (v12 >> 27))) >> 31);
            re::HashTable<re::StringID,re::StateParameterTrigger *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::addEmplace<re::StateParameterTrigger *&>(a1, v13 % *(unsigned int *)(a1 + 24), v13, (StringID *)(*(void *)&v15[16] + v10 + 8));
            unsigned int v9 = *(_DWORD *)&v15[32];
          }
          ++v11;
          v10 += 32;
        }
        while (v11 < v9);
      }
      re::HashTable<re::StringID,re::DataArrayHandle<re::RigGraphOperatorDefinition>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)v15);
    }
  }
  else
  {
    if (a2) {
      signed int v14 = a2;
    }
    else {
      signed int v14 = 3;
    }
  }
}

uint64_t re::HashSetBase<re::StringID,re::StringID,re::internal::ValueAsKey<re::StringID>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::addAsCopy(uint64_t a1, unsigned int a2, unint64_t a3, int a4, StringID *a5)
{
  uint64_t v8 = *(unsigned int *)(a1 + 36);
  if (v8 == 0x7FFFFFFF)
  {
    uint64_t v8 = *(unsigned int *)(a1 + 32);
    int v9 = v8;
    if (v8 == *(_DWORD *)(a1 + 24))
    {
      re::HashSetBase<re::StringID,re::StringID,re::internal::ValueAsKey<re::StringID>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::setCapacity(a1, 2 * *(_DWORD *)(a1 + 28));
      a2 = a3 % *(unsigned int *)(a1 + 24);
      int v9 = *(_DWORD *)(a1 + 32);
    }
    *(_DWORD *)(a1 + 32) = v9 + 1;
    uint64_t v11 = *(void *)(a1 + 16);
    int v12 = *(_DWORD *)(v11 + 24 * v8);
  }
  else
  {
    uint64_t v11 = *(void *)(a1 + 16);
    int v12 = *(_DWORD *)(v11 + 24 * v8);
    *(_DWORD *)(a1 + 36) = v12 & 0x7FFFFFFF;
  }
  uint64_t v13 = 24 * v8;
  *(_DWORD *)(v11 + v13) = v12 | 0x80000000;
  *(_DWORD *)(*(void *)(a1 + 16) + v13) = *(_DWORD *)(*(void *)(a1 + 16) + 24 * v8) & 0x80000000 | *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2);
  re::StringID::StringID((re::StringID *)(*(void *)(a1 + 16) + 24 * v8 + 8), a5);
  *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2) = v8;
  ++*(_DWORD *)(a1 + 28);
  return v8;
}

uint64_t re::KeyValueStore::addOrReplaceValue<long long>(re::KeyValueStore *a1, const re::StringID *a2, void *a3)
{
  uint64_t v6 = (uint64_t)a1 + 8;
  unsigned int v7 = (const re::IntrospectionBase **)re::HashTable<re::StringID,re::StateParameterInt *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::tryGet((uint64_t)a1 + 8, a2);
  if (!v7) {
    goto LABEL_5;
  }
  uint64_t v8 = v7;
  int v9 = *v7;
  {
    signed int v14 = v9;
    int v9 = v14;
    if (v12)
    {
      re::introspect<long long>(void)::info = (uint64_t)re::introspect_int64_t(0, v13);
      int v9 = v14;
    }
  }
  if (v9 != (const re::IntrospectionBase *)re::introspect<long long>(void)::info)
  {
    re::HashTable<re::StringID,re::StateParameterInt *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::remove(v6, a2);
    re::KeyValueStore::removeValue(a1, *v8, a2);
LABEL_5:
    {
      {
        re::introspect<long long>(void)::info = (uint64_t)re::introspect_int64_t(0, v11);
      }
    }
    uint64_t v15 = re::introspect<long long>(void)::info;
    re::HashTable<re::StringID,re::IntrospectionBase const*,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::add(v6, (StringID *)a2, &v15);
    return re::HashTable<re::StringID,long long,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::add((uint64_t)a1 + 680, (StringID *)a2, a3);
  }
  return re::HashTable<re::StringID,long long,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::addOrReplace((uint64_t)a1 + 680, (StringID *)a2, a3);
}

uint64_t re::HashTable<re::StringID,long long,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::addOrReplace(uint64_t a1, StringID *a2, void *a3)
{
  unint64_t v6 = 0xBF58476D1CE4E5B9 * ((*(void *)&a2->var0 >> 31) ^ (*(void *)&a2->var0 >> 1));
  unint64_t v7 = (0x94D049BB133111EBLL * (v6 ^ (v6 >> 27))) ^ ((0x94D049BB133111EBLL * (v6 ^ (v6 >> 27))) >> 31);
  if (!*(void *)a1)
  {
    LODWORD(v8) = 0;
    goto LABEL_8;
  }
  unint64_t v8 = v7 % *(unsigned int *)(a1 + 24);
  uint64_t v9 = *(unsigned int *)(*(void *)(a1 + 8) + 4 * v8);
  if (v9 == 0x7FFFFFFF)
  {
LABEL_8:
    unsigned int v12 = re::HashTable<re::StringID,long long,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::addAsCopy(a1, v8, v7, a2, a3);
    ++*(_DWORD *)(a1 + 40);
    uint64_t v13 = *(void *)(a1 + 16) + 32 * v12;
    return v13 + 24;
  }
  uint64_t v10 = *(void *)(a1 + 16);
  while (1)
  {
    uint64_t v11 = v10 + 32 * v9;
    if (re::StringID::operator==((void *)(v11 + 8), a2)) {
      break;
    }
    uint64_t v9 = *(_DWORD *)(v10 + 32 * v9) & 0x7FFFFFFF;
    if (v9 == 0x7FFFFFFF) {
      goto LABEL_8;
    }
  }
  *(void *)(v11 + 24) = *a3;
  ++*(_DWORD *)(a1 + 40);
  uint64_t v13 = *(void *)(a1 + 16) + 32 * v9;
  return v13 + 24;
}

uint64_t re::HashTable<re::StringID,long long,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::add(uint64_t a1, StringID *a2, void *a3)
{
  unint64_t v6 = 0xBF58476D1CE4E5B9 * ((*(void *)&a2->var0 >> 31) ^ (*(void *)&a2->var0 >> 1));
  unint64_t v7 = (0x94D049BB133111EBLL * (v6 ^ (v6 >> 27))) ^ ((0x94D049BB133111EBLL * (v6 ^ (v6 >> 27))) >> 31);
  if (!*(void *)a1)
  {
    LODWORD(v8) = 0;
    goto LABEL_8;
  }
  unint64_t v8 = v7 % *(unsigned int *)(a1 + 24);
  uint64_t v9 = *(unsigned int *)(*(void *)(a1 + 8) + 4 * v8);
  if (v9 == 0x7FFFFFFF)
  {
LABEL_8:
    unsigned int v12 = re::HashTable<re::StringID,long long,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::addAsCopy(a1, v8, v7, a2, a3);
    ++*(_DWORD *)(a1 + 40);
    return *(void *)(a1 + 16) + 32 * v12 + 24;
  }
  uint64_t v10 = *(void *)(a1 + 16);
  while (1)
  {
    uint64_t v11 = v10 + 32 * v9;
    if (re::StringID::operator==((void *)(v11 + 8), a2)) {
      return v11 + 24;
    }
    uint64_t v9 = *(_DWORD *)(v10 + 32 * v9) & 0x7FFFFFFF;
    if (v9 == 0x7FFFFFFF) {
      goto LABEL_8;
    }
  }
}

uint64_t re::HashTable<re::StringID,long long,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::addAsCopy(uint64_t a1, unsigned int a2, unint64_t a3, StringID *a4, void *a5)
{
  uint64_t v9 = *(unsigned int *)(a1 + 36);
  if (v9 == 0x7FFFFFFF)
  {
    uint64_t v9 = *(unsigned int *)(a1 + 32);
    int v10 = v9;
    if (v9 == *(_DWORD *)(a1 + 24))
    {
      re::HashTable<re::StringID,long long,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::setCapacity(a1, 2 * *(_DWORD *)(a1 + 28));
      a2 = a3 % *(unsigned int *)(a1 + 24);
      int v10 = *(_DWORD *)(a1 + 32);
    }
    *(_DWORD *)(a1 + 32) = v10 + 1;
    uint64_t v12 = *(void *)(a1 + 16);
    int v13 = *(_DWORD *)(v12 + 32 * v9);
  }
  else
  {
    uint64_t v12 = *(void *)(a1 + 16);
    int v13 = *(_DWORD *)(v12 + 32 * v9);
    *(_DWORD *)(a1 + 36) = v13 & 0x7FFFFFFF;
  }
  uint64_t v14 = 32 * v9;
  *(_DWORD *)(v12 + v14) = v13 | 0x80000000;
  *(_DWORD *)(*(void *)(a1 + 16) + v14) = *(_DWORD *)(*(void *)(a1 + 16) + 32 * v9) & 0x80000000 | *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2);
  re::StringID::StringID((re::StringID *)(*(void *)(a1 + 16) + 32 * v9 + 8), a4);
  uint64_t v15 = *(void *)(a1 + 8);
  *(void *)(*(void *)(a1 + 16) + 32 * v9 + 24) = *a5;
  *(_DWORD *)(v15 + 4 * a2) = v9;
  ++*(_DWORD *)(a1 + 28);
  return v9;
}

void re::HashTable<re::StringID,long long,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::setCapacity(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = *(void *)a1;
  if (*(void *)a1)
  {
    if (a2 && *(_DWORD *)(a1 + 24) != a2 && *(_DWORD *)(a1 + 28) <= a2)
    {
      memset(v15, 0, 36);
      *(void *)&v15[36] = 0x7FFFFFFFLL;
      re::HashTable<re::StringID,unsigned int,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::init((uint64_t)v15, v4, a2);
      long long v5 = *(_OWORD *)v15;
      *(_OWORD *)uint64_t v15 = *(_OWORD *)a1;
      *(_OWORD *)a1 = v5;
      uint64_t v6 = *(void *)&v15[16];
      *(void *)&v15[16] = *(void *)(a1 + 16);
      *(void *)(a1 + 16) = v6;
      long long v8 = *(_OWORD *)&v15[24];
      *(_OWORD *)&v15[24] = *(_OWORD *)(a1 + 24);
      unsigned int v7 = *(_DWORD *)&v15[32];
      *(_OWORD *)(a1 + 24) = v8;
      unsigned int v9 = v7;
      if (v7)
      {
        uint64_t v10 = 0;
        unint64_t v11 = 0;
        do
        {
          if ((*(_DWORD *)(*(void *)&v15[16] + v10) & 0x80000000) != 0)
          {
            unint64_t v12 = 0xBF58476D1CE4E5B9
                * ((*(void *)(*(void *)&v15[16] + v10 + 8) >> 31) ^ (*(void *)(*(void *)&v15[16] + v10 + 8) >> 1));
            unint64_t v13 = (0x94D049BB133111EBLL * (v12 ^ (v12 >> 27))) ^ ((0x94D049BB133111EBLL * (v12 ^ (v12 >> 27))) >> 31);
            re::HashTable<re::StringID,long long,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::addAsCopy(a1, v13 % *(unsigned int *)(a1 + 24), v13, (StringID *)(*(void *)&v15[16] + v10 + 8));
            unsigned int v9 = *(_DWORD *)&v15[32];
          }
          ++v11;
          v10 += 32;
        }
        while (v11 < v9);
      }
      re::HashTable<re::StringID,re::DataArrayHandle<re::RigGraphOperatorDefinition>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)v15);
    }
  }
  else
  {
    if (a2) {
      signed int v14 = a2;
    }
    else {
      signed int v14 = 3;
    }
  }
}

uint64_t re::KeyValueStore::addOrReplaceValue<float>(re::KeyValueStore *a1, const re::StringID *a2, _DWORD *a3)
{
  uint64_t v6 = (uint64_t)a1 + 8;
  unsigned int v7 = (void **)re::HashTable<re::StringID,re::StateParameterInt *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::tryGet((uint64_t)a1 + 8, a2);
  if (!v7) {
    goto LABEL_5;
  }
  long long v8 = (const re::IntrospectionBase **)v7;
  unsigned int v9 = *v7;
  {
    signed int v14 = v9;
    unsigned int v9 = v14;
    if (v12)
    {
      re::introspect<float>(void)::info = re::introspect_float(0, v13);
      unsigned int v9 = v14;
    }
  }
  if (v9 != re::introspect<float>(void)::info)
  {
    re::HashTable<re::StringID,re::StateParameterInt *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::remove(v6, a2);
    re::KeyValueStore::removeValue(a1, *v8, a2);
LABEL_5:
    {
      {
        re::introspect<float>(void)::info = re::introspect_float(0, v11);
      }
    }
    uint64_t v15 = re::introspect<float>(void)::info;
    re::HashTable<re::StringID,re::IntrospectionBase const*,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::add(v6, (StringID *)a2, &v15);
    return re::HashTable<re::StringID,float,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::add((uint64_t)a1 + 104, (StringID *)a2, a3);
  }
  return re::HashTable<re::StringID,float,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::addOrReplace((uint64_t)a1 + 104, (StringID *)a2, a3);
}

uint64_t re::HashTable<re::StringID,float,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::addOrReplace(uint64_t a1, StringID *a2, _DWORD *a3)
{
  unint64_t v6 = 0xBF58476D1CE4E5B9 * ((*(void *)&a2->var0 >> 31) ^ (*(void *)&a2->var0 >> 1));
  unint64_t v7 = (0x94D049BB133111EBLL * (v6 ^ (v6 >> 27))) ^ ((0x94D049BB133111EBLL * (v6 ^ (v6 >> 27))) >> 31);
  if (!*(void *)a1)
  {
    LODWORD(v8) = 0;
    goto LABEL_8;
  }
  unint64_t v8 = v7 % *(unsigned int *)(a1 + 24);
  uint64_t v9 = *(unsigned int *)(*(void *)(a1 + 8) + 4 * v8);
  if (v9 == 0x7FFFFFFF)
  {
LABEL_8:
    unsigned int v12 = re::HashTable<re::StringID,float,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::addAsCopy(a1, v8, v7, a2, a3);
    ++*(_DWORD *)(a1 + 40);
    uint64_t v13 = *(void *)(a1 + 16) + 32 * v12;
    return v13 + 24;
  }
  uint64_t v10 = *(void *)(a1 + 16);
  while (1)
  {
    uint64_t v11 = v10 + 32 * v9;
    if (re::StringID::operator==((void *)(v11 + 8), a2)) {
      break;
    }
    uint64_t v9 = *(_DWORD *)(v10 + 32 * v9) & 0x7FFFFFFF;
    if (v9 == 0x7FFFFFFF) {
      goto LABEL_8;
    }
  }
  *(_DWORD *)(v11 + 24) = *a3;
  ++*(_DWORD *)(a1 + 40);
  uint64_t v13 = *(void *)(a1 + 16) + 32 * v9;
  return v13 + 24;
}

uint64_t re::HashTable<re::StringID,float,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::add(uint64_t a1, StringID *a2, _DWORD *a3)
{
  unint64_t v6 = 0xBF58476D1CE4E5B9 * ((*(void *)&a2->var0 >> 31) ^ (*(void *)&a2->var0 >> 1));
  unint64_t v7 = (0x94D049BB133111EBLL * (v6 ^ (v6 >> 27))) ^ ((0x94D049BB133111EBLL * (v6 ^ (v6 >> 27))) >> 31);
  if (!*(void *)a1)
  {
    LODWORD(v8) = 0;
    goto LABEL_8;
  }
  unint64_t v8 = v7 % *(unsigned int *)(a1 + 24);
  uint64_t v9 = *(unsigned int *)(*(void *)(a1 + 8) + 4 * v8);
  if (v9 == 0x7FFFFFFF)
  {
LABEL_8:
    unsigned int v12 = re::HashTable<re::StringID,float,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::addAsCopy(a1, v8, v7, a2, a3);
    ++*(_DWORD *)(a1 + 40);
    return *(void *)(a1 + 16) + 32 * v12 + 24;
  }
  uint64_t v10 = *(void *)(a1 + 16);
  while (1)
  {
    uint64_t v11 = v10 + 32 * v9;
    if (re::StringID::operator==((void *)(v11 + 8), a2)) {
      return v11 + 24;
    }
    uint64_t v9 = *(_DWORD *)(v10 + 32 * v9) & 0x7FFFFFFF;
    if (v9 == 0x7FFFFFFF) {
      goto LABEL_8;
    }
  }
}

uint64_t re::HashTable<re::StringID,float,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::addAsCopy(uint64_t a1, unsigned int a2, unint64_t a3, StringID *a4, _DWORD *a5)
{
  uint64_t v9 = *(unsigned int *)(a1 + 36);
  if (v9 == 0x7FFFFFFF)
  {
    uint64_t v9 = *(unsigned int *)(a1 + 32);
    int v10 = v9;
    if (v9 == *(_DWORD *)(a1 + 24))
    {
      re::HashTable<re::StringID,float,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::setCapacity(a1, 2 * *(_DWORD *)(a1 + 28));
      a2 = a3 % *(unsigned int *)(a1 + 24);
      int v10 = *(_DWORD *)(a1 + 32);
    }
    *(_DWORD *)(a1 + 32) = v10 + 1;
    uint64_t v12 = *(void *)(a1 + 16);
    int v13 = *(_DWORD *)(v12 + 32 * v9);
  }
  else
  {
    uint64_t v12 = *(void *)(a1 + 16);
    int v13 = *(_DWORD *)(v12 + 32 * v9);
    *(_DWORD *)(a1 + 36) = v13 & 0x7FFFFFFF;
  }
  uint64_t v14 = 32 * v9;
  *(_DWORD *)(v12 + v14) = v13 | 0x80000000;
  *(_DWORD *)(*(void *)(a1 + 16) + v14) = *(_DWORD *)(*(void *)(a1 + 16) + 32 * v9) & 0x80000000 | *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2);
  re::StringID::StringID((re::StringID *)(*(void *)(a1 + 16) + 32 * v9 + 8), a4);
  uint64_t v15 = *(void *)(a1 + 8);
  *(_DWORD *)(*(void *)(a1 + 16) + 32 * v9 + 24) = *a5;
  *(_DWORD *)(v15 + 4 * a2) = v9;
  ++*(_DWORD *)(a1 + 28);
  return v9;
}

void re::HashTable<re::StringID,float,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::setCapacity(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = *(void *)a1;
  if (*(void *)a1)
  {
    if (a2 && *(_DWORD *)(a1 + 24) != a2 && *(_DWORD *)(a1 + 28) <= a2)
    {
      memset(v15, 0, 36);
      *(void *)&v15[36] = 0x7FFFFFFFLL;
      re::HashTable<re::StringID,unsigned int,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::init((uint64_t)v15, v4, a2);
      long long v5 = *(_OWORD *)v15;
      *(_OWORD *)uint64_t v15 = *(_OWORD *)a1;
      *(_OWORD *)a1 = v5;
      uint64_t v6 = *(void *)&v15[16];
      *(void *)&v15[16] = *(void *)(a1 + 16);
      *(void *)(a1 + 16) = v6;
      long long v8 = *(_OWORD *)&v15[24];
      *(_OWORD *)&v15[24] = *(_OWORD *)(a1 + 24);
      unsigned int v7 = *(_DWORD *)&v15[32];
      *(_OWORD *)(a1 + 24) = v8;
      unsigned int v9 = v7;
      if (v7)
      {
        uint64_t v10 = 0;
        unint64_t v11 = 0;
        do
        {
          if ((*(_DWORD *)(*(void *)&v15[16] + v10) & 0x80000000) != 0)
          {
            unint64_t v12 = 0xBF58476D1CE4E5B9
                * ((*(void *)(*(void *)&v15[16] + v10 + 8) >> 31) ^ (*(void *)(*(void *)&v15[16] + v10 + 8) >> 1));
            unint64_t v13 = (0x94D049BB133111EBLL * (v12 ^ (v12 >> 27))) ^ ((0x94D049BB133111EBLL * (v12 ^ (v12 >> 27))) >> 31);
            re::HashTable<re::StringID,float,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::addAsCopy(a1, v13 % *(unsigned int *)(a1 + 24), v13, (StringID *)(*(void *)&v15[16] + v10 + 8));
            unsigned int v9 = *(_DWORD *)&v15[32];
          }
          ++v11;
          v10 += 32;
        }
        while (v11 < v9);
      }
      re::HashTable<re::StringID,re::DataArrayHandle<re::RigGraphOperatorDefinition>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)v15);
    }
  }
  else
  {
    if (a2) {
      signed int v14 = a2;
    }
    else {
      signed int v14 = 3;
    }
  }
}

void re::PhysicsDebugRenderer::drawCapsuleLines(uint64_t a1, float32x4_t *a2, __n128 *a3, float a4, float a5)
{
  float v8 = a5 * 0.5;
  LODWORD(v9) = 0;
  *((float *)&v9 + 1) = a5 * 0.5;
  _Q2 = a2[1];
  float32x4_t v11 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)_Q2, (int32x4_t)_Q2), (int8x16_t)_Q2, 0xCuLL);
  float32x4_t v12 = vnegq_f32(_Q2);
  v13.i64[0] = 0x8000000080000000;
  v13.i64[1] = 0x8000000080000000;
  int8x16_t v14 = (int8x16_t)vmlaq_f32(vmulq_f32(_Q2, v13), (float32x4_t)0, v11);
  float32x4_t v15 = vaddq_f32(_Q2, vmlaq_laneq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v14, (int32x4_t)v14), v14, 0xCuLL), (float32x4_t)0, _Q2, 3));
  float32x4_t v16 = vmulq_f32(_Q2, (float32x4_t)0);
  float32x4_t v138 = v15;
  float v140 = _Q2.f32[3]
       - vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v16, 2), vaddq_f32(v16, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v16.f32, 1))).f32[0];
  float32x4_t v17 = v15;
  v17.f32[3] = v140;
  float32x4_t v18 = v17;
  float32x4_t v142 = v17;
  float32x4_t v19 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v9, (int32x4_t)v9), (int8x16_t)v9, 0xCuLL), v12), (float32x4_t)v9, v11);
  int8x16_t v20 = (int8x16_t)vaddq_f32(v19, v19);
  float32x4_t v21 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v20, (int32x4_t)v20), v20, 0xCuLL);
  int8x16_t v22 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v21, (int32x4_t)v21), (int8x16_t)v21, 0xCuLL), v12), v21, v11);
  float32x4_t v23 = vmulq_f32(*a2, vaddq_f32(vaddq_f32((float32x4_t)v9, vmulq_laneq_f32(v21, _Q2, 3)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v22, (int32x4_t)v22), v22, 0xCuLL)));
  float32x4_t v24 = a2[2];
  float32x4_t v126 = vaddq_f32(v24, v23);
  float v130 = v8;
  v158[0] = *a2;
  v158[1] = v18;
  v158[2] = v126;
  v22.i32[0] = 0;
  *(float *)&v22.i32[1] = 0.0 - v8;
  int8x16_t v25 = (int8x16_t)vmlaq_f32(vmulq_f32(_Q2, (float32x4_t)xmmword_23437C080), (float32x4_t)xmmword_23435FD50, v11);
  float32x4_t v136 = vmlaq_f32(vmlaq_laneq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v25, (int32x4_t)v25), v25, 0xCuLL), (float32x4_t)xmmword_23435FD50, _Q2, 3), (float32x4_t)vdupq_n_s32(0xB33BBD2E), _Q2);
  _Q3 = vmulq_f32(_Q2, (float32x4_t)xmmword_23435FD50);
  _Q6 = vaddq_f32(_Q3, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)_Q3.f32, 1));
  _Q3.i32[0] = -1287930578;
  __asm { FMLA            S6, S3, V2.S[3] }
  float32x4_t v32 = v136;
  v32.i32[3] = _Q6.i32[0];
  float32x4_t v33 = v32;
  float32x4_t v132 = v32;
  int32x2_t v134 = *(int32x2_t *)_Q6.f32;
  float32x4_t v34 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v22.u64[0], (int32x4_t)v22.u64[0]), (int8x16_t)v22.u64[0], 0xCuLL), v12), (float32x4_t)v22.u64[0], v11);
  int8x16_t v35 = (int8x16_t)vaddq_f32(v34, v34);
  float32x4_t v36 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v35, (int32x4_t)v35), v35, 0xCuLL);
  int8x16_t v37 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v36, (int32x4_t)v36), (int8x16_t)v36, 0xCuLL), v12), v36, v11);
  float32x4_t v147 = v158[0];
  float32x4_t v122 = vaddq_f32(v24, vmulq_f32(v158[0], vaddq_f32(vaddq_f32((float32x4_t)v22.u64[0], vmulq_laneq_f32(v36, _Q2, 3)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v37, (int32x4_t)v37), v37, 0xCuLL))));
  v157[0] = v158[0];
  v157[1] = v33;
  v157[2] = v122;
  unint64_t v38 = a3 + 1;
  drawArc(a1, v158, a3 + 1, 16, 3.1416, a4);
  drawArc(a1, v157, v38, 16, 3.1416, a4);
  float32x4_t v39 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v138, (int32x4_t)v138), (int8x16_t)v138, 0xCuLL);
  int8x16_t v40 = (int8x16_t)vmlaq_f32(vmulq_f32(v138, (float32x4_t)xmmword_2343853B0), (float32x4_t)xmmword_2343853C0, v39);
  float32x4_t v120 = v39;
  float32x4_t v145 = (float32x4_t)vdupq_n_s32(0x3F3504F3u);
  float32x4_t v41 = vmlaq_f32(vmlaq_n_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v40, (int32x4_t)v40), v40, 0xCuLL), (float32x4_t)xmmword_2343853C0, v140), v145, v138);
  float32x4_t v42 = vmulq_f32(v142, (float32x4_t)xmmword_2343853C0);
  _S10 = 1060439283;
  v41.f32[3] = -(float)(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v42, 2), vaddq_f32(v42, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v42.f32, 1))).f32[0]- (float)(v140 * 0.70711));
  v42.i64[0] = 0x8000000080000000;
  v42.i64[1] = 0x8000000080000000;
  float32x4_t v44 = vmlaq_f32(vmulq_f32(v138, v42), (float32x4_t)0, v39);
  int8x16_t v45 = (int8x16_t)vaddq_f32(v44, v44);
  float32x4_t v46 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v45, (int32x4_t)v45), v45, 0xCuLL);
  int8x16_t v47 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v46, (int32x4_t)v46), (int8x16_t)v46, 0xCuLL), vnegq_f32(v138)), v46, v39);
  float32x4_t v127 = vaddq_f32(v126, vmulq_f32(v147, vaddq_f32(vaddq_f32(vmulq_n_f32(v46, v140), (float32x4_t)0), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v47, (int32x4_t)v47), v47, 0xCuLL))));
  float32x4_t v154 = v147;
  float32x4_t v155 = v41;
  float32x4_t v156 = v127;
  drawArc(a1, &v154, v38, 16, 3.1416, a4);
  float32x4_t v48 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v136, (int32x4_t)v136), (int8x16_t)v136, 0xCuLL);
  int8x16_t v49 = (int8x16_t)vmlaq_f32(vmulq_f32(v136, (float32x4_t)xmmword_2343853B0), (float32x4_t)xmmword_2343853C0, v48);
  float32x4_t v50 = vmlaq_f32(vmlaq_n_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v49, (int32x4_t)v49), v49, 0xCuLL), (float32x4_t)xmmword_2343853C0, *(float *)v134.i32), v145, v136);
  float32x4_t v51 = vmulq_f32(v132, (float32x4_t)xmmword_2343853C0);
  v50.f32[3] = -(float)(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v51, 2), vaddq_f32(v51, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v51.f32, 1))).f32[0]- (float)(*(float *)v134.i32 * 0.70711));
  v51.i64[0] = 0x8000000080000000;
  v51.i64[1] = 0x8000000080000000;
  float32x4_t v52 = vmlaq_f32(vmulq_f32(v136, v51), (float32x4_t)0, v48);
  int8x16_t v53 = (int8x16_t)vaddq_f32(v52, v52);
  float32x4_t v54 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v53, (int32x4_t)v53), v53, 0xCuLL);
  float32x4_t v118 = v48;
  int8x16_t v55 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v54, (int32x4_t)v54), (int8x16_t)v54, 0xCuLL), vnegq_f32(v136)), v54, v48);
  float32x4_t v154 = v147;
  float32x4_t v155 = v50;
  float32x4_t v123 = vaddq_f32(v122, vmulq_f32(v147, vaddq_f32(vaddq_f32(vmulq_n_f32(v54, *(float *)v134.i32), (float32x4_t)0), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v55, (int32x4_t)v55), v55, 0xCuLL))));
  float32x4_t v156 = v123;
  drawArc(a1, &v154, v38, 16, 3.1416, a4);
  int8x16_t v56 = (int8x16_t)vmlaq_f32(vmulq_f32(v138, (float32x4_t)xmmword_2343853D0), (float32x4_t)xmmword_2343853E0, v120);
  float32x4_t v57 = vmlaq_f32(vmlaq_n_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v56, (int32x4_t)v56), v56, 0xCuLL), (float32x4_t)xmmword_2343853E0, v140), v145, v138);
  float32x4_t v58 = vmulq_f32(v142, (float32x4_t)xmmword_2343853E0);
  v57.f32[3] = -(float)(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v58, 2), vaddq_f32(v58, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v58.f32, 1))).f32[0]- (float)(v140 * 0.70711));
  float32x4_t v154 = v147;
  float32x4_t v155 = v57;
  float32x4_t v156 = v127;
  drawArc(a1, &v154, v38, 16, 6.2832, a4);
  if (a5 != 0.0)
  {
    int8x16_t v59 = (int8x16_t)vmlaq_f32(vmulq_f32(v136, (float32x4_t)xmmword_2343853D0), (float32x4_t)xmmword_2343853E0, v118);
    float32x4_t v60 = vmulq_f32(v132, (float32x4_t)xmmword_2343853E0);
    float32x4_t v61 = vmlaq_f32(vmlaq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v59, (int32x4_t)v59), v59, 0xCuLL), (float32x4_t)xmmword_2343853E0, (float32x4_t)vdupq_lane_s32(v134, 0)), v145, v136);
    v61.f32[3] = -(float)(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v60, 2), vaddq_f32(v60, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v60.f32, 1))).f32[0]- (float)(*(float *)v134.i32 * 0.70711));
    float32x4_t v154 = v147;
    float32x4_t v155 = v61;
    float32x4_t v156 = v123;
    drawArc(a1, &v154, v38, 16, 6.2832, a4);
    *(float *)&unint64_t v62 = a4;
    float32x4_t v63 = (float32x4_t)LODWORD(a4);
    v63.f32[1] = -v130;
    *((float *)&v62 + 1) = v130;
    *(float *)&unint64_t v64 = -a4;
    float32x4_t v65 = (float32x4_t)COERCE_UNSIGNED_INT(-a4);
    v65.f32[1] = v130;
    *((float *)&v64 + 1) = -v130;
    float32x4_t v124 = (float32x4_t)v64;
    float32x4_t v128 = v65;
    float32x4_t v66 = a2[1];
    float32x4_t v133 = vmulq_f32(v63, *a2);
    float32x4_t v151 = *a2;
    float32x4_t v67 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v66, (int32x4_t)v66), (int8x16_t)v66, 0xCuLL);
    float32x4_t v137 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v133, (int32x4_t)v133), (int8x16_t)v133, 0xCuLL);
    float32x4_t v68 = vnegq_f32(v66);
    float32x4_t v69 = vmlaq_f32(vmulq_f32(v137, v68), v133, v67);
    int8x16_t v70 = (int8x16_t)vaddq_f32(v69, v69);
    float32x4_t v71 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v70, (int32x4_t)v70), v70, 0xCuLL);
    float32x4_t v141 = v66;
    float32x4_t v143 = v68;
    float32x4_t v139 = v67;
    int8x16_t v72 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v71, (int32x4_t)v71), (int8x16_t)v71, 0xCuLL), v68), v71, v67);
    float32x4_t v148 = a2[2];
    float32x4_t v154 = vaddq_f32(v148, vaddq_f32(vaddq_f32(v133, vmulq_laneq_f32(v71, v66, 3)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v72, (int32x4_t)v72), v72, 0xCuLL)));
    float32x4_t v131 = vmulq_f32((float32x4_t)v62, v151);
    float32x4_t v135 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v131, (int32x4_t)v131), (int8x16_t)v131, 0xCuLL);
    float32x4_t v73 = vmlaq_f32(vmulq_f32(v135, v68), v131, v67);
    int8x16_t v74 = (int8x16_t)vaddq_f32(v73, v73);
    float32x4_t v75 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v74, (int32x4_t)v74), v74, 0xCuLL);
    int8x16_t v76 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v75, (int32x4_t)v75), (int8x16_t)v75, 0xCuLL), v68), v75, v67);
    float32x4_t v153 = vaddq_f32(v148, vaddq_f32(vaddq_f32(v131, vmulq_laneq_f32(v75, v66, 3)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v76, (int32x4_t)v76), v76, 0xCuLL)));
    unint64_t v77 = re::PrimitiveRenderingContext::addLine(a1, &v154, &v153);
    re::PrimitiveRenderingDynamicGeometry::set<re::Vector4<float>,re::PrimitiveRenderingAttribute>(5, v77, v38, (_anonymous_namespace_ *)(a1 + 200), (unsigned char *)(a1 + 517), *(void *)(a1 + 136), *(void *)(a1 + 528), *(re **)(a1 + 1192));
    float32x4_t v121 = vmulq_f32(v128, v151);
    float32x4_t v129 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v121, (int32x4_t)v121), (int8x16_t)v121, 0xCuLL);
    float32x4_t v78 = vmlaq_f32(vmulq_f32(v129, v143), v121, v139);
    int8x16_t v79 = (int8x16_t)vaddq_f32(v78, v78);
    float32x4_t v80 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v79, (int32x4_t)v79), v79, 0xCuLL);
    int8x16_t v81 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v80, (int32x4_t)v80), (int8x16_t)v80, 0xCuLL), v143), v80, v139);
    float32x4_t v154 = vaddq_f32(v148, vaddq_f32(vaddq_f32(v121, vmulq_laneq_f32(v80, v141, 3)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v81, (int32x4_t)v81), v81, 0xCuLL)));
    float32x4_t v119 = vmulq_f32(v124, v151);
    float32x4_t v125 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v119, (int32x4_t)v119), (int8x16_t)v119, 0xCuLL);
    float32x4_t v82 = vmlaq_f32(vmulq_f32(v125, v143), v119, v139);
    int8x16_t v83 = (int8x16_t)vaddq_f32(v82, v82);
    float32x4_t v84 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v83, (int32x4_t)v83), v83, 0xCuLL);
    int8x16_t v85 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v84, (int32x4_t)v84), (int8x16_t)v84, 0xCuLL), v143), v84, v139);
    float32x4_t v153 = vaddq_f32(v148, vaddq_f32(vaddq_f32(v119, vmulq_laneq_f32(v84, v141, 3)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v85, (int32x4_t)v85), v85, 0xCuLL)));
    unint64_t v86 = re::PrimitiveRenderingContext::addLine(a1, &v154, &v153);
    re::PrimitiveRenderingDynamicGeometry::set<re::Vector4<float>,re::PrimitiveRenderingAttribute>(5, v86, v38, (_anonymous_namespace_ *)(a1 + 200), (unsigned char *)(a1 + 517), *(void *)(a1 + 136), *(void *)(a1 + 528), *(re **)(a1 + 1192));
    _V3.S[3] = v141.i32[3];
    int8x16_t v88 = (int8x16_t)vmlaq_f32(vmulq_f32(v141, (float32x4_t)xmmword_2343853B0), (float32x4_t)xmmword_2343853C0, v139);
    float32x4_t v89 = vmlaq_f32(vmlaq_laneq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v88, (int32x4_t)v88), v88, 0xCuLL), (float32x4_t)xmmword_2343853C0, v141, 3), v145, v141);
    __asm { FMLA            S1, S10, V3.S[3] }
    float v91 = _S1;
    v92.i64[0] = 0x8000000080000000;
    v92.i64[1] = 0x8000000080000000;
    float32x4_t v93 = vmlaq_f32(vmulq_f32(v141, v92), (float32x4_t)0, v139);
    int8x16_t v94 = (int8x16_t)vaddq_f32(v93, v93);
    float32x4_t v95 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v94, (int32x4_t)v94), v94, 0xCuLL);
    int8x16_t v96 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v95, (int32x4_t)v95), (int8x16_t)v95, 0xCuLL), v143), v95, v139);
    float32x4_t v97 = vaddq_f32(v148, vmulq_f32(v151, vaddq_f32(vaddq_f32(vmulq_laneq_f32(v95, v141, 3), (float32x4_t)0), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v96, (int32x4_t)v96), v96, 0xCuLL))));
    float v146 = v91;
    float32x4_t v149 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v89, (int32x4_t)v89), (int8x16_t)v89, 0xCuLL);
    float32x4_t v144 = vnegq_f32(v89);
    float32x4_t v98 = vmlaq_f32(vmulq_f32(v137, v144), v133, v149);
    int8x16_t v99 = (int8x16_t)vaddq_f32(v98, v98);
    float32x4_t v100 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v99, (int32x4_t)v99), v99, 0xCuLL);
    int8x16_t v101 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v100, (int32x4_t)v100), (int8x16_t)v100, 0xCuLL), v144), v100, v149);
    float32x4_t v102 = vaddq_f32(v97, vaddq_f32(vaddq_f32(v133, vmulq_n_f32(v100, v91)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v101, (int32x4_t)v101), v101, 0xCuLL)));
    float32x4_t v152 = v97;
    float32x4_t v103 = vmlaq_f32(vmulq_f32(v135, v144), v131, v149);
    int8x16_t v104 = (int8x16_t)vaddq_f32(v103, v103);
    float32x4_t v105 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v104, (int32x4_t)v104), v104, 0xCuLL);
    int8x16_t v106 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v105, (int32x4_t)v105), (int8x16_t)v105, 0xCuLL), v144), v105, v149);
    float32x4_t v153 = vaddq_f32(v97, vaddq_f32(vaddq_f32(v131, vmulq_n_f32(v105, v91)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v106, (int32x4_t)v106), v106, 0xCuLL)));
    float32x4_t v154 = v102;
    unint64_t v107 = re::PrimitiveRenderingContext::addLine(a1, &v154, &v153);
    re::PrimitiveRenderingDynamicGeometry::set<re::Vector4<float>,re::PrimitiveRenderingAttribute>(5, v107, v38, (_anonymous_namespace_ *)(a1 + 200), (unsigned char *)(a1 + 517), *(void *)(a1 + 136), *(void *)(a1 + 528), *(re **)(a1 + 1192));
    float32x4_t v108 = vmlaq_f32(vmulq_f32(v129, v144), v121, v149);
    int8x16_t v109 = (int8x16_t)vaddq_f32(v108, v108);
    float32x4_t v110 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v109, (int32x4_t)v109), v109, 0xCuLL);
    int8x16_t v111 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v110, (int32x4_t)v110), (int8x16_t)v110, 0xCuLL), v144), v110, v149);
    float32x4_t v112 = vaddq_f32(v152, vaddq_f32(vaddq_f32(v121, vmulq_n_f32(v110, v146)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v111, (int32x4_t)v111), v111, 0xCuLL)));
    float32x4_t v113 = vmlaq_f32(vmulq_f32(v125, v144), v119, v149);
    int8x16_t v114 = (int8x16_t)vaddq_f32(v113, v113);
    float32x4_t v115 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v114, (int32x4_t)v114), v114, 0xCuLL);
    int8x16_t v116 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v115, (int32x4_t)v115), (int8x16_t)v115, 0xCuLL), v144), v115, v149);
    float32x4_t v153 = vaddq_f32(v152, vaddq_f32(vaddq_f32(v119, vmulq_n_f32(v115, v146)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v116, (int32x4_t)v116), v116, 0xCuLL)));
    float32x4_t v154 = v112;
    unint64_t v117 = re::PrimitiveRenderingContext::addLine(a1, &v154, &v153);
    re::PrimitiveRenderingDynamicGeometry::set<re::Vector4<float>,re::PrimitiveRenderingAttribute>(5, v117, v38, (_anonymous_namespace_ *)(a1 + 200), (unsigned char *)(a1 + 517), *(void *)(a1 + 136), *(void *)(a1 + 528), *(re **)(a1 + 1192));
  }
}

void drawArc(uint64_t a1, float32x4_t *a2, __n128 *a3, int a4, float a5, float a6)
{
  int v6 = a4;
  __float2 v10 = __sincosf_stret((float)(a5 / (float)a4) * 0.5);
  float32x4_t v11 = (float32x4_t)LODWORD(a6);
  v12.i64[0] = 0;
  v12.i64[1] = LODWORD(v10.__sinval);
  float32x4_t v35 = vnegq_f32(v12);
  do
  {
    float32x4_t v13 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v11, (int32x4_t)v11), (int8x16_t)v11, 0xCuLL), v35), v11, (float32x4_t)LODWORD(v10.__sinval));
    int8x16_t v14 = (int8x16_t)vaddq_f32(v13, v13);
    float32x4_t v15 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v14, (int32x4_t)v14), v14, 0xCuLL);
    int8x16_t v16 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v15, (int32x4_t)v15), (int8x16_t)v15, 0xCuLL), v35), v15, (float32x4_t)LODWORD(v10.__sinval));
    float32x4_t v37 = vaddq_f32(vaddq_f32(v11, vmulq_n_f32(v15, v10.__cosval)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v16, (int32x4_t)v16), v16, 0xCuLL));
    float32x4_t v17 = *a2;
    float32x4_t v18 = a2[1];
    float32x4_t v19 = vmulq_f32(v11, *a2);
    float32x4_t v20 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v18, (int32x4_t)v18), (int8x16_t)v18, 0xCuLL);
    float32x4_t v21 = vnegq_f32(v18);
    float32x4_t v22 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v19, (int32x4_t)v19), (int8x16_t)v19, 0xCuLL), v21), v19, v20);
    int8x16_t v23 = (int8x16_t)vaddq_f32(v22, v22);
    float32x4_t v24 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v23, (int32x4_t)v23), v23, 0xCuLL);
    int8x16_t v25 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v24, (int32x4_t)v24), (int8x16_t)v24, 0xCuLL), v21), v24, v20);
    float32x4_t v26 = vaddq_f32(vaddq_f32(v19, vmulq_laneq_f32(v24, v18, 3)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v25, (int32x4_t)v25), v25, 0xCuLL));
    float32x4_t v27 = a2[2];
    float32x4_t v39 = vaddq_f32(v27, v26);
    float32x4_t v28 = vmulq_f32(v17, v37);
    float32x4_t v29 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v28, (int32x4_t)v28), (int8x16_t)v28, 0xCuLL), v21), v28, v20);
    int8x16_t v30 = (int8x16_t)vaddq_f32(v29, v29);
    float32x4_t v31 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v30, (int32x4_t)v30), v30, 0xCuLL);
    float32x4_t v32 = vaddq_f32(v28, vmulq_laneq_f32(v31, v18, 3));
    int8x16_t v33 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v31, (int32x4_t)v31), (int8x16_t)v31, 0xCuLL), v21), v31, v20);
    float32x4_t v38 = vaddq_f32(v27, vaddq_f32(v32, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v33, (int32x4_t)v33), v33, 0xCuLL)));
    unint64_t v34 = re::PrimitiveRenderingContext::addLine(a1, &v39, &v38);
    re::PrimitiveRenderingDynamicGeometry::set<re::Vector4<float>,re::PrimitiveRenderingAttribute>(5, v34, a3, (_anonymous_namespace_ *)(a1 + 200), (unsigned char *)(a1 + 517), *(void *)(a1 + 136), *(void *)(a1 + 528), *(re **)(a1 + 1192));
    float32x4_t v11 = v37;
    --v6;
  }
  while (v6);
}

void re::PhysicsDebugRenderer::drawCapsuleShape(uint64_t a1, float32x4_t *a2, __n128 *a3, int32x2_t a4, __n128 a5)
{
  _Q0 = a2[1];
  float32x4_t v9 = a2[2];
  _Q3 = (int8x16_t)vmlaq_f32(vmulq_f32(_Q0, (float32x4_t)xmmword_2343853F0), (float32x4_t)xmmword_234385400, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)_Q0, (int32x4_t)_Q0), (int8x16_t)_Q0, 0xCuLL));
  float32x4_t v33 = (float32x4_t)vdupq_n_s32(0x3F3504F3u);
  float32x4_t v11 = vmlaq_f32(vmlaq_laneq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)_Q3, (int32x4_t)_Q3), _Q3, 0xCuLL), (float32x4_t)xmmword_234385400, _Q0, 3), v33, _Q0);
  _S8 = 1060439283;
  __asm { FMLA            S3, S8, V0.S[3] }
  float32x4_t v17 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v11, (int32x4_t)v11), (int8x16_t)v11, 0xCuLL);
  float32x4_t v18 = vnegq_f32(v11);
  float32x4_t v19 = vmulq_f32(v11, (float32x4_t)xmmword_234385410);
  v11.i32[3] = _Q3.i32[0];
  float32x4_t v39 = v11;
  float32x4_t v20 = vmlaq_f32(v19, (float32x4_t)xmmword_234385420, v17);
  int8x16_t v21 = (int8x16_t)vaddq_f32(v20, v20);
  float32x4_t v22 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v21, (int32x4_t)v21), v21, 0xCuLL);
  float32x4_t v23 = vaddq_f32(vmulq_n_f32(v22, *(float *)_Q3.i32), (float32x4_t)xmmword_234385420);
  int8x16_t v24 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v22, (int32x4_t)v22), (int8x16_t)v22, 0xCuLL), v18), v22, v17);
  float32x4_t v34 = vmulq_n_f32(vaddq_f32(v23, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v24, (int32x4_t)v24), v24, 0xCuLL)), a5.n128_f32[0]);
  float32x4_t v38 = vsubq_f32(v9, v34);
  unint64_t v25 = re::PrimitiveRenderingContext::addShape<re::PrimitiveRenderingShape>(a1, 2u, &v38, &v39);
  __n128 v26 = a5;
  v26.n128_u32[1] = a4.i32[0];
  v26.n128_u32[2] = a4.i32[0];
  float32x4_t v38 = (float32x4_t)v26;
  re::PrimitiveRenderingContext::setAttribute<re::Vector3<float>,re::PrimitiveRenderingShape>(a1, v25, 2u, 2, (__n128 *)&v38);
  re::PrimitiveRenderingContext::setAttribute<re::Vector4<float>,re::PrimitiveRenderingShape>(a1, v25, 2u, 3, ++a3);
  float32x4_t v38 = vaddq_f32(a2[2], v34);
  unint64_t v27 = re::PrimitiveRenderingContext::addShape<re::PrimitiveRenderingShape>(a1, 7u, &v38, &v39);
  int32x4_t v36 = vdupq_lane_s32(a4, 0);
  float32x4_t v38 = (float32x4_t)v36;
  re::PrimitiveRenderingContext::setAttribute<re::Vector3<float>,re::PrimitiveRenderingShape>(a1, v27, 7u, 2, (__n128 *)&v38);
  re::PrimitiveRenderingContext::setAttribute<re::Vector4<float>,re::PrimitiveRenderingShape>(a1, v27, 7u, 3, a3);
  _Q0 = a2[1];
  _Q3 = (int8x16_t)vmlaq_f32(vmulq_f32(_Q0, (float32x4_t)xmmword_234385430), (float32x4_t)xmmword_234385440, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)_Q0, (int32x4_t)_Q0), (int8x16_t)_Q0, 0xCuLL));
  float32x4_t v30 = vmlaq_f32(vmlaq_laneq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)_Q3, (int32x4_t)_Q3), _Q3, 0xCuLL), (float32x4_t)xmmword_234385440, _Q0, 3), v33, _Q0);
  __asm { FMLA            S3, S8, V0.S[3] }
  v30.i32[3] = _Q3.i32[0];
  float32x4_t v37 = vsubq_f32(a2[2], v34);
  float32x4_t v38 = v30;
  unint64_t v31 = re::PrimitiveRenderingContext::addShape<re::PrimitiveRenderingShape>(a1, 7u, &v37, &v38);
  float32x4_t v37 = (float32x4_t)v36;
  re::PrimitiveRenderingContext::setAttribute<re::Vector3<float>,re::PrimitiveRenderingShape>(a1, v31, 7u, 2, (__n128 *)&v37);
  re::PrimitiveRenderingContext::setAttribute<re::Vector4<float>,re::PrimitiveRenderingShape>(a1, v31, 7u, 3, a3);
}

void re::PhysicsDebugRenderer::drawContacts(uint64_t a1, float32x4_t *a2, uint64_t a3, __n128 *a4)
{
  float v6 = a2->f32[0];
  if (a2->f32[0] < a2->f32[1]) {
    float v6 = a2->f32[1];
  }
  if (v6 >= a2->f32[2]) {
    float v7 = v6;
  }
  else {
    float v7 = a2->f32[2];
  }
  uint64_t v8 = *(unsigned int *)(a3 + 104);
  if (v8)
  {
    uint64_t v9 = 0;
    __float2 v10 = *(int **)(a3 + 88);
    while (1)
    {
      int v11 = *v10;
      v10 += 36;
      if (v11 < 0) {
        break;
      }
      if (v8 == ++v9)
      {
        LODWORD(v9) = *(_DWORD *)(a3 + 104);
        break;
      }
    }
  }
  else
  {
    LODWORD(v9) = 0;
  }
  if (v8 != v9)
  {
    uint64_t v12 = v9;
    float32x4_t v13 = a4 + 1;
    v14.i64[0] = 0x3F0000003F000000;
    v14.i64[1] = 0x3F0000003F000000;
    unsigned int v15 = *(_DWORD *)(a3 + 104);
    unsigned int v44 = v15;
    uint64_t v45 = a3;
    do
    {
      uint64_t v16 = *(void *)(a3 + 88) + 144 * v12;
      uint64_t v17 = *(void *)(v16 + 48);
      if (v17)
      {
        float32x4_t v18 = *(float32x4_t **)(v16 + 64);
        float32x4_t v19 = &v18[5 * v17];
        uint64_t v20 = 80 * v17;
        f32 = v18[4].f32;
        while (*f32 > 0.0)
        {
          float32x4_t v22 = vmulq_f32(*(float32x4_t *)(f32 - 4), *(float32x4_t *)(f32 - 4));
          if (vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v22, 2), vaddq_f32(v22, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v22.f32, 1))).f32[0] != 0.0)break; {
          f32 += 20;
          }
          v20 -= 80;
          if (!v20)
          {
            a3 = v45;
            goto LABEL_22;
          }
        }
        do
        {
          float32x4_t v23 = vmulq_f32(vaddq_f32(*v18, v18[1]), v14);
          float32x4_t v24 = a2[1];
          float32x4_t v25 = vmulq_f32(*a2, v23);
          float32x4_t v26 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v24, (int32x4_t)v24), (int8x16_t)v24, 0xCuLL);
          float32x4_t v27 = vnegq_f32(v24);
          float32x4_t v28 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v25, (int32x4_t)v25), (int8x16_t)v25, 0xCuLL), v27), v25, v26);
          int8x16_t v29 = (int8x16_t)vaddq_f32(v28, v28);
          float32x4_t v30 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v29, (int32x4_t)v29), v29, 0xCuLL);
          int8x16_t v31 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v30, (int32x4_t)v30), (int8x16_t)v30, 0xCuLL), v27), v30, v26);
          float32x4_t v46 = vaddq_f32(a2[2], vaddq_f32(vaddq_f32(v25, vmulq_laneq_f32(v30, v24, 3)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v31, (int32x4_t)v31), v31, 0xCuLL)));
          float32x4_t v32 = v18[2];
          float32x4_t v33 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v32, (int32x4_t)v32), (int8x16_t)v32, 0xCuLL), v27), v32, v26);
          int8x16_t v34 = (int8x16_t)vaddq_f32(v33, v33);
          float32x4_t v35 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v34, (int32x4_t)v34), v34, 0xCuLL);
          float32x4_t v36 = vaddq_f32(v32, vmulq_laneq_f32(v35, v24, 3));
          int8x16_t v37 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v35, (int32x4_t)v35), (int8x16_t)v35, 0xCuLL), v27), v35, v26);
          float32x4_t v38 = vaddq_f32(v36, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v37, (int32x4_t)v37), v37, 0xCuLL));
          float32x4_t v39 = vmulq_f32(v18[3], v18[3]);
          float32x4_t v47 = vaddq_f32(v46, vmulq_n_f32(v38, v7* sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v39, 2), vaddq_f32(v39, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v39.f32, 1))).f32[0])));
          unint64_t v40 = re::PrimitiveRenderingContext::addPoint(a1, &v46);
          re::PrimitiveRenderingDynamicGeometry::set<re::Vector4<float>,re::PrimitiveRenderingAttribute>(1, v40, v13, (_anonymous_namespace_ *)(a1 + 40), (unsigned char *)(a1 + 513), *(void *)(a1 + 16), *(void *)(a1 + 520), *(re **)(a1 + 1192));
          unint64_t v41 = re::PrimitiveRenderingContext::addLine(a1, &v46, &v47);
          re::PrimitiveRenderingDynamicGeometry::set<re::Vector4<float>,re::PrimitiveRenderingAttribute>(5, v41, v13, (_anonymous_namespace_ *)(a1 + 200), (unsigned char *)(a1 + 517), *(void *)(a1 + 136), *(void *)(a1 + 528), *(re **)(a1 + 1192));
          v14.i64[0] = 0x3F0000003F000000;
          v14.i64[1] = 0x3F0000003F000000;
          v18 += 5;
        }
        while (v18 != v19);
        LODWORD(v8) = v44;
        a3 = v45;
        unsigned int v15 = *(_DWORD *)(v45 + 104);
      }
LABEL_22:
      if (v15 <= (int)v9 + 1) {
        unsigned int v42 = v9 + 1;
      }
      else {
        unsigned int v42 = v15;
      }
      while (1)
      {
        uint64_t v12 = (v9 + 1);
        if (v42 - 1 == v9) {
          break;
        }
        LODWORD(v9) = v9 + 1;
        unsigned int v43 = v12;
        if ((*(_DWORD *)(*(void *)(a3 + 88) + 144 * v12) & 0x80000000) != 0) {
          goto LABEL_29;
        }
      }
      unsigned int v43 = v42;
LABEL_29:
      LODWORD(v9) = v43;
    }
    while (v8 != v43);
  }
}

void re::PhysicsDebugRenderer::drawTransformedShape(uint64_t a1, float32x4_t *a2, const void *a3, __n128 *a4)
{
  uint64_t v723 = *MEMORY[0x263EF8340];
  uint64_t v8 = (re *)(*(uint64_t (**)(const void *))(*(void *)a3 + 24))(a3);
  v695 = a2;
  switch((int)v8)
  {
    case 1:
      goto LABEL_36;
    case 2:
      (*(void (**)(void *))(*(void *)v9 + 64))(v9);
      v11.n128_u64[0] = 0;
      uint64_t v12 = a1;
      float32x4_t v13 = a2;
      goto LABEL_6;
    case 3:
      v17.i64[0] = (*(uint64_t (**)(void *))(*(void *)v14 + 64))(v14);
      v17.i64[1] = v16;
      if (a4->n128_u32[0] == 3)
      {
        v18.i64[0] = 0x3F0000003F000000;
        v18.i64[1] = 0x3F0000003F000000;
        float32x4_t v675 = vmulq_f32(v17, v18);
        v15.f32[0] = -v675.f32[0];
        float32x4_t v19 = v15;
        v19.i32[1] = v675.i32[1];
        float32x4_t v20 = v19;
        v20.f32[2] = -v675.f32[2];
        float32x4_t v21 = v20;
        float32x4_t v661 = v20;
        float32x4_t v22 = v675;
        v22.f32[2] = -v675.f32[2];
        float32x4_t v23 = v22;
        float32x4_t v664 = v22;
        v19.i32[2] = v675.i32[2];
        float32x4_t v689 = v19;
        float32x4_t v24 = v675;
        v24.f32[1] = -v675.f32[1];
        float32x4_t v25 = v24;
        v25.f32[2] = -v675.f32[2];
        v24.i32[2] = v675.i32[2];
        float32x4_t v681 = v24;
        v15.f32[1] = -v675.f32[1];
        float32x4_t v667 = vnegq_f32(v675);
        float32x4_t v669 = v25;
        v15.i32[2] = v675.i32[2];
        float32x4_t v696 = v15;
        float32x4_t v26 = *a2;
        float32x4_t v27 = a2[1];
        float32x4_t v28 = vmulq_f32(v21, *a2);
        float32x4_t v29 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v27, (int32x4_t)v27), (int8x16_t)v27, 0xCuLL);
        float32x4_t v30 = vnegq_f32(v27);
        float32x4_t v31 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v28, (int32x4_t)v28), (int8x16_t)v28, 0xCuLL), v30), v28, v29);
        int8x16_t v32 = (int8x16_t)vaddq_f32(v31, v31);
        float32x4_t v33 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v32, (int32x4_t)v32), v32, 0xCuLL);
        int8x16_t v34 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v33, (int32x4_t)v33), (int8x16_t)v33, 0xCuLL), v30), v33, v29);
        float32x4_t v35 = vaddq_f32(vaddq_f32(v28, vmulq_laneq_f32(v33, v27, 3)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v34, (int32x4_t)v34), v34, 0xCuLL));
        float32x4_t v36 = a2[2];
        *(float32x4_t *)buf = vaddq_f32(v36, v35);
        float32x4_t v37 = vmulq_f32(v23, v26);
        float32x4_t v38 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v37, (int32x4_t)v37), (int8x16_t)v37, 0xCuLL), v30), v37, v29);
        int8x16_t v39 = (int8x16_t)vaddq_f32(v38, v38);
        float32x4_t v40 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v39, (int32x4_t)v39), v39, 0xCuLL);
        float32x4_t v41 = vaddq_f32(v37, vmulq_laneq_f32(v40, v27, 3));
        int8x16_t v42 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v40, (int32x4_t)v40), (int8x16_t)v40, 0xCuLL), v30), v40, v29);
        *(float32x4_t *)v710 = vaddq_f32(v36, vaddq_f32(v41, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v42, (int32x4_t)v42), v42, 0xCuLL)));
        unsigned int v43 = a4 + 1;
        uint64_t v44 = a1;
        unint64_t v45 = re::PrimitiveRenderingContext::addLine(a1, buf, v710);
        float32x4_t v46 = (_anonymous_namespace_ *)(a1 + 200);
        float32x4_t v47 = (unsigned char *)(a1 + 517);
        re::PrimitiveRenderingDynamicGeometry::set<re::Vector4<float>,re::PrimitiveRenderingAttribute>(5, v45, v43, (_anonymous_namespace_ *)(v44 + 200), (unsigned char *)(v44 + 517), *(void *)(v44 + 136), *(void *)(v44 + 528), *(re **)(v44 + 1192));
        float32x4_t v48 = *a2;
        float32x4_t v49 = a2[1];
        float32x4_t v50 = vmulq_f32(v664, *a2);
        float32x4_t v51 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v49, (int32x4_t)v49), (int8x16_t)v49, 0xCuLL);
        float32x4_t v52 = vnegq_f32(v49);
        float32x4_t v53 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v50, (int32x4_t)v50), (int8x16_t)v50, 0xCuLL), v52), v50, v51);
        int8x16_t v54 = (int8x16_t)vaddq_f32(v53, v53);
        float32x4_t v55 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v54, (int32x4_t)v54), v54, 0xCuLL);
        int8x16_t v56 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v55, (int32x4_t)v55), (int8x16_t)v55, 0xCuLL), v52), v55, v51);
        float32x4_t v57 = vaddq_f32(vaddq_f32(v50, vmulq_laneq_f32(v55, v49, 3)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v56, (int32x4_t)v56), v56, 0xCuLL));
        float32x4_t v58 = a2[2];
        *(float32x4_t *)buf = vaddq_f32(v58, v57);
        float32x4_t v59 = vmulq_f32(v675, v48);
        float32x4_t v60 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v59, (int32x4_t)v59), (int8x16_t)v59, 0xCuLL), v52), v59, v51);
        int8x16_t v61 = (int8x16_t)vaddq_f32(v60, v60);
        float32x4_t v62 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v61, (int32x4_t)v61), v61, 0xCuLL);
        float32x4_t v63 = vaddq_f32(v59, vmulq_laneq_f32(v62, v49, 3));
        int8x16_t v64 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v62, (int32x4_t)v62), (int8x16_t)v62, 0xCuLL), v52), v62, v51);
        *(float32x4_t *)v710 = vaddq_f32(v58, vaddq_f32(v63, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v64, (int32x4_t)v64), v64, 0xCuLL)));
        unint64_t v65 = re::PrimitiveRenderingContext::addLine(a1, buf, v710);
        re::PrimitiveRenderingDynamicGeometry::set<re::Vector4<float>,re::PrimitiveRenderingAttribute>(5, v65, v43, (_anonymous_namespace_ *)(v44 + 200), (unsigned char *)(v44 + 517), *(void *)(v44 + 136), *(void *)(v44 + 528), *(re **)(v44 + 1192));
        float32x4_t v66 = *a2;
        float32x4_t v67 = a2[1];
        float32x4_t v68 = vmulq_f32(v675, *a2);
        float32x4_t v69 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v67, (int32x4_t)v67), (int8x16_t)v67, 0xCuLL);
        float32x4_t v70 = vnegq_f32(v67);
        float32x4_t v71 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v68, (int32x4_t)v68), (int8x16_t)v68, 0xCuLL), v70), v68, v69);
        int8x16_t v72 = (int8x16_t)vaddq_f32(v71, v71);
        float32x4_t v73 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v72, (int32x4_t)v72), v72, 0xCuLL);
        int8x16_t v74 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v73, (int32x4_t)v73), (int8x16_t)v73, 0xCuLL), v70), v73, v69);
        float32x4_t v75 = vaddq_f32(vaddq_f32(v68, vmulq_laneq_f32(v73, v67, 3)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v74, (int32x4_t)v74), v74, 0xCuLL));
        float32x4_t v76 = a2[2];
        *(float32x4_t *)buf = vaddq_f32(v76, v75);
        float32x4_t v77 = vmulq_f32(v689, v66);
        float32x4_t v78 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v77, (int32x4_t)v77), (int8x16_t)v77, 0xCuLL), v70), v77, v69);
        int8x16_t v79 = (int8x16_t)vaddq_f32(v78, v78);
        float32x4_t v80 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v79, (int32x4_t)v79), v79, 0xCuLL);
        float32x4_t v81 = vaddq_f32(v77, vmulq_laneq_f32(v80, v67, 3));
        int8x16_t v82 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v80, (int32x4_t)v80), (int8x16_t)v80, 0xCuLL), v70), v80, v69);
        *(float32x4_t *)v710 = vaddq_f32(v76, vaddq_f32(v81, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v82, (int32x4_t)v82), v82, 0xCuLL)));
        unint64_t v83 = re::PrimitiveRenderingContext::addLine(a1, buf, v710);
        re::PrimitiveRenderingDynamicGeometry::set<re::Vector4<float>,re::PrimitiveRenderingAttribute>(5, v83, v43, (_anonymous_namespace_ *)(v44 + 200), (unsigned char *)(v44 + 517), *(void *)(v44 + 136), *(void *)(v44 + 528), *(re **)(v44 + 1192));
        float32x4_t v84 = *a2;
        float32x4_t v85 = a2[1];
        float32x4_t v86 = vmulq_f32(v689, *a2);
        float32x4_t v87 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v85, (int32x4_t)v85), (int8x16_t)v85, 0xCuLL);
        float32x4_t v88 = vnegq_f32(v85);
        float32x4_t v89 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v86, (int32x4_t)v86), (int8x16_t)v86, 0xCuLL), v88), v86, v87);
        int8x16_t v90 = (int8x16_t)vaddq_f32(v89, v89);
        float32x4_t v91 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v90, (int32x4_t)v90), v90, 0xCuLL);
        int8x16_t v92 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v91, (int32x4_t)v91), (int8x16_t)v91, 0xCuLL), v88), v91, v87);
        float32x4_t v93 = vaddq_f32(vaddq_f32(v86, vmulq_laneq_f32(v91, v85, 3)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v92, (int32x4_t)v92), v92, 0xCuLL));
        float32x4_t v94 = a2[2];
        *(float32x4_t *)buf = vaddq_f32(v94, v93);
        float32x4_t v95 = vmulq_f32(v661, v84);
        float32x4_t v96 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v95, (int32x4_t)v95), (int8x16_t)v95, 0xCuLL), v88), v95, v87);
        int8x16_t v97 = (int8x16_t)vaddq_f32(v96, v96);
        float32x4_t v98 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v97, (int32x4_t)v97), v97, 0xCuLL);
        float32x4_t v99 = vaddq_f32(v95, vmulq_laneq_f32(v98, v85, 3));
        int8x16_t v100 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v98, (int32x4_t)v98), (int8x16_t)v98, 0xCuLL), v88), v98, v87);
        *(float32x4_t *)v710 = vaddq_f32(v94, vaddq_f32(v99, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v100, (int32x4_t)v100), v100, 0xCuLL)));
        unint64_t v101 = re::PrimitiveRenderingContext::addLine(a1, buf, v710);
        re::PrimitiveRenderingDynamicGeometry::set<re::Vector4<float>,re::PrimitiveRenderingAttribute>(5, v101, v43, (_anonymous_namespace_ *)(v44 + 200), (unsigned char *)(v44 + 517), *(void *)(v44 + 136), *(void *)(v44 + 528), *(re **)(v44 + 1192));
        float32x4_t v102 = *a2;
        float32x4_t v103 = a2[1];
        float32x4_t v104 = vmulq_f32(*a2, v667);
        float32x4_t v105 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v103, (int32x4_t)v103), (int8x16_t)v103, 0xCuLL);
        float32x4_t v106 = vnegq_f32(v103);
        float32x4_t v107 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v104, (int32x4_t)v104), (int8x16_t)v104, 0xCuLL), v106), v104, v105);
        int8x16_t v108 = (int8x16_t)vaddq_f32(v107, v107);
        float32x4_t v109 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v108, (int32x4_t)v108), v108, 0xCuLL);
        int8x16_t v110 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v109, (int32x4_t)v109), (int8x16_t)v109, 0xCuLL), v106), v109, v105);
        float32x4_t v111 = vaddq_f32(vaddq_f32(v104, vmulq_laneq_f32(v109, v103, 3)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v110, (int32x4_t)v110), v110, 0xCuLL));
        float32x4_t v112 = a2[2];
        *(float32x4_t *)buf = vaddq_f32(v112, v111);
        float32x4_t v113 = vmulq_f32(v669, v102);
        float32x4_t v114 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v113, (int32x4_t)v113), (int8x16_t)v113, 0xCuLL), v106), v113, v105);
        int8x16_t v115 = (int8x16_t)vaddq_f32(v114, v114);
        float32x4_t v116 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v115, (int32x4_t)v115), v115, 0xCuLL);
        float32x4_t v117 = vaddq_f32(v113, vmulq_laneq_f32(v116, v103, 3));
        int8x16_t v118 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v116, (int32x4_t)v116), (int8x16_t)v116, 0xCuLL), v106), v116, v105);
        *(float32x4_t *)v710 = vaddq_f32(v112, vaddq_f32(v117, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v118, (int32x4_t)v118), v118, 0xCuLL)));
        unint64_t v119 = re::PrimitiveRenderingContext::addLine(a1, buf, v710);
        re::PrimitiveRenderingDynamicGeometry::set<re::Vector4<float>,re::PrimitiveRenderingAttribute>(5, v119, v43, (_anonymous_namespace_ *)(v44 + 200), (unsigned char *)(v44 + 517), *(void *)(v44 + 136), *(void *)(v44 + 528), *(re **)(v44 + 1192));
        float32x4_t v120 = *a2;
        float32x4_t v121 = a2[1];
        float32x4_t v122 = vmulq_f32(v669, *a2);
        float32x4_t v123 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v121, (int32x4_t)v121), (int8x16_t)v121, 0xCuLL);
        float32x4_t v124 = vnegq_f32(v121);
        float32x4_t v125 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v122, (int32x4_t)v122), (int8x16_t)v122, 0xCuLL), v124), v122, v123);
        int8x16_t v126 = (int8x16_t)vaddq_f32(v125, v125);
        float32x4_t v127 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v126, (int32x4_t)v126), v126, 0xCuLL);
        int8x16_t v128 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v127, (int32x4_t)v127), (int8x16_t)v127, 0xCuLL), v124), v127, v123);
        float32x4_t v129 = vaddq_f32(vaddq_f32(v122, vmulq_laneq_f32(v127, v121, 3)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v128, (int32x4_t)v128), v128, 0xCuLL));
        float32x4_t v130 = a2[2];
        *(float32x4_t *)buf = vaddq_f32(v130, v129);
        float32x4_t v131 = vmulq_f32(v681, v120);
        float32x4_t v132 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v131, (int32x4_t)v131), (int8x16_t)v131, 0xCuLL), v124), v131, v123);
        int8x16_t v133 = (int8x16_t)vaddq_f32(v132, v132);
        float32x4_t v134 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v133, (int32x4_t)v133), v133, 0xCuLL);
        float32x4_t v135 = vaddq_f32(v131, vmulq_laneq_f32(v134, v121, 3));
        int8x16_t v136 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v134, (int32x4_t)v134), (int8x16_t)v134, 0xCuLL), v124), v134, v123);
        *(float32x4_t *)v710 = vaddq_f32(v130, vaddq_f32(v135, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v136, (int32x4_t)v136), v136, 0xCuLL)));
        unint64_t v137 = re::PrimitiveRenderingContext::addLine(a1, buf, v710);
        re::PrimitiveRenderingDynamicGeometry::set<re::Vector4<float>,re::PrimitiveRenderingAttribute>(5, v137, v43, (_anonymous_namespace_ *)(v44 + 200), (unsigned char *)(v44 + 517), *(void *)(v44 + 136), *(void *)(v44 + 528), *(re **)(v44 + 1192));
        float32x4_t v138 = *a2;
        float32x4_t v139 = a2[1];
        float32x4_t v140 = vmulq_f32(v681, *a2);
        float32x4_t v141 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v139, (int32x4_t)v139), (int8x16_t)v139, 0xCuLL);
        float32x4_t v142 = vnegq_f32(v139);
        float32x4_t v143 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v140, (int32x4_t)v140), (int8x16_t)v140, 0xCuLL), v142), v140, v141);
        int8x16_t v144 = (int8x16_t)vaddq_f32(v143, v143);
        float32x4_t v145 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v144, (int32x4_t)v144), v144, 0xCuLL);
        int8x16_t v146 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v145, (int32x4_t)v145), (int8x16_t)v145, 0xCuLL), v142), v145, v141);
        float32x4_t v147 = vaddq_f32(vaddq_f32(v140, vmulq_laneq_f32(v145, v139, 3)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v146, (int32x4_t)v146), v146, 0xCuLL));
        float32x4_t v148 = a2[2];
        *(float32x4_t *)buf = vaddq_f32(v148, v147);
        float32x4_t v149 = vmulq_f32(v696, v138);
        float32x4_t v150 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v149, (int32x4_t)v149), (int8x16_t)v149, 0xCuLL), v142), v149, v141);
        int8x16_t v151 = (int8x16_t)vaddq_f32(v150, v150);
        float32x4_t v152 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v151, (int32x4_t)v151), v151, 0xCuLL);
        float32x4_t v153 = vaddq_f32(v149, vmulq_laneq_f32(v152, v139, 3));
        int8x16_t v154 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v152, (int32x4_t)v152), (int8x16_t)v152, 0xCuLL), v142), v152, v141);
        *(float32x4_t *)v710 = vaddq_f32(v148, vaddq_f32(v153, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v154, (int32x4_t)v154), v154, 0xCuLL)));
        unint64_t v155 = re::PrimitiveRenderingContext::addLine(a1, buf, v710);
        re::PrimitiveRenderingDynamicGeometry::set<re::Vector4<float>,re::PrimitiveRenderingAttribute>(5, v155, v43, (_anonymous_namespace_ *)(v44 + 200), (unsigned char *)(v44 + 517), *(void *)(v44 + 136), *(void *)(v44 + 528), *(re **)(v44 + 1192));
        float32x4_t v156 = *a2;
        float32x4_t v157 = a2[1];
        float32x4_t v158 = vmulq_f32(v696, *a2);
        float32x4_t v159 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v157, (int32x4_t)v157), (int8x16_t)v157, 0xCuLL);
        float32x4_t v160 = vnegq_f32(v157);
        float32x4_t v161 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v158, (int32x4_t)v158), (int8x16_t)v158, 0xCuLL), v160), v158, v159);
        int8x16_t v162 = (int8x16_t)vaddq_f32(v161, v161);
        float32x4_t v163 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v162, (int32x4_t)v162), v162, 0xCuLL);
        int8x16_t v164 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v163, (int32x4_t)v163), (int8x16_t)v163, 0xCuLL), v160), v163, v159);
        float32x4_t v165 = vaddq_f32(vaddq_f32(v158, vmulq_laneq_f32(v163, v157, 3)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v164, (int32x4_t)v164), v164, 0xCuLL));
        float32x4_t v166 = a2[2];
        *(float32x4_t *)buf = vaddq_f32(v166, v165);
        float32x4_t v167 = vmulq_f32(v156, v667);
        float32x4_t v168 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v167, (int32x4_t)v167), (int8x16_t)v167, 0xCuLL), v160), v167, v159);
        int8x16_t v169 = (int8x16_t)vaddq_f32(v168, v168);
        float32x4_t v170 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v169, (int32x4_t)v169), v169, 0xCuLL);
        float32x4_t v171 = vaddq_f32(v167, vmulq_laneq_f32(v170, v157, 3));
        int8x16_t v172 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v170, (int32x4_t)v170), (int8x16_t)v170, 0xCuLL), v160), v170, v159);
        *(float32x4_t *)v710 = vaddq_f32(v166, vaddq_f32(v171, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v172, (int32x4_t)v172), v172, 0xCuLL)));
        unint64_t v173 = re::PrimitiveRenderingContext::addLine(a1, buf, v710);
        re::PrimitiveRenderingDynamicGeometry::set<re::Vector4<float>,re::PrimitiveRenderingAttribute>(5, v173, v43, (_anonymous_namespace_ *)(v44 + 200), (unsigned char *)(v44 + 517), *(void *)(v44 + 136), *(void *)(v44 + 528), *(re **)(v44 + 1192));
        float32x4_t v174 = *a2;
        float32x4_t v175 = a2[1];
        float32x4_t v176 = vmulq_f32(v661, *a2);
        float32x4_t v177 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v175, (int32x4_t)v175), (int8x16_t)v175, 0xCuLL);
        float32x4_t v178 = vnegq_f32(v175);
        float32x4_t v179 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v176, (int32x4_t)v176), (int8x16_t)v176, 0xCuLL), v178), v176, v177);
        int8x16_t v180 = (int8x16_t)vaddq_f32(v179, v179);
        float32x4_t v181 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v180, (int32x4_t)v180), v180, 0xCuLL);
        int8x16_t v182 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v181, (int32x4_t)v181), (int8x16_t)v181, 0xCuLL), v178), v181, v177);
        float32x4_t v183 = vaddq_f32(vaddq_f32(v176, vmulq_laneq_f32(v181, v175, 3)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v182, (int32x4_t)v182), v182, 0xCuLL));
        float32x4_t v184 = a2[2];
        *(float32x4_t *)buf = vaddq_f32(v184, v183);
        float32x4_t v185 = vmulq_f32(v174, v667);
        float32x4_t v186 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v185, (int32x4_t)v185), (int8x16_t)v185, 0xCuLL), v178), v185, v177);
        int8x16_t v187 = (int8x16_t)vaddq_f32(v186, v186);
        float32x4_t v188 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v187, (int32x4_t)v187), v187, 0xCuLL);
        float32x4_t v189 = vaddq_f32(v185, vmulq_laneq_f32(v188, v175, 3));
        int8x16_t v190 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v188, (int32x4_t)v188), (int8x16_t)v188, 0xCuLL), v178), v188, v177);
        *(float32x4_t *)v710 = vaddq_f32(v184, vaddq_f32(v189, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v190, (int32x4_t)v190), v190, 0xCuLL)));
        unint64_t v191 = re::PrimitiveRenderingContext::addLine(a1, buf, v710);
        re::PrimitiveRenderingDynamicGeometry::set<re::Vector4<float>,re::PrimitiveRenderingAttribute>(5, v191, v43, (_anonymous_namespace_ *)(v44 + 200), (unsigned char *)(v44 + 517), *(void *)(v44 + 136), *(void *)(v44 + 528), *(re **)(v44 + 1192));
        float32x4_t v192 = *a2;
        float32x4_t v193 = a2[1];
        float32x4_t v194 = vmulq_f32(v664, *a2);
        float32x4_t v195 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v193, (int32x4_t)v193), (int8x16_t)v193, 0xCuLL);
        float32x4_t v196 = vnegq_f32(v193);
        float32x4_t v197 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v194, (int32x4_t)v194), (int8x16_t)v194, 0xCuLL), v196), v194, v195);
        int8x16_t v198 = (int8x16_t)vaddq_f32(v197, v197);
        float32x4_t v199 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v198, (int32x4_t)v198), v198, 0xCuLL);
        int8x16_t v200 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v199, (int32x4_t)v199), (int8x16_t)v199, 0xCuLL), v196), v199, v195);
        float32x4_t v201 = vaddq_f32(vaddq_f32(v194, vmulq_laneq_f32(v199, v193, 3)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v200, (int32x4_t)v200), v200, 0xCuLL));
        float32x4_t v202 = a2[2];
        *(float32x4_t *)buf = vaddq_f32(v202, v201);
        float32x4_t v203 = vmulq_f32(v669, v192);
        float32x4_t v204 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v203, (int32x4_t)v203), (int8x16_t)v203, 0xCuLL), v196), v203, v195);
        int8x16_t v205 = (int8x16_t)vaddq_f32(v204, v204);
        float32x4_t v206 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v205, (int32x4_t)v205), v205, 0xCuLL);
        float32x4_t v207 = vaddq_f32(v203, vmulq_laneq_f32(v206, v193, 3));
        int8x16_t v208 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v206, (int32x4_t)v206), (int8x16_t)v206, 0xCuLL), v196), v206, v195);
        *(float32x4_t *)v710 = vaddq_f32(v202, vaddq_f32(v207, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v208, (int32x4_t)v208), v208, 0xCuLL)));
        unint64_t v209 = re::PrimitiveRenderingContext::addLine(a1, buf, v710);
        re::PrimitiveRenderingDynamicGeometry::set<re::Vector4<float>,re::PrimitiveRenderingAttribute>(5, v209, v43, (_anonymous_namespace_ *)(v44 + 200), (unsigned char *)(v44 + 517), *(void *)(v44 + 136), *(void *)(v44 + 528), *(re **)(v44 + 1192));
        float32x4_t v210 = *a2;
        float32x4_t v211 = a2[1];
        float32x4_t v212 = vmulq_f32(v675, *a2);
        float32x4_t v213 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v211, (int32x4_t)v211), (int8x16_t)v211, 0xCuLL);
        float32x4_t v214 = vnegq_f32(v211);
        float32x4_t v215 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v212, (int32x4_t)v212), (int8x16_t)v212, 0xCuLL), v214), v212, v213);
        int8x16_t v216 = (int8x16_t)vaddq_f32(v215, v215);
        float32x4_t v217 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v216, (int32x4_t)v216), v216, 0xCuLL);
        int8x16_t v218 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v217, (int32x4_t)v217), (int8x16_t)v217, 0xCuLL), v214), v217, v213);
        float32x4_t v219 = vaddq_f32(vaddq_f32(v212, vmulq_laneq_f32(v217, v211, 3)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v218, (int32x4_t)v218), v218, 0xCuLL));
        float32x4_t v220 = a2[2];
        *(float32x4_t *)buf = vaddq_f32(v220, v219);
        float32x4_t v221 = vmulq_f32(v681, v210);
        float32x4_t v222 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v221, (int32x4_t)v221), (int8x16_t)v221, 0xCuLL), v214), v221, v213);
        int8x16_t v223 = (int8x16_t)vaddq_f32(v222, v222);
        float32x4_t v224 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v223, (int32x4_t)v223), v223, 0xCuLL);
        float32x4_t v225 = vaddq_f32(v221, vmulq_laneq_f32(v224, v211, 3));
        int8x16_t v226 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v224, (int32x4_t)v224), (int8x16_t)v224, 0xCuLL), v214), v224, v213);
        *(float32x4_t *)v710 = vaddq_f32(v220, vaddq_f32(v225, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v226, (int32x4_t)v226), v226, 0xCuLL)));
        unint64_t v227 = re::PrimitiveRenderingContext::addLine(a1, buf, v710);
        re::PrimitiveRenderingDynamicGeometry::set<re::Vector4<float>,re::PrimitiveRenderingAttribute>(5, v227, v43, (_anonymous_namespace_ *)(v44 + 200), (unsigned char *)(v44 + 517), *(void *)(v44 + 136), *(void *)(v44 + 528), *(re **)(v44 + 1192));
        float32x4_t v228 = *a2;
        float32x4_t v229 = a2[1];
        float32x4_t v230 = vmulq_f32(v689, *a2);
        float32x4_t v231 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v229, (int32x4_t)v229), (int8x16_t)v229, 0xCuLL);
        float32x4_t v232 = vnegq_f32(v229);
        float32x4_t v233 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v230, (int32x4_t)v230), (int8x16_t)v230, 0xCuLL), v232), v230, v231);
        int8x16_t v234 = (int8x16_t)vaddq_f32(v233, v233);
        float32x4_t v235 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v234, (int32x4_t)v234), v234, 0xCuLL);
        int8x16_t v236 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v235, (int32x4_t)v235), (int8x16_t)v235, 0xCuLL), v232), v235, v231);
        float32x4_t v237 = vaddq_f32(vaddq_f32(v230, vmulq_laneq_f32(v235, v229, 3)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v236, (int32x4_t)v236), v236, 0xCuLL));
        float32x4_t v238 = a2[2];
        *(float32x4_t *)buf = vaddq_f32(v238, v237);
        float32x4_t v239 = v696;
        goto LABEL_33;
      }
      float32x4_t v702 = v17;
      unint64_t v574 = re::PrimitiveRenderingContext::addShape<re::PrimitiveRenderingShape>(a1, 0, (float32x4_t *)a2[2].f32, (float32x4_t *)a2[1].f32);
      v575.i64[0] = 0x3F0000003F000000;
      v575.i64[1] = 0x3F0000003F000000;
      *(float32x4_t *)buf = vmulq_f32(v702, v575);
      re::PrimitiveRenderingContext::setAttribute<re::Vector3<float>,re::PrimitiveRenderingShape>(a1, v574, 0, 2, (__n128 *)buf);
      v576 = a4 + 1;
      uint64_t v577 = a1;
      unint64_t v578 = v574;
      unsigned int v579 = 0;
      goto LABEL_58;
    case 4:
      float v241 = (*(float (**)(void *))(*(void *)v240 + 72))(v240);
      float v242 = (*(float (**)(void *))(*(void *)v240 + 64))(v240);
      (*(void (**)(void *))(*(void *)v240 + 72))(v240);
      v11.n128_f32[0] = v242 + (float)(*(float *)&v10 * -2.0);
      uint64_t v12 = a1;
      float32x4_t v13 = a2;
      *(float *)&double v10 = v241;
LABEL_6:
      drawCapsule(v12, v13, a4, v10, v11);
      return;
    case 5:
      unint64_t v244 = (*(uint64_t (**)(void *, void, void))(*(void *)v243 + 88))(v243, 0, 0);
      if (!v244) {
        return;
      }
      unint64_t v245 = v244;
      uint64_t v708 = 0;
      unint64_t v706 = 0;
      float32x4_t v705 = 0uLL;
      int v707 = 0;
      re::DynamicArray<unsigned short>::resize((uint64_t)&v705, v244);
      if (!v706) {
        goto LABEL_79;
      }
      (*(void (**)(void *, uint64_t, unint64_t))(*(void *)v243 + 88))(v243, v708, v245);
      unint64_t v246 = 0;
      v247 = a4 + 1;
      v248 = (_anonymous_namespace_ *)(a1 + 200);
      v249 = (unsigned char *)(a1 + 517);
      do
      {
        unint64_t v250 = v706;
        if (v706 <= v246)
        {
          uint64_t v709 = 0;
          long long v721 = 0u;
          long long v722 = 0u;
          float32x4_t v719 = 0u;
          float32x4_t v720 = 0u;
          *(_OWORD *)buf = 0u;
          os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
          *(_DWORD *)v711 = 136315906;
          *(void *)&v711[4] = "operator[]";
          __int16 v712 = 1024;
          int v713 = 789;
          __int16 v714 = 2048;
          uint64_t v715 = v246;
          __int16 v716 = 2048;
          unint64_t v717 = v250;
          _os_log_send_and_compose_impl();
          _os_crash_msg();
          __break(1u);
LABEL_77:
          uint64_t v709 = 0;
          long long v721 = 0u;
          long long v722 = 0u;
          float32x4_t v719 = 0u;
          float32x4_t v720 = 0u;
          *(_OWORD *)buf = 0u;
          os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
          *(_DWORD *)v711 = 136315906;
          *(void *)&v711[4] = "operator[]";
          __int16 v712 = 1024;
          int v713 = 789;
          __int16 v714 = 2048;
          uint64_t v715 = v4;
          __int16 v716 = 2048;
          unint64_t v717 = v250;
          _os_log_send_and_compose_impl();
          _os_crash_msg();
          __break(1u);
LABEL_78:
          uint64_t v709 = 0;
          long long v721 = 0u;
          long long v722 = 0u;
          float32x4_t v719 = 0u;
          float32x4_t v720 = 0u;
          *(_OWORD *)buf = 0u;
          os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
          *(_DWORD *)v711 = 136315906;
          *(void *)&v711[4] = "operator[]";
          __int16 v712 = 1024;
          int v713 = 789;
          __int16 v714 = 2048;
          uint64_t v715 = v4;
          __int16 v716 = 2048;
          unint64_t v717 = v250;
          _os_log_send_and_compose_impl();
          _os_crash_msg();
          __break(1u);
LABEL_79:
          *(void *)v711 = 0;
          long long v721 = 0u;
          long long v722 = 0u;
          float32x4_t v719 = 0u;
          float32x4_t v720 = 0u;
          *(_OWORD *)buf = 0u;
          os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
          *(_DWORD *)v710 = 136315906;
          *(void *)&v710[4] = "operator[]";
          *(_WORD *)&v710[12] = 1024;
          *(_DWORD *)&v710[14] = 789;
          *(_WORD *)&v710[18] = 2048;
          *(void *)&v710[20] = 0;
          *(_WORD *)&v710[28] = 2048;
          *(void *)&v710[30] = 0;
          _os_log_send_and_compose_impl();
          _os_crash_msg();
          __break(1u);
        }
        uint64_t v251 = *(unsigned __int16 *)(v708 + 2 * v246);
        uint64_t v252 = (*(uint64_t (**)(void *))(*(void *)v243 + 72))(v243);
        uint64_t v253 = (*(uint64_t (**)(void *))(*(void *)v243 + 64))(v243) + v252 * v251;
        v254.i64[0] = *(void *)v253;
        v254.i32[2] = *(_DWORD *)(v253 + 8);
        float32x4_t v255 = v695[1];
        float32x4_t v256 = vmulq_f32(*v695, v254);
        float32x4_t v257 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v255, (int32x4_t)v255), (int8x16_t)v255, 0xCuLL);
        float32x4_t v258 = vnegq_f32(v255);
        float32x4_t v259 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v256, (int32x4_t)v256), (int8x16_t)v256, 0xCuLL), v258), v256, v257);
        int8x16_t v260 = (int8x16_t)vaddq_f32(v259, v259);
        float32x4_t v261 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v260, (int32x4_t)v260), v260, 0xCuLL);
        float32x4_t v262 = vaddq_f32(v256, vmulq_laneq_f32(v261, v255, 3));
        int8x16_t v263 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v261, (int32x4_t)v261), (int8x16_t)v261, 0xCuLL), v258), v261, v257);
        *(float32x4_t *)v710 = vaddq_f32(v695[2], vaddq_f32(v262, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v263, (int32x4_t)v263), v263, 0xCuLL)));
        uint64_t v4 = v246 + 1;
        unint64_t v250 = v706;
        if (v706 <= v246 + 1) {
          goto LABEL_77;
        }
        uint64_t v264 = *(unsigned __int16 *)(v708 + 2 * v246 + 2);
        uint64_t v265 = (*(uint64_t (**)(void *))(*(void *)v243 + 72))(v243);
        uint64_t v266 = (*(uint64_t (**)(void *))(*(void *)v243 + 64))(v243) + v265 * v264;
        v267.i64[0] = *(void *)v266;
        v267.i32[2] = *(_DWORD *)(v266 + 8);
        float32x4_t v268 = v695[1];
        float32x4_t v269 = vmulq_f32(*v695, v267);
        float32x4_t v270 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v268, (int32x4_t)v268), (int8x16_t)v268, 0xCuLL);
        float32x4_t v271 = vnegq_f32(v268);
        float32x4_t v272 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v269, (int32x4_t)v269), (int8x16_t)v269, 0xCuLL), v271), v269, v270);
        int8x16_t v273 = (int8x16_t)vaddq_f32(v272, v272);
        float32x4_t v274 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v273, (int32x4_t)v273), v273, 0xCuLL);
        float32x4_t v275 = vaddq_f32(v269, vmulq_laneq_f32(v274, v268, 3));
        int8x16_t v276 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v274, (int32x4_t)v274), (int8x16_t)v274, 0xCuLL), v271), v274, v270);
        *(float32x4_t *)&v710[16] = vaddq_f32(v695[2], vaddq_f32(v275, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v276, (int32x4_t)v276), v276, 0xCuLL)));
        uint64_t v4 = v246 + 2;
        unint64_t v250 = v706;
        if (v706 <= v246 + 2) {
          goto LABEL_78;
        }
        uint64_t v277 = *(unsigned __int16 *)(v708 + 2 * v246 + 4);
        uint64_t v4 = (*(uint64_t (**)(void *))(*(void *)v243 + 72))(v243);
        uint64_t v278 = (*(uint64_t (**)(void *))(*(void *)v243 + 64))(v243) + v4 * v277;
        v279.i64[0] = *(void *)v278;
        v279.i32[2] = *(_DWORD *)(v278 + 8);
        float32x4_t v280 = v695[1];
        float32x4_t v281 = vmulq_f32(*v695, v279);
        float32x4_t v282 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v280, (int32x4_t)v280), (int8x16_t)v280, 0xCuLL);
        float32x4_t v283 = vnegq_f32(v280);
        float32x4_t v284 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v281, (int32x4_t)v281), (int8x16_t)v281, 0xCuLL), v283), v281, v282);
        int8x16_t v285 = (int8x16_t)vaddq_f32(v284, v284);
        float32x4_t v286 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v285, (int32x4_t)v285), v285, 0xCuLL);
        float32x4_t v287 = vaddq_f32(v281, vmulq_laneq_f32(v286, v280, 3));
        int8x16_t v288 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v286, (int32x4_t)v286), (int8x16_t)v286, 0xCuLL), v283), v286, v282);
        *(float32x4_t *)&v710[32] = vaddq_f32(v695[2], vaddq_f32(v287, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v288, (int32x4_t)v288), v288, 0xCuLL)));
        uint64_t v289 = a1;
        unint64_t v290 = re::PrimitiveRenderingContext::addLine(a1, v710, &v710[16]);
        re::PrimitiveRenderingDynamicGeometry::set<re::Vector4<float>,re::PrimitiveRenderingAttribute>(5, v290, v247, v248, v249, *(void *)(v289 + 136), *(void *)(v289 + 528), *(re **)(v289 + 1192));
        unint64_t v291 = re::PrimitiveRenderingContext::addLine(a1, &v710[16], &v710[32]);
        re::PrimitiveRenderingDynamicGeometry::set<re::Vector4<float>,re::PrimitiveRenderingAttribute>(5, v291, v247, v248, v249, *(void *)(v289 + 136), *(void *)(v289 + 528), *(re **)(v289 + 1192));
        unint64_t v292 = re::PrimitiveRenderingContext::addLine(a1, &v710[32], v710);
        __n128 v293 = re::PrimitiveRenderingDynamicGeometry::set<re::Vector4<float>,re::PrimitiveRenderingAttribute>(5, v292, v247, v248, v249, *(void *)(v289 + 136), *(void *)(v289 + 528), (re *)*(void *)(v289 + 1192));
        v246 += 3;
      }
      while (v246 < v245);
      if (v705.i64[0] && v708) {
        (*(void (**)(__n128))(*(void *)v705.i64[0] + 40))(v293);
      }
      return;
    case 6:
      v295 = (float32x4_t *)(*(uint64_t (**)(void *))(*(void *)v294 + 64))(v294);
      float32x2_t v296 = vrsqrte_f32((float32x2_t)1065353216);
      float32x2_t v297 = vmul_f32(v296, vrsqrts_f32((float32x2_t)1065353216, vmul_f32(v296, v296)));
      float32x4_t v298 = vmulq_n_f32((float32x4_t)xmmword_23435FD60, vmul_f32(v297, vrsqrts_f32((float32x2_t)1065353216, vmul_f32(v297, v297))).f32[0]);
      float32x4_t v299 = *v295;
      float32x4_t v300 = vmulq_f32(v299, v299);
      LODWORD(v301) = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v300, 2), vaddq_f32(v300, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v300.f32, 1))).u32[0];
      if (fabsf(v301) >= 1.0e-10)
      {
        float v302 = v301;
        float32x2_t v303 = vrsqrte_f32((float32x2_t)LODWORD(v301));
        float32x2_t v304 = vmul_f32(v303, vrsqrts_f32((float32x2_t)LODWORD(v302), vmul_f32(v303, v303)));
        float32x4_t v299 = vmulq_n_f32(v299, vmul_f32(v304, vrsqrts_f32((float32x2_t)LODWORD(v302), vmul_f32(v304, v304))).f32[0]);
      }
      float32x4_t v305 = vmulq_f32(v298, v299);
      float v306 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v305, 2), vaddq_f32(v305, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v305.f32, 1))).f32[0];
      if (v306 == -1.0
        || (float v307 = (float)((float)(fabsf(v306) + 1.0) + 1.0) * 0.00001, v308 = v306 + 1.0, fabsf(v308) < v307))
      {
        if (fabsf(v298.f32[2]) >= 0.00001)
        {
          v309.i32[0] = 0;
          v309.f32[1] = -v298.f32[2];
          v309.i64[1] = v298.u32[1];
        }
        else
        {
          float32x4_t v309 = (float32x4_t)vtrn1q_s32((int32x4_t)COERCE_UNSIGNED_INT(-v298.f32[1]), (int32x4_t)v298);
        }
        int32x4_t v601 = (int32x4_t)vmulq_f32(v309, v309);
        v601.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v601, 2), vadd_f32(*(float32x2_t *)v601.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v601.i8, 1))).u32[0];
        float32x2_t v602 = vrsqrte_f32((float32x2_t)v601.u32[0]);
        float32x2_t v603 = vmul_f32(v602, vrsqrts_f32((float32x2_t)v601.u32[0], vmul_f32(v602, v602)));
        float32x4_t v604 = vmulq_n_f32(v309, vmul_f32(v603, vrsqrts_f32((float32x2_t)v601.u32[0], vmul_f32(v603, v603))).f32[0]);
        float v605 = 0.0;
      }
      else
      {
        int8x16_t v646 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v299, (int32x4_t)v299), (int8x16_t)v299, 0xCuLL), vnegq_f32(v298)), v299, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v298, (int32x4_t)v298), (int8x16_t)v298, 0xCuLL));
        int8x16_t v647 = (int8x16_t)vuzp1q_s32((int32x4_t)v646, (int32x4_t)v646);
        float32x4_t v648 = (float32x4_t)vextq_s8(v647, v646, 0xCuLL);
        *(float *)v647.i32 = sqrtf(v308 + v308);
        float v605 = *(float *)v647.i32 * 0.5;
        float32x4_t v604 = vdivq_f32(v648, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v647.i8, 0));
      }
      float32x4_t v687 = v604;
      float v694 = v605;
      v606 = (float32x4_t *)(*(uint64_t (**)(void *))(*(void *)v294 + 64))(v294);
      float32x4_t v607 = vmulq_n_f32(*v606, (*(float (**)(void *))(*(void *)v294 + 72))(v294));
      _Q2 = a2[1];
      float32x4_t v609 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)_Q2, (int32x4_t)_Q2), (int8x16_t)_Q2, 0xCuLL);
      _S17 = v694;
      float32x4_t v611 = vnegq_f32(_Q2);
      int8x16_t v612 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v687, (int32x4_t)v687), (int8x16_t)v687, 0xCuLL), v611), v687, v609);
      float32x4_t v613 = vmlaq_n_f32(vmlaq_laneq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v612, (int32x4_t)v612), v612, 0xCuLL), v687, _Q2, 3), _Q2, v694);
      __asm { FMLA            S6, S17, V2.S[3] }
      v613.i32[3] = _S6;
      float32x4_t v615 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v607, (int32x4_t)v607), (int8x16_t)v607, 0xCuLL), v611), v607, v609);
      int8x16_t v616 = (int8x16_t)vaddq_f32(v615, v615);
      float32x4_t v617 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v616, (int32x4_t)v616), v616, 0xCuLL);
      float32x4_t v618 = vaddq_f32(v607, vmulq_laneq_f32(v617, _Q2, 3));
      int8x16_t v619 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v617, (int32x4_t)v617), (int8x16_t)v617, 0xCuLL), v611), v617, v609);
      _Q0 = (__n128)vaddq_f32(a2[2], vmulq_f32(*a2, vaddq_f32(v618, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v619, (int32x4_t)v619), v619, 0xCuLL))));
      *(float32x4_t *)buf = *a2;
      float32x4_t v719 = v613;
      float32x4_t v720 = (float32x4_t)_Q0;
      __asm { FMOV            V0.2S, #10.0 }
      *(void *)v710 = _Q0.n128_u64[0];
      v532 = (float32x4_t *)buf;
      v530 = (float32x2_t *)v710;
      uint64_t v531 = a1;
      goto LABEL_62;
    case 7:
      uint64_t v311 = v310[4];
      if (v311)
      {
        uint64_t v312 = 240 * v311;
        v313 = (int32x4_t *)(v310[5] + 128);
        do
        {
          _Q2 = v695[1];
          float32x4_t v315 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)_Q2, (int32x4_t)_Q2), (int8x16_t)_Q2, 0xCuLL);
          float32x4_t v316 = vnegq_f32(_Q2);
          int8x16_t v317 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(*v313, *v313), *(int8x16_t *)v313, 0xCuLL), v316), *(float32x4_t *)v313, v315);
          _S6 = HIDWORD(*(unsigned long long *)v313);
          float32x4_t v319 = vmlaq_laneq_f32(vmlaq_laneq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v317, (int32x4_t)v317), v317, 0xCuLL), *(float32x4_t *)v313, _Q2, 3), _Q2, *(float32x4_t *)v313, 3);
          __asm { FMLA            S0, S6, V2.S[3] }
          v319.i32[3] = _S0;
          float32x4_t v325 = (float32x4_t)v313[-1];
          float32x4_t v326 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v325, (int32x4_t)v325), (int8x16_t)v325, 0xCuLL), v316), v325, v315);
          int8x16_t v327 = (int8x16_t)vaddq_f32(v326, v326);
          float32x4_t v328 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v327, (int32x4_t)v327), v327, 0xCuLL);
          float32x4_t v329 = vaddq_f32(v325, vmulq_laneq_f32(v328, _Q2, 3));
          int8x16_t v330 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v328, (int32x4_t)v328), (int8x16_t)v328, 0xCuLL), v316), v328, v315);
          float32x4_t v331 = vaddq_f32(v695[2], vmulq_f32(*v695, vaddq_f32(v329, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v330, (int32x4_t)v330), v330, 0xCuLL))));
          *(float32x4_t *)buf = *v695;
          float32x4_t v719 = v319;
          float32x4_t v720 = v331;
          re::PhysicsDebugRenderer::drawTransformedShape(a1, buf, v313[-4].i64[0], a4);
          v313 += 15;
          v312 -= 240;
        }
        while (v312);
      }
      return;
    case 8:
      LODWORD(v697) = COERCE_UNSIGNED_INT64((*(double (**)(void *))(*(void *)v332 + 72))(v332));
      float v333 = (*(float (**)(void *))(*(void *)v332 + 64))(v332);
      *(float *)&long long v334 = v333;
      if (a4->n128_u32[0] == 3)
      {
        float v690 = v333 * 0.5;
        LODWORD(v335) = 0;
        *((float *)&v335 + 1) = v333 * 0.5;
        float32x4_t v336 = a2[1];
        float32x4_t v337 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v336, (int32x4_t)v336), (int8x16_t)v336, 0xCuLL);
        float32x4_t v338 = vnegq_f32(v336);
        v339.i64[0] = 0x8000000080000000;
        v339.i64[1] = 0x8000000080000000;
        v340.i64[0] = 0x8000000080000000;
        v340.i64[1] = 0x8000000080000000;
        int8x16_t v341 = (int8x16_t)vmlaq_f32(vmulq_f32(v336, v339), (float32x4_t)0, v337);
        float32x4_t v342 = vaddq_f32(v336, vmlaq_laneq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v341, (int32x4_t)v341), v341, 0xCuLL), (float32x4_t)0, v336, 3));
        float32x4_t v343 = vmulq_f32(v336, (float32x4_t)0);
        v343.i32[0] = vsubq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v336, 3), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v343, 2), vaddq_f32(v343, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v343.f32, 1)))).u32[0];
        float32x4_t v344 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v335, (int32x4_t)v335), (int8x16_t)v335, 0xCuLL), v338), (float32x4_t)v335, v337);
        int8x16_t v345 = (int8x16_t)vaddq_f32(v344, v344);
        float32x4_t v346 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v345, (int32x4_t)v345), v345, 0xCuLL);
        int8x16_t v347 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v346, (int32x4_t)v346), (int8x16_t)v346, 0xCuLL), v338), v346, v337);
        float32x4_t v348 = vaddq_f32(vaddq_f32((float32x4_t)v335, vmulq_laneq_f32(v346, v336, 3)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v347, (int32x4_t)v347), v347, 0xCuLL));
        float v682 = -(float)(*(float *)&v334 * 0.5);
        LODWORD(v349) = 0;
        *((float *)&v349 + 1) = v682;
        float32x4_t v350 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v349, (int32x4_t)v349), (int8x16_t)v349, 0xCuLL), v338), (float32x4_t)v349, v337);
        int8x16_t v351 = (int8x16_t)vaddq_f32(v350, v350);
        float32x4_t v352 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v351, (int32x4_t)v351), v351, 0xCuLL);
        float32x4_t v353 = vaddq_f32((float32x4_t)v349, vmulq_laneq_f32(v352, v336, 3));
        int8x16_t v354 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v352, (int32x4_t)v352), (int8x16_t)v352, 0xCuLL), v338), v352, v337);
        float32x4_t v355 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v342, (int32x4_t)v342), (int8x16_t)v342, 0xCuLL);
        float32x4_t v356 = vnegq_f32(v342);
        int8x16_t v357 = (int8x16_t)vmlaq_f32(vmulq_f32(v342, (float32x4_t)xmmword_2343853D0), (float32x4_t)xmmword_2343853E0, v355);
        float32x4_t v668 = (float32x4_t)vdupq_n_s32(0x3F3504F3u);
        float32x4_t v358 = vmlaq_f32(vmlaq_n_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v357, (int32x4_t)v357), v357, 0xCuLL), (float32x4_t)xmmword_2343853E0, v343.f32[0]), v668, v342);
        float32x4_t v359 = vmulq_f32(v342, v340);
        v342.i32[3] = v343.i32[0];
        float32x4_t v360 = vaddq_f32(v353, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v354, (int32x4_t)v354), v354, 0xCuLL));
        float32x4_t v361 = a2[2];
        float32x4_t v362 = vmulq_f32(v342, (float32x4_t)xmmword_2343853E0);
        float32x4_t v676 = vaddq_f32(v361, vmulq_f32(*a2, v360));
        _S9 = 1060439283;
        v358.i32[3] = vmlas_n_f32(-vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v362, 2), vaddq_f32(v362, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v362.f32, 1))).f32[0], 0.70711, v343.f32[0]);
        float32x4_t v670 = v358;
        float32x4_t v364 = vmlaq_f32(v359, (float32x4_t)0, v355);
        int8x16_t v365 = (int8x16_t)vaddq_f32(v364, v364);
        float32x4_t v366 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v365, (int32x4_t)v365), v365, 0xCuLL);
        int8x16_t v367 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v366, (int32x4_t)v366), (int8x16_t)v366, 0xCuLL), v356), v366, v355);
        float32x4_t v662 = vmulq_f32(*a2, vaddq_f32(vaddq_f32(vmulq_n_f32(v366, v343.f32[0]), (float32x4_t)0), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v367, (int32x4_t)v367), v367, 0xCuLL)));
        float32x4_t v368 = vaddq_f32(vaddq_f32(v361, vmulq_f32(*a2, v348)), v662);
        *(float32x4_t *)buf = *a2;
        long long v665 = *(_OWORD *)buf;
        float32x4_t v719 = v358;
        float32x4_t v720 = v368;
        v369 = a4 + 1;
        uint64_t v370 = a1;
        drawArc(a1, (float32x4_t *)buf, v369, 32, 6.2832, v697);
        *(_OWORD *)buf = v665;
        float32x4_t v719 = v670;
        float32x4_t v720 = vaddq_f32(v676, v662);
        drawArc(a1, (float32x4_t *)buf, v369, 32, 6.2832, v697);
        *(float *)&unint64_t v371 = v697;
        float32x4_t v372 = (float32x4_t)LODWORD(v697);
        v372.f32[1] = v682;
        *((float *)&v371 + 1) = v690;
        *(float *)&unint64_t v373 = -v697;
        float32x4_t v374 = (float32x4_t)COERCE_UNSIGNED_INT(-v697);
        v374.f32[1] = v690;
        *((float *)&v373 + 1) = v682;
        float32x4_t v655 = (float32x4_t)v373;
        float32x4_t v657 = v374;
        float32x4_t v375 = a2[1];
        float32x4_t v660 = vmulq_f32(v372, *a2);
        float32x4_t v698 = *a2;
        float32x4_t v376 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v375, (int32x4_t)v375), (int8x16_t)v375, 0xCuLL);
        float32x4_t v666 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v660, (int32x4_t)v660), (int8x16_t)v660, 0xCuLL);
        float32x4_t v377 = vnegq_f32(v375);
        float32x4_t v378 = vmlaq_f32(vmulq_f32(v666, v377), v660, v376);
        int8x16_t v379 = (int8x16_t)vaddq_f32(v378, v378);
        float32x4_t v380 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v379, (int32x4_t)v379), v379, 0xCuLL);
        float32x4_t v683 = v375;
        float32x4_t v691 = a2[2];
        int8x16_t v381 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v380, (int32x4_t)v380), (int8x16_t)v380, 0xCuLL), v377), v380, v376);
        float32x4_t v650 = vaddq_f32(v691, vaddq_f32(vaddq_f32(v660, vmulq_laneq_f32(v380, v375, 3)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v381, (int32x4_t)v381), v381, 0xCuLL)));
        *(float32x4_t *)buf = v650;
        float32x4_t v659 = vmulq_f32((float32x4_t)v371, v698);
        float32x4_t v663 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v659, (int32x4_t)v659), (int8x16_t)v659, 0xCuLL);
        float32x4_t v671 = v376;
        float32x4_t v677 = v377;
        float32x4_t v382 = vmlaq_f32(vmulq_f32(v663, v377), v659, v376);
        int8x16_t v383 = (int8x16_t)vaddq_f32(v382, v382);
        float32x4_t v384 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v383, (int32x4_t)v383), v383, 0xCuLL);
        int8x16_t v385 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v384, (int32x4_t)v384), (int8x16_t)v384, 0xCuLL), v377), v384, v376);
        float32x4_t v653 = vaddq_f32(v691, vaddq_f32(vaddq_f32(v659, vmulq_laneq_f32(v384, v375, 3)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v385, (int32x4_t)v385), v385, 0xCuLL)));
        *(float32x4_t *)v710 = v653;
        unint64_t v386 = re::PrimitiveRenderingContext::addLine(a1, buf, v710);
        re::PrimitiveRenderingDynamicGeometry::set<re::Vector4<float>,re::PrimitiveRenderingAttribute>(5, v386, v369, (_anonymous_namespace_ *)(v370 + 200), (unsigned char *)(v370 + 517), *(void *)(v370 + 136), *(void *)(v370 + 528), *(re **)(v370 + 1192));
        *(float32x4_t *)buf = v653;
        float32x4_t v654 = vmulq_f32(v657, v698);
        float32x4_t v658 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v654, (int32x4_t)v654), (int8x16_t)v654, 0xCuLL);
        float32x4_t v387 = vmlaq_f32(vmulq_f32(v658, v677), v654, v671);
        int8x16_t v388 = (int8x16_t)vaddq_f32(v387, v387);
        float32x4_t v389 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v388, (int32x4_t)v388), v388, 0xCuLL);
        int8x16_t v390 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v389, (int32x4_t)v389), (int8x16_t)v389, 0xCuLL), v677), v389, v671);
        float32x4_t v651 = vaddq_f32(v691, vaddq_f32(vaddq_f32(v654, vmulq_laneq_f32(v389, v683, 3)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v390, (int32x4_t)v390), v390, 0xCuLL)));
        *(float32x4_t *)v710 = v651;
        unint64_t v391 = re::PrimitiveRenderingContext::addLine(a1, buf, v710);
        re::PrimitiveRenderingDynamicGeometry::set<re::Vector4<float>,re::PrimitiveRenderingAttribute>(5, v391, v369, (_anonymous_namespace_ *)(v370 + 200), (unsigned char *)(v370 + 517), *(void *)(v370 + 136), *(void *)(v370 + 528), *(re **)(v370 + 1192));
        *(float32x4_t *)buf = v651;
        float32x4_t v652 = vmulq_f32(v655, v698);
        float32x4_t v656 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v652, (int32x4_t)v652), (int8x16_t)v652, 0xCuLL);
        float32x4_t v392 = vmlaq_f32(vmulq_f32(v656, v677), v652, v671);
        int8x16_t v393 = (int8x16_t)vaddq_f32(v392, v392);
        float32x4_t v394 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v393, (int32x4_t)v393), v393, 0xCuLL);
        int8x16_t v395 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v394, (int32x4_t)v394), (int8x16_t)v394, 0xCuLL), v677), v394, v671);
        float32x4_t v649 = vaddq_f32(v691, vaddq_f32(vaddq_f32(v652, vmulq_laneq_f32(v394, v683, 3)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v395, (int32x4_t)v395), v395, 0xCuLL)));
        *(float32x4_t *)v710 = v649;
        unint64_t v396 = re::PrimitiveRenderingContext::addLine(a1, buf, v710);
        re::PrimitiveRenderingDynamicGeometry::set<re::Vector4<float>,re::PrimitiveRenderingAttribute>(5, v396, v369, (_anonymous_namespace_ *)(v370 + 200), (unsigned char *)(v370 + 517), *(void *)(v370 + 136), *(void *)(v370 + 528), *(re **)(v370 + 1192));
        *(float32x4_t *)buf = v649;
        *(float32x4_t *)v710 = v650;
        unint64_t v397 = re::PrimitiveRenderingContext::addLine(a1, buf, v710);
        re::PrimitiveRenderingDynamicGeometry::set<re::Vector4<float>,re::PrimitiveRenderingAttribute>(5, v397, v369, (_anonymous_namespace_ *)(v370 + 200), (unsigned char *)(v370 + 517), *(void *)(v370 + 136), *(void *)(v370 + 528), *(re **)(v370 + 1192));
        _V3.S[3] = v683.i32[3];
        int8x16_t v399 = (int8x16_t)vmlaq_f32(vmulq_f32(v683, (float32x4_t)xmmword_2343853B0), (float32x4_t)xmmword_2343853C0, v671);
        float32x4_t v400 = vmlaq_f32(vmlaq_laneq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v399, (int32x4_t)v399), v399, 0xCuLL), (float32x4_t)xmmword_2343853C0, v683, 3), v668, v683);
        __asm { FMLA            S1, S9, V3.S[3] }
        float v402 = _S1;
        v403.i64[0] = 0x8000000080000000;
        v403.i64[1] = 0x8000000080000000;
        float32x4_t v404 = vmlaq_f32(vmulq_f32(v683, v403), (float32x4_t)0, v671);
        int8x16_t v405 = (int8x16_t)vaddq_f32(v404, v404);
        float32x4_t v406 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v405, (int32x4_t)v405), v405, 0xCuLL);
        int8x16_t v407 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v406, (int32x4_t)v406), (int8x16_t)v406, 0xCuLL), v677), v406, v671);
        float32x4_t v408 = vaddq_f32(v691, vmulq_f32(v698, vaddq_f32(vaddq_f32(vmulq_laneq_f32(v406, v683, 3), (float32x4_t)0), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v407, (int32x4_t)v407), v407, 0xCuLL))));
        float32x4_t v684 = vnegq_f32(v400);
        float32x4_t v692 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v400, (int32x4_t)v400), (int8x16_t)v400, 0xCuLL);
        float32x4_t v409 = vmlaq_f32(vmulq_f32(v666, v684), v660, v692);
        int8x16_t v410 = (int8x16_t)vaddq_f32(v409, v409);
        float32x4_t v411 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v410, (int32x4_t)v410), v410, 0xCuLL);
        v668.f32[0] = v402;
        int8x16_t v412 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v411, (int32x4_t)v411), (int8x16_t)v411, 0xCuLL), v684), v411, v692);
        float32x4_t v699 = v408;
        float32x4_t v678 = vaddq_f32(v408, vaddq_f32(vaddq_f32(v660, vmulq_n_f32(v411, v402)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v412, (int32x4_t)v412), v412, 0xCuLL)));
        *(float32x4_t *)buf = v678;
        float32x4_t v413 = vmlaq_f32(vmulq_f32(v663, v684), v659, v692);
        int8x16_t v414 = (int8x16_t)vaddq_f32(v413, v413);
        float32x4_t v415 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v414, (int32x4_t)v414), v414, 0xCuLL);
        int8x16_t v416 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v415, (int32x4_t)v415), (int8x16_t)v415, 0xCuLL), v684), v415, v692);
        float32x4_t v672 = vaddq_f32(v408, vaddq_f32(vaddq_f32(v659, vmulq_n_f32(v415, v402)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v416, (int32x4_t)v416), v416, 0xCuLL)));
        *(float32x4_t *)v710 = v672;
        unint64_t v417 = re::PrimitiveRenderingContext::addLine(a1, buf, v710);
        re::PrimitiveRenderingDynamicGeometry::set<re::Vector4<float>,re::PrimitiveRenderingAttribute>(5, v417, v369, (_anonymous_namespace_ *)(v370 + 200), (unsigned char *)(v370 + 517), *(void *)(v370 + 136), *(void *)(v370 + 528), *(re **)(v370 + 1192));
        *(float32x4_t *)buf = v672;
        float32x4_t v418 = vmlaq_f32(vmulq_f32(v658, v684), v654, v692);
        int8x16_t v419 = (int8x16_t)vaddq_f32(v418, v418);
        float32x4_t v420 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v419, (int32x4_t)v419), v419, 0xCuLL);
        int8x16_t v421 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v420, (int32x4_t)v420), (int8x16_t)v420, 0xCuLL), v684), v420, v692);
        float32x4_t v673 = vaddq_f32(v699, vaddq_f32(vaddq_f32(v654, vmulq_n_f32(v420, v668.f32[0])), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v421, (int32x4_t)v421), v421, 0xCuLL)));
        *(float32x4_t *)v710 = v673;
        unint64_t v422 = re::PrimitiveRenderingContext::addLine(a1, buf, v710);
        re::PrimitiveRenderingDynamicGeometry::set<re::Vector4<float>,re::PrimitiveRenderingAttribute>(5, v422, v369, (_anonymous_namespace_ *)(v370 + 200), (unsigned char *)(v370 + 517), *(void *)(v370 + 136), *(void *)(v370 + 528), *(re **)(v370 + 1192));
        *(float32x4_t *)buf = v673;
        float32x4_t v423 = vmlaq_f32(vmulq_f32(v656, v684), v652, v692);
        int8x16_t v424 = (int8x16_t)vaddq_f32(v423, v423);
        float32x4_t v425 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v424, (int32x4_t)v424), v424, 0xCuLL);
        int8x16_t v426 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v425, (int32x4_t)v425), (int8x16_t)v425, 0xCuLL), v684), v425, v692);
        float32x4_t v700 = vaddq_f32(v699, vaddq_f32(vaddq_f32(v652, vmulq_n_f32(v425, v668.f32[0])), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v426, (int32x4_t)v426), v426, 0xCuLL)));
        *(float32x4_t *)v710 = v700;
        unint64_t v427 = re::PrimitiveRenderingContext::addLine(a1, buf, v710);
        re::PrimitiveRenderingDynamicGeometry::set<re::Vector4<float>,re::PrimitiveRenderingAttribute>(5, v427, v369, (_anonymous_namespace_ *)(v370 + 200), (unsigned char *)(v370 + 517), *(void *)(v370 + 136), *(void *)(v370 + 528), *(re **)(v370 + 1192));
        *(float32x4_t *)buf = v700;
        *(float32x4_t *)v710 = v678;
        unint64_t v428 = re::PrimitiveRenderingContext::addLine(a1, buf, v710);
        uint64_t v429 = *(void *)(a1 + 528);
        uint64_t v430 = *(void *)(a1 + 136);
        v431 = *(re **)(a1 + 1192);
        uint64_t v432 = 5;
        v433 = v369;
        v434 = (_anonymous_namespace_ *)(a1 + 200);
        v435 = (unsigned char *)(a1 + 517);
        goto LABEL_54;
      }
      _Q0 = a2[1];
      float32x4_t v581 = a2[2];
      _Q3 = (int8x16_t)vmlaq_f32(vmulq_f32(_Q0, (float32x4_t)xmmword_2343853F0), (float32x4_t)xmmword_234385400, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)_Q0, (int32x4_t)_Q0), (int8x16_t)_Q0, 0xCuLL));
      float32x4_t v583 = vmlaq_f32(vmlaq_laneq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)_Q3, (int32x4_t)_Q3), _Q3, 0xCuLL), (float32x4_t)xmmword_234385400, _Q0, 3), (float32x4_t)vdupq_n_s32(0x3F3504F3u), _Q0);
      _S4 = 1060439283;
      __asm { FMLA            S3, S4, V0.S[3] }
      float32x4_t v585 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v583, (int32x4_t)v583), (int8x16_t)v583, 0xCuLL);
      float32x4_t v586 = vnegq_f32(v583);
      float32x4_t v587 = vmulq_f32(v583, (float32x4_t)xmmword_234385410);
      v583.i32[3] = _Q3.i32[0];
      *(float32x4_t *)buf = v583;
      float32x4_t v588 = vmlaq_f32(v587, (float32x4_t)xmmword_234385420, v585);
      int8x16_t v589 = (int8x16_t)vaddq_f32(v588, v588);
      float32x4_t v590 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v589, (int32x4_t)v589), v589, 0xCuLL);
      float32x4_t v591 = vaddq_f32(vmulq_n_f32(v590, *(float *)_Q3.i32), (float32x4_t)xmmword_234385420);
      int8x16_t v592 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v590, (int32x4_t)v590), (int8x16_t)v590, 0xCuLL), v586), v590, v585);
      *(float32x4_t *)v710 = vsubq_f32(v581, vmulq_n_f32(vaddq_f32(v591, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v592, (int32x4_t)v592), v592, 0xCuLL)), *(float *)&v334));
      long long v693 = v334;
      unint64_t v593 = re::PrimitiveRenderingContext::addShape<re::PrimitiveRenderingShape>(a1, 2u, v710, buf);
      long long v594 = v693;
      *((float *)&v594 + 1) = v697;
      *((float *)&v594 + 2) = v697;
      *(_OWORD *)v710 = v594;
      re::PrimitiveRenderingContext::setAttribute<re::Vector3<float>,re::PrimitiveRenderingShape>(a1, v593, 2u, 2, (__n128 *)v710);
      v576 = a4 + 1;
      uint64_t v577 = a1;
      unint64_t v578 = v593;
      unsigned int v579 = 2;
      goto LABEL_58;
    case 9:
      v688.i64[0] = (*(double (**)(void *))(*(void *)v436 + 72))(v436);
      (*(void (**)(void *))(*(void *)v436 + 64))(v436);
      if (a4->n128_u32[0] == 3)
      {
        _Q2 = a2[1];
        float32x4_t v439 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)_Q2, (int32x4_t)_Q2), (int8x16_t)_Q2, 0xCuLL);
        float32x4_t v440 = vnegq_f32(_Q2);
        int8x16_t v441 = (int8x16_t)vmlaq_f32(vmulq_f32(_Q2, (float32x4_t)xmmword_2343853D0), (float32x4_t)xmmword_2343853E0, v439);
        float32x4_t v442 = vmlaq_f32(vmlaq_laneq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v441, (int32x4_t)v441), v441, 0xCuLL), (float32x4_t)xmmword_2343853E0, _Q2, 3), (float32x4_t)vdupq_n_s32(0x3F3504F3u), _Q2);
        _S7 = 1060439283;
        __asm { FMLA            S6, S7, V2.S[3] }
        v442.i32[3] = _S6;
        float32x4_t v445 = a2[2];
        *(float32x4_t *)buf = *a2;
        float32x4_t v719 = v442;
        v442.i32[0] = 0;
        v442.f32[1] = *(float *)&v437 * 0.5;
        float32x4_t v701 = (float32x4_t)v442.u64[0];
        unsigned int v43 = a4 + 1;
        float32x4_t v446 = v688;
        v446.f32[1] = *(float *)&v437 * 0.5;
        float32x4_t v679 = vnegq_f32(v446);
        float32x4_t v447 = v679;
        v447.i32[0] = 0;
        float32x4_t v685 = v447;
        v447.i32[2] = 0;
        float32x4_t v448 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v447, (int32x4_t)v447), (int8x16_t)v447, 0xCuLL), v440), v447, v439);
        int8x16_t v449 = (int8x16_t)vaddq_f32(v448, v448);
        float32x4_t v450 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v449, (int32x4_t)v449), v449, 0xCuLL);
        float32x4_t v451 = vaddq_f32(v447, vmulq_laneq_f32(v450, _Q2, 3));
        int8x16_t v452 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v450, (int32x4_t)v450), (int8x16_t)v450, 0xCuLL), v440), v450, v439);
        float32x4_t v720 = vaddq_f32(v445, vmulq_f32(*(float32x4_t *)buf, vaddq_f32(v451, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v452, (int32x4_t)v452), v452, 0xCuLL))));
        uint64_t v44 = a1;
        drawArc(a1, (float32x4_t *)buf, v43, 32, 6.2832, v688.f32[0]);
        float32x4_t v454 = (float32x4_t)v688.u32[0];
        float32x4_t v453 = v679;
        v454.i32[1] = v679.i32[1];
        float32x4_t v455 = v685;
        float32x4_t v456 = v685;
        v456.i32[2] = v679.i32[0];
        v453.i32[2] = 0;
        float32x4_t v674 = v456;
        float32x4_t v680 = v453;
        v455.i32[2] = v688.i32[0];
        float32x4_t v686 = v455;
        float32x4_t v457 = *a2;
        float32x4_t v458 = a2[1];
        float32x4_t v459 = vmulq_f32(v701, *a2);
        float32x4_t v460 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v458, (int32x4_t)v458), (int8x16_t)v458, 0xCuLL);
        float32x4_t v461 = vnegq_f32(v458);
        float32x4_t v462 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v459, (int32x4_t)v459), (int8x16_t)v459, 0xCuLL), v461), v459, v460);
        int8x16_t v463 = (int8x16_t)vaddq_f32(v462, v462);
        float32x4_t v464 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v463, (int32x4_t)v463), v463, 0xCuLL);
        int8x16_t v465 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v464, (int32x4_t)v464), (int8x16_t)v464, 0xCuLL), v461), v464, v460);
        float32x4_t v466 = vaddq_f32(vaddq_f32(v459, vmulq_laneq_f32(v464, v458, 3)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v465, (int32x4_t)v465), v465, 0xCuLL));
        float32x4_t v467 = a2[2];
        *(float32x4_t *)buf = vaddq_f32(v467, v466);
        float32x4_t v468 = vmulq_f32(v454, v457);
        float32x4_t v469 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v468, (int32x4_t)v468), (int8x16_t)v468, 0xCuLL), v461), v468, v460);
        int8x16_t v470 = (int8x16_t)vaddq_f32(v469, v469);
        float32x4_t v471 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v470, (int32x4_t)v470), v470, 0xCuLL);
        float32x4_t v472 = vaddq_f32(v468, vmulq_laneq_f32(v471, v458, 3));
        int8x16_t v473 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v471, (int32x4_t)v471), (int8x16_t)v471, 0xCuLL), v461), v471, v460);
        *(float32x4_t *)v710 = vaddq_f32(v467, vaddq_f32(v472, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v473, (int32x4_t)v473), v473, 0xCuLL)));
        unint64_t v474 = re::PrimitiveRenderingContext::addLine(a1, buf, v710);
        float32x4_t v46 = (_anonymous_namespace_ *)(a1 + 200);
        float32x4_t v47 = (unsigned char *)(a1 + 517);
        re::PrimitiveRenderingDynamicGeometry::set<re::Vector4<float>,re::PrimitiveRenderingAttribute>(5, v474, v43, (_anonymous_namespace_ *)(v44 + 200), (unsigned char *)(v44 + 517), *(void *)(v44 + 136), *(void *)(v44 + 528), *(re **)(v44 + 1192));
        float32x4_t v475 = *a2;
        float32x4_t v476 = a2[1];
        float32x4_t v477 = vmulq_f32(v701, *a2);
        float32x4_t v478 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v476, (int32x4_t)v476), (int8x16_t)v476, 0xCuLL);
        float32x4_t v479 = vnegq_f32(v476);
        float32x4_t v480 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v477, (int32x4_t)v477), (int8x16_t)v477, 0xCuLL), v479), v477, v478);
        int8x16_t v481 = (int8x16_t)vaddq_f32(v480, v480);
        float32x4_t v482 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v481, (int32x4_t)v481), v481, 0xCuLL);
        int8x16_t v483 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v482, (int32x4_t)v482), (int8x16_t)v482, 0xCuLL), v479), v482, v478);
        float32x4_t v484 = vaddq_f32(vaddq_f32(v477, vmulq_laneq_f32(v482, v476, 3)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v483, (int32x4_t)v483), v483, 0xCuLL));
        float32x4_t v485 = a2[2];
        *(float32x4_t *)buf = vaddq_f32(v485, v484);
        float32x4_t v486 = vmulq_f32(v674, v475);
        float32x4_t v487 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v486, (int32x4_t)v486), (int8x16_t)v486, 0xCuLL), v479), v486, v478);
        int8x16_t v488 = (int8x16_t)vaddq_f32(v487, v487);
        float32x4_t v489 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v488, (int32x4_t)v488), v488, 0xCuLL);
        float32x4_t v490 = vaddq_f32(v486, vmulq_laneq_f32(v489, v476, 3));
        int8x16_t v491 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v489, (int32x4_t)v489), (int8x16_t)v489, 0xCuLL), v479), v489, v478);
        *(float32x4_t *)v710 = vaddq_f32(v485, vaddq_f32(v490, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v491, (int32x4_t)v491), v491, 0xCuLL)));
        unint64_t v492 = re::PrimitiveRenderingContext::addLine(a1, buf, v710);
        re::PrimitiveRenderingDynamicGeometry::set<re::Vector4<float>,re::PrimitiveRenderingAttribute>(5, v492, v43, (_anonymous_namespace_ *)(v44 + 200), (unsigned char *)(v44 + 517), *(void *)(v44 + 136), *(void *)(v44 + 528), *(re **)(v44 + 1192));
        float32x4_t v493 = *a2;
        float32x4_t v494 = a2[1];
        float32x4_t v495 = vmulq_f32(v701, *a2);
        float32x4_t v496 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v494, (int32x4_t)v494), (int8x16_t)v494, 0xCuLL);
        float32x4_t v497 = vnegq_f32(v494);
        float32x4_t v498 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v495, (int32x4_t)v495), (int8x16_t)v495, 0xCuLL), v497), v495, v496);
        int8x16_t v499 = (int8x16_t)vaddq_f32(v498, v498);
        float32x4_t v500 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v499, (int32x4_t)v499), v499, 0xCuLL);
        int8x16_t v501 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v500, (int32x4_t)v500), (int8x16_t)v500, 0xCuLL), v497), v500, v496);
        float32x4_t v502 = vaddq_f32(vaddq_f32(v495, vmulq_laneq_f32(v500, v494, 3)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v501, (int32x4_t)v501), v501, 0xCuLL));
        float32x4_t v503 = a2[2];
        *(float32x4_t *)buf = vaddq_f32(v503, v502);
        float32x4_t v504 = vmulq_f32(v680, v493);
        float32x4_t v505 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v504, (int32x4_t)v504), (int8x16_t)v504, 0xCuLL), v497), v504, v496);
        int8x16_t v506 = (int8x16_t)vaddq_f32(v505, v505);
        float32x4_t v507 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v506, (int32x4_t)v506), v506, 0xCuLL);
        float32x4_t v508 = vaddq_f32(v504, vmulq_laneq_f32(v507, v494, 3));
        int8x16_t v509 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v507, (int32x4_t)v507), (int8x16_t)v507, 0xCuLL), v497), v507, v496);
        *(float32x4_t *)v710 = vaddq_f32(v503, vaddq_f32(v508, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v509, (int32x4_t)v509), v509, 0xCuLL)));
        unint64_t v510 = re::PrimitiveRenderingContext::addLine(a1, buf, v710);
        re::PrimitiveRenderingDynamicGeometry::set<re::Vector4<float>,re::PrimitiveRenderingAttribute>(5, v510, v43, (_anonymous_namespace_ *)(v44 + 200), (unsigned char *)(v44 + 517), *(void *)(v44 + 136), *(void *)(v44 + 528), *(re **)(v44 + 1192));
        float32x4_t v228 = *a2;
        float32x4_t v229 = a2[1];
        float32x4_t v511 = vmulq_f32(v701, *a2);
        float32x4_t v231 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v229, (int32x4_t)v229), (int8x16_t)v229, 0xCuLL);
        float32x4_t v232 = vnegq_f32(v229);
        float32x4_t v512 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v511, (int32x4_t)v511), (int8x16_t)v511, 0xCuLL), v232), v511, v231);
        int8x16_t v513 = (int8x16_t)vaddq_f32(v512, v512);
        float32x4_t v514 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v513, (int32x4_t)v513), v513, 0xCuLL);
        int8x16_t v515 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v514, (int32x4_t)v514), (int8x16_t)v514, 0xCuLL), v232), v514, v231);
        float32x4_t v516 = vaddq_f32(vaddq_f32(v511, vmulq_laneq_f32(v514, v229, 3)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v515, (int32x4_t)v515), v515, 0xCuLL));
        float32x4_t v238 = a2[2];
        *(float32x4_t *)buf = vaddq_f32(v238, v516);
        float32x4_t v239 = v686;
LABEL_33:
        float32x4_t v517 = vmulq_f32(v239, v228);
        float32x4_t v518 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v517, (int32x4_t)v517), (int8x16_t)v517, 0xCuLL), v232), v517, v231);
        int8x16_t v519 = (int8x16_t)vaddq_f32(v518, v518);
        float32x4_t v520 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v519, (int32x4_t)v519), v519, 0xCuLL);
        float32x4_t v521 = vaddq_f32(v517, vmulq_laneq_f32(v520, v229, 3));
        int8x16_t v522 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v520, (int32x4_t)v520), (int8x16_t)v520, 0xCuLL), v232), v520, v231);
        *(float32x4_t *)v710 = vaddq_f32(v238, vaddq_f32(v521, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v522, (int32x4_t)v522), v522, 0xCuLL)));
        unint64_t v428 = re::PrimitiveRenderingContext::addLine(v44, buf, v710);
        uint64_t v429 = *(void *)(v44 + 528);
        uint64_t v430 = *(void *)(v44 + 136);
        v431 = *(re **)(v44 + 1192);
        uint64_t v432 = 5;
        v433 = v43;
        v434 = v46;
        v435 = v47;
LABEL_54:
        re::PrimitiveRenderingDynamicGeometry::set<re::Vector4<float>,re::PrimitiveRenderingAttribute>(v432, v428, v433, v434, v435, v430, v429, v431);
      }
      else
      {
        _Q4 = a2[1];
        long long v703 = v437;
        _Q2 = (int8x16_t)vmlaq_f32(vmulq_f32(_Q4, (float32x4_t)xmmword_2343853F0), (float32x4_t)xmmword_234385400, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)_Q4, (int32x4_t)_Q4), (int8x16_t)_Q4, 0xCuLL));
        float32x4_t v597 = vmlaq_f32(vmlaq_laneq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)_Q2, (int32x4_t)_Q2), _Q2, 0xCuLL), (float32x4_t)xmmword_234385400, _Q4, 3), (float32x4_t)vdupq_n_s32(0x3F3504F3u), _Q4);
        _S3 = 1060439283;
        __asm { FMLA            S2, S3, V4.S[3] }
        v597.i32[3] = _Q2.i32[0];
        *(float32x4_t *)buf = v597;
        unint64_t v599 = re::PrimitiveRenderingContext::addShape<re::PrimitiveRenderingShape>(a1, 4u, (float32x4_t *)a2[2].f32, buf);
        long long v600 = v703;
        DWORD1(v600) = v688.i32[0];
        DWORD2(v600) = v688.i32[0];
        *(_OWORD *)v710 = v600;
        re::PrimitiveRenderingContext::setAttribute<re::Vector3<float>,re::PrimitiveRenderingShape>(a1, v599, 4u, 2, (__n128 *)v710);
        v576 = a4 + 1;
        uint64_t v577 = a1;
        unint64_t v578 = v599;
        unsigned int v579 = 4;
LABEL_58:
        re::PrimitiveRenderingContext::setAttribute<re::Vector4<float>,re::PrimitiveRenderingShape>(v577, v578, v579, 3, v576);
      }
      return;
    case 11:
      *(void *)buf = (*(uint64_t (**)(void *))(*(void *)v528 + 64))(v528);
      v530 = (float32x2_t *)buf;
      uint64_t v531 = a1;
      v532 = a2;
LABEL_62:
      drawRectangle(v531, v532, v530, a4, _Q0);
      return;
    case 12:
      uint64_t v537 = *(void *)(v533 + 8);
      uint64_t v536 = *(void *)(v533 + 16);
      int v538 = *(unsigned __int8 *)(v533 + 58);
      if (v538 == 2)
      {
        if (!*(void *)(v533 + 40)) {
          return;
        }
        unint64_t v620 = 0;
        uint64_t v621 = *(void *)(v533 + 32);
        for (uint64_t i = *(void *)(v533 + 16); ; i += 12)
        {
          unint64_t v623 = 0;
          do
          {
            unint64_t v624 = *(void *)(v533 + 40);
            if (v624 <= v620 + v623) {
              goto LABEL_73;
            }
            unint64_t v625 = v623 + 4294967294u;
            if (v623 < 2) {
              unsigned int v626 = v623 + 1;
            }
            else {
              unsigned int v626 = v623 - 2;
            }
            uint64_t v627 = v537 + v621 * *(unsigned int *)(i + 4 * v623);
            v534.n128_u64[0] = *(void *)v627;
            v534.n128_u32[2] = *(_DWORD *)(v627 + 8);
            uint64_t v628 = v537 + v621 * *(unsigned int *)(v536 + 4 * (v620 + v626));
            v535.i64[0] = *(void *)v628;
            v535.i32[2] = *(_DWORD *)(v628 + 8);
            float32x4_t v629 = *v695;
            float32x4_t v630 = v695[1];
            float32x4_t v631 = vmulq_f32((float32x4_t)v534, *v695);
            float32x4_t v632 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v630, (int32x4_t)v630), (int8x16_t)v630, 0xCuLL);
            float32x4_t v633 = vnegq_f32(v630);
            float32x4_t v634 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v631, (int32x4_t)v631), (int8x16_t)v631, 0xCuLL), v633), v631, v632);
            int8x16_t v635 = (int8x16_t)vaddq_f32(v634, v634);
            float32x4_t v636 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v635, (int32x4_t)v635), v635, 0xCuLL);
            int8x16_t v637 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v636, (int32x4_t)v636), (int8x16_t)v636, 0xCuLL), v633), v636, v632);
            float32x4_t v638 = vaddq_f32(vaddq_f32(v631, vmulq_laneq_f32(v636, v630, 3)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v637, (int32x4_t)v637), v637, 0xCuLL));
            float32x4_t v639 = v695[2];
            *(float32x4_t *)buf = vaddq_f32(v639, v638);
            float32x4_t v640 = vmulq_f32(v535, v629);
            float32x4_t v641 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v640, (int32x4_t)v640), (int8x16_t)v640, 0xCuLL), v633), v640, v632);
            int8x16_t v642 = (int8x16_t)vaddq_f32(v641, v641);
            float32x4_t v643 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v642, (int32x4_t)v642), v642, 0xCuLL);
            int8x16_t v644 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v643, (int32x4_t)v643), (int8x16_t)v643, 0xCuLL), v633), v643, v632);
            *(float32x4_t *)v710 = vaddq_f32(v639, vaddq_f32(vaddq_f32(v640, vmulq_laneq_f32(v643, v630, 3)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v644, (int32x4_t)v644), v644, 0xCuLL)));
            unint64_t v645 = re::PrimitiveRenderingContext::addLine(a1, buf, v710);
            __n128 v534 = re::PrimitiveRenderingDynamicGeometry::set<re::Vector4<float>,re::PrimitiveRenderingAttribute>(5, v645, a4 + 1, (_anonymous_namespace_ *)(a1 + 200), (unsigned char *)(a1 + 517), *(void *)(a1 + 136), *(void *)(a1 + 528), (re *)*(void *)(a1 + 1192));
            unint64_t v623 = v625 - 4294967293u;
          }
          while (v625 != 0x100000000);
          unint64_t v624 = *(void *)(v533 + 40);
LABEL_73:
          v620 += 3;
          if (v624 <= v620) {
            return;
          }
        }
      }
      if (v538 == 1 && *(void *)(v533 + 40))
      {
        unint64_t v539 = 0;
        uint64_t v540 = *(void *)(v533 + 32);
        uint64_t v541 = *(void *)(v533 + 16);
        do
        {
          unint64_t v542 = 0;
          do
          {
            unint64_t v543 = *(void *)(v533 + 40);
            if (v543 <= v539 + v542) {
              goto LABEL_50;
            }
            unint64_t v544 = v542 + 4294967294u;
            if (v542 < 2) {
              unsigned int v545 = v542 + 1;
            }
            else {
              unsigned int v545 = v542 - 2;
            }
            uint64_t v546 = v537 + v540 * *(unsigned __int16 *)(v541 + 2 * v542);
            v534.n128_u64[0] = *(void *)v546;
            v534.n128_u32[2] = *(_DWORD *)(v546 + 8);
            uint64_t v547 = v537 + v540 * *(unsigned __int16 *)(v536 + 2 * (v539 + v545));
            v535.i64[0] = *(void *)v547;
            v535.i32[2] = *(_DWORD *)(v547 + 8);
            float32x4_t v548 = *v695;
            float32x4_t v549 = v695[1];
            float32x4_t v550 = vmulq_f32((float32x4_t)v534, *v695);
            float32x4_t v551 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v549, (int32x4_t)v549), (int8x16_t)v549, 0xCuLL);
            float32x4_t v552 = vnegq_f32(v549);
            float32x4_t v553 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v550, (int32x4_t)v550), (int8x16_t)v550, 0xCuLL), v552), v550, v551);
            int8x16_t v554 = (int8x16_t)vaddq_f32(v553, v553);
            float32x4_t v555 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v554, (int32x4_t)v554), v554, 0xCuLL);
            int8x16_t v556 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v555, (int32x4_t)v555), (int8x16_t)v555, 0xCuLL), v552), v555, v551);
            float32x4_t v557 = vaddq_f32(vaddq_f32(v550, vmulq_laneq_f32(v555, v549, 3)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v556, (int32x4_t)v556), v556, 0xCuLL));
            float32x4_t v558 = v695[2];
            *(float32x4_t *)buf = vaddq_f32(v558, v557);
            float32x4_t v559 = vmulq_f32(v535, v548);
            float32x4_t v560 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v559, (int32x4_t)v559), (int8x16_t)v559, 0xCuLL), v552), v559, v551);
            int8x16_t v561 = (int8x16_t)vaddq_f32(v560, v560);
            float32x4_t v562 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v561, (int32x4_t)v561), v561, 0xCuLL);
            int8x16_t v563 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v562, (int32x4_t)v562), (int8x16_t)v562, 0xCuLL), v552), v562, v551);
            *(float32x4_t *)v710 = vaddq_f32(v558, vaddq_f32(vaddq_f32(v559, vmulq_laneq_f32(v562, v549, 3)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v563, (int32x4_t)v563), v563, 0xCuLL)));
            unint64_t v564 = re::PrimitiveRenderingContext::addLine(a1, buf, v710);
            __n128 v534 = re::PrimitiveRenderingDynamicGeometry::set<re::Vector4<float>,re::PrimitiveRenderingAttribute>(5, v564, a4 + 1, (_anonymous_namespace_ *)(a1 + 200), (unsigned char *)(a1 + 517), *(void *)(a1 + 136), *(void *)(a1 + 528), (re *)*(void *)(a1 + 1192));
            unint64_t v542 = v544 - 4294967293u;
          }
          while (v544 != 0x100000000);
          unint64_t v543 = *(void *)(v533 + 40);
LABEL_50:
          v539 += 3;
          v541 += 6;
        }
        while (v543 > v539);
      }
      return;
    default:
      v523 = *re::physicsLogObjects(v8);
      if (os_log_type_enabled(v523, OS_LOG_TYPE_DEFAULT))
      {
        int v524 = (*(uint64_t (**)(const void *))(*(void *)a3 + 24))(a3);
        *(_DWORD *)buf = 67109120;
        *(_DWORD *)&buf[4] = v524;
        _os_log_impl(&dword_233120000, v523, OS_LOG_TYPE_DEFAULT, "Unsupported triangulation %d", buf, 8u);
      }
LABEL_36:
      memset(v710, 0, 24);
      *(void *)&v710[24] = 0x3F80000000000000;
      (*(void (**)(uint8_t *__return_ptr, const void *, unsigned char *))(*(void *)a3 + 16))(buf, a3, v710);
      uint32x4_t v525 = (uint32x4_t)vcgtq_f32(*(float32x4_t *)buf, v719);
      v525.i32[3] = v525.i32[2];
      if ((vmaxvq_u32(v525) & 0x80000000) != 0)
      {
        float32x4_t v527 = 0uLL;
      }
      else
      {
        v526.i64[0] = 0x3F0000003F000000;
        v526.i64[1] = 0x3F0000003F000000;
        float32x4_t v527 = vmulq_f32(vaddq_f32(*(float32x4_t *)buf, v719), v526);
      }
      float32x4_t v565 = a2[1];
      float32x4_t v566 = vmulq_f32(v527, *a2);
      float32x4_t v567 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v565, (int32x4_t)v565), (int8x16_t)v565, 0xCuLL);
      float32x4_t v568 = vnegq_f32(v565);
      float32x4_t v569 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v566, (int32x4_t)v566), (int8x16_t)v566, 0xCuLL), v568), v566, v567);
      int8x16_t v570 = (int8x16_t)vaddq_f32(v569, v569);
      float32x4_t v571 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v570, (int32x4_t)v570), v570, 0xCuLL);
      float32x4_t v572 = vaddq_f32(v566, vmulq_laneq_f32(v571, v565, 3));
      int8x16_t v573 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v571, (int32x4_t)v571), (int8x16_t)v571, 0xCuLL), v568), v571, v567);
      float32x4_t v705 = vaddq_f32(a2[2], vaddq_f32(v572, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v573, (int32x4_t)v573), v573, 0xCuLL)));
      unint64_t v428 = re::PrimitiveRenderingContext::addPoint(a1, &v705);
      v434 = (_anonymous_namespace_ *)(a1 + 40);
      uint64_t v429 = *(void *)(a1 + 520);
      uint64_t v430 = *(void *)(a1 + 16);
      v435 = (unsigned char *)(a1 + 513);
      v431 = *(re **)(a1 + 1192);
      uint64_t v432 = 1;
      v433 = a4 + 1;
      goto LABEL_54;
  }
}

double drawRectangle(uint64_t a1, float32x4_t *a2, float32x2_t *a3, __n128 *a4, __n128 a5)
{
  if (a4->n128_u32[0] == 3)
  {
    a5.n128_u64[0] = (unint64_t)vmul_f32(*a3, (float32x2_t)0x3F0000003F000000);
    __n128 v9 = a5;
    v9.n128_u32[1] = 0;
    __n128 v10 = v9;
    v10.n128_u32[2] = a5.n128_u32[1];
    float32x4_t v11 = (float32x4_t)v10;
    v9.n128_f32[2] = -a5.n128_f32[1];
    float32x4_t v12 = (float32x4_t)v9;
    float32x4_t v98 = (float32x4_t)v9;
    float32x4_t v99 = (float32x4_t)v10;
    v9.n128_u32[1] = 0;
    v9.n128_f32[0] = -a5.n128_f32[0];
    float32x4_t v13 = (float32x4_t)COERCE_UNSIGNED_INT(-a5.n128_f32[0]);
    v13.f32[2] = -a5.n128_f32[1];
    v9.n128_u64[1] = a5.n128_u32[1];
    float32x4_t v100 = v13;
    float32x4_t v101 = (float32x4_t)v9;
    float32x4_t v14 = *a2;
    float32x4_t v15 = a2[1];
    float32x4_t v16 = vmulq_f32(*a2, v11);
    float32x4_t v17 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v15, (int32x4_t)v15), (int8x16_t)v15, 0xCuLL);
    float32x4_t v18 = vnegq_f32(v15);
    float32x4_t v19 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v16, (int32x4_t)v16), (int8x16_t)v16, 0xCuLL), v18), v16, v17);
    int8x16_t v20 = (int8x16_t)vaddq_f32(v19, v19);
    float32x4_t v21 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v20, (int32x4_t)v20), v20, 0xCuLL);
    int8x16_t v22 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v21, (int32x4_t)v21), (int8x16_t)v21, 0xCuLL), v18), v21, v17);
    float32x4_t v23 = vaddq_f32(vaddq_f32(v16, vmulq_laneq_f32(v21, v15, 3)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v22, (int32x4_t)v22), v22, 0xCuLL));
    float32x4_t v24 = a2[2];
    float32x4_t v103 = vaddq_f32(v24, v23);
    float32x4_t v25 = vmulq_f32(v14, v12);
    float32x4_t v26 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v25, (int32x4_t)v25), (int8x16_t)v25, 0xCuLL), v18), v25, v17);
    int8x16_t v27 = (int8x16_t)vaddq_f32(v26, v26);
    float32x4_t v28 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v27, (int32x4_t)v27), v27, 0xCuLL);
    float32x4_t v29 = vaddq_f32(v25, vmulq_laneq_f32(v28, v15, 3));
    int8x16_t v30 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v28, (int32x4_t)v28), (int8x16_t)v28, 0xCuLL), v18), v28, v17);
    float32x4_t v102 = vaddq_f32(v24, vaddq_f32(v29, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v30, (int32x4_t)v30), v30, 0xCuLL)));
    float32x4_t v31 = a4 + 1;
    unint64_t v32 = re::PrimitiveRenderingContext::addLine(a1, &v103, &v102);
    re::PrimitiveRenderingDynamicGeometry::set<re::Vector4<float>,re::PrimitiveRenderingAttribute>(5, v32, v31, (_anonymous_namespace_ *)(a1 + 200), (unsigned char *)(a1 + 517), *(void *)(a1 + 136), *(void *)(a1 + 528), *(re **)(a1 + 1192));
    float32x4_t v33 = *a2;
    float32x4_t v34 = a2[1];
    float32x4_t v35 = vmulq_f32(v98, *a2);
    float32x4_t v36 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v34, (int32x4_t)v34), (int8x16_t)v34, 0xCuLL);
    float32x4_t v37 = vnegq_f32(v34);
    float32x4_t v38 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v35, (int32x4_t)v35), (int8x16_t)v35, 0xCuLL), v37), v35, v36);
    int8x16_t v39 = (int8x16_t)vaddq_f32(v38, v38);
    float32x4_t v40 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v39, (int32x4_t)v39), v39, 0xCuLL);
    int8x16_t v41 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v40, (int32x4_t)v40), (int8x16_t)v40, 0xCuLL), v37), v40, v36);
    float32x4_t v42 = vaddq_f32(vaddq_f32(v35, vmulq_laneq_f32(v40, v34, 3)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v41, (int32x4_t)v41), v41, 0xCuLL));
    float32x4_t v43 = a2[2];
    float32x4_t v103 = vaddq_f32(v43, v42);
    float32x4_t v44 = vmulq_f32(v100, v33);
    float32x4_t v45 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v44, (int32x4_t)v44), (int8x16_t)v44, 0xCuLL), v37), v44, v36);
    int8x16_t v46 = (int8x16_t)vaddq_f32(v45, v45);
    float32x4_t v47 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v46, (int32x4_t)v46), v46, 0xCuLL);
    float32x4_t v48 = vaddq_f32(v44, vmulq_laneq_f32(v47, v34, 3));
    int8x16_t v49 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v47, (int32x4_t)v47), (int8x16_t)v47, 0xCuLL), v37), v47, v36);
    float32x4_t v102 = vaddq_f32(v43, vaddq_f32(v48, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v49, (int32x4_t)v49), v49, 0xCuLL)));
    unint64_t v50 = re::PrimitiveRenderingContext::addLine(a1, &v103, &v102);
    re::PrimitiveRenderingDynamicGeometry::set<re::Vector4<float>,re::PrimitiveRenderingAttribute>(5, v50, v31, (_anonymous_namespace_ *)(a1 + 200), (unsigned char *)(a1 + 517), *(void *)(a1 + 136), *(void *)(a1 + 528), *(re **)(a1 + 1192));
    float32x4_t v51 = *a2;
    float32x4_t v52 = a2[1];
    float32x4_t v53 = vmulq_f32(v100, *a2);
    float32x4_t v54 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v52, (int32x4_t)v52), (int8x16_t)v52, 0xCuLL);
    float32x4_t v55 = vnegq_f32(v52);
    float32x4_t v56 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v53, (int32x4_t)v53), (int8x16_t)v53, 0xCuLL), v55), v53, v54);
    int8x16_t v57 = (int8x16_t)vaddq_f32(v56, v56);
    float32x4_t v58 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v57, (int32x4_t)v57), v57, 0xCuLL);
    int8x16_t v59 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v58, (int32x4_t)v58), (int8x16_t)v58, 0xCuLL), v55), v58, v54);
    float32x4_t v60 = vaddq_f32(vaddq_f32(v53, vmulq_laneq_f32(v58, v52, 3)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v59, (int32x4_t)v59), v59, 0xCuLL));
    float32x4_t v61 = a2[2];
    float32x4_t v103 = vaddq_f32(v61, v60);
    float32x4_t v62 = vmulq_f32(v101, v51);
    float32x4_t v63 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v62, (int32x4_t)v62), (int8x16_t)v62, 0xCuLL), v55), v62, v54);
    int8x16_t v64 = (int8x16_t)vaddq_f32(v63, v63);
    float32x4_t v65 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v64, (int32x4_t)v64), v64, 0xCuLL);
    float32x4_t v66 = vaddq_f32(v62, vmulq_laneq_f32(v65, v52, 3));
    int8x16_t v67 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v65, (int32x4_t)v65), (int8x16_t)v65, 0xCuLL), v55), v65, v54);
    float32x4_t v102 = vaddq_f32(v61, vaddq_f32(v66, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v67, (int32x4_t)v67), v67, 0xCuLL)));
    unint64_t v68 = re::PrimitiveRenderingContext::addLine(a1, &v103, &v102);
    re::PrimitiveRenderingDynamicGeometry::set<re::Vector4<float>,re::PrimitiveRenderingAttribute>(5, v68, v31, (_anonymous_namespace_ *)(a1 + 200), (unsigned char *)(a1 + 517), *(void *)(a1 + 136), *(void *)(a1 + 528), *(re **)(a1 + 1192));
    float32x4_t v69 = *a2;
    float32x4_t v70 = a2[1];
    float32x4_t v71 = vmulq_f32(v101, *a2);
    float32x4_t v72 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v70, (int32x4_t)v70), (int8x16_t)v70, 0xCuLL);
    float32x4_t v73 = vnegq_f32(v70);
    float32x4_t v74 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v71, (int32x4_t)v71), (int8x16_t)v71, 0xCuLL), v73), v71, v72);
    int8x16_t v75 = (int8x16_t)vaddq_f32(v74, v74);
    float32x4_t v76 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v75, (int32x4_t)v75), v75, 0xCuLL);
    int8x16_t v77 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v76, (int32x4_t)v76), (int8x16_t)v76, 0xCuLL), v73), v76, v72);
    float32x4_t v78 = vaddq_f32(vaddq_f32(v71, vmulq_laneq_f32(v76, v70, 3)), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v77, (int32x4_t)v77), v77, 0xCuLL));
    float32x4_t v79 = a2[2];
    float32x4_t v103 = vaddq_f32(v79, v78);
    float32x4_t v80 = vmulq_f32(v99, v69);
    float32x4_t v81 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v80, (int32x4_t)v80), (int8x16_t)v80, 0xCuLL), v73), v80, v72);
    int8x16_t v82 = (int8x16_t)vaddq_f32(v81, v81);
    float32x4_t v83 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v82, (int32x4_t)v82), v82, 0xCuLL);
    float32x4_t v84 = vaddq_f32(v80, vmulq_laneq_f32(v83, v70, 3));
    int8x16_t v85 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v83, (int32x4_t)v83), (int8x16_t)v83, 0xCuLL), v73), v83, v72);
    float32x4_t v102 = vaddq_f32(v79, vaddq_f32(v84, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v85, (int32x4_t)v85), v85, 0xCuLL)));
    unint64_t v86 = re::PrimitiveRenderingContext::addLine(a1, &v103, &v102);
    *(void *)&double result = re::PrimitiveRenderingDynamicGeometry::set<re::Vector4<float>,re::PrimitiveRenderingAttribute>(5, v86, v31, (_anonymous_namespace_ *)(a1 + 200), (unsigned char *)(a1 + 517), *(void *)(a1 + 136), *(void *)(a1 + 528), (re *)*(void *)(a1 + 1192)).n128_u64[0];
  }
  else
  {
    _Q0 = a2[1];
    _Q2 = (int8x16_t)vmlaq_f32(vmulq_f32(_Q0, (float32x4_t)xmmword_234385450), (float32x4_t)xmmword_234385460, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)_Q0, (int32x4_t)_Q0), (int8x16_t)_Q0, 0xCuLL));
    float32x4_t v90 = vmlaq_f32(vmlaq_laneq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)_Q2, (int32x4_t)_Q2), _Q2, 0xCuLL), (float32x4_t)xmmword_234385460, _Q0, 3), (float32x4_t)vdupq_n_s32(0x3F3504F3u), _Q0);
    _S3 = 1060439283;
    __asm { FMLA            S2, S3, V0.S[3] }
    v90.i32[3] = _Q2.i32[0];
    float32x4_t v103 = v90;
    unint64_t v96 = re::PrimitiveRenderingContext::addShape<re::PrimitiveRenderingShape>(a1, 1u, (float32x4_t *)a2[2].f32, &v103);
    *(float32x2_t *)v97.f32 = vmul_f32(*a3, (float32x2_t)0x3F0000003F000000);
    v97.i32[2] = 1.0;
    float32x4_t v102 = v97;
    re::PrimitiveRenderingContext::setAttribute<re::Vector3<float>,re::PrimitiveRenderingShape>(a1, v96, 1u, 2, (__n128 *)&v102);
    return re::PrimitiveRenderingContext::setAttribute<re::Vector4<float>,re::PrimitiveRenderingShape>(a1, v96, 1u, 3, a4 + 1);
  }
  return result;
}

void drawCapsule(uint64_t a1, float32x4_t *a2, __n128 *a3, double a4, __n128 a5)
{
  if (a3->n128_u32[0] == 3) {
    re::PhysicsDebugRenderer::drawCapsuleLines(a1, a2, a3, *(float *)&a4, a5.n128_f32[0]);
  }
  else {
    re::PhysicsDebugRenderer::drawCapsuleShape(a1, a2, a3, *(int32x2_t *)&a4, a5);
  }
}

void re::PhysicsDebugRenderer::drawTransformFrame(uint64_t a1, uint64_t a2, float a3)
{
  float v5 = *(float *)a2 * a3;
  if (v5 < 0.05) {
    float v5 = 0.05;
  }
  float v24 = v5;
  float32x4_t v27 = *(float32x4_t *)(a2 + 16);
  float v6 = (_OWORD *)(a2 + 32);
  unint64_t v7 = re::PrimitiveRenderingContext::addShape<re::PrimitiveRenderingShape>(a1, 2u, (_OWORD *)(a2 + 32), &v27);
  uint64_t v8 = (const float *)&unk_2343854B4;
  float32x4_t v9 = vld1q_dup_f32(v8);
  v9.f32[0] = v24;
  long long v25 = (__int128)v9;
  long long v26 = (__int128)v9;
  re::PrimitiveRenderingContext::setAttribute<re::Vector3<float>,re::PrimitiveRenderingShape>(a1, v7, 2u, 2, (__n128 *)&v26);
  long long v26 = xmmword_234376D50;
  re::PrimitiveRenderingContext::setAttribute<re::Vector4<float>,re::PrimitiveRenderingShape>(a1, v7, 2u, 3, (__n128 *)&v26);
  _Q0 = *(float32x4_t *)(a2 + 16);
  _Q2 = (int8x16_t)vmlaq_f32(vmulq_f32(_Q0, (float32x4_t)xmmword_2343853F0), (float32x4_t)xmmword_234385400, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)_Q0, (int32x4_t)_Q0), (int8x16_t)_Q0, 0xCuLL));
  float32x4_t v23 = (float32x4_t)vdupq_n_s32(0x3F3504F3u);
  float32x4_t v12 = vmlaq_f32(vmlaq_laneq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)_Q2, (int32x4_t)_Q2), _Q2, 0xCuLL), (float32x4_t)xmmword_234385400, _Q0, 3), v23, _Q0);
  _S8 = 1060439283;
  __asm { FMLA            S2, S8, V0.S[3] }
  v12.i32[3] = _Q2.i32[0];
  float32x4_t v27 = v12;
  unint64_t v18 = re::PrimitiveRenderingContext::addShape<re::PrimitiveRenderingShape>(a1, 2u, v6, &v27);
  long long v26 = v25;
  re::PrimitiveRenderingContext::setAttribute<re::Vector3<float>,re::PrimitiveRenderingShape>(a1, v18, 2u, 2, (__n128 *)&v26);
  long long v26 = xmmword_234385470;
  re::PrimitiveRenderingContext::setAttribute<re::Vector4<float>,re::PrimitiveRenderingShape>(a1, v18, 2u, 3, (__n128 *)&v26);
  _Q0 = *(float32x4_t *)(a2 + 16);
  _Q2 = (int8x16_t)vmlaq_f32(vmulq_f32(_Q0, (float32x4_t)xmmword_234385480), (float32x4_t)xmmword_234385490, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)_Q0, (int32x4_t)_Q0), (int8x16_t)_Q0, 0xCuLL));
  float32x4_t v21 = vmlaq_f32(vmlaq_laneq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)_Q2, (int32x4_t)_Q2), _Q2, 0xCuLL), (float32x4_t)xmmword_234385490, _Q0, 3), v23, _Q0);
  __asm { FMLA            S2, S8, V0.S[3] }
  v21.i32[3] = _Q2.i32[0];
  float32x4_t v27 = v21;
  unint64_t v22 = re::PrimitiveRenderingContext::addShape<re::PrimitiveRenderingShape>(a1, 2u, v6, &v27);
  long long v26 = v25;
  re::PrimitiveRenderingContext::setAttribute<re::Vector3<float>,re::PrimitiveRenderingShape>(a1, v22, 2u, 2, (__n128 *)&v26);
  long long v26 = xmmword_2343854A0;
  re::PrimitiveRenderingContext::setAttribute<re::Vector4<float>,re::PrimitiveRenderingShape>(a1, v22, 2u, 3, (__n128 *)&v26);
}

double re::PhysicsDebugRenderer::drawCenterOfMass(uint64_t a1, float32x4_t *a2, float32x4_t *a3, int32x2_t a4)
{
  *(float *)a4.i32 = (float)(a2->f32[0] * *(float *)a4.i32) * 0.1;
  if (*(float *)a4.i32 < 0.008) {
    *(float *)a4.i32 = 0.008;
  }
  int32x2_t v27 = a4;
  _Q1 = a3[1];
  _Q3 = a2[1];
  float32x4_t v7 = vmulq_f32(*a3, *a2);
  float32x4_t v8 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)_Q3, (int32x4_t)_Q3), (int8x16_t)_Q3, 0xCuLL);
  float32x4_t v9 = vnegq_f32(_Q3);
  int8x16_t v10 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)_Q1, (int32x4_t)_Q1), (int8x16_t)_Q1, 0xCuLL), v9), _Q1, v8);
  float32x4_t v11 = vmlaq_laneq_f32(vmlaq_laneq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v10, (int32x4_t)v10), v10, 0xCuLL), _Q1, _Q3, 3), _Q3, _Q1, 3);
  _Q1.i32[0] = _Q1.i32[3];
  __asm { FMLA            S7, S1, V3.S[3] }
  v11.i32[3] = _S7;
  float32x4_t v17 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v7, (int32x4_t)v7), (int8x16_t)v7, 0xCuLL), v9), v7, v8);
  int8x16_t v18 = (int8x16_t)vaddq_f32(v17, v17);
  float32x4_t v19 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v18, (int32x4_t)v18), v18, 0xCuLL);
  float32x4_t v20 = vaddq_f32(v7, vmulq_laneq_f32(v19, _Q3, 3));
  int8x16_t v21 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v19, (int32x4_t)v19), (int8x16_t)v19, 0xCuLL), v9), v19, v8);
  __asm { FMOV            V1.4S, #1.0 }
  __n128 v26 = _Q1;
  float32x4_t v23 = vaddq_f32(a2[2], vaddq_f32(v20, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v21, (int32x4_t)v21), v21, 0xCuLL)));
  v28[1] = _Q1;
  float32x4_t v29 = v11;
  float32x4_t v30 = v23;
  unint64_t v24 = re::PrimitiveRenderingContext::addShape<re::PrimitiveRenderingShape>(a1, 3u, &v30, &v29);
  v28[0] = (__n128)vdupq_lane_s32(v27, 0);
  re::PrimitiveRenderingContext::setAttribute<re::Vector3<float>,re::PrimitiveRenderingShape>(a1, v24, 3u, 2, v28);
  v28[0] = v26;
  return re::PrimitiveRenderingContext::setAttribute<re::Vector4<float>,re::PrimitiveRenderingShape>(a1, v24, 3u, 3, v28);
}

void re::DynamicArray<unsigned short>::resize(uint64_t a1, unint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 16);
  if (v4 >= a2)
  {
    if (v4 <= a2) {
      return;
    }
  }
  else
  {
    if (*(void *)(a1 + 8) < a2)
    {
      re::DynamicArray<unsigned short>::setCapacity((void *)a1, a2);
      unint64_t v4 = *(void *)(a1 + 16);
    }
    if (v4 < a2)
    {
      float v5 = (void *)(*(void *)(a1 + 32) + 2 * v4);
      uint64_t v6 = 2 * a2 - 2 * v4;
      BOOL v7 = v6 == 1;
      if (v6 >= 1)
      {
        unint64_t v8 = (unint64_t)v6 >> 1;
        uint64_t v9 = !v7;
        bzero(v5, 2 * (v8 - v9) + 2);
      }
    }
  }
  *(void *)(a1 + 16) = a2;
  ++*(_DWORD *)(a1 + 24);
}

_anonymous_namespace_ *re::serializeObject@<X0>(re *this@<X0>, re::NetworkCompatSerializer *a2@<X1>, re::DynamicArrayBufferedOutputStream *a3@<X2>, const void *a4@<X3>, const re::TypeInfo *a5@<X4>, uint64_t a6@<X8>)
{
  if (!*((unsigned char *)this + 64)) {
    (*(void (**)(re *, const char *, uint64_t, re::DynamicArrayBufferedOutputStream *, const void *, const re::TypeInfo *, void))(*(void *)this + 72))(this, "object", 1, a3, a4, a5, 0);
  }
  (*(void (**)(re *))(*(void *)this + 56))(this);
  double result = re::Encoder<re::EncoderBinary<re::DynamicArrayBufferedOutputStream>,re::DynamicArrayBufferedOutputStream>::close((re *)((char *)this + 24));
  if (*((unsigned char *)this + 64))
  {
    long long v15 = *(_OWORD *)((char *)this + 72);
    re::DynamicString::DynamicString((re::DynamicString *)&v16, (re *)((char *)this + 88));
    long long v18 = v15;
    re::DynamicString::DynamicString((re::DynamicString *)&v19, (const re::DynamicString *)&v16);
    *(unsigned char *)a6 = 0;
    *(_OWORD *)(a6 + 8) = v18;
    *(void *)(a6 + 24) = v19;
    *(void *)(a6 + 48) = v21;
    *(_OWORD *)(a6 + 32) = v20;
    uint64_t v21 = 0;
    uint64_t v19 = 0;
    long long v20 = 0uLL;
    double result = (_anonymous_namespace_ *)v16;
    if (v16)
    {
      if (v17) {
        return (_anonymous_namespace_ *)(*(uint64_t (**)(void))(*(void *)v16 + 40))();
      }
    }
  }
  else
  {
    *(unsigned char *)a6 = 1;
  }
  return result;
}

_anonymous_namespace_ *re::deserializeObject@<X0>(re *this@<X0>, re::NetworkCompatDeserializer *a2@<X1>, re::FixedArrayInputStream *a3@<X2>, void *a4@<X3>, const re::TypeInfo *a5@<X4>, uint64_t a6@<X8>)
{
  if (!*((unsigned char *)this + 64)) {
    (*(void (**)(re *, const char *, uint64_t, re::FixedArrayInputStream *, void *, const re::TypeInfo *, void))(*(void *)this + 72))(this, "object", 1, a3, a4, a5, 0);
  }
  (*(void (**)(re *))(*(void *)this + 56))(this);
  double result = re::Encoder<re::EncoderBinary<re::FixedArrayInputStream>,re::FixedArrayInputStream>::close((re *)((char *)this + 24));
  if (*((unsigned char *)this + 64))
  {
    long long v15 = *(_OWORD *)((char *)this + 72);
    re::DynamicString::DynamicString((re::DynamicString *)&v16, (re *)((char *)this + 88));
    long long v18 = v15;
    re::DynamicString::DynamicString((re::DynamicString *)&v19, (const re::DynamicString *)&v16);
    *(unsigned char *)a6 = 0;
    *(_OWORD *)(a6 + 8) = v18;
    *(void *)(a6 + 24) = v19;
    *(void *)(a6 + 48) = v21;
    *(_OWORD *)(a6 + 32) = v20;
    uint64_t v21 = 0;
    uint64_t v19 = 0;
    long long v20 = 0uLL;
    double result = (_anonymous_namespace_ *)v16;
    if (v16)
    {
      if (v17) {
        return (_anonymous_namespace_ *)(*(uint64_t (**)(void))(*(void *)v16 + 40))();
      }
    }
  }
  else
  {
    *(unsigned char *)a6 = 1;
  }
  return result;
}

_anonymous_namespace_ *re::serializeObject@<X0>(re *this@<X0>, re::NetworkOPACKSerializer *a2@<X1>, re::DynamicArrayBufferedOutputStream *a3@<X2>, const void *a4@<X3>, uint64_t a5@<X8>)
{
  if (!*((unsigned char *)this + 64)) {
    (*(void (**)(re *, const char *, uint64_t, re::DynamicArrayBufferedOutputStream *, const void *, const void *, void))(*(void *)this + 72))(this, "object", 1, a3, a4, a4, 0);
  }
  (*(void (**)(re *))(*(void *)this + 56))(this);
  double result = re::Encoder<re::EncoderOPACK<re::DynamicArrayBufferedOutputStream>,re::DynamicArrayBufferedOutputStream>::close((re *)((char *)this + 24));
  if (*((unsigned char *)this + 64))
  {
    long long v13 = *(_OWORD *)((char *)this + 72);
    re::DynamicString::DynamicString((re::DynamicString *)&v14, (re *)((char *)this + 88));
    long long v16 = v13;
    re::DynamicString::DynamicString((re::DynamicString *)&v17, (const re::DynamicString *)&v14);
    *(unsigned char *)a5 = 0;
    *(_OWORD *)(a5 + 8) = v16;
    *(void *)(a5 + 24) = v17;
    *(void *)(a5 + 48) = v19;
    *(_OWORD *)(a5 + 32) = v18;
    uint64_t v19 = 0;
    uint64_t v17 = 0;
    long long v18 = 0uLL;
    double result = (_anonymous_namespace_ *)v14;
    if (v14)
    {
      if (v15) {
        return (_anonymous_namespace_ *)(*(uint64_t (**)(void))(*(void *)v14 + 40))();
      }
    }
  }
  else
  {
    *(unsigned char *)a5 = 1;
  }
  return result;
}

_anonymous_namespace_ *re::deserializeObject@<X0>(re *this@<X0>, re::NetworkOPACKDeserializer *a2@<X1>, re::FixedArrayInputStream *a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  if (!*((unsigned char *)this + 64)) {
    (*(void (**)(re *, const char *, uint64_t, re::FixedArrayInputStream *, void *, void *, void))(*(void *)this + 72))(this, "object", 1, a3, a4, a4, 0);
  }
  (*(void (**)(re *))(*(void *)this + 56))(this);
  double result = re::Encoder<re::EncoderOPACK<re::FixedArrayInputStream>,re::FixedArrayInputStream>::close((re *)((char *)this + 24));
  if (*((unsigned char *)this + 64))
  {
    long long v13 = *(_OWORD *)((char *)this + 72);
    re::DynamicString::DynamicString((re::DynamicString *)&v14, (re *)((char *)this + 88));
    long long v16 = v13;
    re::DynamicString::DynamicString((re::DynamicString *)&v17, (const re::DynamicString *)&v14);
    *(unsigned char *)a5 = 0;
    *(_OWORD *)(a5 + 8) = v16;
    *(void *)(a5 + 24) = v17;
    *(void *)(a5 + 48) = v19;
    *(_OWORD *)(a5 + 32) = v18;
    uint64_t v19 = 0;
    uint64_t v17 = 0;
    long long v18 = 0uLL;
    double result = (_anonymous_namespace_ *)v14;
    if (v14)
    {
      if (v15) {
        return (_anonymous_namespace_ *)(*(uint64_t (**)(void))(*(void *)v14 + 40))();
      }
    }
  }
  else
  {
    *(unsigned char *)a5 = 1;
  }
  return result;
}

void *re::allocInfo_NetworkOPACKSerializer(re *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&_MergedGlobals_153, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&_MergedGlobals_153))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF81030, "NetworkOPACKSerializer");
    __cxa_guard_release(&_MergedGlobals_153);
  }
  return &unk_26AF81030;
}

void re::initInfo_NetworkOPACKSerializer(re *this, re::IntrospectionBase *a2)
{
  v5[0] = 0xD66B7D4190E6B598;
  v5[1] = "NetworkOPACKSerializer";
  re::StringID::destroyString((re::StringID *)v5);
  *((_OWORD *)this + 2) = v6;
  *((void *)this + 2) = 0x1E000000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 0;
  *((void *)this + 8) = &re::initInfo_NetworkOPACKSerializer(re::IntrospectionBase *)::structureAttributes;
  *((void *)this + 9) = re::internal::defaultConstruct<re::NetworkOPACKSerializer>;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 10) = re::internal::defaultDestruct<re::NetworkOPACKSerializer>;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::NetworkOPACKSerializer>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::NetworkOPACKSerializer>;
  re::IntrospectionRegistry::add(this, v3);
  long long v4 = v6;
}

re::NetworkOPACKSerializer *re::internal::defaultConstruct<re::NetworkOPACKSerializer>(int a1, int a2, re::NetworkOPACKSerializer *this)
{
  return re::NetworkOPACKSerializer::NetworkOPACKSerializer(this);
}

uint64_t re::internal::defaultDestruct<re::NetworkOPACKSerializer>(uint64_t a1, uint64_t a2, uint64_t (***a3)(void))
{
  return (**a3)(a3);
}

uint64_t re::internal::defaultDestructV2<re::NetworkOPACKSerializer>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

uint64_t re::introspect_NetworkOPACKSerializer(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"NetworkOPACKSerializer", (uint64_t (*)(re::internal *))re::allocInfo_NetworkOPACKSerializer, (re::IntrospectionBase *(*)(void))re::initInfo_NetworkOPACKSerializer, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::NetworkOPACKSerializer>, this);
}

void *re::allocInfo_NetworkOPACKDeserializer(re *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81018, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF81018))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF810A8, "NetworkOPACKDeserializer");
    __cxa_guard_release(&qword_26AF81018);
  }
  return &unk_26AF810A8;
}

void re::initInfo_NetworkOPACKDeserializer(re *this, re::IntrospectionBase *a2)
{
  v5[0] = 0xDEED4B9BC35C271ALL;
  v5[1] = "NetworkOPACKDeserializer";
  re::StringID::destroyString((re::StringID *)v5);
  *((_OWORD *)this + 2) = v6;
  *((void *)this + 2) = 0x1E000000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 0;
  *((void *)this + 8) = &re::initInfo_NetworkOPACKDeserializer(re::IntrospectionBase *)::structureAttributes;
  *((void *)this + 9) = re::internal::defaultConstruct<re::NetworkOPACKDeserializer>;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 10) = re::internal::defaultDestruct<re::NetworkOPACKDeserializer>;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::NetworkOPACKDeserializer>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::NetworkOPACKDeserializer>;
  re::IntrospectionRegistry::add(this, v3);
  long long v4 = v6;
}

re::NetworkOPACKDeserializer *re::internal::defaultConstruct<re::NetworkOPACKDeserializer>(int a1, int a2, re::NetworkOPACKDeserializer *this)
{
  return re::NetworkOPACKDeserializer::NetworkOPACKDeserializer(this);
}

uint64_t re::internal::defaultDestruct<re::NetworkOPACKDeserializer>(uint64_t a1, uint64_t a2, uint64_t (***a3)(void))
{
  return (**a3)(a3);
}

uint64_t re::internal::defaultDestructV2<re::NetworkOPACKDeserializer>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

uint64_t re::introspect_NetworkOPACKDeserializer(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"NetworkOPACKDeserializer", (uint64_t (*)(re::internal *))re::allocInfo_NetworkOPACKDeserializer, (re::IntrospectionBase *(*)(void))re::initInfo_NetworkOPACKDeserializer, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::NetworkOPACKDeserializer>, this);
}

void *re::allocInfo_NetworkCompatSerializer(re *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81020, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF81020))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF81120, "NetworkCompatSerializer");
    __cxa_guard_release(&qword_26AF81020);
  }
  return &unk_26AF81120;
}

void re::initInfo_NetworkCompatSerializer(re *this, re::IntrospectionBase *a2)
{
  v5[0] = 0x287C37956ADFC9C4;
  v5[1] = "NetworkCompatSerializer";
  re::StringID::destroyString((re::StringID *)v5);
  *((_OWORD *)this + 2) = v6;
  *((void *)this + 2) = 0x1D000000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 0;
  *((void *)this + 8) = &re::initInfo_NetworkCompatSerializer(re::IntrospectionBase *)::structureAttributes;
  *((void *)this + 9) = re::internal::defaultConstruct<re::NetworkCompatSerializer>;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 10) = re::internal::defaultDestruct<re::NetworkCompatSerializer>;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::NetworkCompatSerializer>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::NetworkCompatSerializer>;
  re::IntrospectionRegistry::add(this, v3);
  long long v4 = v6;
}

re::NetworkCompatSerializer *re::internal::defaultConstruct<re::NetworkCompatSerializer>(int a1, int a2, re::NetworkCompatSerializer *this)
{
  return re::NetworkCompatSerializer::NetworkCompatSerializer(this);
}

uint64_t re::internal::defaultDestruct<re::NetworkCompatSerializer>(uint64_t a1, uint64_t a2, uint64_t (***a3)(void))
{
  return (**a3)(a3);
}

uint64_t re::internal::defaultDestructV2<re::NetworkCompatSerializer>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

uint64_t re::introspect_NetworkCompatSerializer(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"NetworkCompatSerializer", (uint64_t (*)(re::internal *))re::allocInfo_NetworkCompatSerializer, (re::IntrospectionBase *(*)(void))re::initInfo_NetworkCompatSerializer, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::NetworkCompatSerializer>, this);
}

void *re::allocInfo_NetworkCompatDeserializer(re *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81028, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF81028))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF81198, "NetworkCompatDeserializer");
    __cxa_guard_release(&qword_26AF81028);
  }
  return &unk_26AF81198;
}

void re::initInfo_NetworkCompatDeserializer(re *this, re::IntrospectionBase *a2)
{
  v5[0] = 0xEFB8C0610360E046;
  v5[1] = "NetworkCompatDeserializer";
  re::StringID::destroyString((re::StringID *)v5);
  *((_OWORD *)this + 2) = v6;
  *((void *)this + 2) = 0x1D000000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 0;
  *((void *)this + 8) = &re::initInfo_NetworkCompatDeserializer(re::IntrospectionBase *)::structureAttributes;
  *((void *)this + 9) = re::internal::defaultConstruct<re::NetworkCompatDeserializer>;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 10) = re::internal::defaultDestruct<re::NetworkCompatDeserializer>;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::NetworkCompatDeserializer>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::NetworkCompatDeserializer>;
  re::IntrospectionRegistry::add(this, v3);
  long long v4 = v6;
}

re::NetworkCompatDeserializer *re::internal::defaultConstruct<re::NetworkCompatDeserializer>(int a1, int a2, re::NetworkCompatDeserializer *this)
{
  return re::NetworkCompatDeserializer::NetworkCompatDeserializer(this);
}

uint64_t re::internal::defaultDestruct<re::NetworkCompatDeserializer>(uint64_t a1, uint64_t a2, uint64_t (***a3)(void))
{
  return (**a3)(a3);
}

uint64_t re::internal::defaultDestructV2<re::NetworkCompatDeserializer>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

uint64_t re::introspect_NetworkCompatDeserializer(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"NetworkCompatDeserializer", (uint64_t (*)(re::internal *))re::allocInfo_NetworkCompatDeserializer, (re::IntrospectionBase *(*)(void))re::initInfo_NetworkCompatDeserializer, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::NetworkCompatDeserializer>, this);
}

uint64_t re::Serializer<re::EncoderBinary<re::FixedArrayInputStream>>::open(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v8 = *(void *)(a1 + 192);
  if (*(_DWORD *)(v8 + 24) != *(_DWORD *)(a1 + 200))
  {
    re::Serializer<re::EncoderBinary<re::FixedArrayInputStream>>::deinit((void *)a1);
    re::Serializer<re::EncoderBinary<re::FixedArrayInputStream>>::init(a1, v8);
  }
  v9.n128_f64[0] = re::Encoder<re::EncoderBinary<re::DynamicArrayBufferedOutputStream>,re::DynamicArrayBufferedOutputStream>::open(a1 + 24, a2, 0, 0xFFFFFFFFLL, a3, a4);
  int8x16_t v10 = *(uint64_t (**)(uint64_t, __n128))(*(void *)a1 + 48);
  return v10(a1, v9);
}

void *re::ecs2::allocInfo_ImageBasedReflectionRootComponent(re::ecs2 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&_MergedGlobals_154, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&_MergedGlobals_154))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF81228, "ImageBasedReflectionRootComponent");
    __cxa_guard_release(&_MergedGlobals_154);
  }
  return &unk_26AF81228;
}

void re::ecs2::initInfo_ImageBasedReflectionRootComponent(re::ecs2 *this, re::IntrospectionBase *a2)
{
  v9[0] = 0xCAF0671912AB7AF0;
  v9[1] = "ImageBasedReflectionRootComponent";
  re::StringID::destroyString((re::StringID *)v9);
  *((_OWORD *)this + 2) = v10;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81220, memory_order_acquire) & 1) == 0)
  {
    long long v4 = (re *)__cxa_guard_acquire(&qword_26AF81220);
    if (v4)
    {
      float v5 = re::introspectionAllocator(v4);
      uint64_t v6 = re::ecs2::introspect_Component((re::IntrospectionBase **)1);
      uint64_t v7 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v5 + 32))(v5, 72, 8);
      *(_DWORD *)uint64_t v7 = 1;
      *(void *)(v7 + 8) = "Component";
      *(void *)(v7 + 16) = v6;
      *(void *)(v7 + 24) = 0;
      *(void *)(v7 + 32) = 0;
      *(_DWORD *)(v7 + 40) = 3;
      *(void *)(v7 + 48) = 0;
      *(void *)(v7 + 56) = 0;
      *(_DWORD *)(v7 + 64) = 0;
      qword_26AF81218 = v7;
      __cxa_guard_release(&qword_26AF81220);
    }
  }
  *((void *)this + 2) = 0x2000000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 1;
  *((void *)this + 8) = &qword_26AF81218;
  *((void *)this + 9) = re::internal::defaultConstruct<re::ecs2::ImageBasedReflectionRootComponent>;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 10) = re::internal::defaultDestruct<re::ecs2::ImageBasedReflectionRootComponent>;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::ecs2::ImageBasedReflectionRootComponent>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::ecs2::ImageBasedReflectionRootComponent>;
  re::IntrospectionRegistry::add(this, v3);
  long long v8 = v10;
}

void re::internal::defaultConstruct<re::ecs2::ImageBasedReflectionRootComponent>(int a1, int a2, ArcSharedObject *this)
{
  *(_OWORD *)this = 0u;
  *((_OWORD *)this + 1) = 0u;
  ArcSharedObject::ArcSharedObject(this, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E4C50;
}

uint64_t re::internal::defaultDestruct<re::ecs2::ImageBasedReflectionRootComponent>(uint64_t a1, uint64_t a2, uint64_t (***a3)(void))
{
  return (**a3)(a3);
}

void re::internal::defaultConstructV2<re::ecs2::ImageBasedReflectionRootComponent>(ArcSharedObject *a1)
{
  *(_OWORD *)a1 = 0u;
  *((_OWORD *)a1 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(a1, 0);
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 24) = 0;
  *(void *)uint64_t v1 = &unk_26E6E4C50;
}

uint64_t re::internal::defaultDestructV2<re::ecs2::ImageBasedReflectionRootComponent>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

uint64_t re::ecs2::introspect_ImageBasedReflectionRootComponent(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"ImageBasedReflectionRootComponent", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_ImageBasedReflectionRootComponent, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_ImageBasedReflectionRootComponent, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::ImageBasedReflectionRootComponent>, this);
}

void re::ecs2::ImageBasedReflectionRootComponent::~ImageBasedReflectionRootComponent(re::ecs2::ImageBasedReflectionRootComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ImageBasedReflectionRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::ImageBasedReflectionRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ImageBasedReflectionRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::ImageBasedReflectionRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::ImageBasedReflectionRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::introspect_REForceEffectInputs(re *this, const re::IntrospectionBase *a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF812A8, memory_order_acquire) & 1) == 0)
  {
    unint64_t v24 = (re *)__cxa_guard_acquire(&qword_26AF812A8);
    if (v24)
    {
      long long v25 = re::introspectionAllocator(v24);
      __n128 v26 = (re *)(*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v25 + 32))(v25, 24, 8);
      *(_DWORD *)__n128 v26 = 1;
      *((void *)v26 + 1) = 0;
      *((void *)v26 + 2) = "REForceEffectInputsNone";
      qword_26AF81350 = (uint64_t)v26;
      int32x2_t v27 = re::introspectionAllocator(v26);
      float32x4_t v28 = (re *)(*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v27 + 32))(v27, 24, 8);
      *(_DWORD *)float32x4_t v28 = 1;
      *((void *)v28 + 1) = 1;
      *((void *)v28 + 2) = "REForceEffectInputsPosition";
      qword_26AF81358 = (uint64_t)v28;
      float32x4_t v29 = re::introspectionAllocator(v28);
      float32x4_t v30 = (re *)(*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v29 + 32))(v29, 24, 8);
      *(_DWORD *)float32x4_t v30 = 1;
      *((void *)v30 + 1) = 2;
      *((void *)v30 + 2) = "REForceEffectInputsOrientation";
      qword_26AF81360 = (uint64_t)v30;
      float32x4_t v31 = re::introspectionAllocator(v30);
      unint64_t v32 = (re *)(*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v31 + 32))(v31, 24, 8);
      *(_DWORD *)unint64_t v32 = 1;
      *((void *)v32 + 1) = 4;
      *((void *)v32 + 2) = "REForceEffectInputsVelocity";
      qword_26AF81368 = (uint64_t)v32;
      float32x4_t v33 = re::introspectionAllocator(v32);
      float32x4_t v34 = (re *)(*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v33 + 32))(v33, 24, 8);
      *(_DWORD *)float32x4_t v34 = 1;
      *((void *)v34 + 1) = 8;
      *((void *)v34 + 2) = "REForceEffectInputsAngularVelocity";
      qword_26AF81370 = (uint64_t)v34;
      float32x4_t v35 = re::introspectionAllocator(v34);
      float32x4_t v36 = (re *)(*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v35 + 32))(v35, 24, 8);
      *(_DWORD *)float32x4_t v36 = 1;
      *((void *)v36 + 1) = 16;
      *((void *)v36 + 2) = "REForceEffectInputsDistance";
      qword_26AF81378 = (uint64_t)v36;
      float32x4_t v37 = re::introspectionAllocator(v36);
      float32x4_t v38 = (re *)(*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v37 + 32))(v37, 24, 8);
      *(_DWORD *)float32x4_t v38 = 1;
      *((void *)v38 + 1) = 32;
      *((void *)v38 + 2) = "REForceEffectInputsMass";
      qword_26AF81380 = (uint64_t)v38;
      int8x16_t v39 = re::introspectionAllocator(v38);
      uint64_t v40 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v39 + 32))(v39, 24, 8);
      *(_DWORD *)uint64_t v40 = 1;
      *(void *)(v40 + 8) = 64;
      *(void *)(v40 + 16) = "REForceEffectInputsInertiaTensor";
      qword_26AF81388 = v40;
      __cxa_guard_release(&qword_26AF812A8);
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF812B0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF812B0))
  {
    re::IntrospectionBasic::IntrospectionBasic((re::IntrospectionBasic *)&qword_26AF81410, "REForceEffectInputs", 4, 4, 1, 1);
    qword_26AF81410 = (uint64_t)&unk_26E715E00;
    qword_26AF81450 = (uint64_t)&re::introspect_REForceEffectInputs(BOOL)::enumTable;
    dword_26AF81420 = 9;
    __cxa_guard_release(&qword_26AF812B0);
  }
  if ((_MergedGlobals_155 & 1) == 0)
  {
    _MergedGlobals_155 = 1;
    re::IntrospectionRegistry::add((re::IntrospectionRegistry *)&qword_26AF81410, a2);
    uint64_t v42 = 0xDDBD7482084DEE4;
    float32x4_t v43 = "REForceEffectInputs";
    v46[0] = 0x607DD0F01DCLL;
    v46[1] = "uint32_t";
    uint64_t v2 = (uint64_t *)re::HashTable<re::StringID,re::StateParameterInt *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::tryGet((uint64_t)&unk_2687A0D30, v46);
    if (v2)
    {
      uint64_t v3 = *v2;
      re::StringID::destroyString((re::StringID *)v46);
      long long v4 = (unsigned int *)qword_26AF81450;
      v45[1] = v3;
      re::TypeBuilder::beginEnumType((uint64_t)v46, &v42, 1, 1, (uint64_t)v45);
      unint64_t v6 = *v4;
      if (v6)
      {
        for (unint64_t i = 0; i < v6; ++i)
        {
          uint64_t v8 = *(void *)(*((void *)v4 + 1) + 8 * i);
          if (*(_DWORD *)v8 == 1)
          {
            __n128 v9 = *(char **)(v8 + 16);
            if (v9)
            {
              uint64_t v10 = *v9;
              if (*v9)
              {
                char v11 = v9[1];
                if (v11)
                {
                  float32x4_t v12 = (unsigned __int8 *)(v9 + 2);
                  do
                  {
                    uint64_t v10 = 31 * v10 + v11;
                    int v13 = *v12++;
                    char v11 = v13;
                  }
                  while (v13);
                }
              }
            }
            else
            {
              uint64_t v10 = 0;
            }
            uint64_t v14 = *(void *)(v8 + 8);
            *(void *)&v44.var0 = 2 * v10;
            v44.var1 = v9;
            re::TypeBuilder::addEnumConstant((re::TypeBuilder *)v46, v14, &v44);
            re::StringID::destroyString((re::StringID *)&v44);
            unint64_t v6 = *v4;
          }
        }
        if (v6)
        {
          for (unint64_t j = 0; j < v6; ++j)
          {
            uint64_t v16 = *(void *)(*((void *)v4 + 1) + 8 * j);
            if (*(_DWORD *)v16 == 2)
            {
              uint64_t v17 = *(char **)(v16 + 16);
              if (v17)
              {
                uint64_t v18 = *v17;
                if (*v17)
                {
                  char v19 = v17[1];
                  if (v19)
                  {
                    long long v20 = (unsigned __int8 *)(v17 + 2);
                    do
                    {
                      uint64_t v18 = 31 * v18 + v19;
                      int v21 = *v20++;
                      char v19 = v21;
                    }
                    while (v21);
                  }
                }
              }
              else
              {
                uint64_t v18 = 0;
              }
              uint64_t v22 = *(void *)(v16 + 8);
              *(void *)&v44.var0 = 2 * v18;
              v44.var1 = v17;
              re::TypeBuilder::addEnumConstantRenaming((re::TypeBuilder *)v46, v22, &v44);
              re::StringID::destroyString((re::StringID *)&v44);
              unint64_t v6 = *v4;
            }
          }
        }
      }
      re::TypeBuilder::~TypeBuilder((re::TypeBuilder *)v46, v23);
      xmmword_26AF81430 = (__int128)v44;
      re::StringID::destroyString((re::StringID *)&v42);
    }
    else
    {
      re::StringID::destroyString((re::StringID *)v46);
      re::internal::assertLog((re::internal *)5, v41, "assertion failure: '%s' (%s:line %i) Failed to determine underlying type of enum %s.", "valueID.isValid()", "registerEnumType", 2796, "REForceEffectInputs", v42, v43);
      _os_crash();
      __break(1u);
    }
  }
}

void *re::ecs2::allocInfo_ForceEffectDesc(re::ecs2 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF812C8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF812C8))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF814A0, "ForceEffectDesc");
    __cxa_guard_release(&qword_26AF812C8);
  }
  return &unk_26AF814A0;
}

void re::ecs2::initInfo_ForceEffectDesc(re::ecs2 *this, re::IntrospectionBase *a2)
{
  v20[0] = 0xA2B91F6A98FF61DALL;
  v20[1] = "ForceEffectDesc";
  re::StringID::destroyString((re::StringID *)v20);
  *((_OWORD *)this + 2) = v21;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF812D0, memory_order_acquire) & 1) == 0)
  {
    long long v4 = (re *)__cxa_guard_acquire(&qword_26AF812D0);
    if (v4)
    {
      float v5 = re::introspectionAllocator(v4);
      uint64_t v6 = re::introspect_ForceEffectDefinition((re::IntrospectionBase **)1);
      uint64_t v7 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v5 + 32))(v5, 72, 8);
      *(_DWORD *)uint64_t v7 = 1;
      *(void *)(v7 + 8) = "def";
      *(void *)(v7 + 16) = v6;
      *(void *)(v7 + 24) = 0;
      *(void *)(v7 + 32) = 1;
      *(_DWORD *)(v7 + 40) = 0;
      *(void *)(v7 + 48) = 0;
      *(void *)(v7 + 56) = 0;
      *(_DWORD *)(v7 + 64) = 0;
      qword_26AF81330 = v7;
      uint64_t v8 = (re *)re::introspectionAllocator((re *)v7);
      re::introspect_REForceEffectInputs(v8, v9);
      uint64_t v10 = (*(uint64_t (**)(re *, uint64_t, uint64_t))(*(void *)v8 + 32))(v8, 72, 8);
      *(_DWORD *)uint64_t v10 = 1;
      *(void *)(v10 + 8) = "inputs";
      *(void *)(v10 + 16) = &qword_26AF81410;
      *(void *)(v10 + 24) = 0;
      *(void *)(v10 + 32) = 0xB000000002;
      *(_DWORD *)(v10 + 40) = 0;
      *(void *)(v10 + 48) = 0;
      *(void *)(v10 + 56) = 0;
      *(_DWORD *)(v10 + 64) = 0;
      qword_26AF81338 = v10;
      char v11 = re::introspectionAllocator((re *)v10);
      int v13 = re::IntrospectionInfo<re::StringID>::get(1, v12);
      uint64_t v14 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v11 + 32))(v11, 72, 8);
      *(_DWORD *)uint64_t v14 = 1;
      *(void *)(v14 + 8) = "eventKey";
      *(void *)(v14 + 16) = v13;
      *(void *)(v14 + 24) = 0;
      *(void *)(v14 + 32) = 0xB800000003;
      *(_DWORD *)(v14 + 40) = 0;
      *(void *)(v14 + 48) = 0;
      *(void *)(v14 + 56) = 0;
      *(_DWORD *)(v14 + 64) = 0;
      qword_26AF81340 = v14;
      char v15 = re::introspectionAllocator((re *)v14);
      uint64_t v17 = re::IntrospectionInfo<re::DynamicArray<unsigned char>>::get(1, v16);
      uint64_t v18 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v15 + 32))(v15, 72, 8);
      *(_DWORD *)uint64_t v18 = 1;
      *(void *)(v18 + 8) = "userData";
      *(void *)(v18 + 16) = v17;
      *(void *)(v18 + 24) = 0;
      *(void *)(v18 + 32) = 0xC800000004;
      *(_DWORD *)(v18 + 40) = 0;
      *(void *)(v18 + 48) = 0;
      *(void *)(v18 + 56) = 0;
      *(_DWORD *)(v18 + 64) = 0;
      qword_26AF81348 = v18;
      __cxa_guard_release(&qword_26AF812D0);
    }
  }
  *((void *)this + 2) = 0x11000000008;
  *((_DWORD *)this + 6) = 16;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 4;
  *((void *)this + 8) = &qword_26AF81330;
  *((void *)this + 9) = re::internal::defaultConstruct<re::ecs2::ForceEffectDesc>;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 10) = re::internal::defaultDestruct<re::ecs2::ForceEffectDesc>;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::ecs2::ForceEffectDesc>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::ecs2::ForceEffectDesc>;
  re::IntrospectionRegistry::add(this, v3);
  long long v19 = v21;
}

void re::internal::defaultConstruct<re::ecs2::ForceEffectDesc>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0x3F80000000000000;
  *(void *)(a3 + 32) = -3229614080;
  *(unsigned char *)(a3 + 40) = 0;
  *(unsigned char *)(a3 + 44) = 0;
  *(unsigned char *)(a3 + 64) = 0;
  *(void *)(a3 + 88) = 0;
  *(unsigned char *)(a3 + 152) = 0;
  *(unsigned char *)(a3 + 168) = 0;
  *(void *)(a3 + 120) = 0;
  *(void *)(a3 + 128) = 0;
  *(unsigned char *)(a3 + 136) = 0;
  *(_DWORD *)(a3 + 176) = 0;
  *(void *)(a3 + 184) = 0;
  *(void *)(a3 + 192) = "";
  *(void *)(a3 + 232) = 0;
  *(void *)(a3 + 208) = 0;
  *(void *)(a3 + 216) = 0;
  *(void *)(a3 + 200) = 0;
  *(_DWORD *)(a3 + 224) = 0;
  *(void *)(a3 + 256) = 0;
}

uint64_t *re::internal::defaultDestruct<re::ecs2::ForceEffectDesc>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  re::DynamicArray<unsigned long>::deinit(a3 + 200);
  re::StringID::destroyString((re::StringID *)(a3 + 184));
  return std::unique_ptr<re::ForceEffectFunctionBase,std::function<void ()(re::ForceEffectFunctionBase*)>>::~unique_ptr[abi:nn180100]((uint64_t *)(a3 + 88));
}

uint64_t re::internal::defaultConstructV2<re::ecs2::ForceEffectDesc>(uint64_t result)
{
  *(void *)double result = 0;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0x3F80000000000000;
  *(void *)(result + 32) = -3229614080;
  *(unsigned char *)(result + 40) = 0;
  *(unsigned char *)(result + 44) = 0;
  *(unsigned char *)(result + 64) = 0;
  *(void *)(result + 88) = 0;
  *(unsigned char *)(result + 152) = 0;
  *(unsigned char *)(result + 168) = 0;
  *(void *)(result + 120) = 0;
  *(void *)(result + 128) = 0;
  *(unsigned char *)(result + 136) = 0;
  *(_DWORD *)(result + 176) = 0;
  *(void *)(result + 184) = 0;
  *(void *)(result + 192) = "";
  *(void *)(result + 232) = 0;
  *(void *)(result + 208) = 0;
  *(void *)(result + 216) = 0;
  *(void *)(result + 200) = 0;
  *(_DWORD *)(result + 224) = 0;
  *(void *)(result + 256) = 0;
  return result;
}

uint64_t *re::internal::defaultDestructV2<re::ecs2::ForceEffectDesc>(uint64_t a1)
{
  re::DynamicArray<unsigned long>::deinit(a1 + 200);
  re::StringID::destroyString((re::StringID *)(a1 + 184));
  return std::unique_ptr<re::ForceEffectFunctionBase,std::function<void ()(re::ForceEffectFunctionBase*)>>::~unique_ptr[abi:nn180100]((uint64_t *)(a1 + 88));
}

void *re::ecs2::allocInfo_ForceEffectComponent(re::ecs2 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF812E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF812E0))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF81518, "ForceEffectComponent");
    __cxa_guard_release(&qword_26AF812E0);
  }
  return &unk_26AF81518;
}

void re::ecs2::initInfo_ForceEffectComponent(re::ecs2 *this, re::IntrospectionBase *a2)
{
  v14[0] = 0xC509062FDBB70842;
  v14[1] = "ForceEffectComponent";
  re::StringID::destroyString((re::StringID *)v14);
  *((_OWORD *)this + 2) = v15;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF812E8, memory_order_acquire) & 1) == 0)
  {
    long long v4 = (re *)__cxa_guard_acquire(&qword_26AF812E8);
    if (v4)
    {
      float v5 = re::introspectionAllocator(v4);
      uint64_t v6 = re::ecs2::introspect_Component((re::IntrospectionBase **)1);
      uint64_t v7 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v5 + 32))(v5, 72, 8);
      *(_DWORD *)uint64_t v7 = 1;
      *(void *)(v7 + 8) = "Component";
      *(void *)(v7 + 16) = v6;
      *(void *)(v7 + 24) = 0;
      *(void *)(v7 + 32) = 0;
      *(_DWORD *)(v7 + 40) = 3;
      *(void *)(v7 + 48) = 0;
      *(void *)(v7 + 56) = 0;
      *(_DWORD *)(v7 + 64) = 0;
      qword_26AF81318 = v7;
      uint64_t v8 = re::introspectionAllocator((re *)v7);
      re::IntrospectionInfo<re::Optional<REPhysicsForceEffectPlaybackRequest>>::get((uint64_t)v8, v9);
      uint64_t v10 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v8 + 32))(v8, 72, 8);
      *(_DWORD *)uint64_t v10 = 1;
      *(void *)(v10 + 8) = "state";
      *(void *)(v10 + 16) = qword_26AF81390;
      *(void *)(v10 + 24) = 0;
      *(void *)(v10 + 32) = 0x1900000001;
      *(_DWORD *)(v10 + 40) = 0;
      *(void *)(v10 + 48) = 0;
      *(void *)(v10 + 56) = 0;
      *(_DWORD *)(v10 + 64) = 0;
      qword_26AF81320 = v10;
      char v11 = (re::ecs2 *)re::introspectionAllocator((re *)v10);
      re::IntrospectionInfo<re::DynamicArray<re::ecs2::ForceEffectDesc>>::get(v11);
      uint64_t v12 = (*(uint64_t (**)(re::ecs2 *, uint64_t, uint64_t))(*(void *)v11 + 32))(v11, 72, 8);
      *(_DWORD *)uint64_t v12 = 1;
      *(void *)(v12 + 8) = "descriptions";
      *(void *)(v12 + 16) = &qword_26AF813D0;
      *(void *)(v12 + 24) = 0;
      *(void *)(v12 + 32) = 0x2000000002;
      *(_DWORD *)(v12 + 40) = 0;
      *(void *)(v12 + 48) = 0;
      *(void *)(v12 + 56) = 0;
      *(_DWORD *)(v12 + 64) = 0;
      qword_26AF81328 = v12;
      __cxa_guard_release(&qword_26AF812E8);
    }
  }
  *((void *)this + 2) = 0xB000000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 3;
  *((void *)this + 8) = &qword_26AF81318;
  *((void *)this + 9) = re::internal::defaultConstruct<re::ecs2::ForceEffectComponent>;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 10) = re::internal::defaultDestruct<re::ecs2::ForceEffectComponent>;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::ecs2::ForceEffectComponent>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::ecs2::ForceEffectComponent>;
  re::IntrospectionRegistry::add(this, v3);
  long long v13 = v15;
}

void re::IntrospectionInfo<re::Optional<REPhysicsForceEffectPlaybackRequest>>::get(uint64_t a1, const re::IntrospectionBase *a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF812F0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF812F0))
  {
    re::IntrospectionOptionalBase::IntrospectionOptionalBase((re::IntrospectionOptionalBase *)qword_26AF81390);
    qword_26AF81390[0] = (uint64_t)&unk_26E6E4D40;
    __cxa_guard_release(&qword_26AF812F0);
  }
  if ((byte_26AF812A2 & 1) == 0)
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF812B8, memory_order_acquire) & 1) == 0)
    {
      float32x4_t v31 = (re *)__cxa_guard_acquire(&qword_26AF812B8);
      if (v31)
      {
        unint64_t v32 = re::introspectionAllocator(v31);
        float32x4_t v33 = (re *)(*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v32 + 32))(v32, 24, 8);
        *(_DWORD *)float32x4_t v33 = 1;
        *((void *)v33 + 1) = 0;
        *((void *)v33 + 2) = "REPhysicsForceEffectPlaybackRequestStart";
        qword_26AF81300 = (uint64_t)v33;
        float32x4_t v34 = re::introspectionAllocator(v33);
        float32x4_t v35 = (re *)(*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v34 + 32))(v34, 24, 8);
        *(_DWORD *)float32x4_t v35 = 1;
        *((void *)v35 + 1) = 1;
        *((void *)v35 + 2) = "REPhysicsForceEffectPlaybackRequestPause";
        qword_26AF81308 = (uint64_t)v35;
        float32x4_t v36 = re::introspectionAllocator(v35);
        uint64_t v37 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v36 + 32))(v36, 24, 8);
        *(_DWORD *)uint64_t v37 = 1;
        *(void *)(v37 + 8) = 2;
        *(void *)(v37 + 16) = "REPhysicsForceEffectPlaybackRequestResume";
        qword_26AF81310 = v37;
        __cxa_guard_release(&qword_26AF812B8);
      }
    }
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF812C0, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_26AF812C0))
    {
      re::IntrospectionBasic::IntrospectionBasic((re::IntrospectionBasic *)&qword_26AF81458, "REPhysicsForceEffectPlaybackRequest", 1, 1, 1, 1);
      qword_26AF81458 = (uint64_t)&unk_26E715E00;
      qword_26AF81498 = (uint64_t)&re::introspect_REPhysicsForceEffectPlaybackRequest(BOOL)::enumTable;
      dword_26AF81468 = 9;
      __cxa_guard_release(&qword_26AF812C0);
    }
    if ((byte_26AF812A1 & 1) == 0)
    {
      byte_26AF812A1 = 1;
      re::IntrospectionRegistry::add((re::IntrospectionRegistry *)&qword_26AF81458, a2);
      *(void *)&long long v40 = 0x1265D1D99F95FF58;
      *((void *)&v40 + 1) = "REPhysicsForceEffectPlaybackRequest";
      uint64_t v43 = 0x31CD534126;
      v44[0] = "uint8_t";
      uint64_t v2 = (uint64_t *)re::HashTable<re::StringID,re::StateParameterInt *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::tryGet((uint64_t)&unk_2687A0D30, &v43);
      if (!v2)
      {
        re::StringID::destroyString((re::StringID *)&v43);
        re::internal::assertLog((re::internal *)5, v38, "assertion failure: '%s' (%s:line %i) Failed to determine underlying type of enum %s.", "valueID.isValid()", "registerEnumType", 2796, "REPhysicsForceEffectPlaybackRequest");
        _os_crash();
        __break(1u);
        return;
      }
      uint64_t v3 = *v2;
      re::StringID::destroyString((re::StringID *)&v43);
      long long v4 = (unsigned int *)qword_26AF81498;
      *((void *)&v42 + 1) = v3;
      re::TypeBuilder::beginEnumType((uint64_t)&v43, (uint64_t *)&v40, 1, 1, (uint64_t)&v42);
      unint64_t v6 = *v4;
      if (v6)
      {
        for (unint64_t i = 0; i < v6; ++i)
        {
          uint64_t v8 = *(void *)(*((void *)v4 + 1) + 8 * i);
          if (*(_DWORD *)v8 == 1)
          {
            __n128 v9 = *(char **)(v8 + 16);
            if (v9)
            {
              uint64_t v10 = *v9;
              if (*v9)
              {
                char v11 = v9[1];
                if (v11)
                {
                  uint64_t v12 = (unsigned __int8 *)(v9 + 2);
                  do
                  {
                    uint64_t v10 = 31 * v10 + v11;
                    int v13 = *v12++;
                    char v11 = v13;
                  }
                  while (v13);
                }
              }
            }
            else
            {
              uint64_t v10 = 0;
            }
            uint64_t v14 = *(void *)(v8 + 8);
            *(void *)&v41.var0 = 2 * v10;
            v41.var1 = v9;
            re::TypeBuilder::addEnumConstant((re::TypeBuilder *)&v43, v14, &v41);
            re::StringID::destroyString((re::StringID *)&v41);
            unint64_t v6 = *v4;
          }
        }
        if (v6)
        {
          for (unint64_t j = 0; j < v6; ++j)
          {
            uint64_t v16 = *(void *)(*((void *)v4 + 1) + 8 * j);
            if (*(_DWORD *)v16 == 2)
            {
              uint64_t v17 = *(char **)(v16 + 16);
              if (v17)
              {
                uint64_t v18 = *v17;
                if (*v17)
                {
                  char v19 = v17[1];
                  if (v19)
                  {
                    long long v20 = (unsigned __int8 *)(v17 + 2);
                    do
                    {
                      uint64_t v18 = 31 * v18 + v19;
                      int v21 = *v20++;
                      char v19 = v21;
                    }
                    while (v21);
                  }
                }
              }
              else
              {
                uint64_t v18 = 0;
              }
              uint64_t v22 = *(void *)(v16 + 8);
              *(void *)&v41.var0 = 2 * v18;
              v41.var1 = v17;
              re::TypeBuilder::addEnumConstantRenaming((re::TypeBuilder *)&v43, v22, &v41);
              re::StringID::destroyString((re::StringID *)&v41);
              unint64_t v6 = *v4;
            }
          }
        }
      }
      re::TypeBuilder::~TypeBuilder((re::TypeBuilder *)&v43, v23);
      xmmword_26AF81478 = (__int128)v41;
      re::StringID::destroyString((re::StringID *)&v40);
    }
    if ((byte_26AF812A2 & 1) == 0)
    {
      byte_26AF812A2 = 1;
      int v24 = dword_26AF81470;
      ArcSharedObject::ArcSharedObject((ArcSharedObject *)qword_26AF81390, 0);
      unk_26AF813A0 = 0x20000000DLL;
      dword_26AF813A8 = v24;
      word_26AF813AC = 0;
      *(void *)&xmmword_26AF813B0 = 0;
      *((void *)&xmmword_26AF813B0 + 1) = 0xFFFFFFFFLL;
      qword_26AF813C0 = (uint64_t)&qword_26AF81458;
      unk_26AF813C8 = 0;
      qword_26AF81390[0] = (uint64_t)&unk_26E6E4D40;
      re::IntrospectionRegistry::add(v25, v26);
      re::getPrettyTypeName((re *)qword_26AF81390, (const re::IntrospectionBase *)&v43);
      if (v44[0]) {
        int32x2_t v27 = (const char *)v44[1];
      }
      else {
        int32x2_t v27 = (char *)v44 + 1;
      }
      if (v43 && (v44[0] & 1) != 0) {
        (*(void (**)(void))(*(void *)v43 + 40))();
      }
      long long v40 = xmmword_26AF81478;
      float32x4_t v28 = (uint64_t *)re::HashTable<re::StringID,re::StateParameterInt *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::tryGet((uint64_t)&unk_2687A0D30, &v41);
      if (v28)
      {
        uint64_t v29 = *v28;
        *((void *)&v39 + 1) = v29;
      }
      else
      {
        long long v42 = v40;
        re::TypeBuilder::beginOptionalType((uint64_t)&v43, (uint64_t *)&v41, 2uLL, 1uLL, &v42);
        re::TypeBuilder::setOptionalAccessors((uint64_t)&v43, (void *(*)(void *))re::TypeBuilderHelper::registerOptional<REPhysicsForceEffectPlaybackRequest>(re::TypeRegistry *,re::StringID const&,re::TypeID const&)::{lambda(void *)#1}::__invoke, (void (*)(void *, const void *))re::TypeBuilderHelper::registerOptional<REPhysicsForceEffectPlaybackRequest>(re::TypeRegistry *,re::StringID const&,re::TypeID const&)::{lambda(void *,void const*)#1}::__invoke);
        re::TypeBuilder::~TypeBuilder((re::TypeBuilder *)&v43, v30);
      }
      xmmword_26AF813B0 = v39;
      re::StringID::destroyString((re::StringID *)&v41);
    }
  }
}

void re::IntrospectionInfo<re::DynamicArray<re::ecs2::ForceEffectDesc>>::get(re::ecs2 *a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF812F8, memory_order_acquire) & 1) == 0)
  {
    a1 = (re::ecs2 *)__cxa_guard_acquire(&qword_26AF812F8);
    if (a1)
    {
      re::IntrospectionDynamicArrayBase::IntrospectionDynamicArrayBase((re::IntrospectionDynamicArrayBase *)&qword_26AF813D0);
      qword_26AF813D0 = (uint64_t)&unk_26E6E4DC0;
      __cxa_guard_release(&qword_26AF812F8);
    }
  }
  if ((byte_26AF812A3 & 1) == 0)
  {
    uint64_t v1 = (void *)qword_26AF812D8;
    if (qword_26AF812D8
      || (uint64_t v1 = re::ecs2::allocInfo_ForceEffectDesc(a1),
          qword_26AF812D8 = (uint64_t)v1,
          re::ecs2::initInfo_ForceEffectDesc((re::ecs2 *)v1, v2),
          (byte_26AF812A3 & 1) == 0))
    {
      byte_26AF812A3 = 1;
      int v3 = *((_DWORD *)v1 + 6);
      ArcSharedObject::ArcSharedObject((ArcSharedObject *)&qword_26AF813D0, 0);
      qword_26AF813E0 = 0x2800000003;
      dword_26AF813E8 = v3;
      word_26AF813EC = 0;
      *(void *)&xmmword_26AF813F0 = 0;
      *((void *)&xmmword_26AF813F0 + 1) = 0xFFFFFFFFLL;
      qword_26AF81400 = (uint64_t)v1;
      unk_26AF81408 = 0;
      qword_26AF813D0 = (uint64_t)&unk_26E6E4DC0;
      re::IntrospectionRegistry::add(v4, v5);
      re::getPrettyTypeName((re *)&qword_26AF813D0, (const re::IntrospectionBase *)&v14);
      if (v15) {
        unint64_t v6 = *(const char **)&v16[7];
      }
      else {
        unint64_t v6 = v16;
      }
      if (v14 && (v15 & 1) != 0) {
        (*(void (**)(void))(*(void *)v14 + 40))();
      }
      long long v11 = *((_OWORD *)v1 + 2);
      uint64_t v7 = (uint64_t *)re::HashTable<re::StringID,re::StateParameterInt *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::tryGet((uint64_t)&unk_2687A0D30, v12);
      if (v7)
      {
        uint64_t v8 = *v7;
        *((void *)&v10 + 1) = v8;
      }
      else
      {
        long long v13 = v11;
        re::TypeBuilder::beginListType((uint64_t)&v14, v12, 1, 0x28uLL, 8uLL, &v13);
        re::TypeBuilder::setConstructor((uint64_t)&v14, (uint64_t)re::TypeBuilderHelper::registerDynamicArray<re::ecs2::ForceEffectDesc>(re::TypeRegistry *,re::StringID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#1}::__invoke);
        re::TypeBuilder::setDestructor((uint64_t)&v14, (uint64_t)re::TypeBuilderHelper::registerDynamicArray<re::ecs2::ForceEffectDesc>(re::TypeRegistry *,re::StringID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#2}::__invoke);
        re::TypeBuilder::setListUsesContiguousStorage((uint64_t)&v14, 1);
        re::TypeBuilder::setListAccessors((uint64_t)&v14, (uint64_t)re::TypeBuilderHelper::registerDynamicArray<re::ecs2::ForceEffectDesc>(re::TypeRegistry *,re::StringID const&,re::TypeID const&)::{lambda(void *)#1}::__invoke, (uint64_t)re::TypeBuilderHelper::registerDynamicArray<re::ecs2::ForceEffectDesc>(re::TypeRegistry *,re::StringID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,unsigned long)#1}::__invoke);
        re::TypeBuilder::setListIndexer((uint64_t)&v14, (void *(*)(void *, unint64_t))re::TypeBuilderHelper::registerDynamicArray<re::ecs2::ForceEffectDesc>(re::TypeRegistry *,re::StringID const&,re::TypeID const&)::{lambda(void *,unsigned long)#1}::__invoke);
        re::TypeBuilder::setListIterator((uint64_t)&v14, (void *(*)(void *, re::Allocator *))re::TypeBuilderHelper::registerDynamicArray<re::ecs2::ForceEffectDesc>(re::TypeRegistry *,re::StringID const&,re::TypeID const&)::{lambda(void *,re::Allocator *)#1}::__invoke, (void *(*)(void *))re::TypeBuilderHelper::registerDynamicArray<re::ecs2::ForceEffectDesc>(re::TypeRegistry *,re::StringID const&,re::TypeID const&)::{lambda(void *)#2}::__invoke, (void (*)(void *, re::Allocator *))re::TypeBuilderHelper::registerDynamicArray<re::ecs2::ForceEffectDesc>(re::TypeRegistry *,re::StringID const&,re::TypeID const&)::{lambda(void *,re::Allocator *)#2}::__invoke);
        re::TypeBuilder::~TypeBuilder((re::TypeBuilder *)&v14, v9);
      }
      xmmword_26AF813F0 = v10;
      re::StringID::destroyString((re::StringID *)v12);
    }
  }
}

uint64_t re::internal::defaultConstruct<re::ecs2::ForceEffectComponent>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return re::make::shared::unsafelyInplace<re::ecs2::ForceEffectComponent>(a3);
}

uint64_t re::internal::defaultDestruct<re::ecs2::ForceEffectComponent>(uint64_t a1, uint64_t a2, uint64_t (***a3)(void))
{
  return (**a3)(a3);
}

uint64_t re::internal::defaultDestructV2<re::ecs2::ForceEffectComponent>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

uint64_t re::ecs2::introspect_ForceEffectComponent(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"ForceEffectComponent", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_ForceEffectComponent, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_ForceEffectComponent, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::ForceEffectComponent>, this);
}

re *re::internal::destroyPersistent<re::ForceEffectDefinition>(re *result, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v4 = re::globalAllocators(result)[2];
    std::unique_ptr<re::ForceEffectFunctionBase,std::function<void ()(re::ForceEffectFunctionBase*)>>::~unique_ptr[abi:nn180100]((uint64_t *)(a3 + 88));
    float v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 40);
    return (re *)v5(v4, a3);
  }
  return result;
}

re *re::ecs2::ForceEffectComponent::removeDefinitionLast(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a1 + 120) + 8 * *(void *)(a1 + 104) - 8);
  WeakRetained = (char *)objc_loadWeakRetained((id *)(a1 + 72));
  unint64_t v6 = WeakRetained - 8;
  if (!WeakRetained) {
    unint64_t v6 = 0;
  }
  uint64_t v9 = v4;
  *(void *)(v4 + 128) = 0;
  re::DynamicArray<unsigned long long>::remove((uint64_t)(v6 + 344), &v9);
  if (WeakRetained) {

  }
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(v4 + 88);
  re::HashTable<void *,re::ecs2::CustomForceEffectIdentifier,re::Hash<void *>,re::EqualTo<void *>,true,false>::remove(v7 + 8, &v9);
  re::StringID::destroyString((re::StringID *)(*(void *)(a1 + 160) + 16 * *(void *)(a1 + 144) - 16));
  --*(void *)(a1 + 144);
  ++*(_DWORD *)(a1 + 152);
  --*(void *)(a1 + 104);
  ++*(_DWORD *)(a1 + 112);
  return re::internal::destroyPersistent<re::ForceEffectDefinition>((re *)"removeDefinitionLast", 95, v4);
}

uint64_t re::ecs2::ForceEffectComponent::updateForceEffectDefinitionAt(uint64_t a1, unint64_t a2, float32x4_t *a3)
{
  uint64_t v78 = *MEMORY[0x263EF8340];
  unint64_t v4 = *(void *)(a1 + 104);
  if (v4 <= a2)
  {
    v62.i64[0] = 0;
    long long v74 = 0u;
    long long v75 = 0u;
    long long v72 = 0u;
    long long v73 = 0u;
    long long v71 = 0u;
    os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
    *(_DWORD *)float32x4_t v76 = 136315906;
    *(void *)&v76[4] = "operator[]";
    *(_WORD *)&v76[12] = 1024;
    *(_DWORD *)&v76[14] = 789;
    *(_WORD *)&v76[18] = 2048;
    *(void *)&v76[20] = a2;
    *(_WORD *)&v76[28] = 2048;
    *(void *)&v76[30] = v4;
    _os_log_send_and_compose_impl();
    _os_crash_msg();
    __break(1u);
LABEL_39:
    v62.i64[0] = 0;
    long long v74 = 0u;
    long long v75 = 0u;
    long long v72 = 0u;
    long long v73 = 0u;
    long long v71 = 0u;
    os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
    *(_DWORD *)float32x4_t v76 = 136315906;
    *(void *)&v76[4] = "operator[]";
    *(_WORD *)&v76[12] = 1024;
    *(_DWORD *)&v76[14] = 789;
    *(_WORD *)&v76[18] = 2048;
    *(void *)&v76[20] = a2;
    *(_WORD *)&v76[28] = 2048;
    *(void *)&v76[30] = v4;
    _os_log_send_and_compose_impl();
    _os_crash_msg();
    __break(1u);
  }
  unint64_t v4 = *(void *)(a1 + 48);
  if (v4 <= a2) {
    goto LABEL_39;
  }
  uint64_t v6 = *(void *)(*(void *)(a1 + 120) + 8 * a2);
  uint64_t v7 = *(void *)(a1 + 64) + 272 * a2;
  *(_DWORD *)(*(void *)(v6 + 88) + 16) = *(_DWORD *)(v7 + 176);
  re::ecs2::TransformComponent::worldSRT(*(re::ecs2::TransformComponent ***)(a1 + 16), (const re::ecs2::Entity *)1, (uint64_t)&v62);
  uint64_t v8 = 0;
  float v9 = v63;
  float v10 = v64;
  float v11 = v10 + v10;
  float v12 = v65;
  float v13 = v12 + v12;
  float v14 = v9 * (float)(v9 + v9);
  float v15 = v10 * (float)(v10 + v10);
  float v16 = v12 * (float)(v12 + v12);
  float v17 = (float)(v9 + v9) * v64;
  float v18 = (float)(v9 + v9) * v65;
  float v19 = v11 * v65;
  float v20 = v11 * v66;
  v21.i32[3] = 0;
  v21.f32[0] = 1.0 - (float)(v15 + v16);
  v21.f32[1] = v17 + (float)(v13 * v66);
  v21.f32[2] = v18 - (float)(v11 * v66);
  float v22 = (float)(v9 + v9) * v66;
  float32_t v23 = v17 - (float)(v13 * v66);
  *(float *)&unsigned int v24 = (float)(v11 * v65) + v22;
  v25.f32[0] = v23;
  v25.f32[1] = 1.0 - (float)(v14 + v16);
  v25.i64[1] = v24;
  float32_t v26 = v19 - v22;
  v27.i32[3] = 0;
  v27.f32[0] = v18 + v20;
  v27.f32[1] = v26;
  v27.f32[2] = 1.0 - (float)(v14 + v15);
  HIDWORD(v28) = 0;
  float32x4_t v29 = vmulq_n_f32(v21, *(float *)v62.i32);
  float32x4_t v30 = v67;
  v30.i32[3] = 1.0;
  float v31 = *(float *)(v7 + 16);
  float v32 = *(float *)(v7 + 20);
  float v33 = v31 + v31;
  float v34 = v32 + v32;
  float v35 = *(float *)(v7 + 24);
  float v36 = *(float *)(v7 + 28);
  float v37 = v35 + v35;
  float v38 = v31 * (float)(v31 + v31);
  v21.f32[0] = v32 * (float)(v32 + v32);
  float v39 = v35 * (float)(v35 + v35);
  float v40 = v33 * v32;
  float v41 = v33 * v35;
  float v42 = v34 * v35;
  float v43 = v33 * v36;
  float v44 = v34 * v36;
  float v45 = v37 * v36;
  HIDWORD(v46) = 0;
  *(float *)&long long v46 = 1.0 - (float)(v21.f32[0] + v39);
  *((float *)&v46 + 1) = v40 + v45;
  *((float *)&v46 + 2) = v41 - v44;
  HIDWORD(v47) = 0;
  *(void *)&long long v47 = __PAIR64__(1.0 - (float)(v38 + v39), v40 - v45);
  *((float *)&v47 + 2) = v42 + v43;
  *(float *)&long long v28 = v41 + v44;
  *((float *)&v28 + 1) = v42 - v43;
  *((float *)&v28 + 2) = 1.0 - (float)(v38 + v21.f32[0]);
  long long v48 = *(_OWORD *)v7;
  HIDWORD(v48) = 1.0;
  float32x4_t v49 = vmulq_n_f32(v25, *(float *)vshrq_n_u64(v62, 0x20uLL).i32);
  *(_OWORD *)float32x4_t v76 = v46;
  *(_OWORD *)&v76[16] = v47;
  float32x4_t v50 = vmulq_laneq_f32(v27, (float32x4_t)v62, 2);
  *(_OWORD *)&v76[32] = v28;
  long long v77 = v48;
  do
  {
    *(long long *)((char *)&v71 + v8) = (__int128)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v29, COERCE_FLOAT(*(_OWORD *)&v76[v8])), v49, *(float32x2_t *)&v76[v8], 1), v50, *(float32x4_t *)&v76[v8], 2), v30, *(float32x4_t *)&v76[v8], 3);
    v8 += 16;
  }
  while (v8 != 64);
  *(_OWORD *)float32x4_t v76 = v71;
  *(_OWORD *)&v76[16] = v72;
  *(_OWORD *)&v76[32] = v73;
  long long v77 = v74;
  re::ecs2::PhysicsSimulationData::transformInPhysicsSimulationSpace(a3, (uint64_t)v76, &v71);
  long long v69 = xmmword_23435FBB0;
  int32x4_t v70 = 0u;
  long long v68 = 0u;
  uint64_t result = re::decomposeScaleRotationTranslation<float>((uint64_t)&v71, &v70, &v69, &v68);
  long long v52 = v69;
  uint64_t v53 = *((void *)&v68 + 1);
  *(void *)uint64_t v6 = v68;
  *(void *)(v6 + 8) = v53;
  *(_OWORD *)(v6 + 16) = v52;
  *(_DWORD *)(v6 + 32) = *(_DWORD *)(v7 + 32);
  *(_DWORD *)(v6 + 36) = *(_DWORD *)(v7 + 36);
  *(unsigned char *)(v6 + 40) = *(unsigned char *)(v7 + 40);
  if (*(unsigned char *)(v6 + 44) || *(unsigned char *)(v7 + 44))
  {
    if (!*(unsigned char *)(v6 + 44) || *(unsigned char *)(v7 + 44))
    {
      if (!*(unsigned char *)(v6 + 44) && *(unsigned char *)(v7 + 44)) {
        *(unsigned char *)(v6 + 44) = 1;
      }
      uint64_t v54 = *(void *)(v7 + 48);
      *(_DWORD *)(v6 + 56) = *(_DWORD *)(v7 + 56);
      *(void *)(v6 + 48) = v54;
    }
    else
    {
      *(unsigned char *)(v6 + 44) = 0;
    }
    if (*(unsigned char *)(v7 + 44))
    {
      float v55 = *(float *)(v6 + 48);
      float v56 = *(float *)(v6 + 52);
      int v57 = 0;
      if (v55 < 0.0) {
        float v55 = 0.0;
      }
      if (*(float *)(v6 + 56) >= 0.0) {
        int v57 = *(_DWORD *)(v6 + 56);
      }
      if (v56 > v55) {
        float v56 = v55;
      }
      *(float *)(v6 + 48) = v55;
      *(float *)(v6 + 52) = v56;
      *(_DWORD *)(v6 + 56) = v57;
    }
  }
  if (*(unsigned char *)(v6 + 64) || *(unsigned char *)(v7 + 64))
  {
    if (!*(unsigned char *)(v6 + 64) || *(unsigned char *)(v7 + 64))
    {
      float32x4_t v58 = (void *)(v6 + 72);
      if (*(unsigned char *)(v6 + 64) || !*(unsigned char *)(v7 + 64))
      {
        uint64_t v59 = *(void *)(v7 + 72);
        *(_DWORD *)(v6 + 80) = *(_DWORD *)(v7 + 80);
        *float32x4_t v58 = v59;
      }
      else
      {
        *(unsigned char *)(v6 + 64) = 1;
        *(_OWORD *)float32x4_t v58 = *(_OWORD *)(v7 + 72);
      }
    }
    else
    {
      *(unsigned char *)(v6 + 64) = 0;
    }
    if (*(unsigned char *)(v7 + 64))
    {
      double v60 = *(double *)(v6 + 72);
      if (v60 < 0.0) {
        double v60 = 0.0;
      }
      *(double *)(v6 + 72) = v60;
      float v61 = *(float *)(v6 + 80);
      if (v61 < 0.0) {
        float v61 = 0.0;
      }
      *(float *)(v6 + 80) = v61;
    }
  }
  return result;
}

BOOL re::ecs2::ForceEffectComponentStateImpl::processDirtyComponents(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  re::internal::AriadneSignpostScopeGuard::AriadneSignpostScopeGuard((re::internal::AriadneSignpostScopeGuard *)v38, 3047, a1);
  uint64_t v8 = (*(uint64_t (**)(void))(**(void **)(*(void *)(a3 + 8) + 56) + 32))(*(void *)(*(void *)(a3 + 8) + 56));
  uint64_t v9 = re::ServiceLocator::serviceOrNull<re::ecs2::PhysicsSimulationService>(v8);
  if (v9
    && (uint64_t v10 = v9,
        uint64_t v11 = *(void *)(a3 + 8),
        uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 24))(v9),
        uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v10 + 40))(v10, v11),
        v37[0] = v12,
        (v37[1] = v13) != 0))
  {
    re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::DataArrayIterator((uint64_t)&v34, a5, 0);
    unint64_t v15 = v34;
    unint64_t v14 = v35;
    unint64_t v34 = a4;
    unint64_t v35 = v15;
    unint64_t v36 = v14;
    if (v15 != a5 || (unsigned __int16)v14 != 0xFFFFLL || (v14 & 0xFFFF0000) != 0xFFFF0000)
    {
      do
      {
        uint64_t v16 = re::DataArray<re::ecs2::Component *>::DataArrayIterator<re::ecs2::Component *,re::ecs2::Component * const&>::operator*((unsigned __int16 *)&v35);
        uint64_t v17 = *(void *)v16;
        uint64_t v18 = *(void *)(*(void *)v16 + 16);
        float v19 = (re::ecs2::PhysicsSimulationData *)re::ecs2::PhysicsSimulationMapping::physicsSimulationDataForEntity(v37, v18);
        if (v19
          && (uint64_t v20 = re::ecs2::PhysicsSimulationData::ensurePhysicsSimulation(v19), (*(unsigned char *)(v18 + 288) & 1) != 0)
          && (uint64_t v21 = v20) != 0)
        {
          WeakRetained = (char *)objc_loadWeakRetained((id *)(v17 + 72));
          if (WeakRetained)
          {
            float32_t v23 = WeakRetained - 8;
          }
          else
          {
            float32_t v23 = 0;
          }
          if (v23 != (char *)v21)
          {
            for (uint64_t i = *(void *)(v17 + 144); i; --i)
              re::ecs2::ForceEffectComponent::removeDefinitionLast(v17, *(void *)(v17 + 80));
          }
          unint64_t v28 = v34;
          unint64_t v29 = re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::handle((unsigned __int16 *)&v35);
          re::ecs2::ComponentBucketsBase::moveComponent(*(re::ecs2::ComponentBucketsBase **)(a3 + 16), v28, v29, *(void *)(a3 + 40));
        }
        else
        {
          unint64_t v24 = v34;
          unint64_t v25 = re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::handle((unsigned __int16 *)&v35);
          re::ecs2::ComponentBucketsBase::moveComponent(*(re::ecs2::ComponentBucketsBase **)(a3 + 16), v24, v25, *(void *)(a3 + 32));
          for (uint64_t j = *(void *)(v17 + 144); j; --j)
            re::ecs2::ForceEffectComponent::removeDefinitionLast(v17, *(void *)(v17 + 80));
        }
        re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::increment(&v35);
      }
      while (v35 != a5 || (unsigned __int16)v36 != 0xFFFF || WORD1(v36) != 0xFFFF);
    }
    BOOL v32 = *(_DWORD *)(a5 + 40) != 0;
  }
  else
  {
    BOOL v32 = 0;
  }
  re::internal::AriadneSignpostScopeGuard::~AriadneSignpostScopeGuard((re::internal::AriadneSignpostScopeGuard *)v38);
  return v32;
}

BOOL re::ecs2::ForceEffectComponentStateImpl::processPreparingComponents(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v87 = *MEMORY[0x263EF8340];
  re::internal::AriadneSignpostScopeGuard::AriadneSignpostScopeGuard((re::internal::AriadneSignpostScopeGuard *)v75, 3047, a1);
  uint64_t v7 = (*(uint64_t (**)(void))(**(void **)(*(void *)(a3 + 8) + 56) + 32))(*(void *)(*(void *)(a3 + 8) + 56));
  uint64_t v8 = re::ServiceLocator::serviceOrNull<re::ecs2::PhysicsSimulationService>(v7);
  if (v8
    && (uint64_t v9 = v8,
        uint64_t v10 = *(void *)(a3 + 8),
        unint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 24))(v8),
        uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v9 + 40))(v9, v10),
        v74[0] = v11,
        (v74[1] = v12) != 0))
  {
    re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::DataArrayIterator((uint64_t)&v82, a5, 0);
    unint64_t v72 = a4;
    long long v73 = v82;
    if ((void)v82 != a5 || WORD4(v82) != 0xFFFFLL || (DWORD2(v82) & 0xFFFF0000) != 0xFFFF0000)
    {
      uint64_t v70 = a3;
      while (1)
      {
        uint64_t v13 = re::DataArray<re::ecs2::Component *>::DataArrayIterator<re::ecs2::Component *,re::ecs2::Component * const&>::operator*((unsigned __int16 *)&v73);
        uint64_t v14 = *(void *)v13;
        unint64_t v15 = (re::ecs2::PhysicsSimulationData *)re::ecs2::PhysicsSimulationMapping::physicsSimulationDataForEntity(v74, *(void *)(*(void *)v13 + 16));
        uint64_t v16 = re::ecs2::PhysicsSimulationData::ensurePhysicsSimulation(v15);
        if (v16) {
          uint64_t v17 = (void *)(v16 + 8);
        }
        else {
          uint64_t v17 = 0;
        }
        uint64_t v18 = (re *)objc_storeWeak((id *)(v14 + 72), v17);
        *(void *)(v14 + 80) = v15;
        unint64_t v19 = *(void *)(v14 + 144);
        unint64_t v20 = *(void *)(v14 + 48);
        if (v19 >= v20) {
          unint64_t v21 = *(void *)(v14 + 48);
        }
        else {
          unint64_t v21 = *(void *)(v14 + 144);
        }
        if (v21)
        {
          unint64_t v11 = 0;
          uint64_t v22 = 0;
          BOOL v23 = 1;
          uint64_t v24 = 184;
          while (v19 != v22)
          {
            if (v20 == v22) {
              goto LABEL_102;
            }
            uint64_t v18 = (re *)re::StringID::operator==((void *)(*(void *)(v14 + 160) + v11), (void *)(*(void *)(v14 + 64) + v24));
            if (!v18) {
              goto LABEL_21;
            }
            BOOL v23 = ++v22 < v21;
            v24 += 272;
            v11 += 16;
            if (v21 == v22) {
              goto LABEL_19;
            }
          }
          uint64_t v76 = 0;
          long long v85 = 0u;
          long long v86 = 0u;
          long long v83 = 0u;
          long long v84 = 0u;
          long long v82 = 0u;
          os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
          *(_DWORD *)long long v77 = 136315906;
          *(void *)&v77[4] = "operator[]";
          __int16 v78 = 1024;
          int v79 = 789;
          __int16 v80 = 2048;
          *(void *)float32x4_t v81 = v19;
          *(_WORD *)&v81[8] = 2048;
          *(void *)&v81[10] = v19;
          _os_log_send_and_compose_impl();
          _os_crash_msg();
          __break(1u);
LABEL_102:
          uint64_t v76 = 0;
          long long v85 = 0u;
          long long v86 = 0u;
          long long v83 = 0u;
          long long v84 = 0u;
          long long v82 = 0u;
          os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
          *(_DWORD *)long long v77 = 136315906;
          *(void *)&v77[4] = "operator[]";
          __int16 v78 = 1024;
          int v79 = 789;
          __int16 v80 = 2048;
          *(void *)float32x4_t v81 = v20;
          *(_WORD *)&v81[8] = 2048;
          *(void *)&v81[10] = v20;
          _os_log_send_and_compose_impl();
          _os_crash_msg();
          __break(1u);
LABEL_103:
          uint64_t v76 = 0;
          long long v85 = 0u;
          long long v86 = 0u;
          long long v83 = 0u;
          long long v84 = 0u;
          long long v82 = 0u;
          os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
          *(_DWORD *)long long v77 = 136315906;
          *(void *)&v77[4] = "operator[]";
          __int16 v78 = 1024;
          int v79 = 789;
          __int16 v80 = 2048;
          *(void *)float32x4_t v81 = v20;
          *(_WORD *)&v81[8] = 2048;
          *(void *)&v81[10] = v11;
          _os_log_send_and_compose_impl();
          _os_crash_msg();
          __break(1u);
LABEL_104:
          uint64_t v76 = 0;
          long long v85 = 0u;
          long long v86 = 0u;
          long long v83 = 0u;
          long long v84 = 0u;
          long long v82 = 0u;
          os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
          *(_DWORD *)long long v77 = 136315906;
          *(void *)&v77[4] = "operator[]";
          __int16 v78 = 1024;
          int v79 = 789;
          __int16 v80 = 2048;
          *(void *)float32x4_t v81 = v19 + v20;
          *(_WORD *)&v81[8] = 2048;
          *(void *)&v81[10] = v20;
          _os_log_send_and_compose_impl();
          _os_crash_msg();
          __break(1u);
LABEL_105:
          uint64_t v76 = 0;
          long long v85 = 0u;
          long long v86 = 0u;
          long long v83 = 0u;
          long long v84 = 0u;
          long long v82 = 0u;
          os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
          *(_DWORD *)long long v77 = 136315906;
          *(void *)&v77[4] = "operator[]";
          __int16 v78 = 1024;
          int v79 = 789;
          __int16 v80 = 2048;
          *(void *)float32x4_t v81 = v20;
          *(_WORD *)&v81[8] = 2048;
          *(void *)&v81[10] = v11;
          _os_log_send_and_compose_impl();
          _os_crash_msg();
          __break(1u);
LABEL_106:
          uint64_t v76 = 0;
          long long v85 = 0u;
          long long v86 = 0u;
          long long v83 = 0u;
          long long v84 = 0u;
          long long v82 = 0u;
          os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
          *(_DWORD *)long long v77 = 136315906;
          *(void *)&v77[4] = "operator[]";
          __int16 v78 = 1024;
          int v79 = 789;
          __int16 v80 = 2048;
          *(void *)float32x4_t v81 = v20;
          *(_WORD *)&v81[8] = 2048;
          *(void *)&v81[10] = v11;
          _os_log_send_and_compose_impl();
          _os_crash_msg();
          __break(1u);
LABEL_107:
          uint64_t v76 = 0;
          long long v85 = 0u;
          long long v86 = 0u;
          long long v83 = 0u;
          long long v84 = 0u;
          long long v82 = 0u;
          os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
          *(_DWORD *)long long v77 = 136315906;
          *(void *)&v77[4] = "operator[]";
          __int16 v78 = 1024;
          int v79 = 789;
          __int16 v80 = 2048;
          *(void *)float32x4_t v81 = v20;
          *(_WORD *)&v81[8] = 2048;
          *(void *)&v81[10] = v11;
          _os_log_send_and_compose_impl();
          _os_crash_msg();
          __break(1u);
        }
LABEL_19:
        if (v19 == v20) {
          goto LABEL_110;
        }
        BOOL v23 = 0;
LABEL_21:
        BOOL v25 = v19 >= v20;
        BOOL v26 = v19 > v20;
        v19 -= v20;
        if (v26)
        {
          do
          {
            re::ecs2::ForceEffectComponent::removeDefinitionLast(v14, (uint64_t)v15);
            --v19;
          }
          while (v19);
        }
        else
        {
          for (; !v25; BOOL v25 = __CFADD__(v19++, 1))
          {
            unint64_t v20 = *(void *)(v14 + 48);
            unint64_t v27 = v19 + v20;
            if (!__CFADD__(v19, v20)) {
              goto LABEL_104;
            }
            uint64_t v28 = *(void *)(v14 + 64);
            unint64_t v29 = re::globalAllocators(v18);
            uint64_t v30 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v29[2] + 32))(v29[2], 176, 16);
            *(_OWORD *)uint64_t v30 = 0u;
            *(_OWORD *)(v30 + 32) = 0u;
            *(_OWORD *)(v30 + 48) = 0u;
            *(_OWORD *)(v30 + 64) = 0u;
            *(_OWORD *)(v30 + 80) = 0u;
            *(_OWORD *)(v30 + 96) = 0u;
            *(_OWORD *)(v30 + 112) = 0u;
            *(_OWORD *)(v30 + 128) = 0u;
            *(_OWORD *)(v30 + 144) = 0u;
            *(_OWORD *)(v30 + 160) = 0u;
            *(void *)(v30 + 16) = 0;
            *(void *)(v30 + 24) = 0x3F80000000000000;
            *(void *)(v30 + 32) = -3229614080;
            *(void *)(v30 + 120) = 0;
            float v31 = (uint64_t *)(v30 + 120);
            *(unsigned char *)(v30 + 136) = 0;
            *(void *)(v30 + 128) = 0;
            uint64_t v76 = v30;
            BOOL v32 = re::globalAllocators((re *)v30);
            float v33 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v32[2] + 32))(v32[2], 24, 8);
            v33[1] = 0;
            v33[2] = 0;
            *float v33 = &unk_26E716EF8;
            *(void *)long long v77 = &unk_26E6E4EE0;
            *(void *)&v81[4] = v77;
            *(void *)&long long v84 = (char *)&v82 + 8;
            *(void *)&long long v82 = 0;
            *((void *)&v82 + 1) = &unk_26E6E4EE0;
            uint64_t v34 = *(void *)(v30 + 88);
            *(void *)(v30 + 88) = v33;
            if (v34) {
              std::function<void ()(re::ForceEffectFunctionBase *)>::operator()(v30 + 96, v34);
            }
            uint64_t v35 = v30 + 96;
            uint64_t v36 = *(void *)(v30 + 120);
            *(void *)(v30 + 120) = 0;
            if (v36 == v30 + 96)
            {
              (*(void (**)(uint64_t))(*(void *)v35 + 32))(v30 + 96);
            }
            else if (v36)
            {
              (*(void (**)(uint64_t))(*(void *)v36 + 40))(v36);
            }
            if ((void)v84)
            {
              if ((long long *)v84 == (long long *)((char *)&v82 + 8))
              {
                *float v31 = v35;
                (*(void (**)(void))(*((void *)&v82 + 1) + 24))();
              }
              else
              {
                *float v31 = v84;
                *(void *)&long long v84 = 0;
              }
            }
            else
            {
              *float v31 = 0;
            }
            std::unique_ptr<re::ForceEffectFunctionBase,std::function<void ()(re::ForceEffectFunctionBase*)>>::~unique_ptr[abi:nn180100]((uint64_t *)&v82);
            std::__function::__value_func<void ()(re::ForceEffectFunctionBase *)>::~__value_func[abi:nn180100](v77);
            uint64_t v37 = v28 + 272 * v27;
            v33[1] = v33;
            *((_DWORD *)v33 + 4) = *(_DWORD *)(v37 + 176);
            uint64_t v38 = *((void *)v15 + 5);
            *(void *)&long long v82 = *(void *)(v14 + 16);
            unint64_t v40 = *(void *)(v37 + 184);
            float v39 = (StringID *)(v37 + 184);
            uint64_t v41 = *(void *)(v14 + 104);
            *((void *)&v82 + 1) = v40 >> 1;
            *(void *)&long long v83 = v41;
            *(void *)long long v77 = v33;
            re::HashTable<void *,re::ecs2::CustomForceEffectIdentifier,re::Hash<void *>,re::EqualTo<void *>,true,false>::addNew(v38 + 8, (uint64_t *)v77, &v82);
            id WeakRetained = objc_loadWeakRetained((id *)(v14 + 72));
            float v43 = WeakRetained;
            if (WeakRetained) {
              unint64_t v11 = (unint64_t)WeakRetained - 8;
            }
            else {
              unint64_t v11 = 0;
            }
            *(void *)&long long v82 = v30;
            re::DynamicArray<re::TransitionCondition *>::add((void *)(v11 + 344), &v82);
            *(void *)(v82 + 128) = *(void *)(v11 + 336);
            if (v43) {

            }
            re::DynamicArray<re::TransitionCondition *>::add((void *)(v14 + 88), &v76);
            uint64_t v18 = re::DynamicArray<re::StringID>::add((_anonymous_namespace_ *)(v14 + 128), v39);
            uint64_t v44 = v76;
            uint64_t v45 = *(void *)(v76 + 128);
            if (v45)
            {
              uint64_t v46 = *(void *)(v45 + 24);
              if (!*(unsigned char *)(v76 + 136)) {
                *(unsigned char *)(v76 + 136) = 1;
              }
              *(void *)(v44 + 144) = v46;
              if (!*(unsigned char *)(v44 + 152)) {
                *(unsigned char *)(v44 + 152) = 1;
              }
              *(void *)(v44 + 160) = v46;
              *(unsigned char *)(v44 + 168) = *(unsigned char *)(v14 + 168);
            }
          }
        }
        unint64_t v19 = *(void *)(v14 + 144);
        if (!v23)
        {
LABEL_110:
        {
LABEL_62:
          if (v19)
          {
            unint64_t v53 = 0;
            do
              re::ecs2::ForceEffectComponent::updateForceEffectDefinitionAt(v14, v53++, (float32x4_t *)v15);
            while (v53 < *(void *)(v14 + 144));
          }
        }
        }
        else if (v19)
        {
          uint64_t v47 = 0;
          unint64_t v20 = 0;
          uint64_t v48 = 184;
          while (1)
          {
            unint64_t v11 = *(void *)(v14 + 48);
            if (v11 <= v20) {
              goto LABEL_103;
            }
            float32x4_t v49 = (void *)(*(void *)(v14 + 64) + v48);
            if (!re::StringID::operator==((void *)(*(void *)(v14 + 160) + v47), v49))
            {
              unint64_t v11 = *(void *)(v14 + 104);
              if (v11 <= v20) {
                goto LABEL_105;
              }
              uint64_t v51 = *((void *)v15 + 5);
              *(void *)&long long v82 = *(void *)(*(void *)(*(void *)(v14 + 120) + 8 * v20) + 88);
              uint64_t v50 = v82;
              re::HashTable<void *,re::ecs2::CustomForceEffectIdentifier,re::Hash<void *>,re::EqualTo<void *>,true,false>::remove(v51 + 8, (uint64_t *)&v82);
              uint64_t v52 = *((void *)v15 + 5);
              *(void *)&long long v82 = *(void *)(v14 + 16);
              *((void *)&v82 + 1) = *v49 >> 1;
              *(void *)&long long v83 = v20;
              *(void *)long long v77 = v50;
              re::HashTable<void *,re::ecs2::CustomForceEffectIdentifier,re::Hash<void *>,re::EqualTo<void *>,true,false>::addNew(v52 + 8, (uint64_t *)v77, &v82);
              unint64_t v11 = *(void *)(v14 + 48);
              if (v11 <= v20) {
                goto LABEL_106;
              }
              unint64_t v11 = *(void *)(v14 + 144);
              if (v11 <= v20) {
                goto LABEL_107;
              }
              re::StringID::operator=((unint64_t *)(*(void *)(v14 + 160) + v47), (uint64_t *)(*(void *)(v14 + 64) + v48));
              unint64_t v19 = *(void *)(v14 + 144);
            }
            ++v20;
            v47 += 16;
            v48 += 272;
            if (v20 >= v19) {
              goto LABEL_62;
            }
          }
        }
        if (*(unsigned char *)(v14 + 25)) {
          break;
        }
LABEL_95:
        unint64_t v67 = re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::handle((unsigned __int16 *)&v73);
        re::ecs2::ComponentBucketsBase::moveComponent(*(re::ecs2::ComponentBucketsBase **)(v70 + 16), v72, v67, *(void *)(v70 + 48));
        re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::increment(&v73);
        if ((void)v73 == a5 && WORD4(v73) == 0xFFFF && WORD5(v73) == 0xFFFF) {
          goto LABEL_98;
        }
      }
      int v54 = *(unsigned __int8 *)(v14 + 26);
      if (v54 == 2)
      {
        uint64_t v61 = *(void *)(v14 + 104);
        if (v61)
        {
          uint64x2_t v62 = *(uint64_t **)(v14 + 120);
          do
          {
            uint64_t v63 = *v62;
            if (*(void *)(*v62 + 128) && *(unsigned char *)(v63 + 136)) {
              *(unsigned char *)(v63 + 168) = 1;
            }
            ++v62;
            --v61;
          }
          while (v61);
        }
      }
      else
      {
        if (v54 == 1)
        {
          uint64_t v64 = *(void *)(v14 + 104);
          if (v64)
          {
            float v65 = *(uint64_t **)(v14 + 120);
            do
            {
              uint64_t v66 = *v65;
              if (*(void *)(*v65 + 128) && *(unsigned char *)(v66 + 136)) {
                *(unsigned char *)(v66 + 168) = 0;
              }
              ++v65;
              --v64;
            }
            while (v64);
          }
          goto LABEL_93;
        }
        if (*(unsigned char *)(v14 + 26))
        {
LABEL_94:
          *(unsigned char *)(v14 + 25) = 0;
          goto LABEL_95;
        }
        unint64_t v55 = *(void *)(v14 + 104);
        if (v55)
        {
          for (unint64_t i = 0; i < v55; ++i)
          {
            uint64_t v57 = *(void *)(*(void *)(v14 + 120) + 8 * i);
            uint64_t v58 = *(void *)(v57 + 128);
            if (v58)
            {
              uint64_t v59 = *(void *)(v58 + 24);
              if (!*(unsigned char *)(v57 + 136)) {
                *(unsigned char *)(v57 + 136) = 1;
              }
              *(void *)(v57 + 144) = v59;
              if (!*(unsigned char *)(v57 + 152)) {
                *(unsigned char *)(v57 + 152) = 1;
              }
              *(void *)(v57 + 160) = v59;
              *(unsigned char *)(v57 + 168) = 1;
              unint64_t v55 = *(void *)(v14 + 104);
            }
          }
          int v60 = *(unsigned __int8 *)(v14 + 25);
          *(unsigned char *)(v14 + 168) = 1;
          if (!v60) {
            goto LABEL_95;
          }
          goto LABEL_94;
        }
      }
      LOBYTE(v64) = 1;
LABEL_93:
      *(unsigned char *)(v14 + 168) = v64;
      goto LABEL_94;
    }
LABEL_98:
    BOOL v68 = *(_DWORD *)(a5 + 40) != 0;
  }
  else
  {
    BOOL v68 = 0;
  }
  re::internal::AriadneSignpostScopeGuard::~AriadneSignpostScopeGuard((re::internal::AriadneSignpostScopeGuard *)v75);
  return v68;
}

BOOL re::ecs2::ForceEffectComponentStateImpl::processUpdatingComponents(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  re::internal::AriadneSignpostScopeGuard::AriadneSignpostScopeGuard((re::internal::AriadneSignpostScopeGuard *)v39, 3047, a1);
  uint64_t v10 = (*(uint64_t (**)(void))(**(void **)(*(void *)(a3 + 8) + 56) + 32))(*(void *)(*(void *)(a3 + 8) + 56));
  uint64_t v11 = re::ServiceLocator::serviceOrNull<re::ecs2::PhysicsSimulationService>(v10);
  if (v11
    && (uint64_t v12 = v11,
        uint64_t v13 = *(void *)(a3 + 8),
        uint64_t v14 = (*(uint64_t (**)(uint64_t))(*(void *)v11 + 24))(v11),
        uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v12 + 40))(v12, v13),
        v38[0] = v14,
        (v38[1] = v15) != 0))
  {
    re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::DataArrayIterator((uint64_t)&buf, a5, 0);
    unint64_t v35 = a4;
    uint64_t v36 = buf.i64[0];
    uint64_t v37 = buf.i64[1];
    if (buf.i64[0] != a5 || buf.u16[4] != 0xFFFFLL || (buf.i32[2] & 0xFFFF0000) != 0xFFFF0000)
    {
      do
      {
        uint64_t v17 = re::DataArray<re::ecs2::Component *>::DataArrayIterator<re::ecs2::Component *,re::ecs2::Component * const&>::operator*((unsigned __int16 *)&v36);
        uint64_t v18 = *(void *)v17;
        unint64_t v19 = *(re::ecs2::TransformComponent ***)(*(void *)v17 + 16);
        unint64_t v20 = (re::ecs2::PhysicsSimulationData *)re::ecs2::PhysicsSimulationMapping::physicsSimulationDataForEntity(v38, (uint64_t)v19);
        unint64_t v21 = (float32x4_t *)v20;
        if (!a6 || re::ecs2::PhysicsSimulationData::ensurePhysicsSimulation(v20) == a6)
        {
          re::ecs2::TransformComponent::worldMatrix4x4F(v19, (const re::ecs2::Entity *)1, &buf);
          re::ecs2::PhysicsSimulationData::transformInPhysicsSimulationSpace(v21, (uint64_t)&buf, v34);
          int32x4_t buf = 0u;
          long long v40 = 0u;
          float32x4_t v41 = (float32x4_t)xmmword_23435FBB0;
          uint64_t v22 = (re *)re::decomposeScaleRotationTranslation<float>((uint64_t)v34, &buf, &v41, &v40);
          v23.i64[0] = v40;
          v23.i64[1] = __PAIR64__(buf.u32[0], DWORD2(v40));
          if ((vmaxv_u16((uint16x4_t)vmovn_s32((int32x4_t)vmvnq_s8(vorrq_s8((int8x16_t)vcltzq_f32(v23), (int8x16_t)vcgezq_f32(v23))))) & 1) == 0&& ((v24 = (int8x16_t)vmulq_f32(v41, v41), float v25 = vaddv_f32(vadd_f32(*(float32x2_t *)v24.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v24, v24, 8uLL))), v25 == 1.0)|| fabsf(v25 + -1.0) <= 0.00001))
          {
            if (*(void *)(v18 + 144))
            {
              unint64_t v16 = 0;
              do
                re::ecs2::ForceEffectComponent::updateForceEffectDefinitionAt(v18, v16++, v21);
              while (v16 < *(void *)(v18 + 144));
            }
          }
          else
          {
            BOOL v26 = *re::ecsComponentsLogObjects(v22);
            if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
            {
              buf.i16[0] = 0;
              _os_log_error_impl(&dword_233120000, v26, OS_LOG_TYPE_ERROR, "NaN or non-unit rotation detected in transform (PhysicsSystem_Collider). Skipping.", (uint8_t *)&buf, 2u);
            }
            for (uint64_t i = *(void *)(v18 + 144); i; --i)
              re::ecs2::ForceEffectComponent::removeDefinitionLast(v18, *(void *)(v18 + 80));
            unint64_t v28 = v35;
            unint64_t v29 = re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::handle((unsigned __int16 *)&v36);
            re::ecs2::ComponentBucketsBase::moveComponent(*(re::ecs2::ComponentBucketsBase **)(a3 + 16), v28, v29, *(void *)(a3 + 32));
          }
        }
        re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::increment(&v36);
      }
      while (v36 != a5 || (unsigned __int16)v37 != 0xFFFF || WORD1(v37) != 0xFFFF);
    }
    BOOL v32 = *(_DWORD *)(a5 + 40) != 0;
  }
  else
  {
    BOOL v32 = 0;
  }
  re::internal::AriadneSignpostScopeGuard::~AriadneSignpostScopeGuard((re::internal::AriadneSignpostScopeGuard *)v39);
  return v32;
}

uint64_t re::ecs2::BasicComponentStateImpl<re::ecs2::ForceEffectComponent>::dependsOnComponents()
{
  return 0;
}

unint64_t re::ecs2::BasicComponentStateImpl<re::ecs2::ForceEffectComponent>::didDependentComponentChange(uint64_t a1, re::ecs2::ComponentBucketsBase **a2, uint64_t a3)
{
  unint64_t result = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(a3 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ForceEffectComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
  if (result)
  {
    float v5 = (re::ecs2::Component *)result;
    uint64_t v6 = 3;
    unint64_t v7 = 0xFFFFFFFFLL;
    do
    {
      unint64_t v8 = re::ecs2::ComponentBucketsBase::componentHandle(a2[2], (unint64_t)a2[v6], v5);
      if (v8 != -1 && (v9 & 0xFFFFFF00000000) != 0)
      {
        unint64_t v11 = v8;
        unint64_t v7 = v9;
        goto LABEL_11;
      }
      ++v6;
    }
    while (v6 != 7);
    unint64_t v11 = -1;
LABEL_11:
    return re::ecs2::BasicComponentStateSceneData<re::ecs2::ForceEffectComponent>::setComponentState(a2, v11, v7, 0);
  }
  return result;
}

void *re::IntrospectionOptional<REPhysicsForceEffectPlaybackRequest>::~IntrospectionOptional(void *a1)
{
  *a1 = &unk_26E6CB2D8;
  re::SerializedReference<re::IntrospectionBase const*>::reset((uint64_t)(a1 + 6));
  *a1 = &unk_26E6DECE0;
  objc_destructInstance(a1 + 1);
  return a1;
}

void re::IntrospectionOptional<REPhysicsForceEffectPlaybackRequest>::~IntrospectionOptional(void *a1)
{
  *a1 = &unk_26E6CB2D8;
  re::SerializedReference<re::IntrospectionBase const*>::reset((uint64_t)(a1 + 6));
  *a1 = &unk_26E6DECE0;
  objc_destructInstance(a1 + 1);
  JUMPOUT(0x237DBCBD0);
}

void re::IntrospectionOptional<REPhysicsForceEffectPlaybackRequest>::construct(uint64_t a1, unsigned char *a2)
{
  *a2 = 0;
}

uint64_t re::IntrospectionOptional<REPhysicsForceEffectPlaybackRequest>::hasValue(uint64_t a1, unsigned __int8 *a2)
{
  return *a2;
}

void re::IntrospectionOptional<REPhysicsForceEffectPlaybackRequest>::setHasValue(uint64_t a1, unsigned char *a2, int a3)
{
  if (a3)
  {
    if (!*a2) {
      *a2 = 1;
    }
    ++a2;
  }
  else if (!*a2)
  {
    return;
  }
  *a2 = 0;
}

uint64_t re::IntrospectionOptional<REPhysicsForceEffectPlaybackRequest>::value(uint64_t a1, uint64_t a2)
{
  return a2 + 1;
}

{
  return a2 + 1;
}

unsigned __int8 *re::TypeBuilderHelper::registerOptional<REPhysicsForceEffectPlaybackRequest>(re::TypeRegistry *,re::StringID const&,re::TypeID const&)::{lambda(void *)#1}::__invoke(unsigned __int8 *a1)
{
  int v2 = *a1;
  unint64_t result = a1 + 1;
  if (!v2) {
    return 0;
  }
  return result;
}

unsigned char *re::TypeBuilderHelper::registerOptional<REPhysicsForceEffectPlaybackRequest>(re::TypeRegistry *,re::StringID const&,re::TypeID const&)::{lambda(void *,void const*)#1}::__invoke(unsigned char *result, char *a2)
{
  if (a2)
  {
    char v2 = *a2;
    if (!*result) {
      *unint64_t result = 1;
    }
    result[1] = v2;
  }
  else if (*result)
  {
    *unint64_t result = 0;
  }
  return result;
}

void *re::IntrospectionDynamicArray<re::ecs2::ForceEffectDesc>::~IntrospectionDynamicArray(void *a1)
{
  *a1 = &unk_26E6BFB78;
  re::SerializedReference<re::IntrospectionBase const*>::reset((uint64_t)(a1 + 6));
  *a1 = &unk_26E6DECE0;
  objc_destructInstance(a1 + 1);
  return a1;
}

void re::IntrospectionDynamicArray<re::ecs2::ForceEffectDesc>::~IntrospectionDynamicArray(void *a1)
{
  *a1 = &unk_26E6BFB78;
  re::SerializedReference<re::IntrospectionBase const*>::reset((uint64_t)(a1 + 6));
  *a1 = &unk_26E6DECE0;
  objc_destructInstance(a1 + 1);
  JUMPOUT(0x237DBCBD0);
}

void re::IntrospectionDynamicArray<re::ecs2::ForceEffectDesc>::construct(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  *(_DWORD *)(a2 + 24) = 0;
}

uint64_t re::IntrospectionDynamicArray<re::ecs2::ForceEffectDesc>::destroy(uint64_t a1, uint64_t a2)
{
  return re::DynamicArray<re::ecs2::ForceEffectDesc>::deinit(a2);
}

void *re::IntrospectionDynamicArray<re::ecs2::ForceEffectDesc>::init(uint64_t a1, uint64_t a2, uint64_t a3)
{
  re::DynamicArray<re::ecs2::ForceEffectDesc>::deinit(a2);
  *(void *)a2 = a3;
  unint64_t result = re::DynamicArray<re::ecs2::ForceEffectDesc>::setCapacity((void *)a2, 0);
  ++*(_DWORD *)(a2 + 24);
  return result;
}

uint64_t *re::IntrospectionDynamicArray<re::ecs2::ForceEffectDesc>::resize(uint64_t *result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  unint64_t v9 = result;
  if (!*(void *)a4)
  {
    *(void *)a4 = a2;
    unint64_t result = re::DynamicArray<re::ecs2::ForceEffectDesc>::setCapacity((void *)a4, a5);
    ++*(_DWORD *)(a4 + 24);
  }
  unint64_t v10 = *(void *)(a4 + 16);
  if (v10 >= a5)
  {
    if (v10 > a5)
    {
      return re::DynamicArray<re::ecs2::ForceEffectDesc>::resize((uint64_t *)a4, a5);
    }
  }
  else
  {
    unint64_t result = re::DynamicArray<re::ecs2::ForceEffectDesc>::setCapacity((void *)a4, a5);
    for (unint64_t i = a5 - *(void *)(a4 + 16); i; --i)
      unint64_t result = (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*v9 + 80))(v9, a2, a3, a4);
  }
  return result;
}

re::IntrospectionBase *re::IntrospectionDynamicArray<re::ecs2::ForceEffectDesc>::addElement(re::Allocator **a1, re *a2, int a3, uint64_t a4)
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v20 = 0u;
  memset(v19, 0, sizeof(v19));
  *(void *)uint64_t v18 = 0;
  *(void *)&v18[8] = 0x3F80000000000000;
  *(_OWORD *)&v18[16] = 0xFFFFFFFF3F800000;
  BYTE8(v20) = 0;
  unint64_t v9 = *(void *)(a4 + 8);
  unint64_t v8 = *(void *)(a4 + 16);
  if (v8 >= v9)
  {
    unint64_t v10 = v8 + 1;
    if (v9 < v8 + 1)
    {
      if (*(void *)a4)
      {
        unint64_t v11 = 2 * v9;
        if (!v9) {
          unint64_t v11 = 8;
        }
        if (v11 <= v10) {
          unint64_t v12 = v10;
        }
        else {
          unint64_t v12 = v11;
        }
        re::DynamicArray<re::ecs2::ForceEffectDesc>::setCapacity((void *)a4, v12);
      }
      else
      {
        re::DynamicArray<re::ecs2::ForceEffectDesc>::setCapacity((void *)a4, v10);
        ++*(_DWORD *)(a4 + 24);
      }
    }
    unint64_t v8 = *(void *)(a4 + 16);
  }
  uint64_t v13 = *(void *)(a4 + 32) + 272 * v8;
  *(_OWORD *)(v13 + 25) = *(_OWORD *)&v18[9];
  *(_OWORD *)uint64_t v13 = 0u;
  *(_OWORD *)(v13 + 16) = *(_OWORD *)v18;
  *(unsigned char *)(v13 + 44) = 0;
  *(unsigned char *)(v13 + 64) = 0;
  *((void *)&v19[0] + 1) = 0;
  *(void *)(v13 + 88) = 0;
  *(unsigned char *)(v13 + 152) = 0;
  *(unsigned char *)(v13 + 168) = 0;
  *(_DWORD *)(v13 + 176) = 0;
  *(void *)(v13 + 120) = 0;
  *(void *)(v13 + 128) = 0;
  *(unsigned char *)(v13 + 136) = 0;
  *(void *)(v13 + 184) = 0;
  *(void *)(v13 + 192) = "";
  *((void *)&v21 + 1) = 0;
  *(void *)&long long v22 = "";
  *(void *)(v13 + 200) = 0;
  *(void *)(v13 + 208) = 0;
  *(_DWORD *)(v13 + 224) = 0;
  *(void *)(v13 + 216) = 0;
  *((void *)&v22 + 1) = 0;
  *(void *)&long long v23 = 0;
  uint64_t v14 = *(void *)(v13 + 216);
  *(void *)(v13 + 216) = 0;
  *((void *)&v23 + 1) = v14;
  *(void *)(v13 + 232) = 0;
  *((void *)&v24 + 1) = 0;
  LODWORD(v24) = 1;
  ++*(_DWORD *)(v13 + 224);
  long long v15 = v25;
  *(void *)(v13 + 256) = v26;
  *(_OWORD *)(v13 + 240) = v15;
  ++*(void *)(a4 + 16);
  ++*(_DWORD *)(a4 + 24);
  re::StringID::destroyString((re::StringID *)((char *)&v21 + 8));
  std::unique_ptr<re::ForceEffectFunctionBase,std::function<void ()(re::ForceEffectFunctionBase*)>>::~unique_ptr[abi:nn180100]((uint64_t *)v19 + 1);
  unint64_t v16 = (re::IntrospectionBase *)(*(void *)(a4 + 32) + 272 * *(void *)(a4 + 16) - 272);
  re::introspectionInitElement(a2, a3, a1[6], v16);
  return v16;
}

uint64_t re::IntrospectionDynamicArray<re::ecs2::ForceEffectDesc>::size(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 16);
}

uint64_t re::IntrospectionDynamicArray<re::ecs2::ForceEffectDesc>::elementAt(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (*(void *)(a2 + 16) <= a3)
  {
    os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
    _os_log_send_and_compose_impl();
    _os_crash_msg();
    __break(1u);
  }
  return *(void *)(a2 + 32) + 272 * a3;
}

{
  if (*(void *)(a2 + 16) <= a3)
  {
    os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
    _os_log_send_and_compose_impl();
    _os_crash_msg();
    __break(1u);
  }
  return *(void *)(a2 + 32) + 272 * a3;
}

uint64_t re::DynamicArray<re::ecs2::ForceEffectDesc>::deinit(uint64_t a1)
{
  uint64_t result = *(void *)a1;
  if (result)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    if (v3)
    {
      uint64_t v4 = *(void *)(a1 + 16);
      if (v4)
      {
        uint64_t v5 = 272 * v4;
        uint64_t v6 = v3 + 200;
        do
        {
          re::DynamicArray<unsigned long>::deinit(v6);
          re::StringID::destroyString((re::StringID *)(v6 - 16));
          std::unique_ptr<re::ForceEffectFunctionBase,std::function<void ()(re::ForceEffectFunctionBase*)>>::~unique_ptr[abi:nn180100]((uint64_t *)(v6 - 112));
          v6 += 272;
          v5 -= 272;
        }
        while (v5);
        uint64_t result = *(void *)a1;
        uint64_t v3 = *(void *)(a1 + 32);
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 40))(result, v3);
    }
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = 0;
    ++*(_DWORD *)(a1 + 24);
  }
  return result;
}

void *re::DynamicArray<re::ecs2::ForceEffectDesc>::setCapacity(void *result, unint64_t a2)
{
  uint64_t v3 = result[1];
  if (v3 != a2)
  {
    uint64_t v5 = result;
    if (result[2] <= a2)
    {
      uint64_t result = (void *)*result;
      if (!*v5)
      {
        uint64_t result = (void *)re::DynamicArray<re::ecs2::ForceEffectDesc>::setCapacity(v5, a2);
        ++*((_DWORD *)v5 + 6);
        return result;
      }
      if (a2)
      {
        if (is_mul_ok(a2, 0x110uLL))
        {
          uint64_t v2 = 272 * a2;
          uint64_t result = (void *)(*(uint64_t (**)(void *, unint64_t, uint64_t))(*result + 32))(result, 272 * a2, 16);
          if (result)
          {
            unint64_t v7 = result;
            if (!v5[1]) {
              goto LABEL_16;
            }
            goto LABEL_11;
          }
        }
        else
        {
          re::internal::assertLog((re::internal *)6, a2, "assertion failure: '%s' (%s:line %i) Size overflow in DynamicArray<T>::setCapacity(). Element size = %zu, capacity = %zu", "!overflow", "setCapacity", 615, 272, a2);
          _os_crash();
          __break(1u);
        }
        re::internal::assertLog((re::internal *)6, v6, "assertion failure: '%s' (%s:line %i) DynamicArray<T> is out of memory (tried to allocate %zu bytes from allocator '%s').", "newData", "setCapacity", 619, v2, *(void *)(*v5 + 8));
        uint64_t result = (void *)_os_crash();
        __break(1u);
        return result;
      }
      unint64_t v7 = 0;
      if (!v3)
      {
LABEL_16:
        v5[4] = v7;
        v5[1] = a2;
        return result;
      }
LABEL_11:
      unint64_t v8 = (long long *)v5[4];
      uint64_t v9 = v5[2];
      if (v9)
      {
        uint64_t v10 = 272 * v9;
        uint64_t v11 = (uint64_t)v7;
        do
        {
          re::ObjectHelper::move<re::ecs2::ForceEffectDesc>(v8, v11);
          v8 += 17;
          v11 += 272;
          v10 -= 272;
        }
        while (v10);
        unint64_t v8 = (long long *)v5[4];
      }
      uint64_t result = (void *)(*(uint64_t (**)(void, long long *))(*(void *)*v5 + 40))(*v5, v8);
      goto LABEL_16;
    }
  }
  return result;
}

uint64_t *re::ObjectHelper::move<re::ecs2::ForceEffectDesc>(long long *a1, uint64_t a2)
{
  long long v4 = *a1;
  long long v5 = a1[1];
  *(_OWORD *)(a2 + 25) = *(long long *)((char *)a1 + 25);
  *(_OWORD *)a2 = v4;
  *(_OWORD *)(a2 + 16) = v5;
  int v6 = *((unsigned __int8 *)a1 + 44);
  *(unsigned char *)(a2 + 44) = v6;
  if (v6)
  {
    uint64_t v7 = *((void *)a1 + 6);
    *(_DWORD *)(a2 + 56) = *((_DWORD *)a1 + 14);
    *(void *)(a2 + 48) = v7;
  }
  int v8 = *((unsigned __int8 *)a1 + 64);
  *(unsigned char *)(a2 + 64) = v8;
  if (v8) {
    *(_OWORD *)(a2 + 72) = *(long long *)((char *)a1 + 72);
  }
  uint64_t v10 = (uint64_t *)a1 + 11;
  uint64_t v9 = *((void *)a1 + 11);
  *((void *)a1 + 11) = 0;
  *(void *)(a2 + 88) = v9;
  std::__function::__value_func<void ()(re::ForceEffectFunctionBase *)>::__value_func[abi:nn180100](a2 + 96, (uint64_t)(a1 + 6));
  *(void *)(a2 + 128) = *((void *)a1 + 16);
  int v11 = *((unsigned __int8 *)a1 + 136);
  *(unsigned char *)(a2 + 136) = v11;
  if (v11) {
    *(void *)(a2 + 144) = *((void *)a1 + 18);
  }
  int v12 = *((unsigned __int8 *)a1 + 152);
  *(unsigned char *)(a2 + 152) = v12;
  if (v12) {
    *(void *)(a2 + 160) = *((void *)a1 + 20);
  }
  *(unsigned char *)(a2 + 168) = *((unsigned char *)a1 + 168);
  *(_DWORD *)(a2 + 176) = *((_DWORD *)a1 + 44);
  uint64_t v14 = (re::StringID *)((char *)a1 + 184);
  char v13 = *((void *)a1 + 23);
  *(void *)(a2 + 184) = *(void *)(a2 + 184) & 0xFFFFFFFFFFFFFFFELL | *((void *)a1 + 23) & 1;
  *(void *)(a2 + 184) = *((void *)a1 + 23) & 0xFFFFFFFFFFFFFFFELL | v13 & 1;
  *(void *)(a2 + 192) = *((void *)a1 + 24);
  *((void *)a1 + 24) = "";
  *((void *)a1 + 23) = 0;
  *(void *)(a2 + 232) = 0;
  *(_DWORD *)(a2 + 224) = 0;
  *(void *)(a2 + 208) = 0;
  *(void *)(a2 + 216) = 0;
  *(void *)(a2 + 200) = 0;
  uint64_t v15 = *((void *)a1 + 25);
  uint64_t v16 = *((void *)a1 + 26);
  uint64_t v17 = (uint64_t)a1 + 200;
  *(void *)(a2 + 200) = v15;
  *(void *)(a2 + 208) = v16;
  *(void *)uint64_t v17 = 0;
  *(void *)(v17 + 8) = 0;
  uint64_t v18 = *(void *)(a2 + 216);
  *(void *)(a2 + 216) = *(void *)(v17 + 16);
  *(void *)(v17 + 16) = v18;
  uint64_t v19 = *(void *)(a2 + 232);
  *(void *)(a2 + 232) = *(void *)(v17 + 32);
  *(void *)(v17 + 32) = v19;
  ++*(_DWORD *)(v17 + 24);
  ++*(_DWORD *)(a2 + 224);
  long long v20 = *(_OWORD *)(v17 + 40);
  *(void *)(a2 + 256) = *(void *)(v17 + 56);
  *(_OWORD *)(a2 + 240) = v20;
  re::DynamicArray<unsigned long>::deinit(v17);
  re::StringID::destroyString(v14);
  return std::unique_ptr<re::ForceEffectFunctionBase,std::function<void ()(re::ForceEffectFunctionBase*)>>::~unique_ptr[abi:nn180100](v10);
}

uint64_t std::__function::__value_func<void ()(re::ForceEffectFunctionBase *)>::__value_func[abi:nn180100](uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = v3;
      *(void *)(a2 + 24) = 0;
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t *re::DynamicArray<re::ecs2::ForceEffectDesc>::resize(uint64_t *result, unint64_t a2)
{
  uint64_t v3 = result;
  unint64_t v4 = result[2];
  if (v4 >= a2)
  {
    if (v4 <= a2) {
      return result;
    }
    uint64_t v8 = 272 * a2 + 200;
    unint64_t v9 = a2;
    do
    {
      uint64_t v10 = v3[4] + v8;
      re::DynamicArray<unsigned long>::deinit(v10);
      re::StringID::destroyString((re::StringID *)(v10 - 16));
      uint64_t result = std::unique_ptr<re::ForceEffectFunctionBase,std::function<void ()(re::ForceEffectFunctionBase*)>>::~unique_ptr[abi:nn180100]((uint64_t *)(v10 - 112));
      ++v9;
      v8 += 272;
    }
    while (v9 < v3[2]);
  }
  else
  {
    if (result[1] < a2)
    {
      uint64_t result = re::DynamicArray<re::ecs2::ForceEffectDesc>::setCapacity(result, a2);
      unint64_t v4 = v3[2];
    }
    unint64_t v5 = a2 - v4;
    if (a2 > v4)
    {
      uint64_t v6 = 272 * v4 + 232;
      do
      {
        uint64_t v7 = (_OWORD *)(v3[4] + v6);
        *(_OWORD *)((char *)v7 - 200) = 0uLL;
        *(_OWORD *)((char *)v7 - 120) = 0uLL;
        *(_OWORD *)((char *)v7 - 104) = 0uLL;
        *(_OWORD *)((char *)v7 - 72) = 0uLL;
        *(_OWORD *)((char *)v7 - 88) = 0uLL;
        *(_OWORD *)((char *)v7 - 136) = 0uLL;
        *(_OWORD *)((char *)v7 - 152) = 0uLL;
        *(_OWORD *)((char *)v7 - 168) = 0uLL;
        *(_OWORD *)((char *)v7 - 184) = 0uLL;
        *(_OWORD *)((char *)v7 - 232) = 0uLL;
        *((void *)v7 - 27) = 0;
        *((void *)v7 - 26) = 0x3F80000000000000;
        *((void *)v7 - 25) = -3229614080;
        *((void *)v7 - 14) = 0;
        *((void *)v7 - 13) = 0;
        *((unsigned char *)v7 - 96) = 0;
        *((_DWORD *)v7 - 14) = 0;
        *((void *)v7 - 6) = 0;
        *((void *)v7 - 5) = "";
        *((void *)v7 - 4) = 0;
        *((void *)v7 - 3) = 0;
        *((_DWORD *)v7 - 2) = 0;
        *((void *)v7 - 2) = 0;
        v6 += 272;
        *uint64_t v7 = 0uLL;
        v7[1] = 0uLL;
        --v5;
      }
      while (v5);
    }
  }
  v3[2] = a2;
  ++*((_DWORD *)v3 + 6);
  return result;
}

void *re::TypeBuilderHelper::registerDynamicArray<re::ecs2::ForceEffectDesc>(re::TypeRegistry *,re::StringID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#1}::__invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)a1 = a3;
  uint64_t result = re::DynamicArray<re::ecs2::ForceEffectDesc>::setCapacity((void *)a1, 0);
  ++*(_DWORD *)(a1 + 24);
  return result;
}

uint64_t re::TypeBuilderHelper::registerDynamicArray<re::ecs2::ForceEffectDesc>(re::TypeRegistry *,re::StringID const&,re::TypeID const&)::{lambda(void *)#1}::__invoke(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

void re::TypeBuilderHelper::registerDynamicArray<re::ecs2::ForceEffectDesc>(re::TypeRegistry *,re::StringID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,unsigned long)#1}::__invoke(uint64_t a1, uint64_t a2, re::Allocator *a3, unint64_t a4)
{
  if (*(re::Allocator **)a1 == a3)
  {
    uint64_t v8 = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = 0;
    if (v8)
    {
      uint64_t v9 = 272 * v8;
      uint64_t v10 = *(void *)(a1 + 32) + 200;
      do
      {
        re::DynamicArray<unsigned long>::deinit(v10);
        re::StringID::destroyString((re::StringID *)(v10 - 16));
        std::unique_ptr<re::ForceEffectFunctionBase,std::function<void ()(re::ForceEffectFunctionBase*)>>::~unique_ptr[abi:nn180100]((uint64_t *)(v10 - 112));
        v10 += 272;
        v9 -= 272;
      }
      while (v9);
    }
  }
  else
  {
    re::DynamicArray<re::ecs2::ForceEffectDesc>::deinit(a1);
    *(void *)a1 = a3;
    re::DynamicArray<re::ecs2::ForceEffectDesc>::setCapacity((void *)a1, a4);
  }
  ++*(_DWORD *)(a1 + 24);
  int v11 = re::DynamicArray<re::ecs2::ForceEffectDesc>::resize((uint64_t *)a1, a4);
  {
    re::TypeRegistry::typeInfo(*(void **)a2, *(void *)(*(void *)(a2 + 16) + 72), v16);
    re::TypeInfo::TypeInfo((uint64_t)v15, (uint64_t)&v17);
    uint64_t v12 = *(void *)(a1 + 16);
    if (v12)
    {
      char v13 = *(char **)(a1 + 32);
      uint64_t v14 = 272 * v12;
      do
      {
        re::TypeInfo::destruct((re::TypeInfo *)v15, v13, a3, 0);
        re::TypeInfo::construct((re::TypeInfo *)v15, (void **)v13, a3, 0);
        v13 += 272;
        v14 -= 272;
      }
      while (v14);
    }
  }
}

uint64_t re::TypeBuilderHelper::registerDynamicArray<re::ecs2::ForceEffectDesc>(re::TypeRegistry *,re::StringID const&,re::TypeID const&)::{lambda(void *,unsigned long)#1}::__invoke(uint64_t a1, unint64_t a2)
{
  if (*(void *)(a1 + 16) <= a2)
  {
    os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
    _os_log_send_and_compose_impl();
    _os_crash_msg();
    __break(1u);
  }
  return *(void *)(a1 + 32) + 272 * a2;
}

uint64_t re::TypeBuilderHelper::registerDynamicArray<re::ecs2::ForceEffectDesc>(re::TypeRegistry *,re::StringID const&,re::TypeID const&)::{lambda(void *,re::Allocator *)#1}::__invoke(uint64_t a1, uint64_t a2)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a2 + 32))(a2, 16, 8);
  *(void *)uint64_t result = a1;
  *(_DWORD *)(result + 8) = *(_DWORD *)(a1 + 24);
  *(_DWORD *)(result + 12) = -1;
  return result;
}

uint64_t re::TypeBuilderHelper::registerDynamicArray<re::ecs2::ForceEffectDesc>(re::TypeRegistry *,re::StringID const&,re::TypeID const&)::{lambda(void *)#2}::__invoke(_DWORD *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  if (a1[2] == *(_DWORD *)(*(void *)a1 + 24))
  {
    int v3 = a1[3];
    unint64_t v4 = *(void *)(v2 + 16);
    if (v3 < (int)v4) {
      a1[3] = ++v3;
    }
    if (v4 <= v3) {
      return 0;
    }
    else {
      return *(void *)(v2 + 32) + 272 * v3;
    }
  }
  else
  {
    re::internal::assertLog((re::internal *)4, a2, "assertion failure: '%s' (%s:line %i) DynamicArray elements may not be added or removed during iteration.", "iter->originalVersion == iter->array->version()", "operator()", 313);
    uint64_t result = _os_crash();
    __break(1u);
  }
  return result;
}

uint64_t re::TypeBuilderHelper::registerDynamicArray<re::ecs2::ForceEffectDesc>(re::TypeRegistry *,re::StringID const&,re::TypeID const&)::{lambda(void *,re::Allocator *)#2}::__invoke(uint64_t result, uint64_t a2)
{
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 40))(a2, result);
  }
  return result;
}

uint64_t re::make::shared::unsafelyInplace<re::ecs2::ForceEffectComponent>(uint64_t a1)
{
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)a1, 0);
  *(void *)(v2 + 16) = 0;
  *(_WORD *)(v2 + 24) = 0;
  *(void *)uint64_t v2 = &unk_26E6E4E58;
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = 0;
  *(void *)(v2 + 32) = 0;
  *(_DWORD *)(a1 + 56) = 0;
  objc_initWeak((id *)(v2 + 72), 0);
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 88) = 0;
  *(_DWORD *)(a1 + 112) = 0;
  *(void *)(a1 + 160) = 0;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_DWORD *)(a1 + 152) = 0;
  *(unsigned char *)(a1 + 168) = 1;
  return a1;
}

void re::ecs2::ForceEffectComponent::~ForceEffectComponent(id *this)
{
  *this = &unk_26E6E4E58;
  re::DynamicArray<re::StringID>::deinit((uint64_t)(this + 16));
  re::DynamicArray<unsigned long>::deinit((uint64_t)(this + 11));
  objc_destroyWeak(this + 9);
  this[9] = 0;
  re::DynamicArray<re::ecs2::ForceEffectDesc>::deinit((uint64_t)(this + 4));
  *this = &unk_26E6DECE0;
  objc_destructInstance(this + 1);
}

{
  uint64_t vars8;

  *this = &unk_26E6E4E58;
  re::DynamicArray<re::StringID>::deinit((uint64_t)(this + 16));
  re::DynamicArray<unsigned long>::deinit((uint64_t)(this + 11));
  objc_destroyWeak(this + 9);
  this[9] = 0;
  re::DynamicArray<re::ecs2::ForceEffectDesc>::deinit((uint64_t)(this + 4));
  *this = &unk_26E6DECE0;
  objc_destructInstance(this + 1);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ForceEffectComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::ForceEffectComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ForceEffectComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::ForceEffectComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::ForceEffectComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void *std::__function::__value_func<void ()(re::ForceEffectFunctionBase *)>::~__value_func[abi:nn180100](void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t *std::unique_ptr<re::ForceEffectFunctionBase,std::function<void ()(re::ForceEffectFunctionBase*)>>::~unique_ptr[abi:nn180100](uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2) {
    std::function<void ()(re::ForceEffectFunctionBase *)>::operator()((uint64_t)(a1 + 1), v2);
  }
  std::__function::__value_func<void ()(re::ForceEffectFunctionBase *)>::~__value_func[abi:nn180100](a1 + 1);
  return a1;
}

uint64_t std::function<void ()(re::ForceEffectFunctionBase *)>::operator()(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2;
  uint64_t v2 = *(void *)(a1 + 24);
  if (!v2)
  {
    std::__throw_bad_function_call[abi:nn180100]();
    JUMPOUT(0x2336BD7C4);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t *))(*(void *)v2 + 48))(v2, &v4);
}

void std::__function::__func<re::ecs2::ForceEffectComponent::createAndAppendDefinition(re::ecs2::ForceEffectDesc &,re::ecs2::PhysicsSimulationData &)::$_0,std::allocator<re::ecs2::ForceEffectComponent::createAndAppendDefinition(re::ecs2::ForceEffectDesc &,re::ecs2::PhysicsSimulationData &)::$_0>,void ()(re::ForceEffectFunctionBase *)>::~__func()
{
}

void *std::__function::__func<re::ecs2::ForceEffectComponent::createAndAppendDefinition(re::ecs2::ForceEffectDesc &,re::ecs2::PhysicsSimulationData &)::$_0,std::allocator<re::ecs2::ForceEffectComponent::createAndAppendDefinition(re::ecs2::ForceEffectDesc &,re::ecs2::PhysicsSimulationData &)::$_0>,void ()(re::ForceEffectFunctionBase *)>::__clone()
{
  uint64_t result = operator new(0x10uLL);
  *uint64_t result = &unk_26E6E4EE0;
  return result;
}

void std::__function::__func<re::ecs2::ForceEffectComponent::createAndAppendDefinition(re::ecs2::ForceEffectDesc &,re::ecs2::PhysicsSimulationData &)::$_0,std::allocator<re::ecs2::ForceEffectComponent::createAndAppendDefinition(re::ecs2::ForceEffectDesc &,re::ecs2::PhysicsSimulationData &)::$_0>,void ()(re::ForceEffectFunctionBase *)>::__clone(uint64_t a1, void *a2)
{
  *a2 = &unk_26E6E4EE0;
}

re *std::__function::__func<re::ecs2::ForceEffectComponent::createAndAppendDefinition(re::ecs2::ForceEffectDesc &,re::ecs2::PhysicsSimulationData &)::$_0,std::allocator<re::ecs2::ForceEffectComponent::createAndAppendDefinition(re::ecs2::ForceEffectDesc &,re::ecs2::PhysicsSimulationData &)::$_0>,void ()(re::ForceEffectFunctionBase *)>::operator()(re *result, void (****a2)(void))
{
  uint64_t v2 = *a2;
  if (*a2)
  {
    uint64_t v3 = re::globalAllocators(result)[2];
    (**v2)(v2);
    uint64_t v4 = *(uint64_t (**)(uint64_t, void (***)(void)))(*(void *)v3 + 40);
    return (re *)v4(v3, v2);
  }
  return result;
}

uint64_t std::__function::__func<re::ecs2::ForceEffectComponent::createAndAppendDefinition(re::ecs2::ForceEffectDesc &,re::ecs2::PhysicsSimulationData &)::$_0,std::allocator<re::ecs2::ForceEffectComponent::createAndAppendDefinition(re::ecs2::ForceEffectDesc &,re::ecs2::PhysicsSimulationData &)::$_0>,void ()(re::ForceEffectFunctionBase *)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<re::ecs2::ForceEffectComponent::createAndAppendDefinition(re::ecs2::ForceEffectDesc &,re::ecs2::PhysicsSimulationData &)::$_0,std::allocator<re::ecs2::ForceEffectComponent::createAndAppendDefinition(re::ecs2::ForceEffectDesc &,re::ecs2::PhysicsSimulationData &)::$_0>,void ()(re::ForceEffectFunctionBase *)>::target_type()
{
}

void *re::ecs2::allocInfo_AssetStateComponent(re::ecs2 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&_MergedGlobals_156, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&_MergedGlobals_156))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF815C0, "AssetStateComponent");
    __cxa_guard_release(&_MergedGlobals_156);
  }
  return &unk_26AF815C0;
}

void re::ecs2::initInfo_AssetStateComponent(re::ecs2 *this, re::IntrospectionBase *a2)
{
  v21[0] = 0xB31548095A8B4CB8;
  v21[1] = "AssetStateComponent";
  re::StringID::destroyString((re::StringID *)v21);
  *((_OWORD *)this + 2) = v22;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81598, memory_order_acquire) & 1) == 0)
  {
    uint64_t v4 = (re *)__cxa_guard_acquire(&qword_26AF81598);
    if (v4)
    {
      unint64_t v5 = re::introspectionAllocator(v4);
      uint64_t v6 = re::ecs2::introspect_Component((re::IntrospectionBase **)1);
      uint64_t v7 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v5 + 32))(v5, 72, 8);
      *(_DWORD *)uint64_t v7 = 1;
      *(void *)(v7 + 8) = "Component";
      *(void *)(v7 + 16) = v6;
      *(void *)(v7 + 24) = 0;
      *(void *)(v7 + 32) = 0;
      *(_DWORD *)(v7 + 40) = 3;
      *(void *)(v7 + 48) = 0;
      *(void *)(v7 + 56) = 0;
      *(_DWORD *)(v7 + 64) = 0;
      qword_26AF815A0 = v7;
      uint64_t v8 = re::introspectionAllocator((re *)v7);
      uint64_t v10 = re::introspect_uint64_t((re *)1, v9);
      uint64_t v11 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v8 + 32))(v8, 72, 8);
      *(_DWORD *)uint64_t v11 = 1;
      *(void *)(v11 + 8) = "assetId";
      *(void *)(v11 + 16) = v10;
      *(void *)(v11 + 24) = 0;
      *(void *)(v11 + 32) = 0x2000000001;
      *(_DWORD *)(v11 + 40) = 0;
      *(void *)(v11 + 48) = 0;
      *(void *)(v11 + 56) = 0;
      *(_DWORD *)(v11 + 64) = 0;
      qword_26AF815A8 = v11;
      uint64_t v12 = re::introspectionAllocator((re *)v11);
      uint64_t v14 = re::introspect_uint64_t((re *)1, v13);
      uint64_t v15 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v12 + 32))(v12, 72, 8);
      *(_DWORD *)uint64_t v15 = 1;
      *(void *)(v15 + 8) = "peerId";
      *(void *)(v15 + 16) = v14;
      *(void *)(v15 + 24) = 0;
      *(void *)(v15 + 32) = 0x2800000002;
      *(_DWORD *)(v15 + 40) = 0;
      *(void *)(v15 + 48) = 0;
      *(void *)(v15 + 56) = 0;
      *(_DWORD *)(v15 + 64) = 0;
      qword_26AF815B0 = v15;
      uint64_t v16 = re::introspectionAllocator((re *)v15);
      uint64_t v18 = re::introspect_uint8_t((re *)1, v17);
      uint64_t v19 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v16 + 32))(v16, 72, 8);
      *(_DWORD *)uint64_t v19 = 1;
      *(void *)(v19 + 8) = "loadState";
      *(void *)(v19 + 16) = v18;
      *(void *)(v19 + 24) = 0;
      *(void *)(v19 + 32) = 0x3000000003;
      *(_DWORD *)(v19 + 40) = 0;
      *(void *)(v19 + 48) = 0;
      *(void *)(v19 + 56) = 0;
      *(_DWORD *)(v19 + 64) = 0;
      qword_26AF815B8 = v19;
      __cxa_guard_release(&qword_26AF81598);
    }
  }
  *((void *)this + 2) = 0x3800000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 4;
  *((void *)this + 8) = &qword_26AF815A0;
  *((void *)this + 9) = re::internal::defaultConstruct<re::ecs2::AssetStateComponent>;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 10) = re::internal::defaultDestruct<re::ecs2::AssetStateComponent>;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::ecs2::AssetStateComponent>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::ecs2::AssetStateComponent>;
  re::IntrospectionRegistry::add(this, v3);
  long long v20 = v22;
}

void re::internal::defaultConstruct<re::ecs2::AssetStateComponent>(int a1, int a2, ArcSharedObject *this)
{
  *((void *)this + 6) = 0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *(_OWORD *)this = 0u;
  ArcSharedObject::ArcSharedObject(this, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6C9158;
}

uint64_t re::internal::defaultDestruct<re::ecs2::AssetStateComponent>(uint64_t a1, uint64_t a2, uint64_t (***a3)(void))
{
  return (**a3)(a3);
}

void re::internal::defaultConstructV2<re::ecs2::AssetStateComponent>(uint64_t a1)
{
  *(void *)(a1 + 48) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)a1, 0);
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 24) = 0;
  *(void *)uint64_t v1 = &unk_26E6C9158;
}

uint64_t re::internal::defaultDestructV2<re::ecs2::AssetStateComponent>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

uint64_t re::ecs2::introspect_AssetStateComponent(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"AssetStateComponent", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_AssetStateComponent, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_AssetStateComponent, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::AssetStateComponent>, this);
}

void *re::ecs2::allocInfo_VisualProxyComponent(re::ecs2 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&_MergedGlobals_157, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&_MergedGlobals_157))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF81670, "VisualProxyComponent");
    __cxa_guard_release(&_MergedGlobals_157);
  }
  return &unk_26AF81670;
}

void re::ecs2::initInfo_VisualProxyComponent(re::ecs2 *this, re::IntrospectionBase *a2)
{
  v9[0] = 0xECFE882C7DB64B5ELL;
  v9[1] = "VisualProxyComponent";
  re::StringID::destroyString((re::StringID *)v9);
  *((_OWORD *)this + 2) = v10;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81648, memory_order_acquire) & 1) == 0)
  {
    uint64_t v4 = (re *)__cxa_guard_acquire(&qword_26AF81648);
    if (v4)
    {
      unint64_t v5 = re::introspectionAllocator(v4);
      uint64_t v6 = re::ecs2::introspect_Component((re::IntrospectionBase **)1);
      uint64_t v7 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v5 + 32))(v5, 72, 8);
      *(_DWORD *)uint64_t v7 = 1;
      *(void *)(v7 + 8) = "Component";
      *(void *)(v7 + 16) = v6;
      *(void *)(v7 + 24) = 0;
      *(void *)(v7 + 32) = 0;
      *(_DWORD *)(v7 + 40) = 3;
      *(void *)(v7 + 48) = 0;
      *(void *)(v7 + 56) = 0;
      *(_DWORD *)(v7 + 64) = 0;
      qword_26AF81640 = v7;
      __cxa_guard_release(&qword_26AF81648);
    }
  }
  *((void *)this + 2) = 0x4800000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 1;
  *((void *)this + 8) = &qword_26AF81640;
  *((void *)this + 9) = re::internal::defaultConstruct<re::ecs2::VisualProxyComponent>;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 10) = re::internal::defaultDestruct<re::ecs2::VisualProxyComponent>;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::ecs2::VisualProxyComponent>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::ecs2::VisualProxyComponent>;
  re::IntrospectionRegistry::add(this, v3);
  long long v8 = v10;
}

void re::internal::defaultConstruct<re::ecs2::VisualProxyComponent>(int a1, int a2, ArcSharedObject *this)
{
  *((void *)this + 8) = 0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *(_OWORD *)this = 0u;
  *((_OWORD *)this + 1) = 0u;
  ArcSharedObject::ArcSharedObject(this, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E51E8;
  *(void *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(_WORD *)(v3 + 48) = 256;
  *(unsigned char *)(v3 + 56) = 0;
}

void *re::internal::defaultDestruct<re::ecs2::VisualProxyComponent>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(a3 + 56))
  {
    objc_destroyWeak((id *)(a3 + 64));
    *(void *)(a3 + 64) = 0;
  }
  re::TextureHandle::invalidate((re::TextureHandle *)(a3 + 32));
  *(void *)a3 = &unk_26E6DECE0;
  return objc_destructInstance((id)(a3 + 8));
}

void re::internal::defaultConstructV2<re::ecs2::VisualProxyComponent>(uint64_t a1)
{
  *(void *)(a1 + 64) = 0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)a1, 0);
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 24) = 0;
  *(void *)uint64_t v1 = &unk_26E6E51E8;
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 40) = 0;
  *(_WORD *)(v1 + 48) = 256;
  *(unsigned char *)(v1 + 56) = 0;
}

void *re::internal::defaultDestructV2<re::ecs2::VisualProxyComponent>(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 56))
  {
    objc_destroyWeak((id *)(a1 + 64));
    *(void *)(a1 + 64) = 0;
  }
  re::TextureHandle::invalidate((re::TextureHandle *)(a1 + 32));
  *(void *)a1 = &unk_26E6DECE0;
  return objc_destructInstance((id)(a1 + 8));
}

uint64_t re::ecs2::introspect_VisualProxyComponent(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"VisualProxyComponent", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_VisualProxyComponent, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_VisualProxyComponent, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::VisualProxyComponent>, this);
}

void *re::ecs2::allocInfo_VisualProxyFilterComponent(re::ecs2 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81650, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF81650))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF816E8, "VisualProxyFilterComponent");
    __cxa_guard_release(&qword_26AF81650);
  }
  return &unk_26AF816E8;
}

void re::ecs2::initInfo_VisualProxyFilterComponent(re::ecs2 *this, re::IntrospectionBase *a2)
{
  v9[0] = 0x762868B3B6AA272ELL;
  v9[1] = "VisualProxyFilterComponent";
  re::StringID::destroyString((re::StringID *)v9);
  *((_OWORD *)this + 2) = v10;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81660, memory_order_acquire) & 1) == 0)
  {
    uint64_t v4 = (re *)__cxa_guard_acquire(&qword_26AF81660);
    if (v4)
    {
      unint64_t v5 = re::introspectionAllocator(v4);
      uint64_t v6 = re::ecs2::introspect_Component((re::IntrospectionBase **)1);
      uint64_t v7 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v5 + 32))(v5, 72, 8);
      *(_DWORD *)uint64_t v7 = 1;
      *(void *)(v7 + 8) = "Component";
      *(void *)(v7 + 16) = v6;
      *(void *)(v7 + 24) = 0;
      *(void *)(v7 + 32) = 0;
      *(_DWORD *)(v7 + 40) = 3;
      *(void *)(v7 + 48) = 0;
      *(void *)(v7 + 56) = 0;
      *(_DWORD *)(v7 + 64) = 0;
      qword_26AF81658 = v7;
      __cxa_guard_release(&qword_26AF81660);
    }
  }
  *((void *)this + 2) = 0x2000000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 1;
  *((void *)this + 8) = &qword_26AF81658;
  *((void *)this + 9) = re::internal::defaultConstruct<re::ecs2::VisualProxyFilterComponent>;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 10) = re::internal::defaultDestruct<re::ecs2::VisualProxyFilterComponent>;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::ecs2::VisualProxyFilterComponent>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::ecs2::VisualProxyFilterComponent>;
  re::IntrospectionRegistry::add(this, v3);
  long long v8 = v10;
}

void re::internal::defaultConstruct<re::ecs2::VisualProxyFilterComponent>(int a1, int a2, ArcSharedObject *this)
{
  *(_OWORD *)this = 0u;
  *((_OWORD *)this + 1) = 0u;
  ArcSharedObject::ArcSharedObject(this, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E5270;
}

void *re::internal::defaultDestruct<re::ecs2::VisualProxyFilterComponent>(uint64_t a1, uint64_t a2, void *a3)
{
  *a3 = &unk_26E6DECE0;
  return objc_destructInstance(a3 + 1);
}

void re::internal::defaultConstructV2<re::ecs2::VisualProxyFilterComponent>(ArcSharedObject *a1)
{
  *(_OWORD *)a1 = 0u;
  *((_OWORD *)a1 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(a1, 0);
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 24) = 0;
  *(void *)uint64_t v1 = &unk_26E6E5270;
}

void *re::internal::defaultDestructV2<re::ecs2::VisualProxyFilterComponent>(void *a1)
{
  *a1 = &unk_26E6DECE0;
  return objc_destructInstance(a1 + 1);
}

uint64_t re::ecs2::introspect_VisualProxyFilterComponent(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"VisualProxyFilterComponent", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_VisualProxyFilterComponent, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_VisualProxyFilterComponent, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::VisualProxyFilterComponent>, this);
}

void *re::ecs2::allocInfo_VisualProxySystem(re::ecs2 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81668, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF81668))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF81760, "VisualProxySystem");
    __cxa_guard_release(&qword_26AF81668);
  }
  return &unk_26AF81760;
}

void re::ecs2::initInfo_VisualProxySystem(re::ecs2 *this, re::IntrospectionBase *a2)
{
  v5[0] = 0xA52B53AD6A44ED7ALL;
  v5[1] = "VisualProxySystem";
  re::StringID::destroyString((re::StringID *)v5);
  *((_OWORD *)this + 2) = v6;
  *((void *)this + 2) = 0x1E000000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 0;
  *((void *)this + 8) = &re::ecs2::initInfo_VisualProxySystem(re::IntrospectionBase *)::structureAttributes;
  *((void *)this + 9) = re::internal::defaultConstruct<re::ecs2::VisualProxySystem>;
  *((void *)this + 10) = re::internal::defaultDestruct<re::ecs2::VisualProxySystem>;
  *((void *)this + 11) = re::internal::defaultRetain<re::ecs2::VisualProxySystem>(void)::{lambda(void *)#1}::__invoke;
  *((void *)this + 12) = re::internal::defaultRelease<re::ecs2::VisualProxySystem>(void)::{lambda(void *)#1}::__invoke;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::ecs2::VisualProxySystem>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::ecs2::VisualProxySystem>;
  re::IntrospectionRegistry::add(this, v3);
  long long v4 = v6;
}

re::ecs2::VisualProxySystem *re::internal::defaultConstruct<re::ecs2::VisualProxySystem>(uint64_t a1, uint64_t a2, re::ecs2::VisualProxySystem *a3)
{
  return re::ecs2::VisualProxySystem::VisualProxySystem(a3);
}

void *re::internal::defaultDestruct<re::ecs2::VisualProxySystem>(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  re::ecs2::BasicComponentStates<re::ecs2::BlendShapeWeightsBufferComponent>::~BasicComponentStates(a3 + 29);
  a3[24] = (uint64_t)&unk_26E6E4F90;
  re::FixedArray<CoreIKTransform>::deinit(a3 + 26);
  uint64_t v4 = a3[23];
  if (v4)
  {

    a3[23] = 0;
  }
  re::AssetHandle::~AssetHandle((re::AssetHandle *)(a3 + 20));
  *a3 = (uint64_t)&unk_26E6DECE0;
  return objc_destructInstance(a3 + 1);
}

void *re::internal::defaultDestructV2<re::ecs2::VisualProxySystem>(uint64_t *a1)
{
  re::ecs2::BasicComponentStates<re::ecs2::BlendShapeWeightsBufferComponent>::~BasicComponentStates(a1 + 29);
  a1[24] = (uint64_t)&unk_26E6E4F90;
  re::FixedArray<CoreIKTransform>::deinit(a1 + 26);
  uint64_t v2 = a1[23];
  if (v2)
  {

    a1[23] = 0;
  }
  re::AssetHandle::~AssetHandle((re::AssetHandle *)(a1 + 20));
  *a1 = (uint64_t)&unk_26E6DECE0;
  return objc_destructInstance(a1 + 1);
}

uint64_t re::ecs2::introspect_VisualProxySystem(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"VisualProxySystem", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_VisualProxySystem, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_VisualProxySystem, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::VisualProxySystem>, this);
}

os_log_t ___ZN2re4ecs220VisualProxyComponent3logEv_block_invoke()
{
  os_log_t result = os_log_create("com.apple.re", "VisualProxyComponent");
  re::ecs2::VisualProxyComponent::log(void)::log = (uint64_t)result;
  return result;
}

BOOL re::ecs2::VisualProxyComponentStateImpl::processDirtyComponents(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::DataArrayIterator((uint64_t)&v21, a5, 0);
  unint64_t v8 = v21;
  unint64_t v9 = v22;
  unint64_t v21 = a4;
  unint64_t v22 = v8;
  unint64_t v23 = v9;
  uint64_t v10 = (unsigned __int16)v9;
  uint64_t v11 = v9 & 0xFFFF0000;
  if (v8 != a5 || v10 != 0xFFFF || v11 != 4294901760)
  {
    do
    {
      uint64_t v14 = re::DataArray<re::ecs2::Component *>::DataArrayIterator<re::ecs2::Component *,re::ecs2::Component * const&>::operator*((unsigned __int16 *)&v22);
      uint64_t v15 = (unint64_t *)(a3 + 32);
      if (!*(unsigned char *)(*(void *)v14 + 48))
      {
        if (*(unsigned char *)(*(void *)v14 + 49)) {
          uint64_t v15 = (unint64_t *)(a3 + 40);
        }
        else {
          uint64_t v15 = (unint64_t *)(a3 + 32);
        }
      }
      unint64_t v16 = v21;
      unint64_t v17 = re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::handle((unsigned __int16 *)&v22);
      re::ecs2::ComponentBucketsBase::moveComponent(*(re::ecs2::ComponentBucketsBase **)(a3 + 16), v16, v17, *v15);
      re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::increment(&v22);
    }
    while (v22 != a5 || (unsigned __int16)v23 != 0xFFFF || WORD1(v23) != 0xFFFF);
  }
  return *(_DWORD *)(a5 + 40) != 0;
}

unint64_t re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::setComponentState(uint64_t a1, unint64_t a2, unint64_t a3)
{
  unint64_t result = re::ecs2::ComponentBucketsBase::moveComponent(*(re::ecs2::ComponentBucketsBase **)(a1 + 16), a2, a3, *(void *)(a1 + 24));
  if (result != a2 || v7 != a3 || ((v7 ^ a3) & 0xFFFFFF00000000) != 0)
  {
    uint64_t v10 = *(uint64_t (**)(void))(**(void **)(*(void *)a1 + 224) + 16);
    return v10();
  }
  return result;
}

uint64_t re::ecs2::VisualProxyComponentStateImpl::processPreparingComponents(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v9 = re::AssetHandle::loadedAsset<re::MaterialAsset>((re::MaterialAsset *)(*(void *)(a1 + 8) + 160));
  uint64_t v11 = v9;
  uint64_t v12 = *(void *)(*(void *)(a1 + 8) + 168);
  if (v12)
  {
    unsigned int v13 = atomic_load((unsigned int *)(v12 + 704));
    if ((v9 != 0) != (v13 == 1))
    {
      if (v13 == 1) {
        return *(_DWORD *)(a5 + 40) != 0;
      }
LABEL_6:
      re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::DataArrayIterator((uint64_t)&v25, a5, 0);
      unint64_t v14 = v25;
      unint64_t v15 = v26;
      unint64_t v25 = a4;
      unint64_t v26 = v14;
      unint64_t v27 = v15;
      uint64_t v16 = (unsigned __int16)v15;
      uint64_t v17 = v15 & 0xFFFF0000;
      if (v14 != a5 || v16 != 0xFFFF || v17 != 4294901760)
      {
        if (v11)
        {
          do
          {
            unint64_t v20 = v25;
            unint64_t v21 = re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::handle((unsigned __int16 *)&v26);
            re::ecs2::ComponentBucketsBase::moveComponent(*(re::ecs2::ComponentBucketsBase **)(a3 + 16), v20, v21, *(void *)(a3 + 48));
            re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::increment(&v26);
          }
          while (v26 != a5 || (unsigned __int16)v27 != 0xFFFF || WORD1(v27) != 0xFFFF);
        }
        else
        {
          re::AssetHandle::loadAsync((re::AssetHandle *)(*(void *)(a1 + 8) + 160));
        }
      }
      return *(_DWORD *)(a5 + 40) != 0;
    }
  }
  else if (v9)
  {
    goto LABEL_6;
  }
  re::internal::assertLog((re::internal *)4, v10, "assertion failure: '%s' (%s:line %i) Asset loaded/loading state is messed up.", "assetLoaded != assetLoading", "processPreparingComponents", 105);
  uint64_t result = _os_crash();
  __break(1u);
  return result;
}

BOOL re::ecs2::VisualProxyComponentStateImpl::processUpdatingComponents(uint64_t a1, uint64_t a2, uint64_t a3, re::ecs2::TransformComponent *a4, uint64_t a5)
{
  uint64_t v163 = *MEMORY[0x263EF8340];
  unint64_t v8 = *(re::RenderManager **)(*(void *)(a1 + 8) + 112);
  uint64_t v9 = *((void *)v8 + 13);
  if (v9)
  {
    uint64_t v10 = (re::DynamicString **)re::RenderFrameBox::get(v9 + 344, 0xFFFFFFFFFFFFFFFuLL);
    unint64_t v8 = *(re::RenderManager **)(*(void *)(a1 + 8) + 112);
  }
  else
  {
    uint64_t v10 = 0;
  }
  unsigned int v125 = 0;
  long long v123 = 0u;
  long long v124 = 0u;
  uint64_t v126 = 0x7FFFFFFFLL;
  unsigned int v121 = 0;
  long long v119 = 0u;
  long long v120 = 0u;
  uint64_t v122 = 0x7FFFFFFFLL;
  uint64_t v11 = (re::MeshAsset *)re::RenderManager::perFrameAllocator(v8);
  uint64_t v12 = *(void *)(*(void *)(a1 + 8) + 120);
  unsigned int v13 = re::MeshAsset::assetType(v11);
  (*(void (**)(void *__return_ptr, uint64_t, const char *, uint64_t *))(*(void *)v12 + 32))(v118, v12, "sharedBillboardMesh.compiledmesh", v13);
  uint64_t v99 = (*(uint64_t (**)(void))(**(void **)(*(void *)(a1 + 8) + 136) + 24))(*(void *)(*(void *)(a1 + 8) + 136));
  float32x4_t v102 = (re::MeshAsset *)re::AssetHandle::loadedAsset<re::MeshAsset>((re::MeshAsset *)v118);
  if (!v102) {
    goto LABEL_82;
  }
  uint64_t v98 = (*(uint64_t (**)(void))(**(void **)(*(void *)(a1 + 8) + 472) + 16))(*(void *)(*(void *)(a1 + 8) + 472));
  re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::DataArrayIterator((uint64_t)&v127, a5, 0);
  v116[1] = a4;
  float32x4_t v117 = v127;
  if (v127.i64[0] == a5 && v127.u16[4] == 0xFFFFLL && (v127.i32[2] & 0xFFFF0000) == 0xFFFF0000)
  {
    unsigned int v14 = 0;
    uint64_t v15 = 0;
    LODWORD(v16) = 0;
    goto LABEL_69;
  }
  uint64_t v15 = 0;
  __asm { FMOV            V8.2S, #1.0 }
  int32x4_t v96 = vdupq_n_s32(0x7F800000u);
  uint64_t v97 = a5;
  do
  {
    uint64_t v21 = re::DataArray<re::ecs2::Component *>::DataArrayIterator<re::ecs2::Component *,re::ecs2::Component * const&>::operator*((unsigned __int16 *)&v117);
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(*(void *)v21 + 16);
    uint64_t v24 = v23;
    do
    {
      uint64_t v25 = v24;
      uint64_t v24 = *(void *)(v24 + 24);
    }
    while (v24);
    uint64_t v26 = *(void *)(v25 + 16);
    v116[0] = *(re::ecs2::TransformComponent **)(*(void *)v21 + 16);
    if (!v22) {
      goto LABEL_55;
    }
    if (!*(void *)(v23 + 240)) {
      goto LABEL_55;
    }
    if (!*(void *)(v22 + 40)) {
      goto LABEL_55;
    }
    unint64_t v27 = (const re::TextureHandle *)(v22 + 32);
    if (!*(void *)(v22 + 32)) {
      goto LABEL_55;
    }
    uint64_t v28 = re::AssetHandle::asset<re::MaterialAsset>((re::MaterialAsset *)(*(void *)(a1 + 8) + 160));
    unint64_t v29 = *(re::MaterialParameterBlock **)(*(void *)(a1 + 8) + 184);
    re::MaterialParameterBlock::setTextureHandle(v29, "textureBaseColor", v27, (uint64_t)v115);
    v115[0] = 0;
    uint64_t PerspectiveCameraInScene = re::ecs2::PerspectiveCameraComponent::firstPerspectiveCameraInScene(v26);
    if (PerspectiveCameraInScene)
    {
      re::ecs2::PerspectiveCameraComponent::calculateWorldPose(PerspectiveCameraInScene, 0, (uint64_t)&v127);
    }
    else
    {
      uint64_t OrthographicCameraInScene = re::ecs2::OrthographicCameraComponent::firstOrthographicCameraInScene(v26);
      if (OrthographicCameraInScene)
      {
        re::ecs2::OrthographicCameraComponent::calculateWorldPose(OrthographicCameraInScene, 0, (uint64_t)&v127);
      }
      else
      {
        uint64_t CustomMatrixCameraInScene = re::ecs2::CustomMatrixCameraComponent::firstCustomMatrixCameraInScene(v26);
        long long v103 = xmmword_23435FBB0;
        if (!CustomMatrixCameraInScene) {
          goto LABEL_23;
        }
        re::ecs2::CustomMatrixCameraComponent::calculateWorldPose(CustomMatrixCameraInScene, 0, &v127);
      }
    }
    long long v103 = v128;
LABEL_23:
    re::ecs2::TransformComponent::worldMatrix4x4F((re::ecs2::TransformComponent **)v116[0], (const re::ecs2::Entity *)1, &v127);
    float32x4_t v101 = v130;
    re::ecs2::TransformComponent::worldScale((re::ecs2::TransformComponent **)v116[0], (const re::ecs2::Entity *)1);
    float v34 = *(float *)&v33;
    unint64_t v36 = v35;
    unint64_t v37 = HIDWORD(v33);
    float32x4_t v111 = 0u;
    long long v112 = 0u;
    long long v113 = 0u;
    long long v114 = 0u;
    DWORD1(v112) = HIDWORD(v33);
    v111.i32[0] = v33;
    DWORD2(v113) = v35;
    HIDWORD(v114) = 1065353216;
    re::MeshAsset::boundingBoxForModel(v102, 0, &v127);
    re::AABB::transform(&v127, &v111, (uint64_t)v110);
    char v147 = 0;
    char v148 = 0;
    long long v149 = 0u;
    float32x4_t v127 = 0u;
    long long v128 = 0u;
    uint64_t v129 = 0;
    float32x4_t v130 = 0u;
    float32x4_t v131 = 0u;
    float32x4_t v132 = 0u;
    float32x4_t v133 = 0u;
    long long v134 = 0u;
    long long v135 = 0u;
    long long v136 = 0u;
    long long v137 = 0u;
    char v138 = 0;
    long long v139 = 0u;
    long long v140 = 0u;
    long long v141 = 0u;
    long long v142 = 0u;
    long long v143 = 0u;
    long long v144 = 0u;
    long long v145 = 0u;
    memset(v146, 0, 28);
    if (re::MaterialParameterTable::kDefaultNameHash(void)::once != -1) {
      dispatch_once(&re::MaterialParameterTable::kDefaultNameHash(void)::once, &__block_literal_global_29);
    }
    float v38 = *((float *)&v103 + 1);
    float v100 = v34;
    uint64_t v150 = re::MaterialParameterTable::kDefaultNameHash(void)::_kDefaultNameHash;
    uint64_t v151 = _D8;
    int v152 = 1065353216;
    long long v153 = 0u;
    memset(v154, 0, sizeof(v154));
    unint64_t v155 = 0xFFFFFFFF00000001;
    *(void *)&long long v39 = 0x7F0000007FLL;
    *((void *)&v39 + 1) = 0x7F0000007FLL;
    int32x4_t v156 = v96;
    long long v157 = v39;
    uint64_t v158 = 0;
    char v159 = 0;
    uint64_t v160 = 0;
    char v161 = 0;
    uint64_t v162 = 0x10100010001;
    long long v40 = (void *)(*(uint64_t (**)(re::MeshAsset *, uint64_t, uint64_t))(*(void *)v11 + 32))(v11, 24, 8);
    unint64_t v41 = *((void *)v102 + 47);
    float32x4_t v104 = (re::MeshAsset *)*((void *)v102 + 49);
    uint64_t v105 = v41;
    v40[1] = 0;
    v40[2] = 0;
    *long long v40 = 0;
    re::FixedArray<re::DataArrayHandle<re::DeformationStack>>::init<>(v40, (uint64_t)v11, v41);
    re::FixedArray<re::SkinningInfluence>::copy(v40, (const void **)&v104);
    uint64_t v42 = v40[1];
    v127.i64[0] = v40[2];
    v127.i64[1] = v42;
    int v43 = 1;
    float32x4_t v104 = (re::MeshAsset *)v110;
    uint64_t v105 = 1;
    uint64_t v44 = (*(uint64_t (**)(re::MeshAsset *, uint64_t, uint64_t))(*(void *)v11 + 32))(v11, 72, 8);
    *((void *)&v128 + 1) = re::MeshBoundingBoxes::MeshBoundingBoxes(v44, (uint64_t)v11, (const void **)&v104, 1);
    float32x4_t v104 = (re::MeshAsset *)v110;
    uint64_t v105 = 1;
    uint64_t v45 = (*(uint64_t (**)(re::MeshAsset *, uint64_t, uint64_t))(*(void *)v11 + 32))(v11, 72, 8);
    uint64_t v46 = re::MeshBoundingBoxes::MeshBoundingBoxes(v45, (uint64_t)v11, (const void **)&v104, 1);
    float v47 = *(float *)&v103;
    float v48 = v47 + v47;
    float v49 = v47 * (float)(v47 + v47);
    float v50 = v38 * (float)(v38 + v38);
    float v51 = *((float *)&v103 + 2) * (float)(*((float *)&v103 + 2) + *((float *)&v103 + 2));
    float v52 = *((float *)&v103 + 1) * v48;
    float v53 = *((float *)&v103 + 2) * v48;
    float v54 = *((float *)&v103 + 2) * (float)(*((float *)&v103 + 1) + *((float *)&v103 + 1));
    float v55 = *((float *)&v103 + 3) * (float)(v38 + v38);
    float v56 = *((float *)&v103 + 3) * (float)(*((float *)&v103 + 2) + *((float *)&v103 + 2));
    v57.i32[3] = 0;
    v57.f32[0] = 1.0 - (float)(v50 + v51);
    v57.f32[1] = (float)(*((float *)&v103 + 1) * v48) + v56;
    v57.f32[2] = (float)(*((float *)&v103 + 2) * v48) - v55;
    float v58 = *((float *)&v103 + 3) * v48;
    v59.i32[3] = 0;
    v59.f32[0] = v52 - v56;
    v59.f32[1] = 1.0 - (float)(v49 + v51);
    v59.f32[2] = v54 + v58;
    *(float *)&unsigned int v60 = 1.0 - (float)(v49 + v50);
    v61.f32[0] = v53 + v55;
    v61.f32[1] = v54 - v58;
    v61.i64[1] = v60;
    uint64_t v129 = v46;
    float32x4_t v62 = vmulq_laneq_f32(v61, (float32x4_t)vdupq_n_s64(v36), 2);
    float32x4_t v63 = v101;
    v63.i32[3] = 1.0;
    float32x4_t v130 = vmulq_n_f32(v57, v100);
    float32x4_t v131 = vmulq_n_f32(v59, *(float *)&v37);
    float32x4_t v132 = v62;
    float32x4_t v133 = v63;
    uint64_t v64 = *(void *)(v28 + 1664);
    float v65 = (void *)(*(uint64_t (**)(re::MeshAsset *, uint64_t, uint64_t))(*(void *)v11 + 32))(v11, 8, 8);
    void *v65 = v64;
    *(void *)&long long v134 = v65;
    *((void *)&v134 + 1) = 1;
    uint64_t v66 = re::MaterialParameterBlock::copyCurrentStateAsMaterialParameterTable(v29, v11);
    unint64_t v67 = (void *)(*(uint64_t (**)(re::MeshAsset *, uint64_t, uint64_t))(*(void *)v11 + 32))(v11, 8, 8);
    *unint64_t v67 = v66;
    *(void *)&long long v139 = v67;
    *((void *)&v139 + 1) = 1;
    *(void *)&v154[8] = *((void *)v116[0] + 37);
    BOOL v68 = (int *)re::HashTable<unsigned long long,re::PeerAttributionContext *,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet(v98, (uint64_t *)v116);
    if (v68) {
      int v43 = *v68;
    }
    LODWORD(v155) = v43;
    int32x4_t v156 = (int32x4_t)v110[0];
    long long v157 = v110[1];
    uint64_t v158 = v129;
    (*(void (**)(re::MeshAsset **__return_ptr))(*(void *)v99 + 8))(&v104);
    if ((_BYTE)v104) {
      unint64_t v69 = v105;
    }
    else {
      unint64_t v69 = 0;
    }
    uint64_t v108 = 0;
    unint64_t v109 = v69;
    uint64_t v105 = 0;
    uint64_t v106 = 0;
    int v107 = 0;
    float32x4_t v104 = v11;
    re::DynamicArray<re::MeshScene>::setCapacity(&v104, 0);
    ++v107;
    unint64_t v70 = 0x94D049BB133111EBLL
        * ((0xBF58476D1CE4E5B9 * (v69 ^ (v69 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (v69 ^ (v69 >> 30))) >> 27));
    unint64_t v71 = v70 ^ (v70 >> 31);
    if ((void)v123)
    {
      unint64_t v72 = v71 % DWORD2(v124);
      uint64_t v73 = *(unsigned int *)(*((void *)&v123 + 1) + 4 * v72);
      if (v73 != 0x7FFFFFFF)
      {
        uint64_t v15 = v124;
        while (*(void *)(v124 + (v73 << 6) + 16) != v69)
        {
          uint64_t v73 = *(_DWORD *)(v124 + (v73 << 6) + 8) & 0x7FFFFFFF;
          if (v73 == 0x7FFFFFFF) {
            goto LABEL_37;
          }
        }
        goto LABEL_38;
      }
    }
    else
    {
      LODWORD(v72) = 0;
    }
LABEL_37:
    unsigned int v74 = re::HashTable<unsigned long long,re::MeshSceneCollection,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addAsMove((uint64_t)&v123, v72, v71, &v109, (uint64_t)&v104);
    ++HIDWORD(v126);
    uint64_t v15 = v124;
    uint64_t v73 = v74;
LABEL_38:
    long long v75 = (_anonymous_namespace_ *)(v15 + (v73 << 6) + 24);
    re::DynamicArray<re::MeshScene>::deinit((uint64_t)&v104);
    if (*(void *)v75) {
      re::DynamicArray<re::MeshScene>::add(v75, (long long *)&v127);
    }
    unint64_t v76 = v119;
    if (!(void)v119
      || (unint64_t v76 = v71 % DWORD2(v120), v77 = *(unsigned int *)(*((void *)&v119 + 1) + 4 * v76), v77 == 0x7FFFFFFF))
    {
LABEL_44:
      uint64_t v78 = v122;
      if (v122 == 0x7FFFFFFF)
      {
        uint64_t v78 = v121;
        unsigned int v79 = v121;
        if (v121 == DWORD2(v120))
        {
          re::HashTable<unsigned long long,re::ecs2::Scene const*,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::setCapacity((uint64_t)&v119, 2 * HIDWORD(v120));
          unsigned int v79 = v121;
          unint64_t v76 = v71 % DWORD2(v120);
        }
        unsigned int v121 = v79 + 1;
        uint64_t v80 = v120;
        int v81 = *(_DWORD *)(v120 + 32 * v78 + 8);
      }
      else
      {
        uint64_t v80 = v120;
        int v81 = *(_DWORD *)(v120 + 32 * v122 + 8);
        LODWORD(v122) = v81 & 0x7FFFFFFF;
      }
      uint64_t v82 = v80 + 32 * v78;
      *(_DWORD *)(v82 + 8) = v81 | 0x80000000;
      uint64_t v83 = *((void *)&v119 + 1);
      *(_DWORD *)(v82 + 8) = *(_DWORD *)(*((void *)&v119 + 1) + 4 * v76) | 0x80000000;
      *(void *)uint64_t v82 = v71;
      *(void *)(v82 + 16) = v69;
      *(void *)(v82 + 24) = v26;
      *(_DWORD *)(v83 + 4 * v76) = v78;
      ++HIDWORD(v120);
      ++HIDWORD(v122);
    }
    else
    {
      while (*(void *)(v120 + 32 * v77 + 16) != v69)
      {
        uint64_t v77 = *(_DWORD *)(v120 + 32 * v77 + 8) & 0x7FFFFFFF;
        if (v77 == 0x7FFFFFFF) {
          goto LABEL_44;
        }
      }
    }
    a5 = v97;
    if (v146[2])
    {
      if ((void)v144) {
        *(void *)&long long v144 = 0;
      }
      if (*((void *)&v143 + 1)) {
        (*(void (**)(void))(*(void *)v146[2] + 40))();
      }
    }
LABEL_55:
    re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::increment(&v117);
  }
  while (v117.i64[0] != a5 || v117.u16[4] != 0xFFFF || v117.u16[5] != 0xFFFF);
  unsigned int v14 = v125;
  if (v125)
  {
    uint64_t v16 = 0;
    uint64_t v86 = 8;
    while ((*(_DWORD *)(v15 + v86) & 0x80000000) == 0)
    {
      ++v16;
      v86 += 64;
      if (v125 == v16)
      {
        LODWORD(v16) = v125;
        break;
      }
    }
  }
  else
  {
    LODWORD(v16) = 0;
  }
LABEL_69:
  if (v14 != v16)
  {
    uint64_t v87 = v16;
    do
    {
      float32x4_t v88 = *(const re::ecs2::Scene **)(v15 + (v87 << 6) + 16);
      unint64_t v89 = 0x94D049BB133111EBLL
          * ((0xBF58476D1CE4E5B9 * ((unint64_t)v88 ^ ((unint64_t)v88 >> 30))) ^ ((0xBF58476D1CE4E5B9
                                                                                                * ((unint64_t)v88 ^ ((unint64_t)v88 >> 30))) >> 27));
      for (uint64_t i = *(unsigned int *)(*((void *)&v119 + 1) + 4 * ((v89 ^ (v89 >> 31)) % DWORD2(v120)));
            *(const re::ecs2::Scene **)(v120 + 32 * i + 16) != v88;
      re::ecs2::RenderingSubsystem::nonOwningStreamNameForWorldRoot(*(re::ecs2::RenderingSubsystem **)(v120 + 32 * i + 24), v88, v10, &v127);
      v111.i64[0] = (unint64_t)v127.i64[0] >> 1;
      uint64_t v91 = **(void **)(re::RenderFrameData::stream((re::RenderFrameData *)(v10 + 33), (const re::WeakStringID *)&v111)+ 48);
      (*(void (**)(void))(v91 + 536))();
      re::StringID::destroyString((re::StringID *)&v127);
      uint64_t v15 = v124;
      if (v125 <= (int)v16 + 1) {
        unsigned int v92 = v16 + 1;
      }
      else {
        unsigned int v92 = v125;
      }
      while (1)
      {
        uint64_t v87 = (v16 + 1);
        if (v92 - 1 == v16) {
          break;
        }
        LODWORD(v16) = v16 + 1;
        unsigned int v93 = v87;
        if ((*(_DWORD *)(v124 + (v87 << 6) + 8) & 0x80000000) != 0) {
          goto LABEL_81;
        }
      }
      unsigned int v93 = v92;
LABEL_81:
      LODWORD(v16) = v93;
    }
    while (v14 != v93);
  }
LABEL_82:
  BOOL v94 = *(_DWORD *)(a5 + 40) != 0;
  re::AssetHandle::~AssetHandle((re::AssetHandle *)v118);
  re::HashTable<void *,re::internal::AnimationCompositionChainBase *,re::Hash<void *>,re::EqualTo<void *>,true,false>::deinit((uint64_t *)&v119);
  re::HashTable<unsigned long long,re::MeshSceneCollection,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::deinit((uint64_t *)&v123);
  return v94;
}

__n128 re::MeshAsset::boundingBoxForModel@<Q0>(re::MeshAsset *this@<X0>, unint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = 416;
  if (!*((unsigned char *)this + 952)) {
    uint64_t v4 = 24;
  }
  if (*(void *)((char *)this + v4) <= a2)
  {
    re::internal::assertLog((re::internal *)4, a2, "assertion failure: '%s' (%s:line %i) ", "modelIndex < modelCount()", "boundingBoxForModel", 230);
    _os_crash();
    __break(1u);
LABEL_12:
    re::internal::assertLog((re::internal *)4, a2, "assertion failure: '%s' (%s:line %i) ", "meshManager != nullptr", "boundingBoxForModel", 233);
    _os_crash();
    __break(1u);
    goto LABEL_13;
  }
  if (!*((unsigned char *)this + 952))
  {
    if (*((void *)this + 3) > a2)
    {
      uint64_t v6 = *((void *)this + 5) + (a2 << 9) + 16;
      goto LABEL_10;
    }
LABEL_14:
    os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
    _os_log_send_and_compose_impl();
    _os_crash_msg();
    __break(1u);
  }
  uint64_t v5 = *((void *)this + 55);
  if (!v5) {
    goto LABEL_12;
  }
  if (*((void *)this + 52) <= a2)
  {
LABEL_13:
    os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
    _os_log_send_and_compose_impl();
    _os_crash_msg();
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v6 = re::DataArray<re::MeshModel>::get(v5 + 8, *(void *)(*((void *)this + 54) + 8 * a2)) + 16;
LABEL_10:
  __n128 result = *(__n128 *)v6;
  long long v8 = *(_OWORD *)(v6 + 16);
  *a3 = *(_OWORD *)v6;
  a3[1] = v8;
  return result;
}

re::ecs2::VisualProxySystem *re::ecs2::VisualProxySystem::VisualProxySystem(re::ecs2::VisualProxySystem *this)
{
  v11[1] = *MEMORY[0x263EF8340];
  re::ecs2::System::System((uint64_t)this, 1, 1);
  *(void *)(v2 + 152) = 0;
  *(_OWORD *)(v2 + 136) = 0u;
  *(_OWORD *)(v2 + 120) = 0u;
  *(_OWORD *)(v2 + 104) = 0u;
  *(void *)uint64_t v2 = &unk_26E6E4FD0;
  uint64_t v3 = v2 + 192;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 176) = 0u;
  *(void *)(v2 + 192) = &unk_26E6E4F90;
  *(void *)(v2 + 200) = v2;
  *(void *)(v2 + 216) = 0;
  *(void *)(v2 + 224) = 0;
  *(void *)(v2 + 208) = 0;
  uint64_t v10 = 1;
  v11[0] = re::ecs2::ComponentImpl<re::ecs2::WorldRootComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
  uint64_t v9 = v11;
  uint64_t v4 = re::FixedArray<re::ecs2::ComponentTypeBase const*>::operator=((_anonymous_namespace_ *)(v2 + 208), (uint64_t)&v9);
  *((void *)this + 30) = 0;
  *((void *)this + 29) = 0;
  *((_DWORD *)this + 62) = 1;
  *((void *)this + 33) = 0;
  *((void *)this + 34) = 0;
  *((void *)this + 32) = 0;
  *((_DWORD *)this + 70) = 0;
  *((_OWORD *)this + 18) = 0u;
  *((_OWORD *)this + 19) = 0u;
  *((_OWORD *)this + 20) = 0u;
  *((_OWORD *)this + 21) = 0u;
  *((_OWORD *)this + 22) = 0u;
  *((_DWORD *)this + 92) = 1;
  *((void *)this + 51) = 0;
  *(_OWORD *)((char *)this + 376) = 0u;
  *(_OWORD *)((char *)this + 392) = 0u;
  *((_DWORD *)this + 104) = 1;
  *(_OWORD *)((char *)this + 449) = 0u;
  *(_OWORD *)((char *)this + 424) = 0u;
  *(_OWORD *)((char *)this + 440) = 0u;
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)this + 44, 0);
  *((_DWORD *)this + 92) += 2;
  *((void *)this + 49) = 0;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)this + 50, 0);
  *((_DWORD *)this + 104) += 2;
  *((void *)this + 55) = 0;
  *((void *)this + 56) = this;
  *((void *)this + 57) = v3;
  *((unsigned char *)this + 464) = 1;
  LOWORD(v9) = 257;
  HIDWORD(v9) = 1023969417;
  LOBYTE(v10) = 0;
  re::ecs2::System::setTaskOptions(this, (uint64_t *)&v9);
  *((void *)this + 59) = 0;
  return this;
}

uint64_t re::ecs2::VisualProxySystem::willAddSystemToECSService(re::ecs2::VisualProxySystem *this)
{
  uint64_t result = re::ecs2::RenderingSubsystem::willAddSystemToECSService(this);
  uint64_t v4 = *((void *)this + 13);
  if (v4 && (*(unsigned char *)(v4 + 424) & 0x10) == 0) {
    return result;
  }
  uint64_t v5 = *((void *)this + 15);
  if (!v5)
  {
    re::internal::assertLog((re::internal *)4, v3, "assertion failure: '%s' (%s:line %i) ", "m_assetService", "willAddSystemToECSService", 246);
    _os_crash();
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v6 = *((void *)this + 14);
  if (!v6)
  {
LABEL_11:
    re::internal::assertLog((re::internal *)4, v3, "assertion failure: '%s' (%s:line %i) ", "m_renderManager", "willAddSystemToECSService", 247);
    uint64_t result = _os_crash();
    __break(1u);
    return result;
  }
  (*(void (**)(void *__return_ptr, void, const char *))(*(void *)v5 + 8))(v12, *((void *)this + 15), "engine:visualProxy.rematerialdefinition");
  re::MaterialAsset::makeMaterialMemoryAsset(v5, v6, (re::AssetHandle *)v12, 0, 0);
  long long v7 = *((_OWORD *)this + 10);
  *((_OWORD *)this + 10) = v13;
  long long v13 = v7;
  uint64_t v8 = *((void *)this + 22);
  *((void *)this + 22) = v14;
  uint64_t v14 = v8;
  re::AssetHandle::~AssetHandle((re::AssetHandle *)&v13);
  re::AssetHandle::~AssetHandle((re::AssetHandle *)v12);
  if (re::AssetHandle::loadedAsset<re::MaterialAsset>((re::ecs2::VisualProxySystem *)((char *)this + 160)))
  {
    *(void *)&long long v13 = *((void *)this + 14);
    re::make::shared::object<re::MaterialParameterBlock,re::RenderManager *&>((re *)&v13, &v11);
    uint64_t v9 = *((void *)this + 23);
    *((void *)this + 23) = v11;
    uint64_t v11 = (re::MaterialParameterBlock *)v9;
    if (v9) {
  }
    }
  uint64_t v10 = (*(uint64_t (**)(void))(**((void **)this + 5) + 32))(*((void *)this + 5));
  uint64_t result = re::ServiceLocator::serviceOrNull<re::ecs2::VisualProxyScopeService>(v10);
  *((void *)this + 59) = result;
  return result;
}

double re::ecs2::VisualProxySystem::willRemoveSystemFromECSService(re::ecs2::VisualProxySystem *this)
{
  long long v2 = *((_OWORD *)this + 10);
  uint64_t v3 = *((void *)this + 22);
  *((void *)this + 21) = 0;
  *((void *)this + 22) = 0;
  *((void *)this + 20) = 0;
  long long v6 = v2;
  uint64_t v7 = v3;
  re::AssetHandle::~AssetHandle((re::AssetHandle *)&v6);
  uint64_t v4 = *((void *)this + 23);
  if (v4)
  {

    *((void *)this + 23) = 0;
  }
  *((void *)this + 59) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *((void *)this + 19) = 0;
  return result;
}

void re::ecs2::VisualProxySystem::willAddSceneToECSService(re::ecs2::VisualProxySystem *this, re::ecs2::Scene *a2)
{
  uint64_t v67 = *MEMORY[0x263EF8340];
  uint64_t v4 = (char *)this + 232;
  v57[0] = (uint64_t)a2;
  uint64_t v5 = (re::ecs2::VisualProxySystem *)((char *)this + 352);
  unint64_t v6 = *((void *)this + 45);
  int v7 = *((_DWORD *)this + 92);
  if (v6 >= 0xB)
  {
    if (v7) {
      uint64_t v8 = (void *)((char *)this + 376);
    }
    else {
      uint64_t v8 = (void *)*((void *)this + 48);
    }
    uint64_t v10 = 8 * v6;
    while (!*v8)
    {
      ++v8;
      v10 -= 8;
      if (!v10) {
        goto LABEL_17;
      }
    }
    goto LABEL_16;
  }
  if (v7)
  {
    uint64_t v9 = (uint64_t *)((char *)this + 376);
    if (!v6) {
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v9 = (uint64_t *)*((void *)this + 48);
    if (!v6) {
      goto LABEL_17;
    }
  }
  uint64_t v11 = 0;
  uint64_t v12 = 8 * v6;
  do
  {
    uint64_t v13 = *v9++;
    v11 |= v13;
    v12 -= 8;
  }
  while (v12);
  if (v11)
  {
LABEL_16:
    *(void *)&long long v49 = re::DynamicBitset<unsigned long long,64ul>::findFirstBitSet((uint64_t)this + 352, 0);
    uint64_t v14 = re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::BlendShapeWeightsBufferComponent>,4ul>::operator[]((uint64_t)v4, v49);
    re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::init(v14, (uint64_t)v4, (uint64_t)a2);
    re::HashBrown<re::ecs2::Scene const*,unsigned long,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,void,false>::addNew((re::ecs2::VisualProxySystem *)((char *)this + 288), v57, (uint64_t *)&v49);
    re::DynamicBitset<unsigned long long,64ul>::clearBit((uint64_t)v5, v49);
    uint64_t v15 = (char *)this + 400;
    unint64_t v16 = v49;
    goto LABEL_49;
  }
LABEL_17:
  long long v56 = 0u;
  long long v49 = 0u;
  *(void *)&long long v50 = 0;
  *((void *)&v50 + 1) = -1;
  long long v51 = 0u;
  long long v52 = 0u;
  uint64_t v53 = 0;
  uint64_t v54 = 1;
  long long v55 = 0uLL;
  unint64_t v17 = *((void *)this + 34);
  *(void *)&long long v56 = 0;
  unint64_t v18 = *((void *)this + 30);
  DWORD2(v56) = 0;
  if (v17 + 1 > 4 * v18)
  {
    re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>,4ul>::setBucketsCapacity((void *)this + 29, (v17 + 4) >> 2);
    unint64_t v18 = *((void *)this + 30);
  }
  if (v18 <= v17 >> 2)
  {
    v57[1] = 0;
    memset(v66, 0, sizeof(v66));
    os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
    int v58 = 136315906;
    float32x4_t v59 = "operator[]";
    __int16 v60 = 1024;
    int v61 = 858;
    __int16 v62 = 2048;
    unint64_t v63 = v17 >> 2;
    __int16 v64 = 2048;
    unint64_t v65 = v18;
    _os_log_send_and_compose_impl();
    _os_crash_msg();
    __break(1u);
    goto LABEL_69;
  }
  if (*((unsigned char *)this + 248)) {
    uint64_t v19 = (char *)this + 256;
  }
  else {
    uint64_t v19 = (char *)*((void *)this + 33);
  }
  uint64_t v20 = *(void *)&v19[8 * (v17 >> 2)];
  ++*((void *)this + 34);
  ++*((_DWORD *)this + 70);
  uint64_t v21 = v20 + 112 * (v17 & 3);
  long long v22 = v49;
  long long v23 = v50;
  long long v24 = v51;
  *(void *)(v21 + 48) = v52;
  *(_OWORD *)(v21 + 16) = v23;
  *(_OWORD *)(v21 + 32) = v24;
  *(_OWORD *)uint64_t v21 = v22;
  re::BucketArray<RESubscriptionHandle,8ul>::BucketArray(v21 + 56, (uint64_t)&v52 + 8);
  re::ecs2::BasicComponentStateSceneData<re::ecs2::BlendShapeWeightsBufferComponent>::~BasicComponentStateSceneData(&v49);
  uint64_t v26 = *((void *)this + 34);
  if (!v26)
  {
LABEL_69:
    re::internal::assertLog((re::internal *)4, v25, "assertion failure: '%s' (%s:line %i) Array is empty", "m_size > 0", "last", 768);
    _os_crash();
    __break(1u);
  }
  uint64_t v27 = re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::BlendShapeWeightsBufferComponent>,4ul>::operator[]((uint64_t)v4, v26 - 1);
  re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::init(v27, (uint64_t)v4, v57[0]);
  *(void *)&v66[0] = *((void *)this + 34) - 1;
  re::HashBrown<re::ecs2::Scene const*,unsigned long,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,void,false>::addNew((re::ecs2::VisualProxySystem *)((char *)this + 288), v57, (uint64_t *)v66);
  unint64_t v28 = *((void *)this + 34);
  unint64_t v29 = *((void *)this + 49);
  if ((v28 & 0x3F) != 0) {
    unint64_t v30 = (v28 >> 6) + 1;
  }
  else {
    unint64_t v30 = v28 >> 6;
  }
  *((void *)this + 49) = v28;
  *(void *)&long long v49 = 0;
  re::DynamicOverflowArray<unsigned long long,2ul>::resize(v5, v30, &v49);
  if (v28 && v29 > v28)
  {
    uint64_t v31 = 63;
    uint64_t v32 = *((void *)this + 49) & 0x3FLL;
    if (v32 && v32 != 63) {
      uint64_t v31 = ~(-1 << v32);
    }
    if (*((unsigned char *)this + 368)) {
      unint64_t v33 = (char *)this + 376;
    }
    else {
      unint64_t v33 = (char *)*((void *)this + 48);
    }
    *(void *)&v33[8 * *((void *)this + 45) - 8] &= v31;
  }
  unint64_t v34 = *((void *)this + 34);
  unint64_t v35 = *((void *)this + 55);
  if ((v34 & 0x3F) != 0) {
    unint64_t v36 = (v34 >> 6) + 1;
  }
  else {
    unint64_t v36 = v34 >> 6;
  }
  *((void *)this + 55) = v34;
  *(void *)&long long v49 = 0;
  re::DynamicOverflowArray<unsigned long long,2ul>::resize((re::ecs2::VisualProxySystem *)((char *)this + 400), v36, &v49);
  if (v34 && v35 > v34)
  {
    uint64_t v37 = 63;
    uint64_t v38 = *((void *)this + 55) & 0x3FLL;
    if (v38 && v38 != 63) {
      uint64_t v37 = ~(-1 << v38);
    }
    if (*((unsigned char *)this + 416)) {
      long long v39 = (char *)this + 424;
    }
    else {
      long long v39 = (char *)*((void *)this + 54);
    }
    *(void *)&v39[8 * *((void *)this + 51) - 8] &= v37;
  }
  unint64_t v16 = *(void *)&v66[0];
  uint64_t v15 = (char *)this + 400;
LABEL_49:
  re::DynamicBitset<unsigned long long,256ul>::setBit((uint64_t)v15, v16);
  if (!*((unsigned char *)this + 464)) {
    return;
  }
  unint64_t v40 = *((void *)this + 51);
  int v41 = *((_DWORD *)this + 104);
  if (v40 >= 0xB)
  {
    if (v41) {
      uint64_t v42 = (void *)((char *)this + 424);
    }
    else {
      uint64_t v42 = (void *)*((void *)this + 54);
    }
    uint64_t v44 = 8 * v40;
    while (!*v42)
    {
      ++v42;
      v44 -= 8;
      if (!v44) {
        return;
      }
    }
LABEL_65:
    float v48 = (re::ecs2::System *)*((void *)this + 56);
    if (!*((unsigned char *)v48 + 86)) {
      re::ecs2::System::queueToRun(v48, 0.0);
    }
    return;
  }
  if (v41)
  {
    int v43 = (uint64_t *)((char *)this + 424);
    if (!v40) {
      return;
    }
  }
  else
  {
    int v43 = (uint64_t *)*((void *)this + 54);
    if (!v40) {
      return;
    }
  }
  uint64_t v45 = 0;
  uint64_t v46 = 8 * v40;
  do
  {
    uint64_t v47 = *v43++;
    v45 |= v47;
    v46 -= 8;
  }
  while (v46);
  if (v45) {
    goto LABEL_65;
  }
}

uint64_t re::ecs2::VisualProxySystem::willRemoveSceneFromECSService(re::ecs2::VisualProxySystem *this, re::ecs2::Scene *a2)
{
  unint64_t v16 = a2;
  uint64_t v3 = (uint64_t *)((char *)this + 288);
  uint64_t result = re::HashBrown<re::WeakStringID,re::IndexAndProtectionOptions,re::Hash<re::WeakStringID>,re::EqualTo<re::WeakStringID>,re::Hash<re::IndexAndProtectionOptions>,false>::find((void *)this + 36, &v16);
  if (result != -1)
  {
    uint64_t v5 = *((void *)this + 37) + 16 * result;
    re::DynamicBitset<unsigned long long,256ul>::setBit((uint64_t)this + 352, *(void *)(v5 + 8));
    re::DynamicBitset<unsigned long long,64ul>::clearBit((uint64_t)this + 400, *(void *)(v5 + 8));
    unint64_t v6 = (void *)re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::BlendShapeWeightsBufferComponent>,4ul>::operator[]((uint64_t)this + 232, *(void *)(v5 + 8));
    if (*v6)
    {
      int v7 = v6;
      void *v6 = 0;
      uint64_t v8 = v6 + 1;
      uint64_t v9 = *(void *)(v6[1] + 288);
      if (v9)
      {
        uint64_t v10 = v6[12];
        if (v10)
        {
          for (unint64_t i = 0; i != v10; ++i)
          {
            uint64_t v12 = re::BucketArray<RESubscriptionHandle,8ul>::operator[]((uint64_t)(v7 + 7), i);
            re::EventBus::unsubscribe(v9, *(void *)v12, *(void *)(v12 + 8));
          }
        }
      }
      re::BucketArray<RESubscriptionHandle,8ul>::deinit((uint64_t)(v7 + 7));
      uint64_t v13 = 0;
      uint64_t v14 = v7 + 3;
      do
      {
        uint64_t v15 = (re::ecs2::ComponentBucketsBase *)v7[2];
        if (*(void *)v15) {
          re::ecs2::ComponentBucketsBase::removeBucket(v15, v14[v13]);
        }
        v14[v13++] = -1;
      }
      while (v13 != 4);
      *uint64_t v8 = 0;
      v8[1] = 0;
    }
    return re::HashBrown<re::ecs2::Scene const*,unsigned long,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,void,false>::remove(v3, &v16);
  }
  return result;
}

void re::ecs2::VisualProxySystem::updateScenes(uint64_t a1, uint64_t **a2, uint64_t a3, uint64_t a4)
{
  v29[0] = a3;
  v29[1] = a4;
  uint64_t v5 = *(void *)(a1 + 104);
  if (!v5 || (*(unsigned char *)(v5 + 424) & 0x10) != 0)
  {
    if (!*(void *)(a1 + 120)) {
      goto LABEL_37;
    }
    if (*(void *)(a1 + 112))
    {
      unint64_t v6 = a2[1];
      if (v6)
      {
        int v7 = *a2;
        uint64_t v27 = (uint64_t *)(a1 + 424);
        uint64_t v28 = (uint64_t)&(*a2)[(void)v6];
        while (1)
        {
          if (!*v7)
          {
            re::internal::assertLog((re::internal *)4, (uint64_t)a2, "assertion failure: '%s' (%s:line %i) VisualProxySystem must be added to a scene and not to an ECSService directly.", "scene", "updateScenes", 291);
            _os_crash();
            __break(1u);
LABEL_37:
            re::internal::assertLog((re::internal *)4, (uint64_t)a2, "assertion failure: '%s' (%s:line %i) ", "m_assetService", "updateScenes", 286);
            _os_crash();
            __break(1u);
            goto LABEL_38;
          }
          uint64_t v30 = *v7;
          unint64_t v8 = *(void *)(*(void *)(a1 + 296)
                         + 16
                         * re::HashBrown<re::WeakStringID,re::IndexAndProtectionOptions,re::Hash<re::WeakStringID>,re::EqualTo<re::WeakStringID>,re::Hash<re::IndexAndProtectionOptions>,false>::find((void *)(a1 + 288), &v30)+ 8);
          re::DynamicBitset<unsigned long long,64ul>::clearBit(a1 + 400, v8);
          uint64_t v9 = (void *)re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::BlendShapeWeightsBufferComponent>,4ul>::operator[](a1 + 232, v8);
          uint64_t v10 = *(void *)(*v9 + 224);
          unint64_t v11 = v9[3];
          unint64_t v12 = re::BucketArray<re::Matrix4x4<float>,8ul>::operator[](v9[2] + 8, v11);
          if (*(_DWORD *)(v12 + 40)) {
            int v13 = (*(uint64_t (**)(uint64_t, void *, void *, unint64_t, unint64_t, void))(*(void *)v10 + 24))(v10, v29, v9, v11, v12, 0);
          }
          else {
            int v13 = 0;
          }
          unint64_t v14 = v9[5];
          unint64_t v15 = re::BucketArray<re::Matrix4x4<float>,8ul>::operator[](v9[2] + 8, v14);
          if (*(_DWORD *)(v15 + 40)) {
            v13 |= (*(uint64_t (**)(uint64_t, void *, void *, unint64_t, unint64_t, void))(*(void *)v10 + 32))(v10, v29, v9, v14, v15, 0);
          }
          unint64_t v16 = v9[6];
          unint64_t v17 = re::BucketArray<re::Matrix4x4<float>,8ul>::operator[](v9[2] + 8, v16);
          if (*(_DWORD *)(v17 + 40)) {
            break;
          }
          if (v13) {
            goto LABEL_15;
          }
LABEL_16:
          if (*(unsigned char *)(a1 + 464))
          {
            unint64_t v18 = *(void *)(a1 + 408);
            int v19 = *(_DWORD *)(a1 + 416);
            if (v18 < 0xB)
            {
              long long v22 = v27;
              if ((v19 & 1) == 0) {
                long long v22 = *(uint64_t **)(a1 + 432);
              }
              if (!v18) {
                goto LABEL_34;
              }
              uint64_t v23 = 0;
              uint64_t v24 = 8 * v18;
              do
              {
                uint64_t v25 = *v22++;
                v23 |= v25;
                v24 -= 8;
              }
              while (v24);
              if (!v23) {
                goto LABEL_34;
              }
            }
            else
            {
              uint64_t v20 = v27;
              if ((v19 & 1) == 0) {
                uint64_t v20 = *(uint64_t **)(a1 + 432);
              }
              uint64_t v21 = 8 * v18;
              while (!*v20)
              {
                ++v20;
                v21 -= 8;
                if (!v21) {
                  goto LABEL_34;
                }
              }
            }
            uint64_t v26 = *(re::ecs2::System **)(a1 + 448);
            if (!*((unsigned char *)v26 + 86)) {
              re::ecs2::System::queueToRun(v26, 0.0);
            }
          }
LABEL_34:
          if (++v7 == (uint64_t *)v28) {
            return;
          }
        }
        if (((v13 | (*(unsigned int (**)(uint64_t, void *, void *, unint64_t, unint64_t, void))(*(void *)v10 + 40))(v10, v29, v9, v16, v17, 0)) & 1) == 0)goto LABEL_16; {
LABEL_15:
        }
        re::DynamicBitset<unsigned long long,256ul>::setBit(a1 + 400, v8);
        goto LABEL_16;
      }
    }
    else
    {
LABEL_38:
      re::internal::assertLog((re::internal *)4, (uint64_t)a2, "assertion failure: '%s' (%s:line %i) ", "m_renderManager", "updateScenes", 287);
      _os_crash();
      __break(1u);
    }
  }
}

uint64_t re::ecs2::BasicComponentStateImpl<re::ecs2::VisualProxyComponent>::dependsOnComponents()
{
  return 0;
}

unint64_t re::ecs2::BasicComponentStateImpl<re::ecs2::VisualProxyComponent>::didDependentComponentChange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t result = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(a3 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
  if (result)
  {
    uint64_t v5 = (re::ecs2::Component *)result;
    uint64_t v6 = 24;
    unint64_t v7 = 0xFFFFFFFFLL;
    do
    {
      unint64_t v8 = re::ecs2::ComponentBucketsBase::componentHandle(*(re::ecs2::ComponentBucketsBase **)(a2 + 16), *(void *)(a2 + v6), v5);
      if (v8 != -1 && (v9 & 0xFFFFFF00000000) != 0)
      {
        unint64_t v11 = v8;
        unint64_t v7 = v9;
        goto LABEL_11;
      }
      v6 += 8;
    }
    while (v6 != 56);
    unint64_t v11 = -1;
LABEL_11:
    return re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::setComponentState(a2, v11, v7);
  }
  return result;
}

void re::ecs2::VisualProxySystem::~VisualProxySystem(re::ecs2::VisualProxySystem *this)
{
  re::ecs2::BasicComponentStates<re::ecs2::BlendShapeWeightsBufferComponent>::~BasicComponentStates((void *)this + 29);
  *((void *)this + 24) = &unk_26E6E4F90;
  re::FixedArray<CoreIKTransform>::deinit((uint64_t *)this + 26);
  uint64_t v2 = *((void *)this + 23);
  if (v2)
  {

    *((void *)this + 23) = 0;
  }
  re::AssetHandle::~AssetHandle((re::ecs2::VisualProxySystem *)((char *)this + 160));
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t v2;
  uint64_t vars8;

  re::ecs2::BasicComponentStates<re::ecs2::BlendShapeWeightsBufferComponent>::~BasicComponentStates((void *)this + 29);
  *((void *)this + 24) = &unk_26E6E4F90;
  re::FixedArray<CoreIKTransform>::deinit((uint64_t *)this + 26);
  uint64_t v2 = *((void *)this + 23);
  if (v2)
  {

    *((void *)this + 23) = 0;
  }
  re::AssetHandle::~AssetHandle((re::ecs2::VisualProxySystem *)((char *)this + 160));
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::VisualProxySystem::typeInfo(re::ecs2::VisualProxySystem *this)
{
  return re::internal::getOrCreateInfo((re::internal *)"VisualProxySystem", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_VisualProxySystem, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_VisualProxySystem, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::VisualProxySystem>, 0);
}

void re::ecs2::VisualProxyComponent::~VisualProxyComponent(id *this)
{
  if (*((unsigned char *)this + 56))
  {
    objc_destroyWeak(this + 8);
    this[8] = 0;
  }
  re::TextureHandle::invalidate((re::TextureHandle *)(this + 4));
  *this = &unk_26E6DECE0;
  objc_destructInstance(this + 1);
}

{
  uint64_t vars8;

  if (*((unsigned char *)this + 56))
  {
    objc_destroyWeak(this + 8);
    this[8] = 0;
  }
  re::TextureHandle::invalidate((re::TextureHandle *)(this + 4));
  *this = &unk_26E6DECE0;
  objc_destructInstance(this + 1);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::VisualProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::VisualProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::VisualProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::VisualProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::VisualProxyFilterComponent::~VisualProxyFilterComponent(re::ecs2::VisualProxyFilterComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::VisualProxyFilterComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyFilterComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::VisualProxyFilterComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::VisualProxyFilterComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::VisualProxyFilterComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

id re::internal::defaultRetain<re::ecs2::VisualProxySystem>(void)::{lambda(void *)#1}::__invoke(uint64_t a1)
{
  return (id)(a1 + 8);
}

void re::internal::defaultRelease<re::ecs2::VisualProxySystem>(void)::{lambda(void *)#1}::__invoke(uint64_t a1)
{
}

double re::HashTable<unsigned long long,re::MeshSceneCollection,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::deinit(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2)
  {
    unint64_t v3 = *((unsigned int *)a1 + 8);
    if (v3)
    {
      uint64_t v4 = 0;
      for (unint64_t i = 0; i < v3; ++i)
      {
        uint64_t v6 = a1[2] + v4;
        int v7 = *(_DWORD *)(v6 + 8);
        if (v7 < 0)
        {
          *(_DWORD *)(v6 + 8) = v7 & 0x7FFFFFFF;
          re::DynamicArray<re::MeshScene>::deinit(v6 + 24);
          unint64_t v3 = *((unsigned int *)a1 + 8);
        }
        v4 += 64;
      }
      uint64_t v2 = *a1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)v2 + 40))(v2, a1[1]);
    *((_DWORD *)a1 + 8) = 0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
    *(void *)&double result = 0x7FFFFFFFLL;
    *(uint64_t *)((char *)a1 + 36) = 0x7FFFFFFFLL;
  }
  return result;
}

uint64_t re::MeshBoundingBoxes::MeshBoundingBoxes(uint64_t a1, uint64_t a2, const void **a3, int a4)
{
  uint64_t v4 = a3;
  uint64_t v5 = a2;
  uint64_t v6 = a1;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  if (!a4) {
    goto LABEL_10;
  }
  unint64_t v7 = (unint64_t)a3[1];
  if (!v7)
  {
    size_t v13 = 0;
    unint64_t v9 = 0;
LABEL_9:
    memcpy(v9, *v4, v13);
    unint64_t v14 = v4[1];
    v16[0] = v9;
    v16[1] = v14;
    a3 = (const void **)v16;
    a1 = v6;
    a2 = v5;
LABEL_10:
    re::MeshBoundingBoxes::init(a1, a2, a3);
    return v6;
  }
  if (!(v7 >> 59))
  {
    uint64_t v8 = (*(uint64_t (**)(uint64_t, unint64_t, void))(*(void *)a2 + 32))(a2, (32 * v7) | 0x1F, 0);
    unint64_t v9 = (_OWORD *)((v8 + 31) & 0xFFFFFFFFFFFFFFF0);
    *((void *)v9 - 2) = v7;
    *((void *)v9 - 1) = v8;
    uint64_t v10 = v9 + 1;
    int32x4_t v11 = vdupq_n_s32(0x7F800000u);
    *(void *)&long long v12 = 0x7F0000007FLL;
    *((void *)&v12 + 1) = 0x7F0000007FLL;
    do
    {
      *(v10 - 1) = v11;
      *uint64_t v10 = v12;
      v10 += 2;
      --v7;
    }
    while (v7);
    size_t v13 = 32 * (void)v4[1];
    goto LABEL_9;
  }
  re::internal::assertLog((re::internal *)6, a2, "assertion failure: '%s' (%s:line %i) Size overflow in allocateArray. Element size = %zu, count = %zu", "!overflow", "allocateArray", 61, 32, v7);
  uint64_t result = _os_crash();
  __break(1u);
  return result;
}

uint64_t re::HashTable<unsigned long long,re::MeshSceneCollection,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addAsMove(uint64_t a1, unsigned int a2, unint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v9 = *(unsigned int *)(a1 + 36);
  if (v9 == 0x7FFFFFFF)
  {
    uint64_t v9 = *(unsigned int *)(a1 + 32);
    int v10 = v9;
    if (v9 == *(_DWORD *)(a1 + 24))
    {
      int v11 = *(_DWORD *)(a1 + 28);
      signed int v12 = 2 * v11;
      uint64_t v13 = *(void *)a1;
      if (*(void *)a1)
      {
        if (v12) {
          BOOL v14 = v9 == v12;
        }
        else {
          BOOL v14 = 1;
        }
        if (!v14 && (v11 & 0x80000000) == 0)
        {
          memset(v29, 0, 36);
          *(void *)&v29[36] = 0x7FFFFFFFLL;
          re::HashTable<unsigned long long,re::Function<void ()(void)>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::init((uint64_t)v29, v13, v12);
          long long v15 = *(_OWORD *)v29;
          *(_OWORD *)unint64_t v29 = *(_OWORD *)a1;
          *(_OWORD *)a1 = v15;
          uint64_t v16 = *(void *)&v29[16];
          uint64_t v17 = *(void *)(a1 + 16);
          *(void *)&v29[16] = v17;
          *(void *)(a1 + 16) = v16;
          long long v19 = *(_OWORD *)&v29[24];
          *(_OWORD *)&v29[24] = *(_OWORD *)(a1 + 24);
          unsigned int v18 = *(_DWORD *)&v29[32];
          *(_OWORD *)(a1 + 24) = v19;
          uint64_t v20 = v18;
          if (v18)
          {
            uint64_t v21 = v17 + 16;
            do
            {
              if ((*(_DWORD *)(v21 - 8) & 0x80000000) != 0) {
                re::HashTable<unsigned long long,re::MeshSceneCollection,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addAsMove(a1, *(void *)(v21 - 16) % (unint64_t)*(unsigned int *)(a1 + 24), *(void *)(v21 - 16), v21, v21 + 8);
              }
              v21 += 64;
              --v20;
            }
            while (v20);
          }
          re::HashTable<unsigned long long,re::MeshSceneCollection,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::deinit((uint64_t *)v29);
        }
      }
      else
      {
        if (v12) {
          signed int v24 = 2 * v11;
        }
        else {
          signed int v24 = 3;
        }
      }
      a2 = a3 % *(unsigned int *)(a1 + 24);
      int v10 = *(_DWORD *)(a1 + 32);
    }
    *(_DWORD *)(a1 + 32) = v10 + 1;
    uint64_t v22 = *(void *)(a1 + 16);
    int v23 = *(_DWORD *)(v22 + (v9 << 6) + 8);
  }
  else
  {
    uint64_t v22 = *(void *)(a1 + 16);
    int v23 = *(_DWORD *)(v22 + (v9 << 6) + 8);
    *(_DWORD *)(a1 + 36) = v23 & 0x7FFFFFFF;
  }
  *(_DWORD *)(v22 + (v9 << 6) + 8) = v23 | 0x80000000;
  *(_DWORD *)(*(void *)(a1 + 16) + (v9 << 6) + 8) = *(_DWORD *)(*(void *)(a1 + 16) + (v9 << 6) + 8) & 0x80000000 | *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2);
  *(void *)(*(void *)(a1 + 16) + (v9 << 6)) = a3;
  *(void *)(*(void *)(a1 + 16) + (v9 << 6) + 16) = *a4;
  uint64_t v25 = *(void *)(a1 + 16) + (v9 << 6);
  *(void *)(v25 + 56) = 0;
  *(_DWORD *)(v25 + 48) = 0;
  *(void *)(v25 + 32) = 0;
  *(void *)(v25 + 40) = 0;
  *(void *)(v25 + 24) = 0;
  *(void *)(v25 + 24) = *(void *)a5;
  *(void *)a5 = 0;
  *(void *)(v25 + 32) = *(void *)(a5 + 8);
  *(void *)(a5 + 8) = 0;
  uint64_t v26 = *(void *)(v25 + 40);
  *(void *)(v25 + 40) = *(void *)(a5 + 16);
  *(void *)(a5 + 16) = v26;
  uint64_t v27 = *(void *)(v25 + 56);
  *(void *)(v25 + 56) = *(void *)(a5 + 32);
  *(void *)(a5 + 32) = v27;
  ++*(_DWORD *)(a5 + 24);
  ++*(_DWORD *)(v25 + 48);
  *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2) = v9;
  ++*(_DWORD *)(a1 + 28);
  return v9;
}

void re::HashTable<unsigned long long,re::ecs2::Scene const*,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::setCapacity(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = *(void *)a1;
  if (*(void *)a1)
  {
    if (a2 && *(_DWORD *)(a1 + 24) != a2 && *(_DWORD *)(a1 + 28) <= a2)
    {
      memset(v22, 0, 36);
      *(void *)&v22[36] = 0x7FFFFFFFLL;
      re::HashTable<re::StringID,unsigned int,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::init((uint64_t)v22, v4, a2);
      long long v5 = *(_OWORD *)a1;
      *(void *)a1 = *(void *)v22;
      uint64_t v6 = *(void *)(a1 + 16);
      long long v7 = *(_OWORD *)&v22[8];
      *(_OWORD *)uint64_t v22 = v5;
      *(void *)&unsigned char v22[16] = v6;
      *(_OWORD *)(a1 + 8) = v7;
      long long v9 = *(_OWORD *)&v22[24];
      *(_OWORD *)&v22[24] = *(_OWORD *)(a1 + 24);
      unsigned int v8 = *(_DWORD *)&v22[32];
      *(_OWORD *)(a1 + 24) = v9;
      uint64_t v10 = v8;
      if (v8)
      {
        int v11 = DWORD1(v9);
        uint64_t v12 = v7;
        uint64_t v13 = (void *)(v6 + 16);
        do
        {
          if ((*(_DWORD *)(v13 - 1) & 0x80000000) != 0)
          {
            unint64_t v14 = *(v13 - 2);
            unint64_t v15 = *(unsigned int *)(a1 + 24);
            unint64_t v16 = v14 % v15;
            uint64_t v17 = *(unsigned int *)(a1 + 36);
            if (v17 == 0x7FFFFFFF)
            {
              uint64_t v17 = *(unsigned int *)(a1 + 32);
              int v18 = v17;
              if (v17 == v15)
              {
                re::HashTable<unsigned long long,re::ecs2::Scene const*,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::setCapacity(a1, (2 * v11));
                unint64_t v16 = v14 % *(unsigned int *)(a1 + 24);
                int v18 = *(_DWORD *)(a1 + 32);
                uint64_t v12 = *(void *)(a1 + 8);
              }
              *(_DWORD *)(a1 + 32) = v18 + 1;
              uint64_t v19 = *(void *)(a1 + 16);
              int v20 = *(_DWORD *)(v19 + 32 * v17 + 8);
            }
            else
            {
              uint64_t v19 = *(void *)(a1 + 16);
              int v20 = *(_DWORD *)(v19 + 32 * v17 + 8);
              *(_DWORD *)(a1 + 36) = v20 & 0x7FFFFFFF;
            }
            *(_DWORD *)(v19 + 32 * v17 + 8) = v20 | 0x80000000;
            *(_DWORD *)(*(void *)(a1 + 16) + 32 * v17 + 8) = *(_DWORD *)(*(void *)(a1 + 16) + 32 * v17 + 8) & 0x80000000 | *(_DWORD *)(v12 + 4 * v16);
            *(void *)(*(void *)(a1 + 16) + 32 * v17) = v14;
            *(void *)(*(void *)(a1 + 16) + 32 * v17 + 16) = *v13;
            *(void *)(*(void *)(a1 + 16) + 32 * v17 + 24) = v13[1];
            uint64_t v12 = *(void *)(a1 + 8);
            *(_DWORD *)(v12 + 4 * v16) = v17;
            int v11 = *(_DWORD *)(a1 + 28) + 1;
            *(_DWORD *)(a1 + 28) = v11;
          }
          v13 += 4;
          --v10;
        }
        while (v10);
      }
      re::HashTable<void *,re::internal::AnimationCompositionChainBase *,re::Hash<void *>,re::EqualTo<void *>,true,false>::deinit((uint64_t *)v22);
    }
  }
  else
  {
    if (a2) {
      signed int v21 = a2;
    }
    else {
      signed int v21 = 3;
    }
  }
}

uint64_t re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>,4ul>::init(uint64_t a1, uint64_t a2, unint64_t a3)
{
  *(void *)a1 = a2;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)a1, a3);
  *(_DWORD *)(a1 + 16) += 2;
  *(void *)(a1 + 40) = 0;
  uint64_t result = re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>,4ul>::setBucketsCapacity(a1, a3);
  ++*(_DWORD *)(a1 + 48);
  return result;
}

void *re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>,4ul>::setBucketsCapacity(void *result, unint64_t a2)
{
  unint64_t v3 = result;
  if (*result)
  {
    if (result[5] < 4 * a2)
    {
      while (1)
      {
        unint64_t v4 = v3[1];
        if (v4 <= a2) {
          break;
        }
        uint64_t result = (void *)re::BucketArray<re::CollisionCastHit,10ul>::freeElementBucket(v3);
      }
      if (v4 < a2)
      {
        long long v5 = v3 + 3;
        do
        {
          uint64_t result = (void *)(*(uint64_t (**)(void, uint64_t, void))(*(void *)*v3 + 32))(*v3, 448, 0);
          uint64_t v6 = result;
          if (*v3)
          {
            unint64_t v7 = v3[1];
            int v8 = *((_DWORD *)v3 + 4);
            if ((v8 & 1) == 0)
            {
              unint64_t v9 = *v5;
              BOOL v11 = v7 >= *v5;
              unint64_t v10 = v7 + 1;
              BOOL v11 = !v11 || v9 >= v10;
              if (v11) {
                goto LABEL_24;
              }
              unint64_t v12 = 2 * v9;
              goto LABEL_20;
            }
            unint64_t v10 = v7 + 1;
            if (v10 >= 3)
            {
              unint64_t v12 = 4;
LABEL_20:
              if (v12 <= v10) {
                unint64_t v14 = v10;
              }
              else {
                unint64_t v14 = v12;
              }
              uint64_t result = re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity(v3, v14);
              int v8 = *((_DWORD *)v3 + 4);
            }
          }
          else
          {
            unint64_t v13 = v3[1] + 1;
            uint64_t result = re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity(v3, v13);
            int v8 = *((_DWORD *)v3 + 4) + 2;
            *((_DWORD *)v3 + 4) = v8;
          }
LABEL_24:
          unint64_t v15 = v3 + 3;
          if ((v8 & 1) == 0) {
            unint64_t v15 = (void *)v3[4];
          }
          unint64_t v16 = v3[1];
          v15[v16++] = v6;
          v3[1] = v16;
          *((_DWORD *)v3 + 4) += 2;
        }
        while (v16 < a2);
      }
    }
  }
  else
  {
  }
  return result;
}

uint64_t *re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::init(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v84 = *MEMORY[0x263EF8340];
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = re::ecs2::SceneComponentTable::get((re::ecs2::SceneComponentTable *)(a3 + 200), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)+ 480;
  for (uint64_t i = 24; i != 56; i += 8)
  {
    unint64_t v7 = (_anonymous_namespace_ *)re::ecs2::ComponentBucketsBase::addBucket(*(re::ecs2::ComponentBucketsBase **)(a1 + 16));
    *(void *)(a1 + i) = v7;
  }
  unint64_t v9 = *(re::EventBus **)(a3 + 288);
  if (v9)
  {
    uint64_t v82 = re::globalAllocators((re *)result)[2];
    unint64_t v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v82 + 32))(v82, 32, 0);
    *unint64_t v10 = &unk_26E6E5088;
    v10[1] = a1;
    v10[2] = re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::componentChangedHandler<REComponentDidChangeEvent>;
    v10[3] = 0;
    uint64_t v83 = v10;
    uint64_t v11 = re::EventBus::subscribe<re::ecs2::Entity,REComponentDidChangeEvent>(v9, (uint64_t)v81, (uint64_t)re::ecs2::ComponentImpl<re::ecs2::VisualProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType, 0);
    uint64_t v13 = v12;
    unint64_t v14 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(a1 + 56);
    *unint64_t v14 = v11;
    v14[1] = v13;
    unint64_t v15 = (re *)re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidChangeEvent const&)>::destroyCallable((uint64_t)v81);
    uint64_t v79 = re::globalAllocators(v15)[2];
    unint64_t v16 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v79 + 32))(v79, 32, 0);
    *unint64_t v16 = &unk_26E6E50E0;
    v16[1] = a1;
    void v16[2] = re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::componentChangedHandler<REComponentDidActivateEvent>;
    void v16[3] = 0;
    uint64_t v80 = v16;
    uint64_t v17 = re::EventBus::subscribe<re::ecs2::Entity,REComponentDidActivateEvent>(v9, (uint64_t)v78, (uint64_t)re::ecs2::ComponentImpl<re::ecs2::VisualProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType, 0);
    uint64_t v19 = v18;
    int v20 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(a1 + 56);
    *int v20 = v17;
    v20[1] = v19;
    signed int v21 = (re *)re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidActivateEvent const&)>::destroyCallable((uint64_t)v78);
    uint64_t v76 = re::globalAllocators(v21)[2];
    uint64_t v22 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v76 + 32))(v76, 32, 0);
    *uint64_t v22 = &unk_26E6E5138;
    v22[1] = a1;
    v22[2] = re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::componentChangedHandler<REComponentWillDeactivateEvent>;
    v22[3] = 0;
    uint64_t v77 = v22;
    uint64_t v23 = re::EventBus::subscribe<re::ecs2::Entity,REComponentWillDeactivateEvent>(v9, (uint64_t)v75, (uint64_t)re::ecs2::ComponentImpl<re::ecs2::VisualProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType, 0);
    uint64_t v25 = v24;
    uint64_t v26 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(a1 + 56);
    *uint64_t v26 = v23;
    v26[1] = v25;
    uint64_t v27 = (re *)re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentWillDeactivateEvent const&)>::destroyCallable((uint64_t)v75);
    uint64_t v73 = re::globalAllocators(v27)[2];
    uint64_t v28 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v73 + 32))(v73, 32, 0);
    *uint64_t v28 = &unk_26E6E5190;
    v28[1] = a1;
    __n128 v28[2] = re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::componentChangedHandler<REComponentDidAddEvent>;
    v28[3] = 0;
    unsigned int v74 = v28;
    uint64_t v29 = re::EventBus::subscribe<re::ecs2::Entity,REComponentDidAddEvent>(v9, (uint64_t)v72, (uint64_t)re::ecs2::ComponentImpl<re::ecs2::VisualProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType, 0);
    uint64_t v31 = v30;
    uint64_t v32 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(a1 + 56);
    *uint64_t v32 = v29;
    v32[1] = v31;
    re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidAddEvent const&)>::destroyCallable((uint64_t)v72);
    uint64_t result = (uint64_t *)(***(uint64_t (****)(void))(a2 + 224))();
    if (v33)
    {
      unint64_t v34 = result;
      uint64_t v35 = 8 * v33;
      do
      {
        uint64_t v36 = *v34++;
        uint64_t v70 = re::globalAllocators((re *)result)[2];
        unint64_t v71 = 0;
        uint64_t v37 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v70 + 32))(v70, 32, 0);
        *uint64_t v37 = &unk_26E6E5088;
        v37[1] = a1;
        uint64_t v37[2] = re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::dependentComponentChangedHandler<REComponentDidChangeEvent>;
        v37[3] = 0;
        unint64_t v71 = v37;
        uint64_t v38 = re::EventBus::subscribe<re::ecs2::Entity,REComponentDidChangeEvent>(v9, (uint64_t)v69, v36, 0);
        uint64_t v40 = v39;
        int v41 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(a1 + 56);
        *int v41 = v38;
        v41[1] = v40;
        uint64_t v42 = (re *)re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidChangeEvent const&)>::destroyCallable((uint64_t)v69);
        uint64_t v67 = re::globalAllocators(v42)[2];
        BOOL v68 = 0;
        int v43 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v67 + 32))(v67, 32, 0);
        *int v43 = &unk_26E6E50E0;
        v43[1] = a1;
        v43[2] = re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::dependentComponentChangedHandler<REComponentDidActivateEvent>;
        v43[3] = 0;
        BOOL v68 = v43;
        uint64_t v44 = re::EventBus::subscribe<re::ecs2::Entity,REComponentDidActivateEvent>(v9, (uint64_t)v66, v36, 0);
        uint64_t v46 = v45;
        uint64_t v47 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(a1 + 56);
        *uint64_t v47 = v44;
        v47[1] = v46;
        float v48 = (re *)re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidActivateEvent const&)>::destroyCallable((uint64_t)v66);
        uint64_t v64 = re::globalAllocators(v48)[2];
        unint64_t v65 = 0;
        long long v49 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v64 + 32))(v64, 32, 0);
        void *v49 = &unk_26E6E5138;
        v49[1] = a1;
        v49[2] = re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::dependentComponentChangedHandler<REComponentWillDeactivateEvent>;
        v49[3] = 0;
        unint64_t v65 = v49;
        uint64_t v50 = re::EventBus::subscribe<re::ecs2::Entity,REComponentWillDeactivateEvent>(v9, (uint64_t)v63, v36, 0);
        uint64_t v52 = v51;
        uint64_t v53 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(a1 + 56);
        void *v53 = v50;
        v53[1] = v52;
        uint64_t v54 = (re *)re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentWillDeactivateEvent const&)>::destroyCallable((uint64_t)v63);
        uint64_t v61 = re::globalAllocators(v54)[2];
        __int16 v62 = 0;
        long long v55 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v61 + 32))(v61, 32, 0);
        *long long v55 = &unk_26E6E5190;
        v55[1] = a1;
        v55[2] = re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::dependentComponentChangedHandler<REComponentDidAddEvent>;
        v55[3] = 0;
        __int16 v62 = v55;
        uint64_t v56 = re::EventBus::subscribe<re::ecs2::Entity,REComponentDidAddEvent>(v9, (uint64_t)v60, v36, 0);
        uint64_t v58 = v57;
        float32x4_t v59 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(a1 + 56);
        void *v59 = v56;
        v59[1] = v58;
        uint64_t result = (uint64_t *)re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidAddEvent const&)>::destroyCallable((uint64_t)v60);
        v35 -= 8;
      }
      while (v35);
    }
  }
  return result;
}

uint64_t re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::componentChangedHandler<REComponentDidChangeEvent>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v24 = *(void *)(a1 + 8);
  uint64_t v5 = re::HashBrown<re::WeakStringID,re::IndexAndProtectionOptions,re::Hash<re::WeakStringID>,re::EqualTo<re::WeakStringID>,re::Hash<re::IndexAndProtectionOptions>,false>::find((void *)(v4 + 56), &v24);
  if (v5 == -1) {
    goto LABEL_20;
  }
  re::DynamicBitset<unsigned long long,256ul>::setBit(v4 + 168, *(void *)(*(void *)(v4 + 64) + 16 * v5 + 8));
  if (!*(unsigned char *)(v4 + 232)) {
    goto LABEL_20;
  }
  unint64_t v6 = *(void *)(v4 + 176);
  int v7 = *(_DWORD *)(v4 + 184);
  if (v6 >= 0xB)
  {
    if (v7) {
      int v8 = (void *)(v4 + 192);
    }
    else {
      int v8 = *(void **)(v4 + 200);
    }
    uint64_t v10 = 8 * v6;
    while (!*v8)
    {
      ++v8;
      v10 -= 8;
      if (!v10) {
        goto LABEL_20;
      }
    }
LABEL_18:
    unint64_t v14 = *(re::ecs2::System **)(v4 + 216);
    if (!*((unsigned char *)v14 + 86)) {
      re::ecs2::System::queueToRun(v14, 0.0);
    }
    goto LABEL_20;
  }
  if (v7)
  {
    unint64_t v9 = (uint64_t *)(v4 + 192);
    if (!v6) {
      goto LABEL_20;
    }
  }
  else
  {
    unint64_t v9 = *(uint64_t **)(v4 + 200);
    if (!v6) {
      goto LABEL_20;
    }
  }
  uint64_t v11 = 0;
  uint64_t v12 = 8 * v6;
  do
  {
    uint64_t v13 = *v9++;
    v11 |= v13;
    v12 -= 8;
  }
  while (v12);
  if (v11) {
    goto LABEL_18;
  }
LABEL_20:
  uint64_t v15 = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(a2 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
  if (v15)
  {
    unint64_t v16 = (re::ecs2::Component *)v15;
    for (uint64_t i = 24; i != 56; i += 8)
    {
      unint64_t v18 = re::ecs2::ComponentBucketsBase::componentHandle(*(re::ecs2::ComponentBucketsBase **)(a1 + 16), *(void *)(a1 + i), v16);
      if (v18 != -1 && (v19 & 0xFFFFFF00000000) != 0)
      {
        re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::setComponentState(a1, v18, v19);
        return 0;
      }
    }
    unint64_t v21 = re::ecs2::ComponentBucketsBase::addComponent(*(re::ecs2::ComponentBucketsBase **)(a1 + 16), *(void *)(a1 + 24), v16);
    (*(void (**)(void, uint64_t, unint64_t, uint64_t))(**(void **)(*(void *)a1 + 224) + 16))(*(void *)(*(void *)a1 + 224), a1, v21, v22);
  }
  return 0;
}

uint64_t re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::componentChangedHandler<REComponentDidActivateEvent>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v24 = *(void *)(a1 + 8);
  uint64_t v5 = re::HashBrown<re::WeakStringID,re::IndexAndProtectionOptions,re::Hash<re::WeakStringID>,re::EqualTo<re::WeakStringID>,re::Hash<re::IndexAndProtectionOptions>,false>::find((void *)(v4 + 56), &v24);
  if (v5 == -1) {
    goto LABEL_20;
  }
  re::DynamicBitset<unsigned long long,256ul>::setBit(v4 + 168, *(void *)(*(void *)(v4 + 64) + 16 * v5 + 8));
  if (!*(unsigned char *)(v4 + 232)) {
    goto LABEL_20;
  }
  unint64_t v6 = *(void *)(v4 + 176);
  int v7 = *(_DWORD *)(v4 + 184);
  if (v6 >= 0xB)
  {
    if (v7) {
      int v8 = (void *)(v4 + 192);
    }
    else {
      int v8 = *(void **)(v4 + 200);
    }
    uint64_t v10 = 8 * v6;
    while (!*v8)
    {
      ++v8;
      v10 -= 8;
      if (!v10) {
        goto LABEL_20;
      }
    }
LABEL_18:
    unint64_t v14 = *(re::ecs2::System **)(v4 + 216);
    if (!*((unsigned char *)v14 + 86)) {
      re::ecs2::System::queueToRun(v14, 0.0);
    }
    goto LABEL_20;
  }
  if (v7)
  {
    unint64_t v9 = (uint64_t *)(v4 + 192);
    if (!v6) {
      goto LABEL_20;
    }
  }
  else
  {
    unint64_t v9 = *(uint64_t **)(v4 + 200);
    if (!v6) {
      goto LABEL_20;
    }
  }
  uint64_t v11 = 0;
  uint64_t v12 = 8 * v6;
  do
  {
    uint64_t v13 = *v9++;
    v11 |= v13;
    v12 -= 8;
  }
  while (v12);
  if (v11) {
    goto LABEL_18;
  }
LABEL_20:
  uint64_t v15 = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(a2 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
  if (v15)
  {
    unint64_t v16 = (re::ecs2::Component *)v15;
    for (uint64_t i = 24; i != 56; i += 8)
    {
      unint64_t v18 = re::ecs2::ComponentBucketsBase::componentHandle(*(re::ecs2::ComponentBucketsBase **)(a1 + 16), *(void *)(a1 + i), v16);
      if (v18 != -1 && (v19 & 0xFFFFFF00000000) != 0)
      {
        re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::setComponentState(a1, v18, v19);
        return 0;
      }
    }
    unint64_t v21 = re::ecs2::ComponentBucketsBase::addComponent(*(re::ecs2::ComponentBucketsBase **)(a1 + 16), *(void *)(a1 + 24), v16);
    (*(void (**)(void, uint64_t, unint64_t, uint64_t))(**(void **)(*(void *)a1 + 224) + 16))(*(void *)(*(void *)a1 + 224), a1, v21, v22);
  }
  return 0;
}

uint64_t re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::componentChangedHandler<REComponentWillDeactivateEvent>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v24 = *(void *)(a1 + 8);
  uint64_t v5 = re::HashBrown<re::WeakStringID,re::IndexAndProtectionOptions,re::Hash<re::WeakStringID>,re::EqualTo<re::WeakStringID>,re::Hash<re::IndexAndProtectionOptions>,false>::find((void *)(v4 + 56), &v24);
  if (v5 == -1) {
    goto LABEL_20;
  }
  re::DynamicBitset<unsigned long long,256ul>::setBit(v4 + 168, *(void *)(*(void *)(v4 + 64) + 16 * v5 + 8));
  if (!*(unsigned char *)(v4 + 232)) {
    goto LABEL_20;
  }
  unint64_t v6 = *(void *)(v4 + 176);
  int v7 = *(_DWORD *)(v4 + 184);
  if (v6 >= 0xB)
  {
    if (v7) {
      int v8 = (void *)(v4 + 192);
    }
    else {
      int v8 = *(void **)(v4 + 200);
    }
    uint64_t v10 = 8 * v6;
    while (!*v8)
    {
      ++v8;
      v10 -= 8;
      if (!v10) {
        goto LABEL_20;
      }
    }
LABEL_18:
    unint64_t v14 = *(re::ecs2::System **)(v4 + 216);
    if (!*((unsigned char *)v14 + 86)) {
      re::ecs2::System::queueToRun(v14, 0.0);
    }
    goto LABEL_20;
  }
  if (v7)
  {
    unint64_t v9 = (uint64_t *)(v4 + 192);
    if (!v6) {
      goto LABEL_20;
    }
  }
  else
  {
    unint64_t v9 = *(uint64_t **)(v4 + 200);
    if (!v6) {
      goto LABEL_20;
    }
  }
  uint64_t v11 = 0;
  uint64_t v12 = 8 * v6;
  do
  {
    uint64_t v13 = *v9++;
    v11 |= v13;
    v12 -= 8;
  }
  while (v12);
  if (v11) {
    goto LABEL_18;
  }
LABEL_20:
  uint64_t v15 = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(a2 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
  if (v15)
  {
    unint64_t v16 = (re::ecs2::Component *)v15;
    for (uint64_t i = 24; i != 56; i += 8)
    {
      unint64_t v18 = re::ecs2::ComponentBucketsBase::componentHandle(*(re::ecs2::ComponentBucketsBase **)(a1 + 16), *(void *)(a1 + i), v16);
      if (v18 != -1 && (v19 & 0xFFFFFF00000000) != 0)
      {
        re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::setComponentState(a1, v18, v19);
        return 0;
      }
    }
    unint64_t v21 = re::ecs2::ComponentBucketsBase::addComponent(*(re::ecs2::ComponentBucketsBase **)(a1 + 16), *(void *)(a1 + 24), v16);
    (*(void (**)(void, uint64_t, unint64_t, uint64_t))(**(void **)(*(void *)a1 + 224) + 16))(*(void *)(*(void *)a1 + 224), a1, v21, v22);
  }
  return 0;
}

uint64_t re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::componentChangedHandler<REComponentDidAddEvent>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v24 = *(void *)(a1 + 8);
  uint64_t v5 = re::HashBrown<re::WeakStringID,re::IndexAndProtectionOptions,re::Hash<re::WeakStringID>,re::EqualTo<re::WeakStringID>,re::Hash<re::IndexAndProtectionOptions>,false>::find((void *)(v4 + 56), &v24);
  if (v5 == -1) {
    goto LABEL_20;
  }
  re::DynamicBitset<unsigned long long,256ul>::setBit(v4 + 168, *(void *)(*(void *)(v4 + 64) + 16 * v5 + 8));
  if (!*(unsigned char *)(v4 + 232)) {
    goto LABEL_20;
  }
  unint64_t v6 = *(void *)(v4 + 176);
  int v7 = *(_DWORD *)(v4 + 184);
  if (v6 >= 0xB)
  {
    if (v7) {
      int v8 = (void *)(v4 + 192);
    }
    else {
      int v8 = *(void **)(v4 + 200);
    }
    uint64_t v10 = 8 * v6;
    while (!*v8)
    {
      ++v8;
      v10 -= 8;
      if (!v10) {
        goto LABEL_20;
      }
    }
LABEL_18:
    unint64_t v14 = *(re::ecs2::System **)(v4 + 216);
    if (!*((unsigned char *)v14 + 86)) {
      re::ecs2::System::queueToRun(v14, 0.0);
    }
    goto LABEL_20;
  }
  if (v7)
  {
    unint64_t v9 = (uint64_t *)(v4 + 192);
    if (!v6) {
      goto LABEL_20;
    }
  }
  else
  {
    unint64_t v9 = *(uint64_t **)(v4 + 200);
    if (!v6) {
      goto LABEL_20;
    }
  }
  uint64_t v11 = 0;
  uint64_t v12 = 8 * v6;
  do
  {
    uint64_t v13 = *v9++;
    v11 |= v13;
    v12 -= 8;
  }
  while (v12);
  if (v11) {
    goto LABEL_18;
  }
LABEL_20:
  uint64_t v15 = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(a2 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
  if (v15)
  {
    unint64_t v16 = (re::ecs2::Component *)v15;
    for (uint64_t i = 24; i != 56; i += 8)
    {
      unint64_t v18 = re::ecs2::ComponentBucketsBase::componentHandle(*(re::ecs2::ComponentBucketsBase **)(a1 + 16), *(void *)(a1 + i), v16);
      if (v18 != -1 && (v19 & 0xFFFFFF00000000) != 0)
      {
        re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::setComponentState(a1, v18, v19);
        return 0;
      }
    }
    unint64_t v21 = re::ecs2::ComponentBucketsBase::addComponent(*(re::ecs2::ComponentBucketsBase **)(a1 + 16), *(void *)(a1 + 24), v16);
    (*(void (**)(void, uint64_t, unint64_t, uint64_t))(**(void **)(*(void *)a1 + 224) + 16))(*(void *)(*(void *)a1 + 224), a1, v21, v22);
  }
  return 0;
}

uint64_t re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::dependentComponentChangedHandler<REComponentDidChangeEvent>(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  uint64_t v18 = a1[1];
  uint64_t v7 = re::HashBrown<re::WeakStringID,re::IndexAndProtectionOptions,re::Hash<re::WeakStringID>,re::EqualTo<re::WeakStringID>,re::Hash<re::IndexAndProtectionOptions>,false>::find((void *)(v6 + 56), &v18);
  if (v7 == -1) {
    goto LABEL_20;
  }
  re::DynamicBitset<unsigned long long,256ul>::setBit(v6 + 168, *(void *)(*(void *)(v6 + 64) + 16 * v7 + 8));
  if (!*(unsigned char *)(v6 + 232)) {
    goto LABEL_20;
  }
  unint64_t v8 = *(void *)(v6 + 176);
  int v9 = *(_DWORD *)(v6 + 184);
  if (v8 >= 0xB)
  {
    if (v9) {
      uint64_t v10 = (void *)(v6 + 192);
    }
    else {
      uint64_t v10 = *(void **)(v6 + 200);
    }
    uint64_t v12 = 8 * v8;
    while (!*v10)
    {
      ++v10;
      v12 -= 8;
      if (!v12) {
        goto LABEL_20;
      }
    }
LABEL_18:
    unint64_t v16 = *(re::ecs2::System **)(v6 + 216);
    if (!*((unsigned char *)v16 + 86)) {
      re::ecs2::System::queueToRun(v16, 0.0);
    }
    goto LABEL_20;
  }
  if (v9)
  {
    uint64_t v11 = (uint64_t *)(v6 + 192);
    if (!v8) {
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v11 = *(uint64_t **)(v6 + 200);
    if (!v8) {
      goto LABEL_20;
    }
  }
  uint64_t v13 = 0;
  uint64_t v14 = 8 * v8;
  do
  {
    uint64_t v15 = *v11++;
    v13 |= v15;
    v14 -= 8;
  }
  while (v14);
  if (v13) {
    goto LABEL_18;
  }
LABEL_20:
  (*(void (**)(void, void *, uint64_t, void))(**(void **)(*a1 + 224) + 8))(*(void *)(*a1 + 224), a1, a2, *(void *)(a3 + 8));
  return 0;
}

uint64_t re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::dependentComponentChangedHandler<REComponentDidActivateEvent>(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  uint64_t v18 = a1[1];
  uint64_t v7 = re::HashBrown<re::WeakStringID,re::IndexAndProtectionOptions,re::Hash<re::WeakStringID>,re::EqualTo<re::WeakStringID>,re::Hash<re::IndexAndProtectionOptions>,false>::find((void *)(v6 + 56), &v18);
  if (v7 == -1) {
    goto LABEL_20;
  }
  re::DynamicBitset<unsigned long long,256ul>::setBit(v6 + 168, *(void *)(*(void *)(v6 + 64) + 16 * v7 + 8));
  if (!*(unsigned char *)(v6 + 232)) {
    goto LABEL_20;
  }
  unint64_t v8 = *(void *)(v6 + 176);
  int v9 = *(_DWORD *)(v6 + 184);
  if (v8 >= 0xB)
  {
    if (v9) {
      uint64_t v10 = (void *)(v6 + 192);
    }
    else {
      uint64_t v10 = *(void **)(v6 + 200);
    }
    uint64_t v12 = 8 * v8;
    while (!*v10)
    {
      ++v10;
      v12 -= 8;
      if (!v12) {
        goto LABEL_20;
      }
    }
LABEL_18:
    unint64_t v16 = *(re::ecs2::System **)(v6 + 216);
    if (!*((unsigned char *)v16 + 86)) {
      re::ecs2::System::queueToRun(v16, 0.0);
    }
    goto LABEL_20;
  }
  if (v9)
  {
    uint64_t v11 = (uint64_t *)(v6 + 192);
    if (!v8) {
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v11 = *(uint64_t **)(v6 + 200);
    if (!v8) {
      goto LABEL_20;
    }
  }
  uint64_t v13 = 0;
  uint64_t v14 = 8 * v8;
  do
  {
    uint64_t v15 = *v11++;
    v13 |= v15;
    v14 -= 8;
  }
  while (v14);
  if (v13) {
    goto LABEL_18;
  }
LABEL_20:
  (*(void (**)(void, void *, uint64_t, void))(**(void **)(*a1 + 224) + 8))(*(void *)(*a1 + 224), a1, a2, *(void *)(a3 + 8));
  return 0;
}

uint64_t re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::dependentComponentChangedHandler<REComponentWillDeactivateEvent>(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  uint64_t v18 = a1[1];
  uint64_t v7 = re::HashBrown<re::WeakStringID,re::IndexAndProtectionOptions,re::Hash<re::WeakStringID>,re::EqualTo<re::WeakStringID>,re::Hash<re::IndexAndProtectionOptions>,false>::find((void *)(v6 + 56), &v18);
  if (v7 == -1) {
    goto LABEL_20;
  }
  re::DynamicBitset<unsigned long long,256ul>::setBit(v6 + 168, *(void *)(*(void *)(v6 + 64) + 16 * v7 + 8));
  if (!*(unsigned char *)(v6 + 232)) {
    goto LABEL_20;
  }
  unint64_t v8 = *(void *)(v6 + 176);
  int v9 = *(_DWORD *)(v6 + 184);
  if (v8 >= 0xB)
  {
    if (v9) {
      uint64_t v10 = (void *)(v6 + 192);
    }
    else {
      uint64_t v10 = *(void **)(v6 + 200);
    }
    uint64_t v12 = 8 * v8;
    while (!*v10)
    {
      ++v10;
      v12 -= 8;
      if (!v12) {
        goto LABEL_20;
      }
    }
LABEL_18:
    unint64_t v16 = *(re::ecs2::System **)(v6 + 216);
    if (!*((unsigned char *)v16 + 86)) {
      re::ecs2::System::queueToRun(v16, 0.0);
    }
    goto LABEL_20;
  }
  if (v9)
  {
    uint64_t v11 = (uint64_t *)(v6 + 192);
    if (!v8) {
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v11 = *(uint64_t **)(v6 + 200);
    if (!v8) {
      goto LABEL_20;
    }
  }
  uint64_t v13 = 0;
  uint64_t v14 = 8 * v8;
  do
  {
    uint64_t v15 = *v11++;
    v13 |= v15;
    v14 -= 8;
  }
  while (v14);
  if (v13) {
    goto LABEL_18;
  }
LABEL_20:
  (*(void (**)(void, void *, uint64_t, void))(**(void **)(*a1 + 224) + 8))(*(void *)(*a1 + 224), a1, a2, *(void *)(a3 + 8));
  return 0;
}

uint64_t re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::dependentComponentChangedHandler<REComponentDidAddEvent>(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  uint64_t v18 = a1[1];
  uint64_t v7 = re::HashBrown<re::WeakStringID,re::IndexAndProtectionOptions,re::Hash<re::WeakStringID>,re::EqualTo<re::WeakStringID>,re::Hash<re::IndexAndProtectionOptions>,false>::find((void *)(v6 + 56), &v18);
  if (v7 == -1) {
    goto LABEL_20;
  }
  re::DynamicBitset<unsigned long long,256ul>::setBit(v6 + 168, *(void *)(*(void *)(v6 + 64) + 16 * v7 + 8));
  if (!*(unsigned char *)(v6 + 232)) {
    goto LABEL_20;
  }
  unint64_t v8 = *(void *)(v6 + 176);
  int v9 = *(_DWORD *)(v6 + 184);
  if (v8 >= 0xB)
  {
    if (v9) {
      uint64_t v10 = (void *)(v6 + 192);
    }
    else {
      uint64_t v10 = *(void **)(v6 + 200);
    }
    uint64_t v12 = 8 * v8;
    while (!*v10)
    {
      ++v10;
      v12 -= 8;
      if (!v12) {
        goto LABEL_20;
      }
    }
LABEL_18:
    unint64_t v16 = *(re::ecs2::System **)(v6 + 216);
    if (!*((unsigned char *)v16 + 86)) {
      re::ecs2::System::queueToRun(v16, 0.0);
    }
    goto LABEL_20;
  }
  if (v9)
  {
    uint64_t v11 = (uint64_t *)(v6 + 192);
    if (!v8) {
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v11 = *(uint64_t **)(v6 + 200);
    if (!v8) {
      goto LABEL_20;
    }
  }
  uint64_t v13 = 0;
  uint64_t v14 = 8 * v8;
  do
  {
    uint64_t v15 = *v11++;
    v13 |= v15;
    v14 -= 8;
  }
  while (v14);
  if (v13) {
    goto LABEL_18;
  }
LABEL_20:
  (*(void (**)(void, void *, uint64_t, void))(**(void **)(*a1 + 224) + 8))(*(void *)(*a1 + 224), a1, a2, *(void *)(a3 + 8));
  return 0;
}

void re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::*)(re::ecs2::Entity *,REComponentDidChangeEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidChangeEvent const&)>::~CallableMemFn()
{
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::*)(re::ecs2::Entity *,REComponentDidChangeEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidChangeEvent const&)>::operator()(void *a1, void *a2)
{
  uint64_t v2 = (uint64_t (*)(void *, void))a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = (void *)(a1[1] + (v3 >> 1));
  if (v3) {
    uint64_t v2 = *(uint64_t (**)(void *, void))(*v4 + v2);
  }
  return v2(v4, *a2);
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::*)(re::ecs2::Entity *,REComponentDidChangeEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidChangeEvent const&)>::cloneInto(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26E6E5088;
  long long v2 = *(_OWORD *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(_OWORD *)(a2 + 8) = v2;
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::*)(re::ecs2::Entity *,REComponentDidChangeEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidChangeEvent const&)>::moveInto(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)a2 = &unk_26E6E5088;
  *(void *)(a2 + 8) = v2;
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::*)(re::ecs2::Entity *,REComponentDidChangeEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidChangeEvent const&)>::size()
{
  return 32;
}

void re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::*)(re::ecs2::Entity *,REComponentDidActivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidActivateEvent const&)>::~CallableMemFn()
{
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::*)(re::ecs2::Entity *,REComponentDidActivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidActivateEvent const&)>::operator()(void *a1, void *a2)
{
  uint64_t v2 = (uint64_t (*)(void *, void))a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = (void *)(a1[1] + (v3 >> 1));
  if (v3) {
    uint64_t v2 = *(uint64_t (**)(void *, void))(*v4 + v2);
  }
  return v2(v4, *a2);
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::*)(re::ecs2::Entity *,REComponentDidActivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidActivateEvent const&)>::cloneInto(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26E6E50E0;
  long long v2 = *(_OWORD *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(_OWORD *)(a2 + 8) = v2;
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::*)(re::ecs2::Entity *,REComponentDidActivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidActivateEvent const&)>::moveInto(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)a2 = &unk_26E6E50E0;
  *(void *)(a2 + 8) = v2;
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::*)(re::ecs2::Entity *,REComponentDidActivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidActivateEvent const&)>::size()
{
  return 32;
}

void re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::*)(re::ecs2::Entity *,REComponentWillDeactivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentWillDeactivateEvent const&)>::~CallableMemFn()
{
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::*)(re::ecs2::Entity *,REComponentWillDeactivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentWillDeactivateEvent const&)>::operator()(void *a1, void *a2)
{
  uint64_t v2 = (uint64_t (*)(void *, void))a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = (void *)(a1[1] + (v3 >> 1));
  if (v3) {
    uint64_t v2 = *(uint64_t (**)(void *, void))(*v4 + v2);
  }
  return v2(v4, *a2);
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::*)(re::ecs2::Entity *,REComponentWillDeactivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentWillDeactivateEvent const&)>::cloneInto(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26E6E5138;
  long long v2 = *(_OWORD *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(_OWORD *)(a2 + 8) = v2;
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::*)(re::ecs2::Entity *,REComponentWillDeactivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentWillDeactivateEvent const&)>::moveInto(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)a2 = &unk_26E6E5138;
  *(void *)(a2 + 8) = v2;
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::*)(re::ecs2::Entity *,REComponentWillDeactivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentWillDeactivateEvent const&)>::size()
{
  return 32;
}

void re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::*)(re::ecs2::Entity *,REComponentDidAddEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidAddEvent const&)>::~CallableMemFn()
{
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::*)(re::ecs2::Entity *,REComponentDidAddEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidAddEvent const&)>::operator()(void *a1, void *a2)
{
  uint64_t v2 = (uint64_t (*)(void *, void))a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = (void *)(a1[1] + (v3 >> 1));
  if (v3) {
    uint64_t v2 = *(uint64_t (**)(void *, void))(*v4 + v2);
  }
  return v2(v4, *a2);
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::*)(re::ecs2::Entity *,REComponentDidAddEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidAddEvent const&)>::cloneInto(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26E6E5190;
  long long v2 = *(_OWORD *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(_OWORD *)(a2 + 8) = v2;
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::*)(re::ecs2::Entity *,REComponentDidAddEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidAddEvent const&)>::moveInto(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)a2 = &unk_26E6E5190;
  *(void *)(a2 + 8) = v2;
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::VisualProxyComponent>::*)(re::ecs2::Entity *,REComponentDidAddEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidAddEvent const&)>::size()
{
  return 32;
}

re::Constraint *re::ecs2::PhysicsRuntimeJointFactory::createRuntimeJoint(re::ecs2::PhysicsRuntimeJointFactory *this, const re::ecs2::PhysicsJointDefinition *a2, re::PhysicsSimulation *a3, re::ecs2::Scene *a4)
{
  uint64_t v37 = *MEMORY[0x263EF8340];
  uint64_t v7 = re::ecs2::EntityHandle::resolve((uint64_t)this + 16, (char *)a3);
  unint64_t v8 = v7;
  if (v7) {
    int v9 = (const char *)*((void *)v7 + 35);
  }
  else {
    int v9 = "null";
  }
  uint64_t v10 = re::ecs2::EntityHandle::resolve((uint64_t)this + 96, (char *)a3);
  uint64_t v11 = v10;
  if (v10) {
    uint64_t v12 = (const char *)*((void *)v10 + 35);
  }
  else {
    uint64_t v12 = "null";
  }
  uint64_t v29 = 0;
  float32x4_t v26 = 0uLL;
  uint64_t v27 = 0;
  uint64_t v28 = 0x3F80000000000000;
  uint64_t v25 = 0;
  float32x4_t v22 = 0uLL;
  uint64_t v23 = 0;
  uint64_t v24 = 0x3F80000000000000;
  int DataToCreateRuntimeJoint = re::ecs2::PhysicsJointDefinition::getDataToCreateRuntimeJoint((uint64_t)this, (uint64_t)a2, (uint64_t)a3, 0, &v29, &v26, &v25, &v22);
  uint64_t v14 = 0;
  if (!DataToCreateRuntimeJoint)
  {
    switch(*(_DWORD *)this)
    {
      case 1:
        uint64_t v14 = (re::Constraint *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, float32x4_t *, re *, float32x4_t *, void))(*(void *)re::PhysicsFactory::m_defaultFactory + 56))(re::PhysicsFactory::m_defaultFactory, re::PhysicsFactory::m_defaultAllocator, v29, &v26, v25, &v22, 0);
        goto LABEL_22;
      case 2:
        unint64_t v16 = (float *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, float32x4_t *, re *, float32x4_t *, void))(*(void *)re::PhysicsFactory::m_defaultFactory + 72))(re::PhysicsFactory::m_defaultFactory, re::PhysicsFactory::m_defaultAllocator, v29, &v26, v25, &v22, *((unsigned __int8 *)this + 176));
        uint64_t v14 = (re::Constraint *)v16;
        float v17 = *((float *)this + 54);
        float v18 = *((float *)this + 56);
        if (v17 > 3.1416) {
          float v17 = 3.1416;
        }
        if (v17 < -1.0) {
          float v17 = -1.0;
        }
        if (v18 > 3.1416) {
          float v18 = 3.1416;
        }
        if (v18 < -1.0) {
          float v18 = -1.0;
        }
        v16[14] = v17;
        v16[15] = v18;
        (*(void (**)(float *))(*(void *)v16 + 56))(v16);
        goto LABEL_27;
      case 3:
        uint64_t v14 = (re::Constraint *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, float32x4_t *, re *, float32x4_t *, void))(*(void *)re::PhysicsFactory::m_defaultFactory + 48))(re::PhysicsFactory::m_defaultFactory, re::PhysicsFactory::m_defaultAllocator, v29, &v26, v25, &v22, *((unsigned __int8 *)this + 176));
        LODWORD(v19) = *((_DWORD *)this + 51);
        re::HingeJoint::setAngularLimit((uint64_t)v14, v19, *((float *)this + 52));
LABEL_22:
        if (!v14) {
          return v14;
        }
        goto LABEL_27;
      case 4:
        uint64_t v14 = (re::Constraint *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, float32x4_t *, re *, float32x4_t *, void))(*(void *)re::PhysicsFactory::m_defaultFactory + 64))(re::PhysicsFactory::m_defaultFactory, re::PhysicsFactory::m_defaultAllocator, v29, &v26, v25, &v22, *((unsigned __int8 *)this + 176));
        *((void *)v14 + 7) = *(void *)((char *)this + 180);
        (*(void (**)(re::Constraint *))(*(void *)v14 + 56))(v14);
        goto LABEL_27;
      case 5:
        uint64_t v14 = (re::Constraint *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, float32x4_t *, re *, float32x4_t *, void))(*(void *)re::PhysicsFactory::m_defaultFactory + 80))(re::PhysicsFactory::m_defaultFactory, re::PhysicsFactory::m_defaultAllocator, v29, &v26, v25, &v22, *((unsigned __int8 *)this + 176));
        *(void *)int32x4_t buf = *(void *)((char *)this + 180);
        re::DistanceJoint::setDistanceRange((uint64_t)v14, (uint64_t *)buf);
        *((float *)v14 + 16) = fmaxf(*((float *)this + 57), 0.0);
        (*(void (**)(re::Constraint *))(*(void *)v14 + 64))(v14);
        goto LABEL_27;
      case 6:
        uint64_t v14 = (re::Constraint *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, float32x4_t *, re *, float32x4_t *, void))(*(void *)re::PhysicsFactory::m_defaultFactory + 88))(re::PhysicsFactory::m_defaultFactory, re::PhysicsFactory::m_defaultAllocator, v29, &v26, v25, &v22, *((unsigned __int8 *)this + 176));
        *((void *)v14 + 7) = *(void *)((char *)this + 180);
        (*(void (**)(re::Constraint *))(*(void *)v14 + 56))(v14);
        *((void *)v14 + 8) = *(void *)((char *)this + 188);
        (*(void (**)(re::Constraint *))(*(void *)v14 + 56))(v14);
        *((void *)v14 + 9) = *(void *)((char *)this + 196);
        (*(void (**)(re::Constraint *))(*(void *)v14 + 56))(v14);
        *((void *)v14 + 10) = *(void *)((char *)this + 204);
        (*(void (**)(re::Constraint *))(*(void *)v14 + 56))(v14);
        *((void *)v14 + 11) = *(void *)((char *)this + 212);
        (*(void (**)(re::Constraint *))(*(void *)v14 + 56))(v14);
        *((void *)v14 + 12) = *(void *)((char *)this + 220);
        (*(void (**)(re::Constraint *))(*(void *)v14 + 56))(v14);
LABEL_27:
        re::PhysicsJointCollection::add((const re::ecs2::PhysicsJointDefinition *)((char *)a2 + 136), v14);
        unint64_t v21 = *re::physicsLogObjects(v20);
        if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)int32x4_t buf = 136315906;
          *(void *)&buf[4] = v9;
          __int16 v31 = 2048;
          uint64_t v32 = v8;
          __int16 v33 = 2080;
          unint64_t v34 = v12;
          __int16 v35 = 2048;
          uint64_t v36 = v11;
          _os_log_impl(&dword_233120000, v21, OS_LOG_TYPE_DEFAULT, "PhysicsRuntimeJointFactory::createRuntimeJoint(): Runtime joint created, Entity %s (%p), Entity %s (%p)", buf, 0x2Au);
        }
        break;
      default:
        uint64_t v14 = 0;
        break;
    }
  }
  return v14;
}

void *re::allocInfo_PeerVideoStreamingService(re *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&_MergedGlobals_158, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&_MergedGlobals_158))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF817E0, "PeerVideoStreamingService");
    __cxa_guard_release(&_MergedGlobals_158);
  }
  return &unk_26AF817E0;
}

void re::initInfo_PeerVideoStreamingService(re *this, re::IntrospectionBase *a2)
{
  v5[0] = 0xDE22D8C2CFA78C58;
  v5[1] = "PeerVideoStreamingService";
  re::StringID::destroyString((re::StringID *)v5);
  *((_OWORD *)this + 2) = v6;
  *((void *)this + 2) = 0x800000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 0;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 8) = &re::initInfo_PeerVideoStreamingService(re::IntrospectionBase *)::structureAttributes;
  re::IntrospectionRegistry::add(this, v3);
  long long v4 = v6;
}

uint64_t re::introspect_PeerVideoStreamingService(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"PeerVideoStreamingService", (uint64_t (*)(re::internal *))re::allocInfo_PeerVideoStreamingService, (re::IntrospectionBase *(*)(void))re::initInfo_PeerVideoStreamingService, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::PeerVideoStreamingService>, this);
}

unint64_t re::PeerVideoStreamId::hash(re::PeerVideoStreamId *this)
{
  unint64_t v1 = 0xBF58476D1CE4E5B9 * (*(void *)this ^ (*(void *)this >> 30));
  unint64_t v2 = (0x94D049BB133111EBLL * (v1 ^ (v1 >> 27))) ^ ((0x94D049BB133111EBLL * (v1 ^ (v1 >> 27))) >> 31);
  unint64_t v3 = 0xBF58476D1CE4E5B9 * (*((void *)this + 1) ^ (*((void *)this + 1) >> 30));
  return (((0x94D049BB133111EBLL * (v3 ^ (v3 >> 27))) ^ ((0x94D049BB133111EBLL * (v3 ^ (v3 >> 27))) >> 31))
        + (v2 << 6)
        + (v2 >> 2)
        - 0x61C8864680B583E9) ^ v2;
}

void re::PeerVideoStreamHandle::~PeerVideoStreamHandle(re::PeerVideoStreamHandle *this)
{
  *(void *)this = &unk_26E6E52F8;
  uint64_t v2 = *((void *)this + 5);
  if (v2)
  {
    (*(void (**)(uint64_t, void, void))(*(void *)v2 + 104))(v2, *((void *)this + 3), *((void *)this + 4));
    *((void *)this + 5) = 0;
  }
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  re::PeerVideoStreamHandle::~PeerVideoStreamHandle(this);
  JUMPOUT(0x237DBCBD0);
}

uint64_t *re::remoteEffectsLogObjects(re *this)
{
  {
    re::remoteEffectsLogObjects(void)::logObjects = (uint64_t)os_log_create("com.apple.re", "RemoteEffects");
  }
  return &re::remoteEffectsLogObjects(void)::logObjects;
}

void *re::ecs2::allocInfo_MeshSceneComponent(re::ecs2 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81860, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF81860))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF81948, "MeshSceneComponent");
    __cxa_guard_release(&qword_26AF81860);
  }
  return &unk_26AF81948;
}

void re::ecs2::initInfo_MeshSceneComponent(re::ecs2 *this, re::IntrospectionBase *a2)
{
  v18[0] = 0xD072249390F27A7CLL;
  v18[1] = "MeshSceneComponent";
  re::StringID::destroyString((re::StringID *)v18);
  *((_OWORD *)this + 2) = v19;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81868, memory_order_acquire) & 1) == 0)
  {
    long long v4 = (re *)__cxa_guard_acquire(&qword_26AF81868);
    if (v4)
    {
      uint64_t v5 = re::introspectionAllocator(v4);
      uint64_t v6 = re::ecs2::introspect_Component((re::IntrospectionBase **)1);
      uint64_t v7 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v5 + 32))(v5, 72, 8);
      *(_DWORD *)uint64_t v7 = 1;
      *(void *)(v7 + 8) = "Component";
      *(void *)(v7 + 16) = v6;
      *(void *)(v7 + 24) = 0;
      *(void *)(v7 + 32) = 0;
      *(_DWORD *)(v7 + 40) = 3;
      *(void *)(v7 + 48) = 0;
      *(void *)(v7 + 56) = 0;
      *(_DWORD *)(v7 + 64) = 0;
      qword_26AF81888 = v7;
      unint64_t v8 = re::introspectionAllocator((re *)v7);
      re::IntrospectionInfo<re::HashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>>::get((uint64_t)v8, v9);
      uint64_t v10 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v8 + 32))(v8, 72, 8);
      *(_DWORD *)uint64_t v10 = 1;
      *(void *)(v10 + 8) = "instanceNames";
      *(void *)(v10 + 16) = &qword_26AF818A8;
      *(void *)(v10 + 24) = 0;
      *(void *)(v10 + 32) = 0x2000000001;
      *(_DWORD *)(v10 + 40) = 0;
      *(void *)(v10 + 48) = 0;
      *(void *)(v10 + 56) = 0;
      *(_DWORD *)(v10 + 64) = 0;
      qword_26AF81890 = v10;
      uint64_t v11 = re::introspectionAllocator((re *)v10);
      re::IntrospectionInfo<re::HashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>>::get((uint64_t)v11, v12);
      uint64_t v13 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v11 + 32))(v11, 72, 8);
      *(_DWORD *)uint64_t v13 = 1;
      *(void *)(v13 + 8) = "instanceModelNames";
      *(void *)(v13 + 16) = &qword_26AF818A8;
      *(void *)(v13 + 24) = 0;
      *(void *)(v13 + 32) = 0x5000000002;
      *(_DWORD *)(v13 + 40) = 0;
      *(void *)(v13 + 48) = 0;
      *(void *)(v13 + 56) = 0;
      *(_DWORD *)(v13 + 64) = 0;
      qword_26AF81898 = v13;
      uint64_t v14 = re::introspectionAllocator((re *)v13);
      re::IntrospectionInfo<re::HashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>>::get((uint64_t)v14, v15);
      uint64_t v16 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v14 + 32))(v14, 72, 8);
      *(_DWORD *)uint64_t v16 = 1;
      *(void *)(v16 + 8) = "instanceTransforms";
      *(void *)(v16 + 16) = qword_26AF818F8;
      *(void *)(v16 + 24) = 0;
      *(void *)(v16 + 32) = 0x8000000003;
      *(_DWORD *)(v16 + 40) = 0;
      *(void *)(v16 + 48) = 0;
      *(void *)(v16 + 56) = 0;
      *(_DWORD *)(v16 + 64) = 0;
      qword_26AF818A0 = v16;
      __cxa_guard_release(&qword_26AF81868);
    }
  }
  *((void *)this + 2) = 0x2C000000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 4;
  *((void *)this + 8) = &qword_26AF81888;
  *((void *)this + 9) = re::internal::defaultConstruct<re::ecs2::MeshSceneComponent>;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 10) = re::internal::defaultDestruct<re::ecs2::MeshSceneComponent>;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::ecs2::MeshSceneComponent>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::ecs2::MeshSceneComponent>;
  re::IntrospectionRegistry::add(this, v3);
  long long v17 = v19;
}

void re::IntrospectionInfo<re::HashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>>::get(uint64_t a1, const re::IntrospectionBase *a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81878, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF81878))
  {
    re::IntrospectionHashTableBase::IntrospectionHashTableBase((re::IntrospectionHashTableBase *)&qword_26AF818A8);
    qword_26AF818A8 = (uint64_t)&unk_26E6E5510;
    __cxa_guard_release(&qword_26AF81878);
  }
  if ((_MergedGlobals_159 & 1) == 0)
  {
    uint64_t v2 = re::introspect_uint32_t((re *)1, a2);
    long long v4 = re::IntrospectionInfo<re::StringID>::get(1, v3);
    if ((_MergedGlobals_159 & 1) == 0)
    {
      uint64_t v5 = (uint64_t)v4;
      _MergedGlobals_159 = 1;
      int v6 = v4[6];
      ArcSharedObject::ArcSharedObject((ArcSharedObject *)&qword_26AF818A8, 0);
      qword_26AF818B8 = 0x3000000007;
      dword_26AF818C0 = v6;
      word_26AF818C4 = 0;
      *(void *)&xmmword_26AF818C8 = 0;
      *((void *)&xmmword_26AF818C8 + 1) = 0xFFFFFFFFLL;
      qword_26AF818D8 = (uint64_t)v2;
      unk_26AF818E0 = 0;
      qword_26AF818E8 = v5;
      unk_26AF818F0 = 0;
      qword_26AF818A8 = (uint64_t)&unk_26E6E5510;
      re::IntrospectionRegistry::add(v7, v8);
      re::getPrettyTypeName((re *)&qword_26AF818A8, (const re::IntrospectionBase *)&v25);
      if (v26) {
        int v9 = v27;
      }
      else {
        int v9 = (char *)&v26 + 1;
      }
      if (v25 && (v26 & 1) != 0) {
        (*(void (**)(void))(*(void *)v25 + 40))();
      }
      long long v10 = v2[2];
      long long v20 = *(_OWORD *)(v5 + 32);
      long long v21 = v10;
      uint64_t v11 = (uint64_t *)re::HashTable<re::StringID,re::StateParameterInt *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::tryGet((uint64_t)&unk_2687A0D30, v22);
      if (v11)
      {
        uint64_t v12 = *v11;
        *((void *)&v19 + 1) = v12;
      }
      else
      {
        uint64_t v25 = 0x449AD97C4B77BED4;
        float32x4_t v26 = "_CompareFunc";
        uint64_t v13 = (uint64_t *)re::HashTable<re::StringID,re::StateParameterInt *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::tryGet((uint64_t)&unk_2687A0D30, &v25);
        if (v13)
        {
          uint64_t v14 = *v13;
          re::StringID::destroyString((re::StringID *)&v25);
        }
        else
        {
          re::StringID::destroyString((re::StringID *)&v25);
          *(void *)&v30.var0 = 0x449AD97C4B77BED4;
          v30.var1 = "_CompareFunc";
          uint64_t v15 = (void *)v25;
          uint64_t v14 = (uint64_t)v26;
          re::StringID::destroyString((re::StringID *)&v30);
        }
        re::TypeInfo::TypeInfo((uint64_t)&v30, (uint64_t)&v26);
        if (!v15
          || (uint64_t v16 = *v31,
              uint64_t v25 = v14,
              float32x4_t v26 = v16,
              LODWORD(v27) = -1,
              (long long v17 = (_anonymous_namespace_ *)re::HashTable<re::internal::TypeAttributeKey,re::internal::TypeAttributeData,re::Hash<re::internal::TypeAttributeKey>,re::EqualTo<re::internal::TypeAttributeKey>,true,false>::tryGet(*(void *)&v30.var0 + 768, &v25)) == 0)|| !*(void *)v17)
        {
          long long v29 = v21;
          v28[0] = v15;
          v28[1] = v14;
        }
        long long v23 = v20;
        long long v24 = v21;
        re::TypeBuilder::beginDictionaryType((uint64_t)&v25, v22, 1, 0x30uLL, 8uLL, &v24, &v23);
        re::TypeBuilder::setConstructor((uint64_t)&v25, (uint64_t)re::TypeBuilderHelper::registerHashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#1}::__invoke);
        re::TypeBuilder::setDestructor((uint64_t)&v25, (uint64_t)re::TypeBuilderHelper::registerHashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#2}::__invoke);
        re::TypeBuilder::setDictionaryAccessors((uint64_t)&v25, (uint64_t)re::TypeBuilderHelper::registerHashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#1}::__invoke, (uint64_t)re::TypeBuilderHelper::registerHashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *)#1}::__invoke, (uint64_t)re::TypeBuilderHelper::registerHashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#3}::__invoke, (uint64_t)re::TypeBuilderHelper::registerHashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,void const*)#1}::__invoke);
        re::TypeBuilder::setDictionaryIterator((uint64_t)&v25, (void *(*)(void *, re::Allocator *))re::TypeBuilderHelper::registerHashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::Allocator *)#1}::__invoke, (BOOL (*)(void *))re::TypeBuilderHelper::registerHashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#2}::__invoke, (const void *(*)(void *))re::TypeBuilderHelper::registerHashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#3}::__invoke, (void *(*)(void *))re::TypeBuilderHelper::registerHashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#4}::__invoke, (void (*)(void *, re::Allocator *))re::TypeBuilderHelper::registerHashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::Allocator *)#2}::__invoke);
        re::TypeBuilder::~TypeBuilder((re::TypeBuilder *)&v25, v18);
      }
      xmmword_26AF818C8 = v19;
      re::StringID::destroyString((re::StringID *)v22);
    }
  }
}

void re::IntrospectionInfo<re::HashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>>::get(uint64_t a1, const re::IntrospectionBase *a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81880, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF81880))
  {
    re::IntrospectionHashTableBase::IntrospectionHashTableBase((re::IntrospectionHashTableBase *)qword_26AF818F8);
    qword_26AF818F8[0] = (uint64_t)&unk_26E6E55B0;
    __cxa_guard_release(&qword_26AF81880);
  }
  if ((byte_26AF81859 & 1) == 0)
  {
    uint64_t v2 = re::introspect_uint32_t((re *)1, a2);
    uint64_t v3 = re::introspect_SRT((re::IntrospectionBase **)1);
    if ((byte_26AF81859 & 1) == 0)
    {
      uint64_t v4 = v3;
      byte_26AF81859 = 1;
      int v5 = *(_DWORD *)(v3 + 24);
      ArcSharedObject::ArcSharedObject((ArcSharedObject *)qword_26AF818F8, 0);
      unk_26AF81908 = 0x3000000007;
      unk_26AF81910 = v5;
      unk_26AF81914 = 0;
      *(void *)&xmmword_26AF81918 = 0;
      *((void *)&xmmword_26AF81918 + 1) = 0xFFFFFFFFLL;
      unk_26AF81928 = v2;
      unk_26AF81930 = 0;
      unk_26AF81938 = v4;
      unk_26AF81940 = 0;
      qword_26AF818F8[0] = (uint64_t)&unk_26E6E55B0;
      re::IntrospectionRegistry::add(v6, v7);
      re::getPrettyTypeName((re *)qword_26AF818F8, (const re::IntrospectionBase *)&v24);
      if (v25) {
        unint64_t v8 = v26;
      }
      else {
        unint64_t v8 = (char *)&v25 + 1;
      }
      if (v24 && (v25 & 1) != 0) {
        (*(void (**)(void))(*(void *)v24 + 40))();
      }
      long long v9 = v2[2];
      long long v19 = *(_OWORD *)(v4 + 32);
      long long v20 = v9;
      long long v10 = (uint64_t *)re::HashTable<re::StringID,re::StateParameterInt *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::tryGet((uint64_t)&unk_2687A0D30, v21);
      if (v10)
      {
        uint64_t v11 = *v10;
        *((void *)&v18 + 1) = v11;
      }
      else
      {
        uint64_t v24 = 0x449AD97C4B77BED4;
        uint64_t v25 = "_CompareFunc";
        uint64_t v12 = (uint64_t *)re::HashTable<re::StringID,re::StateParameterInt *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::tryGet((uint64_t)&unk_2687A0D30, &v24);
        if (v12)
        {
          uint64_t v13 = *v12;
          re::StringID::destroyString((re::StringID *)&v24);
        }
        else
        {
          re::StringID::destroyString((re::StringID *)&v24);
          *(void *)&v29.var0 = 0x449AD97C4B77BED4;
          v29.var1 = "_CompareFunc";
          uint64_t v14 = (void *)v24;
          uint64_t v13 = (uint64_t)v25;
          re::StringID::destroyString((re::StringID *)&v29);
        }
        re::TypeInfo::TypeInfo((uint64_t)&v29, (uint64_t)&v25);
        if (!v14
          || (uint64_t v15 = *v30,
              uint64_t v24 = v13,
              uint64_t v25 = v15,
              LODWORD(v26) = -1,
              (uint64_t v16 = (_anonymous_namespace_ *)re::HashTable<re::internal::TypeAttributeKey,re::internal::TypeAttributeData,re::Hash<re::internal::TypeAttributeKey>,re::EqualTo<re::internal::TypeAttributeKey>,true,false>::tryGet(*(void *)&v29.var0 + 768, &v24)) == 0)|| !*(void *)v16)
        {
          long long v28 = v20;
          v27[0] = v14;
          v27[1] = v13;
        }
        long long v22 = v19;
        long long v23 = v20;
        re::TypeBuilder::beginDictionaryType((uint64_t)&v24, v21, 1, 0x30uLL, 8uLL, &v23, &v22);
        re::TypeBuilder::setConstructor((uint64_t)&v24, (uint64_t)re::TypeBuilderHelper::registerHashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#1}::__invoke);
        re::TypeBuilder::setDestructor((uint64_t)&v24, (uint64_t)re::TypeBuilderHelper::registerHashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#2}::__invoke);
        re::TypeBuilder::setDictionaryAccessors((uint64_t)&v24, (uint64_t)re::TypeBuilderHelper::registerHashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#1}::__invoke, (uint64_t)re::TypeBuilderHelper::registerHashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *)#1}::__invoke, (uint64_t)re::TypeBuilderHelper::registerHashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#3}::__invoke, (uint64_t)re::TypeBuilderHelper::registerHashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,void const*)#1}::__invoke);
        re::TypeBuilder::setDictionaryIterator((uint64_t)&v24, (void *(*)(void *, re::Allocator *))re::TypeBuilderHelper::registerHashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::Allocator *)#1}::__invoke, (BOOL (*)(void *))re::TypeBuilderHelper::registerHashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#2}::__invoke, (const void *(*)(void *))re::TypeBuilderHelper::registerHashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#3}::__invoke, (void *(*)(void *))re::TypeBuilderHelper::registerHashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#4}::__invoke, (void (*)(void *, re::Allocator *))re::TypeBuilderHelper::registerHashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::Allocator *)#2}::__invoke);
        re::TypeBuilder::~TypeBuilder((re::TypeBuilder *)&v24, v17);
      }
      xmmword_26AF81918 = v18;
      re::StringID::destroyString((re::StringID *)v21);
    }
  }
}

void *re::internal::defaultConstruct<re::ecs2::MeshSceneComponent>(uint64_t a1, uint64_t a2, void *a3)
{
  return re::make::shared::unsafelyInplace<re::ecs2::MeshSceneComponent>(a3);
}

uint64_t re::internal::defaultDestruct<re::ecs2::MeshSceneComponent>(uint64_t a1, uint64_t a2, uint64_t (***a3)(void))
{
  return (**a3)(a3);
}

uint64_t re::internal::defaultDestructV2<re::ecs2::MeshSceneComponent>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

uint64_t re::ecs2::introspect_MeshSceneComponent(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"MeshSceneComponent", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_MeshSceneComponent, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_MeshSceneComponent, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::MeshSceneComponent>, this);
}

void *re::ecs2::allocInfo_MeshSceneSystem(re::ecs2 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81870, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF81870))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF819C0, "MeshSceneSystem");
    __cxa_guard_release(&qword_26AF81870);
  }
  return &unk_26AF819C0;
}

void re::ecs2::initInfo_MeshSceneSystem(re::ecs2 *this, re::IntrospectionBase *a2)
{
  v5[0] = 0xBC654CEB7856431CLL;
  v5[1] = "MeshSceneSystem";
  re::StringID::destroyString((re::StringID *)v5);
  *((_OWORD *)this + 2) = v6;
  *((void *)this + 2) = 0x1C800000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 0;
  *((void *)this + 8) = &re::ecs2::initInfo_MeshSceneSystem(re::IntrospectionBase *)::structureAttributes;
  *((void *)this + 9) = re::internal::defaultConstruct<re::ecs2::MeshSceneSystem>;
  *((void *)this + 10) = re::internal::defaultDestruct<re::ecs2::MeshSceneSystem>;
  *((void *)this + 11) = re::internal::defaultRetain<re::ecs2::MeshSceneSystem>(void)::{lambda(void *)#1}::__invoke;
  *((void *)this + 12) = re::internal::defaultRelease<re::ecs2::MeshSceneSystem>(void)::{lambda(void *)#1}::__invoke;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::ecs2::MeshSceneSystem>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::ecs2::MeshSceneSystem>;
  re::IntrospectionRegistry::add(this, v3);
  long long v4 = v6;
}

re::ecs2::MeshSceneSystem *re::internal::defaultConstruct<re::ecs2::MeshSceneSystem>(uint64_t a1, uint64_t a2, re::ecs2::MeshSceneSystem *a3)
{
  return re::ecs2::MeshSceneSystem::MeshSceneSystem(a3);
}

void *re::internal::defaultDestruct<re::ecs2::MeshSceneSystem>(uint64_t a1, uint64_t a2, void *a3)
{
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)(a3 + 49));
  re::ecs2::BasicComponentStates<re::ecs2::BlendShapeWeightsBufferComponent>::~BasicComponentStates(a3 + 19);
  a3[14] = &unk_26E6E5398;
  re::FixedArray<CoreIKTransform>::deinit(a3 + 16);
  *a3 = &unk_26E6DECE0;
  return objc_destructInstance(a3 + 1);
}

void *re::internal::defaultDestructV2<re::ecs2::MeshSceneSystem>(void *a1)
{
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)(a1 + 49));
  re::ecs2::BasicComponentStates<re::ecs2::BlendShapeWeightsBufferComponent>::~BasicComponentStates(a1 + 19);
  a1[14] = &unk_26E6E5398;
  re::FixedArray<CoreIKTransform>::deinit(a1 + 16);
  *a1 = &unk_26E6DECE0;
  return objc_destructInstance(a1 + 1);
}

uint64_t re::ecs2::introspect_MeshSceneSystem(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"MeshSceneSystem", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_MeshSceneSystem, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_MeshSceneSystem, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::MeshSceneSystem>, this);
}

void re::ecs2::MeshSceneComponent::~MeshSceneComponent(re::ecs2::MeshSceneComponent *this)
{
  v5[5] = *MEMORY[0x263EF8340];
  *(void *)this = &unk_26E6E5340;
  uint64_t v2 = (id *)((char *)this + 640);
  inited = (re *)objc_initWeak(&location, 0);
  memset(v5, 0, 24);
  v5[3] = re::globalAllocators(inited)[2];
  v5[4] = 0;
  re::FramePersistentPtr<re::ecs2::MeshSceneComponent::FramePersistentMeshSceneData,re::FrameManager>::reset(v2, &location, 0, (uint64_t)v5);
  re::FunctionBase<24ul,void ()(void *)>::destroyCallable((uint64_t)v5);
  objc_destroyWeak(&location);
  id location = 0;
  re::FunctionBase<24ul,void ()(void *)>::destroyCallable((uint64_t)this + 656);
  objc_destroyWeak(v2);
  *((void *)this + 80) = 0;
  re::MeshNameMap::~MeshNameMap((re::ecs2::MeshSceneComponent *)((char *)this + 216));
  re::DynamicArray<unsigned long>::deinit((uint64_t)this + 176);
  re::HashTable<re::ecs2::Entity *,re::SortingPlane,re::Hash<re::ecs2::Entity *>,re::EqualTo<re::ecs2::Entity *>,true,false>::deinit((uint64_t *)this + 16);
  re::HashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::deinit((uint64_t *)this + 10);
  re::HashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::deinit((uint64_t *)this + 4);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  re::ecs2::MeshSceneComponent::~MeshSceneComponent(this);
  JUMPOUT(0x237DBCBD0);
}

uint64_t *re::ecs2::MeshSceneComponent::ensureCachedDataUpToDate(uint64_t *this, re::MeshManager *a2)
{
  uint64_t v3 = a2;
  uint64_t v4 = (uint64_t)this;
  uint64_t v151 = *MEMORY[0x263EF8340];
  uint64_t v5 = this[2];
  if (v5
    && (uint64_t v6 = *(void *)(v5 + 176)) != 0
    && (uint64_t v7 = *(void *)(v6 + 40)) != 0
    && (unsigned int v8 = atomic_load((unsigned int *)(v7 + 704)), v8 == 2))
  {
    if (*((_DWORD *)this + 174) != *((_DWORD *)this + 175))
    {
      long long v9 = (re::MeshAsset *)(v6 + 32);
      long long v10 = (_anonymous_namespace_ *)re::ecs2::MeshSceneComponent::resetCachedInstances((re::ecs2::MeshSceneComponent *)this, a2);
      unsigned int v11 = *(_DWORD *)(v4 + 60);
      if (v11 <= *(_DWORD *)(v4 + 108)) {
        unsigned int v11 = *(_DWORD *)(v4 + 108);
      }
      unsigned int v12 = *(_DWORD *)(v4 + 156);
      if (v11 <= v12) {
        unint64_t v13 = v12;
      }
      else {
        unint64_t v13 = v11;
      }
      long long v124 = 0;
      unint64_t v125 = 0;
      int v126 = 1;
      unint64_t v127 = 0;
      long long v128 = 0;
      unint64_t v108 = v13;
      if (v13)
      {
        re::DynamicOverflowArray<unsigned int,8ul>::setCapacity(&v124, v13);
        char v14 = v126;
        v126 += 2;
        BOOL v15 = (v14 & 1) == 0;
        unint64_t v16 = 8;
        if (v15) {
          unint64_t v16 = v127;
        }
        if (v16 < v13) {
          re::DynamicOverflowArray<unsigned int,8ul>::setCapacity(&v124, v13);
        }
        unint64_t v17 = v125;
        if (v125 < v13)
        {
          do
          {
            if (v126) {
              long long v18 = &v127;
            }
            else {
              long long v18 = v128;
            }
            *((_DWORD *)v18 + v17++) = -1;
          }
          while (v13 != v17);
        }
        unint64_t v125 = v13;
        v126 += 2;
      }
      *(_DWORD *)(v4 + 700) = *(_DWORD *)(v4 + 696);
      uint64_t v19 = re::AssetHandle::asset<re::MeshAsset>(v9);
      long long v20 = (re::_anonymous_namespace_::MeshAssetAccessor *)v19;
      int8x16_t v115 = 0;
      v112[1] = 0;
      unint64_t v113 = 0;
      v112[0] = 0;
      int v114 = 0;
      uint64_t v106 = *(void *)(v19 + 432);
      unint64_t v107 = *(void *)(v19 + 416);
      unsigned int v21 = *(_DWORD *)(v4 + 60);
      if (v21 <= *(_DWORD *)(v4 + 108)) {
        unsigned int v21 = *(_DWORD *)(v4 + 108);
      }
      unsigned int v22 = *(_DWORD *)(v4 + 156);
      if (v21 <= v22) {
        uint64_t v23 = v22;
      }
      else {
        uint64_t v23 = v21;
      }
      v120[0] = xmmword_23435FD50;
      v120[1] = xmmword_23435FD60;
      v120[2] = xmmword_23435FD80;
      v120[3] = xmmword_23435FBB0;
      float32x4_t v118 = 0u;
      float32x4_t v119 = 0u;
      float32x4_t v116 = 0u;
      float32x4_t v117 = 0u;
      if (v23)
      {
        unint64_t v24 = 0;
        uint64_t v25 = 0;
        uint64_t v26 = v4 + 32;
        float32x4_t v101 = (re::_anonymous_namespace_::MeshAssetAccessor *)v19;
        float32x4_t v102 = v3;
        uint64_t v27 = (re::MeshNameMap *)(v19 + 448);
        unint64_t v28 = v4 + 80;
        uint64_t v104 = (uint64_t)v3 + 72;
        uint64_t v105 = (uint64_t)v3 + 8;
        long long v103 = (re::MeshNameMap *)(v19 + 448);
        while (1)
        {
          uint64_t v2 = (const StringID *)re::HashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::tryGet(v26, v24);
          uint64_t v19 = re::HashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::tryGet(v28, v24);
          if (!*(void *)(v4 + 128)
            || (unint64_t v29 = 0x94D049BB133111EBLL
                    * ((0xBF58476D1CE4E5B9 * (v24 ^ (v24 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (v24 ^ (v24 >> 30))) >> 27)),
                uint64_t v30 = *(unsigned int *)(*(void *)(v4 + 136) + 4 * ((v29 ^ (v29 >> 31)) % *(unsigned int *)(v4 + 152))),
                v30 == 0x7FFFFFFF))
          {
LABEL_34:
            uint64_t v32 = 0;
            if (!v2) {
              goto LABEL_40;
            }
          }
          else
          {
            uint64_t v31 = *(void *)(v4 + 144);
            while (v24 != *(_DWORD *)(v31 + (v30 << 6) + 12))
            {
              uint64_t v30 = *(_DWORD *)(v31 + (v30 << 6) + 8) & 0x7FFFFFFF;
              if (v30 == 0x7FFFFFFF) {
                goto LABEL_34;
              }
            }
            uint64_t v32 = (float32x4_t *)(v31 + (v30 << 6) + 16);
            if (!v2) {
              goto LABEL_40;
            }
          }
          if (v19)
          {
            uint64_t v19 = re::MeshNameMap::modelIndex(v27, (const re::StringID *)v19);
            if (v19 == 0xFFFF)
            {
              uint64_t v25 = (v25 + 1);
            }
            else
            {
              int v34 = v19;
              if (v32)
              {
                float v35 = v32[1].f32[0];
                float v36 = v32[1].f32[1];
                float v37 = v35 + v35;
                float v38 = v36 + v36;
                float v39 = v32[1].f32[2];
                float v40 = v32[1].f32[3];
                float v41 = v39 + v39;
                float v42 = v35 * (float)(v35 + v35);
                float v43 = v36 * (float)(v36 + v36);
                float v44 = v39 * (float)(v39 + v39);
                float v45 = v37 * v36;
                float v46 = v37 * v39;
                float v47 = v38 * v39;
                float v48 = v38 * v40;
                float v49 = v41 * v40;
                v50.i32[3] = 0;
                v50.f32[0] = 1.0 - (float)(v43 + v44);
                v50.f32[1] = v45 + v49;
                v50.f32[2] = v46 - v48;
                float v51 = v37 * v40;
                float32_t v52 = 1.0 - (float)(v42 + v44);
                v53.i32[3] = 0;
                v53.f32[0] = v45 - v49;
                v53.f32[1] = v52;
                v53.f32[2] = v47 + v51;
                v54.i32[3] = 0;
                v54.f32[0] = v46 + v48;
                v54.f32[1] = v47 - v51;
                v54.f32[2] = 1.0 - (float)(v42 + v43);
                float32x4_t v55 = *v32;
                float32x4_t v56 = vmulq_n_f32(v53, *(float *)vshrq_n_u64(*(uint64x2_t *)v32, 0x20uLL).i32);
                float32x4_t v57 = v32[2];
                v57.i32[3] = 1.0;
                float32x4_t v116 = vmulq_n_f32(v50, COERCE_FLOAT(*v32));
                float32x4_t v117 = v56;
                float32x4_t v118 = vmulq_laneq_f32(v54, v55, 2);
                float32x4_t v119 = v57;
                uint64_t v58 = &v116;
              }
              else
              {
                uint64_t v58 = (float32x4_t *)v120;
              }
              uint64_t v59 = v19;
              if (v107 <= v19) {
                goto LABEL_92;
              }
              uint64_t v60 = v25;
              uint64_t v61 = v23;
              uint64_t v62 = *(void *)(v106 + 8 * v19);
              re::StringID::StringID((re::StringID *)&v121, v2);
              unint64_t v28 = v109 & 0xFFFFFF00;
              *(void *)int32x4_t buf = v121;
              *(void *)&buf[8] = v122;
              uint64_t v121 = 0;
              uint64_t v122 = "";
              *(void *)&long long v136 = 0xFFFFFFFFLL;
              BYTE8(v136) = 0;
              HIDWORD(v136) = 1065353216;
              float32x4_t v137 = 0u;
              float32x4_t v138 = 0u;
              float32x4_t v139 = 0u;
              float32x4_t v140 = 0u;
              long long v141 = 0u;
              memset(v142, 0, sizeof(v142));
              re::DataArray<re::MeshModel>::tryGet(v105, v62);
              float32x4_t v63 = v58[1];
              float32x4_t v137 = *v58;
              float32x4_t v138 = v63;
              float32x4_t v64 = v58[3];
              float32x4_t v139 = v58[2];
              float32x4_t v140 = v64;
              *(void *)&long long v136 = v62;
              int v109 = v28;
              *((void *)&v136 + 1) = v28 | 0x3F80000000000000;
              re::StringID::destroyString((re::StringID *)&v121);
              *(void *)&v129[0] = re::DataArray<re::MeshInstance>::create<re::MeshInstance>(v104, (uint64_t)buf);
              re::DynamicArray<re::DataArrayHandle<re::MeshModel>>::add((void *)(v4 + 176), v129);
              uint64_t v23 = v125;
              if (v125 <= v24)
              {
LABEL_93:
                uint64_t v123 = 0;
                float32x4_t v130 = 0u;
                float32x4_t v131 = 0u;
                memset(v129, 0, sizeof(v129));
                os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
                int v143 = 136315906;
                long long v144 = "operator[]";
                __int16 v145 = 1024;
                int v146 = 858;
                __int16 v147 = 2048;
                unint64_t v148 = v24;
                __int16 v149 = 2048;
                uint64_t v150 = v23;
                _os_log_send_and_compose_impl();
                _os_crash_msg();
                __break(1u);
LABEL_94:
                *(void *)&v120[0] = 0;
                float32x4_t v138 = 0u;
                float32x4_t v139 = 0u;
                long long v136 = 0u;
                float32x4_t v137 = 0u;
                *(_OWORD *)int32x4_t buf = 0u;
                os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
                LODWORD(v129[0]) = 136315906;
                *(void *)((char *)v129 + 4) = "operator[]";
                WORD6(v129[0]) = 1024;
                *(_DWORD *)((char *)v129 + 14) = 468;
                WORD1(v129[1]) = 2048;
                *(void *)((char *)&v129[1] + 4) = v28;
                WORD6(v129[1]) = 2048;
                *(void *)((char *)&v129[1] + 14) = v2;
                _os_log_send_and_compose_impl();
                _os_crash_msg();
                __break(1u);
              }
              unint64_t v65 = &v127;
              if ((v126 & 1) == 0) {
                unint64_t v65 = v128;
              }
              *((_DWORD *)v65 + v24) = *(_DWORD *)(v4 + 192) - 1;
              re::StringID::StringID((re::StringID *)v129, v2);
              float32x4_t v66 = v58[1];
              v129[1] = *v58;
              v129[2] = v66;
              float32x4_t v67 = v58[3];
              float32x4_t v130 = v58[2];
              float32x4_t v131 = v67;
              int v133 = 0;
              int v132 = v34;
              int v134 = 1065353216;
              re::DynamicArray<re::MeshAssetInstance>::add((_anonymous_namespace_ *)v112, (uint64_t *)v129);
              re::StringID::destroyString((re::StringID *)v129);
              re::FixedArray<re::SharedPtr<re::MaterialParameterBlock>>::deinit(&v142[1]);
              uint64_t v23 = v61;
              uint64_t v25 = v60;
              uint64_t v26 = v4 + 32;
              unint64_t v28 = v4 + 80;
              uint64_t v27 = v103;
              if ((void)v141)
              {
                if (*((void *)&v141 + 1))
                {
                  (*(void (**)(void))(*(void *)v141 + 40))();
                  *((void *)&v141 + 1) = 0;
                  v142[0] = 0;
                }
                *(void *)&long long v141 = 0;
              }
              re::StringID::destroyString((re::StringID *)buf);
            }
            goto LABEL_53;
          }
LABEL_40:
          uint64_t v25 = (v25 + 1);
LABEL_53:
          if (++v24 == v23)
          {
            long long v20 = v101;
            uint64_t v3 = v102;
            if ((int)v25 >= 1)
            {
              BOOL v68 = *re::ecsComponentsLogObjects((re *)v19);
              uint64_t v19 = os_log_type_enabled(v68, OS_LOG_TYPE_DEFAULT);
              if (v19)
              {
                *(_DWORD *)int32x4_t buf = 67109120;
                *(_DWORD *)&buf[4] = v25;
                _os_log_impl(&dword_233120000, v68, OS_LOG_TYPE_DEFAULT, "MeshSceneComponent has %d invalid instances", buf, 8u);
              }
            }
            break;
          }
        }
      }
      unint64_t v69 = v115;
      unint64_t v70 = v113;
      uint64_t v71 = *(void *)(*(void *)v3 + 136);
      if (v71) {
        unint64_t v72 = (void *)(v71 + 8);
      }
      else {
        unint64_t v72 = 0;
      }
      inited = (re *)objc_initWeak(&location, v72);
      unsigned int v74 = re::globalAllocators(inited);
      long long v75 = (re *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v74[2] + 32))(v74[2], 48, 8);
      *(_OWORD *)long long v75 = 0u;
      *((_OWORD *)v75 + 1) = 0u;
      *((_OWORD *)v75 + 2) = 0u;
      memset(buf, 0, sizeof(buf));
      *(void *)&long long v136 = 0;
      *((void *)&v136 + 1) = re::globalAllocators(v75)[2];
      v137.i64[0] = 0;
      re::FramePersistentPtr<re::ecs2::MeshSceneComponent::FramePersistentMeshSceneData,re::FrameManager>::reset((id *)(v4 + 640), &location, v75, (uint64_t)buf);
      re::FunctionBase<24ul,void ()(void *)>::destroyCallable((uint64_t)buf);
      objc_destroyWeak(&location);
      id location = 0;
      uint64_t v76 = *(void *)(v4 + 648);
      uint64_t v79 = *(void *)(v4 + 648);
      uint64_t v80 = *(void *)(v4 + 552);
      if (v80) {
        unint64_t v81 = *(unsigned int *)(*(void *)(v4 + 560) + 4 * v80 - 4);
      }
      else {
        unint64_t v81 = 0;
      }
      unint64_t v82 = v108;
      if (v108)
      {
        unint64_t v83 = 0;
        unint64_t v84 = 0;
        unint64_t v24 = (unint64_t)v3 + 72;
        uint64_t v85 = (uint64_t)v3 + 8;
        int32x4_t v110 = vdupq_n_s32(0x7F800000u);
        uint64_t v23 = 560;
        do
        {
          unint64_t v28 = v125;
          if (v125 <= v84) {
            goto LABEL_89;
          }
          uint64_t v86 = v128;
          if (v126) {
            uint64_t v86 = &v127;
          }
          unint64_t v28 = *((unsigned int *)v86 + v84);
          if (v28 != -1)
          {
            uint64_t v2 = *(const StringID **)(v4 + 192);
            if ((unint64_t)v2 <= v28) {
              goto LABEL_90;
            }
            uint64_t v87 = *(void *)(v4 + 208);
            if ((*(_DWORD *)(v87 + 8 * v28 + 4) & 0xFFFFFF) != 0)
            {
              uint64_t v88 = re::DataArray<re::MeshInstance>::get(v24, *(void *)(v87 + 8 * v28));
              uint64_t v89 = re::DataArray<re::MeshModel>::get(v85, *(void *)(v88 + 16));
              uint64_t v2 = *(const StringID **)(v76 + 8);
              if ((unint64_t)v2 <= v28) {
                goto LABEL_91;
              }
              float32x4_t v90 = (_OWORD *)(*(void *)(v76 + 16) + 32 * v28);
              long long v91 = *(_OWORD *)(v89 + 32);
              *float32x4_t v90 = *(_OWORD *)(v89 + 16);
              v90[1] = v91;
              uint64_t v92 = *(void *)(v89 + 56);
              if (v92)
              {
                uint64_t v93 = 560 * v92;
                BOOL v94 = (long long *)(*(void *)(v89 + 64) + 432);
                uint64_t v95 = 32 * v83;
                unint64_t v82 = v108;
                while (1)
                {
                  unint64_t v28 = *(void *)(v79 + 32);
                  if (v28 <= v83) {
                    break;
                  }
                  ++v83;
                  int32x4_t v96 = (_OWORD *)(*(void *)(v79 + 40) + v95);
                  long long v97 = *v94;
                  long long v98 = v94[1];
                  v94 += 35;
                  *int32x4_t v96 = v97;
                  v96[1] = v98;
                  v95 += 32;
                  v93 -= 560;
                  if (!v93) {
                    goto LABEL_83;
                  }
                }
                *(void *)&v120[0] = 0;
                float32x4_t v138 = 0u;
                float32x4_t v139 = 0u;
                long long v136 = 0u;
                float32x4_t v137 = 0u;
                *(_OWORD *)int32x4_t buf = 0u;
                os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
                LODWORD(v129[0]) = 136315906;
                *(void *)((char *)v129 + 4) = "operator[]";
                WORD6(v129[0]) = 1024;
                *(_DWORD *)((char *)v129 + 14) = 468;
                WORD1(v129[1]) = 2048;
                *(void *)((char *)&v129[1] + 4) = v83;
                WORD6(v129[1]) = 2048;
                *(void *)((char *)&v129[1] + 14) = v28;
                _os_log_send_and_compose_impl();
                _os_crash_msg();
                __break(1u);
LABEL_89:
                *(void *)&v120[0] = 0;
                float32x4_t v138 = 0u;
                float32x4_t v139 = 0u;
                long long v136 = 0u;
                float32x4_t v137 = 0u;
                *(_OWORD *)int32x4_t buf = 0u;
                os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
                LODWORD(v129[0]) = 136315906;
                *(void *)((char *)v129 + 4) = "operator[]";
                WORD6(v129[0]) = 1024;
                *(_DWORD *)((char *)v129 + 14) = 858;
                WORD1(v129[1]) = 2048;
                *(void *)((char *)&v129[1] + 4) = v84;
                WORD6(v129[1]) = 2048;
                *(void *)((char *)&v129[1] + 14) = v28;
                _os_log_send_and_compose_impl();
                _os_crash_msg();
                __break(1u);
LABEL_90:
                *(void *)&v120[0] = 0;
                float32x4_t v138 = 0u;
                float32x4_t v139 = 0u;
                long long v136 = 0u;
                float32x4_t v137 = 0u;
                *(_OWORD *)int32x4_t buf = 0u;
                os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
                LODWORD(v129[0]) = 136315906;
                *(void *)((char *)v129 + 4) = "operator[]";
                WORD6(v129[0]) = 1024;
                *(_DWORD *)((char *)v129 + 14) = 789;
                WORD1(v129[1]) = 2048;
                *(void *)((char *)&v129[1] + 4) = v28;
                WORD6(v129[1]) = 2048;
                *(void *)((char *)&v129[1] + 14) = v2;
                _os_log_send_and_compose_impl();
                _os_crash_msg();
                __break(1u);
LABEL_91:
                *(void *)&v120[0] = 0;
                float32x4_t v138 = 0u;
                float32x4_t v139 = 0u;
                long long v136 = 0u;
                float32x4_t v137 = 0u;
                *(_OWORD *)int32x4_t buf = 0u;
                os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
                LODWORD(v129[0]) = 136315906;
                *(void *)((char *)v129 + 4) = "operator[]";
                WORD6(v129[0]) = 1024;
                *(_DWORD *)((char *)v129 + 14) = 468;
                WORD1(v129[1]) = 2048;
                *(void *)((char *)&v129[1] + 4) = v28;
                WORD6(v129[1]) = 2048;
                *(void *)((char *)&v129[1] + 14) = v2;
                _os_log_send_and_compose_impl();
                _os_crash_msg();
                __break(1u);
LABEL_92:
                re::internal::assertLog((re::internal *)6, v33, "assertion failure: '%s' (%s:line %i) Index out of range. index = %zu, size = %zu", "index < size()", "operator[]", 251, v59, v107);
                _os_crash();
                __break(1u);
                goto LABEL_93;
              }
              unint64_t v82 = v108;
            }
            else
            {
              uint64_t v2 = *(const StringID **)(v76 + 8);
              if ((unint64_t)v2 <= v28) {
                goto LABEL_94;
              }
              uint64_t v99 = (int32x4_t *)(*(void *)(v76 + 16) + 32 * v28);
              v100.i64[0] = 0x7F0000007FLL;
              v100.i64[1] = 0x7F0000007FLL;
              *uint64_t v99 = v110;
              v99[1] = v100;
            }
          }
LABEL_83:
          ++v84;
        }
        while (v84 != v82);
      }
      re::DynamicArray<re::MeshAssetInstance>::deinit((uint64_t)v112);
      this = v124;
      if (v124)
      {
        if ((v126 & 1) == 0) {
          return (uint64_t *)(*(uint64_t (**)(void))(*v124 + 40))();
        }
      }
    }
  }
  else
  {
    return (uint64_t *)re::ecs2::MeshSceneComponent::resetCachedInstances((re::ecs2::MeshSceneComponent *)this, a2);
  }
  return this;
}

uint64_t re::ecs2::MeshSceneComponent::resetCachedInstances(re::ecs2::MeshSceneComponent *this, re::MeshManager *a2)
{
  uint64_t v3 = *((void *)this + 24);
  if (v3)
  {
    uint64_t v5 = (uint64_t *)*((void *)this + 26);
    uint64_t v6 = 8 * v3;
    do
    {
      uint64_t v7 = *v5++;
      re::MeshManager::destroyInstance((uint64_t)a2, v7);
      v6 -= 8;
    }
    while (v6);
  }
  *((void *)this + 24) = 0;
  ++*((_DWORD *)this + 50);
  return re::MeshNameMap::deinit((re::ecs2::MeshSceneComponent *)((char *)this + 216));
}

uint64_t re::FramePersistentPtr<re::ecs2::MeshSceneComponent::FramePersistentMeshSceneData,re::FrameManager>::reset(id *location, id *a2, void *a3, uint64_t a4)
{
  v18[5] = *MEMORY[0x263EF8340];
  if (location[1])
  {
    id WeakRetained = objc_loadWeakRetained(location);
    if (WeakRetained)
    {
      long long v9 = WeakRetained;

      if (!location[6])
      {
        uint64_t v11 = re::globalAllocators(v10)[2];
        v18[0] = &unk_26E6E5650;
        v18[3] = v11;
        uint64_t v18[4] = v18;
        re::FunctionBase<24ul,void ()(void *)>::operator=<24ul>((uint64_t)(location + 2), (uint64_t)v18);
        long long v10 = (re *)re::FunctionBase<24ul,void ()(void *)>::destroyCallable((uint64_t)v18);
      }
      unsigned int v12 = re::globalAllocators(v10);
      unint64_t v13 = v9[2] & 0xFFFFFFFFFFFFFFFLL | ((unint64_t)v9[1] << 60);
      id v14 = location[1];
      uint64_t v15 = re::PerFrameAllocatorManager::perFrameAllocator(v12[6], v13);
      (*(void (**)(uint64_t, id, id *))(*(void *)v15 + 16))(v15, v14, location + 2);
    }
    else
    {
      id v16 = location[6];
      if (v16)
      {
        v18[0] = location[1];
        (*(void (**)(id, void *))(*(void *)v16 + 16))(v16, v18);
      }
      else
      {
        re::internal::destroyPersistent<re::ecs2::MeshSceneComponent::FramePersistentMeshSceneData>((re *)location[1]);
      }
    }
  }
  re::ArcWeakPtr<re::VideoHistogram>::operator=(location, a2);
  location[1] = a3;
  return re::FunctionBase<24ul,void ()(void *)>::operator=<24ul>((uint64_t)(location + 2), a4);
}

uint64_t re::ecs2::MeshSceneComponentStateImpl::didDependentComponentChange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(a3 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::MeshSceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
  if (result) {
    ++*(_DWORD *)(result + 696);
  }
  return result;
}

uint64_t re::ecs2::MeshSceneComponentStateImpl::didSetDirty(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t result = re::ecs2::ComponentBucketsBase::component(*(void *)(a2 + 16), a3, a4);
  if (result) {
    ++*(_DWORD *)(result + 696);
  }
  return result;
}

BOOL re::ecs2::MeshSceneComponentStateImpl::processDirtyComponents(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  unsigned int v8 = *(re::MeshManager **)(*(void *)(a1 + 8) + 104);
  re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::DataArrayIterator((uint64_t)&v22, a5, 0);
  unint64_t v9 = v22;
  unint64_t v10 = v23;
  unint64_t v22 = a4;
  unint64_t v23 = v9;
  unint64_t v24 = v10;
  uint64_t v11 = (unsigned __int16)v10;
  uint64_t v12 = v10 & 0xFFFF0000;
  if (v9 != a5 || v11 != 0xFFFF || v12 != 4294901760)
  {
    do
    {
      uint64_t v15 = *(void *)re::DataArray<re::ecs2::Component *>::DataArrayIterator<re::ecs2::Component *,re::ecs2::Component * const&>::operator*((unsigned __int16 *)&v23);
      uint64_t v16 = *(void *)(*(void *)(v15 + 16) + 176);
      unint64_t v17 = (unint64_t *)(a3 + 32);
      if (!v16
        || (unint64_t v17 = (unint64_t *)(a3 + 32), !*(void *)(v16 + 40))
        || (unint64_t v17 = (unint64_t *)(a3 + 40),
            long long v18 = (unint64_t *)(a3 + 48),
            *(_DWORD *)(v15 + 696) != *(_DWORD *)(v15 + 700)))
      {
        re::ecs2::MeshSceneComponent::resetCachedInstances((re::ecs2::MeshSceneComponent *)v15, v8);
        long long v18 = v17;
      }
      unint64_t v19 = v22;
      unint64_t v20 = re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::handle((unsigned __int16 *)&v23);
      re::ecs2::ComponentBucketsBase::moveComponent(*(re::ecs2::ComponentBucketsBase **)(a3 + 16), v19, v20, *v18);
      re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::increment(&v23);
    }
    while (v23 != a5 || (unsigned __int16)v24 != 0xFFFF || WORD1(v24) != 0xFFFF);
  }
  return *(_DWORD *)(a5 + 40) != 0;
}

unint64_t re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::setComponentState(uint64_t a1, unint64_t a2, unint64_t a3)
{
  unint64_t result = re::ecs2::ComponentBucketsBase::moveComponent(*(re::ecs2::ComponentBucketsBase **)(a1 + 16), a2, a3, *(void *)(a1 + 24));
  if (result != a2 || v7 != a3 || ((v7 ^ a3) & 0xFFFFFF00000000) != 0)
  {
    unint64_t v10 = *(uint64_t (**)(void))(**(void **)(*(void *)a1 + 224) + 16);
    return v10();
  }
  return result;
}

BOOL re::ecs2::MeshSceneComponentStateImpl::processPreparingComponents(uint64_t a1, uint64_t a2, void *a3, unint64_t a4, uint64_t a5)
{
  unsigned int v8 = *(re::MeshManager **)(*(void *)(a1 + 8) + 104);
  re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::DataArrayIterator((uint64_t)&v28, a5, 0);
  unint64_t v9 = v28;
  unint64_t v10 = v29;
  unint64_t v28 = a4;
  unint64_t v29 = v9;
  unint64_t v30 = v10;
  uint64_t v11 = (unsigned __int16)v10;
  uint64_t v12 = v10 & 0xFFFF0000;
  if (v9 != a5 || v11 != 0xFFFF || v12 != 4294901760)
  {
    while (1)
    {
      uint64_t v15 = *(re::ecs2::MeshSceneComponent **)re::DataArray<re::ecs2::Component *>::DataArrayIterator<re::ecs2::Component *,re::ecs2::Component * const&>::operator*((unsigned __int16 *)&v29);
      uint64_t v16 = *(void *)(*((void *)v15 + 2) + 176);
      uint64_t v17 = *(void *)(v16 + 40);
      if (!v17) {
        break;
      }
      unsigned int v18 = atomic_load((unsigned int *)(v17 + 704));
      if (v18 == 3)
      {
        re::ecs2::MeshSceneComponent::resetCachedInstances(v15, v8);
        unint64_t v19 = v28;
        unint64_t v20 = re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::handle((unsigned __int16 *)&v29);
        unsigned int v21 = (re::ecs2::ComponentBucketsBase *)a3[2];
        unint64_t v22 = a3[4];
      }
      else
      {
        uint64_t v23 = *(void *)(v16 + 40);
        if (!v23) {
          break;
        }
        unsigned int v24 = atomic_load((unsigned int *)(v23 + 704));
        if (v24 != 2) {
          break;
        }
        re::ecs2::MeshSceneComponent::ensureCachedDataUpToDate((uint64_t *)v15, v8);
        unint64_t v19 = v28;
        unint64_t v20 = re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::handle((unsigned __int16 *)&v29);
        unsigned int v21 = (re::ecs2::ComponentBucketsBase *)a3[2];
        unint64_t v22 = a3[6];
      }
      re::ecs2::ComponentBucketsBase::moveComponent(v21, v19, v20, v22);
LABEL_16:
      re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::increment(&v29);
      if (v29 == a5 && (unsigned __int16)v30 == 0xFFFF && WORD1(v30) == 0xFFFF) {
        return *(_DWORD *)(a5 + 40) != 0;
      }
    }
    re::AssetHandle::loadAsync((re::AssetHandle *)(v16 + 32));
    goto LABEL_16;
  }
  return *(_DWORD *)(a5 + 40) != 0;
}

void re::ecs2::MeshSceneSystem::update(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v25[0] = a3;
  v25[1] = a4;
  if (!*(void *)(a1 + 104)) {
    return;
  }
  uint64_t v5 = a1 + 152;
  uint64_t v26 = a2;
  unint64_t v6 = *(void *)(*(void *)(a1 + 216)
                 + 16
                 * re::HashBrown<re::WeakStringID,re::IndexAndProtectionOptions,re::Hash<re::WeakStringID>,re::EqualTo<re::WeakStringID>,re::Hash<re::IndexAndProtectionOptions>,false>::find((void *)(a1 + 208), &v26)+ 8);
  re::DynamicBitset<unsigned long long,64ul>::clearBit(a1 + 320, v6);
  uint64_t v7 = (void *)re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::BlendShapeWeightsBufferComponent>,4ul>::operator[](v5, v6);
  uint64_t v8 = *(void *)(*v7 + 224);
  unint64_t v9 = v7[3];
  unint64_t v10 = re::BucketArray<re::Matrix4x4<float>,8ul>::operator[](v7[2] + 8, v9);
  if (*(_DWORD *)(v10 + 40)) {
    int v11 = (*(uint64_t (**)(uint64_t, void *, void *, unint64_t, unint64_t, void))(*(void *)v8 + 24))(v8, v25, v7, v9, v10, 0);
  }
  else {
    int v11 = 0;
  }
  unint64_t v12 = v7[5];
  unint64_t v13 = re::BucketArray<re::Matrix4x4<float>,8ul>::operator[](v7[2] + 8, v12);
  if (*(_DWORD *)(v13 + 40)) {
    v11 |= (*(uint64_t (**)(uint64_t, void *, void *, unint64_t, unint64_t, void))(*(void *)v8 + 32))(v8, v25, v7, v12, v13, 0);
  }
  unint64_t v14 = v7[6];
  unint64_t v15 = re::BucketArray<re::Matrix4x4<float>,8ul>::operator[](v7[2] + 8, v14);
  if (!*(_DWORD *)(v15 + 40))
  {
    if (!v11) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  if ((v11 | (*(unsigned int (**)(uint64_t, void *, void *, unint64_t, unint64_t, void))(*(void *)v8 + 40))(v8, v25, v7, v14, v15, 0)))LABEL_9:re::DynamicBitset<unsigned long long,256ul>::setBit(a1 + 320, v6); {
LABEL_10:
  }
  if (!*(unsigned char *)(a1 + 384)) {
    return;
  }
  unint64_t v16 = *(void *)(a1 + 328);
  int v17 = *(_DWORD *)(a1 + 336);
  if (v16 >= 0xB)
  {
    if (v17) {
      unsigned int v18 = (void *)(a1 + 344);
    }
    else {
      unsigned int v18 = *(void **)(a1 + 352);
    }
    uint64_t v20 = 8 * v16;
    while (!*v18)
    {
      ++v18;
      v20 -= 8;
      if (!v20) {
        return;
      }
    }
LABEL_28:
    unsigned int v24 = *(re::ecs2::System **)(a1 + 368);
    if (!*((unsigned char *)v24 + 86)) {
      re::ecs2::System::queueToRun(v24, 0.0);
    }
    return;
  }
  if (v17)
  {
    unint64_t v19 = (uint64_t *)(a1 + 344);
    if (!v16) {
      return;
    }
  }
  else
  {
    unint64_t v19 = *(uint64_t **)(a1 + 352);
    if (!v16) {
      return;
    }
  }
  uint64_t v21 = 0;
  uint64_t v22 = 8 * v16;
  do
  {
    uint64_t v23 = *v19++;
    v21 |= v23;
    v22 -= 8;
  }
  while (v22);
  if (v21) {
    goto LABEL_28;
  }
}

uint64_t re::ecs2::MeshSceneSystem::willAddSystemToECSService(re::ecs2::MeshSceneSystem *this)
{
  uint64_t v2 = (*(uint64_t (**)(void))(**((void **)this + 5) + 32))(*((void *)this + 5));
  uint64_t result = re::ServiceLocator::serviceOrNull<re::RenderManager>(v2);
  if (result)
  {
    uint64_t v4 = *(void *)(result + 104);
    if (v4) {
      uint64_t v4 = *(void *)(result + 32);
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
  *((void *)this + 13) = v4;
  return result;
}

uint64_t re::ecs2::MeshSceneSystem::willRemoveSystemFromECSService(uint64_t this)
{
  *(void *)(this + 104) = 0;
  return this;
}

void re::ecs2::MeshSceneSystem::willAddSceneToECSService(re::ecs2::MeshSceneSystem *this, re::EventBus **a2)
{
  uint64_t v77 = *MEMORY[0x263EF8340];
  float32x4_t v54 = (re::ecs2::Scene *)a2;
  float32x4_t v55 = (re::ecs2::Scene *)a2;
  uint64_t v4 = (char *)this + 152;
  uint64_t v5 = (re::ecs2::MeshSceneSystem *)((char *)this + 272);
  unint64_t v6 = *((void *)this + 35);
  int v7 = *((_DWORD *)this + 72);
  if (v6 >= 0xB)
  {
    if (v7) {
      uint64_t v8 = (void *)((char *)this + 296);
    }
    else {
      uint64_t v8 = (void *)*((void *)this + 38);
    }
    uint64_t v10 = 8 * v6;
    while (!*v8)
    {
      ++v8;
      v10 -= 8;
      if (!v10) {
        goto LABEL_17;
      }
    }
    goto LABEL_16;
  }
  if (v7)
  {
    unint64_t v9 = (uint64_t *)((char *)this + 296);
    if (!v6) {
      goto LABEL_17;
    }
  }
  else
  {
    unint64_t v9 = (uint64_t *)*((void *)this + 38);
    if (!v6) {
      goto LABEL_17;
    }
  }
  uint64_t v11 = 0;
  uint64_t v12 = 8 * v6;
  do
  {
    uint64_t v13 = *v9++;
    v11 |= v13;
    v12 -= 8;
  }
  while (v12);
  if (v11)
  {
LABEL_16:
    *(void *)&long long v60 = re::DynamicBitset<unsigned long long,64ul>::findFirstBitSet((uint64_t)this + 272, 0);
    uint64_t v14 = re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::BlendShapeWeightsBufferComponent>,4ul>::operator[]((uint64_t)v4, v60);
    re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::init(v14, (uint64_t)v4, (uint64_t)a2);
    re::HashBrown<re::ecs2::Scene const*,unsigned long,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,void,false>::addNew((re::ecs2::MeshSceneSystem *)((char *)this + 208), &v55, (uint64_t *)&v60);
    re::DynamicBitset<unsigned long long,64ul>::clearBit((uint64_t)v5, v60);
    unint64_t v15 = (char *)this + 320;
    unint64_t v16 = v60;
    goto LABEL_49;
  }
LABEL_17:
  long long v67 = 0u;
  long long v60 = 0u;
  *(void *)&long long v61 = 0;
  *((void *)&v61 + 1) = -1;
  long long v62 = 0u;
  long long v63 = 0u;
  uint64_t v64 = 0;
  uint64_t v65 = 1;
  long long v66 = 0uLL;
  unint64_t v17 = *((void *)this + 24);
  *(void *)&long long v67 = 0;
  unint64_t v18 = *((void *)this + 20);
  DWORD2(v67) = 0;
  if (v17 + 1 > 4 * v18)
  {
    re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>,4ul>::setBucketsCapacity((uint64_t *)this + 19, (v17 + 4) >> 2);
    unint64_t v18 = *((void *)this + 20);
  }
  if (v18 <= v17 >> 2)
  {
    uint64_t v56 = 0;
    memset(v76, 0, sizeof(v76));
    os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
    int v68 = 136315906;
    unint64_t v69 = "operator[]";
    __int16 v70 = 1024;
    int v71 = 858;
    __int16 v72 = 2048;
    unint64_t v73 = v17 >> 2;
    __int16 v74 = 2048;
    unint64_t v75 = v18;
    _os_log_send_and_compose_impl();
    _os_crash_msg();
    __break(1u);
    goto LABEL_71;
  }
  if (*((unsigned char *)this + 168)) {
    unint64_t v19 = (char *)this + 176;
  }
  else {
    unint64_t v19 = (char *)*((void *)this + 23);
  }
  uint64_t v20 = *(void *)&v19[8 * (v17 >> 2)];
  ++*((void *)this + 24);
  ++*((_DWORD *)this + 50);
  uint64_t v21 = v20 + 112 * (v17 & 3);
  long long v22 = v60;
  long long v23 = v61;
  long long v24 = v62;
  *(void *)(v21 + 48) = v63;
  *(_OWORD *)(v21 + 16) = v23;
  *(_OWORD *)(v21 + 32) = v24;
  *(_OWORD *)uint64_t v21 = v22;
  re::BucketArray<RESubscriptionHandle,8ul>::BucketArray(v21 + 56, (uint64_t)&v63 + 8);
  re::ecs2::BasicComponentStateSceneData<re::ecs2::BlendShapeWeightsBufferComponent>::~BasicComponentStateSceneData(&v60);
  uint64_t v26 = *((void *)this + 24);
  if (!v26)
  {
LABEL_71:
    re::internal::assertLog((re::internal *)4, v25, "assertion failure: '%s' (%s:line %i) Array is empty", "m_size > 0", "last", 768, v54, v55, v56);
    _os_crash();
    __break(1u);
  }
  uint64_t v27 = re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::BlendShapeWeightsBufferComponent>,4ul>::operator[]((uint64_t)v4, v26 - 1);
  re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::init(v27, (uint64_t)v4, (uint64_t)v55);
  *(void *)&v76[0] = *((void *)this + 24) - 1;
  re::HashBrown<re::ecs2::Scene const*,unsigned long,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,void,false>::addNew((re::ecs2::MeshSceneSystem *)((char *)this + 208), &v55, (uint64_t *)v76);
  unint64_t v28 = *((void *)this + 24);
  unint64_t v29 = *((void *)this + 39);
  if ((v28 & 0x3F) != 0) {
    unint64_t v30 = (v28 >> 6) + 1;
  }
  else {
    unint64_t v30 = v28 >> 6;
  }
  *((void *)this + 39) = v28;
  *(void *)&long long v60 = 0;
  re::DynamicOverflowArray<unsigned long long,2ul>::resize(v5, v30, &v60);
  if (v28 && v29 > v28)
  {
    uint64_t v31 = 63;
    uint64_t v32 = *((void *)this + 39) & 0x3FLL;
    if (v32 && v32 != 63) {
      uint64_t v31 = ~(-1 << v32);
    }
    if (*((unsigned char *)this + 288)) {
      uint64_t v33 = (char *)this + 296;
    }
    else {
      uint64_t v33 = (char *)*((void *)this + 38);
    }
    *(void *)&v33[8 * *((void *)this + 35) - 8] &= v31;
  }
  unint64_t v34 = *((void *)this + 24);
  unint64_t v35 = *((void *)this + 45);
  if ((v34 & 0x3F) != 0) {
    unint64_t v36 = (v34 >> 6) + 1;
  }
  else {
    unint64_t v36 = v34 >> 6;
  }
  *((void *)this + 45) = v34;
  *(void *)&long long v60 = 0;
  re::DynamicOverflowArray<unsigned long long,2ul>::resize((re::ecs2::MeshSceneSystem *)((char *)this + 320), v36, &v60);
  if (v34 && v35 > v34)
  {
    uint64_t v37 = 63;
    uint64_t v38 = *((void *)this + 45) & 0x3FLL;
    if (v38 && v38 != 63) {
      uint64_t v37 = ~(-1 << v38);
    }
    if (*((unsigned char *)this + 336)) {
      float v39 = (char *)this + 344;
    }
    else {
      float v39 = (char *)*((void *)this + 44);
    }
    *(void *)&v39[8 * *((void *)this + 41) - 8] &= v37;
  }
  unint64_t v16 = *(void *)&v76[0];
  unint64_t v15 = (char *)this + 320;
LABEL_49:
  re::DynamicBitset<unsigned long long,256ul>::setBit((uint64_t)v15, v16);
  if (!*((unsigned char *)this + 384)) {
    goto LABEL_67;
  }
  unint64_t v40 = *((void *)this + 41);
  int v41 = *((_DWORD *)this + 84);
  if (v40 < 0xB)
  {
    if (v41)
    {
      float v43 = (uint64_t *)((char *)this + 344);
      if (!v40) {
        goto LABEL_67;
      }
    }
    else
    {
      float v43 = (uint64_t *)*((void *)this + 44);
      if (!v40) {
        goto LABEL_67;
      }
    }
    uint64_t v45 = 0;
    uint64_t v46 = 8 * v40;
    do
    {
      uint64_t v47 = *v43++;
      v45 |= v47;
      v46 -= 8;
    }
    while (v46);
    if (!v45) {
      goto LABEL_67;
    }
  }
  else
  {
    if (v41) {
      float v42 = (void *)((char *)this + 344);
    }
    else {
      float v42 = (void *)*((void *)this + 44);
    }
    uint64_t v44 = 8 * v40;
    while (!*v42)
    {
      ++v42;
      v44 -= 8;
      if (!v44) {
        goto LABEL_67;
      }
    }
  }
  float v48 = (re::ecs2::System *)*((void *)this + 46);
  if (!*((unsigned char *)v48 + 86)) {
    re::ecs2::System::queueToRun(v48, 0.0);
  }
LABEL_67:
  uint64_t v49 = re::ecs2::SceneComponentTable::get((re::ecs2::SceneComponentTable *)(a2 + 25), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::MeshSceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
  *(void *)&long long v60 = this;
  *((void *)&v60 + 1) = re::ecs2::MeshSceneSystem::willRemoveComponents;
  *(void *)&long long v61 = 0;
  *((void *)&v61 + 1) = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::createSubscription<re::ecs2::MeshSceneSystem>(re::ecs2::MeshSceneSystem *,REEventHandlerResult (re::ecs2::MeshSceneSystem::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Slice<re::ecs2::MeshSceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSceneComponent*>&&)#1}::__invoke;
  re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription((_DWORD *)(v49 + 392), (uint64_t)&v60);
  float v51 = a2[36];
  if (v51)
  {
    uint64_t v58 = re::globalAllocators(v50)[2];
    float32_t v52 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v58 + 32))(v58, 32, 0);
    *float32_t v52 = &unk_26E6E54B8;
    v52[1] = this;
    v52[2] = re::ecs2::MeshSceneSystem::componentDidChangeHandler;
    v52[3] = 0;
    uint64_t v59 = v52;
    *(void *)&long long v60 = re::EventBus::subscribe<re::ecs2::Entity,REComponentDidChangeEvent>(v51, (uint64_t)v57, (uint64_t)re::ecs2::ComponentImpl<re::ecs2::MeshSceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType, 0);
    *((void *)&v60 + 1) = v53;
    re::HashBrown<re::ecs2::Scene *,RESubscriptionHandle,re::Hash<re::ecs2::Scene *>,re::EqualTo<re::ecs2::Scene *>,void,false>::addNew((re::ecs2::MeshSceneSystem *)((char *)this + 392), (uint64_t *)&v54, &v60);
    re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidChangeEvent const&)>::destroyCallable((uint64_t)v57);
  }
}

uint64_t re::ecs2::MeshSceneSystem::willRemoveComponents(uint64_t a1, uint64_t a2, re::ecs2::MeshSceneComponent **a3, uint64_t a4)
{
  if (*(void *)(a1 + 104)) {
    BOOL v4 = a4 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    uint64_t v7 = 8 * a4;
    do
    {
      uint64_t v8 = *a3++;
      re::ecs2::MeshSceneComponent::resetCachedInstances(v8, *(re::MeshManager **)(a1 + 104));
      v7 -= 8;
    }
    while (v7);
  }
  return 0;
}

void *re::HashBrown<re::ecs2::Scene *,RESubscriptionHandle,re::Hash<re::ecs2::Scene *>,re::EqualTo<re::ecs2::Scene *>,void,false>::addNew(_anonymous_namespace_ *a1, uint64_t *a2, long long *a3)
{
  uint64_t v6 = re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::find(a1, a2);
  if (v6 != -1) {
    return (void *)(*((void *)a1 + 1) + 24 * v6 + 8);
  }
  return re::HashBrown<re::ecs2::Scene *,RESubscriptionHandle,re::Hash<re::ecs2::Scene *>,re::EqualTo<re::ecs2::Scene *>,void,false>::internalAdd(a1, a2, a3);
}

uint64_t re::ecs2::MeshSceneSystem::componentDidChangeHandler(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(a2 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::MeshSceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
  if (v2) {
    ++*(_DWORD *)(v2 + 696);
  }
  return 0;
}

uint64_t re::ecs2::MeshSceneSystem::willRemoveSceneFromECSService(re::ecs2::MeshSceneSystem *this, re::ecs2::Scene *a2)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  unint64_t v19 = a2;
  *(void *)&long long v20 = a2;
  BOOL v4 = (uint64_t *)((char *)this + 208);
  uint64_t v5 = re::HashBrown<re::WeakStringID,re::IndexAndProtectionOptions,re::Hash<re::WeakStringID>,re::EqualTo<re::WeakStringID>,re::Hash<re::IndexAndProtectionOptions>,false>::find((void *)this + 26, &v20);
  if (v5 != -1)
  {
    uint64_t v6 = *((void *)this + 27) + 16 * v5;
    re::DynamicBitset<unsigned long long,256ul>::setBit((uint64_t)this + 272, *(void *)(v6 + 8));
    re::DynamicBitset<unsigned long long,64ul>::clearBit((uint64_t)this + 320, *(void *)(v6 + 8));
    uint64_t v7 = (void *)re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::BlendShapeWeightsBufferComponent>,4ul>::operator[]((uint64_t)this + 152, *(void *)(v6 + 8));
    if (*v7)
    {
      uint64_t v8 = v7;
      *uint64_t v7 = 0;
      unint64_t v9 = v7 + 1;
      uint64_t v10 = *(void *)(v7[1] + 288);
      if (v10)
      {
        uint64_t v11 = v7[12];
        if (v11)
        {
          for (unint64_t i = 0; i != v11; ++i)
          {
            uint64_t v13 = re::BucketArray<RESubscriptionHandle,8ul>::operator[]((uint64_t)(v8 + 7), i);
            re::EventBus::unsubscribe(v10, *(void *)v13, *(void *)(v13 + 8));
          }
        }
      }
      re::BucketArray<RESubscriptionHandle,8ul>::deinit((uint64_t)(v8 + 7));
      uint64_t v14 = 0;
      unint64_t v15 = v8 + 3;
      do
      {
        unint64_t v16 = (re::ecs2::ComponentBucketsBase *)v8[2];
        if (*(void *)v16) {
          re::ecs2::ComponentBucketsBase::removeBucket(v16, v15[v14]);
        }
        v15[v14++] = -1;
      }
      while (v14 != 4);
      *unint64_t v9 = 0;
      v9[1] = 0;
    }
    re::HashBrown<re::ecs2::Scene const*,unsigned long,re::Hash<re::ecs2::Scene const*>,re::EqualTo<re::ecs2::Scene const*>,void,false>::remove(v4, &v20);
  }
  uint64_t v17 = re::ecs2::SceneComponentTable::get((re::ecs2::Scene *)((char *)a2 + 200), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::MeshSceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
  *(void *)&long long v20 = this;
  *((void *)&v20 + 1) = re::ecs2::MeshSceneSystem::willRemoveComponents;
  uint64_t v21 = 0;
  long long v22 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::createSubscription<re::ecs2::MeshSceneSystem>(re::ecs2::MeshSceneSystem *,REEventHandlerResult (re::ecs2::MeshSceneSystem::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Slice<re::ecs2::MeshSceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSceneComponent*>&&)#1}::__invoke;
  re::Event<re::GeometricObjectBase>::removeSubscription(v17 + 392, &v20);
  uint64_t result = re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::find((void *)this + 49, (uint64_t *)&v19);
  if (result != -1)
  {
    if (*((void *)v19 + 36)) {
      re::EventBus::unsubscribe(*((void *)v19 + 36), *(void *)(*((void *)this + 50) + 24 * result + 8), *(void *)(*((void *)this + 50) + 24 * result + 16));
    }
    return re::HashBrown<re::ecs2::Scene *,RESubscriptionHandle,re::Hash<re::ecs2::Scene *>,re::EqualTo<re::ecs2::Scene *>,void,false>::remove((uint64_t *)this + 49, (uint64_t *)&v19);
  }
  return result;
}

BOOL re::HashBrown<re::ecs2::Scene *,RESubscriptionHandle,re::Hash<re::ecs2::Scene *>,re::EqualTo<re::ecs2::Scene *>,void,false>::remove(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::find(a1, a2);
  uint64_t v4 = v3;
  if (v3 != -1)
  {
    uint64_t v5 = (int8x16_t *)(*a1 + (v3 & 0xFFFFFFFFFFFFFFF0));
    v6.i64[0] = -1;
    v6.i64[1] = -1;
    int8x8_t v7 = vqtbl1_s8((int8x16_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8((uint8x16_t)vandq_s8(vceqq_s8(*v5, v6), (int8x16_t)xmmword_2343680E0)))), (int8x8_t)0x3830282018100800);
    if (v7) {
      char v8 = -1;
    }
    else {
      char v8 = 0x80;
    }
    v5->i8[v3 & 0xF] = v8;
    unint64_t v9 = a1[2];
    unint64_t v10 = *(void *)(a1[1] + 24 * v3);
    unint64_t v11 = 0x94D049BB133111EBLL
        * ((0xBF58476D1CE4E5B9 * (v10 ^ (v10 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (v10 ^ (v10 >> 30))) >> 27));
    a1[5] ^= (v11 >> 31) ^ v11;
    uint64_t v12 = a1[4];
    if (v7) {
      ++v12;
    }
    unint64_t v13 = a1[3] - 1;
    a1[3] = v13;
    a1[4] = v12;
    if (v9 >= 0x11 && v13 < v9 >> 2) {
      re::HashBrown<re::ecs2::Scene *,RESubscriptionHandle,re::Hash<re::ecs2::Scene *>,re::EqualTo<re::ecs2::Scene *>,void,false>::resize(a1, 0);
    }
  }
  return v4 != -1;
}

uint64_t re::ecs2::MeshSceneComponentStateImpl::dependsOnComponents(re::ecs2::MeshSceneComponentStateImpl *this)
{
  return *((void *)this + 4);
}

uint64_t re::ecs2::BasicComponentStateImpl<re::ecs2::MeshSceneComponent>::processUpdatingComponents()
{
  return 0;
}

void re::ecs2::MeshSceneSystem::~MeshSceneSystem(re::ecs2::MeshSceneSystem *this)
{
  *((void *)this + 14) = &unk_26E6E5398;
  re::FixedArray<CoreIKTransform>::deinit((uint64_t *)this + 16);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392);
  re::ecs2::BasicComponentStates<re::ecs2::BlendShapeWeightsBufferComponent>::~BasicComponentStates((void *)this + 19);
  *((void *)this + 14) = &unk_26E6E5398;
  re::FixedArray<CoreIKTransform>::deinit((uint64_t *)this + 16);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::MeshSceneSystem::typeInfo(re::ecs2::MeshSceneSystem *this)
{
  return re::internal::getOrCreateInfo((re::internal *)"MeshSceneSystem", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_MeshSceneSystem, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_MeshSceneSystem, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::MeshSceneSystem>, 0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::MeshSceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::MeshSceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::MeshSceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::MeshSceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::MeshSceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::internal::CallableMemFn<re::ecs2::MeshSceneSystem,REEventHandlerResult (re::ecs2::MeshSceneSystem::*)(re::ecs2::Entity *,REComponentDidChangeEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidChangeEvent const&)>::~CallableMemFn()
{
}

uint64_t re::internal::CallableMemFn<re::ecs2::MeshSceneSystem,REEventHandlerResult (re::ecs2::MeshSceneSystem::*)(re::ecs2::Entity *,REComponentDidChangeEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidChangeEvent const&)>::operator()(void *a1, void *a2)
{
  uint64_t v2 = (uint64_t (*)(void *, void))a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = (void *)(a1[1] + (v3 >> 1));
  if (v3) {
    uint64_t v2 = *(uint64_t (**)(void *, void))(*v4 + v2);
  }
  return v2(v4, *a2);
}

uint64_t re::internal::CallableMemFn<re::ecs2::MeshSceneSystem,REEventHandlerResult (re::ecs2::MeshSceneSystem::*)(re::ecs2::Entity *,REComponentDidChangeEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidChangeEvent const&)>::cloneInto(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26E6E54B8;
  long long v2 = *(_OWORD *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(_OWORD *)(a2 + 8) = v2;
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::MeshSceneSystem,REEventHandlerResult (re::ecs2::MeshSceneSystem::*)(re::ecs2::Entity *,REComponentDidChangeEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidChangeEvent const&)>::moveInto(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)a2 = &unk_26E6E54B8;
  *(void *)(a2 + 8) = v2;
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::MeshSceneSystem,REEventHandlerResult (re::ecs2::MeshSceneSystem::*)(re::ecs2::Entity *,REComponentDidChangeEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidChangeEvent const&)>::size()
{
  return 32;
}

void *re::IntrospectionHashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::~IntrospectionHashTable(void *a1)
{
  *a1 = &unk_26E6C0400;
  uint64_t v2 = (uint64_t)(a1 + 6);
  re::SerializedReference<re::IntrospectionBase const*>::reset((uint64_t)(a1 + 8));
  re::SerializedReference<re::IntrospectionBase const*>::reset(v2);
  *a1 = &unk_26E6DECE0;
  objc_destructInstance(a1 + 1);
  return a1;
}

void re::IntrospectionHashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::~IntrospectionHashTable(void *a1)
{
  *a1 = &unk_26E6C0400;
  uint64_t v2 = (uint64_t)(a1 + 6);
  re::SerializedReference<re::IntrospectionBase const*>::reset((uint64_t)(a1 + 8));
  re::SerializedReference<re::IntrospectionBase const*>::reset(v2);
  *a1 = &unk_26E6DECE0;
  objc_destructInstance(a1 + 1);
  JUMPOUT(0x237DBCBD0);
}

double re::IntrospectionHashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::construct(uint64_t a1, uint64_t a2)
{
  double result = 0.0;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)a2 = 0u;
  *(_DWORD *)(a2 + 36) = 0x7FFFFFFF;
  return result;
}

double re::IntrospectionHashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::destroy(uint64_t a1, uint64_t *a2)
{
  return re::HashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::deinit(a2);
}

void re::IntrospectionHashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::init(uint64_t a1, uint64_t *a2, uint64_t a3, unsigned int a4)
{
  re::HashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::deinit(a2);
  if (a4 <= 3) {
    signed int v7 = 3;
  }
  else {
    signed int v7 = a4;
  }
  re::HashTable<re::StringID,unsigned int,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::init((uint64_t)a2, a3, v7);
}

void re::IntrospectionHashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::setCapacity(uint64_t a1, uint64_t a2, unsigned int a3)
{
}

uint64_t re::IntrospectionHashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::size(uint64_t a1, uint64_t a2)
{
  return *(unsigned int *)(a2 + 28);
}

void re::IntrospectionHashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::clear(uint64_t a1, uint64_t a2)
{
}

re::IntrospectionBase *re::IntrospectionHashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::addElement(uint64_t a1, re *a2, int a3, uint64_t a4, _DWORD *a5)
{
  v10[0] = 0;
  v10[1] = (uint64_t)"";
  char v8 = (re::IntrospectionBase *)re::HashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::addOrReplace(a4, a5, v10);
  re::StringID::destroyString((re::StringID *)v10);
  re::introspectionInitElement(a2, a3, *(re::Allocator **)(a1 + 64), v8);
  return v8;
}

uint64_t re::IntrospectionHashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::iterate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(unsigned int *)(a2 + 32);
  if (v5)
  {
    uint64_t v6 = 0;
    signed int v7 = (int *)(*(void *)(a2 + 16) + 8);
    while (1)
    {
      int v8 = *v7;
      v7 += 8;
      if (v8 < 0) {
        break;
      }
      if (v5 == ++v6)
      {
        LODWORD(v6) = *(_DWORD *)(a2 + 32);
        break;
      }
    }
  }
  else
  {
    LODWORD(v6) = 0;
  }
  if (v5 == v6) {
    return 1;
  }
  uint64_t v10 = v6;
  do
  {
    uint64_t result = std::function<BOOL ()(void const*,void *)>::operator()(a3, *(void *)(a2 + 16) + 32 * v10 + 12, *(void *)(a2 + 16) + 32 * v10 + 16);
    if (!result) {
      break;
    }
    int v11 = *(_DWORD *)(a2 + 32) <= (v6 + 1) ? v6 + 1 : *(_DWORD *)(a2 + 32);
    while (1)
    {
      uint64_t v10 = (v6 + 1);
      if (v11 - 1 == v6) {
        break;
      }
      LODWORD(v6) = v6 + 1;
      int v12 = v10;
      if ((*(_DWORD *)(*(void *)(a2 + 16) + 32 * v10 + 8) & 0x80000000) != 0) {
        goto LABEL_18;
      }
    }
    int v12 = v11;
LABEL_18:
    LODWORD(v6) = v12;
  }
  while (v5 != v12);
  return result;
}

double re::HashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::deinit(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2)
  {
    unint64_t v3 = *((unsigned int *)a1 + 8);
    if (v3)
    {
      unint64_t v4 = 0;
      uint64_t v5 = 8;
      do
      {
        uint64_t v6 = a1[2];
        int v7 = *(_DWORD *)(v6 + v5);
        if (v7 < 0)
        {
          *(_DWORD *)(v6 + v5) = v7 & 0x7FFFFFFF;
          re::StringID::destroyString((re::StringID *)(v6 + v5 + 8));
          unint64_t v3 = *((unsigned int *)a1 + 8);
        }
        ++v4;
        v5 += 32;
      }
      while (v4 < v3);
      uint64_t v2 = *a1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)v2 + 40))(v2, a1[1]);
    *((_DWORD *)a1 + 8) = 0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
    *(void *)&double result = 0x7FFFFFFFLL;
    *(uint64_t *)((char *)a1 + 36) = 0x7FFFFFFFLL;
  }
  return result;
}

void re::HashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::setCapacity(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = *(void *)a1;
  if (*(void *)a1)
  {
    if (a2 && *(_DWORD *)(a1 + 24) != a2 && *(_DWORD *)(a1 + 28) <= a2)
    {
      memset(v13, 0, 36);
      *(void *)&v13[36] = 0x7FFFFFFFLL;
      re::HashTable<re::StringID,unsigned int,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::init((uint64_t)v13, v4, a2);
      long long v5 = *(_OWORD *)v13;
      *(_OWORD *)unint64_t v13 = *(_OWORD *)a1;
      *(_OWORD *)a1 = v5;
      uint64_t v6 = *(void *)&v13[16];
      *(void *)&v13[16] = *(void *)(a1 + 16);
      *(void *)(a1 + 16) = v6;
      long long v8 = *(_OWORD *)&v13[24];
      *(_OWORD *)&v13[24] = *(_OWORD *)(a1 + 24);
      unsigned int v7 = *(_DWORD *)&v13[32];
      *(_OWORD *)(a1 + 24) = v8;
      unsigned int v9 = v7;
      if (v7)
      {
        uint64_t v10 = 0;
        unint64_t v11 = 0;
        do
        {
          if ((*(_DWORD *)(*(void *)&v13[16] + v10 + 8) & 0x80000000) != 0)
          {
            re::HashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::addAsMove(a1, *(void *)(*(void *)&v13[16] + v10) % (unint64_t)*(unsigned int *)(a1 + 24), *(void *)(*(void *)&v13[16] + v10), *(void *)&v13[16] + v10 + 12, *(void *)&v13[16] + v10 + 16);
            unsigned int v9 = *(_DWORD *)&v13[32];
          }
          ++v11;
          v10 += 32;
        }
        while (v11 < v9);
      }
      re::HashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::deinit((uint64_t *)v13);
    }
  }
  else
  {
    if (a2) {
      signed int v12 = a2;
    }
    else {
      signed int v12 = 3;
    }
  }
}

uint64_t re::HashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::addAsMove(uint64_t a1, unsigned int a2, unint64_t a3, _DWORD *a4, uint64_t *a5)
{
  uint64_t v9 = *(unsigned int *)(a1 + 36);
  if (v9 == 0x7FFFFFFF)
  {
    uint64_t v9 = *(unsigned int *)(a1 + 32);
    int v10 = v9;
    if (v9 == *(_DWORD *)(a1 + 24))
    {
      re::HashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::setCapacity(a1, 2 * *(_DWORD *)(a1 + 28));
      a2 = a3 % *(unsigned int *)(a1 + 24);
      int v10 = *(_DWORD *)(a1 + 32);
    }
    *(_DWORD *)(a1 + 32) = v10 + 1;
    uint64_t v11 = *(void *)(a1 + 16);
    int v12 = *(_DWORD *)(v11 + 32 * v9 + 8);
  }
  else
  {
    uint64_t v11 = *(void *)(a1 + 16);
    int v12 = *(_DWORD *)(v11 + 32 * v9 + 8);
    *(_DWORD *)(a1 + 36) = v12 & 0x7FFFFFFF;
  }
  *(_DWORD *)(v11 + 32 * v9 + 8) = v12 | 0x80000000;
  *(_DWORD *)(*(void *)(a1 + 16) + 32 * v9 + 8) = *(_DWORD *)(*(void *)(a1 + 16) + 32 * v9 + 8) & 0x80000000 | *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2);
  *(void *)(*(void *)(a1 + 16) + 32 * v9) = a3;
  *(_DWORD *)(*(void *)(a1 + 16) + 32 * v9 + 12) = *a4;
  uint64_t v13 = *(void *)(a1 + 16) + 32 * v9;
  uint64_t v14 = *a5;
  *(void *)(v13 + 16) = *(void *)(v13 + 16) & 0xFFFFFFFFFFFFFFFELL | *a5 & 1;
  *(void *)(v13 + 16) = *a5 & 0xFFFFFFFFFFFFFFFELL | v14 & 1;
  *(void *)(v13 + 24) = a5[1];
  *a5 = 0;
  a5[1] = (uint64_t)"";
  *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2) = v9;
  ++*(_DWORD *)(a1 + 28);
  return v9;
}

void re::HashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::clear(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 28))
  {
    uint64_t v2 = *(unsigned int *)(a1 + 24);
    if (v2) {
      memset_pattern16(*(void **)(a1 + 8), &unk_2343655D0, 4 * v2);
    }
    unint64_t v3 = *(unsigned int *)(a1 + 32);
    if (v3)
    {
      unint64_t v4 = 0;
      uint64_t v5 = 8;
      do
      {
        uint64_t v6 = *(void *)(a1 + 16);
        int v7 = *(_DWORD *)(v6 + v5);
        if (v7 < 0)
        {
          *(_DWORD *)(v6 + v5) = v7 & 0x7FFFFFFF;
          re::StringID::destroyString((re::StringID *)(v6 + v5 + 8));
          unint64_t v3 = *(unsigned int *)(a1 + 32);
        }
        ++v4;
        v5 += 32;
      }
      while (v4 < v3);
    }
    *(_DWORD *)(a1 + 28) = 0;
    *(_DWORD *)(a1 + 32) = 0;
    int v8 = *(_DWORD *)(a1 + 40) + 1;
    *(_DWORD *)(a1 + 36) = 0x7FFFFFFF;
    *(_DWORD *)(a1 + 40) = v8;
  }
}

uint64_t re::HashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::addOrReplace(uint64_t a1, _DWORD *a2, uint64_t *a3)
{
  unint64_t v6 = *a2;
  unint64_t v7 = 0x94D049BB133111EBLL
     * ((0xBF58476D1CE4E5B9 * (v6 ^ (v6 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (v6 ^ (v6 >> 30))) >> 27));
  unint64_t v8 = v7 ^ (v7 >> 31);
  if (!*(void *)a1)
  {
    LODWORD(v9) = 0;
    goto LABEL_8;
  }
  unint64_t v9 = v8 % *(unsigned int *)(a1 + 24);
  uint64_t v10 = *(unsigned int *)(*(void *)(a1 + 8) + 4 * v9);
  if (v10 == 0x7FFFFFFF)
  {
LABEL_8:
    unsigned int v19 = re::HashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::addAsMove(a1, v9, v8, a2, a3);
    ++*(_DWORD *)(a1 + 40);
    uint64_t v18 = *(void *)(a1 + 16) + 32 * v19;
    return v18 + 16;
  }
  uint64_t v11 = *(void *)(a1 + 16);
  while (*(_DWORD *)(v11 + 32 * v10 + 12) != v6)
  {
    int v12 = *(_DWORD *)(v11 + 32 * v10 + 8);
    uint64_t v10 = v12 & 0x7FFFFFFF;
    if ((v12 & 0x7FFFFFFF) == 0x7FFFFFFF) {
      goto LABEL_8;
    }
  }
  uint64_t v13 = v11 + 32 * v10;
  uint64_t v14 = *a3;
  uint64_t v15 = a3[1];
  *a3 = 0;
  a3[1] = (uint64_t)"";
  uint64_t v16 = *(void *)(v13 + 16);
  uint64_t v17 = *(void *)(v13 + 24);
  *(void *)(v13 + 16) = v14;
  *(void *)(v13 + 24) = v15;
  v21[0] = v14 & 0xFFFFFFFFFFFFFFFELL | v16 & 1;
  v21[1] = v17;
  re::StringID::destroyString((re::StringID *)v21);
  ++*(_DWORD *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 16) + 32 * v10;
  return v18 + 16;
}

BOOL re::internal::less<unsigned int>(_DWORD *a1, _DWORD *a2)
{
  return *a1 < *a2;
}

void re::TypeBuilderHelper::registerHashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#1}::__invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_DWORD *)(a1 + 36) = 0x7FFFFFFF;
  re::HashTable<re::StringID,unsigned int,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::init(a1, a3, 3);
}

double re::TypeBuilderHelper::registerHashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#2}::__invoke(uint64_t *a1)
{
  re::HashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::deinit(a1);
  return re::HashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::deinit(a1);
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#1}::__invoke(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

void re::TypeBuilderHelper::registerHashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *)#1}::__invoke(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (*a1 == a3)
  {
    re::HashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::clear((uint64_t)a1);
  }
  else
  {
    re::HashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::deinit(a1);
    re::HashTable<re::StringID,unsigned int,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::init((uint64_t)a1, a3, 3);
  }
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#3}::__invoke(uint64_t a1, void **a2, re::Allocator *a3, _DWORD *a4)
{
  re::TypeRegistry::typeInfo(*a2, a2[2][10], v12);
  re::TypeInfo::TypeInfo((uint64_t)v11, (uint64_t)v13);
  Instance = (uint64_t *)re::TypeInfo::createInstance((re::TypeInfo *)v11, a3, 0);
  uint64_t v9 = re::HashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::addOrReplace(a1, a4, Instance);
  re::TypeRegistry::typeInfo(*a2, a2[2][10], v12);
  re::TypeInfo::TypeInfo((uint64_t)v11, (uint64_t)v13);
  re::TypeInfo::releaseInstance((re::TypeInfo *)v11, Instance, a3, 0);
  return v9;
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,void const*)#1}::__invoke(uint64_t a1, unsigned int *a2)
{
  if (!*(void *)a1) {
    return 0;
  }
  unint64_t v2 = *a2;
  unint64_t v3 = 0x94D049BB133111EBLL
     * ((0xBF58476D1CE4E5B9 * (v2 ^ (v2 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (v2 ^ (v2 >> 30))) >> 27));
  uint64_t v4 = *(unsigned int *)(*(void *)(a1 + 8) + 4 * ((v3 ^ (v3 >> 31)) % *(unsigned int *)(a1 + 24)));
  if (v4 == 0x7FFFFFFF) {
    return 0;
  }
  uint64_t v6 = *(void *)(a1 + 16);
  if (*(_DWORD *)(v6 + 32 * v4 + 12) != v2)
  {
    while (1)
    {
      uint64_t v4 = *(_DWORD *)(v6 + 32 * v4 + 8) & 0x7FFFFFFF;
      if (v4 == 0x7FFFFFFF) {
        break;
      }
      if (*(_DWORD *)(v6 + 32 * v4 + 12) == v2) {
        return v6 + 32 * v4 + 16;
      }
    }
    return 0;
  }
  return v6 + 32 * v4 + 16;
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::Allocator *)#1}::__invoke(uint64_t a1, uint64_t a2)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a2 + 32))(a2, 40, 8);
  *(void *)uint64_t result = a1;
  *(_DWORD *)(result + 8) = *(_DWORD *)(a1 + 40);
  *(unsigned char *)(result + 16) = 0;
  return result;
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#2}::__invoke(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  if (*((_DWORD *)a1 + 2) == *(_DWORD *)(*a1 + 40))
  {
    uint64_t v3 = *(unsigned int *)(v2 + 32);
    if (*((unsigned char *)a1 + 16))
    {
      int v4 = *((_DWORD *)a1 + 8);
      if (v4 == v3)
      {
        LODWORD(v5) = *(_DWORD *)(v2 + 32);
      }
      else
      {
        uint64_t v8 = a1[3];
        unsigned int v9 = *(_DWORD *)(v8 + 32);
        unsigned int v10 = v4 + 1;
        do
        {
          LODWORD(v5) = v10;
          *((_DWORD *)a1 + 8) = v10;
          if (v10 >= v9) {
            break;
          }
          int v11 = *(_DWORD *)(*(void *)(v8 + 16) + 32 * v10++ + 8);
        }
        while ((v11 & 0x80000000) == 0);
      }
    }
    else
    {
      uint64_t v5 = 0;
      if (v3)
      {
        uint64_t v6 = (int *)(*(void *)(v2 + 16) + 8);
        while (1)
        {
          int v7 = *v6;
          v6 += 8;
          if (v7 < 0) {
            break;
          }
          if (v3 == ++v5)
          {
            LODWORD(v5) = *(_DWORD *)(v2 + 32);
            break;
          }
        }
      }
      *((unsigned char *)a1 + 16) = 1;
      a1[3] = v2;
      a1[4] = v5;
      LODWORD(v3) = *(_DWORD *)(v2 + 32);
    }
    return v5 != v3;
  }
  else
  {
    re::internal::assertLog((re::internal *)4, a2, "assertion failure: '%s' (%s:line %i) HashTable entries may not be added or removed during iteration.", "iter->originalVersion == iter->hashTable->version()", "operator()", 583);
    uint64_t result = _os_crash();
    __break(1u);
  }
  return result;
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#3}::__invoke(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a1 + 8) == *(_DWORD *)(*(void *)a1 + 40)) {
    return *(void *)(*(void *)(a1 + 24) + 16) + 32 * *(unsigned int *)(a1 + 32) + 12;
  }
  re::internal::assertLog((re::internal *)4, a2, "assertion failure: '%s' (%s:line %i) HashTable entries may not be added or removed during iteration.", "iter->originalVersion == iter->hashTable->version()", "operator()", 598);
  uint64_t result = _os_crash();
  __break(1u);
  return result;
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#4}::__invoke(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a1 + 8) == *(_DWORD *)(*(void *)a1 + 40)) {
    return *(void *)(*(void *)(a1 + 24) + 16) + 32 * *(unsigned int *)(a1 + 32) + 16;
  }
  re::internal::assertLog((re::internal *)4, a2, "assertion failure: '%s' (%s:line %i) HashTable entries may not be added or removed during iteration.", "iter->originalVersion == iter->hashTable->version()", "operator()", 607);
  uint64_t result = _os_crash();
  __break(1u);
  return result;
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::Allocator *)#2}::__invoke(_DWORD *a1, uint64_t a2)
{
  if (a1[2] == *(_DWORD *)(*(void *)a1 + 40))
  {
    uint64_t v2 = *(uint64_t (**)(uint64_t, _DWORD *))(*(void *)a2 + 40);
    return v2(a2, a1);
  }
  else
  {
    re::internal::assertLog((re::internal *)4, a2, "assertion failure: '%s' (%s:line %i) HashTable entries may not be added or removed during iteration.", "iter->originalVersion == iter->hashTable->version()", "operator()", 616);
    uint64_t result = _os_crash();
    __break(1u);
  }
  return result;
}

void *re::IntrospectionHashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::~IntrospectionHashTable(void *a1)
{
  *a1 = &unk_26E6C0400;
  uint64_t v2 = (uint64_t)(a1 + 6);
  re::SerializedReference<re::IntrospectionBase const*>::reset((uint64_t)(a1 + 8));
  re::SerializedReference<re::IntrospectionBase const*>::reset(v2);
  *a1 = &unk_26E6DECE0;
  objc_destructInstance(a1 + 1);
  return a1;
}

void re::IntrospectionHashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::~IntrospectionHashTable(void *a1)
{
  *a1 = &unk_26E6C0400;
  uint64_t v2 = (uint64_t)(a1 + 6);
  re::SerializedReference<re::IntrospectionBase const*>::reset((uint64_t)(a1 + 8));
  re::SerializedReference<re::IntrospectionBase const*>::reset(v2);
  *a1 = &unk_26E6DECE0;
  objc_destructInstance(a1 + 1);
  JUMPOUT(0x237DBCBD0);
}

double re::IntrospectionHashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::construct(uint64_t a1, uint64_t a2)
{
  double result = 0.0;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)a2 = 0u;
  *(_DWORD *)(a2 + 36) = 0x7FFFFFFF;
  return result;
}

double re::IntrospectionHashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::destroy(uint64_t a1, uint64_t *a2)
{
  return re::HashTable<re::ecs2::Entity *,re::SortingPlane,re::Hash<re::ecs2::Entity *>,re::EqualTo<re::ecs2::Entity *>,true,false>::deinit(a2);
}

void re::IntrospectionHashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::init(uint64_t a1, uint64_t *a2, uint64_t a3, unsigned int a4)
{
  re::HashTable<re::ecs2::Entity *,re::SortingPlane,re::Hash<re::ecs2::Entity *>,re::EqualTo<re::ecs2::Entity *>,true,false>::deinit(a2);
  if (a4 <= 3) {
    signed int v7 = 3;
  }
  else {
    signed int v7 = a4;
  }
  re::HashTable<unsigned long long,re::Function<void ()(void)>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::init((uint64_t)a2, a3, v7);
}

void re::IntrospectionHashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::setCapacity(uint64_t a1, uint64_t a2, unsigned int a3)
{
}

uint64_t re::IntrospectionHashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::size(uint64_t a1, uint64_t a2)
{
  return *(unsigned int *)(a2 + 28);
}

void re::IntrospectionHashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::clear(uint64_t a1, uint64_t a2)
{
}

re::IntrospectionBase *re::IntrospectionHashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::addElement(uint64_t a1, re *a2, int a3, uint64_t a4, _DWORD *a5)
{
  *(void *)&long long v10 = 0x3F8000003F800000;
  *((void *)&v10 + 1) = 1065353216;
  uint64_t v11 = 0;
  uint64_t v12 = 0x3F80000000000000;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t v8 = (re::IntrospectionBase *)re::HashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::addOrReplace(a4, a5, &v10);
  re::introspectionInitElement(a2, a3, *(re::Allocator **)(a1 + 64), v8);
  return v8;
}

uint64_t re::IntrospectionHashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::iterate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(unsigned int *)(a2 + 32);
  if (v5)
  {
    uint64_t v6 = 0;
    signed int v7 = (int *)(*(void *)(a2 + 16) + 8);
    while (1)
    {
      int v8 = *v7;
      v7 += 16;
      if (v8 < 0) {
        break;
      }
      if (v5 == ++v6)
      {
        LODWORD(v6) = *(_DWORD *)(a2 + 32);
        break;
      }
    }
  }
  else
  {
    LODWORD(v6) = 0;
  }
  if (v5 == v6) {
    return 1;
  }
  uint64_t v10 = v6;
  do
  {
    uint64_t result = std::function<BOOL ()(void const*,void *)>::operator()(a3, *(void *)(a2 + 16) + (v10 << 6) + 12, *(void *)(a2 + 16) + (v10 << 6) + 16);
    if (!result) {
      break;
    }
    int v11 = *(_DWORD *)(a2 + 32) <= (v6 + 1) ? v6 + 1 : *(_DWORD *)(a2 + 32);
    while (1)
    {
      uint64_t v10 = (v6 + 1);
      if (v11 - 1 == v6) {
        break;
      }
      LODWORD(v6) = v6 + 1;
      int v12 = v10;
      if ((*(_DWORD *)(*(void *)(a2 + 16) + (v10 << 6) + 8) & 0x80000000) != 0) {
        goto LABEL_18;
      }
    }
    int v12 = v11;
LABEL_18:
    LODWORD(v6) = v12;
  }
  while (v5 != v12);
  return result;
}

void re::HashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::setCapacity(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = *(void *)a1;
  if (*(void *)a1)
  {
    if (a2 && *(_DWORD *)(a1 + 24) != a2 && *(_DWORD *)(a1 + 28) <= a2)
    {
      memset(v13, 0, 36);
      *(void *)&v13[36] = 0x7FFFFFFFLL;
      re::HashTable<unsigned long long,re::Function<void ()(void)>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::init((uint64_t)v13, v4, a2);
      long long v5 = *(_OWORD *)v13;
      *(_OWORD *)uint64_t v13 = *(_OWORD *)a1;
      *(_OWORD *)a1 = v5;
      uint64_t v6 = *(void *)&v13[16];
      *(void *)&v13[16] = *(void *)(a1 + 16);
      *(void *)(a1 + 16) = v6;
      long long v8 = *(_OWORD *)&v13[24];
      *(_OWORD *)&v13[24] = *(_OWORD *)(a1 + 24);
      unsigned int v7 = *(_DWORD *)&v13[32];
      *(_OWORD *)(a1 + 24) = v8;
      unsigned int v9 = v7;
      if (v7)
      {
        uint64_t v10 = 0;
        unint64_t v11 = 0;
        do
        {
          if ((*(_DWORD *)(*(void *)&v13[16] + v10 + 8) & 0x80000000) != 0)
          {
            re::HashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::addAsMove(a1, *(void *)(*(void *)&v13[16] + v10) % (unint64_t)*(unsigned int *)(a1 + 24), *(void *)(*(void *)&v13[16] + v10), *(void *)&v13[16] + v10 + 12, *(void *)&v13[16] + v10 + 16);
            unsigned int v9 = *(_DWORD *)&v13[32];
          }
          ++v11;
          v10 += 64;
        }
        while (v11 < v9);
      }
      re::HashTable<re::ecs2::Entity *,re::SortingPlane,re::Hash<re::ecs2::Entity *>,re::EqualTo<re::ecs2::Entity *>,true,false>::deinit((uint64_t *)v13);
    }
  }
  else
  {
    if (a2) {
      signed int v12 = a2;
    }
    else {
      signed int v12 = 3;
    }
  }
}

uint64_t re::HashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::addAsMove(uint64_t a1, unsigned int a2, unint64_t a3, _DWORD *a4, long long *a5)
{
  uint64_t v9 = *(unsigned int *)(a1 + 36);
  if (v9 == 0x7FFFFFFF)
  {
    uint64_t v9 = *(unsigned int *)(a1 + 32);
    int v10 = v9;
    if (v9 == *(_DWORD *)(a1 + 24))
    {
      re::HashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::setCapacity(a1, 2 * *(_DWORD *)(a1 + 28));
      a2 = a3 % *(unsigned int *)(a1 + 24);
      int v10 = *(_DWORD *)(a1 + 32);
    }
    *(_DWORD *)(a1 + 32) = v10 + 1;
    uint64_t v11 = *(void *)(a1 + 16);
    int v12 = *(_DWORD *)(v11 + (v9 << 6) + 8);
  }
  else
  {
    uint64_t v11 = *(void *)(a1 + 16);
    int v12 = *(_DWORD *)(v11 + (v9 << 6) + 8);
    *(_DWORD *)(a1 + 36) = v12 & 0x7FFFFFFF;
  }
  *(_DWORD *)(v11 + (v9 << 6) + 8) = v12 | 0x80000000;
  *(_DWORD *)(*(void *)(a1 + 16) + (v9 << 6) + 8) = *(_DWORD *)(*(void *)(a1 + 16) + (v9 << 6) + 8) & 0x80000000 | *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2);
  *(void *)(*(void *)(a1 + 16) + (v9 << 6)) = a3;
  *(_DWORD *)(*(void *)(a1 + 16) + (v9 << 6) + 12) = *a4;
  uint64_t v13 = (_OWORD *)(*(void *)(a1 + 16) + (v9 << 6));
  long long v14 = *a5;
  long long v15 = a5[2];
  v13[2] = a5[1];
  v13[3] = v15;
  v13[1] = v14;
  *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2) = v9;
  ++*(_DWORD *)(a1 + 28);
  return v9;
}

void re::HashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::clear(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 28))
  {
    uint64_t v2 = *(unsigned int *)(a1 + 24);
    if (v2) {
      memset_pattern16(*(void **)(a1 + 8), &unk_2343655D0, 4 * v2);
    }
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    if (v3)
    {
      uint64_t v4 = 0;
      uint64_t v5 = v3 << 6;
      do
      {
        uint64_t v6 = *(void *)(a1 + 16) + v4;
        int v7 = *(_DWORD *)(v6 + 8);
        if (v7 < 0) {
          *(_DWORD *)(v6 + 8) = v7 & 0x7FFFFFFF;
        }
        v4 += 64;
      }
      while (v5 != v4);
    }
    *(_DWORD *)(a1 + 28) = 0;
    *(_DWORD *)(a1 + 32) = 0;
    int v8 = *(_DWORD *)(a1 + 40) + 1;
    *(_DWORD *)(a1 + 36) = 0x7FFFFFFF;
    *(_DWORD *)(a1 + 40) = v8;
  }
}

uint64_t re::HashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::addOrReplace(uint64_t a1, _DWORD *a2, long long *a3)
{
  unint64_t v6 = *a2;
  unint64_t v7 = 0x94D049BB133111EBLL
     * ((0xBF58476D1CE4E5B9 * (v6 ^ (v6 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (v6 ^ (v6 >> 30))) >> 27));
  unint64_t v8 = v7 ^ (v7 >> 31);
  if (!*(void *)a1)
  {
    LODWORD(v9) = 0;
    goto LABEL_8;
  }
  unint64_t v9 = v8 % *(unsigned int *)(a1 + 24);
  uint64_t v10 = *(unsigned int *)(*(void *)(a1 + 8) + 4 * v9);
  if (v10 == 0x7FFFFFFF)
  {
LABEL_8:
    unsigned int v16 = re::HashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::addAsMove(a1, v9, v8, a2, a3);
    ++*(_DWORD *)(a1 + 40);
    uint64_t v15 = *(void *)(a1 + 16);
    uint64_t v10 = v16;
    return v15 + (v10 << 6) + 16;
  }
  uint64_t v11 = *(void *)(a1 + 16);
  while (*(_DWORD *)(v11 + (v10 << 6) + 12) != v6)
  {
    uint64_t v10 = *(_DWORD *)(v11 + (v10 << 6) + 8) & 0x7FFFFFFF;
    if (v10 == 0x7FFFFFFF) {
      goto LABEL_8;
    }
  }
  int v12 = (_OWORD *)(v11 + (v10 << 6));
  long long v13 = *a3;
  long long v14 = a3[2];
  uint64_t v12[2] = a3[1];
  void v12[3] = v14;
  v12[1] = v13;
  ++*(_DWORD *)(a1 + 40);
  uint64_t v15 = *(void *)(a1 + 16);
  return v15 + (v10 << 6) + 16;
}

void re::TypeBuilderHelper::registerHashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#1}::__invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_DWORD *)(a1 + 36) = 0x7FFFFFFF;
  re::HashTable<unsigned long long,re::Function<void ()(void)>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::init(a1, a3, 3);
}

double re::TypeBuilderHelper::registerHashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#2}::__invoke(uint64_t *a1)
{
  re::HashTable<re::ecs2::Entity *,re::SortingPlane,re::Hash<re::ecs2::Entity *>,re::EqualTo<re::ecs2::Entity *>,true,false>::deinit(a1);
  return re::HashTable<re::ecs2::Entity *,re::SortingPlane,re::Hash<re::ecs2::Entity *>,re::EqualTo<re::ecs2::Entity *>,true,false>::deinit(a1);
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#1}::__invoke(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

void re::TypeBuilderHelper::registerHashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *)#1}::__invoke(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (*a1 == a3)
  {
    re::HashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::clear((uint64_t)a1);
  }
  else
  {
    re::HashTable<re::ecs2::Entity *,re::SortingPlane,re::Hash<re::ecs2::Entity *>,re::EqualTo<re::ecs2::Entity *>,true,false>::deinit(a1);
    re::HashTable<unsigned long long,re::Function<void ()(void)>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::init((uint64_t)a1, a3, 3);
  }
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#3}::__invoke(uint64_t a1, void **a2, re::Allocator *a3, _DWORD *a4)
{
  re::TypeRegistry::typeInfo(*a2, a2[2][10], v12);
  re::TypeInfo::TypeInfo((uint64_t)v11, (uint64_t)v13);
  Instance = (long long *)re::TypeInfo::createInstance((re::TypeInfo *)v11, a3, 0);
  uint64_t v9 = re::HashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::addOrReplace(a1, a4, Instance);
  re::TypeRegistry::typeInfo(*a2, a2[2][10], v12);
  re::TypeInfo::TypeInfo((uint64_t)v11, (uint64_t)v13);
  re::TypeInfo::releaseInstance((re::TypeInfo *)v11, Instance, a3, 0);
  return v9;
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,void const*)#1}::__invoke(uint64_t a1, unsigned int *a2)
{
  if (!*(void *)a1) {
    return 0;
  }
  unint64_t v2 = *a2;
  unint64_t v3 = 0x94D049BB133111EBLL
     * ((0xBF58476D1CE4E5B9 * (v2 ^ (v2 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (v2 ^ (v2 >> 30))) >> 27));
  uint64_t v4 = *(unsigned int *)(*(void *)(a1 + 8) + 4 * ((v3 ^ (v3 >> 31)) % *(unsigned int *)(a1 + 24)));
  if (v4 == 0x7FFFFFFF) {
    return 0;
  }
  uint64_t v6 = *(void *)(a1 + 16);
  if (*(_DWORD *)(v6 + (v4 << 6) + 12) != v2)
  {
    while (1)
    {
      uint64_t v4 = *(_DWORD *)(v6 + (v4 << 6) + 8) & 0x7FFFFFFF;
      if (v4 == 0x7FFFFFFF) {
        break;
      }
      if (*(_DWORD *)(v6 + (v4 << 6) + 12) == v2) {
        return v6 + (v4 << 6) + 16;
      }
    }
    return 0;
  }
  return v6 + (v4 << 6) + 16;
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::Allocator *)#1}::__invoke(uint64_t a1, uint64_t a2)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a2 + 32))(a2, 40, 8);
  *(void *)uint64_t result = a1;
  *(_DWORD *)(result + 8) = *(_DWORD *)(a1 + 40);
  *(unsigned char *)(result + 16) = 0;
  return result;
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#2}::__invoke(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  if (*((_DWORD *)a1 + 2) == *(_DWORD *)(*a1 + 40))
  {
    uint64_t v3 = *(unsigned int *)(v2 + 32);
    if (*((unsigned char *)a1 + 16))
    {
      int v4 = *((_DWORD *)a1 + 8);
      if (v4 == v3)
      {
        LODWORD(v5) = *(_DWORD *)(v2 + 32);
      }
      else
      {
        uint64_t v8 = a1[3];
        unsigned int v9 = *(_DWORD *)(v8 + 32);
        unsigned int v10 = v4 + 1;
        do
        {
          LODWORD(v5) = v10;
          *((_DWORD *)a1 + 8) = v10;
          if (v10 >= v9) {
            break;
          }
          int v11 = *(_DWORD *)(*(void *)(v8 + 16) + ((unint64_t)v10++ << 6) + 8);
        }
        while ((v11 & 0x80000000) == 0);
      }
    }
    else
    {
      uint64_t v5 = 0;
      if (v3)
      {
        uint64_t v6 = (int *)(*(void *)(v2 + 16) + 8);
        while (1)
        {
          int v7 = *v6;
          v6 += 16;
          if (v7 < 0) {
            break;
          }
          if (v3 == ++v5)
          {
            LODWORD(v5) = *(_DWORD *)(v2 + 32);
            break;
          }
        }
      }
      *((unsigned char *)a1 + 16) = 1;
      a1[3] = v2;
      a1[4] = v5;
      LODWORD(v3) = *(_DWORD *)(v2 + 32);
    }
    return v5 != v3;
  }
  else
  {
    re::internal::assertLog((re::internal *)4, a2, "assertion failure: '%s' (%s:line %i) HashTable entries may not be added or removed during iteration.", "iter->originalVersion == iter->hashTable->version()", "operator()", 583);
    uint64_t result = _os_crash();
    __break(1u);
  }
  return result;
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#3}::__invoke(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a1 + 8) == *(_DWORD *)(*(void *)a1 + 40)) {
    return *(void *)(*(void *)(a1 + 24) + 16) + ((unint64_t)*(unsigned int *)(a1 + 32) << 6) + 12;
  }
  re::internal::assertLog((re::internal *)4, a2, "assertion failure: '%s' (%s:line %i) HashTable entries may not be added or removed during iteration.", "iter->originalVersion == iter->hashTable->version()", "operator()", 598);
  uint64_t result = _os_crash();
  __break(1u);
  return result;
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#4}::__invoke(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a1 + 8) == *(_DWORD *)(*(void *)a1 + 40)) {
    return *(void *)(*(void *)(a1 + 24) + 16) + ((unint64_t)*(unsigned int *)(a1 + 32) << 6) + 16;
  }
  re::internal::assertLog((re::internal *)4, a2, "assertion failure: '%s' (%s:line %i) HashTable entries may not be added or removed during iteration.", "iter->originalVersion == iter->hashTable->version()", "operator()", 607);
  uint64_t result = _os_crash();
  __break(1u);
  return result;
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned int,re::GenericSRT<float>,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::Allocator *)#2}::__invoke(_DWORD *a1, uint64_t a2)
{
  if (a1[2] == *(_DWORD *)(*(void *)a1 + 40))
  {
    uint64_t v2 = *(uint64_t (**)(uint64_t, _DWORD *))(*(void *)a2 + 40);
    return v2(a2, a1);
  }
  else
  {
    re::internal::assertLog((re::internal *)4, a2, "assertion failure: '%s' (%s:line %i) HashTable entries may not be added or removed during iteration.", "iter->originalVersion == iter->hashTable->version()", "operator()", 616);
    uint64_t result = _os_crash();
    __break(1u);
  }
  return result;
}

void *re::make::shared::unsafelyInplace<re::ecs2::MeshSceneComponent>(void *a1)
{
  bzero(a1, 0x2C0uLL);
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)a1, 0);
  a1[2] = 0;
  *((unsigned char *)a1 + 24) = 0;
  *a1 = &unk_26E6E5340;
  *((_OWORD *)a1 + 2) = 0u;
  *((_OWORD *)a1 + 3) = 0u;
  *((_DWORD *)a1 + 16) = 0;
  *(void *)((char *)a1 + 68) = 0x7FFFFFFFLL;
  *((_OWORD *)a1 + 5) = 0u;
  *((_OWORD *)a1 + 6) = 0u;
  *((_DWORD *)a1 + 28) = 0;
  *(void *)((char *)a1 + 116) = 0x7FFFFFFFLL;
  *((_OWORD *)a1 + 8) = 0u;
  *((_OWORD *)a1 + 9) = 0u;
  *((_DWORD *)a1 + 40) = 0;
  *(void *)((char *)a1 + 164) = 0x7FFFFFFFLL;
  a1[26] = 0;
  a1[23] = 0;
  a1[24] = 0;
  a1[22] = 0;
  *((_DWORD *)a1 + 50) = 0;
  *((_DWORD *)a1 + 54) = 0;
  *((_OWORD *)a1 + 14) = 0u;
  *((_OWORD *)a1 + 15) = 0u;
  *(_OWORD *)((char *)a1 + 252) = 0u;
  *(void *)((char *)a1 + 268) = 0x7FFFFFFFLL;
  *((_DWORD *)a1 + 78) = 0;
  *(_OWORD *)(a1 + 35) = 0u;
  *(_OWORD *)(a1 + 37) = 0u;
  *(void *)((char *)a1 + 316) = 0x7FFFFFFFLL;
  a1[79] = 0;
  *(_OWORD *)(a1 + 41) = 0u;
  *(_OWORD *)(a1 + 43) = 0u;
  *(_OWORD *)(a1 + 45) = 0u;
  *(_OWORD *)(a1 + 47) = 0u;
  *(_OWORD *)(a1 + 49) = 0u;
  *(_OWORD *)(a1 + 51) = 0u;
  *(_OWORD *)(a1 + 53) = 0u;
  *(_OWORD *)(a1 + 55) = 0u;
  *(_OWORD *)(a1 + 57) = 0u;
  *(_OWORD *)(a1 + 59) = 0u;
  *(_OWORD *)(a1 + 61) = 0u;
  *(_OWORD *)(a1 + 63) = 0u;
  *(_OWORD *)(a1 + 65) = 0u;
  *(_OWORD *)(a1 + 67) = 0u;
  *(_OWORD *)(a1 + 69) = 0u;
  *(_OWORD *)(a1 + 71) = 0u;
  *(_OWORD *)(a1 + 73) = 0u;
  *(_OWORD *)(a1 + 75) = 0u;
  *(_OWORD *)(a1 + 77) = 0u;
  inited = (re *)objc_initWeak((id *)a1 + 80, 0);
  a1[81] = 0;
  a1[85] = re::globalAllocators(inited)[2];
  a1[86] = 0;
  a1[87] = 0;
  return a1;
}

re::ecs2::MeshSceneSystem *re::ecs2::MeshSceneSystem::MeshSceneSystem(re::ecs2::MeshSceneSystem *this)
{
  v11[1] = *MEMORY[0x263EF8340];
  re::ecs2::System::System((uint64_t)this, 1, 1);
  *uint64_t v2 = &unk_26E6E5400;
  uint64_t v3 = v2 + 14;
  v2[13] = 0;
  v2[14] = &unk_26E6E5398;
  v2[15] = v2;
  v2[17] = 0;
  v2[18] = 0;
  v2[16] = 0;
  uint64_t v10 = 1;
  v11[0] = re::ecs2::ComponentImpl<re::ecs2::MeshComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
  unsigned int v9 = v11;
  int v4 = re::FixedArray<re::ecs2::ComponentTypeBase const*>::operator=((_anonymous_namespace_ *)(v2 + 16), (uint64_t)&v9);
  *((void *)this + re::ecs2::BasicComponentStates<re::ecs2::BlendShapeWeightsBufferComponent>::~BasicComponentStates((void *)this + 19) = 0;
  *((void *)this + 20) = 0;
  *((_DWORD *)this + 42) = 1;
  *((void *)this + 23) = 0;
  *((void *)this + 24) = 0;
  *((void *)this + 22) = 0;
  *((_DWORD *)this + 50) = 0;
  *((_OWORD *)this + 14) = 0u;
  *((_OWORD *)this + 15) = 0u;
  *((_OWORD *)this + 16) = 0u;
  *((_OWORD *)this + 17) = 0u;
  *((_OWORD *)this + 13) = 0u;
  *((_DWORD *)this + 72) = 1;
  *((void *)this + 41) = 0;
  *(_OWORD *)((char *)this + 296) = 0u;
  *(_OWORD *)((char *)this + 312) = 0u;
  *((_DWORD *)this + 84) = 1;
  *(_OWORD *)((char *)this + 369) = 0u;
  *(_OWORD *)((char *)this + 344) = 0u;
  *(_OWORD *)((char *)this + 360) = 0u;
  int v7 = (_anonymous_namespace_ *)re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)this + 34, 0);
  *((_DWORD *)this + 72) += 2;
  *((void *)this + 39) = 0;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)this + 40, 0);
  *((_DWORD *)this + 84) += 2;
  *((void *)this + 45) = 0;
  *((void *)this + 46) = this;
  *((void *)this + 47) = v3;
  *((unsigned char *)this + 384) = 1;
  LOWORD(v9) = 257;
  HIDWORD(v9) = 1023969417;
  LOBYTE(v10) = 0;
  re::ecs2::System::setTaskOptions(this, (uint64_t *)&v9);
  *(_OWORD *)((char *)this + 424) = 0u;
  *(_OWORD *)((char *)this + 440) = 0u;
  *(_OWORD *)((char *)this + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0u;
  *(_OWORD *)((char *)this + 408) = 0u;
  return this;
}

uint64_t re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>,4ul>::init(uint64_t a1, uint64_t a2, unint64_t a3)
{
  *(void *)a1 = a2;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)a1, a3);
  *(_DWORD *)(a1 + 16) += 2;
  *(void *)(a1 + 40) = 0;
  uint64_t result = re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>,4ul>::setBucketsCapacity(a1, a3);
  ++*(_DWORD *)(a1 + 48);
  return result;
}

uint64_t *re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>,4ul>::setBucketsCapacity(uint64_t *result, unint64_t a2)
{
  uint64_t v3 = result;
  if (*result)
  {
    if (result[5] < 4 * a2)
    {
      while (1)
      {
        unint64_t v4 = v3[1];
        if (v4 <= a2) {
          break;
        }
        uint64_t result = (uint64_t *)re::BucketArray<re::CollisionCastHit,10ul>::freeElementBucket(v3);
      }
      while (v4 < a2)
      {
        uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)*v3 + 32))(*v3, 448, 0);
        uint64_t result = (uint64_t *)re::DynamicOverflowArray<RESubscriptionHandle *,2ul>::add((uint64_t)v3, &v5);
        unint64_t v4 = v3[1];
      }
    }
  }
  else
  {
  }
  return result;
}

id re::internal::defaultRetain<re::ecs2::MeshSceneSystem>(void)::{lambda(void *)#1}::__invoke(uint64_t a1)
{
  return (id)(a1 + 8);
}

void re::internal::defaultRelease<re::ecs2::MeshSceneSystem>(void)::{lambda(void *)#1}::__invoke(uint64_t a1)
{
}

void *re::DynamicOverflowArray<unsigned int,8ul>::setCapacity(void *result, unint64_t a2)
{
  unint64_t v4 = result;
  uint64_t v5 = *result;
  if (a2 && !v5)
  {
    uint64_t result = (void *)re::DynamicOverflowArray<unsigned int,8ul>::setCapacity(v4, a2);
    int v6 = *((_DWORD *)v4 + 4) + 2;
LABEL_4:
    *((_DWORD *)v4 + 4) = v6;
    return result;
  }
  int v7 = *((_DWORD *)result + 4);
  if (v7) {
    uint64_t v8 = 8;
  }
  else {
    uint64_t v8 = result[3];
  }
  if (v8 != a2)
  {
    unint64_t v9 = result[1];
    if (v9 <= a2 && (a2 > 8 || (v7 & 1) == 0))
    {
      if (a2 < 9)
      {
        long long v14 = result + 3;
        uint64_t v15 = v4[4];
        if (v7) {
          unsigned int v16 = v4 + 3;
        }
        else {
          unsigned int v16 = (const void *)v4[4];
        }
        memcpy(v14, v16, 4 * v9);
        uint64_t result = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v5 + 40))(v5, v15);
        int v6 = *((_DWORD *)v4 + 4) | 1;
        goto LABEL_4;
      }
      if (a2 >> 62)
      {
        re::internal::assertLog((re::internal *)6, a2, "assertion failure: '%s' (%s:line %i) Size overflow in DynamicOverflowArray<T, N>::setCapacity(). Element size = %zu, capacity = %zu", "!overflow", "setCapacity", 646, 4, a2);
        _os_crash();
        __break(1u);
      }
      else
      {
        uint64_t v2 = 4 * a2;
        uint64_t v10 = (void *)(*(uint64_t (**)(void, unint64_t, uint64_t))(*(void *)v5 + 32))(*result, 4 * a2, 4);
        if (v10)
        {
          int v12 = v10;
          if (v4[2]) {
            long long v13 = v4 + 3;
          }
          else {
            long long v13 = (const void *)v4[4];
          }
          uint64_t result = memcpy(v10, v13, 4 * v4[1]);
          int v17 = *((_DWORD *)v4 + 4);
          if ((v17 & 1) == 0)
          {
            uint64_t result = (void *)(*(uint64_t (**)(void, void))(*(void *)*v4 + 40))(*v4, v4[4]);
            int v17 = *((_DWORD *)v4 + 4);
          }
          *((_DWORD *)v4 + 4) = v17 & 0xFFFFFFFE;
          v4[3] = a2;
          v4[4] = v12;
          return result;
        }
      }
      re::internal::assertLog((re::internal *)6, v11, "assertion failure: '%s' (%s:line %i) DynamicOverflowArray<T, N> is out of memory (tried to allocate %zu bytes from allocator '%s').", "newData", "setCapacity", 650, v2, *(void *)(*v4 + 8));
      uint64_t result = (void *)_os_crash();
      __break(1u);
    }
  }
  return result;
}

uint64_t re::HashTable<unsigned int,re::StringID,re::Hash<unsigned int>,re::EqualTo<unsigned int>,true,false>::tryGet(uint64_t a1, unsigned int a2)
{
  if (!*(void *)a1) {
    return 0;
  }
  unint64_t v2 = 0xBF58476D1CE4E5B9 * (a2 ^ ((unint64_t)a2 >> 30));
  uint64_t v3 = *(unsigned int *)(*(void *)(a1 + 8)
                       + 4
                       * (((0x94D049BB133111EBLL * (v2 ^ (v2 >> 27))) ^ ((0x94D049BB133111EBLL * (v2 ^ (v2 >> 27))) >> 31))
                        % *(unsigned int *)(a1 + 24)));
  if (v3 == 0x7FFFFFFF) {
    return 0;
  }
  uint64_t v5 = *(void *)(a1 + 16);
  if (*(_DWORD *)(v5 + 32 * v3 + 12) != a2)
  {
    while (1)
    {
      uint64_t v3 = *(_DWORD *)(v5 + 32 * v3 + 8) & 0x7FFFFFFF;
      if (v3 == 0x7FFFFFFF) {
        break;
      }
      if (*(_DWORD *)(v5 + 32 * v3 + 12) == a2) {
        return v5 + 32 * v3 + 16;
      }
    }
    return 0;
  }
  return v5 + 32 * v3 + 16;
}

re *re::internal::destroyPersistent<re::ecs2::MeshSceneComponent::FramePersistentMeshSceneData>(re *result)
{
  if (result)
  {
    unint64_t v1 = (uint64_t *)result;
    uint64_t v2 = re::globalAllocators(result)[2];
    re::FixedArray<CoreIKTransform>::deinit(v1 + 3);
    re::FixedArray<CoreIKTransform>::deinit(v1);
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t *))(*(void *)v2 + 40);
    return (re *)v3(v2, v1);
  }
  return result;
}

void re::internal::Callable<re::FramePersistentPtr<re::ecs2::MeshSceneComponent::FramePersistentMeshSceneData,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::MeshSceneComponent::FramePersistentMeshSceneData*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::~Callable()
{
}

re *re::internal::Callable<re::FramePersistentPtr<re::ecs2::MeshSceneComponent::FramePersistentMeshSceneData,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::MeshSceneComponent::FramePersistentMeshSceneData*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::operator()(uint64_t a1, re **a2)
{
  return re::internal::destroyPersistent<re::ecs2::MeshSceneComponent::FramePersistentMeshSceneData>(*a2);
}

void *re::internal::Callable<re::FramePersistentPtr<re::ecs2::MeshSceneComponent::FramePersistentMeshSceneData,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::MeshSceneComponent::FramePersistentMeshSceneData*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::cloneInto(uint64_t a1, void *a2)
{
  uint64_t result = a2;
  *a2 = &unk_26E6E5650;
  return result;
}

void *re::internal::Callable<re::FramePersistentPtr<re::ecs2::MeshSceneComponent::FramePersistentMeshSceneData,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::MeshSceneComponent::FramePersistentMeshSceneData*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::moveInto(uint64_t a1, void *a2)
{
  uint64_t result = a2;
  *a2 = &unk_26E6E5650;
  return result;
}

uint64_t re::internal::Callable<re::FramePersistentPtr<re::ecs2::MeshSceneComponent::FramePersistentMeshSceneData,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::MeshSceneComponent::FramePersistentMeshSceneData*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::size()
{
  return 16;
}

uint64_t re::ecs2::ComponentBucketsBase::component(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v4 = re::BucketArray<re::Matrix4x4<float>,8ul>::operator[](a1 + 8, a2);
  uint64_t result = re::DataArray<re::ecs2::Component *>::tryGet(v4, a3);
  if (result) {
    return *(void *)result;
  }
  return result;
}

uint64_t *re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::init(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v84 = *MEMORY[0x263EF8340];
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = re::ecs2::SceneComponentTable::get((re::ecs2::SceneComponentTable *)(a3 + 200), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::MeshSceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)+ 480;
  for (uint64_t i = 24; i != 56; i += 8)
  {
    int v7 = (_anonymous_namespace_ *)re::ecs2::ComponentBucketsBase::addBucket(*(re::ecs2::ComponentBucketsBase **)(a1 + 16));
    *(void *)(a1 + i) = v7;
  }
  unint64_t v9 = *(re::EventBus **)(a3 + 288);
  if (v9)
  {
    uint64_t v82 = re::globalAllocators((re *)result)[2];
    uint64_t v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v82 + 32))(v82, 32, 0);
    *uint64_t v10 = &unk_26E6E56A8;
    v10[1] = a1;
    uint64_t v10[2] = re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::componentChangedHandler<REComponentDidChangeEvent>;
    v10[3] = 0;
    unint64_t v83 = v10;
    uint64_t v11 = re::EventBus::subscribe<re::ecs2::Entity,REComponentDidChangeEvent>(v9, (uint64_t)v81, (uint64_t)re::ecs2::ComponentImpl<re::ecs2::MeshSceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType, 0);
    uint64_t v13 = v12;
    long long v14 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(a1 + 56);
    *long long v14 = v11;
    v14[1] = v13;
    uint64_t v15 = (re *)re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidChangeEvent const&)>::destroyCallable((uint64_t)v81);
    uint64_t v79 = re::globalAllocators(v15)[2];
    unsigned int v16 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v79 + 32))(v79, 32, 0);
    *unsigned int v16 = &unk_26E6E5700;
    v16[1] = a1;
    void v16[2] = re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::componentChangedHandler<REComponentDidActivateEvent>;
    void v16[3] = 0;
    uint64_t v80 = v16;
    uint64_t v17 = re::EventBus::subscribe<re::ecs2::Entity,REComponentDidActivateEvent>(v9, (uint64_t)v78, (uint64_t)re::ecs2::ComponentImpl<re::ecs2::MeshSceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType, 0);
    uint64_t v19 = v18;
    long long v20 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(a1 + 56);
    *long long v20 = v17;
    v20[1] = v19;
    uint64_t v21 = (re *)re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidActivateEvent const&)>::destroyCallable((uint64_t)v78);
    uint64_t v76 = re::globalAllocators(v21)[2];
    long long v22 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v76 + 32))(v76, 32, 0);
    *long long v22 = &unk_26E6E5758;
    v22[1] = a1;
    uint64_t v22[2] = re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::componentChangedHandler<REComponentWillDeactivateEvent>;
    v22[3] = 0;
    uint64_t v77 = v22;
    uint64_t v23 = re::EventBus::subscribe<re::ecs2::Entity,REComponentWillDeactivateEvent>(v9, (uint64_t)v75, (uint64_t)re::ecs2::ComponentImpl<re::ecs2::MeshSceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType, 0);
    uint64_t v25 = v24;
    uint64_t v26 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(a1 + 56);
    *uint64_t v26 = v23;
    v26[1] = v25;
    uint64_t v27 = (re *)re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentWillDeactivateEvent const&)>::destroyCallable((uint64_t)v75);
    uint64_t v73 = re::globalAllocators(v27)[2];
    unint64_t v28 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v73 + 32))(v73, 32, 0);
    *unint64_t v28 = &unk_26E6E57B0;
    v28[1] = a1;
    void v28[2] = re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::componentChangedHandler<REComponentDidAddEvent>;
    v28[3] = 0;
    __int16 v74 = v28;
    uint64_t v29 = re::EventBus::subscribe<re::ecs2::Entity,REComponentDidAddEvent>(v9, (uint64_t)v72, (uint64_t)re::ecs2::ComponentImpl<re::ecs2::MeshSceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType, 0);
    uint64_t v31 = v30;
    uint64_t v32 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(a1 + 56);
    *uint64_t v32 = v29;
    v32[1] = v31;
    re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidAddEvent const&)>::destroyCallable((uint64_t)v72);
    uint64_t result = (uint64_t *)(***(uint64_t (****)(void))(a2 + 224))();
    if (v33)
    {
      unint64_t v34 = result;
      uint64_t v35 = 8 * v33;
      do
      {
        uint64_t v36 = *v34++;
        uint64_t v70 = re::globalAllocators((re *)result)[2];
        int v71 = 0;
        uint64_t v37 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v70 + 32))(v70, 32, 0);
        *uint64_t v37 = &unk_26E6E56A8;
        v37[1] = a1;
        uint64_t v37[2] = re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::dependentComponentChangedHandler<REComponentDidChangeEvent>;
        v37[3] = 0;
        int v71 = v37;
        uint64_t v38 = re::EventBus::subscribe<re::ecs2::Entity,REComponentDidChangeEvent>(v9, (uint64_t)v69, v36, 0);
        uint64_t v40 = v39;
        int v41 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(a1 + 56);
        *int v41 = v38;
        v41[1] = v40;
        float v42 = (re *)re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidChangeEvent const&)>::destroyCallable((uint64_t)v69);
        uint64_t v67 = re::globalAllocators(v42)[2];
        int v68 = 0;
        float v43 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v67 + 32))(v67, 32, 0);
        *float v43 = &unk_26E6E5700;
        v43[1] = a1;
        v43[2] = re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::dependentComponentChangedHandler<REComponentDidActivateEvent>;
        v43[3] = 0;
        int v68 = v43;
        uint64_t v44 = re::EventBus::subscribe<re::ecs2::Entity,REComponentDidActivateEvent>(v9, (uint64_t)v66, v36, 0);
        uint64_t v46 = v45;
        uint64_t v47 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(a1 + 56);
        *uint64_t v47 = v44;
        v47[1] = v46;
        float v48 = (re *)re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidActivateEvent const&)>::destroyCallable((uint64_t)v66);
        uint64_t v64 = re::globalAllocators(v48)[2];
        uint64_t v65 = 0;
        uint64_t v49 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v64 + 32))(v64, 32, 0);
        void *v49 = &unk_26E6E5758;
        v49[1] = a1;
        v49[2] = re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::dependentComponentChangedHandler<REComponentWillDeactivateEvent>;
        v49[3] = 0;
        uint64_t v65 = v49;
        uint64_t v50 = re::EventBus::subscribe<re::ecs2::Entity,REComponentWillDeactivateEvent>(v9, (uint64_t)v63, v36, 0);
        uint64_t v52 = v51;
        uint64_t v53 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(a1 + 56);
        void *v53 = v50;
        v53[1] = v52;
        float32x4_t v54 = (re *)re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentWillDeactivateEvent const&)>::destroyCallable((uint64_t)v63);
        uint64_t v61 = re::globalAllocators(v54)[2];
        long long v62 = 0;
        float32x4_t v55 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v61 + 32))(v61, 32, 0);
        *float32x4_t v55 = &unk_26E6E57B0;
        v55[1] = a1;
        v55[2] = re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::dependentComponentChangedHandler<REComponentDidAddEvent>;
        v55[3] = 0;
        long long v62 = v55;
        uint64_t v56 = re::EventBus::subscribe<re::ecs2::Entity,REComponentDidAddEvent>(v9, (uint64_t)v60, v36, 0);
        uint64_t v58 = v57;
        uint64_t v59 = (void *)re::BucketArray<RESubscriptionHandle,8ul>::addUninitialized(a1 + 56);
        void *v59 = v56;
        v59[1] = v58;
        uint64_t result = (uint64_t *)re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidAddEvent const&)>::destroyCallable((uint64_t)v60);
        v35 -= 8;
      }
      while (v35);
    }
  }
  return result;
}

uint64_t re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::componentChangedHandler<REComponentDidChangeEvent>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v24 = *(void *)(a1 + 8);
  uint64_t v5 = re::HashBrown<re::WeakStringID,re::IndexAndProtectionOptions,re::Hash<re::WeakStringID>,re::EqualTo<re::WeakStringID>,re::Hash<re::IndexAndProtectionOptions>,false>::find((void *)(v4 + 56), &v24);
  if (v5 == -1) {
    goto LABEL_20;
  }
  re::DynamicBitset<unsigned long long,256ul>::setBit(v4 + 168, *(void *)(*(void *)(v4 + 64) + 16 * v5 + 8));
  if (!*(unsigned char *)(v4 + 232)) {
    goto LABEL_20;
  }
  unint64_t v6 = *(void *)(v4 + 176);
  int v7 = *(_DWORD *)(v4 + 184);
  if (v6 >= 0xB)
  {
    if (v7) {
      uint64_t v8 = (void *)(v4 + 192);
    }
    else {
      uint64_t v8 = *(void **)(v4 + 200);
    }
    uint64_t v10 = 8 * v6;
    while (!*v8)
    {
      ++v8;
      v10 -= 8;
      if (!v10) {
        goto LABEL_20;
      }
    }
LABEL_18:
    long long v14 = *(re::ecs2::System **)(v4 + 216);
    if (!*((unsigned char *)v14 + 86)) {
      re::ecs2::System::queueToRun(v14, 0.0);
    }
    goto LABEL_20;
  }
  if (v7)
  {
    unint64_t v9 = (uint64_t *)(v4 + 192);
    if (!v6) {
      goto LABEL_20;
    }
  }
  else
  {
    unint64_t v9 = *(uint64_t **)(v4 + 200);
    if (!v6) {
      goto LABEL_20;
    }
  }
  uint64_t v11 = 0;
  uint64_t v12 = 8 * v6;
  do
  {
    uint64_t v13 = *v9++;
    v11 |= v13;
    v12 -= 8;
  }
  while (v12);
  if (v11) {
    goto LABEL_18;
  }
LABEL_20:
  uint64_t v15 = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(a2 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::MeshSceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
  if (v15)
  {
    unsigned int v16 = (re::ecs2::Component *)v15;
    for (uint64_t i = 24; i != 56; i += 8)
    {
      unint64_t v18 = re::ecs2::ComponentBucketsBase::componentHandle(*(re::ecs2::ComponentBucketsBase **)(a1 + 16), *(void *)(a1 + i), v16);
      if (v18 != -1 && (v19 & 0xFFFFFF00000000) != 0)
      {
        re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::setComponentState(a1, v18, v19);
        return 0;
      }
    }
    unint64_t v21 = re::ecs2::ComponentBucketsBase::addComponent(*(re::ecs2::ComponentBucketsBase **)(a1 + 16), *(void *)(a1 + 24), v16);
    (*(void (**)(void, uint64_t, unint64_t, uint64_t))(**(void **)(*(void *)a1 + 224) + 16))(*(void *)(*(void *)a1 + 224), a1, v21, v22);
  }
  return 0;
}

uint64_t re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::componentChangedHandler<REComponentDidActivateEvent>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v24 = *(void *)(a1 + 8);
  uint64_t v5 = re::HashBrown<re::WeakStringID,re::IndexAndProtectionOptions,re::Hash<re::WeakStringID>,re::EqualTo<re::WeakStringID>,re::Hash<re::IndexAndProtectionOptions>,false>::find((void *)(v4 + 56), &v24);
  if (v5 == -1) {
    goto LABEL_20;
  }
  re::DynamicBitset<unsigned long long,256ul>::setBit(v4 + 168, *(void *)(*(void *)(v4 + 64) + 16 * v5 + 8));
  if (!*(unsigned char *)(v4 + 232)) {
    goto LABEL_20;
  }
  unint64_t v6 = *(void *)(v4 + 176);
  int v7 = *(_DWORD *)(v4 + 184);
  if (v6 >= 0xB)
  {
    if (v7) {
      uint64_t v8 = (void *)(v4 + 192);
    }
    else {
      uint64_t v8 = *(void **)(v4 + 200);
    }
    uint64_t v10 = 8 * v6;
    while (!*v8)
    {
      ++v8;
      v10 -= 8;
      if (!v10) {
        goto LABEL_20;
      }
    }
LABEL_18:
    long long v14 = *(re::ecs2::System **)(v4 + 216);
    if (!*((unsigned char *)v14 + 86)) {
      re::ecs2::System::queueToRun(v14, 0.0);
    }
    goto LABEL_20;
  }
  if (v7)
  {
    unint64_t v9 = (uint64_t *)(v4 + 192);
    if (!v6) {
      goto LABEL_20;
    }
  }
  else
  {
    unint64_t v9 = *(uint64_t **)(v4 + 200);
    if (!v6) {
      goto LABEL_20;
    }
  }
  uint64_t v11 = 0;
  uint64_t v12 = 8 * v6;
  do
  {
    uint64_t v13 = *v9++;
    v11 |= v13;
    v12 -= 8;
  }
  while (v12);
  if (v11) {
    goto LABEL_18;
  }
LABEL_20:
  uint64_t v15 = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(a2 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::MeshSceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
  if (v15)
  {
    unsigned int v16 = (re::ecs2::Component *)v15;
    for (uint64_t i = 24; i != 56; i += 8)
    {
      unint64_t v18 = re::ecs2::ComponentBucketsBase::componentHandle(*(re::ecs2::ComponentBucketsBase **)(a1 + 16), *(void *)(a1 + i), v16);
      if (v18 != -1 && (v19 & 0xFFFFFF00000000) != 0)
      {
        re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::setComponentState(a1, v18, v19);
        return 0;
      }
    }
    unint64_t v21 = re::ecs2::ComponentBucketsBase::addComponent(*(re::ecs2::ComponentBucketsBase **)(a1 + 16), *(void *)(a1 + 24), v16);
    (*(void (**)(void, uint64_t, unint64_t, uint64_t))(**(void **)(*(void *)a1 + 224) + 16))(*(void *)(*(void *)a1 + 224), a1, v21, v22);
  }
  return 0;
}

uint64_t re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::componentChangedHandler<REComponentWillDeactivateEvent>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v24 = *(void *)(a1 + 8);
  uint64_t v5 = re::HashBrown<re::WeakStringID,re::IndexAndProtectionOptions,re::Hash<re::WeakStringID>,re::EqualTo<re::WeakStringID>,re::Hash<re::IndexAndProtectionOptions>,false>::find((void *)(v4 + 56), &v24);
  if (v5 == -1) {
    goto LABEL_20;
  }
  re::DynamicBitset<unsigned long long,256ul>::setBit(v4 + 168, *(void *)(*(void *)(v4 + 64) + 16 * v5 + 8));
  if (!*(unsigned char *)(v4 + 232)) {
    goto LABEL_20;
  }
  unint64_t v6 = *(void *)(v4 + 176);
  int v7 = *(_DWORD *)(v4 + 184);
  if (v6 >= 0xB)
  {
    if (v7) {
      uint64_t v8 = (void *)(v4 + 192);
    }
    else {
      uint64_t v8 = *(void **)(v4 + 200);
    }
    uint64_t v10 = 8 * v6;
    while (!*v8)
    {
      ++v8;
      v10 -= 8;
      if (!v10) {
        goto LABEL_20;
      }
    }
LABEL_18:
    long long v14 = *(re::ecs2::System **)(v4 + 216);
    if (!*((unsigned char *)v14 + 86)) {
      re::ecs2::System::queueToRun(v14, 0.0);
    }
    goto LABEL_20;
  }
  if (v7)
  {
    unint64_t v9 = (uint64_t *)(v4 + 192);
    if (!v6) {
      goto LABEL_20;
    }
  }
  else
  {
    unint64_t v9 = *(uint64_t **)(v4 + 200);
    if (!v6) {
      goto LABEL_20;
    }
  }
  uint64_t v11 = 0;
  uint64_t v12 = 8 * v6;
  do
  {
    uint64_t v13 = *v9++;
    v11 |= v13;
    v12 -= 8;
  }
  while (v12);
  if (v11) {
    goto LABEL_18;
  }
LABEL_20:
  uint64_t v15 = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(a2 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::MeshSceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
  if (v15)
  {
    unsigned int v16 = (re::ecs2::Component *)v15;
    for (uint64_t i = 24; i != 56; i += 8)
    {
      unint64_t v18 = re::ecs2::ComponentBucketsBase::componentHandle(*(re::ecs2::ComponentBucketsBase **)(a1 + 16), *(void *)(a1 + i), v16);
      if (v18 != -1 && (v19 & 0xFFFFFF00000000) != 0)
      {
        re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::setComponentState(a1, v18, v19);
        return 0;
      }
    }
    unint64_t v21 = re::ecs2::ComponentBucketsBase::addComponent(*(re::ecs2::ComponentBucketsBase **)(a1 + 16), *(void *)(a1 + 24), v16);
    (*(void (**)(void, uint64_t, unint64_t, uint64_t))(**(void **)(*(void *)a1 + 224) + 16))(*(void *)(*(void *)a1 + 224), a1, v21, v22);
  }
  return 0;
}

uint64_t re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::componentChangedHandler<REComponentDidAddEvent>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v24 = *(void *)(a1 + 8);
  uint64_t v5 = re::HashBrown<re::WeakStringID,re::IndexAndProtectionOptions,re::Hash<re::WeakStringID>,re::EqualTo<re::WeakStringID>,re::Hash<re::IndexAndProtectionOptions>,false>::find((void *)(v4 + 56), &v24);
  if (v5 == -1) {
    goto LABEL_20;
  }
  re::DynamicBitset<unsigned long long,256ul>::setBit(v4 + 168, *(void *)(*(void *)(v4 + 64) + 16 * v5 + 8));
  if (!*(unsigned char *)(v4 + 232)) {
    goto LABEL_20;
  }
  unint64_t v6 = *(void *)(v4 + 176);
  int v7 = *(_DWORD *)(v4 + 184);
  if (v6 >= 0xB)
  {
    if (v7) {
      uint64_t v8 = (void *)(v4 + 192);
    }
    else {
      uint64_t v8 = *(void **)(v4 + 200);
    }
    uint64_t v10 = 8 * v6;
    while (!*v8)
    {
      ++v8;
      v10 -= 8;
      if (!v10) {
        goto LABEL_20;
      }
    }
LABEL_18:
    long long v14 = *(re::ecs2::System **)(v4 + 216);
    if (!*((unsigned char *)v14 + 86)) {
      re::ecs2::System::queueToRun(v14, 0.0);
    }
    goto LABEL_20;
  }
  if (v7)
  {
    unint64_t v9 = (uint64_t *)(v4 + 192);
    if (!v6) {
      goto LABEL_20;
    }
  }
  else
  {
    unint64_t v9 = *(uint64_t **)(v4 + 200);
    if (!v6) {
      goto LABEL_20;
    }
  }
  uint64_t v11 = 0;
  uint64_t v12 = 8 * v6;
  do
  {
    uint64_t v13 = *v9++;
    v11 |= v13;
    v12 -= 8;
  }
  while (v12);
  if (v11) {
    goto LABEL_18;
  }
LABEL_20:
  uint64_t v15 = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(a2 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::MeshSceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
  if (v15)
  {
    unsigned int v16 = (re::ecs2::Component *)v15;
    for (uint64_t i = 24; i != 56; i += 8)
    {
      unint64_t v18 = re::ecs2::ComponentBucketsBase::componentHandle(*(re::ecs2::ComponentBucketsBase **)(a1 + 16), *(void *)(a1 + i), v16);
      if (v18 != -1 && (v19 & 0xFFFFFF00000000) != 0)
      {
        re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::setComponentState(a1, v18, v19);
        return 0;
      }
    }
    unint64_t v21 = re::ecs2::ComponentBucketsBase::addComponent(*(re::ecs2::ComponentBucketsBase **)(a1 + 16), *(void *)(a1 + 24), v16);
    (*(void (**)(void, uint64_t, unint64_t, uint64_t))(**(void **)(*(void *)a1 + 224) + 16))(*(void *)(*(void *)a1 + 224), a1, v21, v22);
  }
  return 0;
}

uint64_t re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::dependentComponentChangedHandler<REComponentDidChangeEvent>(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  uint64_t v18 = a1[1];
  uint64_t v7 = re::HashBrown<re::WeakStringID,re::IndexAndProtectionOptions,re::Hash<re::WeakStringID>,re::EqualTo<re::WeakStringID>,re::Hash<re::IndexAndProtectionOptions>,false>::find((void *)(v6 + 56), &v18);
  if (v7 == -1) {
    goto LABEL_20;
  }
  re::DynamicBitset<unsigned long long,256ul>::setBit(v6 + 168, *(void *)(*(void *)(v6 + 64) + 16 * v7 + 8));
  if (!*(unsigned char *)(v6 + 232)) {
    goto LABEL_20;
  }
  unint64_t v8 = *(void *)(v6 + 176);
  int v9 = *(_DWORD *)(v6 + 184);
  if (v8 >= 0xB)
  {
    if (v9) {
      uint64_t v10 = (void *)(v6 + 192);
    }
    else {
      uint64_t v10 = *(void **)(v6 + 200);
    }
    uint64_t v12 = 8 * v8;
    while (!*v10)
    {
      ++v10;
      v12 -= 8;
      if (!v12) {
        goto LABEL_20;
      }
    }
LABEL_18:
    unsigned int v16 = *(re::ecs2::System **)(v6 + 216);
    if (!*((unsigned char *)v16 + 86)) {
      re::ecs2::System::queueToRun(v16, 0.0);
    }
    goto LABEL_20;
  }
  if (v9)
  {
    uint64_t v11 = (uint64_t *)(v6 + 192);
    if (!v8) {
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v11 = *(uint64_t **)(v6 + 200);
    if (!v8) {
      goto LABEL_20;
    }
  }
  uint64_t v13 = 0;
  uint64_t v14 = 8 * v8;
  do
  {
    uint64_t v15 = *v11++;
    v13 |= v15;
    v14 -= 8;
  }
  while (v14);
  if (v13) {
    goto LABEL_18;
  }
LABEL_20:
  (*(void (**)(void, void *, uint64_t, void))(**(void **)(*a1 + 224) + 8))(*(void *)(*a1 + 224), a1, a2, *(void *)(a3 + 8));
  return 0;
}

uint64_t re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::dependentComponentChangedHandler<REComponentDidActivateEvent>(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  uint64_t v18 = a1[1];
  uint64_t v7 = re::HashBrown<re::WeakStringID,re::IndexAndProtectionOptions,re::Hash<re::WeakStringID>,re::EqualTo<re::WeakStringID>,re::Hash<re::IndexAndProtectionOptions>,false>::find((void *)(v6 + 56), &v18);
  if (v7 == -1) {
    goto LABEL_20;
  }
  re::DynamicBitset<unsigned long long,256ul>::setBit(v6 + 168, *(void *)(*(void *)(v6 + 64) + 16 * v7 + 8));
  if (!*(unsigned char *)(v6 + 232)) {
    goto LABEL_20;
  }
  unint64_t v8 = *(void *)(v6 + 176);
  int v9 = *(_DWORD *)(v6 + 184);
  if (v8 >= 0xB)
  {
    if (v9) {
      uint64_t v10 = (void *)(v6 + 192);
    }
    else {
      uint64_t v10 = *(void **)(v6 + 200);
    }
    uint64_t v12 = 8 * v8;
    while (!*v10)
    {
      ++v10;
      v12 -= 8;
      if (!v12) {
        goto LABEL_20;
      }
    }
LABEL_18:
    unsigned int v16 = *(re::ecs2::System **)(v6 + 216);
    if (!*((unsigned char *)v16 + 86)) {
      re::ecs2::System::queueToRun(v16, 0.0);
    }
    goto LABEL_20;
  }
  if (v9)
  {
    uint64_t v11 = (uint64_t *)(v6 + 192);
    if (!v8) {
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v11 = *(uint64_t **)(v6 + 200);
    if (!v8) {
      goto LABEL_20;
    }
  }
  uint64_t v13 = 0;
  uint64_t v14 = 8 * v8;
  do
  {
    uint64_t v15 = *v11++;
    v13 |= v15;
    v14 -= 8;
  }
  while (v14);
  if (v13) {
    goto LABEL_18;
  }
LABEL_20:
  (*(void (**)(void, void *, uint64_t, void))(**(void **)(*a1 + 224) + 8))(*(void *)(*a1 + 224), a1, a2, *(void *)(a3 + 8));
  return 0;
}

uint64_t re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::dependentComponentChangedHandler<REComponentWillDeactivateEvent>(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  uint64_t v18 = a1[1];
  uint64_t v7 = re::HashBrown<re::WeakStringID,re::IndexAndProtectionOptions,re::Hash<re::WeakStringID>,re::EqualTo<re::WeakStringID>,re::Hash<re::IndexAndProtectionOptions>,false>::find((void *)(v6 + 56), &v18);
  if (v7 == -1) {
    goto LABEL_20;
  }
  re::DynamicBitset<unsigned long long,256ul>::setBit(v6 + 168, *(void *)(*(void *)(v6 + 64) + 16 * v7 + 8));
  if (!*(unsigned char *)(v6 + 232)) {
    goto LABEL_20;
  }
  unint64_t v8 = *(void *)(v6 + 176);
  int v9 = *(_DWORD *)(v6 + 184);
  if (v8 >= 0xB)
  {
    if (v9) {
      uint64_t v10 = (void *)(v6 + 192);
    }
    else {
      uint64_t v10 = *(void **)(v6 + 200);
    }
    uint64_t v12 = 8 * v8;
    while (!*v10)
    {
      ++v10;
      v12 -= 8;
      if (!v12) {
        goto LABEL_20;
      }
    }
LABEL_18:
    unsigned int v16 = *(re::ecs2::System **)(v6 + 216);
    if (!*((unsigned char *)v16 + 86)) {
      re::ecs2::System::queueToRun(v16, 0.0);
    }
    goto LABEL_20;
  }
  if (v9)
  {
    uint64_t v11 = (uint64_t *)(v6 + 192);
    if (!v8) {
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v11 = *(uint64_t **)(v6 + 200);
    if (!v8) {
      goto LABEL_20;
    }
  }
  uint64_t v13 = 0;
  uint64_t v14 = 8 * v8;
  do
  {
    uint64_t v15 = *v11++;
    v13 |= v15;
    v14 -= 8;
  }
  while (v14);
  if (v13) {
    goto LABEL_18;
  }
LABEL_20:
  (*(void (**)(void, void *, uint64_t, void))(**(void **)(*a1 + 224) + 8))(*(void *)(*a1 + 224), a1, a2, *(void *)(a3 + 8));
  return 0;
}

uint64_t re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::dependentComponentChangedHandler<REComponentDidAddEvent>(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  uint64_t v18 = a1[1];
  uint64_t v7 = re::HashBrown<re::WeakStringID,re::IndexAndProtectionOptions,re::Hash<re::WeakStringID>,re::EqualTo<re::WeakStringID>,re::Hash<re::IndexAndProtectionOptions>,false>::find((void *)(v6 + 56), &v18);
  if (v7 == -1) {
    goto LABEL_20;
  }
  re::DynamicBitset<unsigned long long,256ul>::setBit(v6 + 168, *(void *)(*(void *)(v6 + 64) + 16 * v7 + 8));
  if (!*(unsigned char *)(v6 + 232)) {
    goto LABEL_20;
  }
  unint64_t v8 = *(void *)(v6 + 176);
  int v9 = *(_DWORD *)(v6 + 184);
  if (v8 >= 0xB)
  {
    if (v9) {
      uint64_t v10 = (void *)(v6 + 192);
    }
    else {
      uint64_t v10 = *(void **)(v6 + 200);
    }
    uint64_t v12 = 8 * v8;
    while (!*v10)
    {
      ++v10;
      v12 -= 8;
      if (!v12) {
        goto LABEL_20;
      }
    }
LABEL_18:
    unsigned int v16 = *(re::ecs2::System **)(v6 + 216);
    if (!*((unsigned char *)v16 + 86)) {
      re::ecs2::System::queueToRun(v16, 0.0);
    }
    goto LABEL_20;
  }
  if (v9)
  {
    uint64_t v11 = (uint64_t *)(v6 + 192);
    if (!v8) {
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v11 = *(uint64_t **)(v6 + 200);
    if (!v8) {
      goto LABEL_20;
    }
  }
  uint64_t v13 = 0;
  uint64_t v14 = 8 * v8;
  do
  {
    uint64_t v15 = *v11++;
    v13 |= v15;
    v14 -= 8;
  }
  while (v14);
  if (v13) {
    goto LABEL_18;
  }
LABEL_20:
  (*(void (**)(void, void *, uint64_t, void))(**(void **)(*a1 + 224) + 8))(*(void *)(*a1 + 224), a1, a2, *(void *)(a3 + 8));
  return 0;
}

void re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::*)(re::ecs2::Entity *,REComponentDidChangeEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidChangeEvent const&)>::~CallableMemFn()
{
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::*)(re::ecs2::Entity *,REComponentDidChangeEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidChangeEvent const&)>::operator()(void *a1, void *a2)
{
  uint64_t v2 = (uint64_t (*)(void *, void))a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = (void *)(a1[1] + (v3 >> 1));
  if (v3) {
    uint64_t v2 = *(uint64_t (**)(void *, void))(*v4 + v2);
  }
  return v2(v4, *a2);
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::*)(re::ecs2::Entity *,REComponentDidChangeEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidChangeEvent const&)>::cloneInto(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26E6E56A8;
  long long v2 = *(_OWORD *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(_OWORD *)(a2 + 8) = v2;
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::*)(re::ecs2::Entity *,REComponentDidChangeEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidChangeEvent const&)>::moveInto(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)a2 = &unk_26E6E56A8;
  *(void *)(a2 + 8) = v2;
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::*)(re::ecs2::Entity *,REComponentDidChangeEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidChangeEvent const&)>::size()
{
  return 32;
}

void re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::*)(re::ecs2::Entity *,REComponentDidActivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidActivateEvent const&)>::~CallableMemFn()
{
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::*)(re::ecs2::Entity *,REComponentDidActivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidActivateEvent const&)>::operator()(void *a1, void *a2)
{
  uint64_t v2 = (uint64_t (*)(void *, void))a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = (void *)(a1[1] + (v3 >> 1));
  if (v3) {
    uint64_t v2 = *(uint64_t (**)(void *, void))(*v4 + v2);
  }
  return v2(v4, *a2);
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::*)(re::ecs2::Entity *,REComponentDidActivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidActivateEvent const&)>::cloneInto(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26E6E5700;
  long long v2 = *(_OWORD *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(_OWORD *)(a2 + 8) = v2;
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::*)(re::ecs2::Entity *,REComponentDidActivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidActivateEvent const&)>::moveInto(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)a2 = &unk_26E6E5700;
  *(void *)(a2 + 8) = v2;
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::*)(re::ecs2::Entity *,REComponentDidActivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidActivateEvent const&)>::size()
{
  return 32;
}

void re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::*)(re::ecs2::Entity *,REComponentWillDeactivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentWillDeactivateEvent const&)>::~CallableMemFn()
{
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::*)(re::ecs2::Entity *,REComponentWillDeactivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentWillDeactivateEvent const&)>::operator()(void *a1, void *a2)
{
  uint64_t v2 = (uint64_t (*)(void *, void))a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = (void *)(a1[1] + (v3 >> 1));
  if (v3) {
    uint64_t v2 = *(uint64_t (**)(void *, void))(*v4 + v2);
  }
  return v2(v4, *a2);
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::*)(re::ecs2::Entity *,REComponentWillDeactivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentWillDeactivateEvent const&)>::cloneInto(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26E6E5758;
  long long v2 = *(_OWORD *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(_OWORD *)(a2 + 8) = v2;
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::*)(re::ecs2::Entity *,REComponentWillDeactivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentWillDeactivateEvent const&)>::moveInto(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)a2 = &unk_26E6E5758;
  *(void *)(a2 + 8) = v2;
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::*)(re::ecs2::Entity *,REComponentWillDeactivateEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentWillDeactivateEvent const&)>::size()
{
  return 32;
}

void re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::*)(re::ecs2::Entity *,REComponentDidAddEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidAddEvent const&)>::~CallableMemFn()
{
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::*)(re::ecs2::Entity *,REComponentDidAddEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidAddEvent const&)>::operator()(void *a1, void *a2)
{
  uint64_t v2 = (uint64_t (*)(void *, void))a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = (void *)(a1[1] + (v3 >> 1));
  if (v3) {
    uint64_t v2 = *(uint64_t (**)(void *, void))(*v4 + v2);
  }
  return v2(v4, *a2);
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::*)(re::ecs2::Entity *,REComponentDidAddEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidAddEvent const&)>::cloneInto(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26E6E57B0;
  long long v2 = *(_OWORD *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(_OWORD *)(a2 + 8) = v2;
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::*)(re::ecs2::Entity *,REComponentDidAddEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidAddEvent const&)>::moveInto(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)a2 = &unk_26E6E57B0;
  *(void *)(a2 + 8) = v2;
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  return a2;
}

uint64_t re::internal::CallableMemFn<re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>,REEventHandlerResult (re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshSceneComponent>::*)(re::ecs2::Entity *,REComponentDidAddEvent const&),REEventHandlerResult ()(re::ecs2::Entity *,REComponentDidAddEvent const&)>::size()
{
  return 32;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::createSubscription<re::ecs2::MeshSceneSystem>(re::ecs2::MeshSceneSystem *,REEventHandlerResult (re::ecs2::MeshSceneSystem::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Slice<re::ecs2::MeshSceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSceneComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    uint64_t v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

void *re::HashBrown<re::ecs2::Scene *,RESubscriptionHandle,re::Hash<re::ecs2::Scene *>,re::EqualTo<re::ecs2::Scene *>,void,false>::internalAdd(_anonymous_namespace_ *a1, void *a2, long long *a3)
{
  if (!*((void *)a1 + 7))
  {
  }
  uint64_t v6 = *((void *)a1 + 4);
  if (!v6 || (unint64_t v7 = *((void *)a1 + 2), v7 > 8 * v6))
  {
    re::HashBrown<re::ecs2::Scene *,RESubscriptionHandle,re::Hash<re::ecs2::Scene *>,re::EqualTo<re::ecs2::Scene *>,void,false>::resize((uint64_t *)a1, 1);
    unint64_t v7 = *((void *)a1 + 2);
  }
  unint64_t v8 = 0xBF58476D1CE4E5B9 * (*a2 ^ (*a2 >> 30));
  unint64_t v9 = (0x94D049BB133111EBLL * (v8 ^ (v8 >> 27))) ^ ((0x94D049BB133111EBLL * (v8 ^ (v8 >> 27))) >> 31);
  unint64_t v10 = v7 >> 4;
  unint64_t v11 = v9 % (v7 >> 4);
  uint64_t v12 = *(void *)a1;
  unint64_t v13 = __clz(__rbit64(*(void *)&vqtbl1_s8((int8x16_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8((uint8x16_t)vandq_s8(vcltzq_s8(*(int8x16_t *)(*(void *)a1 + 16 * v11)), (int8x16_t)xmmword_2343680E0)))), (int8x8_t)0x3830282018100800)));
  if (v13 >= 0x40)
  {
    do
    {
      if (v11 + 1 == v10) {
        unint64_t v11 = 0;
      }
      else {
        ++v11;
      }
      unint64_t v13 = __clz(__rbit64(*(void *)&vqtbl1_s8((int8x16_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8((uint8x16_t)vandq_s8(vcltzq_s8(*(int8x16_t *)(v12 + 16 * v11)), (int8x16_t)xmmword_2343680E0)))), (int8x8_t)0x3830282018100800)));
    }
    while (v13 > 0x3F);
  }
  uint64_t v14 = v12 + 16 * v11;
  BOOL v15 = *(unsigned __int8 *)(v14 + v13) == 255;
  *(unsigned char *)(v14 + v13) = v9 & 0x7F;
  long long v16 = *a3;
  uint64_t v17 = 3 * (v13 + 16 * v11);
  uint64_t v18 = *((void *)a1 + 1) + 8 * v17;
  *(void *)uint64_t v18 = *a2;
  *(_OWORD *)(v18 + 8) = v16;
  uint64_t v19 = *((void *)a1 + 4) - v15;
  ++*((void *)a1 + 3);
  *((void *)a1 + 4) = v19;
  long long v20 = (unint64_t *)(*((void *)a1 + 1) + 8 * v17);
  unint64_t v22 = *v20;
  uint64_t result = v20 + 1;
  unint64_t v23 = 0x94D049BB133111EBLL
      * ((0xBF58476D1CE4E5B9 * (v22 ^ (v22 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (v22 ^ (v22 >> 30))) >> 27));
  *((void *)a1 + 5) ^= (v23 >> 31) ^ v23;
  return result;
}

uint64_t re::HashBrown<re::ecs2::Scene *,RESubscriptionHandle,re::Hash<re::ecs2::Scene *>,re::EqualTo<re::ecs2::Scene *>,void,false>::resize(uint64_t *a1, int a2)
{
  unint64_t v2 = a1[2];
  unint64_t v3 = a1[3] + a2;
  unint64_t v4 = (((151 * v3) >> 7) + 15) & 0x3FFFFFFFFFFFFF0;
  if (v4 > v2)
  {
    unint64_t v5 = 3 * v2;
    unint64_t v6 = v5 << 6;
    uint64_t v7 = (v5 >> 1) & 0x1FFFFFFFFFFFFFFLL;
    if (v4 <= v6 >> 7) {
      unint64_t v4 = v7;
    }
    unint64_t v3 = (v4 << 7) / 0x97;
  }
  return re::HashBrown<re::ecs2::Scene *,RESubscriptionHandle,re::Hash<re::ecs2::Scene *>,re::EqualTo<re::ecs2::Scene *>,void,false>::doResize(a1, v3);
}

uint64_t re::HashBrown<re::ecs2::Scene *,RESubscriptionHandle,re::Hash<re::ecs2::Scene *>,re::EqualTo<re::ecs2::Scene *>,void,false>::doResize(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = a1[7];
  memset(v24, 0, sizeof(v24));
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::init(v24, v4, a2);
  v22[0] = a1;
  unint64_t v6 = a1[2];
  if (v6 >= 0x10)
  {
    uint64_t v7 = 0;
    uint64_t v8 = *a1;
    unint64_t v9 = v6 >> 4;
    __n128 v10 = (__n128)xmmword_2343680E0;
    v5.n128_u64[0] = 0x3830282018100800;
    while (1)
    {
      unsigned __int16 v11 = vqtbl1_s8((int8x16_t)vpaddlq_u32(vpaddlq_u16(vpaddlq_u8((uint8x16_t)vandq_s8(vcltzq_s8(*(int8x16_t *)(v8 + v7)), (int8x16_t)xmmword_2343680E0)))), (int8x8_t)0x3830282018100800).u16[0];
      v22[1] = (unsigned __int16)~v11;
      if (v11 != 0xFFFF) {
        break;
      }
      v7 += 16;
      if (!--v9) {
        goto LABEL_9;
      }
    }
    uint64_t v12 = __clz(__rbit64((unsigned __int16)~v11)) + v7;
    uint64_t v23 = v12;
    if (v12 != -1)
    {
      do
      {
        re::HashBrown<re::ecs2::Scene *,RESubscriptionHandle,re::Hash<re::ecs2::Scene *>,re::EqualTo<re::ecs2::Scene *>,void,false>::internalAdd(v24, *(void *)(v22[0] + 8) + 24 * v12, *(void *)(v22[0] + 8) + 24 * v12 + 8, v10, v5);
        re::HashBrown<unsigned long long,std::unique_ptr<re::EventBus::EventInfo,std::function<void ()(re::EventBus::EventInfo*)>>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::HashBrownIterator<re::KeyValuePair<unsigned long long const&,std::unique_ptr<re::EventBus::EventInfo,std::function<void ()(re::EventBus::EventInfo*)>>&>>::operator++(v22);
        uint64_t v12 = v23;
      }
      while (v23 != -1);
      unint64_t v6 = a1[2];
    }
  }
LABEL_9:
  uint64_t v14 = *((void *)&v24[3] + 1);
  *((void *)&v24[3] + 1) = a1[7];
  uint64_t result = *((void *)&v24[3] + 1);
  long long v15 = v24[0];
  long long v16 = v24[1];
  *(void *)&v24[1] = v6;
  uint64_t v17 = *a1;
  uint64_t v18 = a1[1];
  *(void *)&v24[0] = *a1;
  *((void *)&v24[0] + 1) = v18;
  long long v19 = v24[2];
  long long v20 = *(_OWORD *)(a1 + 5);
  a1[6] = *(void *)&v24[3];
  a1[7] = v14;
  *(_OWORD *)((char *)&v24[2] + 8) = v20;
  long long v21 = *(_OWORD *)(a1 + 3);
  *(_OWORD *)a1 = v15;
  *((_OWORD *)a1 + 1) = v16;
  *((_OWORD *)a1 + 2) = v19;
  *(_OWORD *)((char *)&v24[1] + 8) = v21;
  if (result)
  {
    if (v18) {
      *((void *)&v24[0] + 1) = 0;
    }
    if (v17) {
      return (*(uint64_t (**)(uint64_t))(*(void *)result + 40))(result);
    }
  }
  return result;
}

void *re::ecs2::allocInfo_LatencyEventsComponent(re::ecs2 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81A40, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF81A40))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF81A60, "LatencyEventsComponent");
    __cxa_guard_release(&qword_26AF81A40);
  }
  return &unk_26AF81A60;
}

void re::ecs2::initInfo_LatencyEventsComponent(re::ecs2 *this, re::IntrospectionBase *a2)
{
  v17[0] = 0x897E3A40551A864CLL;
  v17[1] = "LatencyEventsComponent";
  re::StringID::destroyString((re::StringID *)v17);
  *((_OWORD *)this + 2) = v18;
  if ((atomic_load_explicit((atomic_uchar *volatile)&_MergedGlobals_160, memory_order_acquire) & 1) == 0)
  {
    uint64_t v4 = (re *)__cxa_guard_acquire(&_MergedGlobals_160);
    if (v4)
    {
      __n128 v5 = re::introspectionAllocator(v4);
      uint64_t v6 = re::ecs2::introspect_Component((re::IntrospectionBase **)1);
      uint64_t v7 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v5 + 32))(v5, 72, 8);
      *(_DWORD *)uint64_t v7 = 1;
      *(void *)(v7 + 8) = "Component";
      *(void *)(v7 + 16) = v6;
      *(void *)(v7 + 24) = 0;
      *(void *)(v7 + 32) = 0;
      *(_DWORD *)(v7 + 40) = 3;
      *(void *)(v7 + 48) = 0;
      *(void *)(v7 + 56) = 0;
      *(_DWORD *)(v7 + 64) = 0;
      qword_26AF81A48 = v7;
      uint64_t v8 = re::introspectionAllocator((re *)v7);
      __n128 v10 = re::introspect_uint64_t((re *)1, v9);
      uint64_t v11 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v8 + 32))(v8, 72, 8);
      *(_DWORD *)uint64_t v11 = 1;
      *(void *)(v11 + 8) = "nisFrameID";
      *(void *)(v11 + 16) = v10;
      *(void *)(v11 + 24) = 0;
      *(void *)(v11 + 32) = 0x2000000001;
      *(_DWORD *)(v11 + 40) = 0;
      *(void *)(v11 + 48) = 0;
      *(void *)(v11 + 56) = 0;
      *(_DWORD *)(v11 + 64) = 0;
      qword_26AF81A50 = v11;
      uint64_t v12 = re::introspectionAllocator((re *)v11);
      uint64_t v14 = re::introspect_uint64_t((re *)1, v13);
      uint64_t v15 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v12 + 32))(v12, 72, 8);
      *(_DWORD *)uint64_t v15 = 1;
      *(void *)(v15 + 8) = "eventMask";
      *(void *)(v15 + 16) = v14;
      *(void *)(v15 + 24) = 0;
      *(void *)(v15 + 32) = 0x2800000002;
      *(_DWORD *)(v15 + 40) = 0;
      *(void *)(v15 + 48) = 0;
      *(void *)(v15 + 56) = 0;
      *(_DWORD *)(v15 + 64) = 0;
      qword_26AF81A58 = v15;
      __cxa_guard_release(&_MergedGlobals_160);
    }
  }
  *((void *)this + 2) = 0x3000000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 3;
  *((void *)this + 8) = &qword_26AF81A48;
  *((void *)this + 9) = re::internal::defaultConstruct<re::ecs2::LatencyEventsComponent>;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 10) = re::internal::defaultDestruct<re::ecs2::LatencyEventsComponent>;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::ecs2::LatencyEventsComponent>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::ecs2::LatencyEventsComponent>;
  re::IntrospectionRegistry::add(this, v3);
  long long v16 = v18;
}

void re::internal::defaultConstruct<re::ecs2::LatencyEventsComponent>(int a1, int a2, ArcSharedObject *this)
{
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *(_OWORD *)this = 0u;
  ArcSharedObject::ArcSharedObject(this, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E5808;
  *(void *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
}

void *re::internal::defaultDestruct<re::ecs2::LatencyEventsComponent>(uint64_t a1, uint64_t a2, void *a3)
{
  *a3 = &unk_26E6DECE0;
  return objc_destructInstance(a3 + 1);
}

void re::internal::defaultConstructV2<re::ecs2::LatencyEventsComponent>(ArcSharedObject *a1)
{
  *((_OWORD *)a1 + 1) = 0u;
  *((_OWORD *)a1 + 2) = 0u;
  *(_OWORD *)a1 = 0u;
  ArcSharedObject::ArcSharedObject(a1, 0);
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 24) = 0;
  *(void *)uint64_t v1 = &unk_26E6E5808;
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 40) = 0;
}

void *re::internal::defaultDestructV2<re::ecs2::LatencyEventsComponent>(void *a1)
{
  *a1 = &unk_26E6DECE0;
  return objc_destructInstance(a1 + 1);
}

uint64_t re::ecs2::introspect_LatencyEventsComponent(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"LatencyEventsComponent", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_LatencyEventsComponent, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_LatencyEventsComponent, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::LatencyEventsComponent>, this);
}

void re::ecs2::LatencyEventsComponent::addLatencyEvent(re::ecs2::LatencyEventsComponent *this, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *((void *)this + 2);
  if (v3)
  {
    uint64_t v7 = (re::ecs2::NetworkComponentInfo *)(*(void *)(v3 + 200) + 112);
    uint64_t v8 = (const re::ecs2::ComponentTypeBase *)(*(uint64_t (**)(re::ecs2::LatencyEventsComponent *))(*(void *)this + 40))(this);
    if (re::ecs2::NetworkComponentInfo::isDirty(v7, v8, 3))
    {
      if (re::internal::enableSignposts(0, 0)) {
        kdebug_trace();
      }
    }
    else
    {
      *((void *)this + 4) = a3;
      re::ecs2::LatencyEventsComponent::markComponentDirty(this);
      *((void *)this + 5) = 0;
    }
    *((void *)this + 5) |= a2;
  }
}

void re::ecs2::LatencyEventsComponent::markComponentDirty(re::ecs2::LatencyEventsComponent *this)
{
  if (*((void *)this + 2))
  {
    if (re::internal::enableSignposts(0, 0)) {
      kdebug_trace();
    }
    unint64_t v2 = *(re::ecs2::NetworkComponent **)(*((void *)this + 2) + 200);
    if (v2)
    {
      re::ecs2::NetworkComponent::markDirty(v2, this);
    }
  }
}

void re::ecs2::LatencyEventsComponent::~LatencyEventsComponent(re::ecs2::LatencyEventsComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::LatencyEventsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::LatencyEventsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::LatencyEventsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::LatencyEventsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::LatencyEventsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void *re::ecs2::allocInfo_DrawWorldComponent(re::ecs2 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&_MergedGlobals_161, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&_MergedGlobals_161))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF81B00, "DrawWorldComponent");
    __cxa_guard_release(&_MergedGlobals_161);
  }
  return &unk_26AF81B00;
}

void re::ecs2::initInfo_DrawWorldComponent(re::ecs2 *this, re::IntrospectionBase *a2)
{
  v13[0] = 0x563E5C08B640681ELL;
  v13[1] = "DrawWorldComponent";
  re::StringID::destroyString((re::StringID *)v13);
  *((_OWORD *)this + 2) = v14;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81AE0, memory_order_acquire) & 1) == 0)
  {
    uint64_t v4 = (re *)__cxa_guard_acquire(&qword_26AF81AE0);
    if (v4)
    {
      __n128 v5 = re::introspectionAllocator(v4);
      uint64_t v6 = re::ecs2::introspect_Component((re::IntrospectionBase **)1);
      uint64_t v7 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v5 + 32))(v5, 72, 8);
      *(_DWORD *)uint64_t v7 = 1;
      *(void *)(v7 + 8) = "Component";
      *(void *)(v7 + 16) = v6;
      *(void *)(v7 + 24) = 0;
      *(void *)(v7 + 32) = 0;
      *(_DWORD *)(v7 + 40) = 3;
      *(void *)(v7 + 48) = 0;
      *(void *)(v7 + 56) = 0;
      *(_DWORD *)(v7 + 64) = 0;
      qword_26AF81AF0 = v7;
      uint64_t v8 = re::introspectionAllocator((re *)v7);
      __n128 v10 = re::introspect_int((re *)1, v9);
      uint64_t v11 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v8 + 32))(v8, 72, 8);
      *(_DWORD *)uint64_t v11 = 1;
      *(void *)(v11 + 8) = "drawOrder";
      *(void *)(v11 + 16) = v10;
      *(void *)(v11 + 24) = 0;
      *(void *)(v11 + 32) = 0x1C00000001;
      *(_DWORD *)(v11 + 40) = 0;
      *(void *)(v11 + 48) = 0;
      *(void *)(v11 + 56) = 0;
      *(_DWORD *)(v11 + 64) = 0;
      qword_26AF81AF8 = v11;
      __cxa_guard_release(&qword_26AF81AE0);
    }
  }
  *((void *)this + 2) = 0x2800000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 2;
  *((void *)this + 8) = &qword_26AF81AF0;
  *((void *)this + 9) = re::internal::defaultConstruct<re::ecs2::DrawWorldComponent>;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 10) = re::internal::defaultDestruct<re::ecs2::DrawWorldComponent>;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::ecs2::DrawWorldComponent>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::ecs2::DrawWorldComponent>;
  re::IntrospectionRegistry::add(this, v3);
  long long v12 = v14;
}

void re::internal::defaultConstruct<re::ecs2::DrawWorldComponent>(int a1, int a2, ArcSharedObject *this)
{
  *((void *)this + 4) = 0;
  *(_OWORD *)this = 0u;
  *((_OWORD *)this + 1) = 0u;
  ArcSharedObject::ArcSharedObject(this, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E5920;
  *(_DWORD *)(v3 + 28) = 0;
}

uint64_t re::internal::defaultDestruct<re::ecs2::DrawWorldComponent>(uint64_t a1, uint64_t a2, uint64_t (***a3)(void))
{
  return (**a3)(a3);
}

void re::internal::defaultConstructV2<re::ecs2::DrawWorldComponent>(uint64_t a1)
{
  *(void *)(a1 + 32) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)a1, 0);
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 24) = 0;
  *(void *)uint64_t v1 = &unk_26E6E5920;
  *(_DWORD *)(v1 + 28) = 0;
}

uint64_t re::internal::defaultDestructV2<re::ecs2::DrawWorldComponent>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

uint64_t re::ecs2::introspect_DrawWorldComponent(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"DrawWorldComponent", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_DrawWorldComponent, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_DrawWorldComponent, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::DrawWorldComponent>, this);
}

void *re::allocInfo_DrawWorldSystem(re *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81AE8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF81AE8))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF81B78, "DrawWorldSystem");
    __cxa_guard_release(&qword_26AF81AE8);
  }
  return &unk_26AF81B78;
}

void re::initInfo_DrawWorldSystem(re *this, re::IntrospectionBase *a2)
{
  v5[0] = 0xB39C1CA077E08BALL;
  v5[1] = "DrawWorldSystem";
  re::StringID::destroyString((re::StringID *)v5);
  *((_OWORD *)this + 2) = v6;
  *((void *)this + 2) = 0xA000000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 0;
  *((void *)this + 8) = &re::initInfo_DrawWorldSystem(re::IntrospectionBase *)::structureAttributes;
  *((void *)this + 9) = re::internal::defaultConstruct<re::DrawWorldSystem>;
  *((void *)this + 10) = re::internal::defaultDestruct<re::DrawWorldSystem>;
  *((void *)this + 11) = re::internal::defaultRetain<re::DrawWorldSystem>(void)::{lambda(void *)#1}::__invoke;
  *((void *)this + 12) = re::internal::defaultRelease<re::DrawWorldSystem>(void)::{lambda(void *)#1}::__invoke;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::DrawWorldSystem>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::DrawWorldSystem>;
  re::IntrospectionRegistry::add(this, v3);
  long long v4 = v6;
}

double re::internal::defaultConstruct<re::DrawWorldSystem>(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  a3[8] = 0u;
  a3[9] = 0u;
  a3[6] = 0u;
  a3[7] = 0u;
  a3[4] = 0u;
  a3[5] = 0u;
  a3[2] = 0u;
  a3[3] = 0u;
  *a3 = 0u;
  a3[1] = 0u;
  re::ecs2::System::System((uint64_t)a3, 1, 1);
  *(void *)(v3 + 152) = 0;
  double result = 0.0;
  *(_OWORD *)(v3 + 136) = 0u;
  *(_OWORD *)(v3 + 120) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)uint64_t v3 = &unk_26E6E5890;
  return result;
}

void *re::internal::defaultDestruct<re::DrawWorldSystem>(uint64_t a1, uint64_t a2, void *a3)
{
  *a3 = &unk_26E6DECE0;
  return objc_destructInstance(a3 + 1);
}

double re::internal::defaultConstructV2<re::DrawWorldSystem>(_OWORD *a1)
{
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  re::ecs2::System::System((uint64_t)a1, 1, 1);
  *(void *)(v1 + 152) = 0;
  double result = 0.0;
  *(_OWORD *)(v1 + 136) = 0u;
  *(_OWORD *)(v1 + 120) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  *(void *)uint64_t v1 = &unk_26E6E5890;
  return result;
}

void *re::internal::defaultDestructV2<re::DrawWorldSystem>(void *a1)
{
  *a1 = &unk_26E6DECE0;
  return objc_destructInstance(a1 + 1);
}

uint64_t re::introspect_DrawWorldSystem(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"DrawWorldSystem", (uint64_t (*)(re::internal *))re::allocInfo_DrawWorldSystem, (re::IntrospectionBase *(*)(void))re::initInfo_DrawWorldSystem, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::DrawWorldSystem>, this);
}

uint64_t re::DrawWorldSystem::updateScenes(uint64_t result, uint64_t a2)
{
  uint64_t v53 = *MEMORY[0x263EF8340];
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3)
  {
    uint64_t v4 = result;
    __n128 v5 = *(void ***)a2;
    uint64_t v6 = *(void *)a2 + 8 * v3;
    uint64_t v35 = result;
    uint64_t v7 = re::KTXTextureCompiler::getSupportedExtensions(void)const::supportedExtensions;
    uint64_t v34 = v6;
    while (1)
    {
      uint64_t v8 = *v5;
      if (*v5) {
        break;
      }
LABEL_52:
      if (++v5 == (void **)v6) {
        return result;
      }
    }
    re::ProfilerTimeGuard<(re::ProfilerStatistic)20>::ProfilerTimeGuard(v51);
    re::internal::AriadneSignpostScopeGuard::AriadneSignpostScopeGuard((re::internal::AriadneSignpostScopeGuard *)v50, 3017, v4);
    uint64_t v9 = re::ecs2::SceneComponentTable::get((re::ecs2::SceneComponentTable *)(v8 + 25), (const re::ecs2::ComponentTypeBase *)v7[159]);
    if (!v9 || !*(void *)(v9 + 24))
    {
      __n128 v10 = re::ecs2::ComponentHelper::privateSceneDataEntity((re::ecs2::ComponentHelper *)v8, (re::ecs2::Scene *)1);
      re::ecs2::EntityComponentCollection::getOrAdd((re::ecs2::Entity *)((char *)v10 + 32), (const re::ecs2::ComponentTypeBase *)v7[159]);
    }
    uint64_t v11 = *(void *)(v4 + 104);
    if (!v11 || (*(unsigned char *)(v11 + 424) & 0x10) == 0 || (uint64_t v12 = *(void *)(v4 + 112)) == 0)
    {
LABEL_51:
      re::internal::AriadneSignpostScopeGuard::~AriadneSignpostScopeGuard((re::internal::AriadneSignpostScopeGuard *)v50);
      double result = re::ProfilerTimeGuard<(re::ProfilerStatistic)122>::end((uint64_t)v51);
      goto LABEL_52;
    }
    uint64_t v13 = *(void *)(v12 + 104);
    if (v13) {
      uint64_t v37 = (re::DynamicString **)re::RenderFrameBox::get(v13 + 344, 0xFFFFFFFFFFFFFFFuLL);
    }
    else {
      uint64_t v37 = 0;
    }
    if (re::ecs2::PerspectiveCameraComponent::firstPerspectiveCameraInScene((uint64_t)v8))
    {
      uint64_t PerspectiveCameraInScene = re::ecs2::PerspectiveCameraComponent::firstPerspectiveCameraInScene((uint64_t)v8);
      re::ecs2::PerspectiveCameraComponent::calculateWorldPose(PerspectiveCameraInScene, 0, (uint64_t)&v43);
    }
    else if (re::ecs2::OrthographicCameraComponent::firstOrthographicCameraInScene((uint64_t)v8))
    {
      uint64_t OrthographicCameraInScene = re::ecs2::OrthographicCameraComponent::firstOrthographicCameraInScene((uint64_t)v8);
      re::ecs2::OrthographicCameraComponent::calculateWorldPose(OrthographicCameraInScene, 0, (uint64_t)&v43);
    }
    else
    {
      if (!re::ecs2::CustomMatrixCameraComponent::firstCustomMatrixCameraInScene((uint64_t)v8))
      {
        char v36 = 1;
        goto LABEL_20;
      }
      uint64_t CustomMatrixCameraInScene = re::ecs2::CustomMatrixCameraComponent::firstCustomMatrixCameraInScene((uint64_t)v8);
      re::ecs2::CustomMatrixCameraComponent::calculateWorldPose(CustomMatrixCameraInScene, 0, &v43);
    }
    char v36 = 0;
    float32x4_t v52 = v43;
LABEL_20:
    uint64_t v49 = (*(uint64_t (**)(void))(**(void **)(v4 + 136) + 24))(*(void *)(v4 + 136));
    re::ecs2::WorldRootProvider::worldIds((re::ecs2::WorldRootProvider *)&v49, (uint64_t)&v43);
    int v17 = v47;
    if (v47)
    {
      int v2 = v48;
      if (v48)
      {
        uint64_t v18 = 0;
        long long v19 = (int *)v46[2];
        while (1)
        {
          int v20 = *v19;
          v19 += 4;
          if (v20 < 0) {
            break;
          }
          if (v48 == ++v18)
          {
            LODWORD(v18) = v48;
            break;
          }
        }
        LODWORD(v6) = v18;
      }
      else
      {
        LODWORD(v6) = 0;
      }
      unint64_t v22 = (const re::ecs2::Scene **)v46;
      long long v21 = (const re::ecs2::Scene **)v46;
    }
    else
    {
      long long v21 = (const re::ecs2::Scene **)v45;
      unint64_t v22 = (const re::ecs2::Scene **)&v45[v44];
    }
    BOOL v23 = v21 != v22;
    if (v47) {
      BOOL v23 = v2 != v6;
    }
    if (v23)
    {
      uint64_t v24 = (re::RenderFrameData *)(v37 + 33);
      do
      {
        uint64_t v25 = v21;
        if (v17) {
          uint64_t v25 = (const re::ecs2::Scene **)((char *)v21[2] + 16 * v6 + 8);
        }
        uint64_t v26 = *v25;
        re::ecs2::RenderingSubsystem::nonOwningStreamNameForWorldRoot((re::ecs2::RenderingSubsystem *)v8, *v25, v37, &v42);
        unint64_t v41 = v42 >> 1;
        re::StringID::StringID((re::StringID *)((char *)&v38 + 8), (const StringID *)(v8[13] + 272));
        uint64_t v39 = v26;
        uint64_t v27 = v8[47];
        if (v27) {
          uint64_t v28 = *(void *)(v27 + 24);
        }
        else {
          uint64_t v28 = 1;
        }
        BOOL v40 = v28 == 1;
        uint64_t v29 = **(void **)(re::RenderFrameData::stream(v24, (const re::WeakStringID *)&v41) + 48);
        (*(void (**)(void))(v29 + 504))();
        re::StringID::destroyString((re::StringID *)((char *)&v38 + 8));
        if ((v36 & 1) == 0)
        {
          unint64_t v41 = v42 >> 1;
          *((void *)&v38 + 1) = v52.i64[1];
          uint64_t v30 = **(void **)(re::RenderFrameData::stream(v24, (const re::WeakStringID *)&v41) + 48);
          (*(void (**)(void))(v30 + 912))();
        }
        re::StringID::destroyString((re::StringID *)&v42);
        if (v17)
        {
          unsigned int v31 = v6 + 1;
          do
          {
            LODWORD(v6) = v31;
            if (v31 >= *((_DWORD *)v21 + 8)) {
              break;
            }
            int v32 = *((_DWORD *)v21[2] + 4 * v31++);
          }
          while ((v32 & 0x80000000) == 0);
        }
        else
        {
          ++v21;
        }
        BOOL v33 = v21 != v22;
        if (v17) {
          BOOL v33 = v2 != v6;
        }
      }
      while (v33);
    }
    re::SmallHashSet<unsigned long long,8ul,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,false>::~SmallHashSet((uint64_t)&v43);
    uint64_t v6 = v34;
    uint64_t v4 = v35;
    uint64_t v7 = re::KTXTextureCompiler::getSupportedExtensions(void)const::supportedExtensions;
    goto LABEL_51;
  }
  return result;
}

void re::DrawWorldSystem::~DrawWorldSystem(re::DrawWorldSystem *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::DrawWorldSystem::typeInfo(re::DrawWorldSystem *this)
{
  return re::internal::getOrCreateInfo((re::internal *)"DrawWorldSystem", (uint64_t (*)(re::internal *))re::allocInfo_DrawWorldSystem, (re::IntrospectionBase *(*)(void))re::initInfo_DrawWorldSystem, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::DrawWorldSystem>, 0);
}

void re::ecs2::DrawWorldComponent::~DrawWorldComponent(re::ecs2::DrawWorldComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::DrawWorldComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::DrawWorldComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::DrawWorldComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::DrawWorldComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::DrawWorldComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

id re::internal::defaultRetain<re::DrawWorldSystem>(void)::{lambda(void *)#1}::__invoke(uint64_t a1)
{
  return (id)(a1 + 8);
}

void re::internal::defaultRelease<re::DrawWorldSystem>(void)::{lambda(void *)#1}::__invoke(uint64_t a1)
{
}

uint64_t re::SmallHashSet<unsigned long long,8ul,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,false>::~SmallHashSet(uint64_t a1)
{
  int v2 = (uint64_t *)(a1 + 96);
  if (*(void *)(a1 + 96)) {
    re::HashSetBase<unsigned long long,unsigned long long,re::internal::ValueAsKey<unsigned long long>,re::PrecalculatedHash,re::EqualTo<unsigned long long>,false,false>::deinit((uint64_t *)(a1 + 96));
  }
  *(void *)(a1 + 16) = 0;
  ++*(_DWORD *)(a1 + 24);
  *(void *)a1 = 0;
  re::HashSetBase<unsigned long long,unsigned long long,re::internal::ValueAsKey<unsigned long long>,re::PrecalculatedHash,re::EqualTo<unsigned long long>,false,false>::deinit(v2);
  *(void *)(a1 + 16) = 0;
  ++*(_DWORD *)(a1 + 24);
  return a1;
}

_OWORD *re::ecs2::SceneSpaceRootComponent::setSceneToImmersiveTransform(_OWORD *result, float32x4_t *a2)
{
  if (vmaxvq_u8((uint8x16_t)vmvnq_s8(vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vorrq_s8((int8x16_t)vcltzq_f32(*a2), (int8x16_t)vcgezq_f32(*a2)), (int16x8_t)vorrq_s8((int8x16_t)vcltzq_f32(a2[1]), (int8x16_t)vcgezq_f32(a2[1]))), (int8x16_t)vuzp1q_s16((int16x8_t)vorrq_s8((int8x16_t)vcltzq_f32(a2[2]), (int8x16_t)vcgezq_f32(a2[2])), (int16x8_t)vorrq_s8((int8x16_t)vcltzq_f32(a2[3]), (int8x16_t)vcgezq_f32(a2[3])))))))
  {
    re::internal::assertLog((re::internal *)4, (uint64_t)a2, "assertion failure: '%s' (%s:line %i) SceneSpaceRoot cannot have NaN transform", "!matrix.containsNaN()", "setSceneToImmersiveTransform", 17);
    double result = (_OWORD *)_os_crash();
    __break(1u);
  }
  else
  {
    float32x4_t v2 = *a2;
    float32x4_t v3 = a2[1];
    float32x4_t v4 = a2[3];
    result[4] = a2[2];
    result[5] = v4;
    result[2] = v2;
    result[3] = v3;
  }
  return result;
}

void *re::ecs2::SceneSpaceRootSystem::willAddSceneToECSService(void *this, re::ecs2::Scene *a2)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  uint64_t v6 = a2;
  if (a2)
  {
    uint64_t v2 = (uint64_t)this;
    float32x4_t v3 = (re::ecs2::Scene *)((char *)a2 + 200);
    uint64_t v4 = re::ecs2::SceneComponentTable::get((re::ecs2::Scene *)((char *)a2 + 200), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::SceneSpaceRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    uint64_t v7 = v2;
    uint64_t v8 = re::ecs2::SceneSpaceRootSystem::didAddSceneSpaceRootComponent;
    uint64_t v9 = 0;
    __n128 v10 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>,re::Slice<re::ecs2::SceneSpaceRootComponent*>>::createSubscription<re::ecs2::SceneSpaceRootSystem>(re::ecs2::SceneSpaceRootSystem *,REEventHandlerResult (re::ecs2::SceneSpaceRootSystem::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>*,re::Slice<re::ecs2::SceneSpaceRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>,re::Slice<re::ecs2::SceneSpaceRootComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneSpaceRootComponent*>&&)#1}::__invoke;
    re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription((_DWORD *)(v4 + 128), (uint64_t)&v7);
    uint64_t v5 = re::ecs2::SceneComponentTable::get(v3, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ImmersiveSpaceTrackerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    uint64_t v7 = v2;
    uint64_t v8 = re::ecs2::SceneSpaceRootSystem::didAddImmersiveSpaceTrackerComponent;
    uint64_t v9 = 0;
    __n128 v10 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>>::createSubscription<re::ecs2::SceneSpaceRootSystem>(re::ecs2::SceneSpaceRootSystem *,REEventHandlerResult (re::ecs2::SceneSpaceRootSystem::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>*,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>>::Subscription const&,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>&&)#1}::__invoke;
    re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription((_DWORD *)(v5 + 128), (uint64_t)&v7);
    uint64_t v7 = v2;
    uint64_t v8 = re::ecs2::SceneSpaceRootSystem::willRemoveImmersiveSpaceTrackerComponent;
    uint64_t v9 = 0;
    __n128 v10 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>>::createSubscription<re::ecs2::SceneSpaceRootSystem>(re::ecs2::SceneSpaceRootSystem *,REEventHandlerResult (re::ecs2::SceneSpaceRootSystem::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>*,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>>::Subscription const&,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>&&)#1}::__invoke;
    re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription((_DWORD *)(v5 + 392), (uint64_t)&v7);
    return std::__hash_table<re::ecs2::Scene *,std::hash<re::ecs2::Scene *>,std::equal_to<re::ecs2::Scene *>,std::allocator<re::ecs2::Scene *>>::__emplace_unique_key_args<re::ecs2::Scene *,re::ecs2::Scene * const&>(v2 + 104, &v6, &v6);
  }
  return this;
}

uint64_t re::ecs2::SceneSpaceRootSystem::didAddSceneSpaceRootComponent(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v6 = (void *)(a1 + 120);
  while (1)
  {
    uint64_t v6 = (void *)*v6;
    if (!v6) {
      break;
    }
    if (*(void *)(re::ecs2::SceneComponentTable::get((re::ecs2::SceneComponentTable *)(v6[2] + 200), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ImmersiveSpaceTrackerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)+ 24))
    {
      if (a4)
      {
        uint64_t v7 = 8 * a4;
        do
        {
          uint64_t v8 = *a3++;
          *(unsigned char *)(v8 + 97) = 1;
          v7 -= 8;
        }
        while (v7);
      }
      return 0;
    }
  }
  return 0;
}

uint64_t re::ecs2::SceneSpaceRootSystem::didAddImmersiveSpaceTrackerComponent(uint64_t a1)
{
  for (uint64_t i = *(void **)(a1 + 120); i; uint64_t i = (void *)*i)
  {
    uint64_t v2 = re::ecs2::SceneComponentTable::get((re::ecs2::SceneComponentTable *)(i[2] + 200), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::SceneSpaceRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    uint64_t v3 = *(void *)(v2 + 24);
    if (v3)
    {
      uint64_t v4 = *(uint64_t **)(v2 + 40);
      uint64_t v5 = 8 * v3;
      do
      {
        uint64_t v6 = *v4++;
        *(unsigned char *)(v6 + 97) = 1;
        v5 -= 8;
      }
      while (v5);
    }
  }
  return 0;
}

uint64_t re::ecs2::SceneSpaceRootSystem::willRemoveImmersiveSpaceTrackerComponent(uint64_t a1)
{
  for (uint64_t i = *(void **)(a1 + 120); i; uint64_t i = (void *)*i)
  {
    uint64_t v2 = re::ecs2::SceneComponentTable::get((re::ecs2::SceneComponentTable *)(i[2] + 200), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::SceneSpaceRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    uint64_t v3 = *(void *)(v2 + 24);
    if (v3)
    {
      uint64_t v4 = *(uint64_t **)(v2 + 40);
      uint64_t v5 = 8 * v3;
      do
      {
        uint64_t v6 = *v4++;
        *(unsigned char *)(v6 + 97) = 0;
        v5 -= 8;
      }
      while (v5);
    }
  }
  return 0;
}

uint64_t *re::ecs2::SceneSpaceRootSystem::willRemoveSceneFromECSService(uint64_t *this, re::ecs2::Scene *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  uint64_t v6 = a2;
  if (a2)
  {
    uint64_t v2 = (uint64_t)this;
    uint64_t v3 = (re::ecs2::Scene *)((char *)a2 + 200);
    uint64_t v4 = re::ecs2::SceneComponentTable::get((re::ecs2::Scene *)((char *)a2 + 200), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::SceneSpaceRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    *(void *)&long long v7 = v2;
    *((void *)&v7 + 1) = re::ecs2::SceneSpaceRootSystem::didAddSceneSpaceRootComponent;
    uint64_t v8 = 0;
    uint64_t v9 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>,re::Slice<re::ecs2::SceneSpaceRootComponent*>>::createSubscription<re::ecs2::SceneSpaceRootSystem>(re::ecs2::SceneSpaceRootSystem *,REEventHandlerResult (re::ecs2::SceneSpaceRootSystem::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>*,re::Slice<re::ecs2::SceneSpaceRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>,re::Slice<re::ecs2::SceneSpaceRootComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneSpaceRootComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(v4 + 128, &v7);
    uint64_t v5 = re::ecs2::SceneComponentTable::get(v3, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ImmersiveSpaceTrackerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    *(void *)&long long v7 = v2;
    *((void *)&v7 + 1) = re::ecs2::SceneSpaceRootSystem::didAddImmersiveSpaceTrackerComponent;
    uint64_t v8 = 0;
    uint64_t v9 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>>::createSubscription<re::ecs2::SceneSpaceRootSystem>(re::ecs2::SceneSpaceRootSystem *,REEventHandlerResult (re::ecs2::SceneSpaceRootSystem::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>*,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>>::Subscription const&,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(v5 + 128, &v7);
    *(void *)&long long v7 = v2;
    *((void *)&v7 + 1) = re::ecs2::SceneSpaceRootSystem::willRemoveImmersiveSpaceTrackerComponent;
    uint64_t v8 = 0;
    uint64_t v9 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>>::createSubscription<re::ecs2::SceneSpaceRootSystem>(re::ecs2::SceneSpaceRootSystem *,REEventHandlerResult (re::ecs2::SceneSpaceRootSystem::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>*,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>>::Subscription const&,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(v5 + 392, &v7);
    return std::__hash_table<re::ecs2::Scene *,std::hash<re::ecs2::Scene *>,std::equal_to<re::ecs2::Scene *>,std::allocator<re::ecs2::Scene *>>::__erase_unique<re::ecs2::Scene *>((void *)(v2 + 104), &v6);
  }
  return this;
}

void *re::ecs2::allocInfo_SceneSpaceRootComponent(re::ecs2 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&_MergedGlobals_162, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&_MergedGlobals_162))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF81C10, "SceneSpaceRootComponent");
    __cxa_guard_release(&_MergedGlobals_162);
  }
  return &unk_26AF81C10;
}

void re::ecs2::initInfo_SceneSpaceRootComponent(re::ecs2 *this, re::IntrospectionBase *a2)
{
  v9[0] = 0x624A17EA652AA8C2;
  v9[1] = "SceneSpaceRootComponent";
  re::StringID::destroyString((re::StringID *)v9);
  *((_OWORD *)this + 2) = v10;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81C00, memory_order_acquire) & 1) == 0)
  {
    uint64_t v4 = (re *)__cxa_guard_acquire(&qword_26AF81C00);
    if (v4)
    {
      uint64_t v5 = re::introspectionAllocator(v4);
      uint64_t v6 = re::ecs2::introspect_Component((re::IntrospectionBase **)1);
      uint64_t v7 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v5 + 32))(v5, 72, 8);
      *(_DWORD *)uint64_t v7 = 1;
      *(void *)(v7 + 8) = "Component";
      *(void *)(v7 + 16) = v6;
      *(void *)(v7 + 24) = 0;
      *(void *)(v7 + 32) = 0;
      *(_DWORD *)(v7 + 40) = 3;
      *(void *)(v7 + 48) = 0;
      *(void *)(v7 + 56) = 0;
      *(_DWORD *)(v7 + 64) = 0;
      qword_26AF81BF8 = v7;
      __cxa_guard_release(&qword_26AF81C00);
    }
  }
  *((void *)this + 2) = 0x7000000008;
  *((_DWORD *)this + 6) = 16;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 1;
  *((void *)this + 8) = &qword_26AF81BF8;
  *((void *)this + 9) = re::internal::defaultConstruct<re::ecs2::SceneSpaceRootComponent>;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 10) = re::internal::defaultDestruct<re::ecs2::SceneSpaceRootComponent>;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::ecs2::SceneSpaceRootComponent>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::ecs2::SceneSpaceRootComponent>;
  re::IntrospectionRegistry::add(this, v3);
  long long v8 = v10;
}

double re::internal::defaultConstruct<re::ecs2::SceneSpaceRootComponent>(int a1, int a2, ArcSharedObject *this)
{
  *((_OWORD *)this + 5) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *(_OWORD *)this = 0u;
  ArcSharedObject::ArcSharedObject(this, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E5A30;
  *(_OWORD *)(v3 + 32) = xmmword_23435FD50;
  *(_OWORD *)(v3 + 48) = xmmword_23435FD60;
  double result = 0.0;
  *(_OWORD *)(v3 + 64) = xmmword_23435FD80;
  *(_OWORD *)(v3 + 80) = xmmword_23435FBB0;
  *(_WORD *)(v3 + 96) = 0;
  return result;
}

void *re::internal::defaultDestruct<re::ecs2::SceneSpaceRootComponent>(uint64_t a1, uint64_t a2, void *a3)
{
  *a3 = &unk_26E6DECE0;
  return objc_destructInstance(a3 + 1);
}

double re::internal::defaultConstructV2<re::ecs2::SceneSpaceRootComponent>(ArcSharedObject *a1)
{
  *((_OWORD *)a1 + 5) = 0u;
  *((_OWORD *)a1 + 6) = 0u;
  *((_OWORD *)a1 + 3) = 0u;
  *((_OWORD *)a1 + 4) = 0u;
  *((_OWORD *)a1 + 1) = 0u;
  *((_OWORD *)a1 + 2) = 0u;
  *(_OWORD *)a1 = 0u;
  ArcSharedObject::ArcSharedObject(a1, 0);
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 24) = 0;
  *(void *)uint64_t v1 = &unk_26E6E5A30;
  *(_OWORD *)(v1 + 32) = xmmword_23435FD50;
  *(_OWORD *)(v1 + 48) = xmmword_23435FD60;
  double result = 0.0;
  *(_OWORD *)(v1 + 64) = xmmword_23435FD80;
  *(_OWORD *)(v1 + 80) = xmmword_23435FBB0;
  *(_WORD *)(v1 + 96) = 0;
  return result;
}

void *re::internal::defaultDestructV2<re::ecs2::SceneSpaceRootComponent>(void *a1)
{
  *a1 = &unk_26E6DECE0;
  return objc_destructInstance(a1 + 1);
}

uint64_t re::ecs2::introspect_SceneSpaceRootComponent(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"SceneSpaceRootComponent", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_SceneSpaceRootComponent, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_SceneSpaceRootComponent, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::SceneSpaceRootComponent>, this);
}

void *re::ecs2::allocInfo_SceneSpaceRootSystem(re::ecs2 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81C08, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF81C08))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF81C88, "SceneSpaceRootSystem");
    __cxa_guard_release(&qword_26AF81C08);
  }
  return &unk_26AF81C88;
}

void re::ecs2::initInfo_SceneSpaceRootSystem(re::ecs2 *this, re::IntrospectionBase *a2)
{
  v5[0] = 0xECA6C31A05B82A96;
  v5[1] = "SceneSpaceRootSystem";
  re::StringID::destroyString((re::StringID *)v5);
  *((_OWORD *)this + 2) = v6;
  *((void *)this + 2) = 0x9000000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 0;
  *((void *)this + 8) = &re::ecs2::initInfo_SceneSpaceRootSystem(re::IntrospectionBase *)::structureAttributes;
  *((void *)this + 9) = re::internal::defaultConstruct<re::ecs2::SceneSpaceRootSystem>;
  *((void *)this + 10) = re::internal::defaultDestruct<re::ecs2::SceneSpaceRootSystem>;
  *((void *)this + 11) = re::internal::defaultRetain<re::ecs2::SceneSpaceRootSystem>(void)::{lambda(void *)#1}::__invoke;
  *((void *)this + 12) = re::internal::defaultRelease<re::ecs2::SceneSpaceRootSystem>(void)::{lambda(void *)#1}::__invoke;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::ecs2::SceneSpaceRootSystem>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::ecs2::SceneSpaceRootSystem>;
  re::IntrospectionRegistry::add(this, v3);
  long long v4 = v6;
}

double re::internal::defaultConstruct<re::ecs2::SceneSpaceRootSystem>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  re::ecs2::System::System(a3, 1);
  *(void *)uint64_t v3 = &unk_26E6E59A8;
  double result = 0.0;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_OWORD *)(v3 + 120) = 0u;
  *(_DWORD *)(v3 + 136) = 1065353216;
  return result;
}

void *re::internal::defaultDestruct<re::ecs2::SceneSpaceRootSystem>(uint64_t a1, uint64_t a2, void *a3)
{
  std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)(a3 + 13));
  *a3 = &unk_26E6DECE0;
  return objc_destructInstance(a3 + 1);
}

double re::internal::defaultConstructV2<re::ecs2::SceneSpaceRootSystem>(uint64_t a1)
{
  re::ecs2::System::System(a1, 1);
  *(void *)uint64_t v1 = &unk_26E6E59A8;
  double result = 0.0;
  *(_OWORD *)(v1 + 104) = 0u;
  *(_OWORD *)(v1 + 120) = 0u;
  *(_DWORD *)(v1 + 136) = 1065353216;
  return result;
}

void *re::internal::defaultDestructV2<re::ecs2::SceneSpaceRootSystem>(void *a1)
{
  std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)(a1 + 13));
  *a1 = &unk_26E6DECE0;
  return objc_destructInstance(a1 + 1);
}

uint64_t re::ecs2::introspect_SceneSpaceRootSystem(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"SceneSpaceRootSystem", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_SceneSpaceRootSystem, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_SceneSpaceRootSystem, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::SceneSpaceRootSystem>, this);
}

void re::ecs2::SceneSpaceRootSystem::~SceneSpaceRootSystem(re::ecs2::SceneSpaceRootSystem *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::SceneSpaceRootSystem::typeInfo(re::ecs2::SceneSpaceRootSystem *this)
{
  return re::internal::getOrCreateInfo((re::internal *)"SceneSpaceRootSystem", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_SceneSpaceRootSystem, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_SceneSpaceRootSystem, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::SceneSpaceRootSystem>, 0);
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>,re::Slice<re::ecs2::SceneSpaceRootComponent*>>::createSubscription<re::ecs2::SceneSpaceRootSystem>(re::ecs2::SceneSpaceRootSystem *,REEventHandlerResult (re::ecs2::SceneSpaceRootSystem::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>*,re::Slice<re::ecs2::SceneSpaceRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneSpaceRootComponent>,re::Slice<re::ecs2::SceneSpaceRootComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneSpaceRootComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  long long v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>>::createSubscription<re::ecs2::SceneSpaceRootSystem>(re::ecs2::SceneSpaceRootSystem *,REEventHandlerResult (re::ecs2::SceneSpaceRootSystem::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>*,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImmersiveSpaceTrackerComponent>,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>>::Subscription const&,re::Slice<re::ecs2::ImmersiveSpaceTrackerComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  long long v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

void *std::__hash_table<re::ecs2::Scene *,std::hash<re::ecs2::Scene *>,std::equal_to<re::ecs2::Scene *>,std::allocator<re::ecs2::Scene *>>::__emplace_unique_key_args<re::ecs2::Scene *,re::ecs2::Scene * const&>(uint64_t a1, void *a2, void *a3)
{
  unint64_t v6 = 0x9DDFEA08EB382D69 * ((8 * *a2 + 8) ^ HIDWORD(*a2));
  unint64_t v7 = 0x9DDFEA08EB382D69 * (HIDWORD(*a2) ^ (v6 >> 47) ^ v6);
  unint64_t v8 = 0x9DDFEA08EB382D69 * (v7 ^ (v7 >> 47));
  unint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      unint64_t v3 = 0x9DDFEA08EB382D69 * (v7 ^ (v7 >> 47));
      if (v8 >= v9) {
        unint64_t v3 = v8 % v9;
      }
    }
    else
    {
      unint64_t v3 = v8 & (v9 - 1);
    }
    uint64_t v11 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v11)
    {
      for (uint64_t i = *v11; i; uint64_t i = (void *)*i)
      {
        unint64_t v13 = i[1];
        if (v13 == v8)
        {
          if (i[2] == *a2) {
            return i;
          }
        }
        else
        {
          if (v10.u32[0] > 1uLL)
          {
            if (v13 >= v9) {
              v13 %= v9;
            }
          }
          else
          {
            v13 &= v9 - 1;
          }
          if (v13 != v3) {
            break;
          }
        }
      }
    }
  }
  uint64_t i = operator new(0x18uLL);
  *uint64_t i = 0;
  i[1] = v8;
  i[2] = *a3;
  float v14 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v15 = *(float *)(a1 + 32);
  if (!v9 || (float)(v15 * (float)v9) < v14)
  {
    BOOL v16 = 1;
    if (v9 >= 3) {
      BOOL v16 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v17 = v16 | (2 * v9);
    unint64_t v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18) {
      size_t v19 = v18;
    }
    else {
      size_t v19 = v17;
    }
    std::__hash_table<std::__hash_value_type<unsigned long long,re::PeerIDValidator::Entry>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,re::PeerIDValidator::Entry>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,re::PeerIDValidator::Entry>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,re::PeerIDValidator::Entry>>>::__rehash<true>(a1, v19);
    unint64_t v9 = *(void *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9) {
        unint64_t v3 = v8 % v9;
      }
      else {
        unint64_t v3 = v8;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v8;
    }
  }
  uint64_t v20 = *(void *)a1;
  long long v21 = *(void **)(*(void *)a1 + 8 * v3);
  if (v21)
  {
    *uint64_t i = *v21;
LABEL_38:
    *long long v21 = i;
    goto LABEL_39;
  }
  *uint64_t i = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = i;
  *(void *)(v20 + 8 * v3) = a1 + 16;
  if (*i)
  {
    unint64_t v22 = *(void *)(*i + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v22 >= v9) {
        v22 %= v9;
      }
    }
    else
    {
      v22 &= v9 - 1;
    }
    long long v21 = (void *)(*(void *)a1 + 8 * v22);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return i;
}

uint64_t *std::__hash_table<re::ecs2::Scene *,std::hash<re::ecs2::Scene *>,std::equal_to<re::ecs2::Scene *>,std::allocator<re::ecs2::Scene *>>::__erase_unique<re::ecs2::Scene *>(void *a1, void *a2)
{
  double result = std::__hash_table<re::ecs2::Scene *,std::hash<re::ecs2::Scene *>,std::equal_to<re::ecs2::Scene *>,std::allocator<re::ecs2::Scene *>>::find<re::ecs2::Scene *>(a1, a2);
  if (result)
  {
    std::__hash_table<std::__hash_value_type<unsigned long long,re::PeerIDValidator::Entry>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,re::PeerIDValidator::Entry>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,re::PeerIDValidator::Entry>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,re::PeerIDValidator::Entry>>>::erase(a1, result);
    return (uint64_t *)1;
  }
  return result;
}

void *std::__hash_table<re::ecs2::Scene *,std::hash<re::ecs2::Scene *>,std::equal_to<re::ecs2::Scene *>,std::allocator<re::ecs2::Scene *>>::find<re::ecs2::Scene *>(void *a1, void *a2)
{
  int8x8_t v2 = (int8x8_t)a1[1];
  if (!*(void *)&v2) {
    return 0;
  }
  unint64_t v3 = 0x9DDFEA08EB382D69 * ((8 * *a2 + 8) ^ HIDWORD(*a2));
  unint64_t v4 = 0x9DDFEA08EB382D69 * (HIDWORD(*a2) ^ (v3 >> 47) ^ v3);
  unint64_t v5 = 0x9DDFEA08EB382D69 * (v4 ^ (v4 >> 47));
  uint8x8_t v6 = (uint8x8_t)vcnt_s8(v2);
  v6.i16[0] = vaddlv_u8(v6);
  if (v6.u32[0] > 1uLL)
  {
    unint64_t v7 = v5;
    if (v5 >= *(void *)&v2) {
      unint64_t v7 = v5 % *(void *)&v2;
    }
  }
  else
  {
    unint64_t v7 = v5 & (*(void *)&v2 - 1);
  }
  unint64_t v8 = *(void **)(*a1 + 8 * v7);
  if (!v8) {
    return 0;
  }
  double result = (void *)*v8;
  if (*v8)
  {
    do
    {
      unint64_t v10 = result[1];
      if (v10 == v5)
      {
        if (result[2] == *a2) {
          return result;
        }
      }
      else
      {
        if (v6.u32[0] > 1uLL)
        {
          if (v10 >= *(void *)&v2) {
            v10 %= *(void *)&v2;
          }
        }
        else
        {
          v10 &= *(void *)&v2 - 1;
        }
        if (v10 != v7) {
          return 0;
        }
      }
      double result = (void *)*result;
    }
    while (result);
  }
  return result;
}

void re::ecs2::SceneSpaceRootComponent::~SceneSpaceRootComponent(re::ecs2::SceneSpaceRootComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SceneSpaceRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::SceneSpaceRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SceneSpaceRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::SceneSpaceRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::SceneSpaceRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

id re::internal::defaultRetain<re::ecs2::SceneSpaceRootSystem>(void)::{lambda(void *)#1}::__invoke(uint64_t a1)
{
  return (id)(a1 + 8);
}

void re::internal::defaultRelease<re::ecs2::SceneSpaceRootSystem>(void)::{lambda(void *)#1}::__invoke(uint64_t a1)
{
}

void *re::ecs2::RenderingSystem::renderingSubsystemTypes@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 24) = 0;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81D08, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF81D08))
  {
    _MergedGlobals_163 = re::ecs2::introspect_PortalRenderingSystem(0);
    __cxa_guard_release(&qword_26AF81D08);
  }
  unint64_t v4 = (void *)_MergedGlobals_163;
  re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
  {
    re::introspect<re::DrawWorldSystem>(void)::info = (_UNKNOWN *)re::introspect_DrawWorldSystem(0);
  }
  unint64_t v4 = re::introspect<re::DrawWorldSystem>(void)::info;
  re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81D18, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF81D18))
  {
    qword_26AF81D10 = re::ecs2::introspect_VisualProxyCaptureSystem(0);
    __cxa_guard_release(&qword_26AF81D18);
  }
  unint64_t v4 = (void *)qword_26AF81D10;
  re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
  {
    re::introspect<re::SkyboxSystem>(void)::info = (_UNKNOWN *)re::introspect_SkyboxSystem(0);
  }
  unint64_t v4 = re::introspect<re::SkyboxSystem>(void)::info;
  re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81D28, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF81D28))
  {
    qword_26AF81D20 = re::ecs2::introspect_UpdateRenderServicesDataSystem(0);
    __cxa_guard_release(&qword_26AF81D28);
  }
  unint64_t v4 = (void *)qword_26AF81D20;
  re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81D38, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF81D38))
  {
    qword_26AF81D30 = re::ecs2::introspect_SkeletalPoseBufferSystem(0);
    __cxa_guard_release(&qword_26AF81D38);
  }
  unint64_t v4 = (void *)qword_26AF81D30;
  re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81D48, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF81D48))
  {
    qword_26AF81D40 = re::ecs2::introspect_BlendShapeWeightsBufferSystem(0);
    __cxa_guard_release(&qword_26AF81D48);
  }
  unint64_t v4 = (void *)qword_26AF81D40;
  re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81D58, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF81D58))
  {
    qword_26AF81D50 = re::ecs2::introspect_JiggleSystem(0);
    __cxa_guard_release(&qword_26AF81D58);
  }
  unint64_t v4 = (void *)qword_26AF81D50;
  re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81D68, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF81D68))
  {
    qword_26AF81D60 = re::ecs2::introspect_WrapSystem(0);
    __cxa_guard_release(&qword_26AF81D68);
  }
  unint64_t v4 = (void *)qword_26AF81D60;
  re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81D78, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF81D78))
  {
    qword_26AF81D70 = re::ecs2::introspect_VertexCacheSystem(0);
    __cxa_guard_release(&qword_26AF81D78);
  }
  unint64_t v4 = (void *)qword_26AF81D70;
  re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81D88, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF81D88))
  {
    qword_26AF81D80 = re::ecs2::introspect_SubdivisionSurfaceSystem(0);
    __cxa_guard_release(&qword_26AF81D88);
  }
  unint64_t v4 = (void *)qword_26AF81D80;
  re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
  {
    re::introspect<re::ecs2::CustomDeformerSystem>(void)::info = re::ecs2::introspect_CustomDeformerSystem(0);
  }
  unint64_t v4 = (void *)re::introspect<re::ecs2::CustomDeformerSystem>(void)::info;
  re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81D98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF81D98))
  {
    qword_26AF81D90 = re::ecs2::introspect_DynamicBoundingBoxSystem(0);
    __cxa_guard_release(&qword_26AF81D98);
  }
  unint64_t v4 = (void *)qword_26AF81D90;
  re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
  {
    re::introspect<re::ecs2::ShadowClusterSystem>(void)::info = (_UNKNOWN *)re::ecs2::introspect_ShadowClusterSystem(0);
  }
  unint64_t v4 = re::introspect<re::ecs2::ShadowClusterSystem>(void)::info;
  re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81DA8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF81DA8))
  {
    qword_26AF81DA0 = re::ecs2::introspect_MeshShadowSystem(0);
    __cxa_guard_release(&qword_26AF81DA8);
  }
  unint64_t v4 = (void *)qword_26AF81DA0;
  re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
  {
    re::introspect<re::ecs2::ProjectiveShadowReceiverSystem>(void)::info = (_UNKNOWN *)re::ecs2::introspect_ProjectiveShadowReceiverSystem(0);
  }
  unint64_t v4 = re::introspect<re::ecs2::ProjectiveShadowReceiverSystem>(void)::info;
  re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81DB8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF81DB8))
  {
    qword_26AF81DB0 = re::ecs2::introspect_SceneUnderstandingMeshSystem(0);
    __cxa_guard_release(&qword_26AF81DB8);
  }
  unint64_t v4 = (void *)qword_26AF81DB0;
  re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81DC8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF81DC8))
  {
    qword_26AF81DC0 = re::ecs2::introspect_PlanarReflectionSystem(0);
    __cxa_guard_release(&qword_26AF81DC8);
  }
  unint64_t v4 = (void *)qword_26AF81DC0;
  re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
  {
    re::introspect<re::ecs2::LightSystem>(void)::info = (_UNKNOWN *)re::ecs2::introspect_LightSystem(0);
  }
  unint64_t v4 = re::introspect<re::ecs2::LightSystem>(void)::info;
  re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
  {
    re::introspect<re::ecs2::VFXEmitterSystem>(void)::info = (_UNKNOWN *)re::ecs2::introspect_VFXEmitterSystem(0);
  }
  unint64_t v4 = re::introspect<re::ecs2::VFXEmitterSystem>(void)::info;
  re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
  {
    re::introspect<re::ecs2::VFXSystem>(void)::info = (_UNKNOWN *)re::ecs2::introspect_VFXSystem(0);
  }
  unint64_t v4 = re::introspect<re::ecs2::VFXSystem>(void)::info;
  re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
  {
    re::introspect<re::ecs2::ImageBasedLightSystem>(void)::info = (_UNKNOWN *)re::ecs2::introspect_ImageBasedLightSystem(0);
  }
  unint64_t v4 = re::introspect<re::ecs2::ImageBasedLightSystem>(void)::info;
  re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
  {
    re::introspect<re::ecs2::VirtualEnvironmentProbeSystem>(void)::info = (_UNKNOWN *)re::ecs2::introspect_VirtualEnvironmentProbeSystem(0);
  }
  unint64_t v4 = re::introspect<re::ecs2::VirtualEnvironmentProbeSystem>(void)::info;
  re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
  {
    re::introspect<re::ecs2::ImageBasedReflectionSystem>(void)::info = (_UNKNOWN *)re::ecs2::introspect_ImageBasedReflectionSystem(0);
  }
  unint64_t v4 = re::introspect<re::ecs2::ImageBasedReflectionSystem>(void)::info;
  re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81DD8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF81DD8))
  {
    qword_26AF81DD0 = re::ecs2::introspect_MipmapGenerationSystem(0);
    __cxa_guard_release(&qword_26AF81DD8);
  }
  unint64_t v4 = (void *)qword_26AF81DD0;
  re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81DE8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF81DE8))
  {
    qword_26AF81DE0 = re::ecs2::introspect_BlurGenerationSystem(0);
    __cxa_guard_release(&qword_26AF81DE8);
  }
  unint64_t v4 = (void *)qword_26AF81DE0;
  re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
  {
    re::introspect<re::ecs2::AnchorSystem>(void)::info = (_UNKNOWN *)re::ecs2::introspect_AnchorSystem(0);
  }
  unint64_t v4 = re::introspect<re::ecs2::AnchorSystem>(void)::info;
  re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
  {
    re::introspect<re::ecs2::MeshSystem>(void)::info = (_UNKNOWN *)re::ecs2::introspect_MeshSystem(0);
  }
  unint64_t v4 = re::introspect<re::ecs2::MeshSystem>(void)::info;
  re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81DF8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF81DF8))
  {
    qword_26AF81DF0 = re::ecs2::introspect_MeshSortingSystem(0);
    __cxa_guard_release(&qword_26AF81DF8);
  }
  unint64_t v4 = (void *)qword_26AF81DF0;
  re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
  {
    re::introspect<re::ecs2::DynamicTextSystem>(void)::info = (_UNKNOWN *)re::ecs2::introspect_DynamicTextSystem(0);
  }
  unint64_t v4 = re::introspect<re::ecs2::DynamicTextSystem>(void)::info;
  re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
  {
    re::introspect<re::ecs2::StaticTextSystem>(void)::info = (_UNKNOWN *)re::ecs2::introspect_StaticTextSystem(0);
  }
  unint64_t v4 = re::introspect<re::ecs2::StaticTextSystem>(void)::info;
  re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
  {
    re::introspect<re::ecs2::AREnvironmentProbeSystem>(void)::info = (_UNKNOWN *)re::ecs2::introspect_AREnvironmentProbeSystem(0);
  }
  unint64_t v4 = re::introspect<re::ecs2::AREnvironmentProbeSystem>(void)::info;
  re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81E08, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF81E08))
  {
    qword_26AF81E00 = re::ecs2::introspect_ARSegmentationSystem(0);
    __cxa_guard_release(&qword_26AF81E08);
  }
  unint64_t v4 = (void *)qword_26AF81E00;
  re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
  {
    re::introspect<re::ecs2::RayTracedShadowReceiverSystem>(void)::info = (_UNKNOWN *)re::ecs2::introspect_RayTracedShadowReceiverSystem(0);
  }
  unint64_t v4 = re::introspect<re::ecs2::RayTracedShadowReceiverSystem>(void)::info;
  re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81E18, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF81E18))
  {
    qword_26AF81E10 = re::ecs2::introspect_RenderGraphFileProviderArraySystem(0);
    __cxa_guard_release(&qword_26AF81E18);
  }
  unint64_t v4 = (void *)qword_26AF81E10;
  re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81E28, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF81E28))
  {
    qword_26AF81E20 = re::ecs2::introspect_VisualProxySystem(0);
    __cxa_guard_release(&qword_26AF81E28);
  }
  unint64_t v4 = (void *)qword_26AF81E20;
  re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81E38, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF81E38))
  {
    qword_26AF81E30 = re::ecs2::introspect_PrimitiveRenderingSystem(0);
    __cxa_guard_release(&qword_26AF81E38);
  }
  unint64_t v4 = (void *)qword_26AF81E30;
  re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81E48, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF81E48))
  {
    qword_26AF81E40 = re::ecs2::introspect_RenderCallbacksSystem(0);
    __cxa_guard_release(&qword_26AF81E48);
  }
  unint64_t v4 = (void *)qword_26AF81E40;
  re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81E58, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF81E58))
  {
    qword_26AF81E50 = re::ecs2::introspect_VisualProxyScopeSystem(0);
    __cxa_guard_release(&qword_26AF81E58);
  }
  unint64_t v4 = (void *)qword_26AF81E50;
  re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
  {
    re::introspect<re::ecs2::CameraViewDescriptorsSystem>(void)::info = (_UNKNOWN *)re::ecs2::introspect_CameraViewDescriptorsSystem(0);
  }
  unint64_t v4 = re::introspect<re::ecs2::CameraViewDescriptorsSystem>(void)::info;
  return re::DynamicArray<re::TransitionCondition *>::add((void *)a1, &v4);
}

uint64_t (***re::ecs2::RenderingSystem::addRenderingSubsystemsUsingLambda(uint64_t a1))(void)
{
  uint64_t v226 = *MEMORY[0x263EF8340];
  uint64_t v143 = *(void *)(a1 + 24);
  uint64_t v144 = 0;
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v142, a1);
  uint64_t v224 = v143;
  uint64_t v225 = 0;
  uint64_t v1 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v223, (uint64_t)v142);
  int8x8_t v2 = re::globalAllocators(v1);
  unint64_t v3 = (_OWORD *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 160, 8);
  *unint64_t v3 = 0u;
  v3[1] = 0u;
  v3[2] = 0u;
  v3[3] = 0u;
  v3[4] = 0u;
  v3[5] = 0u;
  v3[6] = 0u;
  v3[7] = 0u;
  v3[8] = 0u;
  v3[9] = 0u;
  re::ecs2::System::System((uint64_t)v3, 1, 1);
  *(void *)(v4 + 152) = 0;
  *(_OWORD *)(v4 + 136) = 0u;
  *(_OWORD *)(v4 + 120) = 0u;
  *(_OWORD *)(v4 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)uint64_t v4 = &unk_26E701978;
  v221[0] = v4;
  (*(void (**)(uint64_t, void *))(*(void *)v225 + 16))(v225, v221);
  if (v221[0]) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v223);
  v221[3] = v143;
  uint64_t v222 = 0;
  unint64_t v5 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v221, (uint64_t)v142);
  uint8x8_t v6 = re::globalAllocators(v5);
  unint64_t v7 = (_OWORD *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v6[2] + 32))(v6[2], 160, 8);
  *unint64_t v7 = 0u;
  v7[1] = 0u;
  v7[2] = 0u;
  v7[3] = 0u;
  v7[4] = 0u;
  v7[5] = 0u;
  v7[6] = 0u;
  v7[7] = 0u;
  v7[8] = 0u;
  v7[9] = 0u;
  re::ecs2::System::System((uint64_t)v7, 1, 1);
  *(void *)(v8 + 152) = 0;
  *(_OWORD *)(v8 + 136) = 0u;
  *(_OWORD *)(v8 + 120) = 0u;
  *(_OWORD *)(v8 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)uint64_t v8 = &unk_26E6E5890;
  v219[0] = v8;
  (*(void (**)(uint64_t, void *))(*(void *)v222 + 16))(v222, v219);
  if (v219[0]) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v221);
  v219[3] = v143;
  uint64_t v220 = 0;
  unint64_t v9 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v219, (uint64_t)v142);
  unint64_t v10 = re::globalAllocators(v9);
  uint64_t v11 = (re::ecs2::VisualProxyCaptureSystem *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v10[2] + 32))(v10[2], 416, 8);
  v217[0] = re::ecs2::VisualProxyCaptureSystem::VisualProxyCaptureSystem(v11);
  (*(void (**)(uint64_t, void *))(*(void *)v220 + 16))(v220, v217);
  if (v217[0]) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v219);
  v217[3] = v143;
  uint64_t v218 = 0;
  uint64_t v12 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v217, (uint64_t)v142);
  unint64_t v13 = re::globalAllocators(v12);
  float v14 = (_OWORD *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v13[2] + 32))(v13[2], 160, 8);
  *float v14 = 0u;
  v14[1] = 0u;
  void v14[2] = 0u;
  v14[3] = 0u;
  v14[4] = 0u;
  v14[5] = 0u;
  v14[6] = 0u;
  v14[7] = 0u;
  v14[8] = 0u;
  v14[9] = 0u;
  re::ecs2::System::System((uint64_t)v14, 1, 1);
  *(void *)(v15 + 152) = 0;
  *(_OWORD *)(v15 + 136) = 0u;
  *(_OWORD *)(v15 + 120) = 0u;
  *(_OWORD *)(v15 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)uint64_t v15 = &unk_26E6FD3F0;
  v215[0] = v15;
  (*(void (**)(uint64_t, void *))(*(void *)v218 + 16))(v218, v215);
  if (v215[0]) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v217);
  v215[3] = v143;
  uint64_t v216 = 0;
  BOOL v16 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v215, (uint64_t)v142);
  unint64_t v17 = re::globalAllocators(v16);
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v17[2] + 32))(v17[2], 232, 8);
  *(_OWORD *)uint64_t v18 = 0u;
  *(_OWORD *)(v18 + 16) = 0u;
  *(_OWORD *)(v18 + 32) = 0u;
  *(_OWORD *)(v18 + 48) = 0u;
  *(_OWORD *)(v18 + 64) = 0u;
  *(_OWORD *)(v18 + 80) = 0u;
  *(_OWORD *)(v18 + 96) = 0u;
  *(_OWORD *)(v18 + 112) = 0u;
  *(_OWORD *)(v18 + 128) = 0u;
  *(_OWORD *)(v18 + 144) = 0u;
  *(_OWORD *)(v18 + 160) = 0u;
  *(_OWORD *)(v18 + 176) = 0u;
  *(_OWORD *)(v18 + 192) = 0u;
  *(_OWORD *)(v18 + 208) = 0u;
  *(void *)(v18 + 224) = 0;
  re::ecs2::System::System(v18, 1, 1);
  *(void *)(v19 + 152) = 0;
  *(_OWORD *)(v19 + 136) = 0u;
  *(_OWORD *)(v19 + 120) = 0u;
  *(_OWORD *)(v19 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)uint64_t v19 = &unk_26E7058A8;
  *(_OWORD *)(v19 + 160) = 0u;
  *(_OWORD *)(v19 + 176) = 0u;
  *(_OWORD *)(v19 + 192) = 0u;
  *(_OWORD *)(v19 + 208) = 0u;
  *(void *)(v19 + 224) = 0;
  v213[0] = v19;
  (*(void (**)(uint64_t, void *))(*(void *)v216 + 16))(v216, v213);
  if (v213[0]) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v215);
  v213[3] = v143;
  uint64_t v214 = 0;
  uint64_t v20 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v213, (uint64_t)v142);
  long long v21 = re::globalAllocators(v20);
  unint64_t v22 = (re::ecs2::SkeletalPoseBufferSystem *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v21[2] + 32))(v21[2], 448, 8);
  v211[0] = re::ecs2::SkeletalPoseBufferSystem::SkeletalPoseBufferSystem(v22);
  (*(void (**)(uint64_t, void *))(*(void *)v214 + 16))(v214, v211);
  if (v211[0]) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v213);
  v211[3] = v143;
  uint64_t v212 = 0;
  BOOL v23 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v211, (uint64_t)v142);
  uint64_t v24 = re::globalAllocators(v23);
  uint64_t v25 = (re::ecs2::BlendShapeWeightsBufferSystem *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v24[2] + 32))(v24[2], 456, 8);
  v209[0] = re::ecs2::BlendShapeWeightsBufferSystem::BlendShapeWeightsBufferSystem(v25);
  (*(void (**)(uint64_t, void *))(*(void *)v212 + 16))(v212, v209);
  if (v209[0]) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v211);
  v209[3] = v143;
  uint64_t v210 = 0;
  uint64_t v26 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v209, (uint64_t)v142);
  uint64_t v27 = re::globalAllocators(v26);
  uint64_t v28 = (re::ecs2::JiggleSystem *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v27[2] + 32))(v27[2], 440, 8);
  v207[0] = re::ecs2::JiggleSystem::JiggleSystem(v28);
  (*(void (**)(uint64_t, void *))(*(void *)v210 + 16))(v210, v207);
  if (v207[0]) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v209);
  v207[3] = v143;
  uint64_t v208 = 0;
  uint64_t v29 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v207, (uint64_t)v142);
  uint64_t v30 = re::globalAllocators(v29);
  unsigned int v31 = (re::ecs2::WrapSystem *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v30[2] + 32))(v30[2], 440, 8);
  v205[0] = re::ecs2::WrapSystem::WrapSystem(v31);
  (*(void (**)(uint64_t, void *))(*(void *)v208 + 16))(v208, v205);
  if (v205[0]) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v207);
  v205[3] = v143;
  uint64_t v206 = 0;
  int v32 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v205, (uint64_t)v142);
  BOOL v33 = re::globalAllocators(v32);
  uint64_t v34 = (re::ecs2::VertexCacheSystem *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v33[2] + 32))(v33[2], 448, 8);
  v203[0] = re::ecs2::VertexCacheSystem::VertexCacheSystem(v34);
  (*(void (**)(uint64_t, void *))(*(void *)v206 + 16))(v206, v203);
  if (v203[0]) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v205);
  v203[3] = v143;
  uint64_t v204 = 0;
  uint64_t v35 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v203, (uint64_t)v142);
  char v36 = re::globalAllocators(v35);
  uint64_t v37 = (re::ecs2::SubdivisionSurfaceSystem *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v36[2] + 32))(v36[2], 440, 8);
  v201[0] = re::ecs2::SubdivisionSurfaceSystem::SubdivisionSurfaceSystem(v37);
  (*(void (**)(uint64_t, void *))(*(void *)v204 + 16))(v204, v201);
  if (v201[0]) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v203);
  v201[3] = v143;
  uint64_t v202 = 0;
  long long v38 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v201, (uint64_t)v142);
  uint64_t v39 = re::globalAllocators(v38);
  BOOL v40 = (re::ecs2::CustomDeformerSystem *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v39[2] + 32))(v39[2], 440, 8);
  v199[0] = re::ecs2::CustomDeformerSystem::CustomDeformerSystem(v40);
  (*(void (**)(uint64_t, void *))(*(void *)v202 + 16))(v202, v199);
  if (v199[0]) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v201);
  v199[3] = v143;
  uint64_t v200 = 0;
  unint64_t v41 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v199, (uint64_t)v142);
  unint64_t v42 = re::globalAllocators(v41);
  float32x4_t v43 = (re::ecs2::DynamicBoundingBoxSystem *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v42[2] + 32))(v42[2], 488, 8);
  v197[0] = re::ecs2::DynamicBoundingBoxSystem::DynamicBoundingBoxSystem(v43);
  (*(void (**)(uint64_t, void *))(*(void *)v200 + 16))(v200, v197);
  if (v197[0]) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v199);
  v197[3] = v143;
  uint64_t v198 = 0;
  uint64_t v44 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v197, (uint64_t)v142);
  uint64_t v45 = re::globalAllocators(v44);
  uint64_t v46 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v45[2] + 32))(v45[2], 264, 8);
  *(_OWORD *)uint64_t v46 = 0u;
  *(_OWORD *)(v46 + 16) = 0u;
  *(_OWORD *)(v46 + 32) = 0u;
  *(_OWORD *)(v46 + 48) = 0u;
  *(_OWORD *)(v46 + 64) = 0u;
  *(_OWORD *)(v46 + 80) = 0u;
  *(_OWORD *)(v46 + 96) = 0u;
  *(_OWORD *)(v46 + 112) = 0u;
  *(_OWORD *)(v46 + 128) = 0u;
  *(_OWORD *)(v46 + 144) = 0u;
  *(_OWORD *)(v46 + 160) = 0u;
  *(_OWORD *)(v46 + 176) = 0u;
  *(_OWORD *)(v46 + 192) = 0u;
  *(_OWORD *)(v46 + 208) = 0u;
  *(_OWORD *)(v46 + 224) = 0u;
  *(_OWORD *)(v46 + 240) = 0u;
  *(void *)(v46 + 256) = 0;
  re::ecs2::System::System(v46, 1, 1);
  *(void *)(v47 + 152) = 0;
  *(_OWORD *)(v47 + 136) = 0u;
  *(_OWORD *)(v47 + 120) = 0u;
  *(_OWORD *)(v47 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)uint64_t v47 = &unk_26E6FA918;
  *(_OWORD *)(v47 + 160) = 0u;
  *(_OWORD *)(v47 + 176) = 0u;
  *(_DWORD *)(v47 + 192) = 0;
  *(void *)(v47 + 196) = 0x7FFFFFFFLL;
  *(_DWORD *)(v47 + 240) = 0;
  *(_OWORD *)(v47 + 208) = 0u;
  *(_OWORD *)(v47 + 224) = 0u;
  *(void *)(v47 + 244) = 0x7FFFFFFFLL;
  *(unsigned char *)(v47 + 256) = 1;
  v195[0] = v47;
  (*(void (**)(uint64_t, void *))(*(void *)v198 + 16))(v198, v195);
  if (v195[0]) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v197);
  v195[3] = v143;
  uint64_t v196 = 0;
  int v48 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v195, (uint64_t)v142);
  uint64_t v49 = re::globalAllocators(v48);
  uint64_t v50 = (re::ecs2::MeshShadowSystem *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v49[2] + 32))(v49[2], 2736, 16);
  v193[0] = re::ecs2::MeshShadowSystem::MeshShadowSystem(v50);
  (*(void (**)(uint64_t, void *))(*(void *)v196 + 16))(v196, v193);
  if (v193[0]) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v195);
  v193[3] = v143;
  uint64_t v194 = 0;
  uint64_t v51 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v193, (uint64_t)v142);
  float32x4_t v52 = re::globalAllocators(v51);
  uint64_t v53 = (re::ecs2::ProjectiveShadowReceiverSystem *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v52[2] + 32))(v52[2], 768, 16);
  v191[0] = re::ecs2::ProjectiveShadowReceiverSystem::ProjectiveShadowReceiverSystem(v53);
  (*(void (**)(uint64_t, void *))(*(void *)v194 + 16))(v194, v191);
  if (v191[0]) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v193);
  v191[3] = v143;
  uint64_t v192 = 0;
  float32x4_t v54 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v191, (uint64_t)v142);
  float32x4_t v55 = re::globalAllocators(v54);
  uint64_t v56 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v55[2] + 32))(v55[2], 168, 8);
  *(_OWORD *)uint64_t v56 = 0u;
  *(_OWORD *)(v56 + 16) = 0u;
  *(_OWORD *)(v56 + 32) = 0u;
  *(_OWORD *)(v56 + 48) = 0u;
  *(_OWORD *)(v56 + 64) = 0u;
  *(_OWORD *)(v56 + 80) = 0u;
  *(_OWORD *)(v56 + 96) = 0u;
  *(_OWORD *)(v56 + 112) = 0u;
  *(_OWORD *)(v56 + 128) = 0u;
  *(_OWORD *)(v56 + 144) = 0u;
  *(void *)(v56 + 160) = 0;
  re::ecs2::System::System(v56, 1, 1);
  *(void *)(v57 + 152) = 0;
  *(void *)(v57 + 160) = 0;
  *(_OWORD *)(v57 + 136) = 0u;
  *(_OWORD *)(v57 + 120) = 0u;
  *(_OWORD *)(v57 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)uint64_t v57 = &unk_26E703B00;
  v189[0] = v57;
  (*(void (**)(uint64_t, void *))(*(void *)v192 + 16))(v192, v189);
  if (v189[0]) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v191);
  v189[3] = v143;
  uint64_t v190 = 0;
  uint64_t v58 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v189, (uint64_t)v142);
  uint64_t v59 = re::globalAllocators(v58);
  long long v60 = (_OWORD *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v59[2] + 32))(v59[2], 208, 8);
  *long long v60 = 0u;
  v60[1] = 0u;
  v60[2] = 0u;
  v60[3] = 0u;
  v60[4] = 0u;
  v60[5] = 0u;
  v60[6] = 0u;
  v60[7] = 0u;
  v60[8] = 0u;
  v60[9] = 0u;
  v60[10] = 0u;
  v60[11] = 0u;
  v60[12] = 0u;
  re::ecs2::System::System((uint64_t)v60, 1, 1);
  *(void *)(v61 + 152) = 0;
  *(_OWORD *)(v61 + 136) = 0u;
  *(_OWORD *)(v61 + 120) = 0u;
  *(_OWORD *)(v61 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)uint64_t v61 = &unk_26E700268;
  *(_OWORD *)(v61 + 160) = 0u;
  *(_OWORD *)(v61 + 176) = 0u;
  *(_DWORD *)(v61 + 192) = 0;
  *(void *)(v61 + 196) = 0x7FFFFFFFLL;
  v187[0] = v61;
  (*(void (**)(uint64_t, void *))(*(void *)v190 + 16))(v190, v187);
  if (v187[0]) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v189);
  v187[3] = v143;
  uint64_t v188 = 0;
  long long v62 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v187, (uint64_t)v142);
  long long v63 = re::globalAllocators(v62);
  uint64_t v64 = (re::ecs2::LightSystem *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v63[2] + 32))(v63[2], 3240, 8);
  v185[0] = re::ecs2::LightSystem::LightSystem(v64);
  (*(void (**)(uint64_t, void *))(*(void *)v188 + 16))(v188, v185);
  if (v185[0]) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v187);
  v185[3] = v143;
  uint64_t v186 = 0;
  uint64_t v65 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v185, (uint64_t)v142);
  long long v66 = re::globalAllocators(v65);
  uint64_t v67 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v66[2] + 32))(v66[2], 232, 8);
  *(_OWORD *)uint64_t v67 = 0u;
  *(_OWORD *)(v67 + 16) = 0u;
  *(_OWORD *)(v67 + 32) = 0u;
  *(_OWORD *)(v67 + 48) = 0u;
  *(_OWORD *)(v67 + 64) = 0u;
  *(_OWORD *)(v67 + 80) = 0u;
  *(_OWORD *)(v67 + 96) = 0u;
  *(_OWORD *)(v67 + 112) = 0u;
  *(_OWORD *)(v67 + 128) = 0u;
  *(_OWORD *)(v67 + 144) = 0u;
  *(_OWORD *)(v67 + 160) = 0u;
  *(_OWORD *)(v67 + 176) = 0u;
  *(_OWORD *)(v67 + 192) = 0u;
  *(_OWORD *)(v67 + 208) = 0u;
  *(void *)(v67 + 224) = 0;
  re::ecs2::System::System(v67, 1, 1);
  *(void *)(v68 + 152) = 0;
  *(_OWORD *)(v68 + 136) = 0u;
  *(_OWORD *)(v68 + 120) = 0u;
  *(_OWORD *)(v68 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)uint64_t v68 = &unk_26E70BFD0;
  *(_OWORD *)(v68 + 176) = 0u;
  *(_OWORD *)(v68 + 192) = 0u;
  *(_OWORD *)(v68 + 208) = 0u;
  *(void *)(v68 + 224) = 0;
  v183[0] = v68;
  (*(void (**)(uint64_t, void *))(*(void *)v186 + 16))(v186, v183);
  if (v183[0]) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v185);
  v183[3] = v143;
  uint64_t v184 = 0;
  unint64_t v69 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v183, (uint64_t)v142);
  uint64_t v70 = re::globalAllocators(v69);
  uint64_t v71 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v70[2] + 32))(v70[2], 248, 8);
  *(_OWORD *)uint64_t v71 = 0u;
  *(_OWORD *)(v71 + 16) = 0u;
  *(_OWORD *)(v71 + 32) = 0u;
  *(_OWORD *)(v71 + 48) = 0u;
  *(_OWORD *)(v71 + 64) = 0u;
  *(_OWORD *)(v71 + 80) = 0u;
  *(_OWORD *)(v71 + 96) = 0u;
  *(_OWORD *)(v71 + 112) = 0u;
  *(_OWORD *)(v71 + 128) = 0u;
  *(_OWORD *)(v71 + 144) = 0u;
  *(_OWORD *)(v71 + 160) = 0u;
  *(_OWORD *)(v71 + 176) = 0u;
  *(_OWORD *)(v71 + 192) = 0u;
  *(_OWORD *)(v71 + 208) = 0u;
  *(_OWORD *)(v71 + 224) = 0u;
  *(void *)(v71 + 240) = 0;
  re::ecs2::System::System(v71, 1, 1);
  *(void *)(v72 + 152) = 0;
  *(_OWORD *)(v72 + 136) = 0u;
  *(_OWORD *)(v72 + 120) = 0u;
  *(_OWORD *)(v72 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)uint64_t v72 = &unk_26E6E2680;
  *(_WORD *)(v72 + 160) = 0;
  *(_OWORD *)(v72 + 168) = 0u;
  *(_OWORD *)(v72 + 184) = 0u;
  *(_OWORD *)(v72 + 200) = 0u;
  *(_OWORD *)(v72 + 216) = 0u;
  *(_OWORD *)(v72 + 232) = 0u;
  v181[0] = v72;
  (*(void (**)(uint64_t, void *))(*(void *)v184 + 16))(v184, v181);
  if (v181[0]) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v183);
  v181[3] = v143;
  uint64_t v182 = 0;
  uint64_t v73 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v181, (uint64_t)v142);
  __int16 v74 = re::globalAllocators(v73);
  unint64_t v75 = (re::ecs2::ImageBasedLightSystem *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v74[2]
                                                                                                + 32))(v74[2], 1264, 16);
  v179[0] = re::ecs2::ImageBasedLightSystem::ImageBasedLightSystem(v75);
  (*(void (**)(uint64_t, void *))(*(void *)v182 + 16))(v182, v179);
  if (v179[0]) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v181);
  v179[3] = v143;
  uint64_t v180 = 0;
  uint64_t v76 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v179, (uint64_t)v142);
  uint64_t v77 = re::globalAllocators(v76);
  uint64_t v78 = (re::ecs2::VirtualEnvironmentProbeSystem *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v77[2] + 32))(v77[2], 440, 8);
  v177[0] = re::ecs2::VirtualEnvironmentProbeSystem::VirtualEnvironmentProbeSystem(v78);
  (*(void (**)(uint64_t, void *))(*(void *)v180 + 16))(v180, v177);
  if (v177[0]) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v179);
  v177[3] = v143;
  uint64_t v178 = 0;
  uint64_t v79 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v177, (uint64_t)v142);
  uint64_t v80 = re::globalAllocators(v79);
  unint64_t v81 = (_OWORD *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v80[2] + 32))(v80[2], 208, 8);
  *unint64_t v81 = 0u;
  v81[1] = 0u;
  v81[2] = 0u;
  v81[3] = 0u;
  v81[4] = 0u;
  v81[5] = 0u;
  v81[6] = 0u;
  v81[7] = 0u;
  v81[8] = 0u;
  v81[9] = 0u;
  v81[10] = 0u;
  v81[11] = 0u;
  v81[12] = 0u;
  re::ecs2::System::System((uint64_t)v81, 1, 1);
  *(void *)(v82 + 152) = 0;
  *(_OWORD *)(v82 + 136) = 0u;
  *(_OWORD *)(v82 + 120) = 0u;
  *(_OWORD *)(v82 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)uint64_t v82 = &unk_26E704898;
  *(_OWORD *)(v82 + 160) = 0u;
  *(_OWORD *)(v82 + 176) = 0u;
  *(_DWORD *)(v82 + 192) = 0;
  *(void *)(v82 + 196) = 0x7FFFFFFFLL;
  v175[0] = v82;
  (*(void (**)(uint64_t, void *))(*(void *)v178 + 16))(v178, v175);
  if (v175[0]) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v177);
  v175[3] = v143;
  uint64_t v176 = 0;
  unint64_t v83 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v175, (uint64_t)v142);
  uint64_t v84 = re::globalAllocators(v83);
  uint64_t v85 = (_OWORD *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v84[2] + 32))(v84[2], 160, 8);
  *uint64_t v85 = 0u;
  v85[1] = 0u;
  v85[2] = 0u;
  v85[3] = 0u;
  v85[4] = 0u;
  v85[5] = 0u;
  v85[6] = 0u;
  v85[7] = 0u;
  v85[8] = 0u;
  v85[9] = 0u;
  re::ecs2::System::System((uint64_t)v85, 1, 1);
  *(void *)(v86 + 152) = 0;
  *(_OWORD *)(v86 + 136) = 0u;
  *(_OWORD *)(v86 + 120) = 0u;
  *(_OWORD *)(v86 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)uint64_t v86 = &unk_26E6FFF10;
  v173[0] = v86;
  (*(void (**)(uint64_t, void *))(*(void *)v176 + 16))(v176, v173);
  if (v173[0]) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v175);
  v173[3] = v143;
  uint64_t v174 = 0;
  uint64_t v87 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v173, (uint64_t)v142);
  uint64_t v88 = re::globalAllocators(v87);
  uint64_t v89 = (_OWORD *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v88[2] + 32))(v88[2], 160, 8);
  *uint64_t v89 = 0u;
  v89[1] = 0u;
  v89[2] = 0u;
  v89[3] = 0u;
  v89[4] = 0u;
  v89[5] = 0u;
  v89[6] = 0u;
  v89[7] = 0u;
  v89[8] = 0u;
  v89[9] = 0u;
  re::ecs2::System::System((uint64_t)v89, 1, 1);
  *(void *)(v90 + 152) = 0;
  *(_OWORD *)(v90 + 136) = 0u;
  *(_OWORD *)(v90 + 120) = 0u;
  *(_OWORD *)(v90 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)uint64_t v90 = &unk_26E6FF8E8;
  v171[0] = v90;
  (*(void (**)(uint64_t, void *))(*(void *)v174 + 16))(v174, v171);
  if (v171[0]) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v173);
  v171[3] = v143;
  uint64_t v172 = 0;
  long long v91 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v171, (uint64_t)v142);
  uint64_t v92 = re::globalAllocators(v91);
  uint64_t v93 = (re::ecs2::AnchorSystem *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v92[2] + 32))(v92[2], 480, 8);
  v169[0] = re::ecs2::AnchorSystem::AnchorSystem(v93);
  (*(void (**)(uint64_t, void *))(*(void *)v172 + 16))(v172, v169);
  if (v169[0]) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v171);
  v169[3] = v143;
  uint64_t v170 = 0;
  BOOL v94 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v169, (uint64_t)v142);
  uint64_t v95 = re::globalAllocators(v94);
  int32x4_t v96 = (re::ecs2::MeshSystem *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v95[2] + 32))(v95[2], 736, 8);
  v167[0] = re::ecs2::MeshSystem::MeshSystem(v96);
  (*(void (**)(uint64_t, void *))(*(void *)v170 + 16))(v170, v167);
  if (v167[0]) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v169);
  v167[3] = v143;
  uint64_t v168 = 0;
  long long v97 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v167, (uint64_t)v142);
  long long v98 = re::globalAllocators(v97);
  uint64_t v99 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v98[2] + 32))(v98[2], 168, 8);
  *(_OWORD *)uint64_t v99 = 0u;
  *(_OWORD *)(v99 + 16) = 0u;
  *(_OWORD *)(v99 + 32) = 0u;
  *(_OWORD *)(v99 + 48) = 0u;
  *(_OWORD *)(v99 + 64) = 0u;
  *(_OWORD *)(v99 + 80) = 0u;
  *(_OWORD *)(v99 + 96) = 0u;
  *(_OWORD *)(v99 + 112) = 0u;
  *(_OWORD *)(v99 + 128) = 0u;
  *(_OWORD *)(v99 + 144) = 0u;
  *(void *)(v99 + 160) = 0;
  re::ecs2::System::System(v99, 1, 1);
  *(void *)(v100 + 152) = 0;
  *(void *)(v100 + 160) = 0;
  *(_OWORD *)(v100 + 136) = 0u;
  *(_OWORD *)(v100 + 120) = 0u;
  *(_OWORD *)(v100 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)uint64_t v100 = &unk_26E70A730;
  v165[0] = v100;
  (*(void (**)(uint64_t, void *))(*(void *)v168 + 16))(v168, v165);
  if (v165[0]) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v167);
  v165[3] = v143;
  uint64_t v166 = 0;
  float32x4_t v101 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v165, (uint64_t)v142);
  float32x4_t v102 = re::globalAllocators(v101);
  long long v103 = (_OWORD *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v102[2] + 32))(v102[2], 160, 8);
  *long long v103 = 0u;
  v103[1] = 0u;
  v103[2] = 0u;
  v103[3] = 0u;
  v103[4] = 0u;
  v103[5] = 0u;
  v103[6] = 0u;
  v103[7] = 0u;
  v103[8] = 0u;
  v103[9] = 0u;
  re::ecs2::System::System((uint64_t)v103, 1, 1);
  *(void *)(v104 + 152) = 0;
  *(_OWORD *)(v104 + 136) = 0u;
  *(_OWORD *)(v104 + 120) = 0u;
  *(_OWORD *)(v104 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)uint64_t v104 = &unk_26E6F84A0;
  v163[0] = v104;
  (*(void (**)(uint64_t, void *))(*(void *)v166 + 16))(v166, v163);
  if (v163[0]) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v165);
  v163[3] = v143;
  uint64_t v164 = 0;
  uint64_t v105 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v163, (uint64_t)v142);
  uint64_t v106 = re::globalAllocators(v105);
  unint64_t v107 = (_OWORD *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v106[2] + 32))(v106[2], 160, 8);
  *unint64_t v107 = 0u;
  v107[1] = 0u;
  v107[2] = 0u;
  v107[3] = 0u;
  v107[4] = 0u;
  v107[5] = 0u;
  v107[6] = 0u;
  v107[7] = 0u;
  v107[8] = 0u;
  v107[9] = 0u;
  re::ecs2::System::System((uint64_t)v107, 1, 1);
  *(void *)(v108 + 152) = 0;
  *(_OWORD *)(v108 + 136) = 0u;
  *(_OWORD *)(v108 + 120) = 0u;
  *(_OWORD *)(v108 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)uint64_t v108 = &unk_26E70A6A0;
  v161[0] = v108;
  (*(void (**)(uint64_t, void *))(*(void *)v164 + 16))(v164, v161);
  if (v161[0]) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v163);
  v161[3] = v143;
  uint64_t v162 = 0;
  int v109 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v161, (uint64_t)v142);
  int32x4_t v110 = re::globalAllocators(v109);
  float32x4_t v111 = (re::ecs2::AREnvironmentProbeSystem *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v110[2] + 32))(v110[2], 504, 8);
  v159[0] = re::ecs2::AREnvironmentProbeSystem::AREnvironmentProbeSystem(v111);
  (*(void (**)(uint64_t, void *))(*(void *)v162 + 16))(v162, v159);
  if (v159[0]) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v161);
  v159[3] = v143;
  uint64_t v160 = 0;
  long long v112 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v159, (uint64_t)v142);
  unint64_t v113 = re::globalAllocators(v112);
  int v114 = (_OWORD *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v113[2] + 32))(v113[2], 160, 8);
  *int v114 = 0u;
  v114[1] = 0u;
  v114[2] = 0u;
  v114[3] = 0u;
  v114[4] = 0u;
  v114[5] = 0u;
  v114[6] = 0u;
  v114[7] = 0u;
  v114[8] = 0u;
  v114[9] = 0u;
  re::ecs2::System::System((uint64_t)v114, 1, 1);
  *(void *)(v115 + 152) = 0;
  *(_OWORD *)(v115 + 136) = 0u;
  *(_OWORD *)(v115 + 120) = 0u;
  *(_OWORD *)(v115 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)uint64_t v115 = &unk_26E6FB498;
  v157[0] = v115;
  (*(void (**)(uint64_t, void *))(*(void *)v160 + 16))(v160, v157);
  if (v157[0]) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v159);
  float32x4_t v157[3] = v143;
  uint64_t v158 = 0;
  float32x4_t v116 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v157, (uint64_t)v142);
  float32x4_t v117 = re::globalAllocators(v116);
  float32x4_t v118 = (_OWORD *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v117[2] + 32))(v117[2], 192, 8);
  *float32x4_t v118 = 0u;
  v118[1] = 0u;
  v118[2] = 0u;
  void v118[3] = 0u;
  v118[4] = 0u;
  v118[5] = 0u;
  v118[6] = 0u;
  v118[7] = 0u;
  v118[8] = 0u;
  v118[9] = 0u;
  v118[10] = 0u;
  v118[11] = 0u;
  re::ecs2::System::System((uint64_t)v118, 1, 1);
  *(void *)(v119 + 152) = 0;
  *(_OWORD *)(v119 + 136) = 0u;
  *(_OWORD *)(v119 + 120) = 0u;
  *(_OWORD *)(v119 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)uint64_t v119 = &unk_26E70A578;
  *(unsigned char *)(v119 + 160) = 1;
  *(void *)(v119 + 176) = 0;
  *(void *)(v119 + 184) = 0;
  *(void *)(v119 + 168) = 0;
  v155[0] = v119;
  (*(void (**)(uint64_t, void *))(*(void *)v158 + 16))(v158, v155);
  if (v155[0]) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v157);
  v155[3] = v143;
  uint64_t v156 = 0;
  long long v120 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v155, (uint64_t)v142);
  uint64_t v121 = re::globalAllocators(v120);
  uint64_t v122 = (_OWORD *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v121[2] + 32))(v121[2], 160, 8);
  *uint64_t v122 = 0u;
  v122[1] = 0u;
  v122[2] = 0u;
  v122[3] = 0u;
  v122[4] = 0u;
  v122[5] = 0u;
  v122[6] = 0u;
  v122[7] = 0u;
  v122[8] = 0u;
  v122[9] = 0u;
  re::ecs2::System::System((uint64_t)v122, 1, 1);
  *(void *)(v123 + 152) = 0;
  *(_OWORD *)(v123 + 136) = 0u;
  *(_OWORD *)(v123 + 120) = 0u;
  *(_OWORD *)(v123 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)uint64_t v123 = &unk_26E70BEA8;
  v153[0] = v123;
  (*(void (**)(uint64_t, void *))(*(void *)v156 + 16))(v156, v153);
  if (v153[0]) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v155);
  v153[3] = v143;
  uint64_t v154 = 0;
  long long v124 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v153, (uint64_t)v142);
  unint64_t v125 = re::globalAllocators(v124);
  int v126 = (re::ecs2::VisualProxySystem *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v125[2] + 32))(v125[2], 480, 8);
  v151[0] = re::ecs2::VisualProxySystem::VisualProxySystem(v126);
  (*(void (**)(uint64_t, void *))(*(void *)v154 + 16))(v154, v151);
  if (v151[0]) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v153);
  v151[3] = v143;
  uint64_t v152 = 0;
  unint64_t v127 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v151, (uint64_t)v142);
  long long v128 = re::globalAllocators(v127);
  uint64_t v129 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v128[2] + 32))(v128[2], 544, 8);
  bzero(v129, 0x220uLL);
  re::ecs2::System::System((uint64_t)v129, 1, 1);
  v129[19] = 0;
  *(_OWORD *)(v129 + 17) = 0u;
  *(_OWORD *)(v129 + 15) = 0u;
  *(_OWORD *)(v129 + 13) = 0u;
  *uint64_t v129 = &unk_26E6E3EC0;
  *((_OWORD *)v129 + 10) = 0u;
  *((_OWORD *)v129 + 11) = 0u;
  *((_OWORD *)v129 + 12) = 0u;
  *((_OWORD *)v129 + 13) = 0u;
  *((_OWORD *)v129 + 14) = 0u;
  *((_OWORD *)v129 + 15) = 0u;
  *((_OWORD *)v129 + 16) = 0u;
  *((_OWORD *)v129 + 17) = 0u;
  *((_OWORD *)v129 + 18) = 0u;
  *((_OWORD *)v129 + re::ecs2::BasicComponentStates<re::ecs2::BlendShapeWeightsBufferComponent>::~BasicComponentStates((void *)this + 19) = 0u;
  *((_OWORD *)v129 + 20) = 0u;
  *((_OWORD *)v129 + 21) = 0u;
  *((_OWORD *)v129 + 22) = 0u;
  *((_OWORD *)v129 + 23) = 0u;
  *((_OWORD *)v129 + 24) = 0u;
  *((_OWORD *)v129 + 25) = 0u;
  *((_OWORD *)v129 + 26) = 0u;
  *((_OWORD *)v129 + 27) = 0u;
  *((_OWORD *)v129 + 28) = 0u;
  *((_OWORD *)v129 + 29) = 0u;
  *((_OWORD *)v129 + 30) = 0u;
  *((_OWORD *)v129 + 31) = 0u;
  *((_OWORD *)v129 + 32) = 0u;
  *((_OWORD *)v129 + 33) = 0u;
  v149[0] = v129;
  (*(void (**)(uint64_t, void *))(*(void *)v152 + 16))(v152, v149);
  if (v149[0]) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v151);
  v149[3] = v143;
  uint64_t v150 = 0;
  float32x4_t v130 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v149, (uint64_t)v142);
  float32x4_t v131 = re::globalAllocators(v130);
  int v132 = (_OWORD *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v131[2] + 32))(v131[2], 160, 8);
  *int v132 = 0u;
  v132[1] = 0u;
  v132[2] = 0u;
  v132[3] = 0u;
  v132[4] = 0u;
  v132[5] = 0u;
  v132[6] = 0u;
  v132[7] = 0u;
  v132[8] = 0u;
  v132[9] = 0u;
  re::ecs2::System::System((uint64_t)v132, 1, 1);
  *(void *)(v133 + 152) = 0;
  *(_OWORD *)(v133 + 136) = 0u;
  *(_OWORD *)(v133 + 120) = 0u;
  *(_OWORD *)(v133 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)uint64_t v133 = &unk_26E702160;
  v147[0] = v133;
  (*(void (**)(uint64_t, void *))(*(void *)v150 + 16))(v150, v147);
  if (v147[0]) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v149);
  v147[3] = v143;
  uint64_t v148 = 0;
  int v134 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v147, (uint64_t)v142);
  long long v135 = re::globalAllocators(v134);
  long long v136 = (re::ecs2::VisualProxyScopeSystem *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v135[2]
                                                                                                  + 32))(v135[2], 440, 8);
  v145[0] = re::ecs2::VisualProxyScopeSystem::VisualProxyScopeSystem(v136);
  (*(void (**)(uint64_t, void *))(*(void *)v148 + 16))(v148, v145);
  if (v145[0]) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v147);
  v145[3] = v143;
  uint64_t v146 = 0;
  float32x4_t v137 = (re *)re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>((uint64_t)v145, (uint64_t)v142);
  float32x4_t v138 = re::globalAllocators(v137);
  float32x4_t v139 = (re::ecs2::CameraViewDescriptorsSystem *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v138[2] + 32))(v138[2], 488, 8);
  long long v141 = re::ecs2::CameraViewDescriptorsSystem::CameraViewDescriptorsSystem(v139);
  (*(void (**)(uint64_t, re::ecs2::CameraViewDescriptorsSystem **))(*(void *)v146 + 16))(v146, &v141);
  if (v141) {

  }
  re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v145);
  return re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable((uint64_t)v142);
}

uint64_t re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::operator=<24ul>(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable(a1);
    uint64_t v4 = *(void *)(a2 + 32);
    if (v4)
    {
      unint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 40))(v4);
      uint64_t v6 = a1;
      if (v5 >= 0x19)
      {
        unint64_t v7 = v5;
        uint64_t v8 = *(void *)(a1 + 24);
        if (v8) {
          uint64_t v6 = (*(uint64_t (**)(uint64_t, unint64_t, void))(*(void *)v8 + 32))(v8, v7, 0);
        }
        else {
          uint64_t v6 = 0;
        }
      }
      *(void *)(a1 + 32) = v6;
      (*(void (**)(void))(**(void **)(a2 + 32) + 24))(*(void *)(a2 + 32));
    }
  }
  return a1;
}

uint64_t (***re::FunctionBase<24ul,void ()(re::SharedPtr<re::ecs2::System>)>::destroyCallable(uint64_t a1))(void)
{
  double result = *(uint64_t (****)(void))(a1 + 32);
  if (result)
  {
    double result = (uint64_t (***)(void))(**result)(result);
    if (*(void *)(a1 + 32) != a1) {
      double result = (uint64_t (***)(void))(*(uint64_t (**)(void))(**(void **)(a1 + 24) + 40))(*(void *)(a1 + 24));
    }
    *(void *)(a1 + 32) = 0;
  }
  return result;
}

re::ecs2::SkeletalPoseBufferSystem *re::ecs2::SkeletalPoseBufferSystem::SkeletalPoseBufferSystem(re::ecs2::SkeletalPoseBufferSystem *this)
{
  re::ecs2::System::System((uint64_t)this, 1, 1);
  *(void *)(v2 + 152) = 0;
  *(_OWORD *)(v2 + 136) = 0u;
  *(_OWORD *)(v2 + 120) = 0u;
  *(_OWORD *)(v2 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v2 + 160) = 0;
  uint64_t v3 = v2 + 160;
  *(void *)uint64_t v2 = &unk_26E6F97E0;
  uint64_t v4 = (re::ecs2::SkeletalPoseBufferComponentStateImpl *)(v2 + 400);
  *(void *)(v2 + 168) = 0;
  *(_DWORD *)(v2 + 176) = 1;
  *(void *)(v2 + 192) = 0;
  *(void *)(v2 + 200) = 0;
  *(void *)(v2 + 184) = 0;
  *(_DWORD *)(v2 + 208) = 0;
  *(_OWORD *)(v2 + 232) = 0u;
  *(_OWORD *)(v2 + 248) = 0u;
  *(_OWORD *)(v2 + 264) = 0u;
  *(_OWORD *)(v2 + 280) = 0u;
  unint64_t v5 = (void *)(v2 + 280);
  *(_OWORD *)(v2 + 216) = 0u;
  uint64_t v6 = (void *)(v2 + 216);
  *(_DWORD *)(v2 + 296) = 1;
  unint64_t v7 = (void *)(v2 + 328);
  *(void *)(v2 + 336) = 0;
  *(_OWORD *)(v2 + 304) = 0u;
  *(_OWORD *)(v2 + 320) = 0u;
  *(_DWORD *)(v2 + 344) = 1;
  *(_OWORD *)(v2 + 352) = 0u;
  *(_OWORD *)(v2 + 368) = 0u;
  *(_OWORD *)(v2 + 377) = 0u;
  unint64_t v10 = (_anonymous_namespace_ *)re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity(v5, 0);
  *((_DWORD *)this + 74) += 2;
  *((void *)this + 40) = 0;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity(v7, 0);
  *((_DWORD *)this + 86) += 2;
  *((void *)this + 46) = 0;
  *((void *)this + 47) = this;
  *((void *)this + 48) = v4;
  *((unsigned char *)this + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 1;
  LOWORD(v12) = 257;
  HIDWORD(v12) = 1023969417;
  char v13 = 0;
  re::ecs2::System::setTaskOptions(this, &v12);
  re::ecs2::SkeletalPoseBufferComponentStateImpl::SkeletalPoseBufferComponentStateImpl(v4);
  return this;
}

uint64_t re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::SkeletalPoseBufferComponent>,4ul>::init(uint64_t a1, uint64_t a2, unint64_t a3)
{
  *(void *)a1 = a2;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)a1, a3);
  *(_DWORD *)(a1 + 16) += 2;
  *(void *)(a1 + 40) = 0;
  uint64_t result = re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::SkeletalPoseBufferComponent>,4ul>::setBucketsCapacity(a1, a3);
  ++*(_DWORD *)(a1 + 48);
  return result;
}

uint64_t *re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::SkeletalPoseBufferComponent>,4ul>::setBucketsCapacity(uint64_t *result, unint64_t a2)
{
  uint64_t v3 = result;
  if (*result)
  {
    if (result[5] < 4 * a2)
    {
      while (1)
      {
        unint64_t v4 = v3[1];
        if (v4 <= a2) {
          break;
        }
        uint64_t result = (uint64_t *)re::BucketArray<re::CollisionCastHit,10ul>::freeElementBucket(v3);
      }
      while (v4 < a2)
      {
        uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)*v3 + 32))(*v3, 448, 0);
        uint64_t result = (uint64_t *)re::DynamicOverflowArray<RESubscriptionHandle *,2ul>::add((uint64_t)v3, &v5);
        unint64_t v4 = v3[1];
      }
    }
  }
  else
  {
  }
  return result;
}

re::ecs2::JiggleSystem *re::ecs2::JiggleSystem::JiggleSystem(re::ecs2::JiggleSystem *this)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  re::ecs2::System::System((uint64_t)this, 1, 1);
  *(_OWORD *)(v2 + 136) = 0u;
  *(_OWORD *)(v2 + 120) = 0u;
  *(_OWORD *)(v2 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)uint64_t v2 = &unk_26E7003B8;
  uint64_t v3 = v2 + 160;
  *(void *)(v2 + 152) = 0;
  *(void *)(v2 + 160) = &unk_26E700350;
  *(void *)(v2 + 168) = v2;
  *(void *)(v2 + 184) = 0;
  *(void *)(v2 + 192) = 0;
  *(void *)(v2 + 176) = 0;
  unint64_t v10 = re::ecs2::ComponentImpl<re::ecs2::MeshComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
  uint64_t v11 = re::ecs2::ComponentImpl<re::ecs2::MeshSceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
  v9[0] = &v10;
  v9[1] = 2;
  unint64_t v4 = re::FixedArray<re::ecs2::ComponentTypeBase const*>::operator=((_anonymous_namespace_ *)(v2 + 176), (uint64_t)v9);
  *((void *)this + 26) = 0;
  *((void *)this + 25) = 0;
  *((_DWORD *)this + 54) = 1;
  *((void *)this + 29) = 0;
  *((void *)this + 30) = 0;
  *((void *)this + 28) = 0;
  *((_DWORD *)this + 62) = 0;
  *((_OWORD *)this + 16) = 0u;
  *((_OWORD *)this + 17) = 0u;
  *((_OWORD *)this + 18) = 0u;
  *((_OWORD *)this + re::ecs2::BasicComponentStates<re::ecs2::BlendShapeWeightsBufferComponent>::~BasicComponentStates((void *)this + 19) = 0u;
  *((_OWORD *)this + 20) = 0u;
  *((_DWORD *)this + 84) = 1;
  *((void *)this + 47) = 0;
  *(_OWORD *)((char *)this + 344) = 0u;
  *(_OWORD *)((char *)this + 360) = 0u;
  *((_DWORD *)this + 96) = 1;
  *(_OWORD *)((char *)this + 417) = 0u;
  *(_OWORD *)((char *)this + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0u;
  *(_OWORD *)((char *)this + 408) = 0u;
  unint64_t v7 = (_anonymous_namespace_ *)re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)this + 40, 0);
  *((_DWORD *)this + 84) += 2;
  *((void *)this + 45) = 0;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)this + 46, 0);
  *((_DWORD *)this + 96) += 2;
  *((void *)this + 51) = 0;
  *((void *)this + 52) = this;
  *((void *)this + 53) = v3;
  *((unsigned char *)this + 432) = 1;
  LOWORD(v10) = 257;
  HIDWORD(v10) = 1023969417;
  LOBYTE(v11) = 0;
  re::ecs2::System::setTaskOptions(this, (uint64_t *)&v10);
  return this;
}

uint64_t *re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshDeformationComponent>,4ul>::init(uint64_t a1, uint64_t a2, unint64_t a3)
{
  *(void *)a1 = a2;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)a1, a3);
  *(_DWORD *)(a1 + 16) += 2;
  *(void *)(a1 + 40) = 0;
  uint64_t result = re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshDeformationComponent>,4ul>::setBucketsCapacity((uint64_t *)a1, a3);
  ++*(_DWORD *)(a1 + 48);
  return result;
}

uint64_t *re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshDeformationComponent>,4ul>::setBucketsCapacity(uint64_t *result, unint64_t a2)
{
  uint64_t v3 = result;
  if (*result)
  {
    if (result[5] < 4 * a2)
    {
      while (1)
      {
        unint64_t v4 = v3[1];
        if (v4 <= a2) {
          break;
        }
        uint64_t result = (uint64_t *)re::BucketArray<re::CollisionCastHit,10ul>::freeElementBucket(v3);
      }
      while (v4 < a2)
      {
        uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)*v3 + 32))(*v3, 448, 0);
        uint64_t result = (uint64_t *)re::DynamicOverflowArray<RESubscriptionHandle *,2ul>::add((uint64_t)v3, &v5);
        unint64_t v4 = v3[1];
      }
    }
  }
  else
  {
  }
  return result;
}

re::ecs2::WrapSystem *re::ecs2::WrapSystem::WrapSystem(re::ecs2::WrapSystem *this)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  re::ecs2::System::System((uint64_t)this, 1, 1);
  *(_OWORD *)(v2 + 136) = 0u;
  *(_OWORD *)(v2 + 120) = 0u;
  *(_OWORD *)(v2 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)uint64_t v2 = &unk_26E707A58;
  uint64_t v3 = v2 + 160;
  *(void *)(v2 + 152) = 0;
  *(void *)(v2 + 160) = &unk_26E707A00;
  *(void *)(v2 + 168) = v2;
  *(void *)(v2 + 184) = 0;
  *(void *)(v2 + 192) = 0;
  *(void *)(v2 + 176) = 0;
  unint64_t v10 = re::ecs2::ComponentImpl<re::ecs2::MeshComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
  uint64_t v11 = re::ecs2::ComponentImpl<re::ecs2::MeshSceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
  v9[0] = &v10;
  v9[1] = 2;
  unint64_t v4 = re::FixedArray<re::ecs2::ComponentTypeBase const*>::operator=((_anonymous_namespace_ *)(v2 + 176), (uint64_t)v9);
  *((void *)this + 26) = 0;
  *((void *)this + 25) = 0;
  *((_DWORD *)this + 54) = 1;
  *((void *)this + 29) = 0;
  *((void *)this + 30) = 0;
  *((void *)this + 28) = 0;
  *((_DWORD *)this + 62) = 0;
  *((_OWORD *)this + 16) = 0u;
  *((_OWORD *)this + 17) = 0u;
  *((_OWORD *)this + 18) = 0u;
  *((_OWORD *)this + re::ecs2::BasicComponentStates<re::ecs2::BlendShapeWeightsBufferComponent>::~BasicComponentStates((void *)this + 19) = 0u;
  *((_OWORD *)this + 20) = 0u;
  *((_DWORD *)this + 84) = 1;
  *((void *)this + 47) = 0;
  *(_OWORD *)((char *)this + 344) = 0u;
  *(_OWORD *)((char *)this + 360) = 0u;
  *((_DWORD *)this + 96) = 1;
  *(_OWORD *)((char *)this + 417) = 0u;
  *(_OWORD *)((char *)this + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0u;
  *(_OWORD *)((char *)this + 408) = 0u;
  unint64_t v7 = (_anonymous_namespace_ *)re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)this + 40, 0);
  *((_DWORD *)this + 84) += 2;
  *((void *)this + 45) = 0;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)this + 46, 0);
  *((_DWORD *)this + 96) += 2;
  *((void *)this + 51) = 0;
  *((void *)this + 52) = this;
  *((void *)this + 53) = v3;
  *((unsigned char *)this + 432) = 1;
  LOWORD(v10) = 257;
  HIDWORD(v10) = 1023969417;
  LOBYTE(v11) = 0;
  re::ecs2::System::setTaskOptions(this, (uint64_t *)&v10);
  return this;
}

re::ecs2::VertexCacheSystem *re::ecs2::VertexCacheSystem::VertexCacheSystem(re::ecs2::VertexCacheSystem *this)
{
  re::ecs2::System::System((uint64_t)this, 1, 1);
  *(void *)(v2 + 152) = 0;
  *(void *)(v2 + 160) = 0;
  *(_OWORD *)(v2 + 136) = 0u;
  *(_OWORD *)(v2 + 120) = 0u;
  *(_OWORD *)(v2 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)uint64_t v2 = &unk_26E702B08;
  uint64_t v3 = v2 + 168;
  unint64_t v4 = re::ecs2::VertexCacheComponentStateImpl::VertexCacheComponentStateImpl((re::ecs2::VertexCacheComponentStateImpl *)(v2 + 168), this);
  *((void *)this + 26) = 0;
  *((void *)this + 27) = 0;
  *((_DWORD *)this + 56) = 1;
  *((void *)this + 30) = 0;
  *((void *)this + 31) = 0;
  *((void *)this + 29) = 0;
  *((_DWORD *)this + 64) = 0;
  *(_OWORD *)((char *)this + 280) = 0u;
  *(_OWORD *)((char *)this + 296) = 0u;
  *(_OWORD *)((char *)this + 312) = 0u;
  *(_OWORD *)((char *)this + 328) = 0u;
  *(_OWORD *)((char *)this + 264) = 0u;
  *((_DWORD *)this + 86) = 1;
  *((_OWORD *)this + 22) = 0u;
  *((_OWORD *)this + 23) = 0u;
  *((void *)this + 48) = 0;
  *((_DWORD *)this + 98) = 1;
  *(_OWORD *)((char *)this + 425) = 0u;
  *((_OWORD *)this + 25) = 0u;
  *((_OWORD *)this + 26) = 0u;
  unint64_t v7 = (_anonymous_namespace_ *)re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)this + 41, 0);
  *((_DWORD *)this + 86) += 2;
  *((void *)this + 46) = 0;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)this + 47, 0);
  *((_DWORD *)this + 98) += 2;
  *((void *)this + 52) = 0;
  *((void *)this + 53) = this;
  *((void *)this + 54) = v3;
  *((unsigned char *)this + 440) = 1;
  LOWORD(v9) = 257;
  HIDWORD(v9) = 1023969417;
  char v10 = 0;
  re::ecs2::System::setTaskOptions(this, &v9);
  return this;
}

uint64_t *re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::VertexCacheComponent>,4ul>::init(uint64_t a1, uint64_t a2, unint64_t a3)
{
  *(void *)a1 = a2;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)a1, a3);
  *(_DWORD *)(a1 + 16) += 2;
  *(void *)(a1 + 40) = 0;
  uint64_t result = re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::VertexCacheComponent>,4ul>::setBucketsCapacity((uint64_t *)a1, a3);
  ++*(_DWORD *)(a1 + 48);
  return result;
}

uint64_t *re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::VertexCacheComponent>,4ul>::setBucketsCapacity(uint64_t *result, unint64_t a2)
{
  uint64_t v3 = result;
  if (*result)
  {
    if (result[5] < 4 * a2)
    {
      while (1)
      {
        unint64_t v4 = v3[1];
        if (v4 <= a2) {
          break;
        }
        uint64_t result = (uint64_t *)re::BucketArray<re::CollisionCastHit,10ul>::freeElementBucket(v3);
      }
      while (v4 < a2)
      {
        uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)*v3 + 32))(*v3, 448, 0);
        uint64_t result = (uint64_t *)re::DynamicOverflowArray<RESubscriptionHandle *,2ul>::add((uint64_t)v3, &v5);
        unint64_t v4 = v3[1];
      }
    }
  }
  else
  {
  }
  return result;
}

re::ecs2::SubdivisionSurfaceSystem *re::ecs2::SubdivisionSurfaceSystem::SubdivisionSurfaceSystem(re::ecs2::SubdivisionSurfaceSystem *this)
{
  re::ecs2::System::System((uint64_t)this, 1, 1);
  *(void *)(v2 + 152) = 0;
  *(_OWORD *)(v2 + 136) = 0u;
  *(_OWORD *)(v2 + 120) = 0u;
  *(_OWORD *)(v2 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)uint64_t v2 = &unk_26E7090E8;
  uint64_t v3 = v2 + 160;
  unint64_t v4 = (_anonymous_namespace_ *)re::ecs2::SubdivisionSurfaceSystemComponentStateImpl::SubdivisionSurfaceSystemComponentStateImpl((void *)(v2 + 160), (uint64_t)this);
  *((void *)this + 26) = 0;
  *((void *)this + 25) = 0;
  *((_DWORD *)this + 54) = 1;
  *((void *)this + 29) = 0;
  *((void *)this + 30) = 0;
  *((void *)this + 28) = 0;
  *((_DWORD *)this + 62) = 0;
  *((_OWORD *)this + 16) = 0u;
  *((_OWORD *)this + 17) = 0u;
  *((_OWORD *)this + 18) = 0u;
  *((_OWORD *)this + re::ecs2::BasicComponentStates<re::ecs2::BlendShapeWeightsBufferComponent>::~BasicComponentStates((void *)this + 19) = 0u;
  *((_OWORD *)this + 20) = 0u;
  *((_DWORD *)this + 84) = 1;
  *((void *)this + 47) = 0;
  *(_OWORD *)((char *)this + 344) = 0u;
  *(_OWORD *)((char *)this + 360) = 0u;
  *((_DWORD *)this + 96) = 1;
  *(_OWORD *)((char *)this + 417) = 0u;
  *(_OWORD *)((char *)this + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0u;
  *(_OWORD *)((char *)this + 408) = 0u;
  unint64_t v7 = (_anonymous_namespace_ *)re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)this + 40, 0);
  *((_DWORD *)this + 84) += 2;
  *((void *)this + 45) = 0;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)this + 46, 0);
  *((_DWORD *)this + 96) += 2;
  *((void *)this + 51) = 0;
  *((void *)this + 52) = this;
  *((void *)this + 53) = v3;
  *((unsigned char *)this + 432) = 1;
  LOWORD(v9) = 257;
  HIDWORD(v9) = 1023969417;
  char v10 = 0;
  re::ecs2::System::setTaskOptions(this, &v9);
  return this;
}

re::ecs2::CustomDeformerSystem *re::ecs2::CustomDeformerSystem::CustomDeformerSystem(re::ecs2::CustomDeformerSystem *this)
{
  re::ecs2::System::System((uint64_t)this, 1, 1);
  *(void *)(v2 + 152) = 0;
  *(_OWORD *)(v2 + 136) = 0u;
  *(_OWORD *)(v2 + 120) = 0u;
  *(_OWORD *)(v2 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)uint64_t v2 = &unk_26E700C10;
  uint64_t v3 = v2 + 160;
  unint64_t v4 = (_anonymous_namespace_ *)re::ecs2::CustomDeformerSystemComponentStateImpl::CustomDeformerSystemComponentStateImpl((void *)(v2 + 160), (uint64_t)this);
  *((void *)this + 26) = 0;
  *((void *)this + 25) = 0;
  *((_DWORD *)this + 54) = 1;
  *((void *)this + 29) = 0;
  *((void *)this + 30) = 0;
  *((void *)this + 28) = 0;
  *((_DWORD *)this + 62) = 0;
  *((_OWORD *)this + 16) = 0u;
  *((_OWORD *)this + 17) = 0u;
  *((_OWORD *)this + 18) = 0u;
  *((_OWORD *)this + re::ecs2::BasicComponentStates<re::ecs2::BlendShapeWeightsBufferComponent>::~BasicComponentStates((void *)this + 19) = 0u;
  *((_OWORD *)this + 20) = 0u;
  *((_DWORD *)this + 84) = 1;
  *((void *)this + 47) = 0;
  *(_OWORD *)((char *)this + 344) = 0u;
  *(_OWORD *)((char *)this + 360) = 0u;
  *((_DWORD *)this + 96) = 1;
  *(_OWORD *)((char *)this + 417) = 0u;
  *(_OWORD *)((char *)this + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0u;
  *(_OWORD *)((char *)this + 408) = 0u;
  unint64_t v7 = (_anonymous_namespace_ *)re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)this + 40, 0);
  *((_DWORD *)this + 84) += 2;
  *((void *)this + 45) = 0;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)this + 46, 0);
  *((_DWORD *)this + 96) += 2;
  *((void *)this + 51) = 0;
  *((void *)this + 52) = this;
  *((void *)this + 53) = v3;
  *((unsigned char *)this + 432) = 1;
  LOWORD(v9) = 257;
  HIDWORD(v9) = 1023969417;
  char v10 = 0;
  re::ecs2::System::setTaskOptions(this, &v9);
  return this;
}

uint64_t *re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::CustomDeformerComponent>,4ul>::init(uint64_t a1, uint64_t a2, unint64_t a3)
{
  *(void *)a1 = a2;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)a1, a3);
  *(_DWORD *)(a1 + 16) += 2;
  *(void *)(a1 + 40) = 0;
  uint64_t result = re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::CustomDeformerComponent>,4ul>::setBucketsCapacity((uint64_t *)a1, a3);
  ++*(_DWORD *)(a1 + 48);
  return result;
}

uint64_t *re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::CustomDeformerComponent>,4ul>::setBucketsCapacity(uint64_t *result, unint64_t a2)
{
  uint64_t v3 = result;
  if (*result)
  {
    if (result[5] < 4 * a2)
    {
      while (1)
      {
        unint64_t v4 = v3[1];
        if (v4 <= a2) {
          break;
        }
        uint64_t result = (uint64_t *)re::BucketArray<re::CollisionCastHit,10ul>::freeElementBucket(v3);
      }
      while (v4 < a2)
      {
        uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)*v3 + 32))(*v3, 448, 0);
        uint64_t result = (uint64_t *)re::DynamicOverflowArray<RESubscriptionHandle *,2ul>::add((uint64_t)v3, &v5);
        unint64_t v4 = v3[1];
      }
    }
  }
  else
  {
  }
  return result;
}

re::ecs2::DynamicBoundingBoxSystem *re::ecs2::DynamicBoundingBoxSystem::DynamicBoundingBoxSystem(re::ecs2::DynamicBoundingBoxSystem *this)
{
  re::ecs2::System::System((uint64_t)this, 1, 1);
  *(void *)(v2 + 152) = 0;
  *(_OWORD *)(v2 + 136) = 0u;
  *(_OWORD *)(v2 + 120) = 0u;
  *(_OWORD *)(v2 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)uint64_t v2 = &unk_26E702EB8;
  uint64_t v3 = v2 + 160;
  unint64_t v4 = (_anonymous_namespace_ *)re::ecs2::DynamicBoundingBoxComponentStateImpl::DynamicBoundingBoxComponentStateImpl((void *)(v2 + 160), (uint64_t)this);
  *((void *)this + 26) = 0;
  *((void *)this + 25) = 0;
  *((_DWORD *)this + 54) = 1;
  *((void *)this + 29) = 0;
  *((void *)this + 30) = 0;
  *((void *)this + 28) = 0;
  *((_DWORD *)this + 62) = 0;
  *((_OWORD *)this + 16) = 0u;
  *((_OWORD *)this + 17) = 0u;
  *((_OWORD *)this + 18) = 0u;
  *((_OWORD *)this + re::ecs2::BasicComponentStates<re::ecs2::BlendShapeWeightsBufferComponent>::~BasicComponentStates((void *)this + 19) = 0u;
  *((_OWORD *)this + 20) = 0u;
  *((_DWORD *)this + 84) = 1;
  *((void *)this + 47) = 0;
  *(_OWORD *)((char *)this + 344) = 0u;
  *(_OWORD *)((char *)this + 360) = 0u;
  *((_DWORD *)this + 96) = 1;
  *(_OWORD *)((char *)this + 417) = 0u;
  *(_OWORD *)((char *)this + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0u;
  *(_OWORD *)((char *)this + 408) = 0u;
  unint64_t v7 = (_anonymous_namespace_ *)re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)this + 40, 0);
  *((_DWORD *)this + 84) += 2;
  *((void *)this + 45) = 0;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)this + 46, 0);
  *((_DWORD *)this + 96) += 2;
  *((void *)this + 51) = 0;
  *((void *)this + 52) = this;
  *((void *)this + 53) = v3;
  *((unsigned char *)this + 432) = 1;
  LOWORD(v10) = 257;
  HIDWORD(v10) = 1023969417;
  char v11 = 0;
  uint64_t v8 = (_anonymous_namespace_ *)re::ecs2::System::setTaskOptions(this, &v10);
  *(_OWORD *)((char *)this + 440) = 0u;
  *(_OWORD *)((char *)this + 456) = 0u;
  *((void *)this + 59) = 0x7FFFFFFF00000000;
  *((_DWORD *)this + 120) = 0;
  return this;
}

re::ecs2::MeshShadowSystem *re::ecs2::MeshShadowSystem::MeshShadowSystem(re::ecs2::MeshShadowSystem *this)
{
  uint64_t v2 = (_OWORD *)((char *)this + 2436);
  re::ecs2::System::System((uint64_t)this, 1, 1);
  *(void *)(v3 + 152) = 0;
  *(_OWORD *)(v3 + 136) = 0u;
  *(_OWORD *)(v3 + 120) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)uint64_t v3 = &unk_26E708AB8;
  uint64_t v4 = v3 + 232;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_OWORD *)(v3 + 192) = 0u;
  *(_OWORD *)(v3 + 208) = 0u;
  *(void *)(v3 + 224) = 0;
  uint64_t v5 = re::ecs2::MeshShadowSystemStateImpl::MeshShadowSystemStateImpl((re::ecs2::MeshShadowSystemStateImpl *)(v3 + 232), this);
  *((void *)this + 56) = 0;
  *((void *)this + 57) = 0;
  *((_DWORD *)this + 116) = 1;
  *((void *)this + 60) = 0;
  *((void *)this + 61) = 0;
  *((void *)this + 59) = 0;
  *((_DWORD *)this + 124) = 0;
  *(_OWORD *)((char *)this + 520) = 0u;
  *(_OWORD *)((char *)this + 536) = 0u;
  *(_OWORD *)((char *)this + 552) = 0u;
  *(_OWORD *)((char *)this + 568) = 0u;
  *(_OWORD *)((char *)this + 504) = 0u;
  *((_DWORD *)this + 146) = 1;
  *((_OWORD *)this + 37) = 0u;
  *((_OWORD *)this + 38) = 0u;
  *((void *)this + 78) = 0;
  *((_DWORD *)this + 158) = 1;
  *(_OWORD *)((char *)this + 665) = 0u;
  *((_OWORD *)this + 40) = 0u;
  *((_OWORD *)this + 41) = 0u;
  uint64_t v8 = (_anonymous_namespace_ *)re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)this + 71, 0);
  *((_DWORD *)this + 146) += 2;
  *((void *)this + 76) = 0;
  uint64_t v9 = (_anonymous_namespace_ *)re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)this + 77, 0);
  *((_DWORD *)this + 158) += 2;
  *((void *)this + 82) = 0;
  *((void *)this + 83) = this;
  *((void *)this + 84) = v4;
  *((unsigned char *)this + 680) = 0;
  *((_OWORD *)this + 43) = 0u;
  *((_OWORD *)this + 44) = 0u;
  *((_DWORD *)this + 180) = 0;
  *(void *)((char *)this + 724) = 0x7FFFFFFFLL;
  *((_OWORD *)this + 46) = 0u;
  *((_OWORD *)this + 47) = 0u;
  *((_DWORD *)this + 192) = 0;
  *(void *)((char *)this + 772) = 0x7FFFFFFFLL;
  *((_OWORD *)this + 49) = 0u;
  *((_OWORD *)this + 50) = 0u;
  *((_DWORD *)this + 204) = 0;
  *(void *)((char *)this + 820) = 0x7FFFFFFFLL;
  *((_DWORD *)this + 216) = 0;
  *((_OWORD *)this + 52) = 0u;
  *((_OWORD *)this + 53) = 0u;
  *(void *)((char *)this + 868) = 0x7FFFFFFFLL;
  *((_OWORD *)this + 55) = 0u;
  *((_OWORD *)this + 56) = 0u;
  *((_DWORD *)this + 228) = 0;
  *(void *)((char *)this + 916) = 0x7FFFFFFFLL;
  *((_OWORD *)this + 58) = 0u;
  *((_OWORD *)this + 59) = 0u;
  *((_DWORD *)this + 240) = 0;
  *(void *)((char *)this + 964) = 0x7FFFFFFFLL;
  *((_OWORD *)this + 61) = 0u;
  *((_OWORD *)this + 62) = 0u;
  *((_DWORD *)this + 252) = 0;
  *(void *)((char *)this + 1012) = 0x7FFFFFFFLL;
  *((_OWORD *)this + 64) = 0u;
  *((_OWORD *)this + 65) = 0u;
  *((_DWORD *)this + 264) = 0;
  *(void *)((char *)this + 1060) = 0x7FFFFFFFLL;
  *((_OWORD *)this + 67) = 0u;
  *((_OWORD *)this + 68) = 0u;
  *((_DWORD *)this + 276) = 0;
  *(void *)((char *)this + 1108) = 0x7FFFFFFFLL;
  *((_DWORD *)this + 288) = 0;
  *((_OWORD *)this + 71) = 0u;
  *((_OWORD *)this + 70) = 0u;
  *(void *)((char *)this + 1156) = 0x7FFFFFFFLL;
  *((_DWORD *)this + 300) = 0;
  *((_OWORD *)this + 74) = 0u;
  *((_OWORD *)this + 73) = 0u;
  *(void *)((char *)this + 1204) = 0x7FFFFFFFLL;
  *((_DWORD *)this + 312) = 0;
  *((_OWORD *)this + 77) = 0u;
  *((_OWORD *)this + 76) = 0u;
  *(void *)((char *)this + 1252) = 0x7FFFFFFFLL;
  *((_DWORD *)this + 324) = 0;
  *((_OWORD *)this + 80) = 0u;
  *((_OWORD *)this + 79) = 0u;
  *(void *)((char *)this + 1300) = 0x7FFFFFFFLL;
  *((_OWORD *)this + 82) = 0u;
  *((_OWORD *)this + 83) = 0u;
  *((_DWORD *)this + 336) = 0;
  *(void *)((char *)this + 1348) = 0x7FFFFFFFLL;
  *((_DWORD *)this + 348) = 0;
  *((_OWORD *)this + 86) = 0u;
  *((_OWORD *)this + 85) = 0u;
  *(void *)((char *)this + 1396) = 0x7FFFFFFFLL;
  *((_DWORD *)this + 360) = 0;
  *((_OWORD *)this + 89) = 0u;
  *((_OWORD *)this + 88) = 0u;
  *(void *)((char *)this + 1444) = 0x7FFFFFFFLL;
  *((_DWORD *)this + 372) = 0;
  *((_OWORD *)this + 92) = 0u;
  *((_OWORD *)this + 91) = 0u;
  *(void *)((char *)this + 1492) = 0x7FFFFFFFLL;
  *((_DWORD *)this + 384) = 0;
  *((_OWORD *)this + 95) = 0u;
  *((_OWORD *)this + 94) = 0u;
  *(void *)((char *)this + 1540) = 0x7FFFFFFFLL;
  *((_DWORD *)this + 396) = 0;
  *((_OWORD *)this + 98) = 0u;
  *((_OWORD *)this + 97) = 0u;
  *(void *)((char *)this + 1588) = 0x7FFFFFFFLL;
  *((_DWORD *)this + 408) = 0;
  *((_OWORD *)this + 101) = 0u;
  *((_OWORD *)this + 100) = 0u;
  *(void *)((char *)this + 1636) = 0x7FFFFFFFLL;
  *((_DWORD *)this + 420) = 0;
  *((_OWORD *)this + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *((_OWORD *)this + 103) = 0u;
  *(void *)((char *)this + 1684) = 0x7FFFFFFFLL;
  *((_DWORD *)this + 432) = 0;
  *((_OWORD *)this + 107) = 0u;
  *((_OWORD *)this + 106) = 0u;
  *(void *)((char *)this + 1732) = 0x7FFFFFFFLL;
  *((unsigned char *)this + 1744) = 0;
  *((unsigned char *)this + 1760) = 0;
  *((unsigned char *)this + 2416) = 0;
  *((_DWORD *)this + 608) = 1065353216;
  *uint64_t v2 = xmmword_2343864E0;
  *((_DWORD *)this + 613) = 12;
  *((void *)this + 307) = 0x3CF5C28F3F800000;
  *((_WORD *)this + 1232) = 0;
  *((_OWORD *)this + 155) = xmmword_2343864F0;
  *((void *)this + 312) = 0x3EB333333F800000;
  *((unsigned char *)this + 2504) = 1;
  *(_OWORD *)((char *)v2 + 72) = xmmword_234386500;
  *(_OWORD *)((char *)v2 + 88) = xmmword_234386510;
  *((_DWORD *)this + 635) = 1106247680;
  *((void *)this + 318) = 0x4170475C3DCCCCCDLL;
  *((unsigned char *)this + 2552) = 1;
  *((_OWORD *)this + 160) = xmmword_23435FD90;
  *((unsigned char *)this + 2576) = 1;
  *((void *)this + 324) = 0x3F8000003F2D42C4;
  *((void *)this + 325) = 0xA3F800000;
  *((_OWORD *)this + 163) = xmmword_234386520;
  *((void *)this + 328) = 1056964608;
  *((_DWORD *)this + 658) = 0x40000000;
  *((_WORD *)this + 1318) = 256;
  *((_WORD *)this + 1320) = 1;
  *((unsigned char *)this + 2642) = 0;
  *((_DWORD *)this + 661) = 897988541;
  *((void *)this + 331) = 0;
  *((void *)this + 332) = 0x3DCCCCCD3E800000;
  *((_DWORD *)this + 666) = 16;
  *((void *)this + 334) = 0;
  *((unsigned char *)this + 2680) = 0;
  *((_DWORD *)this + 671) = 1056964608;
  *((_WORD *)this + 1344) = 1;
  *((void *)this + 339) = 0;
  *((void *)this + 338) = 0;
  *((void *)this + 340) = 0;
  re::DynamicString::setCapacity((void *)this + 337, 0x3E8uLL);
  re::Defaults::floatValue((re::Defaults *)"ShadowPlaneUpdateInterval", v10, (uint64_t)v16);
  float v12 = v17;
  if (!v16[0]) {
    float v12 = 0.5;
  }
  *((float *)this + 671) = v12;
  re::Defaults::BOOLValue((re::Defaults *)"ShadowUpdateLog", v11, v15);
  if (v15[0]) {
    char v13 = v15[1];
  }
  else {
    char v13 = 0;
  }
  *((unsigned char *)this + 2688) = v13;
  return this;
}

uint64_t *re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::ShadowClusterComponent>,4ul>::init(uint64_t a1, uint64_t a2, unint64_t a3)
{
  *(void *)a1 = a2;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)a1, a3);
  *(_DWORD *)(a1 + 16) += 2;
  *(void *)(a1 + 40) = 0;
  uint64_t result = re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::ShadowClusterComponent>,4ul>::setBucketsCapacity((uint64_t *)a1, a3);
  ++*(_DWORD *)(a1 + 48);
  return result;
}

uint64_t *re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::ShadowClusterComponent>,4ul>::setBucketsCapacity(uint64_t *result, unint64_t a2)
{
  uint64_t v3 = result;
  if (*result)
  {
    if (result[5] < 4 * a2)
    {
      while (1)
      {
        unint64_t v4 = v3[1];
        if (v4 <= a2) {
          break;
        }
        uint64_t result = (uint64_t *)re::BucketArray<re::CollisionCastHit,10ul>::freeElementBucket(v3);
      }
      while (v4 < a2)
      {
        uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)*v3 + 32))(*v3, 448, 0);
        uint64_t result = (uint64_t *)re::DynamicOverflowArray<RESubscriptionHandle *,2ul>::add((uint64_t)v3, &v5);
        unint64_t v4 = v3[1];
      }
    }
  }
  else
  {
  }
  return result;
}

re::ecs2::ProjectiveShadowReceiverSystem *re::ecs2::ProjectiveShadowReceiverSystem::ProjectiveShadowReceiverSystem(re::ecs2::ProjectiveShadowReceiverSystem *this)
{
  re::ecs2::System::System((uint64_t)this, 1, 1);
  *(void *)(v2 + 152) = 0;
  *(_OWORD *)(v2 + 136) = 0u;
  *(_OWORD *)(v2 + 120) = 0u;
  *(_OWORD *)(v2 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v2 + 160) = 0;
  uint64_t v3 = v2 + 160;
  *(void *)uint64_t v2 = &unk_26E6FAE88;
  uint64_t v4 = v2 + 400;
  *(void *)(v2 + 168) = 0;
  *(_DWORD *)(v2 + 176) = 1;
  *(void *)(v2 + 192) = 0;
  *(void *)(v2 + 200) = 0;
  *(void *)(v2 + 184) = 0;
  *(_DWORD *)(v2 + 208) = 0;
  *(_OWORD *)(v2 + 232) = 0u;
  *(_OWORD *)(v2 + 248) = 0u;
  *(_OWORD *)(v2 + 264) = 0u;
  *(_OWORD *)(v2 + 280) = 0u;
  uint64_t v5 = (void *)(v2 + 280);
  *(_OWORD *)(v2 + 216) = 0u;
  uint64_t v6 = (void *)(v2 + 216);
  *(_DWORD *)(v2 + 296) = 1;
  unint64_t v7 = (void *)(v2 + 328);
  *(void *)(v2 + 336) = 0;
  *(_OWORD *)(v2 + 304) = 0u;
  *(_OWORD *)(v2 + 320) = 0u;
  *(_DWORD *)(v2 + 344) = 1;
  *(_OWORD *)(v2 + 352) = 0u;
  *(_OWORD *)(v2 + 368) = 0u;
  *(_OWORD *)(v2 + 377) = 0u;
  uint64_t v10 = (_anonymous_namespace_ *)re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity(v5, 0);
  *((_DWORD *)this + 74) += 2;
  *((void *)this + 40) = 0;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity(v7, 0);
  *((_DWORD *)this + 86) += 2;
  *((void *)this + 46) = 0;
  *((void *)this + 47) = this;
  *((void *)this + 48) = v4;
  *((unsigned char *)this + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 1;
  LOWORD(v12) = 257;
  HIDWORD(v12) = 1023969417;
  char v13 = 0;
  re::ecs2::System::setTaskOptions(this, &v12);
  re::ecs2::ProjectiveShadowReceiverStateImpl::ProjectiveShadowReceiverStateImpl(v4, (uint64_t)this);
  *((void *)this + 94) = 0;
  return this;
}

uint64_t re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::ProjectiveShadowReceiverComponent>,4ul>::init(uint64_t a1, uint64_t a2, unint64_t a3)
{
  *(void *)a1 = a2;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)a1, a3);
  *(_DWORD *)(a1 + 16) += 2;
  *(void *)(a1 + 40) = 0;
  uint64_t result = re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::ProjectiveShadowReceiverComponent>,4ul>::setBucketsCapacity(a1, a3);
  ++*(_DWORD *)(a1 + 48);
  return result;
}

uint64_t *re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::ProjectiveShadowReceiverComponent>,4ul>::setBucketsCapacity(uint64_t *result, unint64_t a2)
{
  uint64_t v3 = result;
  if (*result)
  {
    if (result[5] < 4 * a2)
    {
      while (1)
      {
        unint64_t v4 = v3[1];
        if (v4 <= a2) {
          break;
        }
        uint64_t result = (uint64_t *)re::BucketArray<re::CollisionCastHit,10ul>::freeElementBucket(v3);
      }
      while (v4 < a2)
      {
        uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)*v3 + 32))(*v3, 448, 0);
        uint64_t result = (uint64_t *)re::DynamicOverflowArray<RESubscriptionHandle *,2ul>::add((uint64_t)v3, &v5);
        unint64_t v4 = v3[1];
      }
    }
  }
  else
  {
  }
  return result;
}

re::ecs2::LightSystem *re::ecs2::LightSystem::LightSystem(re::ecs2::LightSystem *this)
{
  re::ecs2::System::System((uint64_t)this, 1, 1);
  *(_OWORD *)(v2 + 136) = 0u;
  *(_OWORD *)(v2 + 120) = 0u;
  *(_OWORD *)(v2 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(_OWORD *)(v2 + 152) = 0u;
  *(void *)uint64_t v2 = &unk_26E6FBEC8;
  uint64_t v3 = v2 + 168;
  unint64_t v4 = (_anonymous_namespace_ *)re::ecs2::BaseLightComponentStateImpl<re::ecs2::LightComponent,re::ecs2::LightComponentStateImpl>::BaseLightComponentStateImpl(v2 + 168);
  *((void *)this + 21) = &unk_26E6E5B30;
  *(_OWORD *)((char *)this + 360) = 0u;
  *((_DWORD *)this + 94) = 1;
  *((void *)this + 48) = 0;
  *(_OWORD *)((char *)this + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0u;
  *((_DWORD *)this + 102) = 0;
  *((_OWORD *)this + 26) = 0u;
  *((_OWORD *)this + 27) = 0u;
  *((_OWORD *)this + 28) = 0u;
  *((_OWORD *)this + 29) = 0u;
  *((_OWORD *)this + 30) = 0u;
  *((_DWORD *)this + 124) = 1;
  *(_OWORD *)((char *)this + 504) = 0u;
  *(_OWORD *)((char *)this + 520) = 0u;
  *((void *)this + 67) = 0;
  *((_DWORD *)this + 136) = 1;
  *(_OWORD *)((char *)this + 552) = 0u;
  *(_OWORD *)((char *)this + 568) = 0u;
  *(_OWORD *)((char *)this + 577) = 0u;
  unint64_t v7 = (_anonymous_namespace_ *)re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)this + 60, 0);
  *((_DWORD *)this + 124) += 2;
  *((void *)this + 65) = 0;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)this + 66, 0);
  *((_DWORD *)this + 136) += 2;
  *((void *)this + 71) = 0;
  *((void *)this + 72) = this;
  *((void *)this + 73) = v3;
  *((unsigned char *)this + 592) = 1;
  LOWORD(v33) = 257;
  HIDWORD(v33) = 1023969417;
  char v34 = 0;
  re::ecs2::System::setTaskOptions(this, &v33);
  uint64_t v8 = re::ecs2::PointLightComponentStateImpl::PointLightComponentStateImpl((re::ecs2::LightSystem *)((char *)this + 600));
  *(_OWORD *)((char *)this + 792) = 0u;
  *((_DWORD *)this + 202) = 1;
  *((void *)this + 102) = 0;
  *(_OWORD *)((char *)this + 824) = 0u;
  *((_DWORD *)this + 210) = 0;
  *((_OWORD *)this + 53) = 0u;
  *((_OWORD *)this + 54) = 0u;
  *((_OWORD *)this + 55) = 0u;
  *((_OWORD *)this + 56) = 0u;
  *((_OWORD *)this + 57) = 0u;
  *((_DWORD *)this + 232) = 1;
  *(_OWORD *)((char *)this + 936) = 0u;
  *(_OWORD *)((char *)this + 952) = 0u;
  *((void *)this + 121) = 0;
  *((_DWORD *)this + 244) = 1;
  *(_OWORD *)((char *)this + 984) = 0u;
  *(_OWORD *)((char *)this + 1000) = 0u;
  *(_OWORD *)((char *)this + 1009) = 0u;
  char v11 = (_anonymous_namespace_ *)re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)this + 114, 0);
  *((_DWORD *)this + 232) += 2;
  *((void *)this + 1re::ecs2::BasicComponentStates<re::ecs2::BlendShapeWeightsBufferComponent>::~BasicComponentStates((void *)this + 19) = 0;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)this + 120, 0);
  *((_DWORD *)this + 244) += 2;
  *((void *)this + 125) = 0;
  *((void *)this + 126) = this;
  *((void *)this + 127) = (char *)this + 600;
  *((unsigned char *)this + 1024) = 1;
  LOWORD(v33) = 257;
  HIDWORD(v33) = 1023969417;
  char v34 = 0;
  re::ecs2::System::setTaskOptions(this, &v33);
  uint64_t v12 = re::ecs2::SpotLightComponentStateImpl::SpotLightComponentStateImpl((re::ecs2::LightSystem *)((char *)this + 1032));
  *(_OWORD *)((char *)this + 1224) = 0u;
  *((_DWORD *)this + 310) = 1;
  *((void *)this + 156) = 0;
  *(_OWORD *)((char *)this + 1256) = 0u;
  *((_DWORD *)this + 318) = 0;
  *((_OWORD *)this + 80) = 0u;
  *((_OWORD *)this + 81) = 0u;
  *((_OWORD *)this + 82) = 0u;
  *((_OWORD *)this + 83) = 0u;
  *((_OWORD *)this + 84) = 0u;
  *((_DWORD *)this + 340) = 1;
  *(_OWORD *)((char *)this + 1368) = 0u;
  *(_OWORD *)((char *)this + 1384) = 0u;
  *((void *)this + 175) = 0;
  *((_DWORD *)this + 352) = 1;
  *(_OWORD *)((char *)this + 1416) = 0u;
  *(_OWORD *)((char *)this + 1432) = 0u;
  *(_OWORD *)((char *)this + 1441) = 0u;
  uint64_t v15 = (_anonymous_namespace_ *)re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)this + 168, 0);
  *((_DWORD *)this + 340) += 2;
  *((void *)this + 173) = 0;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)this + 174, 0);
  *((_DWORD *)this + 352) += 2;
  *((void *)this + 179) = 0;
  *((void *)this + 180) = this;
  *((void *)this + 181) = (char *)this + 1032;
  *((unsigned char *)this + 1456) = 1;
  LOWORD(v33) = 257;
  HIDWORD(v33) = 1023969417;
  char v34 = 0;
  re::ecs2::System::setTaskOptions(this, &v33);
  BOOL v16 = re::ecs2::DirectionalLightComponentStateImpl::DirectionalLightComponentStateImpl((re::ecs2::LightSystem *)((char *)this + 1464));
  *(_OWORD *)((char *)this + 1656) = 0u;
  *((_DWORD *)this + 418) = 1;
  *((void *)this + 210) = 0;
  *(_OWORD *)((char *)this + 1688) = 0u;
  *((_DWORD *)this + 426) = 0;
  *((_OWORD *)this + 107) = 0u;
  *((_OWORD *)this + 108) = 0u;
  *((_OWORD *)this + 109) = 0u;
  *((_OWORD *)this + 110) = 0u;
  *((_OWORD *)this + 111) = 0u;
  *((_DWORD *)this + 448) = 1;
  *(_OWORD *)((char *)this + 1800) = 0u;
  *(_OWORD *)((char *)this + 1816) = 0u;
  *((void *)this + 229) = 0;
  *((_DWORD *)this + 460) = 1;
  *(_OWORD *)((char *)this + 1848) = 0u;
  *(_OWORD *)((char *)this + 1864) = 0u;
  *(_OWORD *)((char *)this + 1873) = 0u;
  uint64_t v19 = (_anonymous_namespace_ *)re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)this + 222, 0);
  *((_DWORD *)this + 448) += 2;
  *((void *)this + 227) = 0;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)this + 228, 0);
  *((_DWORD *)this + 460) += 2;
  *((void *)this + 233) = 0;
  *((void *)this + 234) = this;
  *((void *)this + 235) = (char *)this + 1464;
  *((unsigned char *)this + 1888) = 1;
  LOWORD(v33) = 257;
  HIDWORD(v33) = 1023969417;
  char v34 = 0;
  re::ecs2::System::setTaskOptions(this, &v33);
  uint64_t v20 = (_anonymous_namespace_ *)re::ecs2::BaseLightComponentStateImpl<re::ecs2::AmbientLightComponent,re::ecs2::AmbientLightComponentStateImpl>::BaseLightComponentStateImpl((uint64_t)this + 1896);
  *((void *)this + 237) = &unk_26E6E5B88;
  *(_OWORD *)((char *)this + 2088) = 0u;
  *((_DWORD *)this + 526) = 1;
  *((void *)this + 264) = 0;
  *(_OWORD *)((char *)this + 2120) = 0u;
  *((_DWORD *)this + 534) = 0;
  *((_OWORD *)this + 134) = 0u;
  *((_OWORD *)this + 135) = 0u;
  *((_OWORD *)this + 136) = 0u;
  *((_OWORD *)this + 137) = 0u;
  *((_OWORD *)this + 138) = 0u;
  *((_DWORD *)this + 556) = 1;
  *(_OWORD *)((char *)this + 2232) = 0u;
  *(_OWORD *)((char *)this + 2248) = 0u;
  *((void *)this + 283) = 0;
  *((_DWORD *)this + 568) = 1;
  *(_OWORD *)((char *)this + 2280) = 0u;
  *(_OWORD *)((char *)this + 2296) = 0u;
  *(_OWORD *)((char *)this + 2305) = 0u;
  BOOL v23 = (_anonymous_namespace_ *)re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)this + 276, 0);
  *((_DWORD *)this + 556) += 2;
  *((void *)this + 281) = 0;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)this + 282, 0);
  *((_DWORD *)this + 568) += 2;
  *((void *)this + 287) = 0;
  *((void *)this + 288) = this;
  *((void *)this + 289) = (char *)this + 1896;
  *((unsigned char *)this + 2320) = 1;
  LOWORD(v33) = 257;
  HIDWORD(v33) = 1023969417;
  char v34 = 0;
  re::ecs2::System::setTaskOptions(this, &v33);
  uint64_t v24 = (_anonymous_namespace_ *)re::ecs2::BaseLightComponentStateImpl<re::ecs2::RectAreaLightComponent,re::ecs2::RectAreaLightComponentStateImpl>::BaseLightComponentStateImpl((uint64_t)this + 2328);
  *((void *)this + 291) = &unk_26E6E5BE0;
  *(_OWORD *)((char *)this + 2520) = 0u;
  *((_DWORD *)this + 634) = 1;
  *((void *)this + 318) = 0;
  *(_OWORD *)((char *)this + 2552) = 0u;
  *((_DWORD *)this + 642) = 0;
  *((_OWORD *)this + 161) = 0u;
  *((_OWORD *)this + 162) = 0u;
  *((_OWORD *)this + 163) = 0u;
  *((_OWORD *)this + 164) = 0u;
  *((_OWORD *)this + 165) = 0u;
  *((_DWORD *)this + 664) = 1;
  *(_OWORD *)((char *)this + 2664) = 0u;
  *(_OWORD *)((char *)this + 2680) = 0u;
  *((void *)this + 337) = 0;
  *((_DWORD *)this + 676) = 1;
  *(_OWORD *)((char *)this + 2712) = 0u;
  *(_OWORD *)((char *)this + 2728) = 0u;
  *(_OWORD *)((char *)this + 2737) = 0u;
  uint64_t v27 = (_anonymous_namespace_ *)re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)this + 330, 0);
  *((_DWORD *)this + 664) += 2;
  *((void *)this + 335) = 0;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)this + 336, 0);
  *((_DWORD *)this + 676) += 2;
  *((void *)this + 341) = 0;
  *((void *)this + 342) = this;
  *((void *)this + 343) = (char *)this + 2328;
  *((unsigned char *)this + 2752) = 1;
  LOWORD(v33) = 257;
  HIDWORD(v33) = 1023969417;
  char v34 = 0;
  re::ecs2::System::setTaskOptions(this, &v33);
  uint64_t v28 = re::ecs2::FrustumLightComponentStateImpl::FrustumLightComponentStateImpl((re::ecs2::LightSystem *)((char *)this + 2760));
  *(_OWORD *)((char *)this + 2952) = 0u;
  *((_DWORD *)this + 742) = 1;
  *((void *)this + 372) = 0;
  *(_OWORD *)((char *)this + 2984) = 0u;
  *((_DWORD *)this + 750) = 0;
  *((_OWORD *)this + 188) = 0u;
  *((_OWORD *)this + 189) = 0u;
  *((_OWORD *)this + 190) = 0u;
  *((_OWORD *)this + 191) = 0u;
  *((_OWORD *)this + 192) = 0u;
  *((_DWORD *)this + 772) = 1;
  *(_OWORD *)((char *)this + 3096) = 0u;
  *(_OWORD *)((char *)this + 3112) = 0u;
  *((void *)this + 391) = 0;
  *((_DWORD *)this + 784) = 1;
  *(_OWORD *)((char *)this + 3144) = 0u;
  *(_OWORD *)((char *)this + 3160) = 0u;
  *(_OWORD *)((char *)this + 3169) = 0u;
  unsigned int v31 = (_anonymous_namespace_ *)re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)this + 384, 0);
  *((_DWORD *)this + 772) += 2;
  *((void *)this + 389) = 0;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)this + 390, 0);
  *((_DWORD *)this + 784) += 2;
  *((void *)this + 395) = 0;
  *((void *)this + 396) = this;
  *((void *)this + 397) = (char *)this + 2760;
  *((unsigned char *)this + 3184) = 1;
  LOWORD(v33) = 257;
  HIDWORD(v33) = 1023969417;
  char v34 = 0;
  re::ecs2::System::setTaskOptions(this, &v33);
  *(_OWORD *)((char *)this + 3192) = 0u;
  *(_OWORD *)((char *)this + 3208) = 0u;
  *((void *)this + 403) = 0x7FFFFFFF00000000;
  *((_DWORD *)this + 808) = 0;
  return this;
}

uint64_t re::ecs2::BaseLightComponentStateImpl<re::ecs2::LightComponent,re::ecs2::LightComponentStateImpl>::dependsOnComponents(uint64_t a1)
{
  uint64_t v1 = a1 + 128;
  if ((*(unsigned char *)(a1 + 120) & 1) == 0) {
    return *(void *)(a1 + 136);
  }
  return v1;
}

uint64_t re::ecs2::BasicComponentStateImpl<re::ecs2::LightComponent>::processPreparingComponents(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::DataArrayIterator((uint64_t)&v19, a5, 0);
  unint64_t v8 = v19;
  unint64_t v9 = v20;
  unint64_t v19 = a4;
  unint64_t v20 = v8;
  unint64_t v21 = v9;
  uint64_t v10 = (unsigned __int16)v9;
  uint64_t v11 = v9 & 0xFFFF0000;
  if (v8 != a5 || v10 != 0xFFFF || v11 != 4294901760)
  {
    do
    {
      unint64_t v14 = v19;
      unint64_t v15 = re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::handle((unsigned __int16 *)&v20);
      re::ecs2::ComponentBucketsBase::moveComponent(*(re::ecs2::ComponentBucketsBase **)(a3 + 16), v14, v15, *(void *)(a3 + 48));
      re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::increment(&v20);
    }
    while (v20 != a5 || (unsigned __int16)v21 != 0xFFFF || WORD1(v21) != 0xFFFF);
  }
  return 0;
}

uint64_t re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::LightComponent>,4ul>::init(uint64_t a1, uint64_t a2, unint64_t a3)
{
  *(void *)a1 = a2;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)a1, a3);
  *(_DWORD *)(a1 + 16) += 2;
  *(void *)(a1 + 40) = 0;
  uint64_t result = re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::LightComponent>,4ul>::setBucketsCapacity(a1, a3);
  ++*(_DWORD *)(a1 + 48);
  return result;
}

uint64_t *re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::LightComponent>,4ul>::setBucketsCapacity(uint64_t *result, unint64_t a2)
{
  uint64_t v3 = result;
  if (*result)
  {
    if (result[5] < 4 * a2)
    {
      while (1)
      {
        unint64_t v4 = v3[1];
        if (v4 <= a2) {
          break;
        }
        uint64_t result = (uint64_t *)re::BucketArray<re::CollisionCastHit,10ul>::freeElementBucket(v3);
      }
      while (v4 < a2)
      {
        uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)*v3 + 32))(*v3, 448, 0);
        uint64_t result = (uint64_t *)re::DynamicOverflowArray<RESubscriptionHandle *,2ul>::add((uint64_t)v3, &v5);
        unint64_t v4 = v3[1];
      }
    }
  }
  else
  {
  }
  return result;
}

uint64_t re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::PointLightComponent>,4ul>::init(uint64_t a1, uint64_t a2, unint64_t a3)
{
  *(void *)a1 = a2;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)a1, a3);
  *(_DWORD *)(a1 + 16) += 2;
  *(void *)(a1 + 40) = 0;
  uint64_t result = re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::PointLightComponent>,4ul>::setBucketsCapacity(a1, a3);
  ++*(_DWORD *)(a1 + 48);
  return result;
}

uint64_t *re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::PointLightComponent>,4ul>::setBucketsCapacity(uint64_t *result, unint64_t a2)
{
  uint64_t v3 = result;
  if (*result)
  {
    if (result[5] < 4 * a2)
    {
      while (1)
      {
        unint64_t v4 = v3[1];
        if (v4 <= a2) {
          break;
        }
        uint64_t result = (uint64_t *)re::BucketArray<re::CollisionCastHit,10ul>::freeElementBucket(v3);
      }
      while (v4 < a2)
      {
        uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)*v3 + 32))(*v3, 448, 0);
        uint64_t result = (uint64_t *)re::DynamicOverflowArray<RESubscriptionHandle *,2ul>::add((uint64_t)v3, &v5);
        unint64_t v4 = v3[1];
      }
    }
  }
  else
  {
  }
  return result;
}

uint64_t re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::SpotLightComponent>,4ul>::init(uint64_t a1, uint64_t a2, unint64_t a3)
{
  *(void *)a1 = a2;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)a1, a3);
  *(_DWORD *)(a1 + 16) += 2;
  *(void *)(a1 + 40) = 0;
  uint64_t result = re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::SpotLightComponent>,4ul>::setBucketsCapacity(a1, a3);
  ++*(_DWORD *)(a1 + 48);
  return result;
}

uint64_t *re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::SpotLightComponent>,4ul>::setBucketsCapacity(uint64_t *result, unint64_t a2)
{
  uint64_t v3 = result;
  if (*result)
  {
    if (result[5] < 4 * a2)
    {
      while (1)
      {
        unint64_t v4 = v3[1];
        if (v4 <= a2) {
          break;
        }
        uint64_t result = (uint64_t *)re::BucketArray<re::CollisionCastHit,10ul>::freeElementBucket(v3);
      }
      while (v4 < a2)
      {
        uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)*v3 + 32))(*v3, 448, 0);
        uint64_t result = (uint64_t *)re::DynamicOverflowArray<RESubscriptionHandle *,2ul>::add((uint64_t)v3, &v5);
        unint64_t v4 = v3[1];
      }
    }
  }
  else
  {
  }
  return result;
}

uint64_t re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::DirectionalLightComponent>,4ul>::init(uint64_t a1, uint64_t a2, unint64_t a3)
{
  *(void *)a1 = a2;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)a1, a3);
  *(_DWORD *)(a1 + 16) += 2;
  *(void *)(a1 + 40) = 0;
  uint64_t result = re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::DirectionalLightComponent>,4ul>::setBucketsCapacity(a1, a3);
  ++*(_DWORD *)(a1 + 48);
  return result;
}

uint64_t *re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::DirectionalLightComponent>,4ul>::setBucketsCapacity(uint64_t *result, unint64_t a2)
{
  uint64_t v3 = result;
  if (*result)
  {
    if (result[5] < 4 * a2)
    {
      while (1)
      {
        unint64_t v4 = v3[1];
        if (v4 <= a2) {
          break;
        }
        uint64_t result = (uint64_t *)re::BucketArray<re::CollisionCastHit,10ul>::freeElementBucket(v3);
      }
      while (v4 < a2)
      {
        uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)*v3 + 32))(*v3, 448, 0);
        uint64_t result = (uint64_t *)re::DynamicOverflowArray<RESubscriptionHandle *,2ul>::add((uint64_t)v3, &v5);
        unint64_t v4 = v3[1];
      }
    }
  }
  else
  {
  }
  return result;
}

uint64_t re::ecs2::BaseLightComponentStateImpl<re::ecs2::AmbientLightComponent,re::ecs2::AmbientLightComponentStateImpl>::dependsOnComponents(uint64_t a1)
{
  uint64_t v1 = a1 + 128;
  if ((*(unsigned char *)(a1 + 120) & 1) == 0) {
    return *(void *)(a1 + 136);
  }
  return v1;
}

uint64_t re::ecs2::BasicComponentStateImpl<re::ecs2::AmbientLightComponent>::processPreparingComponents(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::DataArrayIterator((uint64_t)&v19, a5, 0);
  unint64_t v8 = v19;
  unint64_t v9 = v20;
  unint64_t v19 = a4;
  unint64_t v20 = v8;
  unint64_t v21 = v9;
  uint64_t v10 = (unsigned __int16)v9;
  uint64_t v11 = v9 & 0xFFFF0000;
  if (v8 != a5 || v10 != 0xFFFF || v11 != 4294901760)
  {
    do
    {
      unint64_t v14 = v19;
      unint64_t v15 = re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::handle((unsigned __int16 *)&v20);
      re::ecs2::ComponentBucketsBase::moveComponent(*(re::ecs2::ComponentBucketsBase **)(a3 + 16), v14, v15, *(void *)(a3 + 48));
      re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::increment(&v20);
    }
    while (v20 != a5 || (unsigned __int16)v21 != 0xFFFF || WORD1(v21) != 0xFFFF);
  }
  return 0;
}

uint64_t re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::AmbientLightComponent>,4ul>::init(uint64_t a1, uint64_t a2, unint64_t a3)
{
  *(void *)a1 = a2;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)a1, a3);
  *(_DWORD *)(a1 + 16) += 2;
  *(void *)(a1 + 40) = 0;
  uint64_t result = re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::AmbientLightComponent>,4ul>::setBucketsCapacity(a1, a3);
  ++*(_DWORD *)(a1 + 48);
  return result;
}

uint64_t *re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::AmbientLightComponent>,4ul>::setBucketsCapacity(uint64_t *result, unint64_t a2)
{
  uint64_t v3 = result;
  if (*result)
  {
    if (result[5] < 4 * a2)
    {
      while (1)
      {
        unint64_t v4 = v3[1];
        if (v4 <= a2) {
          break;
        }
        uint64_t result = (uint64_t *)re::BucketArray<re::CollisionCastHit,10ul>::freeElementBucket(v3);
      }
      while (v4 < a2)
      {
        uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)*v3 + 32))(*v3, 448, 0);
        uint64_t result = (uint64_t *)re::DynamicOverflowArray<RESubscriptionHandle *,2ul>::add((uint64_t)v3, &v5);
        unint64_t v4 = v3[1];
      }
    }
  }
  else
  {
  }
  return result;
}

uint64_t re::ecs2::BaseLightComponentStateImpl<re::ecs2::RectAreaLightComponent,re::ecs2::RectAreaLightComponentStateImpl>::dependsOnComponents(uint64_t a1)
{
  uint64_t v1 = a1 + 128;
  if ((*(unsigned char *)(a1 + 120) & 1) == 0) {
    return *(void *)(a1 + 136);
  }
  return v1;
}

uint64_t re::ecs2::BasicComponentStateImpl<re::ecs2::RectAreaLightComponent>::processPreparingComponents(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::DataArrayIterator((uint64_t)&v19, a5, 0);
  unint64_t v8 = v19;
  unint64_t v9 = v20;
  unint64_t v19 = a4;
  unint64_t v20 = v8;
  unint64_t v21 = v9;
  uint64_t v10 = (unsigned __int16)v9;
  uint64_t v11 = v9 & 0xFFFF0000;
  if (v8 != a5 || v10 != 0xFFFF || v11 != 4294901760)
  {
    do
    {
      unint64_t v14 = v19;
      unint64_t v15 = re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::handle((unsigned __int16 *)&v20);
      re::ecs2::ComponentBucketsBase::moveComponent(*(re::ecs2::ComponentBucketsBase **)(a3 + 16), v14, v15, *(void *)(a3 + 48));
      re::DataArray<re::RigGraphOperatorDefinition>::DataArrayIterator<re::RigGraphOperatorDefinition,re::RigGraphOperatorDefinition&>::increment(&v20);
    }
    while (v20 != a5 || (unsigned __int16)v21 != 0xFFFF || WORD1(v21) != 0xFFFF);
  }
  return 0;
}

uint64_t re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::RectAreaLightComponent>,4ul>::init(uint64_t a1, uint64_t a2, unint64_t a3)
{
  *(void *)a1 = a2;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)a1, a3);
  *(_DWORD *)(a1 + 16) += 2;
  *(void *)(a1 + 40) = 0;
  uint64_t result = re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::RectAreaLightComponent>,4ul>::setBucketsCapacity(a1, a3);
  ++*(_DWORD *)(a1 + 48);
  return result;
}

uint64_t *re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::RectAreaLightComponent>,4ul>::setBucketsCapacity(uint64_t *result, unint64_t a2)
{
  uint64_t v3 = result;
  if (*result)
  {
    if (result[5] < 4 * a2)
    {
      while (1)
      {
        unint64_t v4 = v3[1];
        if (v4 <= a2) {
          break;
        }
        uint64_t result = (uint64_t *)re::BucketArray<re::CollisionCastHit,10ul>::freeElementBucket(v3);
      }
      while (v4 < a2)
      {
        uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)*v3 + 32))(*v3, 448, 0);
        uint64_t result = (uint64_t *)re::DynamicOverflowArray<RESubscriptionHandle *,2ul>::add((uint64_t)v3, &v5);
        unint64_t v4 = v3[1];
      }
    }
  }
  else
  {
  }
  return result;
}

uint64_t re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::FrustumLightComponent>,4ul>::init(uint64_t a1, uint64_t a2, unint64_t a3)
{
  *(void *)a1 = a2;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)a1, a3);
  *(_DWORD *)(a1 + 16) += 2;
  *(void *)(a1 + 40) = 0;
  uint64_t result = re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::FrustumLightComponent>,4ul>::setBucketsCapacity(a1, a3);
  ++*(_DWORD *)(a1 + 48);
  return result;
}

uint64_t *re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::FrustumLightComponent>,4ul>::setBucketsCapacity(uint64_t *result, unint64_t a2)
{
  uint64_t v3 = result;
  if (*result)
  {
    if (result[5] < 4 * a2)
    {
      while (1)
      {
        unint64_t v4 = v3[1];
        if (v4 <= a2) {
          break;
        }
        uint64_t result = (uint64_t *)re::BucketArray<re::CollisionCastHit,10ul>::freeElementBucket(v3);
      }
      while (v4 < a2)
      {
        uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)*v3 + 32))(*v3, 448, 0);
        uint64_t result = (uint64_t *)re::DynamicOverflowArray<RESubscriptionHandle *,2ul>::add((uint64_t)v3, &v5);
        unint64_t v4 = v3[1];
      }
    }
  }
  else
  {
  }
  return result;
}

re::ecs2::ImageBasedLightSystem *re::ecs2::ImageBasedLightSystem::ImageBasedLightSystem(re::ecs2::ImageBasedLightSystem *this)
{
  re::ecs2::System::System((uint64_t)this, 1, 1);
  *(void *)(v2 + 152) = 0;
  *(_OWORD *)(v2 + 136) = 0u;
  *(_OWORD *)(v2 + 120) = 0u;
  *(_OWORD *)(v2 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v2 + 160) = 0;
  uint64_t v3 = v2 + 160;
  *(void *)uint64_t v2 = &unk_26E704078;
  unint64_t v4 = (re::ecs2::ImageBasedLightComponentStateImpl *)(v2 + 400);
  *(void *)(v2 + 168) = 0;
  *(_DWORD *)(v2 + 176) = 1;
  *(void *)(v2 + 192) = 0;
  *(void *)(v2 + 200) = 0;
  *(void *)(v2 + 184) = 0;
  *(_DWORD *)(v2 + 208) = 0;
  *(_OWORD *)(v2 + 232) = 0u;
  *(_OWORD *)(v2 + 248) = 0u;
  *(_OWORD *)(v2 + 264) = 0u;
  *(_OWORD *)(v2 + 280) = 0u;
  uint64_t v5 = (void *)(v2 + 280);
  *(_OWORD *)(v2 + 216) = 0u;
  uint64_t v6 = (void *)(v2 + 216);
  *(_DWORD *)(v2 + 296) = 1;
  unint64_t v7 = (void *)(v2 + 328);
  *(void *)(v2 + 336) = 0;
  *(_OWORD *)(v2 + 304) = 0u;
  *(_OWORD *)(v2 + 320) = 0u;
  *(_DWORD *)(v2 + 344) = 1;
  *(_OWORD *)(v2 + 352) = 0u;
  *(_OWORD *)(v2 + 368) = 0u;
  *(_OWORD *)(v2 + 377) = 0u;
  uint64_t v10 = (_anonymous_namespace_ *)re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity(v5, 0);
  *((_DWORD *)this + 74) += 2;
  *((void *)this + 40) = 0;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity(v7, 0);
  *((_DWORD *)this + 86) += 2;
  *((void *)this + 46) = 0;
  *((void *)this + 47) = this;
  *((void *)this + 48) = v4;
  *((unsigned char *)this + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 1;
  LOWORD(v12) = 257;
  HIDWORD(v12) = 1023969417;
  char v13 = 0;
  re::ecs2::System::setTaskOptions(this, &v12);
  re::ecs2::ImageBasedLightComponentStateImpl::ImageBasedLightComponentStateImpl(v4, this);
  *((_OWORD *)this + 78) = 0u;
  *((_OWORD *)this + 77) = 0u;
  return this;
}

uint64_t *re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::ImageBasedLightComponent>,4ul>::init(uint64_t a1, uint64_t a2, unint64_t a3)
{
  *(void *)a1 = a2;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)a1, a3);
  *(_DWORD *)(a1 + 16) += 2;
  *(void *)(a1 + 40) = 0;
  uint64_t result = re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::ImageBasedLightComponent>,4ul>::setBucketsCapacity((uint64_t *)a1, a3);
  ++*(_DWORD *)(a1 + 48);
  return result;
}

uint64_t *re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::ImageBasedLightComponent>,4ul>::setBucketsCapacity(uint64_t *result, unint64_t a2)
{
  uint64_t v3 = result;
  if (*result)
  {
    if (result[5] < 4 * a2)
    {
      while (1)
      {
        unint64_t v4 = v3[1];
        if (v4 <= a2) {
          break;
        }
        uint64_t result = (uint64_t *)re::BucketArray<re::CollisionCastHit,10ul>::freeElementBucket(v3);
      }
      while (v4 < a2)
      {
        uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)*v3 + 32))(*v3, 448, 0);
        uint64_t result = (uint64_t *)re::DynamicOverflowArray<RESubscriptionHandle *,2ul>::add((uint64_t)v3, &v5);
        unint64_t v4 = v3[1];
      }
    }
  }
  else
  {
  }
  return result;
}

re::ecs2::AnchorSystem *re::ecs2::AnchorSystem::AnchorSystem(re::ecs2::AnchorSystem *this)
{
  v13[1] = *MEMORY[0x263EF8340];
  re::ecs2::System::System((uint64_t)this, 1, 1);
  *(void *)(v2 + 152) = 0;
  *(_OWORD *)(v2 + 136) = 0u;
  *(_OWORD *)(v2 + 120) = 0u;
  *(_OWORD *)(v2 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v2 + 160) = 0;
  uint64_t v3 = v2 + 160;
  *(void *)uint64_t v2 = &unk_26E6FB768;
  uint64_t v4 = v2 + 400;
  *(void *)(v2 + 168) = 0;
  *(_DWORD *)(v2 + 176) = 1;
  *(void *)(v2 + 192) = 0;
  *(void *)(v2 + 200) = 0;
  *(void *)(v2 + 184) = 0;
  *(_DWORD *)(v2 + 208) = 0;
  *(_OWORD *)(v2 + 232) = 0u;
  *(_OWORD *)(v2 + 248) = 0u;
  *(_OWORD *)(v2 + 264) = 0u;
  *(_OWORD *)(v2 + 280) = 0u;
  uint64_t v5 = (void *)(v2 + 280);
  *(_OWORD *)(v2 + 216) = 0u;
  uint64_t v6 = (void *)(v2 + 216);
  *(_DWORD *)(v2 + 296) = 1;
  unint64_t v7 = (void *)(v2 + 328);
  *(void *)(v2 + 336) = 0;
  *(_OWORD *)(v2 + 304) = 0u;
  *(_OWORD *)(v2 + 320) = 0u;
  *(_DWORD *)(v2 + 344) = 1;
  *(_OWORD *)(v2 + 352) = 0u;
  *(_OWORD *)(v2 + 368) = 0u;
  *(_OWORD *)(v2 + 377) = 0u;
  uint64_t v10 = (_anonymous_namespace_ *)re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity(v5, 0);
  *((_DWORD *)this + 74) += 2;
  *((void *)this + 40) = 0;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity(v7, 0);
  *((_DWORD *)this + 86) += 2;
  *((void *)this + 46) = 0;
  *((void *)this + 47) = this;
  *((void *)this + 48) = v4;
  *((unsigned char *)this + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *((void *)this + 50) = &unk_26E6FB700;
  *((void *)this + 51) = this;
  *((void *)this + 53) = 0;
  *((void *)this + 54) = 0;
  *((void *)this + 52) = 0;
  *((_DWORD *)this + 110) = 0;
  *((_OWORD *)this + 28) = 0u;
  *((_OWORD *)this + 29) = 0u;
  v12[1] = 1;
  v13[0] = re::ecs2::ComponentImpl<re::ecs2::AnchorComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
  v12[0] = v13;
  re::FixedArray<re::ecs2::ComponentTypeBase const*>::operator=((re::ecs2::AnchorSystem *)((char *)this + 456), (uint64_t)v12);
  return this;
}

uint64_t re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::AnchorComponent>,4ul>::init(uint64_t a1, uint64_t a2, unint64_t a3)
{
  *(void *)a1 = a2;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)a1, a3);
  *(_DWORD *)(a1 + 16) += 2;
  *(void *)(a1 + 40) = 0;
  uint64_t result = re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::AnchorComponent>,4ul>::setBucketsCapacity(a1, a3);
  ++*(_DWORD *)(a1 + 48);
  return result;
}

uint64_t *re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::AnchorComponent>,4ul>::setBucketsCapacity(uint64_t *result, unint64_t a2)
{
  uint64_t v3 = result;
  if (*result)
  {
    if (result[5] < 4 * a2)
    {
      while (1)
      {
        unint64_t v4 = v3[1];
        if (v4 <= a2) {
          break;
        }
        uint64_t result = (uint64_t *)re::BucketArray<re::CollisionCastHit,10ul>::freeElementBucket(v3);
      }
      while (v4 < a2)
      {
        uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)*v3 + 32))(*v3, 448, 0);
        uint64_t result = (uint64_t *)re::DynamicOverflowArray<RESubscriptionHandle *,2ul>::add((uint64_t)v3, &v5);
        unint64_t v4 = v3[1];
      }
    }
  }
  else
  {
  }
  return result;
}

re::ecs2::MeshSystem *re::ecs2::MeshSystem::MeshSystem(re::ecs2::MeshSystem *this)
{
  re::ecs2::System::System((uint64_t)this, 1, 1);
  *(void *)(v2 + 152) = 0;
  *(_OWORD *)(v2 + 136) = 0u;
  *(_OWORD *)(v2 + 120) = 0u;
  *(_OWORD *)(v2 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)uint64_t v2 = &unk_26E6FB178;
  uint64_t v3 = v2 + 264;
  unint64_t v4 = (re::ecs2::MeshComponentStateImpl *)(v2 + 504);
  *(void *)(v2 + 264) = 0;
  *(void *)(v2 + 272) = 0;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 176) = 0u;
  *(_OWORD *)(v2 + 192) = 0u;
  *(_DWORD *)(v2 + 280) = 1;
  *(void *)(v2 + 296) = 0;
  *(void *)(v2 + 304) = 0;
  *(void *)(v2 + 288) = 0;
  *(_DWORD *)(v2 + 312) = 0;
  uint64_t v5 = (void *)(v2 + 320);
  uint64_t v6 = (void *)(v2 + 384);
  *(_OWORD *)(v2 + 320) = 0u;
  *(_OWORD *)(v2 + 336) = 0u;
  *(_OWORD *)(v2 + 352) = 0u;
  *(_OWORD *)(v2 + 368) = 0u;
  *(_OWORD *)(v2 + 384) = 0u;
  *(_DWORD *)(v2 + 400) = 1;
  unint64_t v7 = (void *)(v2 + 432);
  *(_OWORD *)(v2 + 408) = 0u;
  *(_OWORD *)(v2 + 424) = 0u;
  *(void *)(v2 + 440) = 0;
  *(_DWORD *)(v2 + 448) = 1;
  *(_OWORD *)(v2 + 456) = 0u;
  *(_OWORD *)(v2 + 472) = 0u;
  *(_OWORD *)(v2 + 481) = 0u;
  uint64_t v10 = (_anonymous_namespace_ *)re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity(v6, 0);
  *((_DWORD *)this + 100) += 2;
  *((void *)this + 53) = 0;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity(v7, 0);
  *((_DWORD *)this + 112) += 2;
  *((void *)this + 59) = 0;
  *((void *)this + 60) = this;
  *((void *)this + 61) = v4;
  *((unsigned char *)this + 496) = 0;
  re::ecs2::MeshComponentStateImpl::MeshComponentStateImpl(v4, this);
  *((_OWORD *)this + 44) = 0u;
  *((_OWORD *)this + 45) = 0u;
  *((_OWORD *)this + 42) = 0u;
  *((_OWORD *)this + 43) = 0u;
  *((_OWORD *)this + 40) = 0u;
  *((_OWORD *)this + 41) = 0u;
  return this;
}

uint64_t re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshComponent>,4ul>::init(uint64_t a1, uint64_t a2, unint64_t a3)
{
  *(void *)a1 = a2;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)a1, a3);
  *(_DWORD *)(a1 + 16) += 2;
  *(void *)(a1 + 40) = 0;
  uint64_t result = re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshComponent>,4ul>::setBucketsCapacity(a1, a3);
  ++*(_DWORD *)(a1 + 48);
  return result;
}

uint64_t *re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::MeshComponent>,4ul>::setBucketsCapacity(uint64_t *result, unint64_t a2)
{
  uint64_t v3 = result;
  if (*result)
  {
    if (result[5] < 4 * a2)
    {
      while (1)
      {
        unint64_t v4 = v3[1];
        if (v4 <= a2) {
          break;
        }
        uint64_t result = (uint64_t *)re::BucketArray<re::CollisionCastHit,10ul>::freeElementBucket(v3);
      }
      while (v4 < a2)
      {
        uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)*v3 + 32))(*v3, 448, 0);
        uint64_t result = (uint64_t *)re::DynamicOverflowArray<RESubscriptionHandle *,2ul>::add((uint64_t)v3, &v5);
        unint64_t v4 = v3[1];
      }
    }
  }
  else
  {
  }
  return result;
}

re::ecs2::AREnvironmentProbeSystem *re::ecs2::AREnvironmentProbeSystem::AREnvironmentProbeSystem(re::ecs2::AREnvironmentProbeSystem *this)
{
  re::ecs2::System::System((uint64_t)this, 1, 1);
  *(_OWORD *)(v2 + 136) = 0u;
  *(_OWORD *)(v2 + 120) = 0u;
  *(_OWORD *)(v2 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)uint64_t v2 = &unk_26E706B58;
  uint64_t v3 = v2 + 160;
  *(void *)(v2 + 152) = 0;
  *(void *)(v2 + 160) = &unk_26E706AF0;
  *(void *)(v2 + 168) = v2;
  uint64_t v4 = v2 + 200;
  *(_OWORD *)(v2 + 176) = 0u;
  *(_OWORD *)(v2 + 192) = 0u;
  *(void *)(v2 + 208) = 0;
  *(_DWORD *)(v2 + 216) = 1;
  *(void *)(v2 + 232) = 0;
  *(void *)(v2 + 240) = 0;
  *(void *)(v2 + 224) = 0;
  *(_DWORD *)(v2 + 248) = 0;
  uint64_t v5 = (void *)(v2 + 256);
  uint64_t v6 = (void *)(v2 + 320);
  *(_OWORD *)(v2 + 256) = 0u;
  *(_OWORD *)(v2 + 272) = 0u;
  *(_OWORD *)(v2 + 288) = 0u;
  *(_OWORD *)(v2 + 304) = 0u;
  *(_OWORD *)(v2 + 320) = 0u;
  *(_DWORD *)(v2 + 336) = 1;
  unint64_t v7 = (void *)(v2 + 368);
  *(_OWORD *)(v2 + 344) = 0u;
  *(_OWORD *)(v2 + 360) = 0u;
  *(void *)(v2 + 376) = 0;
  *(_DWORD *)(v2 + 384) = 1;
  *(_OWORD *)(v2 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0u;
  *(_OWORD *)(v2 + 408) = 0u;
  *(_OWORD *)(v2 + 417) = 0u;
  uint64_t v10 = (_anonymous_namespace_ *)re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity(v6, 0);
  *((_DWORD *)this + 84) += 2;
  *((void *)this + 45) = 0;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity(v7, 0);
  *((_DWORD *)this + 96) += 2;
  *((void *)this + 51) = 0;
  *((void *)this + 52) = this;
  *((void *)this + 53) = v3;
  *((unsigned char *)this + 432) = 1;
  LOWORD(v12) = 257;
  HIDWORD(v12) = 1023969417;
  char v13 = 0;
  re::ecs2::System::setTaskOptions(this, &v12);
  *(_OWORD *)((char *)this + 472) = 0u;
  *(_OWORD *)((char *)this + 488) = 0u;
  *(_OWORD *)((char *)this + 440) = 0u;
  *(_OWORD *)((char *)this + 456) = 0u;
  return this;
}

uint64_t *re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::AREnvironmentProbeComponent>,4ul>::init(uint64_t a1, uint64_t a2, unint64_t a3)
{
  *(void *)a1 = a2;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)a1, a3);
  *(_DWORD *)(a1 + 16) += 2;
  *(void *)(a1 + 40) = 0;
  uint64_t result = re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::AREnvironmentProbeComponent>,4ul>::setBucketsCapacity((uint64_t *)a1, a3);
  ++*(_DWORD *)(a1 + 48);
  return result;
}

uint64_t *re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::AREnvironmentProbeComponent>,4ul>::setBucketsCapacity(uint64_t *result, unint64_t a2)
{
  uint64_t v3 = result;
  if (*result)
  {
    if (result[5] < 4 * a2)
    {
      while (1)
      {
        unint64_t v4 = v3[1];
        if (v4 <= a2) {
          break;
        }
        uint64_t result = (uint64_t *)re::BucketArray<re::CollisionCastHit,10ul>::freeElementBucket(v3);
      }
      while (v4 < a2)
      {
        uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)*v3 + 32))(*v3, 448, 0);
        uint64_t result = (uint64_t *)re::DynamicOverflowArray<RESubscriptionHandle *,2ul>::add((uint64_t)v3, &v5);
        unint64_t v4 = v3[1];
      }
    }
  }
  else
  {
  }
  return result;
}

re::ecs2::CameraViewDescriptorsSystem *re::ecs2::CameraViewDescriptorsSystem::CameraViewDescriptorsSystem(re::ecs2::CameraViewDescriptorsSystem *this)
{
  re::ecs2::System::System((uint64_t)this, 1, 1);
  *(void *)(v2 + 152) = 0;
  *(_OWORD *)(v2 + 136) = 0u;
  *(_OWORD *)(v2 + 120) = 0u;
  *(_OWORD *)(v2 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v2 + 160) = 0;
  uint64_t v3 = v2 + 160;
  *(void *)uint64_t v2 = &unk_26E6FD5C0;
  unint64_t v4 = (re::ecs2::CameraViewDescriptorsComponentStateImpl *)(v2 + 400);
  *(void *)(v2 + 168) = 0;
  *(_DWORD *)(v2 + 176) = 1;
  *(void *)(v2 + 192) = 0;
  *(void *)(v2 + 200) = 0;
  *(void *)(v2 + 184) = 0;
  *(_DWORD *)(v2 + 208) = 0;
  *(_OWORD *)(v2 + 232) = 0u;
  *(_OWORD *)(v2 + 248) = 0u;
  *(_OWORD *)(v2 + 264) = 0u;
  *(_OWORD *)(v2 + 280) = 0u;
  uint64_t v5 = (void *)(v2 + 280);
  *(_OWORD *)(v2 + 216) = 0u;
  uint64_t v6 = (void *)(v2 + 216);
  *(_DWORD *)(v2 + 296) = 1;
  unint64_t v7 = (void *)(v2 + 328);
  *(void *)(v2 + 336) = 0;
  *(_OWORD *)(v2 + 304) = 0u;
  *(_OWORD *)(v2 + 320) = 0u;
  *(_DWORD *)(v2 + 344) = 1;
  *(_OWORD *)(v2 + 352) = 0u;
  *(_OWORD *)(v2 + 368) = 0u;
  *(_OWORD *)(v2 + 377) = 0u;
  uint64_t v10 = (_anonymous_namespace_ *)re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity(v5, 0);
  *((_DWORD *)this + 74) += 2;
  *((void *)this + 40) = 0;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity(v7, 0);
  *((_DWORD *)this + 86) += 2;
  *((void *)this + 46) = 0;
  *((void *)this + 47) = this;
  *((void *)this + 48) = v4;
  *((unsigned char *)this + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  re::ecs2::CameraViewDescriptorsComponentStateImpl::CameraViewDescriptorsComponentStateImpl(v4, this);
  return this;
}

uint64_t re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::CameraViewDescriptorsComponent>,4ul>::init(uint64_t a1, uint64_t a2, unint64_t a3)
{
  *(void *)a1 = a2;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)a1, a3);
  *(_DWORD *)(a1 + 16) += 2;
  *(void *)(a1 + 40) = 0;
  uint64_t result = re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::CameraViewDescriptorsComponent>,4ul>::setBucketsCapacity(a1, a3);
  ++*(_DWORD *)(a1 + 48);
  return result;
}

uint64_t *re::BucketArray<re::ecs2::BasicComponentStateSceneData<re::ecs2::CameraViewDescriptorsComponent>,4ul>::setBucketsCapacity(uint64_t *result, unint64_t a2)
{
  uint64_t v3 = result;
  if (*result)
  {
    if (result[5] < 4 * a2)
    {
      while (1)
      {
        unint64_t v4 = v3[1];
        if (v4 <= a2) {
          break;
        }
        uint64_t result = (uint64_t *)re::BucketArray<re::CollisionCastHit,10ul>::freeElementBucket(v3);
      }
      while (v4 < a2)
      {
        uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)*v3 + 32))(*v3, 448, 0);
        uint64_t result = (uint64_t *)re::DynamicOverflowArray<RESubscriptionHandle *,2ul>::add((uint64_t)v3, &v5);
        unint64_t v4 = v3[1];
      }
    }
  }
  else
  {
  }
  return result;
}

uint64_t re::ecs2::RenderPassGroupService::enableRenderPassGroups(re::ecs2::RenderPassGroupService *this)
{
  uint64_t v1 = (unsigned __int8 *)&unk_26879F000;
  {
    uint64_t v1 = (unsigned char *)&unk_26879F000;
    if (v3)
    {
      re::Defaults::BOOLValue((re::Defaults *)"enableRenderPassGroups", v4, v6);
      char v5 = v6[1];
      if (!v6[0]) {
        char v5 = 1;
      }
      re::ecs2::RenderPassGroupService::enableRenderPassGroups(void)::enable = v5;
      uint64_t v1 = (unsigned char *)&unk_26879F000;
    }
  }
  return v1[1472];
}

void *re::ecs2::allocInfo_RenderPassGroupService(re::ecs2 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&_MergedGlobals_164, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&_MergedGlobals_164))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF81E68, "RenderPassGroupService");
    __cxa_guard_release(&_MergedGlobals_164);
  }
  return &unk_26AF81E68;
}

void re::ecs2::initInfo_RenderPassGroupService(re::ecs2 *this, re::IntrospectionBase *a2)
{
  v5[0] = 0x57BC0B05EDD6AF7ALL;
  v5[1] = "RenderPassGroupService";
  re::StringID::destroyString((re::StringID *)v5);
  *((_OWORD *)this + 2) = v6;
  *((void *)this + 2) = 0x800000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 0;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 8) = &re::ecs2::initInfo_RenderPassGroupService(re::IntrospectionBase *)::structureAttributes;
  re::IntrospectionRegistry::add(this, v3);
  long long v4 = v6;
}

uint64_t re::ecs2::introspect_RenderPassGroupService(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"RenderPassGroupService", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_RenderPassGroupService, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_RenderPassGroupService, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::RenderPassGroupService>, this);
}

void *re::ecs2::allocInfo_UnlitMaterialParametersComponent(re::ecs2 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&_MergedGlobals_165, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&_MergedGlobals_165))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF81F28, "UnlitMaterialParametersComponent");
    __cxa_guard_release(&_MergedGlobals_165);
  }
  return &unk_26AF81F28;
}

void re::ecs2::initInfo_UnlitMaterialParametersComponent(re::ecs2 *this, re::IntrospectionBase *a2)
{
  v32[0] = 0xB3F9356AA8DB1ADCLL;
  v32[1] = "UnlitMaterialParametersComponent";
  re::StringID::destroyString((re::StringID *)v32);
  *((_OWORD *)this + 2) = v33;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF81EE8, memory_order_acquire) & 1) == 0)
  {
    long long v4 = (re *)__cxa_guard_acquire(&qword_26AF81EE8);
    if (v4)
    {
      char v5 = re::introspectionAllocator(v4);
      uint64_t v6 = re::ecs2::introspect_Component((re::IntrospectionBase **)1);
      uint64_t v7 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v5 + 32))(v5, 72, 8);
      *(_DWORD *)uint64_t v7 = 1;
      *(void *)(v7 + 8) = "Component";
      *(void *)(v7 + 16) = v6;
      *(void *)(v7 + 24) = 0;
      *(void *)(v7 + 32) = 0;
      *(_DWORD *)(v7 + 40) = 3;
      *(void *)(v7 + 48) = 0;
      *(void *)(v7 + 56) = 0;
      *(_DWORD *)(v7 + 64) = 0;
      qword_26AF81EF0 = v7;
      unint64_t v8 = re::introspectionAllocator((re *)v7);
      uint64_t v9 = re::introspect_ColorGamut4F((re::IntrospectionBase **)1);
      uint64_t v10 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v8 + 32))(v8, 72, 8);
      *(_DWORD *)uint64_t v10 = 1;
      *(void *)(v10 + 8) = "colorTint";
      *(void *)(v10 + 16) = v9;
      *(void *)(v10 + 24) = 0;
      *(void *)(v10 + 32) = 0x1C00000001;
      *(_DWORD *)(v10 + 40) = 0;
      *(void *)(v10 + 48) = 0;
      *(void *)(v10 + 56) = 0;
      *(_DWORD *)(v10 + 64) = 0;
      qword_26AF81EF8 = v10;
      uint64_t v11 = re::introspectionAllocator((re *)v10);
      char v13 = re::introspect_AssetHandle((re *)1, v12);
      uint64_t v14 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v11 + 32))(v11, 72, 8);
      *(_DWORD *)uint64_t v14 = 1;
      *(void *)(v14 + 8) = "texture";
      *(void *)(v14 + 16) = v13;
      *(void *)(v14 + 24) = 0;
      *(void *)(v14 + 32) = 0x3000000002;
      *(_DWORD *)(v14 + 40) = 0;
      *(void *)(v14 + 48) = 0;
      *(void *)(v14 + 56) = 0;
      *(_DWORD *)(v14 + 64) = 0;
      qword_26AF81F00 = v14;
      unint64_t v15 = re::introspectionAllocator((re *)v14);
      float v17 = re::introspect_float((re *)1, v16);
      uint64_t v18 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v15 + 32))(v15, 72, 8);
      *(_DWORD *)uint64_t v18 = 1;
      *(void *)(v18 + 8) = "opacityThreshold";
      *(void *)(v18 + 16) = v17;
      *(void *)(v18 + 24) = 0;
      *(void *)(v18 + 32) = 0x4800000003;
      *(_DWORD *)(v18 + 40) = 0;
      *(void *)(v18 + 48) = 0;
      *(void *)(v18 + 56) = 0;
      *(_DWORD *)(v18 + 64) = 0;
      qword_26AF81F08 = v18;
      unint64_t v19 = re::introspectionAllocator((re *)v18);
      unint64_t v21 = re::introspect_BlendingType((re *)1, v20);
      uint64_t v22 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v19 + 32))(v19, 72, 8);
      *(_DWORD *)uint64_t v22 = 1;
      *(void *)(v22 + 8) = "blending";
      *(void *)(v22 + 16) = v21;
      *(void *)(v22 + 24) = 0;
      *(void *)(v22 + 32) = 0x4C00000004;
      *(_DWORD *)(v22 + 40) = 0;
      *(void *)(v22 + 48) = 0;
      *(void *)(v22 + 56) = 0;
      *(_DWORD *)(v22 + 64) = 0;
      qword_26AF81F10 = v22;
      BOOL v23 = re::introspectionAllocator((re *)v22);
      uint64_t v25 = re::introspect_BOOL((re *)1, v24);
      uint64_t v26 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v23 + 32))(v23, 72, 8);
      *(_DWORD *)uint64_t v26 = 1;
      *(void *)(v26 + 8) = "disableTonemap";
      *(void *)(v26 + 16) = v25;
      *(void *)(v26 + 24) = 0;
      *(void *)(v26 + 32) = 0x4D00000005;
      *(_DWORD *)(v26 + 40) = 0;
      *(void *)(v26 + 48) = 0;
      *(void *)(v26 + 56) = 0;
      *(_DWORD *)(v26 + 64) = 0;
      qword_26AF81F18 = v26;
      uint64_t v27 = re::introspectionAllocator((re *)v26);
      uint64_t v29 = re::introspect_AssetHandle((re *)1, v28);
      uint64_t v30 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v27 + 32))(v27, 72, 8);
      *(_DWORD *)uint64_t v30 = 1;
      *(void *)(v30 + 8) = "materialAsset";
      *(void *)(v30 + 16) = v29;
      *(void *)(v30 + 24) = 0;
      *(void *)(v30 + 32) = 0x5000000006;
      *(_DWORD *)(v30 + 40) = 0;
      *(void *)(v30 + 48) = 0;
      *(void *)(v30 + 56) = 0;
      *(_DWORD *)(v30 + 64) = 0;
      qword_26AF81F20 = v30;
      __cxa_guard_release(&qword_26AF81EE8);
    }
  }
  *((void *)this + 2) = 0x6800000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 7;
  *((void *)this + 8) = &qword_26AF81EF0;
  *((void *)this + 9) = re::internal::defaultConstruct<re::ecs2::UnlitMaterialParametersComponent>;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 10) = re::internal::defaultDestruct<re::ecs2::UnlitMaterialParametersComponent>;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::ecs2::UnlitMaterialParametersComponent>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::ecs2::UnlitMaterialParametersComponent>;
  re::IntrospectionRegistry::add(this, v3);
  long long v31 = v33;
}

__n128 re::internal::defaultConstruct<re::ecs2::UnlitMaterialParametersComponent>(int a1, int a2, ArcSharedObject *this)
{
  *((void *)this + 12) = 0;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *(_OWORD *)this = 0u;
  *((_OWORD *)this + 1) = 0u;
  ArcSharedObject::ArcSharedObject(this, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E5C38;
  __asm { FMOV            V0.4S, #1.0 }
  *(__n128 *)(v3 + 28) = result;
  *(unsigned char *)(v3 + 44) = 0;
  *(void *)(v3 + 88) = 0;
  *(void *)(v3 + 96) = 0;
  *(void *)(v3 + 80) = 0;
  *(void *)(v3 + 56) = 0;
  *(void *)(v3 + 64) = 0;
  *(void *)(v3 + 48) = 0;
  *(void *)(v3 + 70) = 0;
  return result;
}

uint64_t re::internal::defaultDestruct<re::ecs2::UnlitMaterialParametersComponent>(uint64_t a1, uint64_t a2, uint64_t (***a3)(void))
{
  return (**a3)(a3);
}

__n128 re::internal::defaultConstructV2<re::ecs2::UnlitMaterialParametersComponent>(uint64_t a1)
{
  *(void *)(a1 + 96) = 0;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)a1, 0);
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 24) = 0;
  *(void *)uint64_t v1 = &unk_26E6E5C38;
  __asm { FMOV            V0.4S, #1.0 }
  *(__n128 *)(v1 + 28) = result;
  *(unsigned char *)(v1 + 44) = 0;
  *(void *)(v1 + 88) = 0;
  *(void *)(v1 + 96) = 0;
  *(void *)(v1 + 80) = 0;
  *(void *)(v1 + 56) = 0;
  *(void *)(v1 + 64) = 0;
  *(void *)(v1 + 48) = 0;
  *(void *)(v1 + 70) = 0;
  return result;
}

uint64_t re::internal::defaultDestructV2<re::ecs2::UnlitMaterialParametersComponent>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

uint64_t re::ecs2::introspect_UnlitMaterialParametersComponent(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"UnlitMaterialParametersComponent", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_UnlitMaterialParametersComponent, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_UnlitMaterialParametersComponent, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::UnlitMaterialParametersComponent>, this);
}

void re::ecs2::UnlitMaterialParametersComponent::~UnlitMaterialParametersComponent(re::ecs2::UnlitMaterialParametersComponent *this)
{
  *(void *)this = &unk_26E6E5C38;
  uint64_t v2 = (re::ecs2::UnlitMaterialParametersComponent *)((char *)this + 48);
  re::AssetHandle::~AssetHandle((re::ecs2::UnlitMaterialParametersComponent *)((char *)this + 80));
  re::AssetHandle::~AssetHandle(v2);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  re::AssetHandle *v2;
  uint64_t vars8;

  *(void *)this = &unk_26E6E5C38;
  uint64_t v2 = (re::ecs2::UnlitMaterialParametersComponent *)((char *)this + 48);
  re::AssetHandle::~AssetHandle((re::ecs2::UnlitMaterialParametersComponent *)((char *)this + 80));
  re::AssetHandle::~AssetHandle(v2);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::UnlitMaterialParametersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::UnlitMaterialParametersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::UnlitMaterialParametersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::UnlitMaterialParametersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::UnlitMaterialParametersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void *re::ecs2::allocInfo_SpatialSceneClassificationSystem(re::ecs2 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&_MergedGlobals_166, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&_MergedGlobals_166))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF81FA8, "SpatialSceneClassificationSystem");
    __cxa_guard_release(&_MergedGlobals_166);
  }
  return &unk_26AF81FA8;
}

void re::ecs2::initInfo_SpatialSceneClassificationSystem(re::ecs2 *this, re::IntrospectionBase *a2)
{
  v5[0] = 0xCFB7F49288359FBALL;
  v5[1] = "SpatialSceneClassificationSystem";
  re::StringID::destroyString((re::StringID *)v5);
  *((_OWORD *)this + 2) = v6;
  *((void *)this + 2) = 0xA000000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 0;
  *((void *)this + 8) = &re::ecs2::initInfo_SpatialSceneClassificationSystem(re::IntrospectionBase *)::structureAttributes;
  *((void *)this + 9) = re::internal::defaultConstruct<re::ecs2::SpatialSceneClassificationSystem>;
  *((void *)this + 10) = re::internal::defaultDestruct<re::ecs2::SpatialSceneClassificationSystem>;
  *((void *)this + 11) = re::internal::defaultRetain<re::ecs2::SpatialSceneClassificationSystem>(void)::{lambda(void *)#1}::__invoke;
  *((void *)this + 12) = re::internal::defaultRelease<re::ecs2::SpatialSceneClassificationSystem>(void)::{lambda(void *)#1}::__invoke;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::ecs2::SpatialSceneClassificationSystem>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::ecs2::SpatialSceneClassificationSystem>;
  re::IntrospectionRegistry::add(this, v3);
  long long v4 = v6;
}

double re::internal::defaultConstruct<re::ecs2::SpatialSceneClassificationSystem>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  re::ecs2::System::System(a3, 1, 1);
  *(void *)uint64_t v3 = &unk_26E6E5CC0;
  *(void *)(v3 + 152) = 0;
  double result = 0.0;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(_OWORD *)(v3 + 120) = 0u;
  *(_OWORD *)(v3 + 132) = 0u;
  return result;
}

void *re::internal::defaultDestruct<re::ecs2::SpatialSceneClassificationSystem>(uint64_t a1, uint64_t a2, void *a3)
{
  re::DynamicArray<unsigned long>::deinit((uint64_t)(a3 + 15));
  *a3 = &unk_26E6DECE0;
  return objc_destructInstance(a3 + 1);
}

double re::internal::defaultConstructV2<re::ecs2::SpatialSceneClassificationSystem>(uint64_t a1)
{
  re::ecs2::System::System(a1, 1, 1);
  *(void *)uint64_t v1 = &unk_26E6E5CC0;
  *(void *)(v1 + 152) = 0;
  double result = 0.0;
  *(_OWORD *)(v1 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(_OWORD *)(v1 + 120) = 0u;
  *(_OWORD *)(v1 + 132) = 0u;
  return result;
}

void *re::internal::defaultDestructV2<re::ecs2::SpatialSceneClassificationSystem>(void *a1)
{
  re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 15));
  *a1 = &unk_26E6DECE0;
  return objc_destructInstance(a1 + 1);
}

uint64_t re::ecs2::introspect_SpatialSceneClassificationSystem(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"SpatialSceneClassificationSystem", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_SpatialSceneClassificationSystem, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_SpatialSceneClassificationSystem, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::SpatialSceneClassificationSystem>, this);
}

uint64_t re::ecs2::SpatialSceneClassificationSystem::willAddSystemToECSService(re::ecs2::SpatialSceneClassificationSystem *this)
{
  uint64_t result = *((void *)this + 5);
  if (result)
  {
    uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t result = re::ServiceLocator::serviceOrNull<re::AudioSceneService>(v3);
    *((void *)this + 13) = result;
  }
  return result;
}

void *re::ecs2::SpatialSceneClassificationSystem::willRemoveSystemFromECSService(re::ecs2::SpatialSceneClassificationSystem *this)
{
  uint64_t v2 = *((void *)this + 13);
  uint64_t result = (void *)((char *)this + 104);
  if (v2)
  {
    *uint64_t result = 0;
    result[1] = 0;
  }
  return result;
}

uint64_t re::ecs2::SpatialSceneClassificationSystem::willAddSceneToECSService(uint64_t this, re::ecs2::Scene *a2)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  long long v6 = a2;
  if (a2)
  {
    uint64_t v2 = this;
    uint64_t v3 = re::ecs2::SceneComponentTable::get((re::ecs2::Scene *)((char *)a2 + 200), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::SpatialSceneClassificationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    uint64_t v7 = v2;
    unint64_t v8 = re::ecs2::SpatialSceneClassificationSystem::activateComponents;
    uint64_t v9 = 0;
    uint64_t v10 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::createSubscription<re::ecs2::SpatialSceneClassificationSystem>(re::ecs2::SpatialSceneClassificationSystem *,REEventHandlerResult (re::ecs2::SpatialSceneClassificationSystem::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>&&)#1}::__invoke;
    re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription((_DWORD *)(v3 + 216), (uint64_t)&v7);
    uint64_t v7 = v2;
    unint64_t v8 = re::ecs2::SpatialSceneClassificationSystem::deactivateComponents;
    uint64_t v9 = 0;
    uint64_t v10 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::createSubscription<re::ecs2::SpatialSceneClassificationSystem>(re::ecs2::SpatialSceneClassificationSystem *,REEventHandlerResult (re::ecs2::SpatialSceneClassificationSystem::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>&&)#1}::__invoke;
    re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription((_DWORD *)(v3 + 304), (uint64_t)&v7);
    re::DynamicArray<re::TransitionCondition *>::add((void *)(v2 + 120), &v6);
    this = *(void *)(v2 + 104);
    if (this)
    {
      this = (*(uint64_t (**)(uint64_t, re::ecs2::Scene *))(*(void *)this + 16))(this, v6);
      if (this)
      {
        uint64_t v4 = *(void *)(*((void *)v6 + 13) + 272) >> 1;
        v5[0] = MEMORY[0x263EF8330];
        v5[1] = 3221225472;
        void v5[2] = ___ZN2re4ecs232SpatialSceneClassificationSystem24willAddSceneToECSServiceEPNS0_5SceneE_block_invoke;
        v5[3] = &__block_descriptor_40_e5_v8__0l;
        v5[4] = v6;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void *))(*(void *)this + 32))(this, 771, v4, v5);
      }
    }
  }
  return this;
}

void ___ZN2re4ecs232SpatialSceneClassificationSystem24willAddSceneToECSServiceEPNS0_5SceneE_block_invoke(uint64_t a1)
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  uint64_t v2 = re::ecs2::SceneComponentTable::get((re::ecs2::SceneComponentTable *)(*(void *)(a1 + 32) + 200), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::SpatialSceneClassificationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
  uint64_t v3 = *(void *)(v2 + 24);
  if (v3)
  {
    uint64_t v4 = *(uint64_t **)(v2 + 40);
    uint64_t v5 = 8 * v3;
    do
    {
      uint64_t v6 = *v4;
      uint64_t v7 = *re::audioLogObjects((re *)v2);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v9 = *(void *)(v6 + 16);
        uint64_t v10 = v7;
        uint64_t v11 = *(void *)(v9 + 280);
        uint64_t v12 = *(void *)(*(void *)(v6 + 16) + 296);
        uint64_t v13 = *(void *)(*(void *)(*(void *)(a1 + 32) + 104) + 280);
        *(_DWORD *)int32x4_t buf = 134218754;
        uint64_t v20 = v6;
        __int16 v21 = 2080;
        uint64_t v22 = v11;
        __int16 v23 = 2048;
        uint64_t v24 = v12;
        __int16 v25 = 2080;
        uint64_t v26 = v13;
        _os_log_debug_impl(&dword_233120000, v10, OS_LOG_TYPE_DEBUG, "SpatialSceneClassificationSystem: service reset callback, resetting 'sentClassificationToAudioService' for component(%p) entity(%s, %llu) scene(%s)", buf, 0x2Au);
      }
      *(unsigned char *)(v6 + 42) = 0;
      uint64_t v2 = _os_feature_enabled_impl();
      if (v2)
      {
        unint64_t v8 = *re::audioLogObjects((re *)v2);
        uint64_t v2 = os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG);
        if (v2)
        {
          uint64_t v14 = *(void *)(v6 + 16);
          unint64_t v15 = v8;
          uint64_t v16 = *(void *)(v14 + 280);
          uint64_t v17 = *(void *)(*(void *)(v6 + 16) + 296);
          uint64_t v18 = *(void *)(*(void *)(*(void *)(a1 + 32) + 104) + 280);
          *(_DWORD *)int32x4_t buf = 134218754;
          uint64_t v20 = v6;
          __int16 v21 = 2080;
          uint64_t v22 = v16;
          __int16 v23 = 2048;
          uint64_t v24 = v17;
          __int16 v25 = 2080;
          uint64_t v26 = v18;
          _os_log_debug_impl(&dword_233120000, v15, OS_LOG_TYPE_DEBUG, "SpatialSceneClassificationSystem: service reset callback, resetting 'sentRoomIdentifierToAudioService' for component(%p) entity(%s, %llu) scene(%s)", buf, 0x2Au);
        }
        *(unsigned char *)(v6 + 43) = 0;
      }
      ++v4;
      v5 -= 8;
    }
    while (v5);
  }
}

uint64_t re::ecs2::SpatialSceneClassificationSystem::willRemoveSceneFromECSService(uint64_t this, re::ecs2::Scene *a2)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  uint64_t v4 = a2;
  if (a2)
  {
    uint64_t v2 = this;
    uint64_t v3 = re::ecs2::SceneComponentTable::get((re::ecs2::Scene *)((char *)a2 + 200), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::SpatialSceneClassificationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    *(void *)&long long v5 = v2;
    *((void *)&v5 + 1) = re::ecs2::SpatialSceneClassificationSystem::activateComponents;
    uint64_t v6 = 0;
    uint64_t v7 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::createSubscription<re::ecs2::SpatialSceneClassificationSystem>(re::ecs2::SpatialSceneClassificationSystem *,REEventHandlerResult (re::ecs2::SpatialSceneClassificationSystem::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(v3 + 216, &v5);
    *(void *)&long long v5 = v2;
    *((void *)&v5 + 1) = re::ecs2::SpatialSceneClassificationSystem::deactivateComponents;
    uint64_t v6 = 0;
    uint64_t v7 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::createSubscription<re::ecs2::SpatialSceneClassificationSystem>(re::ecs2::SpatialSceneClassificationSystem *,REEventHandlerResult (re::ecs2::SpatialSceneClassificationSystem::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(v3 + 304, &v5);
    re::DynamicArray<unsigned long long>::remove(v2 + 120, &v4);
    this = *(void *)(v2 + 104);
    if (this)
    {
      this = (*(uint64_t (**)(uint64_t, re::ecs2::Scene *))(*(void *)this + 16))(this, v4);
      if (this) {
        return (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)this + 40))(this, 771, *(void *)(*((void *)v4 + 13) + 272) >> 1);
      }
    }
  }
  return this;
}

uint64_t re::ecs2::SpatialSceneClassificationSystem::activateComponents(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  if (a4)
  {
    uint64_t v5 = 8 * a4;
    do
    {
      uint64_t v6 = *a3;
      *(unsigned char *)(*a3 + 42) = 0;
      if (_os_feature_enabled_impl()) {
        *(unsigned char *)(v6 + 43) = 0;
      }
      ++a3;
      v5 -= 8;
    }
    while (v5);
  }
  return 0;
}

uint64_t re::ecs2::SpatialSceneClassificationSystem::deactivateComponents(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  if (a4)
  {
    uint64_t v5 = 8 * a4;
    do
    {
      uint64_t v6 = *a3;
      *(unsigned char *)(*a3 + 42) = 0;
      if (_os_feature_enabled_impl()) {
        *(unsigned char *)(v6 + 43) = 0;
      }
      ++a3;
      v5 -= 8;
    }
    while (v5);
  }
  return 0;
}

uint64_t re::ecs2::SpatialSceneClassificationSystem::update(uint64_t result, uint64_t a2)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v20 = a2;
  if (a2)
  {
    uint64_t v2 = result;
    if (*(void *)(result + 104))
    {
      uint64_t v3 = (re::ecs2::SceneComponentTable *)(a2 + 200);
      uint64_t v4 = re::ecs2::SceneComponentTable::get((re::ecs2::SceneComponentTable *)(a2 + 200), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::SpatialSceneClassificationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
      if (v4) {
        unint64_t v5 = *(void *)(v4 + 24);
      }
      else {
        unint64_t v5 = 0;
      }
      uint64_t v6 = re::ProfilerTimeGuard<(re::ProfilerStatistic)20>::ProfilerTimeGuard(v19);
      isStatisticCollectionEnabled = (re *)re::ProfilerConfig::isStatisticCollectionEnabled((re::ProfilerConfig *)v6);
      if (isStatisticCollectionEnabled)
      {
        uint64_t v8 = re::profilerThreadContext(isStatisticCollectionEnabled);
        uint64_t v9 = *(int64x2_t **)(v8 + 152);
        if (v9)
        {
          unint64_t v10 = v9[596].u64[0];
          if (v10 >= v5) {
            unint64_t v10 = v5;
          }
          v9[596].i64[0] = v10;
          unint64_t v11 = v9[596].u64[1];
          if (v11 <= v5) {
            unint64_t v11 = v5;
          }
          v9[596].i64[1] = v11;
          int64x2_t v12 = vdupq_n_s64(1uLL);
          v12.i64[0] = v5;
          v9[597] = vaddq_s64(v9[597], v12);
          *(unsigned char *)(v8 + 184) = 0;
        }
      }
      re::internal::AriadneSignpostScopeGuard::AriadneSignpostScopeGuard((re::internal::AriadneSignpostScopeGuard *)v18, 3129, v2);
      v23[0] = &unk_26E6E5D48;
      v23[1] = &v20;
      v23[2] = v2;
      uint64_t v24 = v23;
      uint64_t v13 = re::ecs2::SceneComponentTable::get(v3, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::SpatialSceneClassificationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
      uint64_t v14 = *(void *)(v13 + 24);
      if (v14)
      {
        unint64_t v15 = *(uint64_t **)(v13 + 40);
        uint64_t v16 = 8 * v14;
        do
        {
          uint64_t v17 = *(void *)(*v15 + 16);
          if (*(unsigned char *)(v17 + 288))
          {
            uint64_t v21 = *v15;
            uint64_t v22 = v17;
            if (!v24) {
              std::__throw_bad_function_call[abi:nn180100]();
            }
            (*(void (**)(void *, uint64_t *, uint64_t *))(*v24 + 48))(v24, &v22, &v21);
          }
          ++v15;
          v16 -= 8;
        }
        while (v16);
      }
      if (v24 == v23)
      {
        (*(void (**)(void *))(v23[0] + 32))(v23);
      }
      else if (v24)
      {
        (*(void (**)(void))(*v24 + 40))();
      }
      re::internal::AriadneSignpostScopeGuard::~AriadneSignpostScopeGuard((re::internal::AriadneSignpostScopeGuard *)v18);
      return re::ProfilerTimeGuard<(re::ProfilerStatistic)120>::end((uint64_t)v19);
    }
  }
  return result;
}

void re::ecs2::SpatialSceneClassificationSystem::~SpatialSceneClassificationSystem(re::ecs2::SpatialSceneClassificationSystem *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::SpatialSceneClassificationSystem::typeInfo(re::ecs2::SpatialSceneClassificationSystem *this)
{
  return re::internal::getOrCreateInfo((re::internal *)"SpatialSceneClassificationSystem", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_SpatialSceneClassificationSystem, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_SpatialSceneClassificationSystem, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::SpatialSceneClassificationSystem>, 0);
}

id re::internal::defaultRetain<re::ecs2::SpatialSceneClassificationSystem>(void)::{lambda(void *)#1}::__invoke(uint64_t a1)
{
  return (id)(a1 + 8);
}

void re::internal::defaultRelease<re::ecs2::SpatialSceneClassificationSystem>(void)::{lambda(void *)#1}::__invoke(uint64_t a1)
{
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::createSubscription<re::ecs2::SpatialSceneClassificationSystem>(re::ecs2::SpatialSceneClassificationSystem *,REEventHandlerResult (re::ecs2::SpatialSceneClassificationSystem::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    uint64_t v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

uint64_t re::ProfilerTimeGuard<(re::ProfilerStatistic)120>::end(uint64_t result)
{
  if (*(void *)result && *(void *)(*(void *)result + 152))
  {
    uint64_t v1 = (void *)result;
    uint64_t result = mach_absolute_time();
    uint64_t v2 = *v1;
    uint64_t v3 = *(int64x2_t **)(*v1 + 152);
    if (v3)
    {
      uint64_t v4 = result - v1[1];
      uint64_t v5 = v3[484].u64[0];
      if (v5 >= v4) {
        uint64_t v5 = result - v1[1];
      }
      v3[484].i64[0] = v5;
      unint64_t v6 = v3[484].u64[1];
      if (v6 <= v4) {
        unint64_t v6 = v4;
      }
      v3[484].i64[1] = v6;
      int64x2_t v7 = vdupq_n_s64(1uLL);
      v7.i64[0] = v4;
      v3[485] = vaddq_s64(v3[485], v7);
      *(unsigned char *)(v2 + 184) = 0;
    }
    *uint64_t v1 = 0;
  }
  return result;
}

void std::__function::__func<re::ecs2::SpatialSceneClassificationSystem::update(re::ecs2::Scene *,re::ecs2::System::UpdateContext)::$_0,std::allocator<re::ecs2::SpatialSceneClassificationSystem::update(re::ecs2::Scene *,re::ecs2::System::UpdateContext)::$_0>,void ()(re::ecs2::Entity *,re::ecs2::SpatialSceneClassificationComponent *)>::~__func()
{
}

__n128 std::__function::__func<re::ecs2::SpatialSceneClassificationSystem::update(re::ecs2::Scene *,re::ecs2::System::UpdateContext)::$_0,std::allocator<re::ecs2::SpatialSceneClassificationSystem::update(re::ecs2::Scene *,re::ecs2::System::UpdateContext)::$_0>,void ()(re::ecs2::Entity *,re::ecs2::SpatialSceneClassificationComponent *)>::__clone(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x18uLL);
  *(void *)uint64_t v2 = &unk_26E6E5D48;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 std::__function::__func<re::ecs2::SpatialSceneClassificationSystem::update(re::ecs2::Scene *,re::ecs2::System::UpdateContext)::$_0,std::allocator<re::ecs2::SpatialSceneClassificationSystem::update(re::ecs2::Scene *,re::ecs2::System::UpdateContext)::$_0>,void ()(re::ecs2::Entity *,re::ecs2::SpatialSceneClassificationComponent *)>::__clone(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26E6E5D48;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

re *std::__function::__func<re::ecs2::SpatialSceneClassificationSystem::update(re::ecs2::Scene *,re::ecs2::System::UpdateContext)::$_0,std::allocator<re::ecs2::SpatialSceneClassificationSystem::update(re::ecs2::Scene *,re::ecs2::System::UpdateContext)::$_0>,void ()(re::ecs2::Entity *,re::ecs2::SpatialSceneClassificationComponent *)>::operator()(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!*(unsigned char *)(*a3 + 42))
  {
    unint64_t v6 = *re::audioLogObjects((re *)a1);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v11 = *(void *)(v4 + 16);
      int64x2_t v12 = v6;
      uint64_t v13 = *(void *)(v11 + 280);
      uint64_t v14 = *(void *)(*(void *)(v4 + 16) + 296);
      uint64_t v15 = *(void *)(*(void *)(**(void **)(a1 + 8) + 104) + 280);
      *(_DWORD *)uint64_t v21 = 134218754;
      *(void *)&uint64_t v21[4] = v4;
      *(_WORD *)&v21[12] = 2080;
      *(void *)&v21[14] = v13;
      __int16 v22 = 2048;
      uint64_t v23 = v14;
      __int16 v24 = 2080;
      uint64_t v25 = v15;
      _os_log_debug_impl(&dword_233120000, v12, OS_LOG_TYPE_DEBUG, "SpatialSceneClassificationSystem: updating target Spatial Scene Classification for component(%p) entity(%s, %llu) scene(%s)", v21, 0x2Au);
    }
    uint64_t v7 = *(void *)(*(uint64_t (**)(void, void))(**(void **)(v5 + 104) + 16))(*(void *)(v5 + 104), **(void **)(a1 + 8));
    (*(void (**)(void))(v7 + 336))();
    *(unsigned char *)(v4 + 42) = 1;
  }
  __n128 result = (re *)_os_feature_enabled_impl();
  if (result && !*(unsigned char *)(v4 + 43))
  {
    uint64_t v9 = *re::audioLogObjects(result);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v16 = *(void *)(v4 + 16);
      uint64_t v17 = v9;
      uint64_t v18 = *(void *)(v16 + 280);
      uint64_t v19 = *(void *)(*(void *)(v4 + 16) + 296);
      uint64_t v20 = *(void *)(*(void *)(**(void **)(a1 + 8) + 104) + 280);
      *(_DWORD *)uint64_t v21 = 134218754;
      *(void *)&uint64_t v21[4] = v4;
      *(_WORD *)&v21[12] = 2080;
      *(void *)&v21[14] = v18;
      __int16 v22 = 2048;
      uint64_t v23 = v19;
      __int16 v24 = 2080;
      uint64_t v25 = v20;
      _os_log_debug_impl(&dword_233120000, v17, OS_LOG_TYPE_DEBUG, "SpatialSceneClassificationSystem: updating target Spatial Scene Room Identifier for component(%p) entity(%s, %llu) scene(%s)", v21, 0x2Au);
    }
    *(_OWORD *)uint64_t v21 = *(_OWORD *)(v4 + 26);
    uint64_t v10 = *(void *)(*(uint64_t (**)(void, void))(**(void **)(v5 + 104) + 16))(*(void *)(v5 + 104), **(void **)(a1 + 8));
    __n128 result = (re *)(*(uint64_t (**)(void))(v10 + 352))();
    *(unsigned char *)(v4 + 43) = 1;
  }
  return result;
}

uint64_t std::__function::__func<re::ecs2::SpatialSceneClassificationSystem::update(re::ecs2::Scene *,re::ecs2::System::UpdateContext)::$_0,std::allocator<re::ecs2::SpatialSceneClassificationSystem::update(re::ecs2::Scene *,re::ecs2::System::UpdateContext)::$_0>,void ()(re::ecs2::Entity *,re::ecs2::SpatialSceneClassificationComponent *)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<re::ecs2::SpatialSceneClassificationSystem::update(re::ecs2::Scene *,re::ecs2::System::UpdateContext)::$_0,std::allocator<re::ecs2::SpatialSceneClassificationSystem::update(re::ecs2::Scene *,re::ecs2::System::UpdateContext)::$_0>,void ()(re::ecs2::Entity *,re::ecs2::SpatialSceneClassificationComponent *)>::target_type()
{
}

re::ecs2::VisualProxyScopeManagerStateTracking *re::ecs2::VisualProxyScopeManagerStateTracking::VisualProxyScopeManagerStateTracking(re::ecs2::VisualProxyScopeManagerStateTracking *this)
{
  v5[3] = *MEMORY[0x263EF8340];
  uint64_t v2 = (void *)re::ecs2::HierarchyStateTracking<re::ecs2::EntityVisualProxyScopeData>::HierarchyStateTracking((uint64_t)this);
  *uint64_t v2 = &unk_26E6E5DD8;
  v2[32] = 0;
  v2[33] = 0;
  v2[31] = 0;
  v5[0] = re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
  v5[1] = re::ecs2::ComponentImpl<re::ecs2::VisualProxyFilterComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
  void v5[2] = re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
  v4[0] = v5;
  v4[1] = 3;
  re::FixedArray<re::ecs2::ComponentTypeBase const*>::operator=((_anonymous_namespace_ *)(v2 + 31), (uint64_t)v4);
  return this;
}

uint64_t re::ecs2::HierarchyStateTracking<re::ecs2::EntityVisualProxyScopeData>::HierarchyStateTracking(uint64_t a1)
{
  *(void *)a1 = &unk_26E6C8E78;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_DWORD *)(a1 + 40) = 0;
  *(void *)(a1 + 44) = 0x7FFFFFFFLL;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_DWORD *)(a1 + 88) = 0;
  *(_OWORD *)(a1 + 56) = 0u;
  uint64_t v2 = a1 + 56;
  *(void *)(a1 + 92) = 0x7FFFFFFFLL;
  *(_OWORD *)(a1 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0u;
  *(_DWORD *)(a1 + 136) = 0;
  *(_OWORD *)(a1 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  uint64_t v3 = a1 + 104;
  *(void *)(a1 + 140) = 0x7FFFFFFFLL;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_DWORD *)(a1 + 184) = 0;
  *(_OWORD *)(a1 + 152) = 0u;
  uint64_t v4 = a1 + 152;
  *(void *)(a1 + 188) = 0x7FFFFFFFLL;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_DWORD *)(a1 + 232) = 0;
  *(_OWORD *)(a1 + 200) = 0u;
  uint64_t v5 = a1 + 200;
  *(void *)(a1 + 236) = 0x7FFFFFFFLL;
  return a1;
}

void re::ecs2::VisualProxyScopeManagerStateTracking::buildPerEntityStateForDirtyEntityHierarchies(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(unsigned int *)(a2 + 32);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (int *)(*(void *)(a2 + 16) + 8);
    while (1)
    {
      int v6 = *v5;
      v5 += 6;
      if (v6 < 0) {
        break;
      }
      if (v3 == ++v4)
      {
        LODWORD(v4) = *(_DWORD *)(a2 + 32);
        break;
      }
    }
  }
  else
  {
    LODWORD(v4) = 0;
  }
  if (v3 != v4)
  {
    uint64_t v7 = v4;
    uint64_t v8 = *(void *)(a2 + 16);
    uint64_t v9 = (void *)(a1 + 56);
    unsigned int v45 = *(_DWORD *)(a2 + 32);
    unsigned int v10 = v45;
    while (1)
    {
      unint64_t v11 = *(void *)(v8 + 24 * v7 + 16);
      if (*v9)
      {
        unint64_t v12 = 0x94D049BB133111EBLL
            * ((0xBF58476D1CE4E5B9 * (v11 ^ (v11 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (v11 ^ (v11 >> 30))) >> 27));
        uint64_t v13 = *(unsigned int *)(*(void *)(a1 + 64) + 4 * ((v12 ^ (v12 >> 31)) % *(unsigned int *)(a1 + 80)));
        if (v13 != 0x7FFFFFFF)
        {
          uint64_t v14 = *(void *)(a1 + 72);
          while (*(void *)(v14 + 32 * v13 + 16) != v11)
          {
            uint64_t v13 = *(_DWORD *)(v14 + 32 * v13 + 8) & 0x7FFFFFFF;
            if (v13 == 0x7FFFFFFF) {
              goto LABEL_14;
            }
          }
          goto LABEL_62;
        }
      }
LABEL_14:
      unint64_t v15 = *(void *)(v11 + 24);
      if (!v15 || (*(unsigned char *)(v15 + 288) & 0x80) != 0)
      {
        unsigned __int32 v20 = 0;
        unsigned __int8 v21 = 0;
        unsigned __int8 v22 = 0;
      }
      else
      {
        while (1)
        {
          unint64_t v16 = v15;
          if (*v9)
          {
            unint64_t v17 = 0x94D049BB133111EBLL
                * ((0xBF58476D1CE4E5B9 * (v15 ^ (v15 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (v15 ^ (v15 >> 30))) >> 27));
            uint64_t v18 = *(unsigned int *)(*(void *)(a1 + 64) + 4 * ((v17 ^ (v17 >> 31)) % *(unsigned int *)(a1 + 80)));
            if (v18 != 0x7FFFFFFF) {
              break;
            }
          }
LABEL_21:
          unint64_t v15 = *(void *)(v16 + 24);
          if (v15)
          {
            unint64_t v11 = v16;
            if ((*(unsigned char *)(v15 + 288) & 0x80) == 0) {
              continue;
            }
          }
          unsigned __int32 v20 = 0;
          unsigned __int8 v21 = 0;
          unsigned __int8 v22 = 0;
          unint64_t v11 = v16;
          goto LABEL_29;
        }
        uint64_t v19 = *(void *)(a1 + 72);
        while (*(void *)(v19 + 32 * v18 + 16) != v16)
        {
          uint64_t v18 = *(_DWORD *)(v19 + 32 * v18 + 8) & 0x7FFFFFFF;
          if (v18 == 0x7FFFFFFF) {
            goto LABEL_21;
          }
        }
        uint64_t v23 = v19 + 32 * v18;
        unsigned __int8 v21 = *(unsigned char *)(v23 + 28);
        unsigned __int32 v20 = v21 ? *(_DWORD *)(v23 + 24) : 0;
        unsigned __int8 v22 = *(unsigned char *)(v23 + 29);
      }
LABEL_29:
      re::StackScratchAllocator::StackScratchAllocator((re::StackScratchAllocator *)v56);
      uint64_t v49 = 0;
      uint64_t v50 = 0;
      int v51 = 1;
      uint64_t v53 = 0;
      unint64_t v54 = 0;
      uint64_t v52 = 0;
      int v55 = 0;
      re::BucketArray<re::ecs2::VisualProxyScopeManagerStateTracking::buildScopeMaskForEntityHierarchy(re::ecs2::Entity const*)::EntityScopeMask,32ul>::init((uint64_t)&v49, (uint64_t)v56, 1uLL);
      v48.n128_u64[0] = v11;
      v48.n128_u32[2] = v20;
      v48.n128_u8[12] = v21;
      v48.n128_u8[13] = v22;
      __n128 v24 = re::BucketArray<re::ecs2::VisualProxyScopeManagerStateTracking::buildScopeMaskForEntityHierarchy(re::ecs2::Entity const*)::EntityScopeMask,32ul>::add((uint64_t)&v49, &v48);
      unint64_t v25 = v54;
      if (v54) {
        break;
      }
LABEL_56:
      LODWORD(v3) = v45;
      while (v50)
        re::BucketArray<re::CollisionCastHit,10ul>::freeElementBucket(&v49);
      if (v49 && (v51 & 1) == 0) {
        (*(void (**)(__n128))(*(void *)v49 + 40))(v24);
      }
      re::StackScratchAllocator::~StackScratchAllocator((re::StackScratchAllocator *)v56);
      unsigned int v10 = *(_DWORD *)(a2 + 32);
      uint64_t v8 = *(void *)(a2 + 16);
LABEL_62:
      if (v10 <= (int)v4 + 1) {
        unsigned int v43 = v4 + 1;
      }
      else {
        unsigned int v43 = v10;
      }
      while (1)
      {
        uint64_t v7 = (v4 + 1);
        if (v43 - 1 == v4) {
          break;
        }
        LODWORD(v4) = v4 + 1;
        unsigned int v44 = v7;
        if ((*(_DWORD *)(v8 + 24 * v7 + 8) & 0x80000000) != 0) {
          goto LABEL_69;
        }
      }
      unsigned int v44 = v43;
LABEL_69:
      LODWORD(v4) = v44;
      if (v3 == v44) {
        return;
      }
    }
    while (1)
    {
      __n128 v48 = *(__n128 *)re::BucketArray<re::ecs2::VisualProxyScopeManagerStateTracking::buildScopeMaskForEntityHierarchy(re::ecs2::Entity const*)::EntityScopeMask,32ul>::operator[]((uint64_t)&v49, --v25);
      re::BucketArray<re::ecs2::VisualProxyScopeManagerStateTracking::buildScopeMaskForEntityHierarchy(re::ecs2::Entity const*)::EntityScopeMask,32ul>::operator[]((uint64_t)&v49, v25);
      unint64_t v54 = v25;
      ++v55;
      unint64_t v26 = v48.n128_u64[0];
      uint64_t v27 = (re::ecs2::EntityComponentCollection *)(v48.n128_u64[0] + 32);
      uint64_t v28 = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(v48.n128_u64[0] + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
      if (v28)
      {
        int v29 = 0;
        v48.n128_u32[2] |= *(_DWORD *)(v28 + 28);
        unsigned __int8 v30 = 1;
        v48.n128_u8[12] = 1;
      }
      else
      {
        unsigned __int8 v30 = 1;
        if (v48.n128_u8[12])
        {
          int v29 = 0;
        }
        else
        {
          v48.n128_u32[2] = 1;
          int v29 = 1;
          unsigned __int8 v30 = 0;
        }
      }
      if (re::ecs2::EntityComponentCollection::get(v27, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType))
      {
        v48.n128_u8[13] = 1;
      }
      if (re::ecs2::EntityComponentCollection::get(v27, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyFilterComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType))
      {
        unsigned __int32 v31 = 1;
        v48.n128_u32[2] = 1;
      }
      else
      {
        unsigned __int32 v31 = v48.n128_u32[2];
      }
      v47.n128_u32[0] = v31;
      v47.n128_u8[4] = v30;
      unsigned __int8 v32 = v48.n128_u8[13];
      v47.n128_u8[5] = v48.n128_u8[13];
      unint64_t v33 = 0x94D049BB133111EBLL
          * ((0xBF58476D1CE4E5B9 * (v26 ^ (v26 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (v26 ^ (v26 >> 30))) >> 27));
      unint64_t v34 = v33 ^ (v33 >> 31);
      if (*v9)
      {
        unint64_t v35 = v34 % *(unsigned int *)(a1 + 80);
        uint64_t v36 = *(unsigned int *)(*(void *)(a1 + 64) + 4 * v35);
        if (v36 != 0x7FFFFFFF)
        {
          uint64_t v37 = *(void *)(a1 + 72);
          while (*(void *)(v37 + 32 * v36 + 16) != v26)
          {
            uint64_t v36 = *(_DWORD *)(v37 + 32 * v36 + 8) & 0x7FFFFFFF;
            if (v36 == 0x7FFFFFFF) {
              goto LABEL_47;
            }
          }
          goto LABEL_48;
        }
      }
      else
      {
        LODWORD(v35) = 0;
      }
LABEL_47:
      re::HashTable<re::ecs2::Entity const*,re::ecs2::EntityVisualProxyScopeData,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::addAsMove(a1 + 56, v35, v34, &v48, &v47);
      ++*(_DWORD *)(a1 + 96);
LABEL_48:
      uint64_t v38 = *(void *)(v26 + 328);
      if (v38)
      {
        uint64_t v39 = *(unint64_t **)(v26 + 344);
        if (v29) {
          unsigned __int32 v40 = 0;
        }
        else {
          unsigned __int32 v40 = v31;
        }
        uint64_t v41 = 8 * v38;
        do
        {
          unint64_t v42 = *v39++;
          v47.n128_u64[0] = v42;
          v47.n128_u32[2] = v40;
          v47.n128_u8[12] = v30;
          v47.n128_u8[13] = v32;
          __n128 v24 = re::BucketArray<re::ecs2::VisualProxyScopeManagerStateTracking::buildScopeMaskForEntityHierarchy(re::ecs2::Entity const*)::EntityScopeMask,32ul>::add((uint64_t)&v49, &v47);
          v41 -= 8;
        }
        while (v41);
        unint64_t v25 = v54;
      }
      if (!v25) {
        goto LABEL_56;
      }
    }
  }
}

__n128 re::BucketArray<re::ecs2::VisualProxyScopeManagerStateTracking::buildScopeMaskForEntityHierarchy(re::ecs2::Entity const*)::EntityScopeMask,32ul>::add(uint64_t a1, __n128 *a2)
{
  unint64_t v4 = *(void *)(a1 + 40);
  unint64_t v5 = *(void *)(a1 + 8);
  if (v4 + 1 > 32 * v5)
  {
    re::BucketArray<re::ecs2::VisualProxyScopeManagerStateTracking::buildScopeMaskForEntityHierarchy(re::ecs2::Entity const*)::EntityScopeMask,32ul>::setBucketsCapacity((void *)a1, (v4 + 32) >> 5);
    unint64_t v5 = *(void *)(a1 + 8);
  }
  if (v5 <= v4 >> 5)
  {
    os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
    _os_log_send_and_compose_impl();
    _os_crash_msg();
    __break(1u);
  }
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v6 = a1 + 24;
  }
  else {
    uint64_t v6 = *(void *)(a1 + 32);
  }
  uint64_t v7 = *(void *)(v6 + 8 * (v4 >> 5));
  ++*(void *)(a1 + 40);
  ++*(_DWORD *)(a1 + 48);
  __n128 result = *a2;
  *(__n128 *)(v7 + 16 * (v4 & 0x1F)) = *a2;
  return result;
}

void re::ecs2::VisualProxyScopeManagerStateTracking::~VisualProxyScopeManagerStateTracking(re::ecs2::VisualProxyScopeManagerStateTracking *this)
{
  re::FixedArray<CoreIKTransform>::deinit((uint64_t *)this + 31);
  re::ecs2::HierarchyStateTracking<re::ecs2::EntityVisualProxyScopeData>::~HierarchyStateTracking((uint64_t *)this);
}

{
  uint64_t vars8;

  re::FixedArray<CoreIKTransform>::deinit((uint64_t *)this + 31);
  re::ecs2::HierarchyStateTracking<re::ecs2::EntityVisualProxyScopeData>::~HierarchyStateTracking((uint64_t *)this);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::VisualProxyScopeManagerStateTracking::trackedComponents(re::ecs2::VisualProxyScopeManagerStateTracking *this)
{
  return *((void *)this + 33);
}

uint64_t re::BucketArray<re::ecs2::VisualProxyScopeManagerStateTracking::buildScopeMaskForEntityHierarchy(re::ecs2::Entity const*)::EntityScopeMask,32ul>::init(uint64_t a1, uint64_t a2, unint64_t a3)
{
  *(void *)a1 = a2;
  re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity((void *)a1, a3);
  *(_DWORD *)(a1 + 16) += 2;
  *(void *)(a1 + 40) = 0;
  uint64_t result = re::BucketArray<re::ecs2::VisualProxyScopeManagerStateTracking::buildScopeMaskForEntityHierarchy(re::ecs2::Entity const*)::EntityScopeMask,32ul>::setBucketsCapacity(a1, a3);
  ++*(_DWORD *)(a1 + 48);
  return result;
}

void *re::BucketArray<re::ecs2::VisualProxyScopeManagerStateTracking::buildScopeMaskForEntityHierarchy(re::ecs2::Entity const*)::EntityScopeMask,32ul>::setBucketsCapacity(void *result, unint64_t a2)
{
  uint64_t v3 = result;
  if (*result)
  {
    if (result[5] < 32 * a2)
    {
      while (1)
      {
        unint64_t v4 = v3[1];
        if (v4 <= a2) {
          break;
        }
        uint64_t result = (void *)re::BucketArray<re::CollisionCastHit,10ul>::freeElementBucket(v3);
      }
      if (v4 < a2)
      {
        unint64_t v5 = v3 + 3;
        do
        {
          uint64_t result = (void *)(*(uint64_t (**)(void, uint64_t, void))(*(void *)*v3 + 32))(*v3, 512, 0);
          uint64_t v6 = result;
          if (*v3)
          {
            unint64_t v7 = v3[1];
            int v8 = *((_DWORD *)v3 + 4);
            if ((v8 & 1) == 0)
            {
              unint64_t v9 = *v5;
              BOOL v11 = v7 >= *v5;
              unint64_t v10 = v7 + 1;
              BOOL v11 = !v11 || v9 >= v10;
              if (v11) {
                goto LABEL_24;
              }
              unint64_t v12 = 2 * v9;
              goto LABEL_20;
            }
            unint64_t v10 = v7 + 1;
            if (v10 >= 3)
            {
              unint64_t v12 = 4;
LABEL_20:
              if (v12 <= v10) {
                unint64_t v14 = v10;
              }
              else {
                unint64_t v14 = v12;
              }
              uint64_t result = re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity(v3, v14);
              int v8 = *((_DWORD *)v3 + 4);
            }
          }
          else
          {
            unint64_t v13 = v3[1] + 1;
            uint64_t result = re::DynamicOverflowArray<std::unique_ptr<void,std::function<void ()(void *)>> *,2ul>::setCapacity(v3, v13);
            int v8 = *((_DWORD *)v3 + 4) + 2;
            *((_DWORD *)v3 + 4) = v8;
          }
LABEL_24:
          unint64_t v15 = v3 + 3;
          if ((v8 & 1) == 0) {
            unint64_t v15 = (void *)v3[4];
          }
          unint64_t v16 = v3[1];
          v15[v16++] = v6;
          v3[1] = v16;
          *((_DWORD *)v3 + 4) += 2;
        }
        while (v16 < a2);
      }
    }
  }
  else
  {
  }
  return result;
}

uint64_t re::BucketArray<re::ecs2::VisualProxyScopeManagerStateTracking::buildScopeMaskForEntityHierarchy(re::ecs2::Entity const*)::EntityScopeMask,32ul>::operator[](uint64_t a1, unint64_t a2)
{
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 <= a2)
  {
    re::internal::assertLog((re::internal *)6, a2, "assertion failure: '%s' (%s:line %i) Index out of range. index = %zu, size = %zu", "index < m_size", "operator[]", 1011, a2, v2);
    _os_crash();
    __break(1u);
LABEL_8:
    os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
    _os_log_send_and_compose_impl();
    _os_crash_msg();
    __break(1u);
  }
  if (*(void *)(a1 + 8) <= a2 >> 5) {
    goto LABEL_8;
  }
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v3 = a1 + 24;
  }
  else {
    uint64_t v3 = *(void *)(a1 + 32);
  }
  return *(void *)(v3 + 8 * (a2 >> 5)) + 16 * (a2 & 0x1F);
}

void re::HashTable<re::ecs2::Entity const*,re::ecs2::EntityVisualProxyScopeData,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::addAsMove(uint64_t a1, unsigned int a2, unint64_t a3, void *a4, void *a5)
{
  uint64_t v9 = *(unsigned int *)(a1 + 36);
  if (v9 == 0x7FFFFFFF)
  {
    uint64_t v9 = *(unsigned int *)(a1 + 32);
    int v10 = v9;
    if (v9 == *(_DWORD *)(a1 + 24))
    {
      int v11 = *(_DWORD *)(a1 + 28);
      signed int v12 = 2 * v11;
      uint64_t v13 = *(void *)a1;
      if (*(void *)a1)
      {
        if (v12) {
          BOOL v14 = v9 == v12;
        }
        else {
          BOOL v14 = 1;
        }
        if (!v14 && (v11 & 0x80000000) == 0)
        {
          memset(v25, 0, 36);
          *(void *)&v25[36] = 0x7FFFFFFFLL;
          re::HashTable<re::StringID,unsigned int,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::init((uint64_t)v25, v13, v12);
          long long v15 = *(_OWORD *)v25;
          *(_OWORD *)unint64_t v25 = *(_OWORD *)a1;
          *(_OWORD *)a1 = v15;
          uint64_t v16 = *(void *)&v25[16];
          *(void *)&v25[16] = *(void *)(a1 + 16);
          *(void *)(a1 + 16) = v16;
          long long v18 = *(_OWORD *)&v25[24];
          *(_OWORD *)&v25[24] = *(_OWORD *)(a1 + 24);
          unsigned int v17 = *(_DWORD *)&v25[32];
          *(_OWORD *)(a1 + 24) = v18;
          unsigned int v19 = v17;
          if (v17)
          {
            uint64_t v20 = 0;
            unint64_t v21 = 0;
            do
            {
              if ((*(_DWORD *)(*(void *)&v25[16] + v20 + 8) & 0x80000000) != 0)
              {
                re::HashTable<re::ecs2::Entity const*,re::ecs2::EntityVisualProxyScopeData,re::Hash<re::ecs2::Entity const*>,re::EqualTo<re::ecs2::Entity const*>,true,false>::addAsMove(a1, *(void *)(*(void *)&v25[16] + v20) % (unint64_t)*(unsigned int *)(a1 + 24), *(void *)(*(void *)&v25[16] + v20), *(void *)&v25[16] + v20 + 16, *(void *)&v25[16] + v20 + 24);
                unsigned int v19 = *(_DWORD *)&v25[32];
              }
              ++v21;
              v20 += 32;
            }
            while (v21 < v19);
          }
          re::HashTable<void *,re::internal::AnimationCompositionChainBase *,re::Hash<void *>,re::EqualTo<void *>,true,false>::deinit((uint64_t *)v25);
        }
      }
      else
      {
        if (v12) {
          signed int v24 = 2 * v11;
        }
        else {
          signed int v24 = 3;
        }
      }
      a2 = a3 % *(unsigned int *)(a1 + 24);
      int v10 = *(_DWORD *)(a1 + 32);
    }
    *(_DWORD *)(a1 + 32) = v10 + 1;
    uint64_t v22 = *(void *)(a1 + 16);
    int v23 = *(_DWORD *)(v22 + 32 * v9 + 8);
  }
  else
  {
    uint64_t v22 = *(void *)(a1 + 16);
    int v23 = *(_DWORD *)(v22 + 32 * v9 + 8);
    *(_DWORD *)(a1 + 36) = v23 & 0x7FFFFFFF;
  }
  *(_DWORD *)(v22 + 32 * v9 + 8) = v23 | 0x80000000;
  *(_DWORD *)(*(void *)(a1 + 16) + 32 * v9 + 8) = *(_DWORD *)(*(void *)(a1 + 16) + 32 * v9 + 8) & 0x80000000 | *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2);
  *(void *)(*(void *)(a1 + 16) + 32 * v9) = a3;
  *(void *)(*(void *)(a1 + 16) + 32 * v9 + 16) = *a4;
  *(void *)(*(void *)(a1 + 16) + 32 * v9 + 24) = *a5;
  *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2) = v9;
  ++*(_DWORD *)(a1 + 28);
}

void re::ecs2::HingeJointComponent::addToSimulation(re::ecs2::HingeJointComponent *this, re::PhysicsSimulation *a2, const re::ecs2::Entity *a3)
{
  if (RigidBody) {
    BOOL v8 = v7 == 0;
  }
  else {
    BOOL v8 = 1;
  }
  if (!v8)
  {
    uint64_t v9 = v7;
    *((void *)this + re::ecs2::BasicComponentStates<re::ecs2::BlendShapeWeightsBufferComponent>::~BasicComponentStates((void *)this + 19) = v10;
    re::PhysicsJointCollection::add((re::PhysicsSimulation *)((char *)a2 + 136), v10);
    objc_storeWeak((id *)this + 20, (char *)a2 + 8);
    re::ecs2::ConstraintComponentHelper<re::ecs2::HingeJointComponent>::registerConstraint((uint64_t)this);
  }
}

void re::ecs2::ConstraintComponentHelper<re::ecs2::HingeJointComponent>::registerConstraint(uint64_t a1)
{
  unint64_t v2 = re::ecs2::EntityHandle::resolve((id *)(a1 + 32), *(void *)(a1 + 16));
  re::ecs2::ConstraintComponentHelper<re::ecs2::HingeJointComponent>::registerConstraint((uint64_t)v2, *(void *)(a1 + 16));
  uint64_t v3 = re::ecs2::EntityHandle::resolve((id *)(a1 + 56), *(void *)(a1 + 16));
  uint64_t v4 = *(void *)(a1 + 16);
  re::ecs2::ConstraintComponentHelper<re::ecs2::HingeJointComponent>::registerConstraint((uint64_t)v3, v4);
}

void re::ecs2::HingeJointComponent::removeFromSimulation(id *this)
{
  if (this[19])
  {
    unint64_t v2 = this + 20;
    id WeakRetained = objc_loadWeakRetained(this + 20);
    if (WeakRetained)
    {
      uint64_t v4 = WeakRetained;
      id v8 = this[19];
      re::DynamicArray<re::Allocator const*>::removeStable(WeakRetained + 18, &v8);
      objc_destroyWeak(v2);
      this[20] = 0;
    }
    unint64_t v5 = (void (***)(id))this[19];
    if (v5)
    {
      (**v5)(this[19]);
    }
    this[19] = 0;
    uint64_t v6 = (char *)this[2];
    if (v6)
    {
      unint64_t v7 = (void *)re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(v6 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ConstraintListComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
      if (v7)
      {
        re::ecs2::ConstraintComponentHelper<re::ecs2::HingeJointComponent>::removeConstraintsFromSimulation(v7);
      }
    }
  }
}

void re::ecs2::ConstraintComponentHelper<re::ecs2::HingeJointComponent>::removeConstraintsFromSimulation(void *a1)
{
  if ((int)a1[11] >= 1)
  {
    unint64_t v2 = (char *)a1[2];
    uint64_t v3 = (uint64_t)(a1 + 9);
    unint64_t v4 = a1[11] + 1;
    do
    {
      unint64_t v5 = (v4 - 2);
      if (a1[11] <= v5)
      {
        os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
        _os_log_send_and_compose_impl();
        _os_crash_msg();
        __break(1u);
      }
      id WeakRetained = (char *)objc_loadWeakRetained((id *)(a1[13] + 8 * v5));
      if (WeakRetained)
      {
        unint64_t v7 = WeakRetained;
        uint64_t v8 = re::ecs2::EntityComponentCollection::get((re::ecs2::EntityComponentCollection *)(WeakRetained + 24), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::HingeJointComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
        if (!v8
          || (uint64_t v9 = v8, re::ecs2::EntityHandle::resolve((id *)(v8 + 32), (uint64_t)v7 - 8) != v2)
          && re::ecs2::EntityHandle::resolve((id *)(v9 + 56), (uint64_t)v7 - 8) != v2)
        {
          re::DynamicArray<re::ArcWeakPtr<re::ecs2::Entity>>::removeAt(v3, (v4 - 2));
        }
      }
      else
      {
        re::DynamicArray<re::ArcWeakPtr<re::ecs2::Entity>>::removeAt(v3, (v4 - 2));
      }
      --v4;
    }
    while (v4 > 1);
  }
}

void *re::ecs2::allocInfo_HingeJointComponent(re::ecs2 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&_MergedGlobals_167, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&_MergedGlobals_167))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF82060, "HingeJointComponent");
    __cxa_guard_release(&_MergedGlobals_167);
  }
  return &unk_26AF82060;
}

void re::ecs2::initInfo_HingeJointComponent(re::ecs2 *this, re::IntrospectionBase *a2)
{
  v27[0] = 0xA5242FCC04AC1AFCLL;
  v27[1] = "HingeJointComponent";
  re::StringID::destroyString((re::StringID *)v27);
  *((_OWORD *)this + 2) = v28;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82028, memory_order_acquire) & 1) == 0)
  {
    unint64_t v4 = (re *)__cxa_guard_acquire(&qword_26AF82028);
    if (v4)
    {
      unint64_t v5 = re::introspectionAllocator(v4);
      uint64_t v6 = re::ecs2::introspect_Component((re::IntrospectionBase **)1);
      uint64_t v7 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v5 + 32))(v5, 72, 8);
      *(_DWORD *)uint64_t v7 = 1;
      *(void *)(v7 + 8) = "Component";
      *(void *)(v7 + 16) = v6;
      *(void *)(v7 + 24) = 0;
      *(void *)(v7 + 32) = 0;
      *(_DWORD *)(v7 + 40) = 3;
      *(void *)(v7 + 48) = 0;
      *(void *)(v7 + 56) = 0;
      *(_DWORD *)(v7 + 64) = 0;
      qword_26AF82030 = v7;
      uint64_t v8 = re::introspectionAllocator((re *)v7);
      int v10 = re::ecs2::introspect_EntityHandle((re::ecs2 *)1, v9);
      uint64_t v11 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v8 + 32))(v8, 72, 8);
      *(_DWORD *)uint64_t v11 = 1;
      *(void *)(v11 + 8) = "bodyA";
      *(void *)(v11 + 16) = v10;
      *(void *)(v11 + 24) = 0;
      *(void *)(v11 + 32) = 0x2000000001;
      *(_DWORD *)(v11 + 40) = 0;
      *(void *)(v11 + 48) = 0;
      *(void *)(v11 + 56) = 0;
      *(_DWORD *)(v11 + 64) = 0;
      qword_26AF82038 = v11;
      signed int v12 = re::introspectionAllocator((re *)v11);
      BOOL v14 = re::ecs2::introspect_EntityHandle((re::ecs2 *)1, v13);
      uint64_t v15 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v12 + 32))(v12, 72, 8);
      *(_DWORD *)uint64_t v15 = 1;
      *(void *)(v15 + 8) = "bodyB";
      *(void *)(v15 + 16) = v14;
      *(void *)(v15 + 24) = 0;
      *(void *)(v15 + 32) = 0x3800000002;
      *(_DWORD *)(v15 + 40) = 0;
      *(void *)(v15 + 48) = 0;
      *(void *)(v15 + 56) = 0;
      *(_DWORD *)(v15 + 64) = 0;
      qword_26AF82040 = v15;
      uint64_t v16 = re::introspectionAllocator((re *)v15);
      uint64_t v17 = re::introspect_PoseF((re::IntrospectionBase **)1);
      uint64_t v18 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v16 + 32))(v16, 72, 8);
      *(_DWORD *)uint64_t v18 = 1;
      *(void *)(v18 + 8) = "localAnchorPoseA";
      *(void *)(v18 + 16) = v17;
      *(void *)(v18 + 24) = 0;
      *(void *)(v18 + 32) = 0x5000000003;
      *(_DWORD *)(v18 + 40) = 0;
      *(void *)(v18 + 48) = 0;
      *(void *)(v18 + 56) = 0;
      *(_DWORD *)(v18 + 64) = 0;
      qword_26AF82048 = v18;
      unsigned int v19 = re::introspectionAllocator((re *)v18);
      uint64_t v20 = re::introspect_PoseF((re::IntrospectionBase **)1);
      uint64_t v21 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v19 + 32))(v19, 72, 8);
      *(_DWORD *)uint64_t v21 = 1;
      *(void *)(v21 + 8) = "localAnchorPoseB";
      *(void *)(v21 + 16) = v20;
      *(void *)(v21 + 24) = 0;
      *(void *)(v21 + 32) = 0x7000000004;
      *(_DWORD *)(v21 + 40) = 0;
      *(void *)(v21 + 48) = 0;
      *(void *)(v21 + 56) = 0;
      *(_DWORD *)(v21 + 64) = 0;
      qword_26AF82050 = v21;
      uint64_t v22 = re::introspectionAllocator((re *)v21);
      signed int v24 = re::introspect_BOOL((re *)1, v23);
      uint64_t v25 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v22 + 32))(v22, 72, 8);
      *(_DWORD *)uint64_t v25 = 1;
      *(void *)(v25 + 8) = "collisionsEnabled";
      *(void *)(v25 + 16) = v24;
      *(void *)(v25 + 24) = 0;
      *(void *)(v25 + 32) = 0x9000000005;
      *(_DWORD *)(v25 + 40) = 0;
      *(void *)(v25 + 48) = 0;
      *(void *)(v25 + 56) = 0;
      *(_DWORD *)(v25 + 64) = 0;
      qword_26AF82058 = v25;
      __cxa_guard_release(&qword_26AF82028);
    }
  }
  *((void *)this + 2) = 0xB000000008;
  *((_DWORD *)this + 6) = 16;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 6;
  *((void *)this + 8) = &qword_26AF82030;
  *((void *)this + 9) = re::internal::defaultConstruct<re::ecs2::HingeJointComponent>;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 10) = re::internal::defaultDestruct<re::ecs2::HingeJointComponent>;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::ecs2::HingeJointComponent>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::ecs2::HingeJointComponent>;
  re::IntrospectionRegistry::add(this, v3);
  long long v26 = v28;
}

uint64_t re::internal::defaultConstruct<re::ecs2::HingeJointComponent>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return re::make::shared::unsafelyInplace<re::ecs2::HingeJointComponent>(a3);
}

void *re::internal::defaultDestruct<re::ecs2::HingeJointComponent>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_destroyWeak((id *)(a3 + 160));
  *(void *)(a3 + 160) = 0;
  re::ecs2::EntityHandle::reset((re::ecs2::EntityHandle *)(a3 + 56));
  objc_destroyWeak((id *)(a3 + 56));
  *(void *)(a3 + 56) = 0;
  re::ecs2::EntityHandle::reset((re::ecs2::EntityHandle *)(a3 + 32));
  objc_destroyWeak((id *)(a3 + 32));
  *(void *)(a3 + 32) = 0;
  *(void *)a3 = &unk_26E6DECE0;
  return objc_destructInstance((id)(a3 + 8));
}

void *re::internal::defaultDestructV2<re::ecs2::HingeJointComponent>(uint64_t a1)
{
  objc_destroyWeak((id *)(a1 + 160));
  *(void *)(a1 + 160) = 0;
  re::ecs2::EntityHandle::reset((re::ecs2::EntityHandle *)(a1 + 56));
  objc_destroyWeak((id *)(a1 + 56));
  *(void *)(a1 + 56) = 0;
  re::ecs2::EntityHandle::reset((re::ecs2::EntityHandle *)(a1 + 32));
  objc_destroyWeak((id *)(a1 + 32));
  *(void *)(a1 + 32) = 0;
  *(void *)a1 = &unk_26E6DECE0;
  return objc_destructInstance((id)(a1 + 8));
}

uint64_t re::ecs2::introspect_HingeJointComponent(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"HingeJointComponent", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_HingeJointComponent, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_HingeJointComponent, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::HingeJointComponent>, this);
}

void re::ecs2::ConstraintComponentHelper<re::ecs2::HingeJointComponent>::registerConstraint(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v3 = (void *)re::ecs2::EntityComponentCollection::getOrAdd((re::ecs2::EntityComponentCollection *)(a1 + 32), (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ConstraintListComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    if (a2) {
      unint64_t v4 = (void *)(a2 + 8);
    }
    else {
      unint64_t v4 = 0;
    }
    objc_initWeak(&location, v4);
    uint64_t v5 = v3[13];
    uint64_t v6 = v3[11];
    if (v6)
    {
      uint64_t v7 = 8 * v6;
      uint64_t v8 = (id *)v3[13];
      while (*v8 != location)
      {
        ++v8;
        v7 -= 8;
        if (!v7)
        {
          uint64_t v8 = (id *)(v5 + 8 * v6);
          break;
        }
      }
    }
    else
    {
      uint64_t v8 = (id *)v3[13];
    }
    if (v6 == ((uint64_t)v8 - v5) >> 3) {
      re::DynamicArray<re::ArcWeakPtr<re::ecs2::Entity>>::add((_anonymous_namespace_ *)(v3 + 9), &location);
    }
    objc_destroyWeak(&location);
  }
}

uint64_t re::make::shared::unsafelyInplace<re::ecs2::HingeJointComponent>(uint64_t a1)
{
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  unint64_t v2 = (id *)(a1 + 160);
  *(_OWORD *)(a1 + 32) = 0u;
  uint64_t v3 = (id *)(a1 + 32);
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)a1, 0);
  *(void *)(v4 + 16) = 0;
  *(unsigned char *)(v4 + 24) = 0;
  *(void *)uint64_t v4 = &unk_26E6E5E30;
  objc_initWeak(v3, 0);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  re::ecs2::EntityHandle::reset((re::ecs2::EntityHandle *)v3);
  objc_initWeak((id *)(a1 + 56), 0);
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  re::ecs2::EntityHandle::reset((re::ecs2::EntityHandle *)(a1 + 56));
  *(_OWORD *)(a1 + 80) = 0u;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0x3F80000000000000;
  *(_OWORD *)(a1 + 112) = 0u;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0x3F80000000000000;
  *(unsigned char *)(a1 + 144) = 1;
  *(void *)(a1 + 152) = 0;
  objc_initWeak(v2, 0);
  return a1;
}

void re::ecs2::HingeJointComponent::~HingeJointComponent(id *this)
{
  this[20] = 0;
  re::ecs2::EntityHandle::reset((re::ecs2::EntityHandle *)(this + 7));
  objc_destroyWeak(this + 7);
  this[7] = 0;
  re::ecs2::EntityHandle::reset((re::ecs2::EntityHandle *)(this + 4));
  objc_destroyWeak(this + 4);
  this[4] = 0;
  *this = &unk_26E6DECE0;
  objc_destructInstance(this + 1);
}

{
  uint64_t vars8;

  objc_destroyWeak(this + 20);
  this[20] = 0;
  re::ecs2::EntityHandle::reset((re::ecs2::EntityHandle *)(this + 7));
  objc_destroyWeak(this + 7);
  this[7] = 0;
  re::ecs2::EntityHandle::reset((re::ecs2::EntityHandle *)(this + 4));
  objc_destroyWeak(this + 4);
  this[4] = 0;
  *this = &unk_26E6DECE0;
  objc_destructInstance(this + 1);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::HingeJointComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::HingeJointComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::HingeJointComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::HingeJointComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::HingeJointComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

int *re::ecs2::syncPolicy::denyAll(re::ecs2::syncPolicy *this)
{
  {
    re::ecs2::syncPolicy::denyAll(void)::denyAll = 1;
    qword_26879F5F8 = 0;
    qword_26879F5E0 = 0;
    unk_26879F5E8 = 0;
    qword_26879F5D8 = 0;
    dword_26879F5F0 = 0;
  }
  return &re::ecs2::syncPolicy::denyAll(void)::denyAll;
}

int *re::ecs2::syncPolicy::allowAll(re::ecs2::syncPolicy *this)
{
  {
    re::ecs2::syncPolicy::allowAll(void)::allowAll = 0;
    qword_26879F630 = 0;
    qword_26879F618 = 0;
    unk_26879F620 = 0;
    qword_26879F610 = 0;
    dword_26879F628 = 0;
  }
  return &re::ecs2::syncPolicy::allowAll(void)::allowAll;
}

void re::ecs2::SyncAccessControl::addEntry(void *a1, unint64_t a2, unsigned __int32 a3)
{
  v11.n128_u64[0] = a2;
  v11.n128_u32[2] = a3;
  uint64_t v4 = a1[5];
  uint64_t v5 = a1[3];
  if (v5)
  {
    uint64_t v6 = 16 * v5;
    uint64_t v7 = a1[5];
    while (*(void *)v7 != a2 || *(_DWORD *)(v7 + 8) != a3)
    {
      v7 += 16;
      v6 -= 16;
      if (!v6)
      {
        uint64_t v7 = v4 + 16 * v5;
        break;
      }
    }
  }
  else
  {
    uint64_t v7 = a1[5];
  }
  if (v5 == (v7 - v4) >> 4)
  {
    re::DynamicArray<re::RigNodeConstraint>::add((_anonymous_namespace_ *)(a1 + 1), &v11);
    unint64_t v8 = a1[3];
    unint64_t v9 = 126 - 2 * __clz(v8);
    if (v8) {
      uint64_t v10 = v9;
    }
    else {
      uint64_t v10 = 0;
    }
    std::__introsort<std::_ClassicAlgPolicy,std::__less<void,void> &,re::ecs2::SyncAccessControlEntry *,false>(a1[5], a1[5] + 16 * v8, (uint64_t)&v12, v10, 1);
  }
}

BOOL re::DynamicArray<re::ecs2::SyncAccessControlEntry>::removeStable(void *a1, uint64_t a2)
{
  uint64_t v2 = a1[4];
  uint64_t v3 = a1[2];
  if (v3)
  {
    uint64_t v4 = 16 * v3;
    uint64_t v5 = a1[4];
    while (*(void *)v5 != *(void *)a2 || *(_DWORD *)(v5 + 8) != *(_DWORD *)(a2 + 8))
    {
      v5 += 16;
      v4 -= 16;
      if (!v4)
      {
        uint64_t v5 = v2 + 16 * v3;
        break;
      }
    }
  }
  else
  {
    uint64_t v5 = a1[4];
  }
  uint64_t v6 = v5 - v2;
  uint64_t v7 = v6 >> 4;
  if (v6 >> 4 != v3) {
    re::DynamicArray<re::ecs2::SyncAccessControlEntry>::removeStableAt(a1, v6 >> 4);
  }
  return v7 != v3;
}

void re::ecs2::SyncAccessControl::inherit(uint64_t a1, int *a2, int *a3)
{
  int v5 = *a2;
  int v6 = *a3;
  BOOL v8 = *a3 == 1 || v5 == 1;
  *(_DWORD *)a1 = v8;
  unint64_t v9 = (_anonymous_namespace_ *)(a1 + 8);
  *(void *)(a1 + 24) = 0;
  ++*(_DWORD *)(a1 + 32);
  unint64_t v10 = *((void *)a2 + 3);
  unint64_t v11 = *((void *)a3 + 3);
  if (*(void *)(a1 + 16) < v11 + v10)
  {
    re::DynamicArray<re::RigNodeConstraint>::setCapacity((void *)(a1 + 8), v11 + v10);
    unint64_t v10 = *((void *)a2 + 3);
    unint64_t v11 = *((void *)a3 + 3);
  }
  unint64_t v12 = 0;
  unint64_t v13 = 0;
  if (v10 && v11)
  {
    unint64_t v13 = 0;
    unint64_t v12 = 0;
    while (1)
    {
      BOOL v14 = (__n128 *)(*((void *)a2 + 5) + 16 * v13);
      uint64_t v15 = *((void *)a3 + 5) + 16 * v12;
      unsigned __int32 v16 = v14->n128_u32[2];
      int v17 = *(_DWORD *)(v15 + 8);
      if (v14->n128_u64[0] == *(void *)v15 && v16 == v17)
      {
        re::DynamicArray<re::RigNodeConstraint>::add(v9, v14);
        ++v13;
LABEL_28:
        ++v12;
        goto LABEL_29;
      }
      if (v16 != v17) {
        break;
      }
      if (v14->n128_u64[0] >= *(void *)v15) {
        goto LABEL_25;
      }
      if (v6 != 1 || v16 == 1) {
        goto LABEL_23;
      }
LABEL_24:
      ++v13;
LABEL_29:
      unint64_t v10 = *((void *)a2 + 3);
      unint64_t v11 = *((void *)a3 + 3);
      if (v13 >= v10 || v12 >= v11) {
        goto LABEL_34;
      }
    }
    if (v16 != 1)
    {
LABEL_25:
      if (v5 != 1 || v17 == 1) {
        re::DynamicArray<re::RigNodeConstraint>::add(v9, (__n128 *)(*((void *)a3 + 5) + 16 * v12));
      }
      goto LABEL_28;
    }
LABEL_23:
    re::DynamicArray<re::RigNodeConstraint>::add(v9, v14);
    goto LABEL_24;
  }
LABEL_34:
  if (v13 < v10)
  {
    uint64_t v20 = 16 * v13;
    do
    {
      uint64_t v21 = (__n128 *)(*((void *)a2 + 5) + v20);
      if (v6 != 1 || v21->n128_u32[2] == 1)
      {
        re::DynamicArray<re::RigNodeConstraint>::add(v9, v21);
        unint64_t v10 = *((void *)a2 + 3);
      }
      ++v13;
      v20 += 16;
    }
    while (v13 < v10);
    unint64_t v11 = *((void *)a3 + 3);
  }
  if (v12 < v11)
  {
    uint64_t v22 = 16 * v12;
    do
    {
      int v23 = (__n128 *)(*((void *)a3 + 5) + v22);
      if (v5 != 1 || v23->n128_u32[2] == 1)
      {
        re::DynamicArray<re::RigNodeConstraint>::add(v9, v23);
        unint64_t v11 = *((void *)a3 + 3);
      }
      ++v12;
      v22 += 16;
    }
    while (v12 < v11);
  }
}

BOOL re::DynamicArray<re::ecs2::SyncAccessControlEntry>::operator==(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2) {
    return 1;
  }
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = v3 + 16 * v2;
  uint64_t v5 = *(void *)(a2 + 32);
  do
  {
    BOOL result = *(void *)v3 == *(void *)v5 && *(_DWORD *)(v3 + 8) == *(_DWORD *)(v5 + 8);
    v3 += 16;
    v5 += 16;
  }
  while (result && v3 != v4);
  return result;
}

void re::ecs2::introspect_SyncAccessPolicy(re::ecs2 *this, const re::IntrospectionBase *a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF820E0, memory_order_acquire) & 1) == 0)
  {
    signed int v24 = (re *)__cxa_guard_acquire(&qword_26AF820E0);
    if (v24)
    {
      uint64_t v25 = re::introspectionAllocator(v24);
      long long v26 = (re *)(*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v25 + 32))(v25, 24, 8);
      *(_DWORD *)long long v26 = 1;
      *((void *)v26 + 1) = 0;
      *((void *)v26 + 2) = "Allow";
      qword_26AF82120 = (uint64_t)v26;
      uint64_t v27 = re::introspectionAllocator(v26);
      uint64_t v28 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v27 + 32))(v27, 24, 8);
      *(_DWORD *)uint64_t v28 = 1;
      *(void *)(v28 + 8) = 1;
      *(void *)(v28 + 16) = "Deny";
      qword_26AF82128 = v28;
      __cxa_guard_release(&qword_26AF820E0);
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF820E8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF820E8))
  {
    re::IntrospectionBasic::IntrospectionBasic((re::IntrospectionBasic *)&qword_26AF82190, "SyncAccessPolicy", 4, 4, 1, 1);
    qword_26AF82190 = (uint64_t)&unk_26E715E00;
    qword_26AF821D0 = (uint64_t)&re::ecs2::introspect_SyncAccessPolicy(BOOL)::enumTable;
    dword_26AF821A0 = 9;
    __cxa_guard_release(&qword_26AF820E8);
  }
  if ((_MergedGlobals_168 & 1) == 0)
  {
    _MergedGlobals_168 = 1;
    re::IntrospectionRegistry::add((re::IntrospectionRegistry *)&qword_26AF82190, a2);
    uint64_t v30 = 0x1D0F42E6C2A29C22;
    unsigned __int32 v31 = "SyncAccessPolicy";
    v34[0] = 208862;
    v34[1] = "int";
    uint64_t v2 = (uint64_t *)re::HashTable<re::StringID,re::StateParameterInt *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::tryGet((uint64_t)&unk_2687A0D30, v34);
    if (v2)
    {
      uint64_t v3 = *v2;
      re::StringID::destroyString((re::StringID *)v34);
      uint64_t v4 = (unsigned int *)qword_26AF821D0;
      v33[1] = v3;
      re::TypeBuilder::beginEnumType((uint64_t)v34, &v30, 1, 1, (uint64_t)v33);
      unint64_t v6 = *v4;
      if (v6)
      {
        for (unint64_t i = 0; i < v6; ++i)
        {
          uint64_t v8 = *(void *)(*((void *)v4 + 1) + 8 * i);
          if (*(_DWORD *)v8 == 1)
          {
            unint64_t v9 = *(char **)(v8 + 16);
            if (v9)
            {
              uint64_t v10 = *v9;
              if (*v9)
              {
                char v11 = v9[1];
                if (v11)
                {
                  unint64_t v12 = (unsigned __int8 *)(v9 + 2);
                  do
                  {
                    uint64_t v10 = 31 * v10 + v11;
                    int v13 = *v12++;
                    char v11 = v13;
                  }
                  while (v13);
                }
              }
            }
            else
            {
              uint64_t v10 = 0;
            }
            uint64_t v14 = *(void *)(v8 + 8);
            *(void *)&v32.var0 = 2 * v10;
            v32.var1 = v9;
            re::TypeBuilder::addEnumConstant((re::TypeBuilder *)v34, v14, &v32);
            re::StringID::destroyString((re::StringID *)&v32);
            unint64_t v6 = *v4;
          }
        }
        if (v6)
        {
          for (unint64_t j = 0; j < v6; ++j)
          {
            uint64_t v16 = *(void *)(*((void *)v4 + 1) + 8 * j);
            if (*(_DWORD *)v16 == 2)
            {
              int v17 = *(char **)(v16 + 16);
              if (v17)
              {
                uint64_t v18 = *v17;
                if (*v17)
                {
                  char v19 = v17[1];
                  if (v19)
                  {
                    uint64_t v20 = (unsigned __int8 *)(v17 + 2);
                    do
                    {
                      uint64_t v18 = 31 * v18 + v19;
                      int v21 = *v20++;
                      char v19 = v21;
                    }
                    while (v21);
                  }
                }
              }
              else
              {
                uint64_t v18 = 0;
              }
              uint64_t v22 = *(void *)(v16 + 8);
              *(void *)&v32.var0 = 2 * v18;
              v32.var1 = v17;
              re::TypeBuilder::addEnumConstantRenaming((re::TypeBuilder *)v34, v22, &v32);
              re::StringID::destroyString((re::StringID *)&v32);
              unint64_t v6 = *v4;
            }
          }
        }
      }
      re::TypeBuilder::~TypeBuilder((re::TypeBuilder *)v34, v23);
      xmmword_26AF821B0 = (__int128)v32;
      re::StringID::destroyString((re::StringID *)&v30);
    }
    else
    {
      re::StringID::destroyString((re::StringID *)v34);
      re::internal::assertLog((re::internal *)5, v29, "assertion failure: '%s' (%s:line %i) Failed to determine underlying type of enum %s.", "valueID.isValid()", "registerEnumType", 2796, "SyncAccessPolicy", v30, v31);
      _os_crash();
      __break(1u);
    }
  }
}

void *re::ecs2::allocInfo_SyncAccessControlEntry(re::ecs2 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF820F0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF820F0))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF821D8, "SyncAccessControlEntry");
    __cxa_guard_release(&qword_26AF820F0);
  }
  return &unk_26AF821D8;
}

void re::ecs2::initInfo_SyncAccessControlEntry(re::ecs2 *this, re::IntrospectionBase *a2)
{
  v13[0] = 0xD6FC847F5DCB9568;
  v13[1] = "SyncAccessControlEntry";
  re::StringID::destroyString((re::StringID *)v13);
  *((_OWORD *)this + 2) = v14;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF820F8, memory_order_acquire) & 1) == 0)
  {
    uint64_t v4 = (re *)__cxa_guard_acquire(&qword_26AF820F8);
    if (v4)
    {
      uint64_t v5 = re::introspectionAllocator(v4);
      uint64_t v7 = re::introspect_uint64_t((re *)1, v6);
      uint64_t v8 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v5 + 32))(v5, 72, 8);
      *(_DWORD *)uint64_t v8 = 1;
      *(void *)(v8 + 8) = "peer";
      *(void *)(v8 + 16) = v7;
      *(void *)(v8 + 24) = 0;
      *(void *)(v8 + 32) = 1;
      *(_DWORD *)(v8 + 40) = 0;
      *(void *)(v8 + 48) = 0;
      *(void *)(v8 + 56) = 0;
      *(_DWORD *)(v8 + 64) = 0;
      qword_26AF82130 = v8;
      unint64_t v9 = (re::ecs2 *)re::introspectionAllocator((re *)v8);
      re::ecs2::introspect_SyncAccessPolicy(v9, v10);
      uint64_t v11 = (*(uint64_t (**)(re::ecs2 *, uint64_t, uint64_t))(*(void *)v9 + 32))(v9, 72, 8);
      *(_DWORD *)uint64_t v11 = 1;
      *(void *)(v11 + 8) = "policy";
      *(void *)(v11 + 16) = &qword_26AF82190;
      *(void *)(v11 + 24) = 0;
      *(void *)(v11 + 32) = 0x800000002;
      *(_DWORD *)(v11 + 40) = 0;
      *(void *)(v11 + 48) = 0;
      *(void *)(v11 + 56) = 0;
      *(_DWORD *)(v11 + 64) = 0;
      qword_26AF82138 = v11;
      __cxa_guard_release(&qword_26AF820F8);
    }
  }
  *((void *)this + 2) = 0x1000000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 1;
  *((_DWORD *)this + 14) = 2;
  *((void *)this + 8) = &qword_26AF82130;
  *((void *)this + 9) = re::internal::defaultConstruct<re::ecs2::SyncAccessControlEntry>;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 10) = re::internal::defaultDestruct<re::ecs2::SyncAccessControlEntry>;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::ecs2::SyncAccessControlEntry>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::ecs2::SyncAccessControlEntry>;
  re::IntrospectionRegistry::add(this, v3);
  long long v12 = v14;
}

void re::internal::defaultConstruct<re::ecs2::SyncAccessControlEntry>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a3 = 0;
  *(_DWORD *)(a3 + 8) = 0;
}

uint64_t re::internal::defaultConstructV2<re::ecs2::SyncAccessControlEntry>(uint64_t result)
{
  *(void *)BOOL result = 0;
  *(_DWORD *)(result + 8) = 0;
  return result;
}

void *re::ecs2::allocInfo_SyncAccessControl(re::ecs2 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82110, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82110))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF82250, "SyncAccessControl");
    __cxa_guard_release(&qword_26AF82110);
  }
  return &unk_26AF82250;
}

void re::ecs2::initInfo_SyncAccessControl(re::ecs2 *this, re::IntrospectionBase *a2)
{
  unint64_t v26 = 0x84D919EC3291B0BCLL;
  v27[0] = "SyncAccessControl";
  re::StringID::destroyString((re::StringID *)&v26);
  *((_OWORD *)this + 2) = v21;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82108, memory_order_acquire) & 1) == 0)
  {
    uint64_t v4 = (re *)__cxa_guard_acquire(&qword_26AF82108);
    if (v4)
    {
      uint64_t v5 = (re::ecs2 *)re::introspectionAllocator(v4);
      re::ecs2::introspect_SyncAccessPolicy(v5, v6);
      uint64_t v7 = (*(uint64_t (**)(re::ecs2 *, uint64_t, uint64_t))(*(void *)v5 + 32))(v5, 72, 8);
      *(_DWORD *)uint64_t v7 = 1;
      *(void *)(v7 + 8) = "m_defaultPolicy";
      *(void *)(v7 + 16) = &qword_26AF82190;
      *(void *)(v7 + 24) = 0;
      *(void *)(v7 + 32) = 1;
      *(_DWORD *)(v7 + 40) = 0;
      *(void *)(v7 + 48) = 0;
      *(void *)(v7 + 56) = 0;
      *(_DWORD *)(v7 + 64) = 0;
      qword_26AF82140 = v7;
      uint64_t v8 = (re::ecs2 *)re::introspectionAllocator((re *)v7);
      unint64_t v9 = v8;
      if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82118, memory_order_acquire) & 1) == 0)
      {
        uint64_t v8 = (re::ecs2 *)__cxa_guard_acquire(&qword_26AF82118);
        if (v8)
        {
          re::IntrospectionDynamicArrayBase::IntrospectionDynamicArrayBase((re::IntrospectionDynamicArrayBase *)qword_26AF82150);
          qword_26AF82150[0] = (uint64_t)&unk_26E6E5EB8;
          __cxa_guard_release(&qword_26AF82118);
        }
      }
      if ((byte_26AF820D9 & 1) == 0)
      {
        uint64_t v10 = (void *)qword_26AF82100;
        if (qword_26AF82100
          || (uint64_t v10 = re::ecs2::allocInfo_SyncAccessControlEntry(v8),
              qword_26AF82100 = (uint64_t)v10,
              re::ecs2::initInfo_SyncAccessControlEntry((re::ecs2 *)v10, v11),
              (byte_26AF820D9 & 1) == 0))
        {
          byte_26AF820D9 = 1;
          int v12 = *((_DWORD *)v10 + 6);
          ArcSharedObject::ArcSharedObject((ArcSharedObject *)qword_26AF82150, 0);
          unk_26AF82160 = 0x2800000003;
          unk_26AF82168 = v12;
          unk_26AF8216C = 0;
          *(void *)&xmmword_26AF82170 = 0;
          *((void *)&xmmword_26AF82170 + 1) = 0xFFFFFFFFLL;
          unk_26AF82180 = v10;
          unk_26AF82188 = 0;
          qword_26AF82150[0] = (uint64_t)&unk_26E6E5EB8;
          re::IntrospectionRegistry::add(v13, v14);
          re::getPrettyTypeName((re *)qword_26AF82150, (const re::IntrospectionBase *)&v26);
          if (v27[0]) {
            uint64_t v15 = (const char *)v27[1];
          }
          else {
            uint64_t v15 = (char *)v27 + 1;
          }
          if (v26 && (v27[0] & 1) != 0) {
            (*(void (**)(void))(*(void *)v26 + 40))();
          }
          long long v23 = *((_OWORD *)v10 + 2);
          uint64_t v16 = (uint64_t *)re::HashTable<re::StringID,re::StateParameterInt *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::tryGet((uint64_t)&unk_2687A0D30, v24);
          if (v16)
          {
            uint64_t v17 = *v16;
            *((void *)&v22 + 1) = v17;
          }
          else
          {
            long long v25 = v23;
            re::TypeBuilder::beginListType((uint64_t)&v26, v24, 1, 0x28uLL, 8uLL, &v25);
            re::TypeBuilder::setConstructor((uint64_t)&v26, (uint64_t)re::TypeBuilderHelper::registerDynamicArray<re::ecs2::SyncAccessControlEntry>(re::TypeRegistry *,re::StringID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#1}::__invoke);
            re::TypeBuilder::setDestructor((uint64_t)&v26, (uint64_t)re::TypeBuilderHelper::registerDynamicArray<re::ecs2::SyncAccessControlEntry>(re::TypeRegistry *,re::StringID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#2}::__invoke);
            re::TypeBuilder::setListUsesContiguousStorage((uint64_t)&v26, 1);
            re::TypeBuilder::setListAccessors((uint64_t)&v26, (uint64_t)re::TypeBuilderHelper::registerDynamicArray<re::ecs2::SyncAccessControlEntry>(re::TypeRegistry *,re::StringID const&,re::TypeID const&)::{lambda(void *)#1}::__invoke, (uint64_t)re::TypeBuilderHelper::registerDynamicArray<re::ecs2::SyncAccessControlEntry>(re::TypeRegistry *,re::StringID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,unsigned long)#1}::__invoke);
            re::TypeBuilder::setListIndexer((uint64_t)&v26, (void *(*)(void *, unint64_t))re::TypeBuilderHelper::registerDynamicArray<re::ecs2::SyncAccessControlEntry>(re::TypeRegistry *,re::StringID const&,re::TypeID const&)::{lambda(void *,unsigned long)#1}::__invoke);
            re::TypeBuilder::setListIterator((uint64_t)&v26, (void *(*)(void *, re::Allocator *))re::TypeBuilderHelper::registerDynamicArray<re::ecs2::SyncAccessControlEntry>(re::TypeRegistry *,re::StringID const&,re::TypeID const&)::{lambda(void *,re::Allocator *)#1}::__invoke, (void *(*)(void *))re::TypeBuilderHelper::registerDynamicArray<re::ecs2::SyncAccessControlEntry>(re::TypeRegistry *,re::StringID const&,re::TypeID const&)::{lambda(void *)#2}::__invoke, (void (*)(void *, re::Allocator *))re::TypeBuilderHelper::registerDynamicArray<re::ecs2::SyncAccessControlEntry>(re::TypeRegistry *,re::StringID const&,re::TypeID const&)::{lambda(void *,re::Allocator *)#2}::__invoke);
            re::TypeBuilder::~TypeBuilder((re::TypeBuilder *)&v26, v18);
          }
          xmmword_26AF82170 = v22;
          re::StringID::destroyString((re::StringID *)v24);
        }
      }
      uint64_t v19 = (*(uint64_t (**)(re::ecs2 *, uint64_t, uint64_t))(*(void *)v9 + 32))(v9, 72, 8);
      *(_DWORD *)uint64_t v19 = 1;
      *(void *)(v19 + 8) = "m_accessList";
      *(void *)(v19 + 16) = qword_26AF82150;
      *(void *)(v19 + 24) = 0;
      *(void *)(v19 + 32) = 0x800000002;
      *(_DWORD *)(v19 + 40) = 0;
      *(void *)(v19 + 48) = 0;
      *(void *)(v19 + 56) = 0;
      *(_DWORD *)(v19 + 64) = 0;
      qword_26AF82148 = v19;
      __cxa_guard_release(&qword_26AF82108);
    }
  }
  *((void *)this + 2) = 0x3000000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 2;
  *((void *)this + 8) = &qword_26AF82140;
  *((void *)this + 9) = re::internal::defaultConstruct<re::ecs2::SyncAccessControl>;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 10) = re::internal::defaultDestruct<re::ecs2::SyncAccessControl>;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::ecs2::SyncAccessControl>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::ecs2::SyncAccessControl>;
  re::IntrospectionRegistry::add(this, v3);
  long long v20 = v21;
}

void re::internal::defaultConstruct<re::ecs2::SyncAccessControl>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a3 = 0;
  *(void *)(a3 + 40) = 0;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 8) = 0;
  *(_DWORD *)(a3 + 32) = 0;
}

uint64_t re::internal::defaultDestruct<re::ecs2::SyncAccessControl>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return re::DynamicArray<unsigned long>::deinit(a3 + 8);
}

uint64_t re::internal::defaultConstructV2<re::ecs2::SyncAccessControl>(uint64_t result)
{
  *(_DWORD *)BOOL result = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t re::internal::defaultDestructV2<re::ecs2::SyncAccessControl>(uint64_t a1)
{
  return re::DynamicArray<unsigned long>::deinit(a1 + 8);
}

uint64_t re::ecs2::introspect_SyncAccessControl(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"SyncAccessControl", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_SyncAccessControl, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_SyncAccessControl, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::SyncAccessControl>, this);
}

void *re::DynamicArray<re::ecs2::SyncAccessControlEntry>::removeStableAt(void *result, unint64_t a2)
{
  unint64_t v2 = result[2];
  if (v2 <= a2)
  {
    os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
    _os_log_send_and_compose_impl();
    _os_crash_msg();
    __break(1u);
  }
  uint64_t v3 = result;
  uint64_t v4 = v2 - 1;
  if (v2 - 1 > a2)
  {
    BOOL result = (void *)(result[4] + 16 * a2);
    uint64_t v5 = 16 * v2 - (16 * a2 + 16);
    if (v5)
    {
      BOOL result = memmove(result, result + 2, v5 - 4);
      uint64_t v4 = v3[2] - 1;
    }
  }
  v3[2] = v4;
  ++*((_DWORD *)v3 + 6);
  return result;
}

void std::__introsort<std::_ClassicAlgPolicy,std::__less<void,void> &,re::ecs2::SyncAccessControlEntry *,false>(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  while (2)
  {
    unint64_t v11 = a1;
    while (1)
    {
      while (1)
      {
        while (1)
        {
          a1 = v11;
          uint64_t v12 = a2 - v11;
          unint64_t v13 = (uint64_t)(a2 - v11) >> 4;
          if (v6 || !v5)
          {
            switch(v13)
            {
              case 0uLL:
              case 1uLL:
                return;
              case 2uLL:
                unint64_t v58 = *(void *)(a2 - 16);
                unint64_t v57 = a2 - 16;
                int v59 = *(_DWORD *)(v57 + 8);
                BOOL v60 = v58 < *(void *)v11;
                if (v59 != *(_DWORD *)(v11 + 8)) {
                  BOOL v60 = v59 == 1;
                }
                if (v60)
                {
                  long long v140 = *(_OWORD *)v11;
                  uint64_t v61 = *(void *)v57;
                  *(_DWORD *)(v11 + 8) = *(_DWORD *)(v57 + 8);
                  *(void *)unint64_t v11 = v61;
                  *(_DWORD *)(v57 + 8) = DWORD2(v140);
                  *(void *)unint64_t v57 = v140;
                }
                break;
              case 3uLL:
                std::__sort3[abi:nn180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,re::ecs2::SyncAccessControlEntry *>((long long *)v11, (long long *)(v11 + 16), a2 - 16);
                break;
              case 4uLL:
                std::__sort4[abi:nn180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,re::ecs2::SyncAccessControlEntry *>(v11, v11 + 16, v11 + 32, a2 - 16);
                break;
              case 5uLL:
                std::__sort5[abi:nn180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,re::ecs2::SyncAccessControlEntry *>(v11, v11 + 16, v11 + 32, v11 + 48, a2 - 16);
                break;
              default:
                JUMPOUT(0);
            }
            return;
          }
          if (v12 <= 383)
          {
            unint64_t v62 = v11 + 16;
            BOOL v64 = v11 == a2 || v62 == a2;
            if (a5)
            {
              if (!v64)
              {
                uint64_t v65 = 0;
                unint64_t v66 = v11;
                do
                {
                  int v67 = *(_DWORD *)(v66 + 24);
                  int v68 = *(_DWORD *)(v66 + 8);
                  unint64_t v69 = *(void *)(v66 + 16);
                  unint64_t v70 = *(void *)v66;
                  unint64_t v66 = v62;
                  BOOL v71 = v67 == 1;
                  BOOL v72 = v69 < v70;
                  if (v67 == v68) {
                    BOOL v71 = v72;
                  }
                  if (v71)
                  {
                    uint64_t v73 = v65;
                    while (1)
                    {
                      uint64_t v74 = v11 + v73;
                      *(void *)(v74 + 16) = *(void *)(v11 + v73);
                      *(_DWORD *)(v74 + 24) = *(_DWORD *)(v11 + v73 + 8);
                      if (!v73) {
                        break;
                      }
                      int v75 = *(_DWORD *)(v74 - 8);
                      BOOL v76 = v69 < *(void *)(v74 - 16);
                      if (v67 != v75) {
                        BOOL v76 = v67 == 1;
                      }
                      v73 -= 16;
                      if (!v76)
                      {
                        uint64_t v77 = v11 + v73 + 16;
                        goto LABEL_112;
                      }
                    }
                    uint64_t v77 = v11;
LABEL_112:
                    *(void *)uint64_t v77 = v69;
                    *(_DWORD *)(v77 + 8) = v67;
                  }
                  unint64_t v62 = v66 + 16;
                  v65 += 16;
                }
                while (v66 + 16 != a2);
              }
            }
            else if (!v64)
            {
              do
              {
                int v125 = *(_DWORD *)(a1 + 24);
                int v126 = *(_DWORD *)(a1 + 8);
                unint64_t v127 = *(void *)(a1 + 16);
                unint64_t v128 = *(void *)a1;
                a1 = v62;
                BOOL v129 = v125 == 1;
                BOOL v130 = v127 < v128;
                if (v125 == v126) {
                  BOOL v129 = v130;
                }
                if (v129)
                {
                  unint64_t v131 = a1;
                  do
                  {
                    unint64_t v132 = v131;
                    uint64_t v133 = *(void *)(v131 - 16);
                    v131 -= 16;
                    *(void *)unint64_t v132 = v133;
                    *(_DWORD *)(v132 + 8) = *(_DWORD *)(v132 - 8);
                    int v134 = *(_DWORD *)(v132 - 24);
                    BOOL v135 = v127 < *(void *)(v132 - 32);
                    if (v125 != v134) {
                      BOOL v135 = v125 == 1;
                    }
                  }
                  while (v135);
                  *(void *)unint64_t v131 = v127;
                  *(_DWORD *)(v131 + 8) = v125;
                }
                unint64_t v62 = a1 + 16;
              }
              while (a1 + 16 != a2);
            }
            return;
          }
          if (!a4)
          {
            if (v11 != a2)
            {
              int64_t v78 = (v13 - 2) >> 1;
              int64_t v79 = v78;
              do
              {
                int64_t v80 = v79;
                if (v78 >= v79)
                {
                  uint64_t v81 = (2 * v79) | 1;
                  unint64_t v82 = v11 + 16 * v81;
                  if (2 * v80 + 2 < (uint64_t)v13)
                  {
                    int v83 = *(_DWORD *)(v82 + 8);
                    if (v83 == *(_DWORD *)(v82 + 24)) {
                      BOOL v84 = *(void *)v82 < *(void *)(v82 + 16);
                    }
                    else {
                      BOOL v84 = v83 == 1;
                    }
                    if (v84) {
                      unint64_t v85 = *(void *)(v82 + 16);
                    }
                    else {
                      unint64_t v85 = *(void *)v82;
                    }
                    if (v84)
                    {
                      v82 += 16;
                      uint64_t v81 = 2 * v80 + 2;
                    }
                  }
                  else
                  {
                    unint64_t v85 = *(void *)v82;
                  }
                  unint64_t v86 = v11 + 16 * v80;
                  int v87 = *(_DWORD *)(v82 + 8);
                  int v88 = *(_DWORD *)(v86 + 8);
                  unint64_t v89 = *(void *)v86;
                  BOOL v90 = v85 < *(void *)v86;
                  if (v87 != v88) {
                    BOOL v90 = v87 == 1;
                  }
                  if (!v90)
                  {
                    do
                    {
                      unint64_t v91 = v86;
                      unint64_t v86 = v82;
                      unint64_t v92 = *(void *)v82;
                      *(_DWORD *)(v91 + 8) = *(_DWORD *)(v86 + 8);
                      *(void *)unint64_t v91 = v92;
                      if (v78 < v81) {
                        break;
                      }
                      uint64_t v93 = (2 * v81) | 1;
                      unint64_t v82 = v11 + 16 * v93;
                      uint64_t v81 = 2 * v81 + 2;
                      if (v81 < (uint64_t)v13)
                      {
                        int v94 = *(_DWORD *)(v82 + 8);
                        BOOL v95 = v94 == *(_DWORD *)(v82 + 24) ? *(void *)v82 < *(void *)(v82 + 16) : v94 == 1;
                        BOOL v96 = !v95;
                        unint64_t v97 = v95 ? *(void *)(v82 + 16) : *(void *)v82;
                        if (v96) {
                          uint64_t v81 = v93;
                        }
                        else {
                          v82 += 16;
                        }
                      }
                      else
                      {
                        unint64_t v97 = *(void *)v82;
                        uint64_t v81 = v93;
                      }
                      int v98 = *(_DWORD *)(v82 + 8);
                      BOOL v99 = v97 < v89;
                      int v100 = v98 == v88 ? v99 : v98 == 1;
                    }
                    while (v100 != 1);
                    *(void *)unint64_t v86 = v89;
                    *(_DWORD *)(v86 + 8) = v88;
                  }
                }
                int64_t v79 = v80 - 1;
              }
              while (v80);
              uint64_t v101 = (unint64_t)v12 >> 4;
              do
              {
                uint64_t v102 = 0;
                long long v141 = *(_OWORD *)v11;
                uint64_t v103 = v101 - 2;
                if (v101 < 2) {
                  uint64_t v103 = v101 - 1;
                }
                uint64_t v104 = v103 >> 1;
                unint64_t v105 = v11;
                do
                {
                  unint64_t v106 = v105 + 16 * (v102 + 1);
                  uint64_t v107 = (2 * v102) | 1;
                  uint64_t v108 = 2 * v102 + 2;
                  if (v108 < v101)
                  {
                    int v109 = *(_DWORD *)(v106 + 8);
                    if (v109 == *(_DWORD *)(v106 + 24) ? *(void *)v106 < *(void *)(v106 + 16) : v109 == 1)
                    {
                      v106 += 16;
                      uint64_t v107 = v108;
                    }
                  }
                  unint64_t v111 = *(void *)v106;
                  *(_DWORD *)(v105 + 8) = *(_DWORD *)(v106 + 8);
                  *(void *)unint64_t v105 = v111;
                  unint64_t v105 = v106;
                  uint64_t v102 = v107;
                }
                while (v107 <= v104);
                a2 -= 16;
                if (v106 == a2)
                {
                  *(_DWORD *)(v106 + 8) = DWORD2(v141);
                  *(void *)unint64_t v106 = v141;
                }
                else
                {
                  uint64_t v112 = *(void *)a2;
                  *(_DWORD *)(v106 + 8) = *(_DWORD *)(a2 + 8);
                  *(void *)unint64_t v106 = v112;
                  *(_DWORD *)(a2 + 8) = DWORD2(v141);
                  *(void *)a2 = v141;
                  uint64_t v113 = v106 - v11 + 16;
                  if (v113 >= 17)
                  {
                    unint64_t v114 = (((unint64_t)v113 >> 4) - 2) >> 1;
                    unint64_t v115 = v11 + 16 * v114;
                    int v116 = *(_DWORD *)(v115 + 8);
                    int v117 = *(_DWORD *)(v106 + 8);
                    unint64_t v118 = *(void *)v106;
                    if (v116 == v117 ? *(void *)v115 < *(void *)v106 : v116 == 1)
                    {
                      do
                      {
                        unint64_t v120 = v106;
                        unint64_t v106 = v115;
                        uint64_t v121 = *(void *)v115;
                        *(_DWORD *)(v120 + 8) = *(_DWORD *)(v106 + 8);
                        *(void *)unint64_t v120 = v121;
                        if (!v114) {
                          break;
                        }
                        unint64_t v114 = (v114 - 1) >> 1;
                        unint64_t v115 = v11 + 16 * v114;
                        int v122 = *(_DWORD *)(v115 + 8);
                      }
                      while (v122 == v117 ? *(void *)v115 < v118 : v122 == 1);
                      *(void *)unint64_t v106 = v118;
                      *(_DWORD *)(v106 + 8) = v117;
                    }
                  }
                }
              }
              while (v101-- > 2);
            }
            return;
          }
          unint64_t v14 = v13 >> 1;
          unint64_t v15 = v11 + 16 * (v13 >> 1);
          if ((unint64_t)v12 >= 0x801)
          {
            std::__sort3[abi:nn180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,re::ecs2::SyncAccessControlEntry *>((long long *)a1, (long long *)(a1 + 16 * (v13 >> 1)), a2 - 16);
            std::__sort3[abi:nn180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,re::ecs2::SyncAccessControlEntry *>((long long *)(a1 + 16), (long long *)(v15 - 16), a2 - 32);
            std::__sort3[abi:nn180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,re::ecs2::SyncAccessControlEntry *>((long long *)(a1 + 32), (long long *)(a1 + 16 + 16 * v14), a2 - 48);
            std::__sort3[abi:nn180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,re::ecs2::SyncAccessControlEntry *>((long long *)(v15 - 16), (long long *)v15, a1 + 16 + 16 * v14);
            long long v137 = *(_OWORD *)a1;
            uint64_t v16 = *(void *)v15;
            *(_DWORD *)(a1 + 8) = *(_DWORD *)(v15 + 8);
            *(void *)a1 = v16;
            *(_DWORD *)(v15 + 8) = DWORD2(v137);
            *(void *)unint64_t v15 = v137;
          }
          else
          {
            std::__sort3[abi:nn180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,re::ecs2::SyncAccessControlEntry *>((long long *)(a1 + 16 * (v13 >> 1)), (long long *)a1, a2 - 16);
          }
          --a4;
          unint64_t v17 = *(void *)a1;
          if (a5) {
            break;
          }
          int v19 = *(_DWORD *)(a1 - 8);
          int v18 = *(_DWORD *)(a1 + 8);
          if (v19 == v18) {
            BOOL v20 = *(void *)(a1 - 16) < v17;
          }
          else {
            BOOL v20 = v19 == 1;
          }
          if (v20) {
            goto LABEL_15;
          }
          if (v18 == *(_DWORD *)(a2 - 8)) {
            BOOL v42 = v17 < *(void *)(a2 - 16);
          }
          else {
            BOOL v42 = v18 == 1;
          }
          if (v42)
          {
            unint64_t v11 = a1;
            do
            {
              unint64_t v43 = *(void *)(v11 + 16);
              v11 += 16;
              BOOL v44 = v17 < v43;
              if (v18 != *(_DWORD *)(v11 + 8)) {
                BOOL v44 = v18 == 1;
              }
            }
            while (!v44);
          }
          else
          {
            unint64_t v45 = a1 + 16;
            do
            {
              unint64_t v11 = v45;
              if (v45 >= a2) {
                break;
              }
              BOOL v46 = v18 == *(_DWORD *)(v45 + 8) ? v17 < *(void *)v45 : v18 == 1;
              v45 += 16;
            }
            while (!v46);
          }
          unint64_t v47 = a2;
          if (v11 < a2)
          {
            unint64_t v47 = a2;
            do
            {
              unint64_t v48 = *(void *)(v47 - 16);
              v47 -= 16;
              BOOL v49 = v17 < v48;
              if (v18 != *(_DWORD *)(v47 + 8)) {
                BOOL v49 = v18 == 1;
              }
            }
            while (v49);
          }
          while (v11 < v47)
          {
            long long v139 = *(_OWORD *)v11;
            uint64_t v50 = *(void *)v47;
            *(_DWORD *)(v11 + 8) = *(_DWORD *)(v47 + 8);
            *(void *)unint64_t v11 = v50;
            *(_DWORD *)(v47 + 8) = DWORD2(v139);
            *(void *)unint64_t v47 = v139;
            do
            {
              BOOL v51 = v18 == 1;
              unint64_t v52 = *(void *)(v11 + 16);
              v11 += 16;
              BOOL v53 = v17 < v52;
              if (v18 == *(_DWORD *)(v11 + 8)) {
                BOOL v51 = v53;
              }
            }
            while (!v51);
            do
            {
              unint64_t v54 = *(void *)(v47 - 16);
              v47 -= 16;
              BOOL v55 = v17 < v54;
              if (v18 != *(_DWORD *)(v47 + 8)) {
                BOOL v55 = v18 == 1;
              }
            }
            while (v55);
          }
          BOOL v5 = v11 - 16 >= a1;
          BOOL v6 = v11 - 16 == a1;
          if (v11 - 16 != a1)
          {
            uint64_t v56 = *(void *)(v11 - 16);
            *(_DWORD *)(a1 + 8) = *(_DWORD *)(v11 - 8);
            *(void *)a1 = v56;
          }
          a5 = 0;
          *(void *)(v11 - 16) = v17;
          *(_DWORD *)(v11 - 8) = v18;
        }
        int v18 = *(_DWORD *)(a1 + 8);
LABEL_15:
        uint64_t v21 = 0;
        do
        {
          int v22 = *(_DWORD *)(a1 + v21 + 24);
          BOOL v23 = *(void *)(a1 + v21 + 16) < v17;
          if (v22 != v18) {
            BOOL v23 = v22 == 1;
          }
          v21 += 16;
        }
        while (v23);
        unint64_t v24 = a1 + v21;
        unint64_t v25 = a2;
        if (v21 == 16)
        {
          unint64_t v25 = a2;
          do
          {
            if (v24 >= v25) {
              break;
            }
            unint64_t v29 = *(void *)(v25 - 16);
            v25 -= 16;
            int v30 = *(_DWORD *)(v25 + 8);
            BOOL v31 = v29 < v17;
            if (v30 != v18) {
              BOOL v31 = v30 == 1;
            }
          }
          while (!v31);
        }
        else
        {
          do
          {
            unint64_t v26 = *(void *)(v25 - 16);
            v25 -= 16;
            int v27 = *(_DWORD *)(v25 + 8);
            BOOL v28 = v26 < v17;
            if (v27 != v18) {
              BOOL v28 = v27 == 1;
            }
          }
          while (!v28);
        }
        unint64_t v11 = v24;
        if (v24 < v25)
        {
          unint64_t v32 = v25;
          do
          {
            long long v138 = *(_OWORD *)v11;
            uint64_t v33 = *(void *)v32;
            *(_DWORD *)(v11 + 8) = *(_DWORD *)(v32 + 8);
            *(void *)unint64_t v11 = v33;
            *(_DWORD *)(v32 + 8) = DWORD2(v138);
            *(void *)unint64_t v32 = v138;
            do
            {
              unint64_t v34 = *(void *)(v11 + 16);
              v11 += 16;
              int v35 = *(_DWORD *)(v11 + 8);
              BOOL v36 = v34 < v17;
              if (v35 != v18) {
                BOOL v36 = v35 == 1;
              }
            }
            while (v36);
            do
            {
              unint64_t v37 = *(void *)(v32 - 16);
              v32 -= 16;
              int v38 = *(_DWORD *)(v32 + 8);
              BOOL v39 = v37 < v17;
              if (v38 != v18) {
                BOOL v39 = v38 == 1;
              }
            }
            while (!v39);
          }
          while (v11 < v32);
        }
        if (v11 - 16 != a1)
        {
          uint64_t v40 = *(void *)(v11 - 16);
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(v11 - 8);
          *(void *)a1 = v40;
        }
        *(void *)(v11 - 16) = v17;
        *(_DWORD *)(v11 - 8) = v18;
        if (v24 >= v25) {
          break;
        }
LABEL_44:
        std::__introsort<std::_ClassicAlgPolicy,std::__less<void,void> &,re::ecs2::SyncAccessControlEntry *,false>(a1, v11 - 16, a3, a4, a5 & 1);
        a5 = 0;
      }
      BOOL v41 = std::__insertion_sort_incomplete[abi:nn180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,re::ecs2::SyncAccessControlEntry *>(a1, v11 - 16);
      if (std::__insertion_sort_incomplete[abi:nn180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,re::ecs2::SyncAccessControlEntry *>(v11, a2))
      {
        break;
      }
      if (!v41) {
        goto LABEL_44;
      }
    }
    a2 = v11 - 16;
    if (!v41) {
      continue;
    }
    break;
  }
}

long long *std::__sort3[abi:nn180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,re::ecs2::SyncAccessControlEntry *>(long long *result, long long *a2, uint64_t a3)
{
  int v3 = *((_DWORD *)a2 + 2);
  if (v3 == *((_DWORD *)result + 2)) {
    BOOL v4 = *(void *)a2 < *(void *)result;
  }
  else {
    BOOL v4 = v3 == 1;
  }
  int v5 = *(_DWORD *)(a3 + 8);
  if (v5 == v3) {
    BOOL v6 = *(void *)a3 < *(void *)a2;
  }
  else {
    BOOL v6 = v5 == 1;
  }
  if (v4)
  {
    if (v6)
    {
      long long v16 = *result;
      int v7 = *(_DWORD *)(a3 + 8);
      *(void *)BOOL result = *(void *)a3;
      *((_DWORD *)result + 2) = v7;
LABEL_21:
      *(void *)a3 = v16;
      *(_DWORD *)(a3 + 8) = DWORD2(v16);
      return result;
    }
    long long v19 = *result;
    int v12 = *((_DWORD *)a2 + 2);
    *(void *)BOOL result = *(void *)a2;
    *((_DWORD *)result + 2) = v12;
    *(void *)a2 = v19;
    *((_DWORD *)a2 + 2) = DWORD2(v19);
    int v13 = *(_DWORD *)(a3 + 8);
    if (v13 == *((_DWORD *)a2 + 2)) {
      BOOL v14 = *(void *)a3 < *(void *)a2;
    }
    else {
      BOOL v14 = v13 == 1;
    }
    if (v14)
    {
      long long v16 = *a2;
      int v15 = *(_DWORD *)(a3 + 8);
      *(void *)a2 = *(void *)a3;
      *((_DWORD *)a2 + 2) = v15;
      goto LABEL_21;
    }
  }
  else if (v6)
  {
    long long v17 = *a2;
    int v8 = *(_DWORD *)(a3 + 8);
    *(void *)a2 = *(void *)a3;
    *((_DWORD *)a2 + 2) = v8;
    *(void *)a3 = v17;
    *(_DWORD *)(a3 + 8) = DWORD2(v17);
    int v9 = *((_DWORD *)a2 + 2);
    if (v9 == *((_DWORD *)result + 2) ? *(void *)a2 < *(void *)result : v9 == 1)
    {
      long long v18 = *result;
      int v11 = *((_DWORD *)a2 + 2);
      *(void *)BOOL result = *(void *)a2;
      *((_DWORD *)result + 2) = v11;
      *(void *)a2 = v18;
      *((_DWORD *)a2 + 2) = DWORD2(v18);
    }
  }
  return result;
}

BOOL std::__insertion_sort_incomplete[abi:nn180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,re::ecs2::SyncAccessControlEntry *>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (a2 - a1) >> 4;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      BOOL v6 = (void *)(a2 - 16);
      int v7 = *(_DWORD *)(a2 - 8);
      BOOL v8 = *(void *)(a2 - 16) < *(void *)a1;
      if (v7 != *(_DWORD *)(a1 + 8)) {
        BOOL v8 = v7 == 1;
      }
      if (v8)
      {
        long long v22 = *(_OWORD *)a1;
        int v9 = *(_DWORD *)(a2 - 8);
        *(void *)a1 = *v6;
        *(_DWORD *)(a1 + 8) = v9;
        void *v6 = v22;
        *(_DWORD *)(a2 - 8) = DWORD2(v22);
      }
      return result;
    case 3:
      std::__sort3[abi:nn180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,re::ecs2::SyncAccessControlEntry *>((long long *)a1, (long long *)(a1 + 16), a2 - 16);
      return 1;
    case 4:
      std::__sort4[abi:nn180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,re::ecs2::SyncAccessControlEntry *>(a1, a1 + 16, a1 + 32, a2 - 16);
      return 1;
    case 5:
      std::__sort5[abi:nn180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,re::ecs2::SyncAccessControlEntry *>(a1, a1 + 16, a1 + 32, a1 + 48, a2 - 16);
      return 1;
    default:
      uint64_t v10 = a1 + 32;
      std::__sort3[abi:nn180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,re::ecs2::SyncAccessControlEntry *>((long long *)a1, (long long *)(a1 + 16), a1 + 32);
      uint64_t v11 = a1 + 48;
      if (a1 + 48 == a2) {
        return 1;
      }
      uint64_t v12 = 0;
      int v13 = 0;
      break;
  }
  while (1)
  {
    int v14 = *(_DWORD *)(v11 + 8);
    unint64_t v15 = *(void *)v11;
    if (v14 == *(_DWORD *)(v10 + 8) ? *(void *)v11 < *(void *)v10 : v14 == 1)
    {
      uint64_t v17 = v12;
      while (1)
      {
        uint64_t v18 = a1 + v17;
        *(void *)(v18 + 48) = *(void *)(a1 + v17 + 32);
        *(_DWORD *)(v18 + 56) = *(_DWORD *)(a1 + v17 + 40);
        if (v17 == -32) {
          break;
        }
        int v19 = *(_DWORD *)(v18 + 24);
        BOOL v20 = v15 < *(void *)(v18 + 16);
        if (v14 != v19) {
          BOOL v20 = v14 == 1;
        }
        v17 -= 16;
        if (!v20)
        {
          uint64_t v21 = a1 + v17 + 48;
          goto LABEL_19;
        }
      }
      uint64_t v21 = a1;
LABEL_19:
      *(void *)uint64_t v21 = v15;
      *(_DWORD *)(v21 + 8) = v14;
      if (++v13 == 8) {
        return v11 + 16 == a2;
      }
    }
    uint64_t v10 = v11;
    v12 += 16;
    v11 += 16;
    if (v11 == a2) {
      return 1;
    }
  }
}

__n128 std::__sort4[abi:nn180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,re::ecs2::SyncAccessControlEntry *>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  std::__sort3[abi:nn180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,re::ecs2::SyncAccessControlEntry *>((long long *)a1, (long long *)a2, a3);
  int v9 = *(_DWORD *)(a4 + 8);
  if (v9 == *(_DWORD *)(a3 + 8)) {
    BOOL v10 = *(void *)a4 < *(void *)a3;
  }
  else {
    BOOL v10 = v9 == 1;
  }
  if (v10)
  {
    __n128 result = *(__n128 *)a3;
    __n128 v18 = *(__n128 *)a3;
    int v11 = *(_DWORD *)(a4 + 8);
    *(void *)a3 = *(void *)a4;
    *(_DWORD *)(a3 + 8) = v11;
    *(void *)a4 = v18.n128_u64[0];
    *(_DWORD *)(a4 + 8) = v18.n128_u32[2];
    int v12 = *(_DWORD *)(a3 + 8);
    if (v12 == *(_DWORD *)(a2 + 8) ? *(void *)a3 < *(void *)a2 : v12 == 1)
    {
      __n128 result = *(__n128 *)a2;
      long long v19 = *(_OWORD *)a2;
      int v14 = *(_DWORD *)(a3 + 8);
      *(void *)a2 = *(void *)a3;
      *(_DWORD *)(a2 + 8) = v14;
      *(void *)a3 = v19;
      *(_DWORD *)(a3 + 8) = DWORD2(v19);
      int v15 = *(_DWORD *)(a2 + 8);
      if (v15 == *(_DWORD *)(a1 + 8)) {
        BOOL v16 = *(void *)a2 < *(void *)a1;
      }
      else {
        BOOL v16 = v15 == 1;
      }
      if (v16)
      {
        __n128 result = *(__n128 *)a1;
        long long v20 = *(_OWORD *)a1;
        int v17 = *(_DWORD *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(_DWORD *)(a1 + 8) = v17;
        *(void *)a2 = v20;
        *(_DWORD *)(a2 + 8) = DWORD2(v20);
      }
    }
  }
  return result;
}

__n128 std::__sort5[abi:nn180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,re::ecs2::SyncAccessControlEntry *>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  result.n128_u64[0] = std::__sort4[abi:nn180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,re::ecs2::SyncAccessControlEntry *>(a1, a2, a3, a4).n128_u64[0];
  int v11 = *(_DWORD *)(a5 + 8);
  if (v11 == *(_DWORD *)(a4 + 8)) {
    BOOL v12 = *(void *)a5 < *(void *)a4;
  }
  else {
    BOOL v12 = v11 == 1;
  }
  if (v12)
  {
    __n128 result = *(__n128 *)a4;
    __n128 v23 = *(__n128 *)a4;
    int v13 = *(_DWORD *)(a5 + 8);
    *(void *)a4 = *(void *)a5;
    *(_DWORD *)(a4 + 8) = v13;
    *(void *)a5 = v23.n128_u64[0];
    *(_DWORD *)(a5 + 8) = v23.n128_u32[2];
    int v14 = *(_DWORD *)(a4 + 8);
    if (v14 == *(_DWORD *)(a3 + 8) ? *(void *)a4 < *(void *)a3 : v14 == 1)
    {
      __n128 result = *(__n128 *)a3;
      __n128 v24 = *(__n128 *)a3;
      int v16 = *(_DWORD *)(a4 + 8);
      *(void *)a3 = *(void *)a4;
      *(_DWORD *)(a3 + 8) = v16;
      *(void *)a4 = v24.n128_u64[0];
      *(_DWORD *)(a4 + 8) = v24.n128_u32[2];
      int v17 = *(_DWORD *)(a3 + 8);
      if (v17 == *(_DWORD *)(a2 + 8) ? *(void *)a3 < *(void *)a2 : v17 == 1)
      {
        __n128 result = *(__n128 *)a2;
        __n128 v25 = *(__n128 *)a2;
        int v19 = *(_DWORD *)(a3 + 8);
        *(void *)a2 = *(void *)a3;
        *(_DWORD *)(a2 + 8) = v19;
        *(void *)a3 = v25.n128_u64[0];
        *(_DWORD *)(a3 + 8) = v25.n128_u32[2];
        int v20 = *(_DWORD *)(a2 + 8);
        if (v20 == *(_DWORD *)(a1 + 8)) {
          BOOL v21 = *(void *)a2 < *(void *)a1;
        }
        else {
          BOOL v21 = v20 == 1;
        }
        if (v21)
        {
          __n128 result = *(__n128 *)a1;
          __n128 v26 = *(__n128 *)a1;
          int v22 = *(_DWORD *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(_DWORD *)(a1 + 8) = v22;
          *(void *)a2 = v26.n128_u64[0];
          *(_DWORD *)(a2 + 8) = v26.n128_u32[2];
        }
      }
    }
  }
  return result;
}

void *re::IntrospectionDynamicArray<re::ecs2::SyncAccessControlEntry>::~IntrospectionDynamicArray(void *a1)
{
  *a1 = &unk_26E6BFB78;
  re::SerializedReference<re::IntrospectionBase const*>::reset((uint64_t)(a1 + 6));
  *a1 = &unk_26E6DECE0;
  objc_destructInstance(a1 + 1);
  return a1;
}

void re::IntrospectionDynamicArray<re::ecs2::SyncAccessControlEntry>::~IntrospectionDynamicArray(void *a1)
{
  *a1 = &unk_26E6BFB78;
  re::SerializedReference<re::IntrospectionBase const*>::reset((uint64_t)(a1 + 6));
  *a1 = &unk_26E6DECE0;
  objc_destructInstance(a1 + 1);
  JUMPOUT(0x237DBCBD0);
}

void re::IntrospectionDynamicArray<re::ecs2::SyncAccessControlEntry>::construct(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  *(_DWORD *)(a2 + 24) = 0;
}

uint64_t re::IntrospectionDynamicArray<re::ecs2::SyncAccessControlEntry>::destroy(uint64_t a1, uint64_t a2)
{
  return re::DynamicArray<unsigned long>::deinit(a2);
}

void *re::IntrospectionDynamicArray<re::ecs2::SyncAccessControlEntry>::init(uint64_t a1, uint64_t a2, uint64_t a3)
{
  re::DynamicArray<unsigned long>::deinit(a2);
  *(void *)a2 = a3;
  __n128 result = re::DynamicArray<re::RigNodeConstraint>::setCapacity((void *)a2, 0);
  ++*(_DWORD *)(a2 + 24);
  return result;
}

void *re::IntrospectionDynamicArray<re::ecs2::SyncAccessControlEntry>::resize(void *result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  int v9 = result;
  if (!*(void *)a4)
  {
    *(void *)a4 = a2;
    __n128 result = re::DynamicArray<re::RigNodeConstraint>::setCapacity((void *)a4, a5);
    ++*(_DWORD *)(a4 + 24);
  }
  unint64_t v10 = *(void *)(a4 + 16);
  if (v10 >= a5)
  {
    if (v10 > a5)
    {
      return re::DynamicArray<re::ecs2::SyncAccessControlEntry>::resize((void *)a4, a5);
    }
  }
  else
  {
    __n128 result = re::DynamicArray<re::RigNodeConstraint>::setCapacity((void *)a4, a5);
    for (unint64_t i = a5 - *(void *)(a4 + 16); i; --i)
      __n128 result = (void *)(*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*v9 + 80))(v9, a2, a3, a4);
  }
  return result;
}

re::IntrospectionBase *re::IntrospectionDynamicArray<re::ecs2::SyncAccessControlEntry>::addElement(uint64_t a1, re *a2, int a3, _anonymous_namespace_ *this)
{
  unint64_t v8 = *((void *)this + 2);
  if (v8 >= *((void *)this + 1))
  {
    re::DynamicArray<re::RigNodeConstraint>::growCapacity(this, v8 + 1);
    unint64_t v8 = *((void *)this + 2);
  }
  int v9 = (void *)(*((void *)this + 4) + 16 * v8);
  *int v9 = 0;
  v9[1] = 0;
  uint64_t v10 = *((void *)this + 2);
  *((void *)this + 2) = v10 + 1;
  ++*((_DWORD *)this + 6);
  int v11 = (re::IntrospectionBase *)(*((void *)this + 4) + 16 * v10);
  re::introspectionInitElement(a2, a3, *(re::Allocator **)(a1 + 48), v11);
  return v11;
}

uint64_t re::IntrospectionDynamicArray<re::ecs2::SyncAccessControlEntry>::size(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 16);
}

uint64_t re::IntrospectionDynamicArray<re::ecs2::SyncAccessControlEntry>::elementAt(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (*(void *)(a2 + 16) <= a3)
  {
    os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
    _os_log_send_and_compose_impl();
    _os_crash_msg();
    __break(1u);
  }
  return *(void *)(a2 + 32) + 16 * a3;
}

{
  if (*(void *)(a2 + 16) <= a3)
  {
    os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
    _os_log_send_and_compose_impl();
    _os_crash_msg();
    __break(1u);
  }
  return *(void *)(a2 + 32) + 16 * a3;
}

void *re::DynamicArray<re::ecs2::SyncAccessControlEntry>::resize(void *result, unint64_t a2)
{
  int v3 = result;
  unint64_t v4 = result[2];
  if (v4 >= a2)
  {
    if (v4 <= a2) {
      return result;
    }
  }
  else
  {
    if (result[1] < a2)
    {
      __n128 result = re::DynamicArray<re::RigNodeConstraint>::setCapacity(result, a2);
      unint64_t v4 = v3[2];
    }
    if (v4 < a2)
    {
      uint64_t v5 = v3[4];
      uint64_t v6 = v5 + 16 * v4;
      uint64_t v7 = v5 + 16 * a2 - v6;
      if (v7 >= 1)
      {
        unint64_t v8 = ((unint64_t)v7 >> 4) + 1;
        do
        {
          *(void *)uint64_t v6 = 0;
          *(_DWORD *)(v6 + 8) = 0;
          --v8;
          v6 += 16;
        }
        while (v8 > 1);
      }
    }
  }
  v3[2] = a2;
  ++*((_DWORD *)v3 + 6);
  return result;
}

void *re::TypeBuilderHelper::registerDynamicArray<re::ecs2::SyncAccessControlEntry>(re::TypeRegistry *,re::StringID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#1}::__invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)a1 = a3;
  __n128 result = re::DynamicArray<re::RigNodeConstraint>::setCapacity((void *)a1, 0);
  ++*(_DWORD *)(a1 + 24);
  return result;
}

uint64_t re::TypeBuilderHelper::registerDynamicArray<re::ecs2::SyncAccessControlEntry>(re::TypeRegistry *,re::StringID const&,re::TypeID const&)::{lambda(void *)#1}::__invoke(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

void re::TypeBuilderHelper::registerDynamicArray<re::ecs2::SyncAccessControlEntry>(re::TypeRegistry *,re::StringID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,unsigned long)#1}::__invoke(uint64_t a1, uint64_t a2, re::Allocator *a3, unint64_t a4)
{
  if (*(re::Allocator **)a1 == a3)
  {
    *(void *)(a1 + 16) = 0;
  }
  else
  {
    re::DynamicArray<unsigned long>::deinit(a1);
    *(void *)a1 = a3;
    re::DynamicArray<re::RigNodeConstraint>::setCapacity((void *)a1, a4);
  }
  ++*(_DWORD *)(a1 + 24);
  unint64_t v8 = (_anonymous_namespace_ *)re::DynamicArray<re::ecs2::SyncAccessControlEntry>::resize((void *)a1, a4);
  {
    re::TypeRegistry::typeInfo(*(void **)a2, *(void *)(*(void *)(a2 + 16) + 72), v13);
    re::TypeInfo::TypeInfo((uint64_t)v12, (uint64_t)&v14);
    uint64_t v9 = *(void *)(a1 + 16);
    if (v9)
    {
      uint64_t v10 = *(char **)(a1 + 32);
      uint64_t v11 = 16 * v9;
      do
      {
        re::TypeInfo::destruct((re::TypeInfo *)v12, v10, a3, 0);
        re::TypeInfo::construct((re::TypeInfo *)v12, (void **)v10, a3, 0);
        v10 += 16;
        v11 -= 16;
      }
      while (v11);
    }
  }
}

uint64_t re::TypeBuilderHelper::registerDynamicArray<re::ecs2::SyncAccessControlEntry>(re::TypeRegistry *,re::StringID const&,re::TypeID const&)::{lambda(void *,unsigned long)#1}::__invoke(uint64_t a1, unint64_t a2)
{
  if (*(void *)(a1 + 16) <= a2)
  {
    os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
    _os_log_send_and_compose_impl();
    _os_crash_msg();
    __break(1u);
  }
  return *(void *)(a1 + 32) + 16 * a2;
}

uint64_t re::TypeBuilderHelper::registerDynamicArray<re::ecs2::SyncAccessControlEntry>(re::TypeRegistry *,re::StringID const&,re::TypeID const&)::{lambda(void *,re::Allocator *)#1}::__invoke(uint64_t a1, uint64_t a2)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a2 + 32))(a2, 16, 8);
  *(void *)uint64_t result = a1;
  *(_DWORD *)(result + 8) = *(_DWORD *)(a1 + 24);
  *(_DWORD *)(result + 12) = -1;
  return result;
}

uint64_t re::TypeBuilderHelper::registerDynamicArray<re::ecs2::SyncAccessControlEntry>(re::TypeRegistry *,re::StringID const&,re::TypeID const&)::{lambda(void *)#2}::__invoke(_DWORD *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  if (a1[2] == *(_DWORD *)(*(void *)a1 + 24))
  {
    int v3 = a1[3];
    unint64_t v4 = *(void *)(v2 + 16);
    if (v3 < (int)v4) {
      a1[3] = ++v3;
    }
    if (v4 <= v3) {
      return 0;
    }
    else {
      return *(void *)(v2 + 32) + 16 * v3;
    }
  }
  else
  {
    re::internal::assertLog((re::internal *)4, a2, "assertion failure: '%s' (%s:line %i) DynamicArray elements may not be added or removed during iteration.", "iter->originalVersion == iter->array->version()", "operator()", 313);
    uint64_t result = _os_crash();
    __break(1u);
  }
  return result;
}

uint64_t re::TypeBuilderHelper::registerDynamicArray<re::ecs2::SyncAccessControlEntry>(re::TypeRegistry *,re::StringID const&,re::TypeID const&)::{lambda(void *,re::Allocator *)#2}::__invoke(uint64_t result, uint64_t a2)
{
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 40))(a2, result);
  }
  return result;
}

void re::ecs2::AnimationLibraryComponent::constructAnimationLibraryMeshMapping(re::ecs2::AnimationLibraryComponent *this)
{
  if (!*((void *)this + 13))
  {
    uint64_t v2 = (_anonymous_namespace_ *)re::AssetHandle::loadedAsset<re::AnimationLibraryAsset>((re::ecs2::AnimationLibraryComponent *)((char *)this + 32));
    if (v2)
    {
      uint64_t v3 = *(void *)(*((void *)this + 2) + 176);
      if (v3)
      {
        unint64_t v4 = v2;
        uint64_t v5 = (const re::MeshAsset *)re::AssetHandle::loadedAsset<re::MeshAsset>((re::MeshAsset *)(v3 + 32));
        if (v5)
        {
          unint64_t v6 = *(void *)(v3 + 40);
          if (v6) {
            uint64_t v7 = *(void *)(v6 + 664);
          }
          else {
            uint64_t v7 = 0;
          }
          unint64_t v8 = 0x94D049BB133111EBLL
             * ((0xBF58476D1CE4E5B9 * (v6 ^ (v6 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (v6 ^ (v6 >> 30))) >> 27));
          unint64_t v9 = v7 ^ (v8 >> 31) ^ v8;
          unint64_t v10 = *((void *)this + 5);
          if (v10) {
            uint64_t v11 = *(void *)(v10 + 664);
          }
          else {
            uint64_t v11 = 0;
          }
          unint64_t v12 = 0x94D049BB133111EBLL
              * ((0xBF58476D1CE4E5B9 * (v10 ^ (v10 >> 30))) ^ ((0xBF58476D1CE4E5B9 * (v10 ^ (v10 >> 30))) >> 27));
          uint64_t v13 = ((v9 << 6) + (v9 >> 2) + (v11 ^ (v12 >> 31) ^ v12) - 0x61C8864680B583E9) ^ v9;
          if (*((void *)this + 14) != v13)
          {
            re::AnimationLibraryMeshMapping::rebuildRuntimeData((void **)this + 7, v5, v4);
            *((void *)this + 14) = v13;
          }
        }
      }
      else
      {
        *((void *)this + 14) = -1;
      }
    }
  }
}

uint64_t re::AssetHandle::loadedAsset<re::AnimationLibraryAsset>(re::AnimationLibraryAsset *a1)
{
  if (!*((void *)a1 + 1)) {
    return 0;
  }
  uint64_t v2 = re::AnimationLibraryAsset::assetType(a1);
  return re::AssetHandle::assetWithType(a1, (const re::AssetType *)v2, 1);
}

uint64_t re::ecs2::AnimationLibrarySystem::update(uint64_t a1, re::ecs2::SceneComponentTable *a2)
{
  re::ProfilerTimeGuard<(re::ProfilerStatistic)20>::ProfilerTimeGuard(v11);
  a2 = (re::ecs2::SceneComponentTable *)((char *)a2 + 200);
  re::ecs2::SceneComponentTable::get(a2, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AnimationLibraryComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
  re::internal::AriadneSignpostScopeGuard::AriadneSignpostScopeGuard((re::internal::AriadneSignpostScopeGuard *)v10, 3031, a1);
  uint64_t v4 = re::ecs2::SceneComponentTable::get(a2, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AnimationLibraryComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
  if (v4)
  {
    uint64_t v5 = *(void *)(v4 + 24);
    if (v5)
    {
      unint64_t v6 = *(re::ecs2::AnimationLibraryComponent ***)(v4 + 40);
      uint64_t v7 = 8 * v5;
      do
      {
        unint64_t v8 = *v6++;
        re::ecs2::AnimationLibraryComponent::constructAnimationLibraryMeshMapping(v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
  re::internal::AriadneSignpostScopeGuard::~AriadneSignpostScopeGuard((re::internal::AriadneSignpostScopeGuard *)v10);
  return re::ProfilerTimeGuard<(re::ProfilerStatistic)125>::end((uint64_t)v11);
}

void *re::ecs2::allocInfo_AnimationLibraryComponent(re::ecs2 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&_MergedGlobals_169, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&_MergedGlobals_169))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF822F0, "AnimationLibraryComponent");
    __cxa_guard_release(&_MergedGlobals_169);
  }
  return &unk_26AF822F0;
}

void re::ecs2::initInfo_AnimationLibraryComponent(re::ecs2 *this, re::IntrospectionBase *a2)
{
  v13[0] = 0xC58860BB61AE40CLL;
  v13[1] = "AnimationLibraryComponent";
  re::StringID::destroyString((re::StringID *)v13);
  *((_OWORD *)this + 2) = v14;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF822D0, memory_order_acquire) & 1) == 0)
  {
    uint64_t v4 = (re *)__cxa_guard_acquire(&qword_26AF822D0);
    if (v4)
    {
      uint64_t v5 = re::introspectionAllocator(v4);
      uint64_t v6 = re::ecs2::introspect_Component((re::IntrospectionBase **)1);
      uint64_t v7 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v5 + 32))(v5, 72, 8);
      *(_DWORD *)uint64_t v7 = 1;
      *(void *)(v7 + 8) = "Component";
      *(void *)(v7 + 16) = v6;
      *(void *)(v7 + 24) = 0;
      *(void *)(v7 + 32) = 0;
      *(_DWORD *)(v7 + 40) = 3;
      *(void *)(v7 + 48) = 0;
      *(void *)(v7 + 56) = 0;
      *(_DWORD *)(v7 + 64) = 0;
      qword_26AF822E0 = v7;
      unint64_t v8 = re::introspectionAllocator((re *)v7);
      unint64_t v10 = re::introspect_AssetHandle((re *)1, v9);
      uint64_t v11 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v8 + 32))(v8, 72, 8);
      *(_DWORD *)uint64_t v11 = 1;
      *(void *)(v11 + 8) = "animationLibrary";
      *(void *)(v11 + 16) = v10;
      *(void *)(v11 + 24) = 0;
      *(void *)(v11 + 32) = 0x2000000001;
      *(_DWORD *)(v11 + 40) = 0;
      *(void *)(v11 + 48) = 0;
      *(void *)(v11 + 56) = 0;
      *(_DWORD *)(v11 + 64) = 0;
      qword_26AF822E8 = v11;
      __cxa_guard_release(&qword_26AF822D0);
    }
  }
  *((void *)this + 2) = 0x7800000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 2;
  *((void *)this + 8) = &qword_26AF822E0;
  *((void *)this + 9) = re::internal::defaultConstruct<re::ecs2::AnimationLibraryComponent>;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 10) = re::internal::defaultDestruct<re::ecs2::AnimationLibraryComponent>;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::ecs2::AnimationLibraryComponent>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::ecs2::AnimationLibraryComponent>;
  re::IntrospectionRegistry::add(this, v3);
  long long v12 = v14;
}

double re::internal::defaultConstruct<re::ecs2::AnimationLibraryComponent>(int a1, int a2, ArcSharedObject *this)
{
  *((void *)this + 14) = 0;
  *((_OWORD *)this + 5) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *(_OWORD *)this = 0u;
  ArcSharedObject::ArcSharedObject(this, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6DFB38;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 76) = 0u;
  *(void *)&double result = 0x7FFFFFFFLL;
  *(void *)(v3 + 92) = 0x7FFFFFFFLL;
  *(void *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0;
  *(void *)(v3 + 112) = -1;
  return result;
}

void *re::internal::defaultDestruct<re::ecs2::AnimationLibraryComponent>(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  re::HashTable<re::AssetHandle,re::DynamicArray<re::AnimationLibraryMeshMappingData>,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit(a3 + 7);
  re::AssetHandle::~AssetHandle((re::AssetHandle *)(a3 + 4));
  *a3 = (uint64_t)&unk_26E6DECE0;
  return objc_destructInstance(a3 + 1);
}

double re::internal::defaultConstructV2<re::ecs2::AnimationLibraryComponent>(uint64_t a1)
{
  *(void *)(a1 + 112) = 0;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)a1, 0);
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 24) = 0;
  *(void *)uint64_t v1 = &unk_26E6DFB38;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 64) = 0u;
  *(_OWORD *)(v1 + 76) = 0u;
  *(void *)&double result = 0x7FFFFFFFLL;
  *(void *)(v1 + 92) = 0x7FFFFFFFLL;
  *(void *)(v1 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0;
  *(void *)(v1 + 112) = -1;
  return result;
}

void *re::internal::defaultDestructV2<re::ecs2::AnimationLibraryComponent>(uint64_t *a1)
{
  re::HashTable<re::AssetHandle,re::DynamicArray<re::AnimationLibraryMeshMappingData>,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit(a1 + 7);
  re::AssetHandle::~AssetHandle((re::AssetHandle *)(a1 + 4));
  *a1 = (uint64_t)&unk_26E6DECE0;
  return objc_destructInstance(a1 + 1);
}

uint64_t re::ecs2::introspect_AnimationLibraryComponent(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"AnimationLibraryComponent", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_AnimationLibraryComponent, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_AnimationLibraryComponent, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::AnimationLibraryComponent>, this);
}

void *re::ecs2::allocInfo_AnimationLibrarySystem(re::ecs2 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF822D8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF822D8))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF82368, "AnimationLibrarySystem");
    __cxa_guard_release(&qword_26AF822D8);
  }
  return &unk_26AF82368;
}

void re::ecs2::initInfo_AnimationLibrarySystem(re::ecs2 *this, re::IntrospectionBase *a2)
{
  v5[0] = 0xE484F4FAF350C38CLL;
  v5[1] = "AnimationLibrarySystem";
  re::StringID::destroyString((re::StringID *)v5);
  *((_OWORD *)this + 2) = v6;
  *((void *)this + 2) = 0x6800000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 0;
  *((void *)this + 8) = &re::ecs2::initInfo_AnimationLibrarySystem(re::IntrospectionBase *)::structureAttributes;
  *((void *)this + 9) = re::internal::defaultConstruct<re::ecs2::AnimationLibrarySystem>;
  *((void *)this + 10) = re::internal::defaultDestruct<re::ecs2::AnimationLibrarySystem>;
  *((void *)this + 11) = re::internal::defaultRetain<re::ecs2::AnimationLibrarySystem>(void)::{lambda(void *)#1}::__invoke;
  *((void *)this + 12) = re::internal::defaultRelease<re::ecs2::AnimationLibrarySystem>(void)::{lambda(void *)#1}::__invoke;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::ecs2::AnimationLibrarySystem>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::ecs2::AnimationLibrarySystem>;
  re::IntrospectionRegistry::add(this, v3);
  long long v4 = v6;
}

void re::internal::defaultConstruct<re::ecs2::AnimationLibrarySystem>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a3 + 96) = 0;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 80) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  re::ecs2::System::System(a3, 1);
  *uint64_t v3 = &unk_26E6E5F50;
}

void *re::internal::defaultDestruct<re::ecs2::AnimationLibrarySystem>(uint64_t a1, uint64_t a2, void *a3)
{
  *a3 = &unk_26E6DECE0;
  return objc_destructInstance(a3 + 1);
}

void re::internal::defaultConstructV2<re::ecs2::AnimationLibrarySystem>(uint64_t a1)
{
  *(void *)(a1 + 96) = 0;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  re::ecs2::System::System(a1, 1);
  *uint64_t v1 = &unk_26E6E5F50;
}

void *re::internal::defaultDestructV2<re::ecs2::AnimationLibrarySystem>(void *a1)
{
  *a1 = &unk_26E6DECE0;
  return objc_destructInstance(a1 + 1);
}

void re::ecs2::AnimationLibrarySystem::~AnimationLibrarySystem(re::ecs2::AnimationLibrarySystem *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::AnimationLibrarySystem::typeInfo(re::ecs2::AnimationLibrarySystem *this)
{
  return re::internal::getOrCreateInfo((re::internal *)"AnimationLibrarySystem", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_AnimationLibrarySystem, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_AnimationLibrarySystem, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::AnimationLibrarySystem>, 0);
}

uint64_t re::ProfilerTimeGuard<(re::ProfilerStatistic)125>::end(uint64_t result)
{
  if (*(void *)result && *(void *)(*(void *)result + 152))
  {
    uint64_t v1 = (void *)result;
    double result = mach_absolute_time();
    uint64_t v2 = *v1;
    uint64_t v3 = *(int64x2_t **)(*v1 + 152);
    if (v3)
    {
      uint64_t v4 = result - v1[1];
      uint64_t v5 = v3[504].u64[0];
      if (v5 >= v4) {
        uint64_t v5 = result - v1[1];
      }
      v3[504].i64[0] = v5;
      unint64_t v6 = v3[504].u64[1];
      if (v6 <= v4) {
        unint64_t v6 = v4;
      }
      v3[504].i64[1] = v6;
      int64x2_t v7 = vdupq_n_s64(1uLL);
      v7.i64[0] = v4;
      v3[505] = vaddq_s64(v3[505], v7);
      *(unsigned char *)(v2 + 184) = 0;
    }
    *uint64_t v1 = 0;
  }
  return result;
}

id re::internal::defaultRetain<re::ecs2::AnimationLibrarySystem>(void)::{lambda(void *)#1}::__invoke(uint64_t a1)
{
  return (id)(a1 + 8);
}

void re::internal::defaultRelease<re::ecs2::AnimationLibrarySystem>(void)::{lambda(void *)#1}::__invoke(uint64_t a1)
{
}

void *re::ecs2::allocInfo_AudioTransientComponent(re::ecs2 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF823E8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF823E8))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF82528, "AudioTransientComponent");
    __cxa_guard_release(&qword_26AF823E8);
  }
  return &unk_26AF82528;
}

void re::ecs2::initInfo_AudioTransientComponent(re::ecs2 *this, re::IntrospectionBase *a2)
{
  v19[0] = 0x32342B161D93F7D2;
  v19[1] = "AudioTransientComponent";
  re::StringID::destroyString((re::StringID *)v19);
  *((_OWORD *)this + 2) = v20;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF823F0, memory_order_acquire) & 1) == 0)
  {
    uint64_t v4 = (re *)__cxa_guard_acquire(&qword_26AF823F0);
    if (v4)
    {
      uint64_t v5 = re::introspectionAllocator(v4);
      uint64_t v6 = re::ecs2::introspect_Component((re::IntrospectionBase **)1);
      uint64_t v7 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v5 + 32))(v5, 72, 8);
      *(_DWORD *)uint64_t v7 = 1;
      *(void *)(v7 + 8) = "Component";
      *(void *)(v7 + 16) = v6;
      *(void *)(v7 + 24) = 0;
      *(void *)(v7 + 32) = 0;
      *(_DWORD *)(v7 + 40) = 3;
      *(void *)(v7 + 48) = 0;
      *(void *)(v7 + 56) = 0;
      *(_DWORD *)(v7 + 64) = 0;
      qword_26AF82448 = v7;
      unint64_t v8 = re::introspectionAllocator((re *)v7);
      unint64_t v10 = re::introspect_uint64_t((re *)1, v9);
      uint64_t v11 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v8 + 32))(v8, 72, 8);
      *(_DWORD *)uint64_t v11 = 1;
      *(void *)(v11 + 8) = "playbackHostConnectionIdentifier";
      *(void *)(v11 + 16) = v10;
      *(void *)(v11 + 24) = 0;
      *(void *)(v11 + 32) = 0x2000000001;
      *(_DWORD *)(v11 + 40) = 0;
      *(void *)(v11 + 48) = 0;
      *(void *)(v11 + 56) = 0;
      *(_DWORD *)(v11 + 64) = 0;
      qword_26AF82450 = v11;
      long long v12 = re::introspectionAllocator((re *)v11);
      re::IntrospectionInfo<re::HashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>>::get((uint64_t)v12, v13);
      uint64_t v14 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v12 + 32))(v12, 72, 8);
      *(_DWORD *)uint64_t v14 = 1;
      *(void *)(v14 + 8) = "transientStatesByToken";
      *(void *)(v14 + 16) = &qword_26AF82488;
      *(void *)(v14 + 24) = 0;
      *(void *)(v14 + 32) = 0x2800000002;
      *(_DWORD *)(v14 + 40) = 0;
      *(void *)(v14 + 48) = 0;
      *(void *)(v14 + 56) = 0;
      *(_DWORD *)(v14 + 64) = 0;
      qword_26AF82458 = v14;
      int v15 = re::introspectionAllocator((re *)v14);
      re::IntrospectionInfo<re::HashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>>::get((uint64_t)v15, v16);
      uint64_t v17 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v15 + 32))(v15, 72, 8);
      *(_DWORD *)uint64_t v17 = 1;
      *(void *)(v17 + 8) = "transientExternalStreamControllerStatesByToken";
      *(void *)(v17 + 16) = &qword_26AF824D8;
      *(void *)(v17 + 24) = 0;
      *(void *)(v17 + 32) = 0x5800000003;
      *(_DWORD *)(v17 + 40) = 0;
      *(void *)(v17 + 48) = 0;
      *(void *)(v17 + 56) = 0;
      *(_DWORD *)(v17 + 64) = 0;
      qword_26AF82460 = v17;
      __cxa_guard_release(&qword_26AF823F0);
    }
  }
  *((void *)this + 2) = 0x8800000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 0;
  *((_DWORD *)this + 14) = 4;
  *((void *)this + 8) = &qword_26AF82448;
  *((void *)this + 9) = re::internal::defaultConstruct<re::ecs2::AudioTransientComponent>;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 10) = re::internal::defaultDestruct<re::ecs2::AudioTransientComponent>;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::ecs2::AudioTransientComponent>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::ecs2::AudioTransientComponent>;
  re::IntrospectionRegistry::add(this, v3);
  long long v18 = v20;
}

void re::IntrospectionInfo<re::HashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>>::get(uint64_t a1, const re::IntrospectionBase *a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82428, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82428))
  {
    re::IntrospectionHashTableBase::IntrospectionHashTableBase((re::IntrospectionHashTableBase *)&qword_26AF82488);
    qword_26AF82488 = (uint64_t)&unk_26E6E5FD8;
    __cxa_guard_release(&qword_26AF82428);
  }
  if ((_MergedGlobals_170 & 1) == 0)
  {
    uint64_t v2 = (re::ecs2 *)re::introspect_uint64_t((re *)1, a2);
    uint64_t v3 = (uint64_t)v2;
    uint64_t v4 = (void *)qword_26AF82408;
    if (!qword_26AF82408)
    {
      uint64_t v4 = re::ecs2::allocInfo_TransientAudioState(v2);
      qword_26AF82408 = (uint64_t)v4;
      re::ecs2::initInfo_TransientAudioState((re::ecs2 *)v4, v5);
    }
    if ((_MergedGlobals_170 & 1) == 0)
    {
      _MergedGlobals_170 = 1;
      int v6 = *((_DWORD *)v4 + 6);
      ArcSharedObject::ArcSharedObject((ArcSharedObject *)&qword_26AF82488, 0);
      qword_26AF82498 = 0x3000000007;
      dword_26AF824A0 = v6;
      word_26AF824A4 = 0;
      *(void *)&xmmword_26AF824A8 = 0;
      *((void *)&xmmword_26AF824A8 + 1) = 0xFFFFFFFFLL;
      qword_26AF824B8 = v3;
      unk_26AF824C0 = 0;
      qword_26AF824C8 = (uint64_t)v4;
      unk_26AF824D0 = 0;
      qword_26AF82488 = (uint64_t)&unk_26E6E5FD8;
      re::IntrospectionRegistry::add(v7, v8);
      re::getPrettyTypeName((re *)&qword_26AF82488, (const re::IntrospectionBase *)&v25);
      if (v26) {
        unint64_t v9 = v27;
      }
      else {
        unint64_t v9 = (char *)&v26 + 1;
      }
      if (v25 && (v26 & 1) != 0) {
        (*(void (**)(void))(*(void *)v25 + 40))();
      }
      long long v10 = *(_OWORD *)(v3 + 32);
      long long v20 = *((_OWORD *)v4 + 2);
      long long v21 = v10;
      uint64_t v11 = (uint64_t *)re::HashTable<re::StringID,re::StateParameterInt *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::tryGet((uint64_t)&unk_2687A0D30, v22);
      if (v11)
      {
        uint64_t v12 = *v11;
        *((void *)&v19 + 1) = v12;
      }
      else
      {
        uint64_t v25 = 0x449AD97C4B77BED4;
        __n128 v26 = "_CompareFunc";
        uint64_t v13 = (uint64_t *)re::HashTable<re::StringID,re::StateParameterInt *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::tryGet((uint64_t)&unk_2687A0D30, &v25);
        if (v13)
        {
          uint64_t v14 = *v13;
          re::StringID::destroyString((re::StringID *)&v25);
        }
        else
        {
          re::StringID::destroyString((re::StringID *)&v25);
          *(void *)&v30.var0 = 0x449AD97C4B77BED4;
          v30.var1 = "_CompareFunc";
          int v15 = (void *)v25;
          uint64_t v14 = (uint64_t)v26;
          re::StringID::destroyString((re::StringID *)&v30);
        }
        re::TypeInfo::TypeInfo((uint64_t)&v30, (uint64_t)&v26);
        if (!v15
          || (int v16 = *v31,
              uint64_t v25 = v14,
              __n128 v26 = v16,
              LODWORD(v27) = -1,
              (uint64_t v17 = (_anonymous_namespace_ *)re::HashTable<re::internal::TypeAttributeKey,re::internal::TypeAttributeData,re::Hash<re::internal::TypeAttributeKey>,re::EqualTo<re::internal::TypeAttributeKey>,true,false>::tryGet(*(void *)&v30.var0 + 768, &v25)) == 0)|| !*(void *)v17)
        {
          long long v29 = v21;
          v28[0] = v15;
          v28[1] = v14;
        }
        long long v23 = v20;
        long long v24 = v21;
        re::TypeBuilder::beginDictionaryType((uint64_t)&v25, v22, 1, 0x30uLL, 8uLL, &v24, &v23);
        re::TypeBuilder::setConstructor((uint64_t)&v25, (uint64_t)re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#1}::__invoke);
        re::TypeBuilder::setDestructor((uint64_t)&v25, (uint64_t)re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#2}::__invoke);
        re::TypeBuilder::setDictionaryAccessors((uint64_t)&v25, (uint64_t)re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#1}::__invoke, (uint64_t)re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *)#1}::__invoke, (uint64_t)re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#3}::__invoke, (uint64_t)re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,void const*)#1}::__invoke);
        re::TypeBuilder::setDictionaryIterator((uint64_t)&v25, (void *(*)(void *, re::Allocator *))re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::Allocator *)#1}::__invoke, (BOOL (*)(void *))re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#2}::__invoke, (const void *(*)(void *))re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#3}::__invoke, (void *(*)(void *))re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#4}::__invoke, (void (*)(void *, re::Allocator *))re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::Allocator *)#2}::__invoke);
        re::TypeBuilder::~TypeBuilder((re::TypeBuilder *)&v25, v18);
      }
      xmmword_26AF824A8 = v19;
      re::StringID::destroyString((re::StringID *)v22);
    }
  }
}

void re::IntrospectionInfo<re::HashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>>::get(uint64_t a1, const re::IntrospectionBase *a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82430, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82430))
  {
    re::IntrospectionHashTableBase::IntrospectionHashTableBase((re::IntrospectionHashTableBase *)&qword_26AF824D8);
    qword_26AF824D8 = (uint64_t)&unk_26E6E6078;
    __cxa_guard_release(&qword_26AF82430);
  }
  if ((byte_26AF823E1 & 1) == 0)
  {
    uint64_t v2 = (re::ecs2 *)re::introspect_uint64_t((re *)1, a2);
    uint64_t v3 = (uint64_t)v2;
    uint64_t v4 = (void *)qword_26AF82420;
    if (!qword_26AF82420)
    {
      uint64_t v4 = re::ecs2::allocInfo_TransientExternalStreamControllerState(v2);
      qword_26AF82420 = (uint64_t)v4;
      re::ecs2::initInfo_TransientExternalStreamControllerState((re::ecs2 *)v4, v5);
    }
    if ((byte_26AF823E1 & 1) == 0)
    {
      byte_26AF823E1 = 1;
      int v6 = *((_DWORD *)v4 + 6);
      ArcSharedObject::ArcSharedObject((ArcSharedObject *)&qword_26AF824D8, 0);
      qword_26AF824E8 = 0x3000000007;
      dword_26AF824F0 = v6;
      word_26AF824F4 = 0;
      *(void *)&xmmword_26AF824F8 = 0;
      *((void *)&xmmword_26AF824F8 + 1) = 0xFFFFFFFFLL;
      qword_26AF82508 = v3;
      unk_26AF82510 = 0;
      qword_26AF82518 = (uint64_t)v4;
      unk_26AF82520 = 0;
      qword_26AF824D8 = (uint64_t)&unk_26E6E6078;
      re::IntrospectionRegistry::add(v7, v8);
      re::getPrettyTypeName((re *)&qword_26AF824D8, (const re::IntrospectionBase *)&v25);
      if (v26) {
        unint64_t v9 = v27;
      }
      else {
        unint64_t v9 = (char *)&v26 + 1;
      }
      if (v25 && (v26 & 1) != 0) {
        (*(void (**)(void))(*(void *)v25 + 40))();
      }
      long long v10 = *(_OWORD *)(v3 + 32);
      long long v20 = *((_OWORD *)v4 + 2);
      long long v21 = v10;
      uint64_t v11 = (uint64_t *)re::HashTable<re::StringID,re::StateParameterInt *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::tryGet((uint64_t)&unk_2687A0D30, v22);
      if (v11)
      {
        uint64_t v12 = *v11;
        *((void *)&v19 + 1) = v12;
      }
      else
      {
        uint64_t v25 = 0x449AD97C4B77BED4;
        __n128 v26 = "_CompareFunc";
        uint64_t v13 = (uint64_t *)re::HashTable<re::StringID,re::StateParameterInt *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::tryGet((uint64_t)&unk_2687A0D30, &v25);
        if (v13)
        {
          uint64_t v14 = *v13;
          re::StringID::destroyString((re::StringID *)&v25);
        }
        else
        {
          re::StringID::destroyString((re::StringID *)&v25);
          *(void *)&v30.var0 = 0x449AD97C4B77BED4;
          v30.var1 = "_CompareFunc";
          int v15 = (void *)v25;
          uint64_t v14 = (uint64_t)v26;
          re::StringID::destroyString((re::StringID *)&v30);
        }
        re::TypeInfo::TypeInfo((uint64_t)&v30, (uint64_t)&v26);
        if (!v15
          || (int v16 = *v31,
              uint64_t v25 = v14,
              __n128 v26 = v16,
              LODWORD(v27) = -1,
              (uint64_t v17 = (_anonymous_namespace_ *)re::HashTable<re::internal::TypeAttributeKey,re::internal::TypeAttributeData,re::Hash<re::internal::TypeAttributeKey>,re::EqualTo<re::internal::TypeAttributeKey>,true,false>::tryGet(*(void *)&v30.var0 + 768, &v25)) == 0)|| !*(void *)v17)
        {
          long long v29 = v21;
          v28[0] = v15;
          v28[1] = v14;
        }
        long long v23 = v20;
        long long v24 = v21;
        re::TypeBuilder::beginDictionaryType((uint64_t)&v25, v22, 1, 0x30uLL, 8uLL, &v24, &v23);
        re::TypeBuilder::setConstructor((uint64_t)&v25, (uint64_t)re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#1}::__invoke);
        re::TypeBuilder::setDestructor((uint64_t)&v25, (uint64_t)re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#2}::__invoke);
        re::TypeBuilder::setDictionaryAccessors((uint64_t)&v25, (uint64_t)re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#1}::__invoke, (uint64_t)re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *)#1}::__invoke, (uint64_t)re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#3}::__invoke, (uint64_t)re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,void const*)#1}::__invoke);
        re::TypeBuilder::setDictionaryIterator((uint64_t)&v25, (void *(*)(void *, re::Allocator *))re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::Allocator *)#1}::__invoke, (BOOL (*)(void *))re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#2}::__invoke, (const void *(*)(void *))re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#3}::__invoke, (void *(*)(void *))re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#4}::__invoke, (void (*)(void *, re::Allocator *))re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::Allocator *)#2}::__invoke);
        re::TypeBuilder::~TypeBuilder((re::TypeBuilder *)&v25, v18);
      }
      xmmword_26AF824F8 = v19;
      re::StringID::destroyString((re::StringID *)v22);
    }
  }
}

double re::internal::defaultConstruct<re::ecs2::AudioTransientComponent>(int a1, int a2, ArcSharedObject *this)
{
  *((void *)this + 16) = 0;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *(_OWORD *)this = 0u;
  *((_OWORD *)this + 1) = 0u;
  ArcSharedObject::ArcSharedObject(this, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E6118;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_OWORD *)(v3 + 60) = 0u;
  *(void *)&double result = 0x7FFFFFFFLL;
  *(void *)(v3 + 76) = 0x7FFFFFFFLL;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 124) = 0x7FFFFFFFLL;
  return result;
}

uint64_t re::internal::defaultDestruct<re::ecs2::AudioTransientComponent>(uint64_t a1, uint64_t a2, uint64_t (***a3)(void))
{
  return (**a3)(a3);
}

double re::internal::defaultConstructV2<re::ecs2::AudioTransientComponent>(uint64_t a1)
{
  *(void *)(a1 + 128) = 0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)a1, 0);
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 24) = 0;
  *(void *)uint64_t v1 = &unk_26E6E6118;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 60) = 0u;
  *(void *)&double result = 0x7FFFFFFFLL;
  *(void *)(v1 + 76) = 0x7FFFFFFFLL;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(_DWORD *)(v1 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v1 + 124) = 0x7FFFFFFFLL;
  return result;
}

uint64_t re::internal::defaultDestructV2<re::ecs2::AudioTransientComponent>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

uint64_t re::ecs2::introspect_AudioTransientComponent(re::IntrospectionBase **this)
{
  return re::internal::getOrCreateInfo((re::internal *)"AudioTransientComponent", (uint64_t (*)(re::internal *))re::ecs2::allocInfo_AudioTransientComponent, (re::IntrospectionBase *(*)(void))re::ecs2::initInfo_AudioTransientComponent, (void (*)(re::IntrospectionBase *))&re::internal::introspectionInfoStorage<re::ecs2::AudioTransientComponent>, this);
}

void *re::ecs2::allocInfo_TransientAudioState(re::ecs2 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF823F8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF823F8))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF825A0, "TransientAudioState");
    __cxa_guard_release(&qword_26AF823F8);
  }
  return &unk_26AF825A0;
}

void re::ecs2::initInfo_TransientAudioState(re::ecs2 *this, re::IntrospectionBase *a2)
{
  v14[0] = 0xF5E8C1B66B36A0CALL;
  v14[1] = "TransientAudioState";
  re::StringID::destroyString((re::StringID *)v14);
  *((_OWORD *)this + 2) = v15;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82400, memory_order_acquire) & 1) == 0)
  {
    uint64_t v4 = (re *)__cxa_guard_acquire(&qword_26AF82400);
    if (v4)
    {
      uint64_t v5 = re::introspectionAllocator(v4);
      uint64_t v7 = introspect_REAudioInputMode(1, v6);
      uint64_t v8 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v5 + 32))(v5, 72, 8);
      *(_DWORD *)uint64_t v8 = 1;
      *(void *)(v8 + 8) = "inputMode";
      *(void *)(v8 + 16) = v7;
      *(void *)(v8 + 24) = 0;
      *(void *)(v8 + 32) = 1;
      *(_DWORD *)(v8 + 40) = 0;
      *(void *)(v8 + 48) = 0;
      *(void *)(v8 + 56) = 0;
      *(_DWORD *)(v8 + 64) = 0;
      qword_26AF82438 = v8;
      unint64_t v9 = re::introspectionAllocator((re *)v8);
      uint64_t v11 = re::introspect_uint32_t((re *)1, v10);
      uint64_t v12 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v9 + 32))(v9, 72, 8);
      *(_DWORD *)uint64_t v12 = 1;
      *(void *)(v12 + 8) = "layoutTag";
      *(void *)(v12 + 16) = v11;
      *(void *)(v12 + 24) = 0;
      *(void *)(v12 + 32) = 0x400000002;
      *(_DWORD *)(v12 + 40) = 0;
      *(void *)(v12 + 48) = 0;
      *(void *)(v12 + 56) = 0;
      *(_DWORD *)(v12 + 64) = 0;
      qword_26AF82440 = v12;
      __cxa_guard_release(&qword_26AF82400);
    }
  }
  *((void *)this + 2) = 0x800000008;
  *((_DWORD *)this + 6) = 4;
  *((_WORD *)this + 14) = 1;
  *((_DWORD *)this + 14) = 2;
  *((void *)this + 8) = &qword_26AF82438;
  *((void *)this + 9) = re::internal::defaultConstruct<re::ecs2::TransientAudioState>;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 10) = re::internal::defaultDestruct<re::ecs2::TransientAudioState>;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::ecs2::TransientAudioState>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::ecs2::TransientAudioState>;
  re::IntrospectionRegistry::add(this, v3);
  long long v13 = v15;
}

void re::internal::defaultConstruct<re::ecs2::TransientAudioState>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a3 = 0;
  *(_DWORD *)(a3 + 4) = 6553601;
}

uint64_t re::internal::defaultConstructV2<re::ecs2::TransientAudioState>(uint64_t result)
{
  *(unsigned char *)double result = 0;
  *(_DWORD *)(result + 4) = 6553601;
  return result;
}

void *re::ecs2::allocInfo_TransientExternalStreamControllerState(re::ecs2 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82410, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82410))
  {
    re::IntrospectionStructure::IntrospectionStructure((re::IntrospectionStructure *)&unk_26AF82618, "TransientExternalStreamControllerState");
    __cxa_guard_release(&qword_26AF82410);
  }
  return &unk_26AF82618;
}

void re::ecs2::initInfo_TransientExternalStreamControllerState(re::ecs2 *this, re::IntrospectionBase *a2)
{
  v22[0] = 0x660E514A6C8D22C0;
  v22[1] = "TransientExternalStreamControllerState";
  re::StringID::destroyString((re::StringID *)v22);
  *((_OWORD *)this + 2) = v23;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82418, memory_order_acquire) & 1) == 0)
  {
    uint64_t v4 = (re *)__cxa_guard_acquire(&qword_26AF82418);
    if (v4)
    {
      uint64_t v5 = re::introspectionAllocator(v4);
      uint64_t v7 = introspect_REAudioNormalizationMode(1, v6);
      uint64_t v8 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v5 + 32))(v5, 72, 8);
      *(_DWORD *)uint64_t v8 = 1;
      *(void *)(v8 + 8) = "normalizationMode";
      *(void *)(v8 + 16) = v7;
      *(void *)(v8 + 24) = 0;
      *(void *)(v8 + 32) = 1;
      *(_DWORD *)(v8 + 40) = 0;
      *(void *)(v8 + 48) = 0;
      *(void *)(v8 + 56) = 0;
      *(_DWORD *)(v8 + 64) = 0;
      qword_26AF82468 = v8;
      unint64_t v9 = re::introspectionAllocator((re *)v8);
      uint64_t v11 = introspect_REAudioCalibrationMode(1, v10);
      uint64_t v12 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v9 + 32))(v9, 72, 8);
      *(_DWORD *)uint64_t v12 = 1;
      *(void *)(v12 + 8) = "calibrationMode";
      *(void *)(v12 + 16) = v11;
      *(void *)(v12 + 24) = 0;
      *(void *)(v12 + 32) = 0x400000002;
      *(_DWORD *)(v12 + 40) = 0;
      *(void *)(v12 + 48) = 0;
      *(void *)(v12 + 56) = 0;
      *(_DWORD *)(v12 + 64) = 0;
      qword_26AF82470 = v12;
      long long v13 = re::introspectionAllocator((re *)v12);
      long long v15 = re::introspect_double((re *)1, v14);
      uint64_t v16 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v13 + 32))(v13, 72, 8);
      *(_DWORD *)uint64_t v16 = 1;
      *(void *)(v16 + 8) = "calibrationLevel";
      *(void *)(v16 + 16) = v15;
      *(void *)(v16 + 24) = 0;
      *(void *)(v16 + 32) = 0x800000003;
      *(_DWORD *)(v16 + 40) = 0;
      *(void *)(v16 + 48) = 0;
      *(void *)(v16 + 56) = 0;
      *(_DWORD *)(v16 + 64) = 0;
      qword_26AF82478 = v16;
      uint64_t v17 = re::introspectionAllocator((re *)v16);
      long long v19 = re::introspect_double((re *)1, v18);
      uint64_t v20 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v17 + 32))(v17, 72, 8);
      *(_DWORD *)uint64_t v20 = 1;
      *(void *)(v20 + 8) = "targetLUFS";
      *(void *)(v20 + 16) = v19;
      *(void *)(v20 + 24) = 0;
      *(void *)(v20 + 32) = 0x1000000004;
      *(_DWORD *)(v20 + 40) = 0;
      *(void *)(v20 + 48) = 0;
      *(void *)(v20 + 56) = 0;
      *(_DWORD *)(v20 + 64) = 0;
      qword_26AF82480 = v20;
      __cxa_guard_release(&qword_26AF82418);
    }
  }
  *((void *)this + 2) = 0x1800000008;
  *((_DWORD *)this + 6) = 8;
  *((_WORD *)this + 14) = 1;
  *((_DWORD *)this + 14) = 4;
  *((void *)this + 8) = &qword_26AF82468;
  *((void *)this + 9) = re::internal::defaultConstruct<re::ecs2::TransientExternalStreamControllerState>;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 10) = re::internal::defaultDestruct<re::ecs2::TransientExternalStreamControllerState>;
  *((void *)this + 13) = re::internal::defaultConstructV2<re::ecs2::TransientExternalStreamControllerState>;
  *((void *)this + 14) = re::internal::defaultDestructV2<re::ecs2::TransientExternalStreamControllerState>;
  re::IntrospectionRegistry::add(this, v3);
  long long v21 = v23;
}

double re::internal::defaultConstruct<re::ecs2::TransientExternalStreamControllerState>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a3 = 0x200000001;
  double result = 85.0;
  *(_OWORD *)(a3 + 8) = xmmword_234386B20;
  return result;
}

double re::internal::defaultConstructV2<re::ecs2::TransientExternalStreamControllerState>(uint64_t a1)
{
  *(void *)a1 = 0x200000001;
  double result = 85.0;
  *(_OWORD *)(a1 + 8) = xmmword_234386B20;
  return result;
}

void *re::IntrospectionHashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::~IntrospectionHashTable(void *a1)
{
  *a1 = &unk_26E6C0400;
  uint64_t v2 = (uint64_t)(a1 + 6);
  re::SerializedReference<re::IntrospectionBase const*>::reset((uint64_t)(a1 + 8));
  re::SerializedReference<re::IntrospectionBase const*>::reset(v2);
  *a1 = &unk_26E6DECE0;
  objc_destructInstance(a1 + 1);
  return a1;
}

void re::IntrospectionHashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::~IntrospectionHashTable(void *a1)
{
  *a1 = &unk_26E6C0400;
  uint64_t v2 = (uint64_t)(a1 + 6);
  re::SerializedReference<re::IntrospectionBase const*>::reset((uint64_t)(a1 + 8));
  re::SerializedReference<re::IntrospectionBase const*>::reset(v2);
  *a1 = &unk_26E6DECE0;
  objc_destructInstance(a1 + 1);
  JUMPOUT(0x237DBCBD0);
}

double re::IntrospectionHashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::construct(uint64_t a1, uint64_t a2)
{
  double result = 0.0;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)a2 = 0u;
  *(_DWORD *)(a2 + 36) = 0x7FFFFFFF;
  return result;
}

double re::IntrospectionHashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::destroy(uint64_t a1, uint64_t *a2)
{
  return re::HashTable<void *,re::internal::AnimationCompositionChainBase *,re::Hash<void *>,re::EqualTo<void *>,true,false>::deinit(a2);
}

void re::IntrospectionHashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::init(uint64_t a1, uint64_t *a2, uint64_t a3, unsigned int a4)
{
  re::HashTable<void *,re::internal::AnimationCompositionChainBase *,re::Hash<void *>,re::EqualTo<void *>,true,false>::deinit(a2);
  if (a4 <= 3) {
    signed int v7 = 3;
  }
  else {
    signed int v7 = a4;
  }
  re::HashTable<re::StringID,unsigned int,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::init((uint64_t)a2, a3, v7);
}

void re::IntrospectionHashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::setCapacity(uint64_t a1, uint64_t a2, unsigned int a3)
{
}

uint64_t re::IntrospectionHashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::size(uint64_t a1, uint64_t a2)
{
  return *(unsigned int *)(a2 + 28);
}

void re::IntrospectionHashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::clear(uint64_t a1, uint64_t a2)
{
}

re::IntrospectionBase *re::IntrospectionHashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addElement(uint64_t a1, re *a2, int a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v10 = 0x64000100000000;
  uint64_t v8 = (re::IntrospectionBase *)re::HashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addOrReplace(a4, a5, &v10);
  re::introspectionInitElement(a2, a3, *(re::Allocator **)(a1 + 64), v8);
  return v8;
}

uint64_t re::IntrospectionHashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::iterate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(unsigned int *)(a2 + 32);
  if (v5)
  {
    uint64_t v6 = 0;
    signed int v7 = (int *)(*(void *)(a2 + 16) + 8);
    while (1)
    {
      int v8 = *v7;
      v7 += 8;
      if (v8 < 0) {
        break;
      }
      if (v5 == ++v6)
      {
        LODWORD(v6) = *(_DWORD *)(a2 + 32);
        break;
      }
    }
  }
  else
  {
    LODWORD(v6) = 0;
  }
  if (v5 == v6) {
    return 1;
  }
  uint64_t v10 = v6;
  do
  {
    uint64_t result = std::function<BOOL ()(void const*,void *)>::operator()(a3, *(void *)(a2 + 16) + 32 * v10 + 16, *(void *)(a2 + 16) + 32 * v10 + 24);
    if (!result) {
      break;
    }
    int v11 = *(_DWORD *)(a2 + 32) <= (v6 + 1) ? v6 + 1 : *(_DWORD *)(a2 + 32);
    while (1)
    {
      uint64_t v10 = (v6 + 1);
      if (v11 - 1 == v6) {
        break;
      }
      LODWORD(v6) = v6 + 1;
      int v12 = v10;
      if ((*(_DWORD *)(*(void *)(a2 + 16) + 32 * v10 + 8) & 0x80000000) != 0) {
        goto LABEL_18;
      }
    }
    int v12 = v11;
LABEL_18:
    LODWORD(v6) = v12;
  }
  while (v5 != v12);
  return result;
}

void re::HashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::setCapacity(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = *(void *)a1;
  if (*(void *)a1)
  {
    if (a2 && *(_DWORD *)(a1 + 24) != a2 && *(_DWORD *)(a1 + 28) <= a2)
    {
      memset(v13, 0, 36);
      *(void *)&v13[36] = 0x7FFFFFFFLL;
      re::HashTable<re::StringID,unsigned int,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::init((uint64_t)v13, v4, a2);
      long long v5 = *(_OWORD *)v13;
      *(_OWORD *)long long v13 = *(_OWORD *)a1;
      *(_OWORD *)a1 = v5;
      uint64_t v6 = *(void *)&v13[16];
      *(void *)&v13[16] = *(void *)(a1 + 16);
      *(void *)(a1 + 16) = v6;
      long long v8 = *(_OWORD *)&v13[24];
      *(_OWORD *)&v13[24] = *(_OWORD *)(a1 + 24);
      unsigned int v7 = *(_DWORD *)&v13[32];
      *(_OWORD *)(a1 + 24) = v8;
      unsigned int v9 = v7;
      if (v7)
      {
        uint64_t v10 = 0;
        unint64_t v11 = 0;
        do
        {
          if ((*(_DWORD *)(*(void *)&v13[16] + v10 + 8) & 0x80000000) != 0)
          {
            re::HashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addAsMove(a1, *(void *)(*(void *)&v13[16] + v10) % (unint64_t)*(unsigned int *)(a1 + 24), *(void *)(*(void *)&v13[16] + v10), *(void *)&v13[16] + v10 + 16, *(void *)&v13[16] + v10 + 24);
            unsigned int v9 = *(_DWORD *)&v13[32];
          }
          ++v11;
          v10 += 32;
        }
        while (v11 < v9);
      }
      re::HashTable<void *,re::internal::AnimationCompositionChainBase *,re::Hash<void *>,re::EqualTo<void *>,true,false>::deinit((uint64_t *)v13);
    }
  }
  else
  {
    if (a2) {
      signed int v12 = a2;
    }
    else {
      signed int v12 = 3;
    }
  }
}

uint64_t re::HashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addAsMove(uint64_t a1, unsigned int a2, unint64_t a3, void *a4, void *a5)
{
  uint64_t v9 = *(unsigned int *)(a1 + 36);
  if (v9 == 0x7FFFFFFF)
  {
    uint64_t v9 = *(unsigned int *)(a1 + 32);
    int v10 = v9;
    if (v9 == *(_DWORD *)(a1 + 24))
    {
      re::HashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::setCapacity(a1, 2 * *(_DWORD *)(a1 + 28));
      a2 = a3 % *(unsigned int *)(a1 + 24);
      int v10 = *(_DWORD *)(a1 + 32);
    }
    *(_DWORD *)(a1 + 32) = v10 + 1;
    uint64_t v11 = *(void *)(a1 + 16);
    int v12 = *(_DWORD *)(v11 + 32 * v9 + 8);
  }
  else
  {
    uint64_t v11 = *(void *)(a1 + 16);
    int v12 = *(_DWORD *)(v11 + 32 * v9 + 8);
    *(_DWORD *)(a1 + 36) = v12 & 0x7FFFFFFF;
  }
  *(_DWORD *)(v11 + 32 * v9 + 8) = v12 | 0x80000000;
  *(_DWORD *)(*(void *)(a1 + 16) + 32 * v9 + 8) = *(_DWORD *)(*(void *)(a1 + 16) + 32 * v9 + 8) & 0x80000000 | *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2);
  *(void *)(*(void *)(a1 + 16) + 32 * v9) = a3;
  *(void *)(*(void *)(a1 + 16) + 32 * v9 + 16) = *a4;
  *(void *)(*(void *)(a1 + 16) + 32 * v9 + 24) = *a5;
  *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2) = v9;
  ++*(_DWORD *)(a1 + 28);
  return v9;
}

uint64_t re::HashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addOrReplace(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = 0xBF58476D1CE4E5B9 * (*a2 ^ ((unint64_t)*a2 >> 30));
  unint64_t v8 = (0x94D049BB133111EBLL * (v7 ^ (v7 >> 27))) ^ ((0x94D049BB133111EBLL * (v7 ^ (v7 >> 27))) >> 31);
  if (!*(void *)a1)
  {
    LODWORD(v9) = 0;
    goto LABEL_8;
  }
  unint64_t v9 = v8 % *(unsigned int *)(a1 + 24);
  uint64_t v10 = *(unsigned int *)(*(void *)(a1 + 8) + 4 * v9);
  if (v10 == 0x7FFFFFFF)
  {
LABEL_8:
    unsigned int v13 = re::HashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addAsMove(a1, v9, v8, a2, a3);
    ++*(_DWORD *)(a1 + 40);
    uint64_t v12 = *(void *)(a1 + 16);
    uint64_t v10 = v13;
    return v12 + 32 * v10 + 24;
  }
  uint64_t v11 = *(void *)(a1 + 16);
  while (*(void *)(v11 + 32 * v10 + 16) != v6)
  {
    uint64_t v10 = *(_DWORD *)(v11 + 32 * v10 + 8) & 0x7FFFFFFF;
    if (v10 == 0x7FFFFFFF) {
      goto LABEL_8;
    }
  }
  *(void *)(v11 + 32 * v10 + 24) = *a3;
  ++*(_DWORD *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 16);
  return v12 + 32 * v10 + 24;
}

void re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#1}::__invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_DWORD *)(a1 + 36) = 0x7FFFFFFF;
  re::HashTable<re::StringID,unsigned int,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::init(a1, a3, 3);
}

double re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#2}::__invoke(uint64_t *a1)
{
  re::HashTable<void *,re::internal::AnimationCompositionChainBase *,re::Hash<void *>,re::EqualTo<void *>,true,false>::deinit(a1);
  return re::HashTable<void *,re::internal::AnimationCompositionChainBase *,re::Hash<void *>,re::EqualTo<void *>,true,false>::deinit(a1);
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#1}::__invoke(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

void re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *)#1}::__invoke(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (*a1 == a3)
  {
    re::HashTable<void *,unsigned int,re::Hash<void *>,re::EqualTo<void *>,true,false>::clear((uint64_t)a1);
  }
  else
  {
    re::HashTable<void *,re::internal::AnimationCompositionChainBase *,re::Hash<void *>,re::EqualTo<void *>,true,false>::deinit(a1);
    re::HashTable<re::StringID,unsigned int,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::init((uint64_t)a1, a3, 3);
  }
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#3}::__invoke(uint64_t a1, void **a2, re::Allocator *a3, uint64_t *a4)
{
  re::TypeRegistry::typeInfo(*a2, a2[2][10], v12);
  re::TypeInfo::TypeInfo((uint64_t)v11, (uint64_t)v13);
  Instance = re::TypeInfo::createInstance((re::TypeInfo *)v11, a3, 0);
  uint64_t v9 = re::HashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addOrReplace(a1, a4, Instance);
  re::TypeRegistry::typeInfo(*a2, a2[2][10], v12);
  re::TypeInfo::TypeInfo((uint64_t)v11, (uint64_t)v13);
  re::TypeInfo::releaseInstance((re::TypeInfo *)v11, Instance, a3, 0);
  return v9;
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::Allocator *)#1}::__invoke(uint64_t a1, uint64_t a2)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a2 + 32))(a2, 40, 8);
  *(void *)uint64_t result = a1;
  *(_DWORD *)(result + 8) = *(_DWORD *)(a1 + 40);
  *(unsigned char *)(result + 16) = 0;
  return result;
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#2}::__invoke(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  if (*((_DWORD *)a1 + 2) == *(_DWORD *)(*a1 + 40))
  {
    uint64_t v3 = *(unsigned int *)(v2 + 32);
    if (*((unsigned char *)a1 + 16))
    {
      int v4 = *((_DWORD *)a1 + 8);
      if (v4 == v3)
      {
        LODWORD(v5) = *(_DWORD *)(v2 + 32);
      }
      else
      {
        uint64_t v8 = a1[3];
        unsigned int v9 = *(_DWORD *)(v8 + 32);
        unsigned int v10 = v4 + 1;
        do
        {
          LODWORD(v5) = v10;
          *((_DWORD *)a1 + 8) = v10;
          if (v10 >= v9) {
            break;
          }
          int v11 = *(_DWORD *)(*(void *)(v8 + 16) + 32 * v10++ + 8);
        }
        while ((v11 & 0x80000000) == 0);
      }
    }
    else
    {
      uint64_t v5 = 0;
      if (v3)
      {
        uint64_t v6 = (int *)(*(void *)(v2 + 16) + 8);
        while (1)
        {
          int v7 = *v6;
          v6 += 8;
          if (v7 < 0) {
            break;
          }
          if (v3 == ++v5)
          {
            LODWORD(v5) = *(_DWORD *)(v2 + 32);
            break;
          }
        }
      }
      *((unsigned char *)a1 + 16) = 1;
      a1[3] = v2;
      a1[4] = v5;
      LODWORD(v3) = *(_DWORD *)(v2 + 32);
    }
    return v5 != v3;
  }
  else
  {
    re::internal::assertLog((re::internal *)4, a2, "assertion failure: '%s' (%s:line %i) HashTable entries may not be added or removed during iteration.", "iter->originalVersion == iter->hashTable->version()", "operator()", 583);
    uint64_t result = _os_crash();
    __break(1u);
  }
  return result;
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#3}::__invoke(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a1 + 8) == *(_DWORD *)(*(void *)a1 + 40)) {
    return *(void *)(*(void *)(a1 + 24) + 16) + 32 * *(unsigned int *)(a1 + 32) + 16;
  }
  re::internal::assertLog((re::internal *)4, a2, "assertion failure: '%s' (%s:line %i) HashTable entries may not be added or removed during iteration.", "iter->originalVersion == iter->hashTable->version()", "operator()", 598);
  uint64_t result = _os_crash();
  __break(1u);
  return result;
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#4}::__invoke(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a1 + 8) == *(_DWORD *)(*(void *)a1 + 40)) {
    return *(void *)(*(void *)(a1 + 24) + 16) + 32 * *(unsigned int *)(a1 + 32) + 24;
  }
  re::internal::assertLog((re::internal *)4, a2, "assertion failure: '%s' (%s:line %i) HashTable entries may not be added or removed during iteration.", "iter->originalVersion == iter->hashTable->version()", "operator()", 607);
  uint64_t result = _os_crash();
  __break(1u);
  return result;
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientAudioState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::Allocator *)#2}::__invoke(_DWORD *a1, uint64_t a2)
{
  if (a1[2] == *(_DWORD *)(*(void *)a1 + 40))
  {
    uint64_t v2 = *(uint64_t (**)(uint64_t, _DWORD *))(*(void *)a2 + 40);
    return v2(a2, a1);
  }
  else
  {
    re::internal::assertLog((re::internal *)4, a2, "assertion failure: '%s' (%s:line %i) HashTable entries may not be added or removed during iteration.", "iter->originalVersion == iter->hashTable->version()", "operator()", 616);
    uint64_t result = _os_crash();
    __break(1u);
  }
  return result;
}

void *re::IntrospectionHashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::~IntrospectionHashTable(void *a1)
{
  *a1 = &unk_26E6C0400;
  uint64_t v2 = (uint64_t)(a1 + 6);
  re::SerializedReference<re::IntrospectionBase const*>::reset((uint64_t)(a1 + 8));
  re::SerializedReference<re::IntrospectionBase const*>::reset(v2);
  *a1 = &unk_26E6DECE0;
  objc_destructInstance(a1 + 1);
  return a1;
}

void re::IntrospectionHashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::~IntrospectionHashTable(void *a1)
{
  *a1 = &unk_26E6C0400;
  uint64_t v2 = (uint64_t)(a1 + 6);
  re::SerializedReference<re::IntrospectionBase const*>::reset((uint64_t)(a1 + 8));
  re::SerializedReference<re::IntrospectionBase const*>::reset(v2);
  *a1 = &unk_26E6DECE0;
  objc_destructInstance(a1 + 1);
  JUMPOUT(0x237DBCBD0);
}

double re::IntrospectionHashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::construct(uint64_t a1, uint64_t a2)
{
  double result = 0.0;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)a2 = 0u;
  *(_DWORD *)(a2 + 36) = 0x7FFFFFFF;
  return result;
}

double re::IntrospectionHashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::destroy(uint64_t a1, uint64_t *a2)
{
  return _ZN2re9HashTableI25RERealityFileMajorVersionDv3_iNS_4HashIS1_EENS_7EqualToIS1_EELb1ELb0EE6deinitEv(a2);
}

void re::IntrospectionHashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::init(uint64_t a1, uint64_t *a2, uint64_t a3, unsigned int a4)
{
  _ZN2re9HashTableI25RERealityFileMajorVersionDv3_iNS_4HashIS1_EENS_7EqualToIS1_EELb1ELb0EE6deinitEv(a2);
  if (a4 <= 3) {
    signed int v7 = 3;
  }
  else {
    signed int v7 = a4;
  }
  re::HashTable<unsigned long long,re::ecs2::EntityHandle,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::init((uint64_t)a2, a3, v7);
}

void re::IntrospectionHashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::setCapacity(uint64_t a1, uint64_t a2, unsigned int a3)
{
}

uint64_t re::IntrospectionHashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::size(uint64_t a1, uint64_t a2)
{
  return *(unsigned int *)(a2 + 28);
}

void re::IntrospectionHashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::clear(uint64_t a1, uint64_t a2)
{
}

re::IntrospectionBase *re::IntrospectionHashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addElement(uint64_t a1, re *a2, int a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v10 = 0x200000001;
  long long v11 = xmmword_234386B20;
  uint64_t v8 = (re::IntrospectionBase *)re::HashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addOrReplace(a4, a5, (uint64_t)&v10);
  re::introspectionInitElement(a2, a3, *(re::Allocator **)(a1 + 64), v8);
  return v8;
}

uint64_t re::IntrospectionHashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::iterate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(unsigned int *)(a2 + 32);
  if (v5)
  {
    uint64_t v6 = 0;
    signed int v7 = (int *)(*(void *)(a2 + 16) + 8);
    while (1)
    {
      int v8 = *v7;
      v7 += 12;
      if (v8 < 0) {
        break;
      }
      if (v5 == ++v6)
      {
        LODWORD(v6) = *(_DWORD *)(a2 + 32);
        break;
      }
    }
  }
  else
  {
    LODWORD(v6) = 0;
  }
  if (v5 == v6) {
    return 1;
  }
  uint64_t v10 = v6;
  do
  {
    uint64_t result = std::function<BOOL ()(void const*,void *)>::operator()(a3, *(void *)(a2 + 16) + 48 * v10 + 16, *(void *)(a2 + 16) + 48 * v10 + 24);
    if (!result) {
      break;
    }
    int v11 = *(_DWORD *)(a2 + 32) <= (v6 + 1) ? v6 + 1 : *(_DWORD *)(a2 + 32);
    while (1)
    {
      uint64_t v10 = (v6 + 1);
      if (v11 - 1 == v6) {
        break;
      }
      LODWORD(v6) = v6 + 1;
      int v12 = v10;
      if ((*(_DWORD *)(*(void *)(a2 + 16) + 48 * v10 + 8) & 0x80000000) != 0) {
        goto LABEL_18;
      }
    }
    int v12 = v11;
LABEL_18:
    LODWORD(v6) = v12;
  }
  while (v5 != v12);
  return result;
}

void re::HashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::setCapacity(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = *(void *)a1;
  if (*(void *)a1)
  {
    if (a2 && *(_DWORD *)(a1 + 24) != a2 && *(_DWORD *)(a1 + 28) <= a2)
    {
      memset(v13, 0, 36);
      *(void *)&v13[36] = 0x7FFFFFFFLL;
      re::HashTable<unsigned long long,re::ecs2::EntityHandle,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::init((uint64_t)v13, v4, a2);
      long long v5 = *(_OWORD *)v13;
      *(_OWORD *)unsigned int v13 = *(_OWORD *)a1;
      *(_OWORD *)a1 = v5;
      uint64_t v6 = *(void *)&v13[16];
      *(void *)&v13[16] = *(void *)(a1 + 16);
      *(void *)(a1 + 16) = v6;
      long long v8 = *(_OWORD *)&v13[24];
      *(_OWORD *)&v13[24] = *(_OWORD *)(a1 + 24);
      unsigned int v7 = *(_DWORD *)&v13[32];
      *(_OWORD *)(a1 + 24) = v8;
      unsigned int v9 = v7;
      if (v7)
      {
        uint64_t v10 = 0;
        unint64_t v11 = 0;
        do
        {
          if ((*(_DWORD *)(*(void *)&v13[16] + v10 + 8) & 0x80000000) != 0)
          {
            re::HashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addAsMove(a1, *(void *)(*(void *)&v13[16] + v10) % (unint64_t)*(unsigned int *)(a1 + 24), *(void *)(*(void *)&v13[16] + v10), *(void *)&v13[16] + v10 + 16, *(void *)&v13[16] + v10 + 24);
            unsigned int v9 = *(_DWORD *)&v13[32];
          }
          ++v11;
          v10 += 48;
        }
        while (v11 < v9);
      }
      _ZN2re9HashTableI25RERealityFileMajorVersionDv3_iNS_4HashIS1_EENS_7EqualToIS1_EELb1ELb0EE6deinitEv((uint64_t *)v13);
    }
  }
  else
  {
    if (a2) {
      signed int v12 = a2;
    }
    else {
      signed int v12 = 3;
    }
  }
}

uint64_t re::HashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addAsMove(uint64_t a1, unsigned int a2, unint64_t a3, void *a4, long long *a5)
{
  uint64_t v9 = *(unsigned int *)(a1 + 36);
  if (v9 == 0x7FFFFFFF)
  {
    uint64_t v9 = *(unsigned int *)(a1 + 32);
    int v10 = v9;
    if (v9 == *(_DWORD *)(a1 + 24))
    {
      re::HashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::setCapacity(a1, 2 * *(_DWORD *)(a1 + 28));
      a2 = a3 % *(unsigned int *)(a1 + 24);
      int v10 = *(_DWORD *)(a1 + 32);
    }
    *(_DWORD *)(a1 + 32) = v10 + 1;
    uint64_t v11 = *(void *)(a1 + 16);
    int v12 = *(_DWORD *)(v11 + 48 * v9 + 8);
  }
  else
  {
    uint64_t v11 = *(void *)(a1 + 16);
    int v12 = *(_DWORD *)(v11 + 48 * v9 + 8);
    *(_DWORD *)(a1 + 36) = v12 & 0x7FFFFFFF;
  }
  *(_DWORD *)(v11 + 48 * v9 + 8) = v12 | 0x80000000;
  *(_DWORD *)(*(void *)(a1 + 16) + 48 * v9 + 8) = *(_DWORD *)(*(void *)(a1 + 16) + 48 * v9 + 8) & 0x80000000 | *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2);
  *(void *)(*(void *)(a1 + 16) + 48 * v9) = a3;
  *(void *)(*(void *)(a1 + 16) + 48 * v9 + 16) = *a4;
  uint64_t v13 = *(void *)(a1 + 16) + 48 * v9;
  long long v14 = *a5;
  *(void *)(v13 + 40) = *((void *)a5 + 2);
  *(_OWORD *)(v13 + 24) = v14;
  *(_DWORD *)(*(void *)(a1 + 8) + 4 * a2) = v9;
  ++*(_DWORD *)(a1 + 28);
  return v9;
}

void re::HashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::clear(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 28))
  {
    uint64_t v2 = *(unsigned int *)(a1 + 24);
    if (v2) {
      memset_pattern16(*(void **)(a1 + 8), &unk_2343655D0, 4 * v2);
    }
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    if (v3)
    {
      uint64_t v4 = 0;
      uint64_t v5 = 48 * v3;
      do
      {
        uint64_t v6 = *(void *)(a1 + 16) + v4;
        int v7 = *(_DWORD *)(v6 + 8);
        if (v7 < 0) {
          *(_DWORD *)(v6 + 8) = v7 & 0x7FFFFFFF;
        }
        v4 += 48;
      }
      while (v5 != v4);
    }
    *(_DWORD *)(a1 + 28) = 0;
    *(_DWORD *)(a1 + 32) = 0;
    int v8 = *(_DWORD *)(a1 + 40) + 1;
    *(_DWORD *)(a1 + 36) = 0x7FFFFFFF;
    *(_DWORD *)(a1 + 40) = v8;
  }
}

uint64_t re::HashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addOrReplace(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = 0xBF58476D1CE4E5B9 * (*a2 ^ ((unint64_t)*a2 >> 30));
  unint64_t v8 = (0x94D049BB133111EBLL * (v7 ^ (v7 >> 27))) ^ ((0x94D049BB133111EBLL * (v7 ^ (v7 >> 27))) >> 31);
  if (!*(void *)a1)
  {
    LODWORD(v9) = 0;
    goto LABEL_8;
  }
  unint64_t v9 = v8 % *(unsigned int *)(a1 + 24);
  uint64_t v10 = *(unsigned int *)(*(void *)(a1 + 8) + 4 * v9);
  if (v10 == 0x7FFFFFFF)
  {
LABEL_8:
    unsigned int v16 = re::HashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addAsMove(a1, v9, v8, a2, (long long *)a3);
    ++*(_DWORD *)(a1 + 40);
    uint64_t v15 = *(void *)(a1 + 16) + 48 * v16;
    return v15 + 24;
  }
  uint64_t v11 = *(void *)(a1 + 16);
  while (*(void *)(v11 + 48 * v10 + 16) != v6)
  {
    uint64_t v10 = *(_DWORD *)(v11 + 48 * v10 + 8) & 0x7FFFFFFF;
    if (v10 == 0x7FFFFFFF) {
      goto LABEL_8;
    }
  }
  uint64_t v12 = 3 * v10;
  uint64_t v13 = v11 + 48 * v10;
  long long v14 = *(_OWORD *)a3;
  *(void *)(v13 + 40) = *(void *)(a3 + 16);
  *(_OWORD *)(v13 + 24) = v14;
  ++*(_DWORD *)(a1 + 40);
  uint64_t v15 = *(void *)(a1 + 16) + 16 * v12;
  return v15 + 24;
}

void re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#1}::__invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_DWORD *)(a1 + 36) = 0x7FFFFFFF;
  re::HashTable<unsigned long long,re::ecs2::EntityHandle,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::init(a1, a3, 3);
}

double re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#2}::__invoke(uint64_t *a1)
{
  _ZN2re9HashTableI25RERealityFileMajorVersionDv3_iNS_4HashIS1_EENS_7EqualToIS1_EELb1ELb0EE6deinitEv(a1);
  return _ZN2re9HashTableI25RERealityFileMajorVersionDv3_iNS_4HashIS1_EENS_7EqualToIS1_EELb1ELb0EE6deinitEv(a1);
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#1}::__invoke(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

void re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *)#1}::__invoke(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (*a1 == a3)
  {
    re::HashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::clear((uint64_t)a1);
  }
  else
  {
    _ZN2re9HashTableI25RERealityFileMajorVersionDv3_iNS_4HashIS1_EENS_7EqualToIS1_EELb1ELb0EE6deinitEv(a1);
    re::HashTable<unsigned long long,re::ecs2::EntityHandle,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::init((uint64_t)a1, a3, 3);
  }
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::TypeInfo const&,re::Allocator *,void *)#3}::__invoke(uint64_t a1, void **a2, re::Allocator *a3, uint64_t *a4)
{
  re::TypeRegistry::typeInfo(*a2, a2[2][10], v12);
  re::TypeInfo::TypeInfo((uint64_t)v11, (uint64_t)v13);
  Instance = re::TypeInfo::createInstance((re::TypeInfo *)v11, a3, 0);
  uint64_t v9 = re::HashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::addOrReplace(a1, a4, (uint64_t)Instance);
  re::TypeRegistry::typeInfo(*a2, a2[2][10], v12);
  re::TypeInfo::TypeInfo((uint64_t)v11, (uint64_t)v13);
  re::TypeInfo::releaseInstance((re::TypeInfo *)v11, Instance, a3, 0);
  return v9;
}

uint64_t re::HashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::tryGet(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)a1) {
    return 0;
  }
  uint64_t v2 = *a2;
  unint64_t v3 = 0xBF58476D1CE4E5B9 * (*a2 ^ ((unint64_t)*a2 >> 30));
  uint64_t v4 = *(unsigned int *)(*(void *)(a1 + 8)
                       + 4
                       * (((0x94D049BB133111EBLL * (v3 ^ (v3 >> 27))) ^ ((0x94D049BB133111EBLL * (v3 ^ (v3 >> 27))) >> 31))
                        % *(unsigned int *)(a1 + 24)));
  if (v4 == 0x7FFFFFFF) {
    return 0;
  }
  uint64_t v6 = *(void *)(a1 + 16);
  if (*(void *)(v6 + 48 * v4 + 16) != v2)
  {
    while (1)
    {
      LODWORD(v4) = *(_DWORD *)(v6 + 48 * v4 + 8) & 0x7FFFFFFF;
      if (v4 == 0x7FFFFFFF) {
        break;
      }
      if (*(void *)(v6 + 48 * v4 + 16) == v2) {
        return v6 + 48 * v4 + 24;
      }
    }
    return 0;
  }
  return v6 + 48 * v4 + 24;
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::Allocator *)#1}::__invoke(uint64_t a1, uint64_t a2)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a2 + 32))(a2, 40, 8);
  *(void *)uint64_t result = a1;
  *(_DWORD *)(result + 8) = *(_DWORD *)(a1 + 40);
  *(unsigned char *)(result + 16) = 0;
  return result;
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#2}::__invoke(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  if (*((_DWORD *)a1 + 2) == *(_DWORD *)(*a1 + 40))
  {
    uint64_t v3 = *(unsigned int *)(v2 + 32);
    if (*((unsigned char *)a1 + 16))
    {
      int v4 = *((_DWORD *)a1 + 8);
      if (v4 == v3)
      {
        LODWORD(v5) = *(_DWORD *)(v2 + 32);
      }
      else
      {
        uint64_t v8 = a1[3];
        unsigned int v9 = *(_DWORD *)(v8 + 32);
        unsigned int v10 = v4 + 1;
        do
        {
          LODWORD(v5) = v10;
          *((_DWORD *)a1 + 8) = v10;
          if (v10 >= v9) {
            break;
          }
          int v11 = *(_DWORD *)(*(void *)(v8 + 16) + 48 * v10++ + 8);
        }
        while ((v11 & 0x80000000) == 0);
      }
    }
    else
    {
      uint64_t v5 = 0;
      if (v3)
      {
        uint64_t v6 = (int *)(*(void *)(v2 + 16) + 8);
        while (1)
        {
          int v7 = *v6;
          v6 += 12;
          if (v7 < 0) {
            break;
          }
          if (v3 == ++v5)
          {
            LODWORD(v5) = *(_DWORD *)(v2 + 32);
            break;
          }
        }
      }
      *((unsigned char *)a1 + 16) = 1;
      a1[3] = v2;
      a1[4] = v5;
      LODWORD(v3) = *(_DWORD *)(v2 + 32);
    }
    return v5 != v3;
  }
  else
  {
    re::internal::assertLog((re::internal *)4, a2, "assertion failure: '%s' (%s:line %i) HashTable entries may not be added or removed during iteration.", "iter->originalVersion == iter->hashTable->version()", "operator()", 583);
    uint64_t result = _os_crash();
    __break(1u);
  }
  return result;
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#3}::__invoke(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a1 + 8) == *(_DWORD *)(*(void *)a1 + 40)) {
    return *(void *)(*(void *)(a1 + 24) + 16) + 48 * *(unsigned int *)(a1 + 32) + 16;
  }
  re::internal::assertLog((re::internal *)4, a2, "assertion failure: '%s' (%s:line %i) HashTable entries may not be added or removed during iteration.", "iter->originalVersion == iter->hashTable->version()", "operator()", 598);
  uint64_t result = _os_crash();
  __break(1u);
  return result;
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *)#4}::__invoke(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a1 + 8) == *(_DWORD *)(*(void *)a1 + 40)) {
    return *(void *)(*(void *)(a1 + 24) + 16) + 48 * *(unsigned int *)(a1 + 32) + 24;
  }
  re::internal::assertLog((re::internal *)4, a2, "assertion failure: '%s' (%s:line %i) HashTable entries may not be added or removed during iteration.", "iter->originalVersion == iter->hashTable->version()", "operator()", 607);
  uint64_t result = _os_crash();
  __break(1u);
  return result;
}

uint64_t re::TypeBuilderHelper::registerHashTable<unsigned long long,re::ecs2::TransientExternalStreamControllerState,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>(re::TypeRegistry *,re::StringID const&,re::TypeID const&,re::TypeID const&)::{lambda(void *,re::Allocator *)#2}::__invoke(_DWORD *a1, uint64_t a2)
{
  if (a1[2] == *(_DWORD *)(*(void *)a1 + 40))
  {
    uint64_t v2 = *(uint64_t (**)(uint64_t, _DWORD *))(*(void *)a2 + 40);
    return v2(a2, a1);
  }
  else
  {
    re::internal::assertLog((re::internal *)4, a2, "assertion failure: '%s' (%s:line %i) HashTable entries may not be added or removed during iteration.", "iter->originalVersion == iter->hashTable->version()", "operator()", 616);
    uint64_t result = _os_crash();
    __break(1u);
  }
  return result;
}

void re::ecs2::AudioTransientComponent::~AudioTransientComponent(re::ecs2::AudioTransientComponent *this)
{
  re::ecs2::AudioTransientComponent::~AudioTransientComponent(this);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t *v2;

  *(void *)this = &unk_26E6E6118;
  uint64_t v2 = (uint64_t *)((char *)this + 40);
  _ZN2re9HashTableI25RERealityFileMajorVersionDv3_iNS_4HashIS1_EENS_7EqualToIS1_EELb1ELb0EE6deinitEv((uint64_t *)this + 11);
  re::HashTable<void *,re::internal::AnimationCompositionChainBase *,re::Hash<void *>,re::EqualTo<void *>,true,false>::deinit(v2);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AudioTransientComponent,(re::ecs2::ComponentTypeBase::Flags)1>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::AudioTransientComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AudioTransientComponent,(re::ecs2::ComponentTypeBase::Flags)1>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::AudioTransientComponent,(re::ecs2::ComponentTypeBase::Flags)1>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::AudioTransientComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType;
}

#error "2336DC3DC: too big function (funcsize=0)"

uint64_t re::ecs2::ComponentImpl<re::ecs2::AnchorComponent,(re::ecs2::ComponentTypeBase::Flags)2>::initComponentType(uint64_t a1)
{
  {
    re::introspect<re::ecs2::AnchorComponent>(void)::info = (_UNKNOWN *)re::ecs2::introspect_AnchorComponent(0);
  }
  re::getPrettyTypeName((re *)re::introspect<re::ecs2::AnchorComponent>(void)::info, (const re::IntrospectionBase *)&v14);
  uint64_t v2 = (re *)re::DynamicString::rfind((uint64_t)&v14, "Component", v12);
  if (v12[0])
  {
    uint64_t v3 = (v15[0] & 1) != 0 ? v15[0] >> 1 : LOBYTE(v15[0]) >> 1;
    if (v13 == v3 - 9)
    {
      re::DynamicString::substr((re::DynamicString *)&v14, 0, v13, (re::DynamicString *)&v11);
      re::DynamicString::operator=((re::DynamicString *)&v14, (re::DynamicString *)&v11);
      uint64_t v2 = *(re **)&v11.var0;
      if (*(void *)&v11.var0)
      {
        if ((uint64_t)v11.var1) {
          uint64_t v2 = (re *)(*(uint64_t (**)(void))(**(void **)&v11.var0 + 40))();
        }
      }
    }
  }
  int v4 = re::globalAllocators(v2);
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v4[2] + 32))(v4[2], 80, 8);
  uint64_t v6 = v5;
  if (v15[0]) {
    int v7 = (const char *)v15[1];
  }
  else {
    int v7 = (char *)v15 + 1;
  }
  *(void *)&v11.var0 = 0;
  v11.var1 = "";
  re::ecs2::ComponentType<re::ecs2::AnchorComponent>::ComponentType((uint64_t)v6, &v11, a1, 2);
  re::ecs2::ComponentImpl<re::ecs2::AnchorComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = v6;
  re::StringID::destroyString((re::StringID *)&v11);
  unsigned int v9 = re::ecs2::ComponentTypeRegistry::instance(v8);
  re::ecs2::ComponentTypeRegistry::add((re::ecs2::ComponentTypeRegistry *)v9, (re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AnchorComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
  uint64_t result = v14;
  if (v14)
  {
    if (v15[0]) {
      return (*(uint64_t (**)(void))(*(void *)v14 + 40))();
    }
  }
  return result;
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AnchoringComponent,(re::ecs2::ComponentTypeBase::Flags)4>::initComponentType(uint64_t a1)
{
  {
    re::introspect<re::ecs2::AnchoringComponent>(void)::info = (_UNKNOWN *)re::ecs2::introspect_AnchoringComponent(0);
  }
  re::getPrettyTypeName((re *)re::introspect<re::ecs2::AnchoringComponent>(void)::info, (const re::IntrospectionBase *)&v14);
  uint64_t v2 = (re *)re::DynamicString::rfind((uint64_t)&v14, "Component", v12);
  if (v12[0])
  {
    uint64_t v3 = (v15[0] & 1) != 0 ? v15[0] >> 1 : LOBYTE(v15[0]) >> 1;
    if (v13 == v3 - 9)
    {
      re::DynamicString::substr((re::DynamicString *)&v14, 0, v13, (re::DynamicString *)&v11);
      re::DynamicString::operator=((re::DynamicString *)&v14, (re::DynamicString *)&v11);
      uint64_t v2 = *(re **)&v11.var0;
      if (*(void *)&v11.var0)
      {
        if ((uint64_t)v11.var1) {
          uint64_t v2 = (re *)(*(uint64_t (**)(void))(**(void **)&v11.var0 + 40))();
        }
      }
    }
  }
  int v4 = re::globalAllocators(v2);
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v4[2] + 32))(v4[2], 80, 8);
  uint64_t v6 = v5;
  if (v15[0]) {
    int v7 = (const char *)v15[1];
  }
  else {
    int v7 = (char *)v15 + 1;
  }
  *(void *)&v11.var0 = 0;
  v11.var1 = "";
  re::ecs2::ComponentType<re::ecs2::AnchoringComponent>::ComponentType((uint64_t)v6, &v11, a1, 4);
  re::ecs2::ComponentImpl<re::ecs2::AnchoringComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = v6;
  re::StringID::destroyString((re::StringID *)&v11);
  unsigned int v9 = re::ecs2::ComponentTypeRegistry::instance(v8);
  re::ecs2::ComponentTypeRegistry::add((re::ecs2::ComponentTypeRegistry *)v9, (re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AnchoringComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
  uint64_t result = v14;
  if (v14)
  {
    if (v15[0]) {
      return (*(uint64_t (**)(void))(*(void *)v14 + 40))();
    }
  }
  return result;
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::initComponentType(uint64_t a1)
{
  {
    re::introspect<re::ecs2::SceneComponent>(void)::info = (_UNKNOWN *)re::ecs2::introspect_SceneComponent(0);
  }
  re::getPrettyTypeName((re *)re::introspect<re::ecs2::SceneComponent>(void)::info, (const re::IntrospectionBase *)&v14);
  uint64_t v2 = (re *)re::DynamicString::rfind((uint64_t)&v14, "Component", v12);
  if (v12[0])
  {
    uint64_t v3 = (v15[0] & 1) != 0 ? v15[0] >> 1 : LOBYTE(v15[0]) >> 1;
    if (v13 == v3 - 9)
    {
      re::DynamicString::substr((re::DynamicString *)&v14, 0, v13, (re::DynamicString *)&v11);
      re::DynamicString::operator=((re::DynamicString *)&v14, (re::DynamicString *)&v11);
      uint64_t v2 = *(re **)&v11.var0;
      if (*(void *)&v11.var0)
      {
        if ((uint64_t)v11.var1) {
          uint64_t v2 = (re *)(*(uint64_t (**)(void))(**(void **)&v11.var0 + 40))();
        }
      }
    }
  }
  int v4 = re::globalAllocators(v2);
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v4[2] + 32))(v4[2], 80, 8);
  uint64_t v6 = v5;
  if (v15[0]) {
    int v7 = (const char *)v15[1];
  }
  else {
    int v7 = (char *)v15 + 1;
  }
  *(void *)&v11.var0 = 0;
  v11.var1 = "";
  re::ecs2::ComponentType<re::ecs2::SceneComponent>::ComponentType((uint64_t)v6, &v11, a1, 2);
  re::ecs2::ComponentImpl<re::ecs2::SceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = v6;
  re::StringID::destroyString((re::StringID *)&v11);
  unsigned int v9 = re::ecs2::ComponentTypeRegistry::instance(v8);
  re::ecs2::ComponentTypeRegistry::add((re::ecs2::ComponentTypeRegistry *)v9, (re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::SceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
  uint64_t result = v14;
  if (v14)
  {
    if (v15[0]) {
      return (*(uint64_t (**)(void))(*(void *)v14 + 40))();
    }
  }
  return result;
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::CoordinateSpaceDefinitionComponent,(re::ecs2::ComponentTypeBase::Flags)2>::initComponentType(uint64_t a1)
{
  {
    re::introspect<re::ecs2::CoordinateSpaceDefinitionComponent>(void)::info = (_UNKNOWN *)re::ecs2::introspect_CoordinateSpaceDefinitionComponent(0);
  }
  re::getPrettyTypeName((re *)re::introspect<re::ecs2::CoordinateSpaceDefinitionComponent>(void)::info, (const re::IntrospectionBase *)&v14);
  uint64_t v2 = (re *)re::DynamicString::rfind((uint64_t)&v14, "Component", v12);
  if (v12[0])
  {
    uint64_t v3 = (v15[0] & 1) != 0 ? v15[0] >> 1 : LOBYTE(v15[0]) >> 1;
    if (v13 == v3 - 9)
    {
      re::DynamicString::substr((re::DynamicString *)&v14, 0, v13, (re::DynamicString *)&v11);
      re::DynamicString::operator=((re::DynamicString *)&v14, (re::DynamicString *)&v11);
      uint64_t v2 = *(re **)&v11.var0;
      if (*(void *)&v11.var0)
      {
        if ((uint64_t)v11.var1) {
          uint64_t v2 = (re *)(*(uint64_t (**)(void))(**(void **)&v11.var0 + 40))();
        }
      }
    }
  }
  int v4 = re::globalAllocators(v2);
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v4[2] + 32))(v4[2], 80, 8);
  uint64_t v6 = v5;
  if (v15[0]) {
    int v7 = (const char *)v15[1];
  }
  else {
    int v7 = (char *)v15 + 1;
  }
  *(void *)&v11.var0 = 0;
  v11.var1 = "";
  re::ecs2::ComponentType<re::ecs2::CoordinateSpaceDefinitionComponent>::ComponentType((uint64_t)v6, &v11, a1, 2);
  re::ecs2::ComponentImpl<re::ecs2::CoordinateSpaceDefinitionComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = v6;
  re::StringID::destroyString((re::StringID *)&v11);
  unsigned int v9 = re::ecs2::ComponentTypeRegistry::instance(v8);
  re::ecs2::ComponentTypeRegistry::add((re::ecs2::ComponentTypeRegistry *)v9, (re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::CoordinateSpaceDefinitionComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
  uint64_t result = v14;
  if (v14)
  {
    if (v15[0]) {
      return (*(uint64_t (**)(void))(*(void *)v14 + 40))();
    }
  }
  return result;
}

void re::ecs2::deinitECSComponents(re::ecs2 *this)
{
  if (_MergedGlobals_171 == 1)
  {
    _MergedGlobals_171 = 0;
    uint64_t v1 = re::internal::destroyPersistent<re::ecs2::HandleTable>((re *)"deinit", 64, re::ecs2::HandleTable::m_instance);
    if (re::ecs2::ComponentImpl<re::ecs2::AnchorComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType) {
      uint64_t v1 = re::ecs2::ComponentImpl<re::ecs2::AnchorComponent,(re::ecs2::ComponentTypeBase::Flags)2>::deinitComponentType(v1);
    }
    if (re::ecs2::ComponentImpl<re::ecs2::AnchoringComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType) {
      uint64_t v1 = re::ecs2::ComponentImpl<re::ecs2::AnchoringComponent,(re::ecs2::ComponentTypeBase::Flags)4>::deinitComponentType(v1);
    }
    if (re::ecs2::ComponentImpl<re::ecs2::SceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType) {
      uint64_t v1 = re::ecs2::ComponentImpl<re::ecs2::SceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::deinitComponentType(v1);
    }
    if (re::ecs2::ComponentImpl<re::ecs2::CoordinateSpaceDefinitionComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType) {
      uint64_t v1 = re::ecs2::ComponentImpl<re::ecs2::CoordinateSpaceDefinitionComponent,(re::ecs2::ComponentTypeBase::Flags)2>::deinitComponentType(v1);
    }
    uint64_t v2 = re::ecs2::ComponentTypeRegistry::instance(v1);
    uint64_t v3 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v2, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AcousticMeshComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    int v4 = re::ecs2::ComponentImpl<re::ecs2::AcousticMeshComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::AcousticMeshComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v5 = re::globalAllocators(v3)[2];
      (*(void (**)(void *))(*(void *)v4 + 16))(v4);
      uint64_t v3 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v5 + 40))(v5, v4);
    }
    re::ecs2::ComponentImpl<re::ecs2::AcousticMeshComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    uint64_t v6 = re::ecs2::ComponentTypeRegistry::instance(v3);
    int v7 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v6, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AccessibilityComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    uint64_t v8 = re::ecs2::ComponentImpl<re::ecs2::AccessibilityComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::AccessibilityComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v9 = re::globalAllocators(v7)[2];
      (*(void (**)(void *))(*(void *)v8 + 16))(v8);
      int v7 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v9 + 40))(v9, v8);
    }
    re::ecs2::ComponentImpl<re::ecs2::AccessibilityComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    unsigned int v10 = re::ecs2::ComponentTypeRegistry::instance(v7);
    StringID v11 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v10, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AdaptiveResolutionComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    uint64_t v12 = re::ecs2::ComponentImpl<re::ecs2::AdaptiveResolutionComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::AdaptiveResolutionComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v13 = re::globalAllocators(v11)[2];
      (*(void (**)(void *))(*(void *)v12 + 16))(v12);
      StringID v11 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v13 + 40))(v13, v12);
    }
    re::ecs2::ComponentImpl<re::ecs2::AdaptiveResolutionComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    uint64_t v14 = re::ecs2::ComponentTypeRegistry::instance(v11);
    uint64_t v15 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v14, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AdaptiveResolutionStateComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    unsigned int v16 = re::ecs2::ComponentImpl<re::ecs2::AdaptiveResolutionStateComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::AdaptiveResolutionStateComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v17 = re::globalAllocators(v15)[2];
      (*(void (**)(void *))(*(void *)v16 + 16))(v16);
      uint64_t v15 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v17 + 40))(v17, v16);
    }
    re::ecs2::ComponentImpl<re::ecs2::AdaptiveResolutionStateComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    uint64_t v18 = re::ecs2::ComponentTypeRegistry::instance(v15);
    long long v19 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v18, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AnimationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    uint64_t v20 = re::ecs2::ComponentImpl<re::ecs2::AnimationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::AnimationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v21 = re::globalAllocators(v19)[2];
      (*(void (**)(void *))(*(void *)v20 + 16))(v20);
      long long v19 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v21 + 40))(v21, v20);
    }
    re::ecs2::ComponentImpl<re::ecs2::AnimationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    int v22 = re::ecs2::ComponentTypeRegistry::instance(v19);
    long long v23 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v22, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AnimationLibraryComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    long long v24 = re::ecs2::ComponentImpl<re::ecs2::AnimationLibraryComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::AnimationLibraryComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v25 = re::globalAllocators(v23)[2];
      (*(void (**)(void *))(*(void *)v24 + 16))(v24);
      long long v23 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v25 + 40))(v25, v24);
    }
    re::ecs2::ComponentImpl<re::ecs2::AnimationLibraryComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    __n128 v26 = re::ecs2::ComponentTypeRegistry::instance(v23);
    int v27 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v26, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioGeneratorComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    BOOL v28 = re::ecs2::ComponentImpl<re::ecs2::AudioGeneratorComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::AudioGeneratorComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v29 = re::globalAllocators(v27)[2];
      (*(void (**)(void *))(*(void *)v28 + 16))(v28);
      int v27 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v29 + 40))(v29, v28);
    }
    re::ecs2::ComponentImpl<re::ecs2::AudioGeneratorComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    StringID v30 = re::ecs2::ComponentTypeRegistry::instance(v27);
    BOOL v31 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v30, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioPlayerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    unint64_t v32 = re::ecs2::ComponentImpl<re::ecs2::AudioPlayerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::AudioPlayerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v33 = re::globalAllocators(v31)[2];
      (*(void (**)(void *))(*(void *)v32 + 16))(v32);
      BOOL v31 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v33 + 40))(v33, v32);
    }
    re::ecs2::ComponentImpl<re::ecs2::AudioPlayerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    unint64_t v34 = re::ecs2::ComponentTypeRegistry::instance(v31);
    int v35 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v34, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::VideoAudioControlComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    BOOL v36 = re::ecs2::ComponentImpl<re::ecs2::VideoAudioControlComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::VideoAudioControlComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v37 = re::globalAllocators(v35)[2];
      (*(void (**)(void *))(*(void *)v36 + 16))(v36);
      int v35 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v37 + 40))(v37, v36);
    }
    re::ecs2::ComponentImpl<re::ecs2::VideoAudioControlComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    int v38 = re::ecs2::ComponentTypeRegistry::instance(v35);
    BOOL v39 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v38, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ChannelAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    uint64_t v40 = re::ecs2::ComponentImpl<re::ecs2::ChannelAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::ChannelAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v41 = re::globalAllocators(v39)[2];
      (*(void (**)(void *))(*(void *)v40 + 16))(v40);
      BOOL v39 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v41 + 40))(v41, v40);
    }
    re::ecs2::ComponentImpl<re::ecs2::ChannelAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    BOOL v42 = re::ecs2::ComponentTypeRegistry::instance(v39);
    unint64_t v43 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v42, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::CustomDeformerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    BOOL v44 = re::ecs2::ComponentImpl<re::ecs2::CustomDeformerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::CustomDeformerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v45 = re::globalAllocators(v43)[2];
      (*(void (**)(void *))(*(void *)v44 + 16))(v44);
      unint64_t v43 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v45 + 40))(v45, v44);
    }
    re::ecs2::ComponentImpl<re::ecs2::CustomDeformerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    BOOL v46 = re::ecs2::ComponentTypeRegistry::instance(v43);
    unint64_t v47 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v46, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AmbientAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    unint64_t v48 = re::ecs2::ComponentImpl<re::ecs2::AmbientAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::AmbientAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v49 = re::globalAllocators(v47)[2];
      (*(void (**)(void *))(*(void *)v48 + 16))(v48);
      unint64_t v47 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v49 + 40))(v49, v48);
    }
    re::ecs2::ComponentImpl<re::ecs2::AmbientAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    uint64_t v50 = re::ecs2::ComponentTypeRegistry::instance(v47);
    BOOL v51 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v50, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::SpatialAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    unint64_t v52 = re::ecs2::ComponentImpl<re::ecs2::SpatialAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::SpatialAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v53 = re::globalAllocators(v51)[2];
      (*(void (**)(void *))(*(void *)v52 + 16))(v52);
      BOOL v51 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v53 + 40))(v53, v52);
    }
    re::ecs2::ComponentImpl<re::ecs2::SpatialAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    unint64_t v54 = re::ecs2::ComponentTypeRegistry::instance(v51);
    BOOL v55 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v54, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioTransientComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType);
    uint64_t v56 = re::ecs2::ComponentImpl<re::ecs2::AudioTransientComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::AudioTransientComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType)
    {
      uint64_t v57 = re::globalAllocators(v55)[2];
      (*(void (**)(void *))(*(void *)v56 + 16))(v56);
      BOOL v55 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v57 + 40))(v57, v56);
    }
    re::ecs2::ComponentImpl<re::ecs2::AudioTransientComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType = 0;
    unint64_t v58 = re::ecs2::ComponentTypeRegistry::instance(v55);
    int v59 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v58, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioSessionComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    BOOL v60 = re::ecs2::ComponentImpl<re::ecs2::AudioSessionComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::AudioSessionComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v61 = re::globalAllocators(v59)[2];
      (*(void (**)(void *))(*(void *)v60 + 16))(v60);
      int v59 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v61 + 40))(v61, v60);
    }
    re::ecs2::ComponentImpl<re::ecs2::AudioSessionComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    unint64_t v62 = re::ecs2::ComponentTypeRegistry::instance(v59);
    long long v63 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v62, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioAnimationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    BOOL v64 = re::ecs2::ComponentImpl<re::ecs2::AudioAnimationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::AudioAnimationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v65 = re::globalAllocators(v63)[2];
      (*(void (**)(void *))(*(void *)v64 + 16))(v64);
      long long v63 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v65 + 40))(v65, v64);
    }
    re::ecs2::ComponentImpl<re::ecs2::AudioAnimationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    unint64_t v66 = re::ecs2::ComponentTypeRegistry::instance(v63);
    int v67 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v66, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioMixerComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    int v68 = re::ecs2::ComponentImpl<re::ecs2::AudioMixerComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::AudioMixerComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v69 = re::globalAllocators(v67)[2];
      (*(void (**)(void *))(*(void *)v68 + 16))(v68);
      int v67 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v69 + 40))(v69, v68);
    }
    re::ecs2::ComponentImpl<re::ecs2::AudioMixerComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    unint64_t v70 = re::ecs2::ComponentTypeRegistry::instance(v67);
    BOOL v71 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v70, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ReverbComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    BOOL v72 = re::ecs2::ComponentImpl<re::ecs2::ReverbComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::ReverbComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v73 = re::globalAllocators(v71)[2];
      (*(void (**)(void *))(*(void *)v72 + 16))(v72);
      BOOL v71 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v73 + 40))(v73, v72);
    }
    re::ecs2::ComponentImpl<re::ecs2::ReverbComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    uint64_t v74 = re::ecs2::ComponentTypeRegistry::instance(v71);
    int v75 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v74, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioMixGroupsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    BOOL v76 = re::ecs2::ComponentImpl<re::ecs2::AudioMixGroupsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::AudioMixGroupsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v77 = re::globalAllocators(v75)[2];
      (*(void (**)(void *))(*(void *)v76 + 16))(v76);
      int v75 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v77 + 40))(v77, v76);
    }
    re::ecs2::ComponentImpl<re::ecs2::AudioMixGroupsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    int64_t v78 = re::ecs2::ComponentTypeRegistry::instance(v75);
    int64_t v79 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v78, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioDebugComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType);
    int64_t v80 = re::ecs2::ComponentImpl<re::ecs2::AudioDebugComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::AudioDebugComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType)
    {
      uint64_t v81 = re::globalAllocators(v79)[2];
      (*(void (**)(void *))(*(void *)v80 + 16))(v80);
      int64_t v79 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v81 + 40))(v81, v80);
    }
    re::ecs2::ComponentImpl<re::ecs2::AudioDebugComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType = 0;
    unint64_t v82 = re::ecs2::ComponentTypeRegistry::instance(v79);
    int v83 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v82, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AudioLibraryComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    BOOL v84 = re::ecs2::ComponentImpl<re::ecs2::AudioLibraryComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::AudioLibraryComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v85 = re::globalAllocators(v83)[2];
      (*(void (**)(void *))(*(void *)v84 + 16))(v84);
      int v83 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v85 + 40))(v85, v84);
    }
    re::ecs2::ComponentImpl<re::ecs2::AudioLibraryComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    unint64_t v86 = re::ecs2::ComponentTypeRegistry::instance(v83);
    int v87 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v86, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AREnvironmentProbeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    int v88 = re::ecs2::ComponentImpl<re::ecs2::AREnvironmentProbeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::AREnvironmentProbeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v89 = re::globalAllocators(v87)[2];
      (*(void (**)(void *))(*(void *)v88 + 16))(v88);
      int v87 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v89 + 40))(v89, v88);
    }
    re::ecs2::ComponentImpl<re::ecs2::AREnvironmentProbeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    BOOL v90 = re::ecs2::ComponentTypeRegistry::instance(v87);
    unint64_t v91 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v90, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ARSegmentationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    unint64_t v92 = re::ecs2::ComponentImpl<re::ecs2::ARSegmentationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::ARSegmentationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v93 = re::globalAllocators(v91)[2];
      (*(void (**)(void *))(*(void *)v92 + 16))(v92);
      unint64_t v91 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v93 + 40))(v93, v92);
    }
    re::ecs2::ComponentImpl<re::ecs2::ARSegmentationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    int v94 = re::ecs2::ComponentTypeRegistry::instance(v91);
    BOOL v95 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v94, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::BallSocketJointComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    BOOL v96 = re::ecs2::ComponentImpl<re::ecs2::BallSocketJointComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::BallSocketJointComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v97 = re::globalAllocators(v95)[2];
      (*(void (**)(void *))(*(void *)v96 + 16))(v96);
      BOOL v95 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v97 + 40))(v97, v96);
    }
    re::ecs2::ComponentImpl<re::ecs2::BallSocketJointComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    int v98 = re::ecs2::ComponentTypeRegistry::instance(v95);
    BOOL v99 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v98, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::BlendShapeWeightsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    int v100 = re::ecs2::ComponentImpl<re::ecs2::BlendShapeWeightsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::BlendShapeWeightsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v101 = re::globalAllocators(v99)[2];
      (*(void (**)(void *))(*(void *)v100 + 16))(v100);
      BOOL v99 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v101 + 40))(v101, v100);
    }
    re::ecs2::ComponentImpl<re::ecs2::BlendShapeWeightsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    uint64_t v102 = re::ecs2::ComponentTypeRegistry::instance(v99);
    uint64_t v103 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v102, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::BlendShapeWeightsBufferComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    uint64_t v104 = re::ecs2::ComponentImpl<re::ecs2::BlendShapeWeightsBufferComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::BlendShapeWeightsBufferComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v105 = re::globalAllocators(v103)[2];
      (*(void (**)(void *))(*(void *)v104 + 16))(v104);
      uint64_t v103 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v105 + 40))(v105, v104);
    }
    re::ecs2::ComponentImpl<re::ecs2::BlendShapeWeightsBufferComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    unint64_t v106 = re::ecs2::ComponentTypeRegistry::instance(v103);
    uint64_t v107 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v106, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::BodyTrackingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    uint64_t v108 = re::ecs2::ComponentImpl<re::ecs2::BodyTrackingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::BodyTrackingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v109 = re::globalAllocators(v107)[2];
      (*(void (**)(void *))(*(void *)v108 + 16))(v108);
      uint64_t v107 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v109 + 40))(v109, v108);
    }
    re::ecs2::ComponentImpl<re::ecs2::BodyTrackingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    int32x4_t v110 = re::ecs2::ComponentTypeRegistry::instance(v107);
    unint64_t v111 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v110, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::CameraViewDescriptorsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    uint64_t v112 = re::ecs2::ComponentImpl<re::ecs2::CameraViewDescriptorsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::CameraViewDescriptorsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v113 = re::globalAllocators(v111)[2];
      (*(void (**)(void *))(*(void *)v112 + 16))(v112);
      unint64_t v111 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v113 + 40))(v113, v112);
    }
    re::ecs2::ComponentImpl<re::ecs2::CameraViewDescriptorsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    unint64_t v114 = re::ecs2::ComponentTypeRegistry::instance(v111);
    unint64_t v115 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v114, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::CameraMovementComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    int v116 = re::ecs2::ComponentImpl<re::ecs2::CameraMovementComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::CameraMovementComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v117 = re::globalAllocators(v115)[2];
      (*(void (**)(void *))(*(void *)v116 + 16))(v116);
      unint64_t v115 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v117 + 40))(v117, v116);
    }
    re::ecs2::ComponentImpl<re::ecs2::CameraMovementComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    unint64_t v118 = re::ecs2::ComponentTypeRegistry::instance(v115);
    uint64_t v119 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v118, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::CharacterControllerComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    unint64_t v120 = re::ecs2::ComponentImpl<re::ecs2::CharacterControllerComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::CharacterControllerComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v121 = re::globalAllocators(v119)[2];
      (*(void (**)(void *))(*(void *)v120 + 16))(v120);
      uint64_t v119 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v121 + 40))(v121, v120);
    }
    re::ecs2::ComponentImpl<re::ecs2::CharacterControllerComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    int v122 = re::ecs2::ComponentTypeRegistry::instance(v119);
    uint64_t v123 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v122, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::CharacterControllerStateComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    long long v124 = re::ecs2::ComponentImpl<re::ecs2::CharacterControllerStateComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::CharacterControllerStateComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v125 = re::globalAllocators(v123)[2];
      (*(void (**)(void *))(*(void *)v124 + 16))(v124);
      uint64_t v123 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v125 + 40))(v125, v124);
    }
    re::ecs2::ComponentImpl<re::ecs2::CharacterControllerStateComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    int v126 = re::ecs2::ComponentTypeRegistry::instance(v123);
    unint64_t v127 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v126, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ClippingBoxComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    unint64_t v128 = re::ecs2::ComponentImpl<re::ecs2::ClippingBoxComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::ClippingBoxComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v129 = re::globalAllocators(v127)[2];
      (*(void (**)(void *))(*(void *)v128 + 16))(v128);
      unint64_t v127 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v129 + 40))(v129, v128);
    }
    re::ecs2::ComponentImpl<re::ecs2::ClippingBoxComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    BOOL v130 = re::ecs2::ComponentTypeRegistry::instance(v127);
    unint64_t v131 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v130, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ClippingPrimitiveComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    unint64_t v132 = re::ecs2::ComponentImpl<re::ecs2::ClippingPrimitiveComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::ClippingPrimitiveComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v133 = re::globalAllocators(v131)[2];
      (*(void (**)(void *))(*(void *)v132 + 16))(v132);
      unint64_t v131 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v133 + 40))(v133, v132);
    }
    re::ecs2::ComponentImpl<re::ecs2::ClippingPrimitiveComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    int v134 = re::ecs2::ComponentTypeRegistry::instance(v131);
    BOOL v135 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v134, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ColliderComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    long long v136 = re::ecs2::ComponentImpl<re::ecs2::ColliderComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::ColliderComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v137 = re::globalAllocators(v135)[2];
      (*(void (**)(void *))(*(void *)v136 + 16))(v136);
      BOOL v135 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v137 + 40))(v137, v136);
    }
    re::ecs2::ComponentImpl<re::ecs2::ColliderComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    long long v138 = re::ecs2::ComponentTypeRegistry::instance(v135);
    long long v139 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v138, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ForceEffectComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    long long v140 = re::ecs2::ComponentImpl<re::ecs2::ForceEffectComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::ForceEffectComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v141 = re::globalAllocators(v139)[2];
      (*(void (**)(void *))(*(void *)v140 + 16))(v140);
      long long v139 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v141 + 40))(v141, v140);
    }
    re::ecs2::ComponentImpl<re::ecs2::ForceEffectComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    long long v142 = re::ecs2::ComponentTypeRegistry::instance(v139);
    uint64_t v143 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v142, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ConstraintListComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    uint64_t v144 = re::ecs2::ComponentImpl<re::ecs2::ConstraintListComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::ConstraintListComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v145 = re::globalAllocators(v143)[2];
      (*(void (**)(void *))(*(void *)v144 + 16))(v144);
      uint64_t v143 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v145 + 40))(v145, v144);
    }
    re::ecs2::ComponentImpl<re::ecs2::ConstraintListComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    uint64_t v146 = re::ecs2::ComponentTypeRegistry::instance(v143);
    __int16 v147 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v146, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::CustomMatrixCameraComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    uint64_t v148 = re::ecs2::ComponentImpl<re::ecs2::CustomMatrixCameraComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::CustomMatrixCameraComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v149 = re::globalAllocators(v147)[2];
      (*(void (**)(void *))(*(void *)v148 + 16))(v148);
      (*(void (**)(uint64_t, void *))(*(void *)v149 + 40))(v149, v148);
    }
    re::ecs2::ComponentImpl<re::ecs2::CustomMatrixCameraComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    uint64_t v150 = re::internal::destroyPersistent<re::Allocator>((re *)"deinitComponentType", 63, (void (***)(void))re::ecs2::CustomComponent::s_allocator);
    re::ecs2::CustomComponent::s_allocator = 0;
    uint64_t v151 = re::ecs2::ComponentTypeRegistry::instance(v150);
    uint64_t v152 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v151, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::DebugMeshComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    long long v153 = re::ecs2::ComponentImpl<re::ecs2::DebugMeshComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::DebugMeshComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v154 = re::globalAllocators(v152)[2];
      (*(void (**)(void *))(*(void *)v153 + 16))(v153);
      uint64_t v152 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v154 + 40))(v154, v153);
    }
    re::ecs2::ComponentImpl<re::ecs2::DebugMeshComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    unint64_t v155 = re::ecs2::ComponentTypeRegistry::instance(v152);
    uint64_t v156 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v155, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::CustomDockingRegionComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    long long v157 = re::ecs2::ComponentImpl<re::ecs2::CustomDockingRegionComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::CustomDockingRegionComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v158 = re::globalAllocators(v156)[2];
      (*(void (**)(void *))(*(void *)v157 + 16))(v157);
      uint64_t v156 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v158 + 40))(v158, v157);
    }
    re::ecs2::ComponentImpl<re::ecs2::CustomDockingRegionComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    char v159 = re::ecs2::ComponentTypeRegistry::instance(v156);
    uint64_t v160 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v159, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::DrawableQueueSyncComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    char v161 = re::ecs2::ComponentImpl<re::ecs2::DrawableQueueSyncComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::DrawableQueueSyncComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v162 = re::globalAllocators(v160)[2];
      (*(void (**)(void *))(*(void *)v161 + 16))(v161);
      uint64_t v160 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v162 + 40))(v162, v161);
    }
    re::ecs2::ComponentImpl<re::ecs2::DrawableQueueSyncComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    uint64_t v163 = re::ecs2::ComponentTypeRegistry::instance(v160);
    uint64_t v164 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v163, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::DrawWorldComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v165 = re::ecs2::ComponentImpl<re::ecs2::DrawWorldComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::DrawWorldComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v166 = re::globalAllocators(v164)[2];
      (*(void (**)(void *))(*(void *)v165 + 16))(v165);
      uint64_t v164 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v166 + 40))(v166, v165);
    }
    re::ecs2::ComponentImpl<re::ecs2::DrawWorldComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v167 = re::ecs2::ComponentTypeRegistry::instance(v164);
    uint64_t v168 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v167, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::DynamicBoundingBoxComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType);
    int8x16_t v169 = re::ecs2::ComponentImpl<re::ecs2::DynamicBoundingBoxComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::DynamicBoundingBoxComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType)
    {
      uint64_t v170 = re::globalAllocators(v168)[2];
      (*(void (**)(void *))(*(void *)v169 + 16))(v169);
      uint64_t v168 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v170 + 40))(v170, v169);
    }
    re::ecs2::ComponentImpl<re::ecs2::DynamicBoundingBoxComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType = 0;
    float32x4_t v171 = re::ecs2::ComponentTypeRegistry::instance(v168);
    uint64_t v172 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v171, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::DynamicTextComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    unint64_t v173 = re::ecs2::ComponentImpl<re::ecs2::DynamicTextComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::DynamicTextComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v174 = re::globalAllocators(v172)[2];
      (*(void (**)(void *))(*(void *)v173 + 16))(v173);
      uint64_t v172 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v174 + 40))(v174, v173);
    }
    re::ecs2::ComponentImpl<re::ecs2::DynamicTextComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v175 = re::ecs2::ComponentTypeRegistry::instance(v172);
    uint64_t v176 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v175, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::EDRColorManagementComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v177 = re::ecs2::ComponentImpl<re::ecs2::EDRColorManagementComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::EDRColorManagementComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v178 = re::globalAllocators(v176)[2];
      (*(void (**)(void *))(*(void *)v177 + 16))(v177);
      uint64_t v176 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v178 + 40))(v178, v177);
    }
    re::ecs2::ComponentImpl<re::ecs2::EDRColorManagementComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v179 = re::ecs2::ComponentTypeRegistry::instance(v176);
    uint64_t v180 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v179, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::HingeJointComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v181 = re::ecs2::ComponentImpl<re::ecs2::HingeJointComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::HingeJointComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v182 = re::globalAllocators(v180)[2];
      (*(void (**)(void *))(*(void *)v181 + 16))(v181);
      uint64_t v180 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v182 + 40))(v182, v181);
    }
    re::ecs2::ComponentImpl<re::ecs2::HingeJointComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v183 = re::ecs2::ComponentTypeRegistry::instance(v180);
    uint64_t v184 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v183, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ImageBasedLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    float32x4_t v185 = re::ecs2::ComponentImpl<re::ecs2::ImageBasedLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::ImageBasedLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v186 = re::globalAllocators(v184)[2];
      (*(void (**)(void *))(*(void *)v185 + 16))(v185);
      uint64_t v184 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v186 + 40))(v186, v185);
    }
    re::ecs2::ComponentImpl<re::ecs2::ImageBasedLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    int8x16_t v187 = re::ecs2::ComponentTypeRegistry::instance(v184);
    uint64_t v188 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v187, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ImageBasedLightReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    float32x4_t v189 = re::ecs2::ComponentImpl<re::ecs2::ImageBasedLightReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::ImageBasedLightReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v190 = re::globalAllocators(v188)[2];
      (*(void (**)(void *))(*(void *)v189 + 16))(v189);
      uint64_t v188 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v190 + 40))(v190, v189);
    }
    re::ecs2::ComponentImpl<re::ecs2::ImageBasedLightReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    unint64_t v191 = re::ecs2::ComponentTypeRegistry::instance(v188);
    uint64_t v192 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v191, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::KeyValueComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    float32x4_t v193 = re::ecs2::ComponentImpl<re::ecs2::KeyValueComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::KeyValueComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v194 = re::globalAllocators(v192)[2];
      (*(void (**)(void *))(*(void *)v193 + 16))(v193);
      uint64_t v192 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v194 + 40))(v194, v193);
    }
    re::ecs2::ComponentImpl<re::ecs2::KeyValueComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    float32x4_t v195 = re::ecs2::ComponentTypeRegistry::instance(v192);
    uint64_t v196 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v195, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::LightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v197 = re::ecs2::ComponentImpl<re::ecs2::LightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::LightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v198 = re::globalAllocators(v196)[2];
      (*(void (**)(void *))(*(void *)v197 + 16))(v197);
      uint64_t v196 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v198 + 40))(v198, v197);
    }
    re::ecs2::ComponentImpl<re::ecs2::LightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v199 = re::ecs2::ComponentTypeRegistry::instance(v196);
    uint64_t v200 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v199, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::LightGroupComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v201 = re::ecs2::ComponentImpl<re::ecs2::LightGroupComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::LightGroupComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v202 = re::globalAllocators(v200)[2];
      (*(void (**)(void *))(*(void *)v201 + 16))(v201);
      uint64_t v200 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v202 + 40))(v202, v201);
    }
    re::ecs2::ComponentImpl<re::ecs2::LightGroupComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v203 = re::ecs2::ComponentTypeRegistry::instance(v200);
    uint64_t v204 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v203, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AmbientLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    int8x16_t v205 = re::ecs2::ComponentImpl<re::ecs2::AmbientLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::AmbientLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v206 = re::globalAllocators(v204)[2];
      (*(void (**)(void *))(*(void *)v205 + 16))(v205);
      uint64_t v204 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v206 + 40))(v206, v205);
    }
    re::ecs2::ComponentImpl<re::ecs2::AmbientLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v207 = re::ecs2::ComponentTypeRegistry::instance(v204);
    uint64_t v208 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v207, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::DirectionalLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    unint64_t v209 = re::ecs2::ComponentImpl<re::ecs2::DirectionalLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::DirectionalLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v210 = re::globalAllocators(v208)[2];
      (*(void (**)(void *))(*(void *)v209 + 16))(v209);
      uint64_t v208 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v210 + 40))(v210, v209);
    }
    re::ecs2::ComponentImpl<re::ecs2::DirectionalLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    float32x4_t v211 = re::ecs2::ComponentTypeRegistry::instance(v208);
    uint64_t v212 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v211, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::SpotLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    float32x4_t v213 = re::ecs2::ComponentImpl<re::ecs2::SpotLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::SpotLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v214 = re::globalAllocators(v212)[2];
      (*(void (**)(void *))(*(void *)v213 + 16))(v213);
      uint64_t v212 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v214 + 40))(v214, v213);
    }
    re::ecs2::ComponentImpl<re::ecs2::SpotLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    float32x4_t v215 = re::ecs2::ComponentTypeRegistry::instance(v212);
    uint64_t v216 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v215, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::PointLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    float32x4_t v217 = re::ecs2::ComponentImpl<re::ecs2::PointLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::PointLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v218 = re::globalAllocators(v216)[2];
      (*(void (**)(void *))(*(void *)v217 + 16))(v217);
      uint64_t v216 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v218 + 40))(v218, v217);
    }
    re::ecs2::ComponentImpl<re::ecs2::PointLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    float32x4_t v219 = re::ecs2::ComponentTypeRegistry::instance(v216);
    uint64_t v220 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v219, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::RectAreaLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v221 = re::ecs2::ComponentImpl<re::ecs2::RectAreaLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::RectAreaLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v222 = re::globalAllocators(v220)[2];
      (*(void (**)(void *))(*(void *)v221 + 16))(v221);
      uint64_t v220 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v222 + 40))(v222, v221);
    }
    re::ecs2::ComponentImpl<re::ecs2::RectAreaLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    int8x16_t v223 = re::ecs2::ComponentTypeRegistry::instance(v220);
    uint64_t v224 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v223, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::FrustumLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    uint64_t v225 = re::ecs2::ComponentImpl<re::ecs2::FrustumLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::FrustumLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v226 = re::globalAllocators(v224)[2];
      (*(void (**)(void *))(*(void *)v225 + 16))(v225);
      uint64_t v224 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v226 + 40))(v226, v225);
    }
    re::ecs2::ComponentImpl<re::ecs2::FrustumLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    unint64_t v227 = re::ecs2::ComponentTypeRegistry::instance(v224);
    float32x4_t v228 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v227, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v229 = re::ecs2::ComponentImpl<re::ecs2::ShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::ShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v230 = re::globalAllocators(v228)[2];
      (*(void (**)(void *))(*(void *)v229 + 16))(v229);
      float32x4_t v228 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v230 + 40))(v230, v229);
    }
    re::ecs2::ComponentImpl<re::ecs2::ShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v231 = re::ecs2::ComponentTypeRegistry::instance(v228);
    float32x4_t v232 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v231, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::PointLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    float32x4_t v233 = re::ecs2::ComponentImpl<re::ecs2::PointLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::PointLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v234 = re::globalAllocators(v232)[2];
      (*(void (**)(void *))(*(void *)v233 + 16))(v233);
      float32x4_t v232 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v234 + 40))(v234, v233);
    }
    re::ecs2::ComponentImpl<re::ecs2::PointLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    float32x4_t v235 = re::ecs2::ComponentTypeRegistry::instance(v232);
    int8x16_t v236 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v235, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::DirectionalLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    float32x4_t v237 = re::ecs2::ComponentImpl<re::ecs2::DirectionalLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::DirectionalLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v238 = re::globalAllocators(v236)[2];
      (*(void (**)(void *))(*(void *)v237 + 16))(v237);
      int8x16_t v236 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v238 + 40))(v238, v237);
    }
    re::ecs2::ComponentImpl<re::ecs2::DirectionalLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    float32x4_t v239 = re::ecs2::ComponentTypeRegistry::instance(v236);
    v240 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v239, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::SpotLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    float v241 = re::ecs2::ComponentImpl<re::ecs2::SpotLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::SpotLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v242 = re::globalAllocators(v240)[2];
      (*(void (**)(void *))(*(void *)v241 + 16))(v241);
      v240 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v242 + 40))(v242, v241);
    }
    re::ecs2::ComponentImpl<re::ecs2::SpotLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    v243 = re::ecs2::ComponentTypeRegistry::instance(v240);
    unint64_t v244 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v243, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::FilterMapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    unint64_t v245 = re::ecs2::ComponentImpl<re::ecs2::FilterMapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::FilterMapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v246 = re::globalAllocators(v244)[2];
      (*(void (**)(void *))(*(void *)v245 + 16))(v245);
      unint64_t v244 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v246 + 40))(v246, v245);
    }
    re::ecs2::ComponentImpl<re::ecs2::FilterMapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    v247 = re::ecs2::ComponentTypeRegistry::instance(v244);
    v248 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v247, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::VFXSceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    v249 = re::ecs2::ComponentImpl<re::ecs2::VFXSceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::VFXSceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v250 = re::globalAllocators(v248)[2];
      (*(void (**)(void *))(*(void *)v249 + 16))(v249);
      v248 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v250 + 40))(v250, v249);
    }
    re::ecs2::ComponentImpl<re::ecs2::VFXSceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    uint64_t v251 = re::ecs2::ComponentTypeRegistry::instance(v248);
    uint64_t v252 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v251, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::VFXSceneMetadataComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    uint64_t v253 = re::ecs2::ComponentImpl<re::ecs2::VFXSceneMetadataComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::VFXSceneMetadataComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v254 = re::globalAllocators(v252)[2];
      (*(void (**)(void *))(*(void *)v253 + 16))(v253);
      uint64_t v252 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v254 + 40))(v254, v253);
    }
    re::ecs2::ComponentImpl<re::ecs2::VFXSceneMetadataComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v255 = re::ecs2::ComponentTypeRegistry::instance(v252);
    float32x4_t v256 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v255, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::VFXSceneReadbackComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v257 = re::ecs2::ComponentImpl<re::ecs2::VFXSceneReadbackComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::VFXSceneReadbackComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v258 = re::globalAllocators(v256)[2];
      (*(void (**)(void *))(*(void *)v257 + 16))(v257);
      float32x4_t v256 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v258 + 40))(v258, v257);
    }
    re::ecs2::ComponentImpl<re::ecs2::VFXSceneReadbackComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v259 = re::ecs2::ComponentTypeRegistry::instance(v256);
    int8x16_t v260 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v259, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::RenderGraphFileProviderArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    float32x4_t v261 = re::ecs2::ComponentImpl<re::ecs2::RenderGraphFileProviderArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::RenderGraphFileProviderArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v262 = re::globalAllocators(v260)[2];
      (*(void (**)(void *))(*(void *)v261 + 16))(v261);
      int8x16_t v260 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v262 + 40))(v262, v261);
    }
    re::ecs2::ComponentImpl<re::ecs2::RenderGraphFileProviderArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    int8x16_t v263 = re::ecs2::ComponentTypeRegistry::instance(v260);
    uint64_t v264 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v263, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ListenerComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    uint64_t v265 = re::ecs2::ComponentImpl<re::ecs2::ListenerComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::ListenerComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v266 = re::globalAllocators(v264)[2];
      (*(void (**)(void *))(*(void *)v265 + 16))(v265);
      uint64_t v264 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v266 + 40))(v266, v265);
    }
    re::ecs2::ComponentImpl<re::ecs2::ListenerComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    float32x4_t v267 = re::ecs2::ComponentTypeRegistry::instance(v264);
    float32x4_t v268 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v267, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::MaterialOverrideComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v269 = re::ecs2::ComponentImpl<re::ecs2::MaterialOverrideComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::MaterialOverrideComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v270 = re::globalAllocators(v268)[2];
      (*(void (**)(void *))(*(void *)v269 + 16))(v269);
      float32x4_t v268 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v270 + 40))(v270, v269);
    }
    re::ecs2::ComponentImpl<re::ecs2::MaterialOverrideComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v271 = re::ecs2::ComponentTypeRegistry::instance(v268);
    float32x4_t v272 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v271, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::DirectMaterialParametersArrayComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    int8x16_t v273 = re::ecs2::ComponentImpl<re::ecs2::DirectMaterialParametersArrayComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::DirectMaterialParametersArrayComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v274 = re::globalAllocators(v272)[2];
      (*(void (**)(void *))(*(void *)v273 + 16))(v273);
      float32x4_t v272 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v274 + 40))(v274, v273);
    }
    re::ecs2::ComponentImpl<re::ecs2::DirectMaterialParametersArrayComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v275 = re::ecs2::ComponentTypeRegistry::instance(v272);
    int8x16_t v276 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v275, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::MaterialParameterBlockArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    uint64_t v277 = re::ecs2::ComponentImpl<re::ecs2::MaterialParameterBlockArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::MaterialParameterBlockArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v278 = re::globalAllocators(v276)[2];
      (*(void (**)(void *))(*(void *)v277 + 16))(v277);
      int8x16_t v276 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v278 + 40))(v278, v277);
    }
    re::ecs2::ComponentImpl<re::ecs2::MaterialParameterBlockArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    float32x4_t v279 = re::ecs2::ComponentTypeRegistry::instance(v276);
    float32x4_t v280 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v279, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::UnlitMaterialParametersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v281 = re::ecs2::ComponentImpl<re::ecs2::UnlitMaterialParametersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::UnlitMaterialParametersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v282 = re::globalAllocators(v280)[2];
      (*(void (**)(void *))(*(void *)v281 + 16))(v281);
      float32x4_t v280 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v282 + 40))(v282, v281);
    }
    re::ecs2::ComponentImpl<re::ecs2::UnlitMaterialParametersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v283 = re::ecs2::ComponentTypeRegistry::instance(v280);
    float32x4_t v284 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v283, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::PbrMaterialParametersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    int8x16_t v285 = re::ecs2::ComponentImpl<re::ecs2::PbrMaterialParametersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::PbrMaterialParametersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v286 = re::globalAllocators(v284)[2];
      (*(void (**)(void *))(*(void *)v285 + 16))(v285);
      float32x4_t v284 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v286 + 40))(v286, v285);
    }
    re::ecs2::ComponentImpl<re::ecs2::PbrMaterialParametersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v287 = re::ecs2::ComponentTypeRegistry::instance(v284);
    int8x16_t v288 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v287, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::MeshComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    uint64_t v289 = re::ecs2::ComponentImpl<re::ecs2::MeshComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::MeshComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v290 = re::globalAllocators(v288)[2];
      (*(void (**)(void *))(*(void *)v289 + 16))(v289);
      int8x16_t v288 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v290 + 40))(v290, v289);
    }
    re::ecs2::ComponentImpl<re::ecs2::MeshComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    unint64_t v291 = re::ecs2::ComponentTypeRegistry::instance(v288);
    unint64_t v292 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v291, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::MeshSceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    __n128 v293 = re::ecs2::ComponentImpl<re::ecs2::MeshSceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::MeshSceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v294 = re::globalAllocators(v292)[2];
      (*(void (**)(void *))(*(void *)v293 + 16))(v293);
      unint64_t v292 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v294 + 40))(v294, v293);
    }
    re::ecs2::ComponentImpl<re::ecs2::MeshSceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    v295 = re::ecs2::ComponentTypeRegistry::instance(v292);
    float32x2_t v296 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v295, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::MeshSortingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    float32x2_t v297 = re::ecs2::ComponentImpl<re::ecs2::MeshSortingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::MeshSortingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v298 = re::globalAllocators(v296)[2];
      (*(void (**)(void *))(*(void *)v297 + 16))(v297);
      float32x2_t v296 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v298 + 40))(v298, v297);
    }
    re::ecs2::ComponentImpl<re::ecs2::MeshSortingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    float32x4_t v299 = re::ecs2::ComponentTypeRegistry::instance(v296);
    float32x4_t v300 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v299, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ProjectiveShadowReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float v301 = re::ecs2::ComponentImpl<re::ecs2::ProjectiveShadowReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::ProjectiveShadowReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v302 = re::globalAllocators(v300)[2];
      (*(void (**)(void *))(*(void *)v301 + 16))(v301);
      float32x4_t v300 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v302 + 40))(v302, v301);
    }
    re::ecs2::ComponentImpl<re::ecs2::ProjectiveShadowReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x2_t v303 = re::ecs2::ComponentTypeRegistry::instance(v300);
    float32x2_t v304 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v303, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ShadowClusterComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v305 = re::ecs2::ComponentImpl<re::ecs2::ShadowClusterComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::ShadowClusterComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v306 = re::globalAllocators(v304)[2];
      (*(void (**)(void *))(*(void *)v305 + 16))(v305);
      float32x2_t v304 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v306 + 40))(v306, v305);
    }
    re::ecs2::ComponentImpl<re::ecs2::ShadowClusterComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float v307 = re::ecs2::ComponentTypeRegistry::instance(v304);
    float v308 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v307, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ClusterShadowMarkerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v309 = re::ecs2::ComponentImpl<re::ecs2::ClusterShadowMarkerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::ClusterShadowMarkerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v310 = re::globalAllocators(v308)[2];
      (*(void (**)(void *))(*(void *)v309 + 16))(v309);
      float v308 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v310 + 40))(v310, v309);
    }
    re::ecs2::ComponentImpl<re::ecs2::ClusterShadowMarkerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    uint64_t v311 = re::ecs2::ComponentTypeRegistry::instance(v308);
    uint64_t v312 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v311, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ClusterShadowSeparatorComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    v313 = re::ecs2::ComponentImpl<re::ecs2::ClusterShadowSeparatorComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::ClusterShadowSeparatorComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v314 = re::globalAllocators(v312)[2];
      (*(void (**)(void *))(*(void *)v313 + 16))(v313);
      uint64_t v312 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v314 + 40))(v314, v313);
    }
    re::ecs2::ComponentImpl<re::ecs2::ClusterShadowSeparatorComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v315 = re::ecs2::ComponentTypeRegistry::instance(v312);
    float32x4_t v316 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v315, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AnchorShadowMarker,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    int8x16_t v317 = re::ecs2::ComponentImpl<re::ecs2::AnchorShadowMarker,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::AnchorShadowMarker,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v318 = re::globalAllocators(v316)[2];
      (*(void (**)(void *))(*(void *)v317 + 16))(v317);
      float32x4_t v316 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v318 + 40))(v318, v317);
    }
    re::ecs2::ComponentImpl<re::ecs2::AnchorShadowMarker,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v319 = re::ecs2::ComponentTypeRegistry::instance(v316);
    v320 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v319, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::MeshDeformationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    v321 = re::ecs2::ComponentImpl<re::ecs2::MeshDeformationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::MeshDeformationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v322 = re::globalAllocators(v320)[2];
      (*(void (**)(void *))(*(void *)v321 + 16))(v321);
      v320 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v322 + 40))(v322, v321);
    }
    re::ecs2::ComponentImpl<re::ecs2::MeshDeformationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    v323 = re::ecs2::ComponentTypeRegistry::instance(v320);
    v324 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v323, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::HierarchicalFadeComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    float32x4_t v325 = re::ecs2::ComponentImpl<re::ecs2::HierarchicalFadeComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::HierarchicalFadeComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v326 = re::globalAllocators(v324)[2];
      (*(void (**)(void *))(*(void *)v325 + 16))(v325);
      v324 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v326 + 40))(v326, v325);
    }
    re::ecs2::ComponentImpl<re::ecs2::HierarchicalFadeComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    int8x16_t v327 = re::ecs2::ComponentTypeRegistry::instance(v324);
    float32x4_t v328 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v327, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v329 = re::ecs2::ComponentImpl<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v330 = re::globalAllocators(v328)[2];
      (*(void (**)(void *))(*(void *)v329 + 16))(v329);
      float32x4_t v328 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v330 + 40))(v330, v329);
    }
    re::ecs2::ComponentImpl<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v331 = re::ecs2::ComponentTypeRegistry::instance(v328);
    v332 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v331, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::HierarchicalTintComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float v333 = re::ecs2::ComponentImpl<re::ecs2::HierarchicalTintComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::HierarchicalTintComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v334 = re::globalAllocators(v332)[2];
      (*(void (**)(void *))(*(void *)v333 + 16))(v333);
      v332 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v334 + 40))(v334, v333);
    }
    re::ecs2::ComponentImpl<re::ecs2::HierarchicalTintComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    unint64_t v335 = re::ecs2::ComponentTypeRegistry::instance(v332);
    float32x4_t v336 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v335, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::MeshSmoothComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v337 = re::ecs2::ComponentImpl<re::ecs2::MeshSmoothComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::MeshSmoothComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v338 = re::globalAllocators(v336)[2];
      (*(void (**)(void *))(*(void *)v337 + 16))(v337);
      float32x4_t v336 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v338 + 40))(v338, v337);
    }
    re::ecs2::ComponentImpl<re::ecs2::MeshSmoothComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v339 = re::ecs2::ComponentTypeRegistry::instance(v336);
    float32x4_t v340 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v339, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::MeshOffsetsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    int8x16_t v341 = re::ecs2::ComponentImpl<re::ecs2::MeshOffsetsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::MeshOffsetsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v342 = re::globalAllocators(v340)[2];
      (*(void (**)(void *))(*(void *)v341 + 16))(v341);
      float32x4_t v340 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v342 + 40))(v342, v341);
    }
    re::ecs2::ComponentImpl<re::ecs2::MeshOffsetsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v343 = re::ecs2::ComponentTypeRegistry::instance(v340);
    float32x4_t v344 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v343, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::EntityFunctionConstantComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    int8x16_t v345 = re::ecs2::ComponentImpl<re::ecs2::EntityFunctionConstantComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::EntityFunctionConstantComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v346 = re::globalAllocators(v344)[2];
      (*(void (**)(void *))(*(void *)v345 + 16))(v345);
      float32x4_t v344 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v346 + 40))(v346, v345);
    }
    re::ecs2::ComponentImpl<re::ecs2::EntityFunctionConstantComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    int8x16_t v347 = re::ecs2::ComponentTypeRegistry::instance(v344);
    float32x4_t v348 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v347, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::MotionStateComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    unint64_t v349 = re::ecs2::ComponentImpl<re::ecs2::MotionStateComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::MotionStateComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v350 = re::globalAllocators(v348)[2];
      (*(void (**)(void *))(*(void *)v349 + 16))(v349);
      float32x4_t v348 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v350 + 40))(v350, v349);
    }
    re::ecs2::ComponentImpl<re::ecs2::MotionStateComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    int8x16_t v351 = re::ecs2::ComponentTypeRegistry::instance(v348);
    float32x4_t v352 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v351, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::NetworkComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    float32x4_t v353 = re::ecs2::ComponentImpl<re::ecs2::NetworkComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::NetworkComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v354 = re::globalAllocators(v352)[2];
      (*(void (**)(void *))(*(void *)v353 + 16))(v353);
      float32x4_t v352 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v354 + 40))(v354, v353);
    }
    re::ecs2::ComponentImpl<re::ecs2::NetworkComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    float32x4_t v355 = re::ecs2::ComponentTypeRegistry::instance(v352);
    float32x4_t v356 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v355, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::OrthographicCameraComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    int8x16_t v357 = re::ecs2::ComponentImpl<re::ecs2::OrthographicCameraComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::OrthographicCameraComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v358 = re::globalAllocators(v356)[2];
      (*(void (**)(void *))(*(void *)v357 + 16))(v357);
      float32x4_t v356 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v358 + 40))(v358, v357);
    }
    re::ecs2::ComponentImpl<re::ecs2::OrthographicCameraComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    float32x4_t v359 = re::ecs2::ComponentTypeRegistry::instance(v356);
    float32x4_t v360 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v359, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::PassthroughDarkeningComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v361 = re::ecs2::ComponentImpl<re::ecs2::PassthroughDarkeningComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::PassthroughDarkeningComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v362 = re::globalAllocators(v360)[2];
      (*(void (**)(void *))(*(void *)v361 + 16))(v361);
      float32x4_t v360 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v362 + 40))(v362, v361);
    }
    re::ecs2::ComponentImpl<re::ecs2::PassthroughDarkeningComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    v363 = re::ecs2::ComponentTypeRegistry::instance(v360);
    float32x4_t v364 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v363, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::PerspectiveCameraComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    int8x16_t v365 = re::ecs2::ComponentImpl<re::ecs2::PerspectiveCameraComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::PerspectiveCameraComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v366 = re::globalAllocators(v364)[2];
      (*(void (**)(void *))(*(void *)v365 + 16))(v365);
      float32x4_t v364 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v366 + 40))(v366, v365);
    }
    re::ecs2::ComponentImpl<re::ecs2::PerspectiveCameraComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    int8x16_t v367 = re::ecs2::ComponentTypeRegistry::instance(v364);
    float32x4_t v368 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v367, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::PhysicsOriginComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    v369 = re::ecs2::ComponentImpl<re::ecs2::PhysicsOriginComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::PhysicsOriginComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v370 = re::globalAllocators(v368)[2];
      (*(void (**)(void *))(*(void *)v369 + 16))(v369);
      float32x4_t v368 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v370 + 40))(v370, v369);
    }
    re::ecs2::ComponentImpl<re::ecs2::PhysicsOriginComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    unint64_t v371 = re::ecs2::ComponentTypeRegistry::instance(v368);
    float32x4_t v372 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v371, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::PhysicsSimulationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    unint64_t v373 = re::ecs2::ComponentImpl<re::ecs2::PhysicsSimulationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::PhysicsSimulationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v374 = re::globalAllocators(v372)[2];
      (*(void (**)(void *))(*(void *)v373 + 16))(v373);
      float32x4_t v372 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v374 + 40))(v374, v373);
    }
    re::ecs2::ComponentImpl<re::ecs2::PhysicsSimulationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    float32x4_t v375 = re::ecs2::ComponentTypeRegistry::instance(v372);
    float32x4_t v376 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v375, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::PhysicsJointsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    float32x4_t v377 = re::ecs2::ComponentImpl<re::ecs2::PhysicsJointsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::PhysicsJointsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v378 = re::globalAllocators(v376)[2];
      (*(void (**)(void *))(*(void *)v377 + 16))(v377);
      float32x4_t v376 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v378 + 40))(v378, v377);
    }
    re::ecs2::ComponentImpl<re::ecs2::PhysicsJointsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    int8x16_t v379 = re::ecs2::ComponentTypeRegistry::instance(v376);
    float32x4_t v380 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v379, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::PlanarReflectionCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    int8x16_t v381 = re::ecs2::ComponentImpl<re::ecs2::PlanarReflectionCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::PlanarReflectionCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v382 = re::globalAllocators(v380)[2];
      (*(void (**)(void *))(*(void *)v381 + 16))(v381);
      float32x4_t v380 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v382 + 40))(v382, v381);
    }
    re::ecs2::ComponentImpl<re::ecs2::PlanarReflectionCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    int8x16_t v383 = re::ecs2::ComponentTypeRegistry::instance(v380);
    float32x4_t v384 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v383, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::PlanarReflectionReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    int8x16_t v385 = re::ecs2::ComponentImpl<re::ecs2::PlanarReflectionReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::PlanarReflectionReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v386 = re::globalAllocators(v384)[2];
      (*(void (**)(void *))(*(void *)v385 + 16))(v385);
      float32x4_t v384 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v386 + 40))(v386, v385);
    }
    re::ecs2::ComponentImpl<re::ecs2::PlanarReflectionReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v387 = re::ecs2::ComponentTypeRegistry::instance(v384);
    int8x16_t v388 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v387, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::PrimitiveBoxComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v389 = re::ecs2::ComponentImpl<re::ecs2::PrimitiveBoxComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::PrimitiveBoxComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v390 = re::globalAllocators(v388)[2];
      (*(void (**)(void *))(*(void *)v389 + 16))(v389);
      int8x16_t v388 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v390 + 40))(v390, v389);
    }
    re::ecs2::ComponentImpl<re::ecs2::PrimitiveBoxComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    unint64_t v391 = re::ecs2::ComponentTypeRegistry::instance(v388);
    float32x4_t v392 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v391, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::PrimitiveBoxWithRoundedCornersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    int8x16_t v393 = re::ecs2::ComponentImpl<re::ecs2::PrimitiveBoxWithRoundedCornersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::PrimitiveBoxWithRoundedCornersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v394 = re::globalAllocators(v392)[2];
      (*(void (**)(void *))(*(void *)v393 + 16))(v393);
      float32x4_t v392 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v394 + 40))(v394, v393);
    }
    re::ecs2::ComponentImpl<re::ecs2::PrimitiveBoxWithRoundedCornersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    int8x16_t v395 = re::ecs2::ComponentTypeRegistry::instance(v392);
    unint64_t v396 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v395, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::PrimitiveCapsuleComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    unint64_t v397 = re::ecs2::ComponentImpl<re::ecs2::PrimitiveCapsuleComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::PrimitiveCapsuleComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v398 = re::globalAllocators(v396)[2];
      (*(void (**)(void *))(*(void *)v397 + 16))(v397);
      unint64_t v396 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v398 + 40))(v398, v397);
    }
    re::ecs2::ComponentImpl<re::ecs2::PrimitiveCapsuleComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    int8x16_t v399 = re::ecs2::ComponentTypeRegistry::instance(v396);
    float32x4_t v400 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v399, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::PrimitiveConeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    v401 = re::ecs2::ComponentImpl<re::ecs2::PrimitiveConeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::PrimitiveConeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v402 = re::globalAllocators(v400)[2];
      (*(void (**)(void *))(*(void *)v401 + 16))(v401);
      float32x4_t v400 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v402 + 40))(v402, v401);
    }
    re::ecs2::ComponentImpl<re::ecs2::PrimitiveConeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v403 = re::ecs2::ComponentTypeRegistry::instance(v400);
    float32x4_t v404 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v403, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::PrimitiveCylinderComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    int8x16_t v405 = re::ecs2::ComponentImpl<re::ecs2::PrimitiveCylinderComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::PrimitiveCylinderComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v406 = re::globalAllocators(v404)[2];
      (*(void (**)(void *))(*(void *)v405 + 16))(v405);
      float32x4_t v404 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v406 + 40))(v406, v405);
    }
    re::ecs2::ComponentImpl<re::ecs2::PrimitiveCylinderComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    int8x16_t v407 = re::ecs2::ComponentTypeRegistry::instance(v404);
    float32x4_t v408 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v407, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::PrimitivePlaneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v409 = re::ecs2::ComponentImpl<re::ecs2::PrimitivePlaneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::PrimitivePlaneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v410 = re::globalAllocators(v408)[2];
      (*(void (**)(void *))(*(void *)v409 + 16))(v409);
      float32x4_t v408 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v410 + 40))(v410, v409);
    }
    re::ecs2::ComponentImpl<re::ecs2::PrimitivePlaneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v411 = re::ecs2::ComponentTypeRegistry::instance(v408);
    int8x16_t v412 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v411, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::PrimitivePyramidComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v413 = re::ecs2::ComponentImpl<re::ecs2::PrimitivePyramidComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::PrimitivePyramidComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v414 = re::globalAllocators(v412)[2];
      (*(void (**)(void *))(*(void *)v413 + 16))(v413);
      int8x16_t v412 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v414 + 40))(v414, v413);
    }
    re::ecs2::ComponentImpl<re::ecs2::PrimitivePyramidComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v415 = re::ecs2::ComponentTypeRegistry::instance(v412);
    int8x16_t v416 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v415, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::PrimitiveSphereComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    unint64_t v417 = re::ecs2::ComponentImpl<re::ecs2::PrimitiveSphereComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::PrimitiveSphereComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v418 = re::globalAllocators(v416)[2];
      (*(void (**)(void *))(*(void *)v417 + 16))(v417);
      int8x16_t v416 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v418 + 40))(v418, v417);
    }
    re::ecs2::ComponentImpl<re::ecs2::PrimitiveSphereComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    int8x16_t v419 = re::ecs2::ComponentTypeRegistry::instance(v416);
    float32x4_t v420 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v419, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::PrimitiveTetrahedronComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    int8x16_t v421 = re::ecs2::ComponentImpl<re::ecs2::PrimitiveTetrahedronComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::PrimitiveTetrahedronComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v422 = re::globalAllocators(v420)[2];
      (*(void (**)(void *))(*(void *)v421 + 16))(v421);
      float32x4_t v420 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v422 + 40))(v422, v421);
    }
    re::ecs2::ComponentImpl<re::ecs2::PrimitiveTetrahedronComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v423 = re::ecs2::ComponentTypeRegistry::instance(v420);
    int8x16_t v424 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v423, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::PrimitiveTubeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v425 = re::ecs2::ComponentImpl<re::ecs2::PrimitiveTubeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::PrimitiveTubeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v426 = re::globalAllocators(v424)[2];
      (*(void (**)(void *))(*(void *)v425 + 16))(v425);
      int8x16_t v424 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v426 + 40))(v426, v425);
    }
    re::ecs2::ComponentImpl<re::ecs2::PrimitiveTubeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    unint64_t v427 = re::ecs2::ComponentTypeRegistry::instance(v424);
    unint64_t v428 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v427, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::RayCastComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType);
    uint64_t v429 = re::ecs2::ComponentImpl<re::ecs2::RayCastComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::RayCastComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType)
    {
      uint64_t v430 = re::globalAllocators(v428)[2];
      (*(void (**)(void *))(*(void *)v429 + 16))(v429);
      unint64_t v428 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v430 + 40))(v430, v429);
    }
    re::ecs2::ComponentImpl<re::ecs2::RayCastComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType = 0;
    v431 = re::ecs2::ComponentTypeRegistry::instance(v428);
    uint64_t v432 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v431, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::RayCastResultComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType);
    v433 = re::ecs2::ComponentImpl<re::ecs2::RayCastResultComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::RayCastResultComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType)
    {
      uint64_t v434 = re::globalAllocators(v432)[2];
      (*(void (**)(void *))(*(void *)v433 + 16))(v433);
      uint64_t v432 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v434 + 40))(v434, v433);
    }
    re::ecs2::ComponentImpl<re::ecs2::RayCastResultComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType = 0;
    v435 = re::ecs2::ComponentTypeRegistry::instance(v432);
    v436 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v435, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::RayTracedShadowReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    long long v437 = re::ecs2::ComponentImpl<re::ecs2::RayTracedShadowReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::RayTracedShadowReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v438 = re::globalAllocators(v436)[2];
      (*(void (**)(void *))(*(void *)v437 + 16))(v437);
      v436 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v438 + 40))(v438, v437);
    }
    re::ecs2::ComponentImpl<re::ecs2::RayTracedShadowReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v439 = re::ecs2::ComponentTypeRegistry::instance(v436);
    float32x4_t v440 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v439, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::RenderOptionsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    int8x16_t v441 = re::ecs2::ComponentImpl<re::ecs2::RenderOptionsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::RenderOptionsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v442 = re::globalAllocators(v440)[2];
      (*(void (**)(void *))(*(void *)v441 + 16))(v441);
      float32x4_t v440 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v442 + 40))(v442, v441);
    }
    re::ecs2::ComponentImpl<re::ecs2::RenderOptionsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    v443 = re::ecs2::ComponentTypeRegistry::instance(v440);
    v444 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v443, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::PhysicsDebugComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v445 = re::ecs2::ComponentImpl<re::ecs2::PhysicsDebugComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::PhysicsDebugComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v446 = re::globalAllocators(v444)[2];
      (*(void (**)(void *))(*(void *)v445 + 16))(v445);
      v444 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v446 + 40))(v446, v445);
    }
    re::ecs2::ComponentImpl<re::ecs2::PhysicsDebugComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v447 = re::ecs2::ComponentTypeRegistry::instance(v444);
    float32x4_t v448 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v447, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::RigidBodyComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    int8x16_t v449 = re::ecs2::ComponentImpl<re::ecs2::RigidBodyComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::RigidBodyComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v450 = re::globalAllocators(v448)[2];
      (*(void (**)(void *))(*(void *)v449 + 16))(v449);
      float32x4_t v448 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v450 + 40))(v450, v449);
    }
    re::ecs2::ComponentImpl<re::ecs2::RigidBodyComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    float32x4_t v451 = re::ecs2::ComponentTypeRegistry::instance(v448);
    int8x16_t v452 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v451, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::RigComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    float32x4_t v453 = re::ecs2::ComponentImpl<re::ecs2::RigComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::RigComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v454 = re::globalAllocators(v452)[2];
      (*(void (**)(void *))(*(void *)v453 + 16))(v453);
      int8x16_t v452 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v454 + 40))(v454, v453);
    }
    re::ecs2::ComponentImpl<re::ecs2::RigComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    float32x4_t v455 = re::ecs2::ComponentTypeRegistry::instance(v452);
    float32x4_t v456 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v455, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::IKParametersComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    float32x4_t v457 = re::ecs2::ComponentImpl<re::ecs2::IKParametersComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::IKParametersComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v458 = re::globalAllocators(v456)[2];
      (*(void (**)(void *))(*(void *)v457 + 16))(v457);
      float32x4_t v456 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v458 + 40))(v458, v457);
    }
    re::ecs2::ComponentImpl<re::ecs2::IKParametersComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    float32x4_t v459 = re::ecs2::ComponentTypeRegistry::instance(v456);
    float32x4_t v460 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v459, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::InputTargetComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    float32x4_t v461 = re::ecs2::ComponentImpl<re::ecs2::InputTargetComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::InputTargetComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v462 = re::globalAllocators(v460)[2];
      (*(void (**)(void *))(*(void *)v461 + 16))(v461);
      float32x4_t v460 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v462 + 40))(v462, v461);
    }
    re::ecs2::ComponentImpl<re::ecs2::InputTargetComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    int8x16_t v463 = re::ecs2::ComponentTypeRegistry::instance(v460);
    float32x4_t v464 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v463, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::SkeletalDebugComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    int8x16_t v465 = re::ecs2::ComponentImpl<re::ecs2::SkeletalDebugComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::SkeletalDebugComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v466 = re::globalAllocators(v464)[2];
      (*(void (**)(void *))(*(void *)v465 + 16))(v465);
      float32x4_t v464 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v466 + 40))(v466, v465);
    }
    re::ecs2::ComponentImpl<re::ecs2::SkeletalDebugComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v467 = re::ecs2::ComponentTypeRegistry::instance(v464);
    float32x4_t v468 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v467, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::SkeletalPoseBufferComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v469 = re::ecs2::ComponentImpl<re::ecs2::SkeletalPoseBufferComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::SkeletalPoseBufferComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v470 = re::globalAllocators(v468)[2];
      (*(void (**)(void *))(*(void *)v469 + 16))(v469);
      float32x4_t v468 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v470 + 40))(v470, v469);
    }
    re::ecs2::ComponentImpl<re::ecs2::SkeletalPoseBufferComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v471 = re::ecs2::ComponentTypeRegistry::instance(v468);
    float32x4_t v472 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v471, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::SkeletalPoseComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    int8x16_t v473 = re::ecs2::ComponentImpl<re::ecs2::SkeletalPoseComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::SkeletalPoseComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v474 = re::globalAllocators(v472)[2];
      (*(void (**)(void *))(*(void *)v473 + 16))(v473);
      float32x4_t v472 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v474 + 40))(v474, v473);
    }
    re::ecs2::ComponentImpl<re::ecs2::SkeletalPoseComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    float32x4_t v475 = re::ecs2::ComponentTypeRegistry::instance(v472);
    float32x4_t v476 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v475, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::SkyboxComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    float32x4_t v477 = re::ecs2::ComponentImpl<re::ecs2::SkyboxComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::SkyboxComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v478 = re::globalAllocators(v476)[2];
      (*(void (**)(void *))(*(void *)v477 + 16))(v477);
      float32x4_t v476 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v478 + 40))(v478, v477);
    }
    re::ecs2::ComponentImpl<re::ecs2::SkyboxComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    float32x4_t v479 = re::ecs2::ComponentTypeRegistry::instance(v476);
    float32x4_t v480 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v479, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::StateMachineComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    int8x16_t v481 = re::ecs2::ComponentImpl<re::ecs2::StateMachineComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::StateMachineComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v482 = re::globalAllocators(v480)[2];
      (*(void (**)(void *))(*(void *)v481 + 16))(v481);
      float32x4_t v480 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v482 + 40))(v482, v481);
    }
    re::ecs2::ComponentImpl<re::ecs2::StateMachineComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    int8x16_t v483 = re::ecs2::ComponentTypeRegistry::instance(v480);
    float32x4_t v484 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v483, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::StaticTextComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v485 = re::ecs2::ComponentImpl<re::ecs2::StaticTextComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::StaticTextComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v486 = re::globalAllocators(v484)[2];
      (*(void (**)(void *))(*(void *)v485 + 16))(v485);
      float32x4_t v484 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v486 + 40))(v486, v485);
    }
    re::ecs2::ComponentImpl<re::ecs2::StaticTextComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v487 = re::ecs2::ComponentTypeRegistry::instance(v484);
    int8x16_t v488 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v487, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::Static3DTextComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    float32x4_t v489 = re::ecs2::ComponentImpl<re::ecs2::Static3DTextComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::Static3DTextComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v490 = re::globalAllocators(v488)[2];
      (*(void (**)(void *))(*(void *)v489 + 16))(v489);
      int8x16_t v488 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v490 + 40))(v490, v489);
    }
    re::ecs2::ComponentImpl<re::ecs2::Static3DTextComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    int8x16_t v491 = re::ecs2::ComponentTypeRegistry::instance(v488);
    unint64_t v492 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v491, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::TextComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    float32x4_t v493 = re::ecs2::ComponentImpl<re::ecs2::TextComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::TextComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v494 = re::globalAllocators(v492)[2];
      (*(void (**)(void *))(*(void *)v493 + 16))(v493);
      unint64_t v492 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v494 + 40))(v494, v493);
    }
    re::ecs2::ComponentImpl<re::ecs2::TextComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    float32x4_t v495 = re::ecs2::ComponentTypeRegistry::instance(v492);
    float32x4_t v496 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v495, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::SubsceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v497 = re::ecs2::ComponentImpl<re::ecs2::SubsceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::SubsceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v498 = re::globalAllocators(v496)[2];
      (*(void (**)(void *))(*(void *)v497 + 16))(v497);
      float32x4_t v496 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v498 + 40))(v498, v497);
    }
    re::ecs2::ComponentImpl<re::ecs2::SubsceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    int8x16_t v499 = re::ecs2::ComponentTypeRegistry::instance(v496);
    float32x4_t v500 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v499, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::TransformComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    int8x16_t v501 = re::ecs2::ComponentImpl<re::ecs2::TransformComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::TransformComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v502 = re::globalAllocators(v500)[2];
      (*(void (**)(void *))(*(void *)v501 + 16))(v501);
      float32x4_t v500 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v502 + 40))(v502, v501);
    }
    re::ecs2::ComponentImpl<re::ecs2::TransformComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    float32x4_t v503 = re::ecs2::ComponentTypeRegistry::instance(v500);
    float32x4_t v504 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v503, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::UISortingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    float32x4_t v505 = re::ecs2::ComponentImpl<re::ecs2::UISortingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::UISortingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v506 = re::globalAllocators(v504)[2];
      (*(void (**)(void *))(*(void *)v505 + 16))(v505);
      float32x4_t v504 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v506 + 40))(v506, v505);
    }
    re::ecs2::ComponentImpl<re::ecs2::UISortingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    float32x4_t v507 = re::ecs2::ComponentTypeRegistry::instance(v504);
    float32x4_t v508 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v507, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::RemoteEffectsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    int8x16_t v509 = re::ecs2::ComponentImpl<re::ecs2::RemoteEffectsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::RemoteEffectsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v510 = re::globalAllocators(v508)[2];
      (*(void (**)(void *))(*(void *)v509 + 16))(v509);
      float32x4_t v508 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v510 + 40))(v510, v509);
    }
    re::ecs2::ComponentImpl<re::ecs2::RemoteEffectsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v511 = re::ecs2::ComponentTypeRegistry::instance(v508);
    float32x4_t v512 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v511, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::VideoComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    int8x16_t v513 = re::ecs2::ComponentImpl<re::ecs2::VideoComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::VideoComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v514 = re::globalAllocators(v512)[2];
      (*(void (**)(void *))(*(void *)v513 + 16))(v513);
      float32x4_t v512 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v514 + 40))(v514, v513);
    }
    re::ecs2::ComponentImpl<re::ecs2::VideoComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    int8x16_t v515 = re::ecs2::ComponentTypeRegistry::instance(v512);
    float32x4_t v516 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v515, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::VideoPlayerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v517 = re::ecs2::ComponentImpl<re::ecs2::VideoPlayerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::VideoPlayerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v518 = re::globalAllocators(v516)[2];
      (*(void (**)(void *))(*(void *)v517 + 16))(v517);
      float32x4_t v516 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v518 + 40))(v518, v517);
    }
    re::ecs2::ComponentImpl<re::ecs2::VideoPlayerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    int8x16_t v519 = re::ecs2::ComponentTypeRegistry::instance(v516);
    float32x4_t v520 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v519, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::VideoProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v521 = re::ecs2::ComponentImpl<re::ecs2::VideoProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::VideoProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v522 = re::globalAllocators(v520)[2];
      (*(void (**)(void *))(*(void *)v521 + 16))(v521);
      float32x4_t v520 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v522 + 40))(v522, v521);
    }
    re::ecs2::ComponentImpl<re::ecs2::VideoProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    v523 = re::ecs2::ComponentTypeRegistry::instance(v520);
    int v524 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v523, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::VideoPlayerStatusComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    uint32x4_t v525 = re::ecs2::ComponentImpl<re::ecs2::VideoPlayerStatusComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::VideoPlayerStatusComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v526 = re::globalAllocators(v524)[2];
      (*(void (**)(void *))(*(void *)v525 + 16))(v525);
      int v524 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v526 + 40))(v526, v525);
    }
    re::ecs2::ComponentImpl<re::ecs2::VideoPlayerStatusComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v527 = re::ecs2::ComponentTypeRegistry::instance(v524);
    v528 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v527, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    v529 = re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v530 = re::globalAllocators(v528)[2];
      (*(void (**)(void *))(*(void *)v529 + 16))(v529);
      v528 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v530 + 40))(v530, v529);
    }
    re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    uint64_t v531 = re::ecs2::ComponentTypeRegistry::instance(v528);
    v532 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v531, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    uint64_t v533 = re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v534 = re::globalAllocators(v532)[2];
      (*(void (**)(void *))(*(void *)v533 + 16))(v533);
      v532 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v534 + 40))(v534, v533);
    }
    re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v535 = re::ecs2::ComponentTypeRegistry::instance(v532);
    uint64_t v536 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v535, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingRenderOptionsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    uint64_t v537 = re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingRenderOptionsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingRenderOptionsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v538 = re::globalAllocators(v536)[2];
      (*(void (**)(void *))(*(void *)v537 + 16))(v537);
      uint64_t v536 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v538 + 40))(v538, v537);
    }
    re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingRenderOptionsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    unint64_t v539 = re::ecs2::ComponentTypeRegistry::instance(v536);
    uint64_t v540 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v539, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::SpatialSceneClassificationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    uint64_t v541 = re::ecs2::ComponentImpl<re::ecs2::SpatialSceneClassificationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::SpatialSceneClassificationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v542 = re::globalAllocators(v540)[2];
      (*(void (**)(void *))(*(void *)v541 + 16))(v541);
      uint64_t v540 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v542 + 40))(v542, v541);
    }
    re::ecs2::ComponentImpl<re::ecs2::SpatialSceneClassificationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    unint64_t v543 = re::ecs2::ComponentTypeRegistry::instance(v540);
    unint64_t v544 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v543, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::VoiceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    unsigned int v545 = re::ecs2::ComponentImpl<re::ecs2::VoiceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::VoiceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v546 = re::globalAllocators(v544)[2];
      (*(void (**)(void *))(*(void *)v545 + 16))(v545);
      unint64_t v544 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v546 + 40))(v546, v545);
    }
    re::ecs2::ComponentImpl<re::ecs2::VoiceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    uint64_t v547 = re::ecs2::ComponentTypeRegistry::instance(v544);
    float32x4_t v548 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v547, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::GroundPlaneComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    float32x4_t v549 = re::ecs2::ComponentImpl<re::ecs2::GroundPlaneComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::GroundPlaneComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v550 = re::globalAllocators(v548)[2];
      (*(void (**)(void *))(*(void *)v549 + 16))(v549);
      float32x4_t v548 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v550 + 40))(v550, v549);
    }
    re::ecs2::ComponentImpl<re::ecs2::GroundPlaneComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    float32x4_t v551 = re::ecs2::ComponentTypeRegistry::instance(v548);
    float32x4_t v552 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v551, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::PinComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    float32x4_t v553 = re::ecs2::ComponentImpl<re::ecs2::PinComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::PinComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v554 = re::globalAllocators(v552)[2];
      (*(void (**)(void *))(*(void *)v553 + 16))(v553);
      float32x4_t v552 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v554 + 40))(v554, v553);
    }
    re::ecs2::ComponentImpl<re::ecs2::PinComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    float32x4_t v555 = re::ecs2::ComponentTypeRegistry::instance(v552);
    int8x16_t v556 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v555, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::PhysicsConstraintsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    float32x4_t v557 = re::ecs2::ComponentImpl<re::ecs2::PhysicsConstraintsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::PhysicsConstraintsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v558 = re::globalAllocators(v556)[2];
      (*(void (**)(void *))(*(void *)v557 + 16))(v557);
      int8x16_t v556 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v558 + 40))(v558, v557);
    }
    re::ecs2::ComponentImpl<re::ecs2::PhysicsConstraintsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    float32x4_t v559 = re::ecs2::ComponentTypeRegistry::instance(v556);
    float32x4_t v560 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v559, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::PortalComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    int8x16_t v561 = re::ecs2::ComponentImpl<re::ecs2::PortalComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::PortalComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v562 = re::globalAllocators(v560)[2];
      (*(void (**)(void *))(*(void *)v561 + 16))(v561);
      float32x4_t v560 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v562 + 40))(v562, v561);
    }
    re::ecs2::ComponentImpl<re::ecs2::PortalComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    int8x16_t v563 = re::ecs2::ComponentTypeRegistry::instance(v560);
    unint64_t v564 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v563, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::WorldScopeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v565 = re::ecs2::ComponentImpl<re::ecs2::WorldScopeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::WorldScopeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v566 = re::globalAllocators(v564)[2];
      (*(void (**)(void *))(*(void *)v565 + 16))(v565);
      unint64_t v564 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v566 + 40))(v566, v565);
    }
    re::ecs2::ComponentImpl<re::ecs2::WorldScopeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v567 = re::ecs2::ComponentTypeRegistry::instance(v564);
    float32x4_t v568 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v567, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::WorldRootComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    float32x4_t v569 = re::ecs2::ComponentImpl<re::ecs2::WorldRootComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::WorldRootComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v570 = re::globalAllocators(v568)[2];
      (*(void (**)(void *))(*(void *)v569 + 16))(v569);
      float32x4_t v568 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v570 + 40))(v570, v569);
    }
    re::ecs2::ComponentImpl<re::ecs2::WorldRootComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    float32x4_t v571 = re::ecs2::ComponentTypeRegistry::instance(v568);
    float32x4_t v572 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v571, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::PortalCrossingFlagsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    int8x16_t v573 = re::ecs2::ComponentImpl<re::ecs2::PortalCrossingFlagsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::PortalCrossingFlagsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v574 = re::globalAllocators(v572)[2];
      (*(void (**)(void *))(*(void *)v573 + 16))(v573);
      float32x4_t v572 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v574 + 40))(v574, v573);
    }
    re::ecs2::ComponentImpl<re::ecs2::PortalCrossingFlagsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    float32x4_t v575 = re::ecs2::ComponentTypeRegistry::instance(v572);
    v576 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v575, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::VertexCacheComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    uint64_t v577 = re::ecs2::ComponentImpl<re::ecs2::VertexCacheComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::VertexCacheComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v578 = re::globalAllocators(v576)[2];
      (*(void (**)(void *))(*(void *)v577 + 16))(v577);
      v576 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v578 + 40))(v578, v577);
    }
    re::ecs2::ComponentImpl<re::ecs2::VertexCacheComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    unsigned int v579 = re::ecs2::ComponentTypeRegistry::instance(v576);
    v580 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v579, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v581 = re::ecs2::ComponentImpl<re::ecs2::VisualProxyCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::VisualProxyCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v582 = re::globalAllocators(v580)[2];
      (*(void (**)(void *))(*(void *)v581 + 16))(v581);
      v580 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v582 + 40))(v582, v581);
    }
    re::ecs2::ComponentImpl<re::ecs2::VisualProxyCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v583 = re::ecs2::ComponentTypeRegistry::instance(v580);
    v584 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v583, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v585 = re::ecs2::ComponentImpl<re::ecs2::VisualProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::VisualProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v586 = re::globalAllocators(v584)[2];
      (*(void (**)(void *))(*(void *)v585 + 16))(v585);
      v584 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v586 + 40))(v586, v585);
    }
    re::ecs2::ComponentImpl<re::ecs2::VisualProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v587 = re::ecs2::ComponentTypeRegistry::instance(v584);
    float32x4_t v588 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v587, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyFilterComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    int8x16_t v589 = re::ecs2::ComponentImpl<re::ecs2::VisualProxyFilterComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::VisualProxyFilterComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v590 = re::globalAllocators(v588)[2];
      (*(void (**)(void *))(*(void *)v589 + 16))(v589);
      float32x4_t v588 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v590 + 40))(v590, v589);
    }
    re::ecs2::ComponentImpl<re::ecs2::VisualProxyFilterComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v591 = re::ecs2::ComponentTypeRegistry::instance(v588);
    int8x16_t v592 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v591, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    unint64_t v593 = re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v594 = re::globalAllocators(v592)[2];
      (*(void (**)(void *))(*(void *)v593 + 16))(v593);
      int8x16_t v592 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v594 + 40))(v594, v593);
    }
    re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    v595 = re::ecs2::ComponentTypeRegistry::instance(v592);
    v596 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v595, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v597 = re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v598 = re::globalAllocators(v596)[2];
      (*(void (**)(void *))(*(void *)v597 + 16))(v597);
      v596 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v598 + 40))(v598, v597);
    }
    re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    unint64_t v599 = re::ecs2::ComponentTypeRegistry::instance(v596);
    long long v600 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v599, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AllowsCASeparatedProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    int32x4_t v601 = re::ecs2::ComponentImpl<re::ecs2::AllowsCASeparatedProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::AllowsCASeparatedProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v602 = re::globalAllocators(v600)[2];
      (*(void (**)(void *))(*(void *)v601 + 16))(v601);
      long long v600 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v602 + 40))(v602, v601);
    }
    re::ecs2::ComponentImpl<re::ecs2::AllowsCASeparatedProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x2_t v603 = re::ecs2::ComponentTypeRegistry::instance(v600);
    float32x4_t v604 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v603, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ThrottleComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float v605 = re::ecs2::ComponentImpl<re::ecs2::ThrottleComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::ThrottleComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v606 = re::globalAllocators(v604)[2];
      (*(void (**)(void *))(*(void *)v605 + 16))(v605);
      float32x4_t v604 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v606 + 40))(v606, v605);
    }
    re::ecs2::ComponentImpl<re::ecs2::ThrottleComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v607 = re::ecs2::ComponentTypeRegistry::instance(v604);
    v608 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v607, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::TimebaseComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v609 = re::ecs2::ComponentImpl<re::ecs2::TimebaseComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::TimebaseComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v610 = re::globalAllocators(v608)[2];
      (*(void (**)(void *))(*(void *)v609 + 16))(v609);
      v608 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v610 + 40))(v610, v609);
    }
    re::ecs2::ComponentImpl<re::ecs2::TimebaseComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v611 = re::ecs2::ComponentTypeRegistry::instance(v608);
    int8x16_t v612 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v611, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::NetworkAssetComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v613 = re::ecs2::ComponentImpl<re::ecs2::NetworkAssetComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::NetworkAssetComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v614 = re::globalAllocators(v612)[2];
      (*(void (**)(void *))(*(void *)v613 + 16))(v613);
      int8x16_t v612 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v614 + 40))(v614, v613);
    }
    re::ecs2::ComponentImpl<re::ecs2::NetworkAssetComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v615 = re::ecs2::ComponentTypeRegistry::instance(v612);
    int8x16_t v616 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v615, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::DeferredActivationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v617 = re::ecs2::ComponentImpl<re::ecs2::DeferredActivationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::DeferredActivationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v618 = re::globalAllocators(v616)[2];
      (*(void (**)(void *))(*(void *)v617 + 16))(v617);
      int8x16_t v616 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v618 + 40))(v618, v617);
    }
    re::ecs2::ComponentImpl<re::ecs2::DeferredActivationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    int8x16_t v619 = re::ecs2::ComponentTypeRegistry::instance(v616);
    unint64_t v620 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v619, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::LoadTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    uint64_t v621 = re::ecs2::ComponentImpl<re::ecs2::LoadTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::LoadTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v622 = re::globalAllocators(v620)[2];
      (*(void (**)(void *))(*(void *)v621 + 16))(v621);
      unint64_t v620 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v622 + 40))(v622, v621);
    }
    re::ecs2::ComponentImpl<re::ecs2::LoadTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    unint64_t v623 = re::ecs2::ComponentTypeRegistry::instance(v620);
    unint64_t v624 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v623, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::LatencyEventsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    unint64_t v625 = re::ecs2::ComponentImpl<re::ecs2::LatencyEventsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::LatencyEventsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v626 = re::globalAllocators(v624)[2];
      (*(void (**)(void *))(*(void *)v625 + 16))(v625);
      unint64_t v624 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v626 + 40))(v626, v625);
    }
    re::ecs2::ComponentImpl<re::ecs2::LatencyEventsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    uint64_t v627 = re::ecs2::ComponentTypeRegistry::instance(v624);
    uint64_t v628 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v627, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::RenderCallbacksComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v629 = re::ecs2::ComponentImpl<re::ecs2::RenderCallbacksComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::RenderCallbacksComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v630 = re::globalAllocators(v628)[2];
      (*(void (**)(void *))(*(void *)v629 + 16))(v629);
      uint64_t v628 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v630 + 40))(v630, v629);
    }
    re::ecs2::ComponentImpl<re::ecs2::RenderCallbacksComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v631 = re::ecs2::ComponentTypeRegistry::instance(v628);
    float32x4_t v632 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v631, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::TintComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v633 = re::ecs2::ComponentImpl<re::ecs2::TintComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::TintComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v634 = re::globalAllocators(v632)[2];
      (*(void (**)(void *))(*(void *)v633 + 16))(v633);
      float32x4_t v632 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v634 + 40))(v634, v633);
    }
    re::ecs2::ComponentImpl<re::ecs2::TintComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    int8x16_t v635 = re::ecs2::ComponentTypeRegistry::instance(v632);
    float32x4_t v636 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v635, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ProbeClusterExclusionComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    int8x16_t v637 = re::ecs2::ComponentImpl<re::ecs2::ProbeClusterExclusionComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::ProbeClusterExclusionComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v638 = re::globalAllocators(v636)[2];
      (*(void (**)(void *))(*(void *)v637 + 16))(v637);
      float32x4_t v636 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v638 + 40))(v638, v637);
    }
    re::ecs2::ComponentImpl<re::ecs2::ProbeClusterExclusionComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v639 = re::ecs2::ComponentTypeRegistry::instance(v636);
    float32x4_t v640 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v639, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::LinkedTLEComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v641 = re::ecs2::ComponentImpl<re::ecs2::LinkedTLEComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::LinkedTLEComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v642 = re::globalAllocators(v640)[2];
      (*(void (**)(void *))(*(void *)v641 + 16))(v641);
      float32x4_t v640 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v642 + 40))(v642, v641);
    }
    re::ecs2::ComponentImpl<re::ecs2::LinkedTLEComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v643 = re::ecs2::ComponentTypeRegistry::instance(v640);
    int8x16_t v644 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v643, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AssetStateComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    unint64_t v645 = re::ecs2::ComponentImpl<re::ecs2::AssetStateComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::AssetStateComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v646 = re::globalAllocators(v644)[2];
      (*(void (**)(void *))(*(void *)v645 + 16))(v645);
      int8x16_t v644 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v646 + 40))(v646, v645);
    }
    re::ecs2::ComponentImpl<re::ecs2::AssetStateComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    int8x16_t v647 = re::ecs2::ComponentTypeRegistry::instance(v644);
    float32x4_t v648 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v647, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AssetPreloadComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v649 = re::ecs2::ComponentImpl<re::ecs2::AssetPreloadComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::AssetPreloadComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v650 = re::globalAllocators(v648)[2];
      (*(void (**)(void *))(*(void *)v649 + 16))(v649);
      float32x4_t v648 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v650 + 40))(v650, v649);
    }
    re::ecs2::ComponentImpl<re::ecs2::AssetPreloadComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v651 = re::ecs2::ComponentTypeRegistry::instance(v648);
    float32x4_t v652 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v651, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ImageBasedReflectionRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v653 = re::ecs2::ComponentImpl<re::ecs2::ImageBasedReflectionRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::ImageBasedReflectionRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v654 = re::globalAllocators(v652)[2];
      (*(void (**)(void *))(*(void *)v653 + 16))(v653);
      float32x4_t v652 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v654 + 40))(v654, v653);
    }
    re::ecs2::ComponentImpl<re::ecs2::ImageBasedReflectionRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v655 = re::ecs2::ComponentTypeRegistry::instance(v652);
    float32x4_t v656 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v655, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ImageBasedReflectionContentComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v657 = re::ecs2::ComponentImpl<re::ecs2::ImageBasedReflectionContentComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::ImageBasedReflectionContentComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v658 = re::globalAllocators(v656)[2];
      (*(void (**)(void *))(*(void *)v657 + 16))(v657);
      float32x4_t v656 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v658 + 40))(v658, v657);
    }
    re::ecs2::ComponentImpl<re::ecs2::ImageBasedReflectionContentComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v659 = re::ecs2::ComponentTypeRegistry::instance(v656);
    float32x4_t v660 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v659, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ImageBasedReflectionReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v661 = re::ecs2::ComponentImpl<re::ecs2::ImageBasedReflectionReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::ImageBasedReflectionReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v662 = re::globalAllocators(v660)[2];
      (*(void (**)(void *))(*(void *)v661 + 16))(v661);
      float32x4_t v660 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v662 + 40))(v662, v661);
    }
    re::ecs2::ComponentImpl<re::ecs2::ImageBasedReflectionReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v663 = re::ecs2::ComponentTypeRegistry::instance(v660);
    float32x4_t v664 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v663, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::WrapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    long long v665 = re::ecs2::ComponentImpl<re::ecs2::WrapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::WrapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v666 = re::globalAllocators(v664)[2];
      (*(void (**)(void *))(*(void *)v665 + 16))(v665);
      float32x4_t v664 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v666 + 40))(v666, v665);
    }
    re::ecs2::ComponentImpl<re::ecs2::WrapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v667 = re::ecs2::ComponentTypeRegistry::instance(v664);
    float32x4_t v668 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v667, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::VFXEmitterComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    float32x4_t v669 = re::ecs2::ComponentImpl<re::ecs2::VFXEmitterComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::VFXEmitterComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v670 = re::globalAllocators(v668)[2];
      (*(void (**)(void *))(*(void *)v669 + 16))(v669);
      float32x4_t v668 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v670 + 40))(v670, v669);
    }
    re::ecs2::ComponentImpl<re::ecs2::VFXEmitterComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    float32x4_t v671 = re::ecs2::ComponentTypeRegistry::instance(v668);
    float32x4_t v672 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v671, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ShadowClusterRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v673 = re::ecs2::ComponentImpl<re::ecs2::ShadowClusterRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::ShadowClusterRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v674 = re::globalAllocators(v672)[2];
      (*(void (**)(void *))(*(void *)v673 + 16))(v673);
      float32x4_t v672 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v674 + 40))(v674, v673);
    }
    re::ecs2::ComponentImpl<re::ecs2::ShadowClusterRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v675 = re::ecs2::ComponentTypeRegistry::instance(v672);
    float32x4_t v676 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v675, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ShadowProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v677 = re::ecs2::ComponentImpl<re::ecs2::ShadowProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::ShadowProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v678 = re::globalAllocators(v676)[2];
      (*(void (**)(void *))(*(void *)v677 + 16))(v677);
      float32x4_t v676 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v678 + 40))(v678, v677);
    }
    re::ecs2::ComponentImpl<re::ecs2::ShadowProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v679 = re::ecs2::ComponentTypeRegistry::instance(v676);
    float32x4_t v680 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v679, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::RenderPassGroupComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v681 = re::ecs2::ComponentImpl<re::ecs2::RenderPassGroupComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::RenderPassGroupComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v682 = re::globalAllocators(v680)[2];
      (*(void (**)(void *))(*(void *)v681 + 16))(v681);
      float32x4_t v680 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v682 + 40))(v682, v681);
    }
    re::ecs2::ComponentImpl<re::ecs2::RenderPassGroupComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v683 = re::ecs2::ComponentTypeRegistry::instance(v680);
    float32x4_t v684 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v683, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::RenderPassGroupReferenceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    float32x4_t v685 = re::ecs2::ComponentImpl<re::ecs2::RenderPassGroupReferenceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::RenderPassGroupReferenceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v686 = re::globalAllocators(v684)[2];
      (*(void (**)(void *))(*(void *)v685 + 16))(v685);
      float32x4_t v684 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v686 + 40))(v686, v685);
    }
    re::ecs2::ComponentImpl<re::ecs2::RenderPassGroupReferenceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    float32x4_t v687 = re::ecs2::ComponentTypeRegistry::instance(v684);
    float32x4_t v688 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v687, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AnchoringResourceComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    float32x4_t v689 = re::ecs2::ComponentImpl<re::ecs2::AnchoringResourceComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::AnchoringResourceComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v690 = re::globalAllocators(v688)[2];
      (*(void (**)(void *))(*(void *)v689 + 16))(v689);
      float32x4_t v688 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v690 + 40))(v690, v689);
    }
    re::ecs2::ComponentImpl<re::ecs2::AnchoringResourceComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    float32x4_t v691 = re::ecs2::ComponentTypeRegistry::instance(v688);
    float32x4_t v692 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v691, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::GroundingShadowComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    long long v693 = re::ecs2::ComponentImpl<re::ecs2::GroundingShadowComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::GroundingShadowComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v694 = re::globalAllocators(v692)[2];
      (*(void (**)(void *))(*(void *)v693 + 16))(v693);
      float32x4_t v692 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v694 + 40))(v694, v693);
    }
    re::ecs2::ComponentImpl<re::ecs2::GroundingShadowComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    v695 = re::ecs2::ComponentTypeRegistry::instance(v692);
    float32x4_t v696 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v695, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::DynamicLightShadowComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    float v697 = re::ecs2::ComponentImpl<re::ecs2::DynamicLightShadowComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::DynamicLightShadowComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v698 = re::globalAllocators(v696)[2];
      (*(void (**)(void *))(*(void *)v697 + 16))(v697);
      float32x4_t v696 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v698 + 40))(v698, v697);
    }
    re::ecs2::ComponentImpl<re::ecs2::DynamicLightShadowComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    float32x4_t v699 = re::ecs2::ComponentTypeRegistry::instance(v696);
    float32x4_t v700 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v699, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::MaterialRenderStateArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    float32x4_t v701 = re::ecs2::ComponentImpl<re::ecs2::MaterialRenderStateArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::MaterialRenderStateArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v702 = re::globalAllocators(v700)[2];
      (*(void (**)(void *))(*(void *)v701 + 16))(v701);
      float32x4_t v700 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v702 + 40))(v702, v701);
    }
    re::ecs2::ComponentImpl<re::ecs2::MaterialRenderStateArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    long long v703 = re::ecs2::ComponentTypeRegistry::instance(v700);
    v704 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v703, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ClientWorldOriginRefComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType);
    float32x4_t v705 = re::ecs2::ComponentImpl<re::ecs2::ClientWorldOriginRefComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::ClientWorldOriginRefComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType)
    {
      uint64_t v706 = re::globalAllocators(v704)[2];
      (*(void (**)(void *))(*(void *)v705 + 16))(v705);
      v704 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v706 + 40))(v706, v705);
    }
    re::ecs2::ComponentImpl<re::ecs2::ClientWorldOriginRefComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType = 0;
    int v707 = re::ecs2::ComponentTypeRegistry::instance(v704);
    uint64_t v708 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v707, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::VirtualEnvironmentProbeComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    uint64_t v709 = re::ecs2::ComponentImpl<re::ecs2::VirtualEnvironmentProbeComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::VirtualEnvironmentProbeComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v710 = re::globalAllocators(v708)[2];
      (*(void (**)(void *))(*(void *)v709 + 16))(v709);
      uint64_t v708 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v710 + 40))(v710, v709);
    }
    re::ecs2::ComponentImpl<re::ecs2::VirtualEnvironmentProbeComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    v711 = re::ecs2::ComponentTypeRegistry::instance(v708);
    __int16 v712 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v711, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ReferenceComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    int v713 = re::ecs2::ComponentImpl<re::ecs2::ReferenceComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::ReferenceComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v714 = re::globalAllocators(v712)[2];
      (*(void (**)(void *))(*(void *)v713 + 16))(v713);
      __int16 v712 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v714 + 40))(v714, v713);
    }
    re::ecs2::ComponentImpl<re::ecs2::ReferenceComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    uint64_t v715 = re::ecs2::ComponentTypeRegistry::instance(v712);
    __int16 v716 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v715, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::BillboardComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    unint64_t v717 = re::ecs2::ComponentImpl<re::ecs2::BillboardComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::BillboardComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v718 = re::globalAllocators(v716)[2];
      (*(void (**)(void *))(*(void *)v717 + 16))(v717);
      __int16 v716 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v718 + 40))(v718, v717);
    }
    re::ecs2::ComponentImpl<re::ecs2::BillboardComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    float32x4_t v719 = re::ecs2::ComponentTypeRegistry::instance(v716);
    float32x4_t v720 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v719, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::EnvironmentLightingConfigurationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
    long long v721 = re::ecs2::ComponentImpl<re::ecs2::EnvironmentLightingConfigurationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::EnvironmentLightingConfigurationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType)
    {
      uint64_t v722 = re::globalAllocators(v720)[2];
      (*(void (**)(void *))(*(void *)v721 + 16))(v721);
      float32x4_t v720 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v722 + 40))(v722, v721);
    }
    re::ecs2::ComponentImpl<re::ecs2::EnvironmentLightingConfigurationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
    uint64_t v723 = re::ecs2::ComponentTypeRegistry::instance(v720);
    v724 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v723, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ClientAnchorSyncComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    v725 = re::ecs2::ComponentImpl<re::ecs2::ClientAnchorSyncComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::ClientAnchorSyncComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v726 = re::globalAllocators(v724)[2];
      (*(void (**)(void *))(*(void *)v725 + 16))(v725);
      v724 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v726 + 40))(v726, v725);
    }
    re::ecs2::ComponentImpl<re::ecs2::ClientAnchorSyncComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    v727 = re::ecs2::ComponentTypeRegistry::instance(v724);
    v728 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v727, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::PreviewSupportComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    v729 = re::ecs2::ComponentImpl<re::ecs2::PreviewSupportComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::PreviewSupportComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v730 = re::globalAllocators(v728)[2];
      (*(void (**)(void *))(*(void *)v729 + 16))(v729);
      v728 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v730 + 40))(v730, v729);
    }
    re::ecs2::ComponentImpl<re::ecs2::PreviewSupportComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    v731 = re::ecs2::ComponentTypeRegistry::instance(v728);
    v732 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v731, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::SelectableSceneContentIdentifierComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    v733 = re::ecs2::ComponentImpl<re::ecs2::SelectableSceneContentIdentifierComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::SelectableSceneContentIdentifierComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v734 = re::globalAllocators(v732)[2];
      (*(void (**)(void *))(*(void *)v733 + 16))(v733);
      v732 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v734 + 40))(v734, v733);
    }
    re::ecs2::ComponentImpl<re::ecs2::SelectableSceneContentIdentifierComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    v735 = re::ecs2::ComponentTypeRegistry::instance(v732);
    v736 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v735, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::FrameCountComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    v737 = re::ecs2::ComponentImpl<re::ecs2::FrameCountComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::FrameCountComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v738 = re::globalAllocators(v736)[2];
      (*(void (**)(void *))(*(void *)v737 + 16))(v737);
      v736 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v738 + 40))(v738, v737);
    }
    re::ecs2::ComponentImpl<re::ecs2::FrameCountComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    v739 = re::ecs2::ComponentTypeRegistry::instance(v736);
    v740 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v739, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::CARETraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    v741 = re::ecs2::ComponentImpl<re::ecs2::CARETraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::CARETraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v742 = re::globalAllocators(v740)[2];
      (*(void (**)(void *))(*(void *)v741 + 16))(v741);
      v740 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v742 + 40))(v742, v741);
    }
    re::ecs2::ComponentImpl<re::ecs2::CARETraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    v743 = re::ecs2::ComponentTypeRegistry::instance(v740);
    v744 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v743, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::SceneSpaceRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    v745 = re::ecs2::ComponentImpl<re::ecs2::SceneSpaceRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::SceneSpaceRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v746 = re::globalAllocators(v744)[2];
      (*(void (**)(void *))(*(void *)v745 + 16))(v745);
      v744 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v746 + 40))(v746, v745);
    }
    re::ecs2::ComponentImpl<re::ecs2::SceneSpaceRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    v747 = re::ecs2::ComponentTypeRegistry::instance(v744);
    v748 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v747, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::ImmersiveSpaceTrackerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    v749 = re::ecs2::ComponentImpl<re::ecs2::ImmersiveSpaceTrackerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::ImmersiveSpaceTrackerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v750 = re::globalAllocators(v748)[2];
      (*(void (**)(void *))(*(void *)v749 + 16))(v749);
      v748 = (re *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v750 + 40))(v750, v749);
    }
    re::ecs2::ComponentImpl<re::ecs2::ImmersiveSpaceTrackerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
    v751 = re::ecs2::ComponentTypeRegistry::instance(v748);
    v752 = (re *)re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v751, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::UILayerGeometryComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
    v753 = re::ecs2::ComponentImpl<re::ecs2::UILayerGeometryComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (re::ecs2::ComponentImpl<re::ecs2::UILayerGeometryComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType)
    {
      uint64_t v754 = re::globalAllocators(v752)[2];
      (*(void (**)(void *))(*(void *)v753 + 16))(v753);
      (*(void (**)(uint64_t, void *))(*(void *)v754 + 40))(v754, v753);
    }
    re::ecs2::ComponentImpl<re::ecs2::UILayerGeometryComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
  }
}

re *re::ecs2::ComponentImpl<re::ecs2::AnchorComponent,(re::ecs2::ComponentTypeBase::Flags)2>::deinitComponentType(re::ecs2::ComponentTypeRegistry *a1)
{
  uint64_t v1 = re::ecs2::ComponentTypeRegistry::instance(a1);
  re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v1, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AnchorComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
  uint64_t result = re::internal::destroyPersistent<re::ecs2::ComponentType<re::ecs2::AnchorComponent>>((re *)"deinitComponentType", 56, (uint64_t)re::ecs2::ComponentImpl<re::ecs2::AnchorComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
  re::ecs2::ComponentImpl<re::ecs2::AnchorComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
  return result;
}

re *re::ecs2::ComponentImpl<re::ecs2::AnchoringComponent,(re::ecs2::ComponentTypeBase::Flags)4>::deinitComponentType(re::ecs2::ComponentTypeRegistry *a1)
{
  uint64_t v1 = re::ecs2::ComponentTypeRegistry::instance(a1);
  re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v1, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::AnchoringComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
  uint64_t result = re::internal::destroyPersistent<re::ecs2::ComponentType<re::ecs2::AnchorComponent>>((re *)"deinitComponentType", 56, (uint64_t)re::ecs2::ComponentImpl<re::ecs2::AnchoringComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType);
  re::ecs2::ComponentImpl<re::ecs2::AnchoringComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType = 0;
  return result;
}

re *re::ecs2::ComponentImpl<re::ecs2::SceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::deinitComponentType(re::ecs2::ComponentTypeRegistry *a1)
{
  uint64_t v1 = re::ecs2::ComponentTypeRegistry::instance(a1);
  re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v1, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::SceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
  uint64_t result = re::internal::destroyPersistent<re::ecs2::ComponentType<re::ecs2::AnchorComponent>>((re *)"deinitComponentType", 56, (uint64_t)re::ecs2::ComponentImpl<re::ecs2::SceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
  re::ecs2::ComponentImpl<re::ecs2::SceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
  return result;
}

re *re::ecs2::ComponentImpl<re::ecs2::CoordinateSpaceDefinitionComponent,(re::ecs2::ComponentTypeBase::Flags)2>::deinitComponentType(re::ecs2::ComponentTypeRegistry *a1)
{
  uint64_t v1 = re::ecs2::ComponentTypeRegistry::instance(a1);
  re::ecs2::ComponentTypeRegistry::remove((os_unfair_lock_s *)v1, (const re::ecs2::ComponentTypeBase *)re::ecs2::ComponentImpl<re::ecs2::CoordinateSpaceDefinitionComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
  uint64_t result = re::internal::destroyPersistent<re::ecs2::ComponentType<re::ecs2::AnchorComponent>>((re *)"deinitComponentType", 56, (uint64_t)re::ecs2::ComponentImpl<re::ecs2::CoordinateSpaceDefinitionComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType);
  re::ecs2::ComponentImpl<re::ecs2::CoordinateSpaceDefinitionComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType = 0;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AnchorComponent>::ComponentType(uint64_t a1, const StringID *a2, uint64_t a3, int a4)
{
  *(void *)a1 = &unk_26E6E1EB8;
  *(void *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 16) = -1;
  re::StringID::StringID((re::StringID *)(a1 + 24), a2);
  *(_DWORD *)(a1 + 40) = a4;
  *(void *)a1 = &unk_26E6E61C0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 48) = a3;
  *(void *)(a1 + 72) = 0xFFFFFFFFLL;
  *(void *)(a1 + 56) = re::ecs2::ComponentTypeBase::makeAllocator(*(re::ecs2::ComponentTypeBase **)(a1 + 32), (const char *)0xD0);
  {
    re::introspect<re::ecs2::AnchorComponent>(void)::info = (_UNKNOWN *)re::ecs2::introspect_AnchorComponent(0);
  }
  int v7 = re::introspect<re::ecs2::AnchorComponent>(void)::info;
  re::IntrospectionSharedLock::IntrospectionSharedLock((re::IntrospectionSharedLock *)&v18);
  uint64_t v8 = (char *)v7[6];
  if (v8)
  {
    uint64_t v9 = *v8;
    if (*v8)
    {
      char v10 = v8[1];
      if (v10)
      {
        StringID v11 = (unsigned __int8 *)(v8 + 2);
        do
        {
          uint64_t v9 = 31 * v9 + v10;
          int v12 = *v11++;
          char v10 = v12;
        }
        while (v12);
      }
    }
  }
  else
  {
    uint64_t v9 = 0;
  }
  v17[0] = 2 * v9;
  v17[1] = v8;
  uint64_t v13 = (uint64_t *)re::HashTable<re::StringID,re::StateParameterInt *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::tryGet((uint64_t)&unk_2687A0D30, v17);
  if (v13)
  {
    uint64_t v14 = *v13;
  }
  else
  {
    uint64_t v15 = 0;
    uint64_t v14 = 0xFFFFFFFFLL;
  }
  *(void *)(a1 + 64) = v15;
  *(void *)(a1 + 72) = v14;
  re::StringID::destroyString((re::StringID *)v17);
  re::IntrospectionSharedLock::~IntrospectionSharedLock((re::IntrospectionSharedLock *)&v18);
  return a1;
}

double re::ecs2::ComponentType<re::ecs2::AnchorComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AnchorComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::AnchorComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::AnchorComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::AnchorComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::AnchorComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::AnchorComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 208, 0);
  return re::make::shared::inplace<re::ecs2::AnchorComponent>(v2, a1);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AnchorComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  return re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>::SceneComponentCollection(v3, (uint64_t)a1);
}

char *re::ecs2::ComponentType<re::ecs2::AnchorComponent>::doGetComponentIntrospectionInfo()
{
  v0 = re::KTXTextureCompiler::getSupportedExtensions(void)const::supportedExtensions;
  {
    v0 = re::KTXTextureCompiler::getSupportedExtensions(void)const::supportedExtensions;
    if (v2)
    {
      re::introspect<re::ecs2::AnchorComponent>(void)::info = (_UNKNOWN *)re::ecs2::introspect_AnchorComponent(0);
      v0 = re::KTXTextureCompiler::getSupportedExtensions(void)const::supportedExtensions;
    }
  }
  return v0[203];
}

__n128 re::ecs2::ComponentType<re::ecs2::AnchorComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AnchorComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AnchorComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E61C0;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

double re::make::shared::inplace<re::ecs2::AnchorComponent>@<D0>(ArcSharedObject *a1@<X0>, void *a2@<X8>)
{
  *((_OWORD *)a1 + 11) = 0u;
  *((_OWORD *)a1 + 12) = 0u;
  *((_OWORD *)a1 + 9) = 0u;
  *((_OWORD *)a1 + 10) = 0u;
  *((_OWORD *)a1 + 7) = 0u;
  *((_OWORD *)a1 + 8) = 0u;
  *((_OWORD *)a1 + 5) = 0u;
  *((_OWORD *)a1 + 6) = 0u;
  *((_OWORD *)a1 + 3) = 0u;
  *((_OWORD *)a1 + 4) = 0u;
  *((_OWORD *)a1 + 1) = 0u;
  *((_OWORD *)a1 + 2) = 0u;
  *(_OWORD *)a1 = 0u;
  ArcSharedObject::ArcSharedObject(a1, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F71F0;
  *(_DWORD *)(v3 + 44) = 0;
  *(void *)(v3 + 33) = 0;
  *(void *)(v3 + 25) = 0;
  *(unsigned char *)(v3 + 41) = 0;
  *(void *)&double result = 1065353216;
  *(_OWORD *)(v3 + 48) = xmmword_23435FD50;
  *(_OWORD *)(v3 + 64) = xmmword_23435FD60;
  *(_OWORD *)(v3 + 80) = xmmword_23435FD80;
  *(_OWORD *)(v3 + 96) = xmmword_23435FBB0;
  *(_OWORD *)(v3 + 112) = xmmword_23435FD50;
  *(_OWORD *)(v3 + 128) = xmmword_23435FD60;
  *(_OWORD *)(v3 + 144) = xmmword_23435FD80;
  *(_OWORD *)(v3 + 160) = xmmword_23435FBB0;
  *(unsigned char *)(v3 + 184) = 0;
  *(_DWORD *)(v3 + 176) = 0;
  *(_WORD *)(v3 + 200) = 1;
  *a2 = v3;
  return result;
}

void re::ecs2::AnchorComponent::~AnchorComponent(re::ecs2::AnchorComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AnchorComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::AnchorComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AnchorComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return 0;
}

void *re::ecs2::ComponentImpl<re::ecs2::AnchorComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::AnchorComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>::SceneComponentCollection(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(a1 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(a1 + 128) = 0;
  uint64_t v3 = (void *)(a1 + 128);
  *(void *)a1 = &unk_26E6E6230;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  *(_DWORD *)(a1 + 152) = 0;
  *(void *)(a1 + 200) = 0;
  *(_DWORD *)(a1 + 208) = 0;
  *(_DWORD *)(a1 + 192) = 0;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_DWORD *)(a1 + 240) = 0;
  *(void *)(a1 + 224) = 0;
  *(void *)(a1 + 232) = 0;
  *(void *)(a1 + 216) = 0;
  int v4 = (void *)(a1 + 216);
  *(void *)(a1 + 288) = 0;
  *(_DWORD *)(a1 + 296) = 0;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_DWORD *)(a1 + 280) = 0;
  *(_OWORD *)(a1 + 264) = 0u;
  uint64_t v5 = (void *)(a1 + 304);
  *(void *)(a1 + 304) = 0;
  *(void *)(a1 + 312) = 0;
  *(_DWORD *)(a1 + 328) = 0;
  *(void *)(a1 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(a1 + 376) = 0;
  *(_DWORD *)(a1 + 384) = 0;
  *(_DWORD *)(a1 + 368) = 0;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  uint64_t v6 = (void *)(a1 + 392);
  *(void *)(a1 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(a1 + 400) = 0;
  *(_DWORD *)(a1 + 416) = 0;
  *(void *)(a1 + 408) = 0;
  *(void *)(a1 + 464) = 0;
  *(_DWORD *)(a1 + 472) = 0;
  *(_DWORD *)(a1 + 456) = 0;
  *(_OWORD *)(a1 + 424) = 0u;
  *(_OWORD *)(a1 + 440) = 0u;
  int v7 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
  *(void *)(a1 + 480) = 0;
  *(void *)(a1 + 488) = 0;
  *(void *)(a1 + 496) = 0;
  *(_DWORD *)(a1 + 504) = 1;
  *(void *)(a1 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(a1 + 512) = 0;
  *(_DWORD *)(a1 + 536) = 0;
  *(void *)(a1 + 528) = 0;
  *(void *)(a1 + 552) = 0;
  *(void *)(a1 + 544) = 0;
  *(_DWORD *)(a1 + 560) = 1;
  *(void *)(a1 + 576) = 0;
  *(void *)(a1 + 568) = 0;
  *(_DWORD *)(a1 + 592) = 0;
  *(void *)(a1 + 584) = 0;
  *(void *)(a1 + 608) = 0;
  *(void *)(a1 + 600) = 0;
  *(_DWORD *)(a1 + 616) = 1;
  *(void *)(a1 + 632) = 0;
  *(void *)(a1 + 624) = 0;
  *(_DWORD *)(a1 + 648) = 0;
  *(void *)(a1 + 640) = 0;
  uint64_t v8 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity(v3, 0);
  ++*(_DWORD *)(a1 + 152);
  uint64_t v9 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity(v4, 0);
  ++*(_DWORD *)(a1 + 240);
  char v10 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity(v5, 0);
  ++*(_DWORD *)(a1 + 328);
  StringID v11 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity(v6, 0);
  ++*(_DWORD *)(a1 + 416);
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  void *v2;
  uint64_t vars8;

  *a1 = &unk_26E6E6230;
  int v2 = a1 + 16;
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::GeometricObjectBase>::~Event(a1 + 49);
  re::Event<re::GeometricObjectBase>::~Event(a1 + 38);
  re::Event<re::GeometricObjectBase>::~Event(a1 + 27);
  re::Event<re::GeometricObjectBase>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>,re::Slice<re::ecs2::AnchorComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>,re::Slice<re::ecs2::AnchorComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>,re::Slice<re::ecs2::AnchorComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>,re::Slice<re::ecs2::AnchorComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>::registerCallbacks(_DWORD *a1, void *a2)
{
  return re::ecs2::SceneComponentCollectionCallbacks::subscribe<re::ecs2::AnchorComponent>(a2, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
}

void re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>,re::Slice<re::ecs2::AnchorComponent*>>::raise(uint64_t a1, uint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 80);
  *(_DWORD *)(a1 + 80) = v3 + 1;
  if (*(void *)(a1 + 16))
  {
    unint64_t v5 = 0;
    do
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)(a1 + 32) + 32 * v5 + 24))(a2) == 1) {
        re::DynamicArray<re::Event<re::SimulationTimer,re::SimulationTimerEventArgs const&>::Subscription>::removeStableAt((void *)a1, v5);
      }
      else {
        ++v5;
      }
    }
    while (v5 < *(void *)(a1 + 16));
    int v3 = *(_DWORD *)(a1 + 80) - 1;
  }
  *(_DWORD *)(a1 + 80) = v3;
  if (!v3) {
    re::Event<re::GeometricObjectBase>::doDeferredActions((_anonymous_namespace_ *)a1);
  }
}

double re::ecs2::SceneComponentCollectionCallbacks::subscribe<re::ecs2::AnchorComponent>(void *a1, _DWORD *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a1[3])
  {
    unint64_t v5 = a1;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AnchorComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>,re::Slice<re::ecs2::AnchorComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>*,re::Slice<re::ecs2::AnchorComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>,re::Slice<re::ecs2::AnchorComponent*>>::Subscription const&,re::Slice<re::ecs2::AnchorComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a2 + 32, (uint64_t)&v5);
  }
  if (a1[4])
  {
    unint64_t v5 = a1;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AnchorComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>,re::Slice<re::ecs2::AnchorComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>*,re::Slice<re::ecs2::AnchorComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>,re::Slice<re::ecs2::AnchorComponent*>>::Subscription const&,re::Slice<re::ecs2::AnchorComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a2 + 98, (uint64_t)&v5);
  }
  if (a1[5])
  {
    unint64_t v5 = a1;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AnchorComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>,re::Slice<re::ecs2::AnchorComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>*,re::Slice<re::ecs2::AnchorComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>,re::Slice<re::ecs2::AnchorComponent*>>::Subscription const&,re::Slice<re::ecs2::AnchorComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a2 + 54, (uint64_t)&v5);
  }
  if (a1[6])
  {
    unint64_t v5 = a1;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AnchorComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>,re::Slice<re::ecs2::AnchorComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>*,re::Slice<re::ecs2::AnchorComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>,re::Slice<re::ecs2::AnchorComponent*>>::Subscription const&,re::Slice<re::ecs2::AnchorComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a2 + 76, (uint64_t)&v5);
  }
  return result;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AnchorComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  unint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AnchorComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  unint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AnchorComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  unint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AnchorComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  unint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>,re::Slice<re::ecs2::AnchorComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>*,re::Slice<re::ecs2::AnchorComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>,re::Slice<re::ecs2::AnchorComponent*>>::Subscription const&,re::Slice<re::ecs2::AnchorComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    uint64_t v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

void re::ecs2::SceneComponentCollectionCallbacks::unsubscribe<re::ecs2::AnchorComponent>(void *a1, uint64_t a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a1[3])
  {
    *(void *)&long long v4 = a1;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AnchorComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>,re::Slice<re::ecs2::AnchorComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>*,re::Slice<re::ecs2::AnchorComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>,re::Slice<re::ecs2::AnchorComponent*>>::Subscription const&,re::Slice<re::ecs2::AnchorComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a2 + 128, &v4);
  }
  if (a1[4])
  {
    *(void *)&long long v4 = a1;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AnchorComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>,re::Slice<re::ecs2::AnchorComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>*,re::Slice<re::ecs2::AnchorComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>,re::Slice<re::ecs2::AnchorComponent*>>::Subscription const&,re::Slice<re::ecs2::AnchorComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a2 + 392, &v4);
  }
  if (a1[5])
  {
    *(void *)&long long v4 = a1;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AnchorComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>,re::Slice<re::ecs2::AnchorComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>*,re::Slice<re::ecs2::AnchorComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>,re::Slice<re::ecs2::AnchorComponent*>>::Subscription const&,re::Slice<re::ecs2::AnchorComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a2 + 216, &v4);
  }
  if (a1[6])
  {
    *(void *)&long long v4 = a1;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AnchorComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>,re::Slice<re::ecs2::AnchorComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>*,re::Slice<re::ecs2::AnchorComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>,re::Slice<re::ecs2::AnchorComponent*>>::Subscription const&,re::Slice<re::ecs2::AnchorComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a2 + 304, &v4);
  }
}

uint64_t re::ecs2::ComponentType<re::ecs2::AnchoringComponent>::ComponentType(uint64_t a1, const StringID *a2, uint64_t a3, int a4)
{
  *(void *)a1 = &unk_26E6E1EB8;
  *(void *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 16) = -1;
  re::StringID::StringID((re::StringID *)(a1 + 24), a2);
  *(_DWORD *)(a1 + 40) = a4;
  *(void *)a1 = &unk_26E6E62D8;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 48) = a3;
  *(void *)(a1 + 72) = 0xFFFFFFFFLL;
  *(void *)(a1 + 56) = re::ecs2::ComponentTypeBase::makeAllocator(*(re::ecs2::ComponentTypeBase **)(a1 + 32), (const char *)0x220);
  {
    re::introspect<re::ecs2::AnchoringComponent>(void)::info = (_UNKNOWN *)re::ecs2::introspect_AnchoringComponent(0);
  }
  uint64_t v7 = re::introspect<re::ecs2::AnchoringComponent>(void)::info;
  re::IntrospectionSharedLock::IntrospectionSharedLock((re::IntrospectionSharedLock *)&v18);
  uint64_t v8 = (char *)v7[6];
  if (v8)
  {
    uint64_t v9 = *v8;
    if (*v8)
    {
      char v10 = v8[1];
      if (v10)
      {
        StringID v11 = (unsigned __int8 *)(v8 + 2);
        do
        {
          uint64_t v9 = 31 * v9 + v10;
          int v12 = *v11++;
          char v10 = v12;
        }
        while (v12);
      }
    }
  }
  else
  {
    uint64_t v9 = 0;
  }
  v17[0] = 2 * v9;
  v17[1] = v8;
  uint64_t v13 = (uint64_t *)re::HashTable<re::StringID,re::StateParameterInt *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::tryGet((uint64_t)&unk_2687A0D30, v17);
  if (v13)
  {
    uint64_t v14 = *v13;
  }
  else
  {
    uint64_t v15 = 0;
    uint64_t v14 = 0xFFFFFFFFLL;
  }
  *(void *)(a1 + 64) = v15;
  *(void *)(a1 + 72) = v14;
  re::StringID::destroyString((re::StringID *)v17);
  re::IntrospectionSharedLock::~IntrospectionSharedLock((re::IntrospectionSharedLock *)&v18);
  return a1;
}

double re::ecs2::ComponentType<re::ecs2::AnchoringComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AnchoringComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::AnchoringComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::AnchoringComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::AnchoringComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  int v2 = (void *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::AnchoringComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                       + 7)
                                                                    + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::AnchoringComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 544, 0);
  return re::make::shared::inplace<re::ecs2::AnchoringComponent>(v2, a1);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AnchoringComponent>::doMakeSceneComponentCollection(re *a1)
{
  int v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  return re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>::SceneComponentCollection(v3, (uint64_t)a1);
}

char *re::ecs2::ComponentType<re::ecs2::AnchoringComponent>::doGetComponentIntrospectionInfo()
{
  v0 = re::KTXTextureCompiler::getSupportedExtensions(void)const::supportedExtensions;
  {
    v0 = re::KTXTextureCompiler::getSupportedExtensions(void)const::supportedExtensions;
    if (v2)
    {
      re::introspect<re::ecs2::AnchoringComponent>(void)::info = (_UNKNOWN *)re::ecs2::introspect_AnchoringComponent(0);
      v0 = re::KTXTextureCompiler::getSupportedExtensions(void)const::supportedExtensions;
    }
  }
  return v0[205];
}

__n128 re::ecs2::ComponentType<re::ecs2::AnchoringComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AnchoringComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AnchoringComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E62D8;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

double re::make::shared::inplace<re::ecs2::AnchoringComponent>@<D0>(void *a1@<X0>, void *a2@<X8>)
{
  bzero(a1, 0x220uLL);
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)a1, 0);
  a1[2] = 0;
  *((unsigned char *)a1 + 24) = 0;
  *a1 = &unk_26E70C258;
  *((_DWORD *)a1 + 8) = 1;
  *((_OWORD *)a1 + 3) = xmmword_23435FD50;
  *((_OWORD *)a1 + 4) = xmmword_23435FD60;
  *((_OWORD *)a1 + 5) = xmmword_23435FD80;
  *((_OWORD *)a1 + 6) = xmmword_23435FBB0;
  a1[14] = 0;
  a1[15] = 0;
  *((unsigned char *)a1 + 128) = -1;
  *(_OWORD *)(a1 + 17) = xmmword_234378E20;
  *((unsigned char *)a1 + 152) = -1;
  *(_OWORD *)((char *)a1 + 156) = 0u;
  *(_OWORD *)((char *)a1 + 172) = 0u;
  *((_DWORD *)a1 + 47) = 0;
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicString::setCapacity(a1 + 20, 0);
  *((_OWORD *)a1 + 13) = 0u;
  *((_OWORD *)a1 + 12) = 0u;
  re::DynamicString::setCapacity(a1 + 24, 0);
  a1[28] = 0;
  a1[29] = 0;
  *(void *)&double result = 0x100000001;
  a1[30] = 0x100000001;
  *((_DWORD *)a1 + 64) = 1;
  *((unsigned char *)a1 + 272) = 0;
  *((unsigned char *)a1 + 352) = 1;
  *((_DWORD *)a1 + 89) = 1065353216;
  *((unsigned char *)a1 + 368) = 0;
  *((unsigned char *)a1 + 448) = 0;
  *((unsigned char *)a1 + 528) = 0;
  *a2 = a1;
  return result;
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>::SceneComponentCollection(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(a1 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(a1 + 128) = 0;
  uint64_t v3 = (void *)(a1 + 128);
  *(void *)a1 = &unk_26E6E6348;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  *(_DWORD *)(a1 + 152) = 0;
  *(void *)(a1 + 200) = 0;
  *(_DWORD *)(a1 + 208) = 0;
  *(_DWORD *)(a1 + 192) = 0;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_DWORD *)(a1 + 240) = 0;
  *(void *)(a1 + 224) = 0;
  *(void *)(a1 + 232) = 0;
  *(void *)(a1 + 216) = 0;
  long long v4 = (void *)(a1 + 216);
  *(void *)(a1 + 288) = 0;
  *(_DWORD *)(a1 + 296) = 0;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_DWORD *)(a1 + 280) = 0;
  *(_OWORD *)(a1 + 264) = 0u;
  uint64_t v5 = (void *)(a1 + 304);
  *(void *)(a1 + 304) = 0;
  *(void *)(a1 + 312) = 0;
  *(_DWORD *)(a1 + 328) = 0;
  *(void *)(a1 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(a1 + 376) = 0;
  *(_DWORD *)(a1 + 384) = 0;
  *(_DWORD *)(a1 + 368) = 0;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  uint64_t v6 = (void *)(a1 + 392);
  *(void *)(a1 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(a1 + 400) = 0;
  *(_DWORD *)(a1 + 416) = 0;
  *(void *)(a1 + 408) = 0;
  *(void *)(a1 + 464) = 0;
  *(_DWORD *)(a1 + 472) = 0;
  *(_DWORD *)(a1 + 456) = 0;
  *(_OWORD *)(a1 + 424) = 0u;
  *(_OWORD *)(a1 + 440) = 0u;
  uint64_t v7 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
  *(void *)(a1 + 480) = 0;
  *(void *)(a1 + 488) = 0;
  *(void *)(a1 + 496) = 0;
  *(_DWORD *)(a1 + 504) = 1;
  *(void *)(a1 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(a1 + 512) = 0;
  *(_DWORD *)(a1 + 536) = 0;
  *(void *)(a1 + 528) = 0;
  *(void *)(a1 + 552) = 0;
  *(void *)(a1 + 544) = 0;
  *(_DWORD *)(a1 + 560) = 1;
  *(void *)(a1 + 576) = 0;
  *(void *)(a1 + 568) = 0;
  *(_DWORD *)(a1 + 592) = 0;
  *(void *)(a1 + 584) = 0;
  *(void *)(a1 + 608) = 0;
  *(void *)(a1 + 600) = 0;
  *(_DWORD *)(a1 + 616) = 1;
  *(void *)(a1 + 632) = 0;
  *(void *)(a1 + 624) = 0;
  *(_DWORD *)(a1 + 648) = 0;
  *(void *)(a1 + 640) = 0;
  uint64_t v8 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity(v3, 0);
  ++*(_DWORD *)(a1 + 152);
  uint64_t v9 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity(v4, 0);
  ++*(_DWORD *)(a1 + 240);
  char v10 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity(v5, 0);
  ++*(_DWORD *)(a1 + 328);
  StringID v11 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity(v6, 0);
  ++*(_DWORD *)(a1 + 416);
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  void *v2;
  uint64_t vars8;

  *a1 = &unk_26E6E6348;
  int v2 = a1 + 16;
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::GeometricObjectBase>::~Event(a1 + 49);
  re::Event<re::GeometricObjectBase>::~Event(a1 + 38);
  re::Event<re::GeometricObjectBase>::~Event(a1 + 27);
  re::Event<re::GeometricObjectBase>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>,re::Slice<re::ecs2::AnchorComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>,re::Slice<re::ecs2::AnchorComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>,re::Slice<re::ecs2::AnchorComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>,re::Slice<re::ecs2::AnchorComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>::registerCallbacks(_DWORD *a1, void *a2)
{
  return re::ecs2::SceneComponentCollectionCallbacks::subscribe<re::ecs2::AnchoringComponent>(a2, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
}

double re::ecs2::SceneComponentCollectionCallbacks::subscribe<re::ecs2::AnchoringComponent>(void *a1, _DWORD *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a1[3])
  {
    uint64_t v5 = a1;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AnchoringComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>,re::Slice<re::ecs2::AnchoringComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>*,re::Slice<re::ecs2::AnchoringComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>,re::Slice<re::ecs2::AnchoringComponent*>>::Subscription const&,re::Slice<re::ecs2::AnchoringComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a2 + 32, (uint64_t)&v5);
  }
  if (a1[4])
  {
    uint64_t v5 = a1;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AnchoringComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>,re::Slice<re::ecs2::AnchoringComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>*,re::Slice<re::ecs2::AnchoringComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>,re::Slice<re::ecs2::AnchoringComponent*>>::Subscription const&,re::Slice<re::ecs2::AnchoringComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a2 + 98, (uint64_t)&v5);
  }
  if (a1[5])
  {
    uint64_t v5 = a1;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AnchoringComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>,re::Slice<re::ecs2::AnchoringComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>*,re::Slice<re::ecs2::AnchoringComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>,re::Slice<re::ecs2::AnchoringComponent*>>::Subscription const&,re::Slice<re::ecs2::AnchoringComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a2 + 54, (uint64_t)&v5);
  }
  if (a1[6])
  {
    uint64_t v5 = a1;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AnchoringComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>,re::Slice<re::ecs2::AnchoringComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>*,re::Slice<re::ecs2::AnchoringComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>,re::Slice<re::ecs2::AnchoringComponent*>>::Subscription const&,re::Slice<re::ecs2::AnchoringComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a2 + 76, (uint64_t)&v5);
  }
  return result;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AnchoringComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AnchoringComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AnchoringComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AnchoringComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>,re::Slice<re::ecs2::AnchoringComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>*,re::Slice<re::ecs2::AnchoringComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>,re::Slice<re::ecs2::AnchoringComponent*>>::Subscription const&,re::Slice<re::ecs2::AnchoringComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    uint64_t v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

void re::ecs2::SceneComponentCollectionCallbacks::unsubscribe<re::ecs2::AnchoringComponent>(void *a1, uint64_t a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a1[3])
  {
    *(void *)&long long v4 = a1;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AnchoringComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>,re::Slice<re::ecs2::AnchoringComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>*,re::Slice<re::ecs2::AnchoringComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>,re::Slice<re::ecs2::AnchoringComponent*>>::Subscription const&,re::Slice<re::ecs2::AnchoringComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a2 + 128, &v4);
  }
  if (a1[4])
  {
    *(void *)&long long v4 = a1;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AnchoringComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>,re::Slice<re::ecs2::AnchoringComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>*,re::Slice<re::ecs2::AnchoringComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>,re::Slice<re::ecs2::AnchoringComponent*>>::Subscription const&,re::Slice<re::ecs2::AnchoringComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a2 + 392, &v4);
  }
  if (a1[5])
  {
    *(void *)&long long v4 = a1;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AnchoringComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>,re::Slice<re::ecs2::AnchoringComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>*,re::Slice<re::ecs2::AnchoringComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>,re::Slice<re::ecs2::AnchoringComponent*>>::Subscription const&,re::Slice<re::ecs2::AnchoringComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a2 + 216, &v4);
  }
  if (a1[6])
  {
    *(void *)&long long v4 = a1;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AnchoringComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>,re::Slice<re::ecs2::AnchoringComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>*,re::Slice<re::ecs2::AnchoringComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchoringComponent>,re::Slice<re::ecs2::AnchoringComponent*>>::Subscription const&,re::Slice<re::ecs2::AnchoringComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a2 + 304, &v4);
  }
}

uint64_t re::ecs2::ComponentType<re::ecs2::SceneComponent>::ComponentType(uint64_t a1, const StringID *a2, uint64_t a3, int a4)
{
  *(void *)a1 = &unk_26E6E1EB8;
  *(void *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 16) = -1;
  re::StringID::StringID((re::StringID *)(a1 + 24), a2);
  *(_DWORD *)(a1 + 40) = a4;
  *(void *)a1 = &unk_26E6E63F0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 48) = a3;
  *(void *)(a1 + 72) = 0xFFFFFFFFLL;
  *(void *)(a1 + 56) = re::ecs2::ComponentTypeBase::makeAllocator(*(re::ecs2::ComponentTypeBase **)(a1 + 32), (const char *)0x20);
  {
    re::introspect<re::ecs2::SceneComponent>(void)::info = (_UNKNOWN *)re::ecs2::introspect_SceneComponent(0);
  }
  uint64_t v7 = re::introspect<re::ecs2::SceneComponent>(void)::info;
  re::IntrospectionSharedLock::IntrospectionSharedLock((re::IntrospectionSharedLock *)&v18);
  uint64_t v8 = (char *)v7[6];
  if (v8)
  {
    uint64_t v9 = *v8;
    if (*v8)
    {
      char v10 = v8[1];
      if (v10)
      {
        StringID v11 = (unsigned __int8 *)(v8 + 2);
        do
        {
          uint64_t v9 = 31 * v9 + v10;
          int v12 = *v11++;
          char v10 = v12;
        }
        while (v12);
      }
    }
  }
  else
  {
    uint64_t v9 = 0;
  }
  v17[0] = 2 * v9;
  v17[1] = v8;
  uint64_t v13 = (uint64_t *)re::HashTable<re::StringID,re::StateParameterInt *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::tryGet((uint64_t)&unk_2687A0D30, v17);
  if (v13)
  {
    uint64_t v14 = *v13;
  }
  else
  {
    uint64_t v15 = 0;
    uint64_t v14 = 0xFFFFFFFFLL;
  }
  *(void *)(a1 + 64) = v15;
  *(void *)(a1 + 72) = v14;
  re::StringID::destroyString((re::StringID *)v17);
  re::IntrospectionSharedLock::~IntrospectionSharedLock((re::IntrospectionSharedLock *)&v18);
  return a1;
}

double re::ecs2::ComponentType<re::ecs2::SceneComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SceneComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::SceneComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::SceneComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SceneComponent>::doMakeSceneComponentCollection(re *a1)
{
  int v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  return re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>::SceneComponentCollection(v3, (uint64_t)a1);
}

char *re::ecs2::ComponentType<re::ecs2::SceneComponent>::doGetComponentIntrospectionInfo()
{
  v0 = re::KTXTextureCompiler::getSupportedExtensions(void)const::supportedExtensions;
  {
    v0 = re::KTXTextureCompiler::getSupportedExtensions(void)const::supportedExtensions;
    if (v2)
    {
      re::introspect<re::ecs2::SceneComponent>(void)::info = (_UNKNOWN *)re::ecs2::introspect_SceneComponent(0);
      v0 = re::KTXTextureCompiler::getSupportedExtensions(void)const::supportedExtensions;
    }
  }
  return v0[207];
}

__n128 re::ecs2::ComponentType<re::ecs2::SceneComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SceneComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SceneComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E63F0;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::ComponentImpl<re::ecs2::SceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::create(void *a1@<X8>)
{
  int v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::SceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::SceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 32, 0);
  *(_OWORD *)int v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E6460;
  *(_WORD *)(v3 + 25) = 0;
  *a1 = v3;
}

void re::ecs2::SceneComponent::~SceneComponent(re::ecs2::SceneComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::SceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::SceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::SceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>::SceneComponentCollection(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(a1 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(a1 + 128) = 0;
  uint64_t v3 = (void *)(a1 + 128);
  *(void *)a1 = &unk_26E6E64E8;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  *(_DWORD *)(a1 + 152) = 0;
  *(void *)(a1 + 200) = 0;
  *(_DWORD *)(a1 + 208) = 0;
  *(_DWORD *)(a1 + 192) = 0;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_DWORD *)(a1 + 240) = 0;
  *(void *)(a1 + 224) = 0;
  *(void *)(a1 + 232) = 0;
  *(void *)(a1 + 216) = 0;
  long long v4 = (void *)(a1 + 216);
  *(void *)(a1 + 288) = 0;
  *(_DWORD *)(a1 + 296) = 0;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_DWORD *)(a1 + 280) = 0;
  *(_OWORD *)(a1 + 264) = 0u;
  uint64_t v5 = (void *)(a1 + 304);
  *(void *)(a1 + 304) = 0;
  *(void *)(a1 + 312) = 0;
  *(_DWORD *)(a1 + 328) = 0;
  *(void *)(a1 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(a1 + 376) = 0;
  *(_DWORD *)(a1 + 384) = 0;
  *(_DWORD *)(a1 + 368) = 0;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  uint64_t v6 = (void *)(a1 + 392);
  *(void *)(a1 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(a1 + 400) = 0;
  *(_DWORD *)(a1 + 416) = 0;
  *(void *)(a1 + 408) = 0;
  *(void *)(a1 + 464) = 0;
  *(_DWORD *)(a1 + 472) = 0;
  *(_DWORD *)(a1 + 456) = 0;
  *(_OWORD *)(a1 + 424) = 0u;
  *(_OWORD *)(a1 + 440) = 0u;
  uint64_t v7 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
  *(void *)(a1 + 480) = 0;
  *(void *)(a1 + 488) = 0;
  *(void *)(a1 + 496) = 0;
  *(_DWORD *)(a1 + 504) = 1;
  *(void *)(a1 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(a1 + 512) = 0;
  *(_DWORD *)(a1 + 536) = 0;
  *(void *)(a1 + 528) = 0;
  *(void *)(a1 + 552) = 0;
  *(void *)(a1 + 544) = 0;
  *(_DWORD *)(a1 + 560) = 1;
  *(void *)(a1 + 576) = 0;
  *(void *)(a1 + 568) = 0;
  *(_DWORD *)(a1 + 592) = 0;
  *(void *)(a1 + 584) = 0;
  *(void *)(a1 + 608) = 0;
  *(void *)(a1 + 600) = 0;
  *(_DWORD *)(a1 + 616) = 1;
  *(void *)(a1 + 632) = 0;
  *(void *)(a1 + 624) = 0;
  *(_DWORD *)(a1 + 648) = 0;
  *(void *)(a1 + 640) = 0;
  uint64_t v8 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity(v3, 0);
  ++*(_DWORD *)(a1 + 152);
  uint64_t v9 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity(v4, 0);
  ++*(_DWORD *)(a1 + 240);
  char v10 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity(v5, 0);
  ++*(_DWORD *)(a1 + 328);
  StringID v11 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity(v6, 0);
  ++*(_DWORD *)(a1 + 416);
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  void *v2;
  uint64_t vars8;

  *a1 = &unk_26E6E64E8;
  int v2 = a1 + 16;
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::GeometricObjectBase>::~Event(a1 + 49);
  re::Event<re::GeometricObjectBase>::~Event(a1 + 38);
  re::Event<re::GeometricObjectBase>::~Event(a1 + 27);
  re::Event<re::GeometricObjectBase>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>,re::Slice<re::ecs2::AnchorComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>,re::Slice<re::ecs2::AnchorComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>,re::Slice<re::ecs2::AnchorComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>,re::Slice<re::ecs2::AnchorComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>::registerCallbacks(_DWORD *a1, void *a2)
{
  return re::ecs2::SceneComponentCollectionCallbacks::subscribe<re::ecs2::SceneComponent>(a2, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
}

double re::ecs2::SceneComponentCollectionCallbacks::subscribe<re::ecs2::SceneComponent>(void *a1, _DWORD *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a1[3])
  {
    uint64_t v5 = a1;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SceneComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>,re::Slice<re::ecs2::SceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>*,re::Slice<re::ecs2::SceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>,re::Slice<re::ecs2::SceneComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a2 + 32, (uint64_t)&v5);
  }
  if (a1[4])
  {
    uint64_t v5 = a1;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SceneComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>,re::Slice<re::ecs2::SceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>*,re::Slice<re::ecs2::SceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>,re::Slice<re::ecs2::SceneComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a2 + 98, (uint64_t)&v5);
  }
  if (a1[5])
  {
    uint64_t v5 = a1;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SceneComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>,re::Slice<re::ecs2::SceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>*,re::Slice<re::ecs2::SceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>,re::Slice<re::ecs2::SceneComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a2 + 54, (uint64_t)&v5);
  }
  if (a1[6])
  {
    uint64_t v5 = a1;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SceneComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>,re::Slice<re::ecs2::SceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>*,re::Slice<re::ecs2::SceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>,re::Slice<re::ecs2::SceneComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a2 + 76, (uint64_t)&v5);
  }
  return result;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SceneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SceneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SceneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SceneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>,re::Slice<re::ecs2::SceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>*,re::Slice<re::ecs2::SceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>,re::Slice<re::ecs2::SceneComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    uint64_t v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

void re::ecs2::SceneComponentCollectionCallbacks::unsubscribe<re::ecs2::SceneComponent>(void *a1, uint64_t a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a1[3])
  {
    *(void *)&long long v4 = a1;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SceneComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>,re::Slice<re::ecs2::SceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>*,re::Slice<re::ecs2::SceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>,re::Slice<re::ecs2::SceneComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a2 + 128, &v4);
  }
  if (a1[4])
  {
    *(void *)&long long v4 = a1;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SceneComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>,re::Slice<re::ecs2::SceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>*,re::Slice<re::ecs2::SceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>,re::Slice<re::ecs2::SceneComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a2 + 392, &v4);
  }
  if (a1[5])
  {
    *(void *)&long long v4 = a1;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SceneComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>,re::Slice<re::ecs2::SceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>*,re::Slice<re::ecs2::SceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>,re::Slice<re::ecs2::SceneComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a2 + 216, &v4);
  }
  if (a1[6])
  {
    *(void *)&long long v4 = a1;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SceneComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>,re::Slice<re::ecs2::SceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>*,re::Slice<re::ecs2::SceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneComponent>,re::Slice<re::ecs2::SceneComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a2 + 304, &v4);
  }
}

uint64_t re::ecs2::ComponentType<re::ecs2::CoordinateSpaceDefinitionComponent>::ComponentType(uint64_t a1, const StringID *a2, uint64_t a3, int a4)
{
  *(void *)a1 = &unk_26E6E1EB8;
  *(void *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 16) = -1;
  re::StringID::StringID((re::StringID *)(a1 + 24), a2);
  *(_DWORD *)(a1 + 40) = a4;
  *(void *)a1 = &unk_26E6E6590;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 48) = a3;
  *(void *)(a1 + 72) = 0xFFFFFFFFLL;
  *(void *)(a1 + 56) = re::ecs2::ComponentTypeBase::makeAllocator(*(re::ecs2::ComponentTypeBase **)(a1 + 32), (const char *)0x20);
  {
    re::introspect<re::ecs2::CoordinateSpaceDefinitionComponent>(void)::info = (_UNKNOWN *)re::ecs2::introspect_CoordinateSpaceDefinitionComponent(0);
  }
  uint64_t v7 = re::introspect<re::ecs2::CoordinateSpaceDefinitionComponent>(void)::info;
  re::IntrospectionSharedLock::IntrospectionSharedLock((re::IntrospectionSharedLock *)&v18);
  uint64_t v8 = (char *)v7[6];
  if (v8)
  {
    uint64_t v9 = *v8;
    if (*v8)
    {
      char v10 = v8[1];
      if (v10)
      {
        StringID v11 = (unsigned __int8 *)(v8 + 2);
        do
        {
          uint64_t v9 = 31 * v9 + v10;
          int v12 = *v11++;
          char v10 = v12;
        }
        while (v12);
      }
    }
  }
  else
  {
    uint64_t v9 = 0;
  }
  v17[0] = 2 * v9;
  v17[1] = v8;
  uint64_t v13 = (uint64_t *)re::HashTable<re::StringID,re::StateParameterInt *,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::tryGet((uint64_t)&unk_2687A0D30, v17);
  if (v13)
  {
    uint64_t v14 = *v13;
  }
  else
  {
    uint64_t v15 = 0;
    uint64_t v14 = 0xFFFFFFFFLL;
  }
  *(void *)(a1 + 64) = v15;
  *(void *)(a1 + 72) = v14;
  re::StringID::destroyString((re::StringID *)v17);
  re::IntrospectionSharedLock::~IntrospectionSharedLock((re::IntrospectionSharedLock *)&v18);
  return a1;
}

double re::ecs2::ComponentType<re::ecs2::CoordinateSpaceDefinitionComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::CoordinateSpaceDefinitionComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::CoordinateSpaceDefinitionComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::CoordinateSpaceDefinitionComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentType<re::ecs2::CoordinateSpaceDefinitionComponent>::doMakeSceneComponentCollection(re *a1)
{
  int v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  return re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>::SceneComponentCollection(v3, (uint64_t)a1);
}

char *re::ecs2::ComponentType<re::ecs2::CoordinateSpaceDefinitionComponent>::doGetComponentIntrospectionInfo()
{
  v0 = re::KTXTextureCompiler::getSupportedExtensions(void)const::supportedExtensions;
  {
    v0 = re::KTXTextureCompiler::getSupportedExtensions(void)const::supportedExtensions;
    if (v2)
    {
      re::introspect<re::ecs2::CoordinateSpaceDefinitionComponent>(void)::info = (_UNKNOWN *)re::ecs2::introspect_CoordinateSpaceDefinitionComponent(0);
      v0 = re::KTXTextureCompiler::getSupportedExtensions(void)const::supportedExtensions;
    }
  }
  return v0[210];
}

__n128 re::ecs2::ComponentType<re::ecs2::CoordinateSpaceDefinitionComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CoordinateSpaceDefinitionComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::CoordinateSpaceDefinitionComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E6590;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::ComponentImpl<re::ecs2::CoordinateSpaceDefinitionComponent,(re::ecs2::ComponentTypeBase::Flags)2>::create(void *a1@<X8>)
{
  int v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::CoordinateSpaceDefinitionComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::CoordinateSpaceDefinitionComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 32, 0);
  *(_OWORD *)int v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E6600;
  *a1 = v3;
}

void re::ecs2::CoordinateSpaceDefinitionComponent::~CoordinateSpaceDefinitionComponent(re::ecs2::CoordinateSpaceDefinitionComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::CoordinateSpaceDefinitionComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::CoordinateSpaceDefinitionComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::CoordinateSpaceDefinitionComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::CoordinateSpaceDefinitionComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::CoordinateSpaceDefinitionComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>::SceneComponentCollection(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(a1 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(a1 + 128) = 0;
  uint64_t v3 = (void *)(a1 + 128);
  *(void *)a1 = &unk_26E6E6688;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  *(_DWORD *)(a1 + 152) = 0;
  *(void *)(a1 + 200) = 0;
  *(_DWORD *)(a1 + 208) = 0;
  *(_DWORD *)(a1 + 192) = 0;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_DWORD *)(a1 + 240) = 0;
  *(void *)(a1 + 224) = 0;
  *(void *)(a1 + 232) = 0;
  *(void *)(a1 + 216) = 0;
  long long v4 = (void *)(a1 + 216);
  *(void *)(a1 + 288) = 0;
  *(_DWORD *)(a1 + 296) = 0;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_DWORD *)(a1 + 280) = 0;
  *(_OWORD *)(a1 + 264) = 0u;
  uint64_t v5 = (void *)(a1 + 304);
  *(void *)(a1 + 304) = 0;
  *(void *)(a1 + 312) = 0;
  *(_DWORD *)(a1 + 328) = 0;
  *(void *)(a1 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(a1 + 376) = 0;
  *(_DWORD *)(a1 + 384) = 0;
  *(_DWORD *)(a1 + 368) = 0;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  uint64_t v6 = (void *)(a1 + 392);
  *(void *)(a1 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(a1 + 400) = 0;
  *(_DWORD *)(a1 + 416) = 0;
  *(void *)(a1 + 408) = 0;
  *(void *)(a1 + 464) = 0;
  *(_DWORD *)(a1 + 472) = 0;
  *(_DWORD *)(a1 + 456) = 0;
  *(_OWORD *)(a1 + 424) = 0u;
  *(_OWORD *)(a1 + 440) = 0u;
  uint64_t v7 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
  *(void *)(a1 + 480) = 0;
  *(void *)(a1 + 488) = 0;
  *(void *)(a1 + 496) = 0;
  *(_DWORD *)(a1 + 504) = 1;
  *(void *)(a1 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(a1 + 512) = 0;
  *(_DWORD *)(a1 + 536) = 0;
  *(void *)(a1 + 528) = 0;
  *(void *)(a1 + 552) = 0;
  *(void *)(a1 + 544) = 0;
  *(_DWORD *)(a1 + 560) = 1;
  *(void *)(a1 + 576) = 0;
  *(void *)(a1 + 568) = 0;
  *(_DWORD *)(a1 + 592) = 0;
  *(void *)(a1 + 584) = 0;
  *(void *)(a1 + 608) = 0;
  *(void *)(a1 + 600) = 0;
  *(_DWORD *)(a1 + 616) = 1;
  *(void *)(a1 + 632) = 0;
  *(void *)(a1 + 624) = 0;
  *(_DWORD *)(a1 + 648) = 0;
  *(void *)(a1 + 640) = 0;
  uint64_t v8 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity(v3, 0);
  ++*(_DWORD *)(a1 + 152);
  uint64_t v9 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity(v4, 0);
  ++*(_DWORD *)(a1 + 240);
  char v10 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity(v5, 0);
  ++*(_DWORD *)(a1 + 328);
  StringID v11 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity(v6, 0);
  ++*(_DWORD *)(a1 + 416);
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  void *v2;
  uint64_t vars8;

  *a1 = &unk_26E6E6688;
  int v2 = a1 + 16;
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::GeometricObjectBase>::~Event(a1 + 49);
  re::Event<re::GeometricObjectBase>::~Event(a1 + 38);
  re::Event<re::GeometricObjectBase>::~Event(a1 + 27);
  re::Event<re::GeometricObjectBase>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>,re::Slice<re::ecs2::AnchorComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>,re::Slice<re::ecs2::AnchorComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>,re::Slice<re::ecs2::AnchorComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorComponent>,re::Slice<re::ecs2::AnchorComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>::registerCallbacks(_DWORD *a1, void *a2)
{
  return re::ecs2::SceneComponentCollectionCallbacks::subscribe<re::ecs2::CoordinateSpaceDefinitionComponent>(a2, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
}

double re::ecs2::SceneComponentCollectionCallbacks::subscribe<re::ecs2::CoordinateSpaceDefinitionComponent>(void *a1, _DWORD *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a1[3])
  {
    uint64_t v5 = a1;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CoordinateSpaceDefinitionComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>,re::Slice<re::ecs2::CoordinateSpaceDefinitionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>*,re::Slice<re::ecs2::CoordinateSpaceDefinitionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>,re::Slice<re::ecs2::CoordinateSpaceDefinitionComponent*>>::Subscription const&,re::Slice<re::ecs2::CoordinateSpaceDefinitionComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a2 + 32, (uint64_t)&v5);
  }
  if (a1[4])
  {
    uint64_t v5 = a1;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CoordinateSpaceDefinitionComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>,re::Slice<re::ecs2::CoordinateSpaceDefinitionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>*,re::Slice<re::ecs2::CoordinateSpaceDefinitionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>,re::Slice<re::ecs2::CoordinateSpaceDefinitionComponent*>>::Subscription const&,re::Slice<re::ecs2::CoordinateSpaceDefinitionComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a2 + 98, (uint64_t)&v5);
  }
  if (a1[5])
  {
    uint64_t v5 = a1;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CoordinateSpaceDefinitionComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>,re::Slice<re::ecs2::CoordinateSpaceDefinitionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>*,re::Slice<re::ecs2::CoordinateSpaceDefinitionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>,re::Slice<re::ecs2::CoordinateSpaceDefinitionComponent*>>::Subscription const&,re::Slice<re::ecs2::CoordinateSpaceDefinitionComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a2 + 54, (uint64_t)&v5);
  }
  if (a1[6])
  {
    uint64_t v5 = a1;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CoordinateSpaceDefinitionComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>,re::Slice<re::ecs2::CoordinateSpaceDefinitionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>*,re::Slice<re::ecs2::CoordinateSpaceDefinitionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>,re::Slice<re::ecs2::CoordinateSpaceDefinitionComponent*>>::Subscription const&,re::Slice<re::ecs2::CoordinateSpaceDefinitionComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a2 + 76, (uint64_t)&v5);
  }
  return result;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CoordinateSpaceDefinitionComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CoordinateSpaceDefinitionComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CoordinateSpaceDefinitionComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CoordinateSpaceDefinitionComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>,re::Slice<re::ecs2::CoordinateSpaceDefinitionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>*,re::Slice<re::ecs2::CoordinateSpaceDefinitionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>,re::Slice<re::ecs2::CoordinateSpaceDefinitionComponent*>>::Subscription const&,re::Slice<re::ecs2::CoordinateSpaceDefinitionComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    uint64_t v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

void re::ecs2::SceneComponentCollectionCallbacks::unsubscribe<re::ecs2::CoordinateSpaceDefinitionComponent>(void *a1, uint64_t a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a1[3])
  {
    *(void *)&long long v4 = a1;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CoordinateSpaceDefinitionComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>,re::Slice<re::ecs2::CoordinateSpaceDefinitionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>*,re::Slice<re::ecs2::CoordinateSpaceDefinitionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>,re::Slice<re::ecs2::CoordinateSpaceDefinitionComponent*>>::Subscription const&,re::Slice<re::ecs2::CoordinateSpaceDefinitionComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a2 + 128, &v4);
  }
  if (a1[4])
  {
    *(void *)&long long v4 = a1;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CoordinateSpaceDefinitionComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>,re::Slice<re::ecs2::CoordinateSpaceDefinitionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>*,re::Slice<re::ecs2::CoordinateSpaceDefinitionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>,re::Slice<re::ecs2::CoordinateSpaceDefinitionComponent*>>::Subscription const&,re::Slice<re::ecs2::CoordinateSpaceDefinitionComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a2 + 392, &v4);
  }
  if (a1[5])
  {
    *(void *)&long long v4 = a1;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CoordinateSpaceDefinitionComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>,re::Slice<re::ecs2::CoordinateSpaceDefinitionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>*,re::Slice<re::ecs2::CoordinateSpaceDefinitionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>,re::Slice<re::ecs2::CoordinateSpaceDefinitionComponent*>>::Subscription const&,re::Slice<re::ecs2::CoordinateSpaceDefinitionComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a2 + 216, &v4);
  }
  if (a1[6])
  {
    *(void *)&long long v4 = a1;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CoordinateSpaceDefinitionComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>,re::Slice<re::ecs2::CoordinateSpaceDefinitionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>*,re::Slice<re::ecs2::CoordinateSpaceDefinitionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CoordinateSpaceDefinitionComponent>,re::Slice<re::ecs2::CoordinateSpaceDefinitionComponent*>>::Subscription const&,re::Slice<re::ecs2::CoordinateSpaceDefinitionComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a2 + 304, &v4);
  }
}

double re::ecs2::ComponentType<re::ecs2::AcousticMeshComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AcousticMeshComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::AcousticMeshComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::AcousticMeshComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::AcousticMeshComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  int v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::AcousticMeshComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::AcousticMeshComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 432, 0);
  *(_OWORD *)int v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  *((_OWORD *)v2 + 8) = 0u;
  *((_OWORD *)v2 + 9) = 0u;
  *((_OWORD *)v2 + 10) = 0u;
  *((_OWORD *)v2 + 11) = 0u;
  *((_OWORD *)v2 + 12) = 0u;
  *((_OWORD *)v2 + 13) = 0u;
  *((_OWORD *)v2 + 14) = 0u;
  *((_OWORD *)v2 + 15) = 0u;
  *((_OWORD *)v2 + 16) = 0u;
  *((_OWORD *)v2 + 17) = 0u;
  *((_OWORD *)v2 + 18) = 0u;
  *((_OWORD *)v2 + re::ecs2::BasicComponentStates<re::ecs2::BlendShapeWeightsBufferComponent>::~BasicComponentStates((void *)this + 19) = 0u;
  *((_OWORD *)v2 + objc_destroyWeak(this + 20) = 0u;
  *((_OWORD *)v2 + 21) = 0u;
  *((_OWORD *)v2 + 22) = 0u;
  *((_OWORD *)v2 + 23) = 0u;
  *((_OWORD *)v2 + 24) = 0u;
  *((_OWORD *)v2 + 25) = 0u;
  *((_OWORD *)v2 + 26) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E67A0;
  double result = 0.0;
  *(_OWORD *)(v3 + 96) = 0u;
  *(_OWORD *)(v3 + 112) = 0u;
  *(_OWORD *)(v3 + 128) = 0u;
  *(_OWORD *)(v3 + 144) = 0u;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 74) = 0u;
  *(_WORD *)(v3 + 160) = 1;
  *(void *)(v3 + 176) = 0;
  *(void *)(v3 + 184) = 0;
  *(void *)(v3 + 168) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(void *)(v3 + 400) = 0;
  *(unsigned char *)(v3 + 408) = 0;
  *(void *)(v3 + 416) = 0;
  *(_DWORD *)(v3 + 232) = 0;
  *(_OWORD *)(v3 + 216) = 0u;
  *(_OWORD *)(v3 + 200) = 0u;
  *(_OWORD *)(v3 + 240) = 0u;
  *(_OWORD *)(v3 + 256) = 0u;
  *(_DWORD *)(v3 + 272) = 0;
  *(_OWORD *)(v3 + 280) = 0u;
  *(_OWORD *)(v3 + 296) = 0u;
  *(_DWORD *)(v3 + 312) = 0;
  *(_OWORD *)(v3 + 3objc_destroyWeak(this + 20) = 0u;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_DWORD *)(v3 + 352) = 0;
  *(_OWORD *)(v3 + 360) = 0u;
  *(_OWORD *)(v3 + 376) = 0u;
  *(_DWORD *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AcousticMeshComponent>::doMakeSceneComponentCollection(re *a1)
{
  int v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E6828;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AcousticMeshComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF826C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF826C0))
  {
    qword_26AF826B8 = re::ecs2::introspect_AcousticMeshComponent(0);
    __cxa_guard_release(&qword_26AF826C0);
  }
  return qword_26AF826B8;
}

__n128 re::ecs2::ComponentType<re::ecs2::AcousticMeshComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AcousticMeshComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AcousticMeshComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E6730;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::AcousticMeshComponent::~AcousticMeshComponent(id *this)
{
  *this = &unk_26E6E67A0;
  re::DynamicArray<re::AcousticSoundReductionMaterial>::deinit((uint64_t)(this + 46));
  re::DynamicArray<re::AcousticSoundReductionMaterial>::deinit((uint64_t)(this + 41));
  re::DynamicArray<re::AcousticScatteringMaterial>::deinit((uint64_t)(this + 36));
  re::DynamicArray<re::AcousticScatteringMaterial>::deinit((uint64_t)(this + 31));
  re::DynamicArray<re::AcousticAbsorptionMaterial>::deinit((uint64_t)(this + 26));
  re::DynamicArray<re::AcousticAbsorptionMaterial>::deinit((uint64_t)(this + 21));

  re::AssetHandle::~AssetHandle((re::AssetHandle *)(this + 4));
  *this = &unk_26E6DECE0;
  objc_destructInstance(this + 1);
}

{
  uint64_t vars8;

  *this = &unk_26E6E67A0;
  re::DynamicArray<re::AcousticSoundReductionMaterial>::deinit((uint64_t)(this + 46));
  re::DynamicArray<re::AcousticSoundReductionMaterial>::deinit((uint64_t)(this + 41));
  re::DynamicArray<re::AcousticScatteringMaterial>::deinit((uint64_t)(this + 36));
  re::DynamicArray<re::AcousticScatteringMaterial>::deinit((uint64_t)(this + 31));
  re::DynamicArray<re::AcousticAbsorptionMaterial>::deinit((uint64_t)(this + 26));
  re::DynamicArray<re::AcousticAbsorptionMaterial>::deinit((uint64_t)(this + 21));

  re::AssetHandle::~AssetHandle((re::AssetHandle *)(this + 4));
  *this = &unk_26E6DECE0;
  objc_destructInstance(this + 1);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AcousticMeshComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::AcousticMeshComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AcousticMeshComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::AcousticMeshComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::AcousticMeshComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E6828;
  int v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>::registerCallbacks(_DWORD *a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AcousticMeshComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>*,re::Slice<re::ecs2::AcousticMeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::Subscription const&,re::Slice<re::ecs2::AcousticMeshComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AcousticMeshComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>*,re::Slice<re::ecs2::AcousticMeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::Subscription const&,re::Slice<re::ecs2::AcousticMeshComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AcousticMeshComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>*,re::Slice<re::ecs2::AcousticMeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::Subscription const&,re::Slice<re::ecs2::AcousticMeshComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AcousticMeshComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>*,re::Slice<re::ecs2::AcousticMeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::Subscription const&,re::Slice<re::ecs2::AcousticMeshComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AcousticMeshComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>*,re::Slice<re::ecs2::AcousticMeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::Subscription const&,re::Slice<re::ecs2::AcousticMeshComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AcousticMeshComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>*,re::Slice<re::ecs2::AcousticMeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::Subscription const&,re::Slice<re::ecs2::AcousticMeshComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AcousticMeshComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>*,re::Slice<re::ecs2::AcousticMeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::Subscription const&,re::Slice<re::ecs2::AcousticMeshComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AcousticMeshComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>*,re::Slice<re::ecs2::AcousticMeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::Subscription const&,re::Slice<re::ecs2::AcousticMeshComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

void re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  int v3 = *(_DWORD *)(a1 + 80);
  *(_DWORD *)(a1 + 80) = v3 + 1;
  if (*(void *)(a1 + 16))
  {
    unint64_t v5 = 0;
    do
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)(a1 + 32) + 32 * v5 + 24))(a2) == 1) {
        re::DynamicArray<re::Event<re::SimulationTimer,re::SimulationTimerEventArgs const&>::Subscription>::removeStableAt((void *)a1, v5);
      }
      else {
        ++v5;
      }
    }
    while (v5 < *(void *)(a1 + 16));
    int v3 = *(_DWORD *)(a1 + 80) - 1;
  }
  *(_DWORD *)(a1 + 80) = v3;
  if (!v3)
  {
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      uint64_t v7 = 0;
      for (unint64_t i = 0; i != v6; ++i)
      {
        unint64_t v9 = *(void *)(a1 + 56);
        if (v9 <= i)
        {
          memset(v23, 0, 80);
          os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR);
          int v15 = 136315906;
          unsigned int v16 = "operator[]";
          __int16 v17 = 1024;
          int v18 = 789;
          __int16 v19 = 2048;
          unint64_t v20 = i;
          __int16 v21 = 2048;
          unint64_t v22 = v9;
          _os_log_send_and_compose_impl();
          _os_crash_msg();
          __break(1u);
        }
        uint64_t v10 = *(void *)(a1 + 72) + v7;
        uint64_t v11 = *(void *)(v10 + 32);
        long long v12 = *(_OWORD *)(v10 + 16);
        v13[0] = *(_OWORD *)v10;
        v13[1] = v12;
        uint64_t v14 = v11;
        if (LOBYTE(v13[0]))
        {
          re::DynamicArray<re::Event<re::SimulationTimer,re::SimulationTimerEventArgs const&>::Subscription>::indexOf(a1, (void *)v13 + 1, (uint64_t)v23);
          if (!v23[0]) {
            re::DynamicArray<re::EvaluationRegister>::add((_anonymous_namespace_ *)a1, (uint64_t)v13 + 8);
          }
        }
        else
        {
          re::DynamicArray<re::Event<re::SimulationTimer,re::SimulationTimerEventArgs const&>::Subscription>::removeStable((void *)a1, (void *)v13 + 1);
        }
        v7 += 40;
      }
    }
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AcousticMeshComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  unint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AcousticMeshComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  unint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AcousticMeshComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  unint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AcousticMeshComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  unint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>*,re::Slice<re::ecs2::AcousticMeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::Subscription const&,re::Slice<re::ecs2::AcousticMeshComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::AccessibilityComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AccessibilityComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::AccessibilityComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::AccessibilityComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::AccessibilityComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  int v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::AccessibilityComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::AccessibilityComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 368, 0);
  *(_OWORD *)int v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  *((_OWORD *)v2 + 8) = 0u;
  *((_OWORD *)v2 + 9) = 0u;
  *((_OWORD *)v2 + 10) = 0u;
  *((_OWORD *)v2 + 11) = 0u;
  *((_OWORD *)v2 + 12) = 0u;
  *((_OWORD *)v2 + 13) = 0u;
  *((_OWORD *)v2 + 14) = 0u;
  *((_OWORD *)v2 + 15) = 0u;
  *((_OWORD *)v2 + 16) = 0u;
  *((_OWORD *)v2 + 17) = 0u;
  *((_OWORD *)v2 + 18) = 0u;
  *((_OWORD *)v2 + re::ecs2::BasicComponentStates<re::ecs2::BlendShapeWeightsBufferComponent>::~BasicComponentStates((void *)this + 19) = 0u;
  *((_OWORD *)v2 + objc_destroyWeak(this + 20) = 0u;
  *((_OWORD *)v2 + 21) = 0u;
  *((_OWORD *)v2 + 22) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E6940;
  *(_WORD *)(v3 + 25) = 0;
  *(unsigned char *)(v3 + 32) = 0;
  *(unsigned char *)(v3 + 72) = 0;
  *(unsigned char *)(v3 + 112) = 0;
  *(void *)(v3 + 184) = 0;
  *(void *)(v3 + 160) = 0;
  *(void *)(v3 + 168) = 0;
  *(void *)(v3 + 152) = 0;
  *(_DWORD *)(v3 + 176) = 0;
  *(unsigned char *)(v3 + 192) = 0;
  *(void *)(v3 + 360) = 0;
  double result = 0.0;
  *(_OWORD *)(v3 + 232) = 0u;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 264) = 0;
  *(_DWORD *)(v3 + 304) = 0;
  *(_OWORD *)(v3 + 272) = 0u;
  *(_OWORD *)(v3 + 288) = 0u;
  *(_OWORD *)(v3 + 340) = 0u;
  *(_OWORD *)(v3 + 312) = 0u;
  *(_OWORD *)(v3 + 328) = 0u;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AccessibilityComponent>::doMakeSceneComponentCollection(re *a1)
{
  int v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E69C8;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AccessibilityComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF826D0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF826D0))
  {
    qword_26AF826C8 = re::ecs2::introspect_AccessibilityComponent(0);
    __cxa_guard_release(&qword_26AF826D0);
  }
  return qword_26AF826C8;
}

__n128 re::ecs2::ComponentType<re::ecs2::AccessibilityComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AccessibilityComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AccessibilityComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E68D0;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::AccessibilityComponent::~AccessibilityComponent(re::ecs2::AccessibilityComponent *this)
{
  re::ecs2::AccessibilityComponent::~AccessibilityComponent(this);
  JUMPOUT(0x237DBCBD0);
}

{
  re::DynamicArray<re::DynamicString>::deinit((uint64_t)this + 328);
  re::DynamicArray<re::DynamicString>::deinit((uint64_t)this + 280);
  re::DynamicArray<unsigned long>::deinit((uint64_t)this + 240);
  if (*((unsigned char *)this + 192)) {
    re::DynamicString::deinit((re::ecs2::AccessibilityComponent *)((char *)this + 200));
  }
  re::DynamicArray<re::ecs2::accessibility::CustomContent>::deinit((uint64_t)this + 152);
  if (*((unsigned char *)this + 112)) {
    re::DynamicString::deinit((re::ecs2::AccessibilityComponent *)((char *)this + 120));
  }
  if (*((unsigned char *)this + 72)) {
    re::DynamicString::deinit((re::ecs2::AccessibilityComponent *)((char *)this + 80));
  }
  if (*((unsigned char *)this + 32)) {
    re::DynamicString::deinit((re::ecs2::AccessibilityComponent *)((char *)this + 40));
  }
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AccessibilityComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::AccessibilityComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AccessibilityComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::AccessibilityComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::AccessibilityComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

uint64_t re::DynamicArray<re::ecs2::accessibility::CustomContent>::deinit(uint64_t a1)
{
  uint64_t result = *(void *)a1;
  if (result)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    if (v3)
    {
      uint64_t v4 = *(void *)(a1 + 16);
      if (v4)
      {
        uint64_t v5 = 72 * v4;
        do
        {
          re::DynamicString::deinit((re::DynamicString *)(v3 + 32));
          re::DynamicString::deinit((re::DynamicString *)v3);
          v3 += 72;
          v5 -= 72;
        }
        while (v5);
        uint64_t result = *(void *)a1;
        uint64_t v3 = *(void *)(a1 + 32);
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 40))(result, v3);
    }
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = 0;
    ++*(_DWORD *)(a1 + 24);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E69C8;
  int v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AccessibilityComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>,re::Slice<re::ecs2::AccessibilityComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>*,re::Slice<re::ecs2::AccessibilityComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>,re::Slice<re::ecs2::AccessibilityComponent*>>::Subscription const&,re::Slice<re::ecs2::AccessibilityComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AccessibilityComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>,re::Slice<re::ecs2::AccessibilityComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>*,re::Slice<re::ecs2::AccessibilityComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>,re::Slice<re::ecs2::AccessibilityComponent*>>::Subscription const&,re::Slice<re::ecs2::AccessibilityComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AccessibilityComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>,re::Slice<re::ecs2::AccessibilityComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>*,re::Slice<re::ecs2::AccessibilityComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>,re::Slice<re::ecs2::AccessibilityComponent*>>::Subscription const&,re::Slice<re::ecs2::AccessibilityComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AccessibilityComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>,re::Slice<re::ecs2::AccessibilityComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>*,re::Slice<re::ecs2::AccessibilityComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>,re::Slice<re::ecs2::AccessibilityComponent*>>::Subscription const&,re::Slice<re::ecs2::AccessibilityComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AccessibilityComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>,re::Slice<re::ecs2::AccessibilityComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>*,re::Slice<re::ecs2::AccessibilityComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>,re::Slice<re::ecs2::AccessibilityComponent*>>::Subscription const&,re::Slice<re::ecs2::AccessibilityComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AccessibilityComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>,re::Slice<re::ecs2::AccessibilityComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>*,re::Slice<re::ecs2::AccessibilityComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>,re::Slice<re::ecs2::AccessibilityComponent*>>::Subscription const&,re::Slice<re::ecs2::AccessibilityComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AccessibilityComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>,re::Slice<re::ecs2::AccessibilityComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>*,re::Slice<re::ecs2::AccessibilityComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>,re::Slice<re::ecs2::AccessibilityComponent*>>::Subscription const&,re::Slice<re::ecs2::AccessibilityComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AccessibilityComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>,re::Slice<re::ecs2::AccessibilityComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>*,re::Slice<re::ecs2::AccessibilityComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>,re::Slice<re::ecs2::AccessibilityComponent*>>::Subscription const&,re::Slice<re::ecs2::AccessibilityComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AccessibilityComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AccessibilityComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AccessibilityComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AccessibilityComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>,re::Slice<re::ecs2::AccessibilityComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>*,re::Slice<re::ecs2::AccessibilityComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AccessibilityComponent>,re::Slice<re::ecs2::AccessibilityComponent*>>::Subscription const&,re::Slice<re::ecs2::AccessibilityComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::AdaptiveResolutionComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AdaptiveResolutionComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::AdaptiveResolutionComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::AdaptiveResolutionComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::AdaptiveResolutionComponent>::doMakeComponent(void *a1@<X8>)
{
  int v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::AdaptiveResolutionComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::AdaptiveResolutionComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 32, 0);
  *(_OWORD *)int v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E6AE0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AdaptiveResolutionComponent>::doMakeSceneComponentCollection(re *a1)
{
  int v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E6B68;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AdaptiveResolutionComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF826E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF826E0))
  {
    qword_26AF826D8 = re::ecs2::introspect_AdaptiveResolutionComponent(0);
    __cxa_guard_release(&qword_26AF826E0);
  }
  return qword_26AF826D8;
}

__n128 re::ecs2::ComponentType<re::ecs2::AdaptiveResolutionComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AdaptiveResolutionComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AdaptiveResolutionComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E6A70;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::AdaptiveResolutionComponent::~AdaptiveResolutionComponent(re::ecs2::AdaptiveResolutionComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AdaptiveResolutionComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::AdaptiveResolutionComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AdaptiveResolutionComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::AdaptiveResolutionComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::AdaptiveResolutionComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E6B68;
  int v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AdaptiveResolutionComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>,re::Slice<re::ecs2::AdaptiveResolutionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>*,re::Slice<re::ecs2::AdaptiveResolutionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>,re::Slice<re::ecs2::AdaptiveResolutionComponent*>>::Subscription const&,re::Slice<re::ecs2::AdaptiveResolutionComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AdaptiveResolutionComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>,re::Slice<re::ecs2::AdaptiveResolutionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>*,re::Slice<re::ecs2::AdaptiveResolutionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>,re::Slice<re::ecs2::AdaptiveResolutionComponent*>>::Subscription const&,re::Slice<re::ecs2::AdaptiveResolutionComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AdaptiveResolutionComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>,re::Slice<re::ecs2::AdaptiveResolutionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>*,re::Slice<re::ecs2::AdaptiveResolutionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>,re::Slice<re::ecs2::AdaptiveResolutionComponent*>>::Subscription const&,re::Slice<re::ecs2::AdaptiveResolutionComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AdaptiveResolutionComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>,re::Slice<re::ecs2::AdaptiveResolutionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>*,re::Slice<re::ecs2::AdaptiveResolutionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>,re::Slice<re::ecs2::AdaptiveResolutionComponent*>>::Subscription const&,re::Slice<re::ecs2::AdaptiveResolutionComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AdaptiveResolutionComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>,re::Slice<re::ecs2::AdaptiveResolutionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>*,re::Slice<re::ecs2::AdaptiveResolutionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>,re::Slice<re::ecs2::AdaptiveResolutionComponent*>>::Subscription const&,re::Slice<re::ecs2::AdaptiveResolutionComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AdaptiveResolutionComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>,re::Slice<re::ecs2::AdaptiveResolutionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>*,re::Slice<re::ecs2::AdaptiveResolutionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>,re::Slice<re::ecs2::AdaptiveResolutionComponent*>>::Subscription const&,re::Slice<re::ecs2::AdaptiveResolutionComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AdaptiveResolutionComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>,re::Slice<re::ecs2::AdaptiveResolutionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>*,re::Slice<re::ecs2::AdaptiveResolutionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>,re::Slice<re::ecs2::AdaptiveResolutionComponent*>>::Subscription const&,re::Slice<re::ecs2::AdaptiveResolutionComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AdaptiveResolutionComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>,re::Slice<re::ecs2::AdaptiveResolutionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>*,re::Slice<re::ecs2::AdaptiveResolutionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>,re::Slice<re::ecs2::AdaptiveResolutionComponent*>>::Subscription const&,re::Slice<re::ecs2::AdaptiveResolutionComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AdaptiveResolutionComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AdaptiveResolutionComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AdaptiveResolutionComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AdaptiveResolutionComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>,re::Slice<re::ecs2::AdaptiveResolutionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>*,re::Slice<re::ecs2::AdaptiveResolutionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionComponent>,re::Slice<re::ecs2::AdaptiveResolutionComponent*>>::Subscription const&,re::Slice<re::ecs2::AdaptiveResolutionComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::AdaptiveResolutionStateComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AdaptiveResolutionStateComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::AdaptiveResolutionStateComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::AdaptiveResolutionStateComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::AdaptiveResolutionStateComponent>::doMakeComponent(void *a1@<X8>)
{
  int v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::AdaptiveResolutionStateComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::AdaptiveResolutionStateComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 32, 0);
  *(_OWORD *)int v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E6C80;
  *(_DWORD *)(v3 + 28) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AdaptiveResolutionStateComponent>::doMakeSceneComponentCollection(re *a1)
{
  int v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E6D08;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AdaptiveResolutionStateComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF826F0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF826F0))
  {
    qword_26AF826E8 = re::ecs2::introspect_AdaptiveResolutionStateComponent(0);
    __cxa_guard_release(&qword_26AF826F0);
  }
  return qword_26AF826E8;
}

__n128 re::ecs2::ComponentType<re::ecs2::AdaptiveResolutionStateComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AdaptiveResolutionStateComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AdaptiveResolutionStateComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E6C10;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::AdaptiveResolutionStateComponent::~AdaptiveResolutionStateComponent(re::ecs2::AdaptiveResolutionStateComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AdaptiveResolutionStateComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::AdaptiveResolutionStateComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AdaptiveResolutionStateComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::AdaptiveResolutionStateComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::AdaptiveResolutionStateComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E6D08;
  int v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AdaptiveResolutionStateComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>,re::Slice<re::ecs2::AdaptiveResolutionStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>*,re::Slice<re::ecs2::AdaptiveResolutionStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>,re::Slice<re::ecs2::AdaptiveResolutionStateComponent*>>::Subscription const&,re::Slice<re::ecs2::AdaptiveResolutionStateComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AdaptiveResolutionStateComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>,re::Slice<re::ecs2::AdaptiveResolutionStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>*,re::Slice<re::ecs2::AdaptiveResolutionStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>,re::Slice<re::ecs2::AdaptiveResolutionStateComponent*>>::Subscription const&,re::Slice<re::ecs2::AdaptiveResolutionStateComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AdaptiveResolutionStateComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>,re::Slice<re::ecs2::AdaptiveResolutionStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>*,re::Slice<re::ecs2::AdaptiveResolutionStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>,re::Slice<re::ecs2::AdaptiveResolutionStateComponent*>>::Subscription const&,re::Slice<re::ecs2::AdaptiveResolutionStateComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AdaptiveResolutionStateComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>,re::Slice<re::ecs2::AdaptiveResolutionStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>*,re::Slice<re::ecs2::AdaptiveResolutionStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>,re::Slice<re::ecs2::AdaptiveResolutionStateComponent*>>::Subscription const&,re::Slice<re::ecs2::AdaptiveResolutionStateComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AdaptiveResolutionStateComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>,re::Slice<re::ecs2::AdaptiveResolutionStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>*,re::Slice<re::ecs2::AdaptiveResolutionStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>,re::Slice<re::ecs2::AdaptiveResolutionStateComponent*>>::Subscription const&,re::Slice<re::ecs2::AdaptiveResolutionStateComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AdaptiveResolutionStateComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>,re::Slice<re::ecs2::AdaptiveResolutionStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>*,re::Slice<re::ecs2::AdaptiveResolutionStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>,re::Slice<re::ecs2::AdaptiveResolutionStateComponent*>>::Subscription const&,re::Slice<re::ecs2::AdaptiveResolutionStateComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AdaptiveResolutionStateComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>,re::Slice<re::ecs2::AdaptiveResolutionStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>*,re::Slice<re::ecs2::AdaptiveResolutionStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>,re::Slice<re::ecs2::AdaptiveResolutionStateComponent*>>::Subscription const&,re::Slice<re::ecs2::AdaptiveResolutionStateComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AdaptiveResolutionStateComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>,re::Slice<re::ecs2::AdaptiveResolutionStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>*,re::Slice<re::ecs2::AdaptiveResolutionStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>,re::Slice<re::ecs2::AdaptiveResolutionStateComponent*>>::Subscription const&,re::Slice<re::ecs2::AdaptiveResolutionStateComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AdaptiveResolutionStateComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AdaptiveResolutionStateComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AdaptiveResolutionStateComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AdaptiveResolutionStateComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>,re::Slice<re::ecs2::AdaptiveResolutionStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>*,re::Slice<re::ecs2::AdaptiveResolutionStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AdaptiveResolutionStateComponent>,re::Slice<re::ecs2::AdaptiveResolutionStateComponent*>>::Subscription const&,re::Slice<re::ecs2::AdaptiveResolutionStateComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::AnimationComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AnimationComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::AnimationComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::AnimationComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

re::ecs2::AnimationComponent *re::ecs2::ComponentType<re::ecs2::AnimationComponent>::doMakeComponent@<X0>(re::ecs2::AnimationComponent **a1@<X8>)
{
  int v2 = (id **)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::AnimationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                    + 7)
                                                                 + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::AnimationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 248, 0);
  double result = re::ecs2::AnimationComponent::AnimationComponent(v2);
  *a1 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AnimationComponent>::doMakeSceneComponentCollection(re *a1)
{
  int v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E6E20;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AnimationComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82700, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82700))
  {
    qword_26AF826F8 = re::ecs2::introspect_AnimationComponent(0);
    __cxa_guard_release(&qword_26AF82700);
  }
  return qword_26AF826F8;
}

__n128 re::ecs2::ComponentType<re::ecs2::AnimationComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AnimationComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AnimationComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E6DB0;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E6E20;
  int v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AnimationComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>,re::Slice<re::ecs2::AnimationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>*,re::Slice<re::ecs2::AnimationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>,re::Slice<re::ecs2::AnimationComponent*>>::Subscription const&,re::Slice<re::ecs2::AnimationComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AnimationComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>,re::Slice<re::ecs2::AnimationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>*,re::Slice<re::ecs2::AnimationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>,re::Slice<re::ecs2::AnimationComponent*>>::Subscription const&,re::Slice<re::ecs2::AnimationComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AnimationComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>,re::Slice<re::ecs2::AnimationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>*,re::Slice<re::ecs2::AnimationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>,re::Slice<re::ecs2::AnimationComponent*>>::Subscription const&,re::Slice<re::ecs2::AnimationComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AnimationComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>,re::Slice<re::ecs2::AnimationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>*,re::Slice<re::ecs2::AnimationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>,re::Slice<re::ecs2::AnimationComponent*>>::Subscription const&,re::Slice<re::ecs2::AnimationComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AnimationComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>,re::Slice<re::ecs2::AnimationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>*,re::Slice<re::ecs2::AnimationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>,re::Slice<re::ecs2::AnimationComponent*>>::Subscription const&,re::Slice<re::ecs2::AnimationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AnimationComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>,re::Slice<re::ecs2::AnimationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>*,re::Slice<re::ecs2::AnimationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>,re::Slice<re::ecs2::AnimationComponent*>>::Subscription const&,re::Slice<re::ecs2::AnimationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AnimationComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>,re::Slice<re::ecs2::AnimationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>*,re::Slice<re::ecs2::AnimationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>,re::Slice<re::ecs2::AnimationComponent*>>::Subscription const&,re::Slice<re::ecs2::AnimationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AnimationComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>,re::Slice<re::ecs2::AnimationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>*,re::Slice<re::ecs2::AnimationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>,re::Slice<re::ecs2::AnimationComponent*>>::Subscription const&,re::Slice<re::ecs2::AnimationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AnimationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AnimationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AnimationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AnimationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>,re::Slice<re::ecs2::AnimationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>*,re::Slice<re::ecs2::AnimationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnimationComponent>,re::Slice<re::ecs2::AnimationComponent*>>::Subscription const&,re::Slice<re::ecs2::AnimationComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::AnimationLibraryComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AnimationLibraryComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::AnimationLibraryComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::AnimationLibraryComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::AnimationLibraryComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::AnimationLibraryComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::AnimationLibraryComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 120, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(void *)(v2 + 112) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6DFB38;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 76) = 0u;
  *(void *)&double result = 0x7FFFFFFFLL;
  *(void *)(v3 + 92) = 0x7FFFFFFFLL;
  *(void *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0;
  *(void *)(v3 + 112) = -1;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AnimationLibraryComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E6F38;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AnimationLibraryComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82710, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82710))
  {
    qword_26AF82708 = re::ecs2::introspect_AnimationLibraryComponent(0);
    __cxa_guard_release(&qword_26AF82710);
  }
  return qword_26AF82708;
}

__n128 re::ecs2::ComponentType<re::ecs2::AnimationLibraryComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AnimationLibraryComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AnimationLibraryComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E6EC8;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E6F38;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AnimationLibraryComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>,re::Slice<re::ecs2::AnimationLibraryComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>*,re::Slice<re::ecs2::AnimationLibraryComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>,re::Slice<re::ecs2::AnimationLibraryComponent*>>::Subscription const&,re::Slice<re::ecs2::AnimationLibraryComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AnimationLibraryComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>,re::Slice<re::ecs2::AnimationLibraryComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>*,re::Slice<re::ecs2::AnimationLibraryComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>,re::Slice<re::ecs2::AnimationLibraryComponent*>>::Subscription const&,re::Slice<re::ecs2::AnimationLibraryComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AnimationLibraryComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>,re::Slice<re::ecs2::AnimationLibraryComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>*,re::Slice<re::ecs2::AnimationLibraryComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>,re::Slice<re::ecs2::AnimationLibraryComponent*>>::Subscription const&,re::Slice<re::ecs2::AnimationLibraryComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AnimationLibraryComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>,re::Slice<re::ecs2::AnimationLibraryComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>*,re::Slice<re::ecs2::AnimationLibraryComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>,re::Slice<re::ecs2::AnimationLibraryComponent*>>::Subscription const&,re::Slice<re::ecs2::AnimationLibraryComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AnimationLibraryComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>,re::Slice<re::ecs2::AnimationLibraryComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>*,re::Slice<re::ecs2::AnimationLibraryComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>,re::Slice<re::ecs2::AnimationLibraryComponent*>>::Subscription const&,re::Slice<re::ecs2::AnimationLibraryComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AnimationLibraryComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>,re::Slice<re::ecs2::AnimationLibraryComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>*,re::Slice<re::ecs2::AnimationLibraryComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>,re::Slice<re::ecs2::AnimationLibraryComponent*>>::Subscription const&,re::Slice<re::ecs2::AnimationLibraryComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AnimationLibraryComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>,re::Slice<re::ecs2::AnimationLibraryComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>*,re::Slice<re::ecs2::AnimationLibraryComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>,re::Slice<re::ecs2::AnimationLibraryComponent*>>::Subscription const&,re::Slice<re::ecs2::AnimationLibraryComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AnimationLibraryComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>,re::Slice<re::ecs2::AnimationLibraryComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>*,re::Slice<re::ecs2::AnimationLibraryComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>,re::Slice<re::ecs2::AnimationLibraryComponent*>>::Subscription const&,re::Slice<re::ecs2::AnimationLibraryComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AnimationLibraryComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AnimationLibraryComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AnimationLibraryComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AnimationLibraryComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>,re::Slice<re::ecs2::AnimationLibraryComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>*,re::Slice<re::ecs2::AnimationLibraryComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnimationLibraryComponent>,re::Slice<re::ecs2::AnimationLibraryComponent*>>::Subscription const&,re::Slice<re::ecs2::AnimationLibraryComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::AudioGeneratorComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioGeneratorComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::AudioGeneratorComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::AudioGeneratorComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

re::ecs2::AudioGeneratorComponent *re::ecs2::ComponentType<re::ecs2::AudioGeneratorComponent>::doMakeComponent@<X0>(re::ecs2::AudioGeneratorComponent **a1@<X8>)
{
  uint64_t v2 = (re::ecs2::AudioGeneratorComponent *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::AudioGeneratorComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                                  + 7)
                                                                                               + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::AudioGeneratorComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 1152, 0);
  double result = re::ecs2::AudioGeneratorComponent::AudioGeneratorComponent(v2);
  *a1 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioGeneratorComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E7050;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioGeneratorComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82720, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82720))
  {
    qword_26AF82718 = re::ecs2::introspect_AudioGeneratorComponent(0);
    __cxa_guard_release(&qword_26AF82720);
  }
  return qword_26AF82718;
}

__n128 re::ecs2::ComponentType<re::ecs2::AudioGeneratorComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioGeneratorComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioGeneratorComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E6FE0;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E7050;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioGeneratorComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>,re::Slice<re::ecs2::AudioGeneratorComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>*,re::Slice<re::ecs2::AudioGeneratorComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>,re::Slice<re::ecs2::AudioGeneratorComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioGeneratorComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioGeneratorComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>,re::Slice<re::ecs2::AudioGeneratorComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>*,re::Slice<re::ecs2::AudioGeneratorComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>,re::Slice<re::ecs2::AudioGeneratorComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioGeneratorComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioGeneratorComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>,re::Slice<re::ecs2::AudioGeneratorComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>*,re::Slice<re::ecs2::AudioGeneratorComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>,re::Slice<re::ecs2::AudioGeneratorComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioGeneratorComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioGeneratorComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>,re::Slice<re::ecs2::AudioGeneratorComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>*,re::Slice<re::ecs2::AudioGeneratorComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>,re::Slice<re::ecs2::AudioGeneratorComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioGeneratorComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioGeneratorComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>,re::Slice<re::ecs2::AudioGeneratorComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>*,re::Slice<re::ecs2::AudioGeneratorComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>,re::Slice<re::ecs2::AudioGeneratorComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioGeneratorComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioGeneratorComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>,re::Slice<re::ecs2::AudioGeneratorComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>*,re::Slice<re::ecs2::AudioGeneratorComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>,re::Slice<re::ecs2::AudioGeneratorComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioGeneratorComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioGeneratorComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>,re::Slice<re::ecs2::AudioGeneratorComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>*,re::Slice<re::ecs2::AudioGeneratorComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>,re::Slice<re::ecs2::AudioGeneratorComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioGeneratorComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioGeneratorComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>,re::Slice<re::ecs2::AudioGeneratorComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>*,re::Slice<re::ecs2::AudioGeneratorComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>,re::Slice<re::ecs2::AudioGeneratorComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioGeneratorComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioGeneratorComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioGeneratorComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioGeneratorComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioGeneratorComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>,re::Slice<re::ecs2::AudioGeneratorComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>*,re::Slice<re::ecs2::AudioGeneratorComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioGeneratorComponent>,re::Slice<re::ecs2::AudioGeneratorComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioGeneratorComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::AudioPlayerComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioPlayerComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::AudioPlayerComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::AudioPlayerComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

re::ecs2::AudioPlayerComponent *re::ecs2::ComponentType<re::ecs2::AudioPlayerComponent>::doMakeComponent@<X0>(re::ecs2::AudioPlayerComponent **a1@<X8>)
{
  uint64_t v2 = (re::ecs2::AudioPlayerComponent *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::AudioPlayerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                               + 7)
                                                                                            + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::AudioPlayerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 496, 0);
  double result = re::ecs2::AudioPlayerComponent::AudioPlayerComponent(v2);
  *a1 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioPlayerComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E7168;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioPlayerComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82730, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82730))
  {
    qword_26AF82728 = re::ecs2::introspect_AudioPlayerComponent(0);
    __cxa_guard_release(&qword_26AF82730);
  }
  return qword_26AF82728;
}

__n128 re::ecs2::ComponentType<re::ecs2::AudioPlayerComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioPlayerComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioPlayerComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E70F8;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E7168;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>::registerCallbacks(_DWORD *a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioPlayerComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>,re::Slice<re::ecs2::AudioPlayerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>*,re::Slice<re::ecs2::AudioPlayerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>,re::Slice<re::ecs2::AudioPlayerComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioPlayerComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioPlayerComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>,re::Slice<re::ecs2::AudioPlayerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>*,re::Slice<re::ecs2::AudioPlayerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>,re::Slice<re::ecs2::AudioPlayerComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioPlayerComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioPlayerComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>,re::Slice<re::ecs2::AudioPlayerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>*,re::Slice<re::ecs2::AudioPlayerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>,re::Slice<re::ecs2::AudioPlayerComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioPlayerComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioPlayerComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>,re::Slice<re::ecs2::AudioPlayerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>*,re::Slice<re::ecs2::AudioPlayerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>,re::Slice<re::ecs2::AudioPlayerComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioPlayerComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioPlayerComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>,re::Slice<re::ecs2::AudioPlayerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>*,re::Slice<re::ecs2::AudioPlayerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>,re::Slice<re::ecs2::AudioPlayerComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioPlayerComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioPlayerComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>,re::Slice<re::ecs2::AudioPlayerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>*,re::Slice<re::ecs2::AudioPlayerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>,re::Slice<re::ecs2::AudioPlayerComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioPlayerComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioPlayerComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>,re::Slice<re::ecs2::AudioPlayerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>*,re::Slice<re::ecs2::AudioPlayerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>,re::Slice<re::ecs2::AudioPlayerComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioPlayerComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioPlayerComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>,re::Slice<re::ecs2::AudioPlayerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>*,re::Slice<re::ecs2::AudioPlayerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>,re::Slice<re::ecs2::AudioPlayerComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioPlayerComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioPlayerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioPlayerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioPlayerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioPlayerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>,re::Slice<re::ecs2::AudioPlayerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>*,re::Slice<re::ecs2::AudioPlayerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioPlayerComponent>,re::Slice<re::ecs2::AudioPlayerComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioPlayerComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::VideoAudioControlComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoAudioControlComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::VideoAudioControlComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::VideoAudioControlComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::VideoAudioControlComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::VideoAudioControlComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::VideoAudioControlComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 56, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(void *)(v2 + 48) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F6BB8;
  *(_DWORD *)(v3 + 32) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoAudioControlComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E7280;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoAudioControlComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82740, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82740))
  {
    qword_26AF82738 = re::ecs2::introspect_VideoAudioControlComponent(0);
    __cxa_guard_release(&qword_26AF82740);
  }
  return qword_26AF82738;
}

__n128 re::ecs2::ComponentType<re::ecs2::VideoAudioControlComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoAudioControlComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoAudioControlComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E7210;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::VideoAudioControlComponent::~VideoAudioControlComponent(re::ecs2::VideoAudioControlComponent *this)
{
  *(void *)this = &unk_26E6F6BB8;
  uint64_t v2 = (void *)*((void *)this + 5);
  *((void *)this + 5) = 0;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  void *v2;
  uint64_t vars8;

  *(void *)this = &unk_26E6F6BB8;
  uint64_t v2 = (void *)*((void *)this + 5);
  *((void *)this + 5) = 0;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::VideoAudioControlComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::VideoAudioControlComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::VideoAudioControlComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::VideoAudioControlComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::VideoAudioControlComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E7280;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VideoAudioControlComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>,re::Slice<re::ecs2::VideoAudioControlComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>*,re::Slice<re::ecs2::VideoAudioControlComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>,re::Slice<re::ecs2::VideoAudioControlComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoAudioControlComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VideoAudioControlComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>,re::Slice<re::ecs2::VideoAudioControlComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>*,re::Slice<re::ecs2::VideoAudioControlComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>,re::Slice<re::ecs2::VideoAudioControlComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoAudioControlComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VideoAudioControlComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>,re::Slice<re::ecs2::VideoAudioControlComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>*,re::Slice<re::ecs2::VideoAudioControlComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>,re::Slice<re::ecs2::VideoAudioControlComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoAudioControlComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VideoAudioControlComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>,re::Slice<re::ecs2::VideoAudioControlComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>*,re::Slice<re::ecs2::VideoAudioControlComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>,re::Slice<re::ecs2::VideoAudioControlComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoAudioControlComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VideoAudioControlComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>,re::Slice<re::ecs2::VideoAudioControlComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>*,re::Slice<re::ecs2::VideoAudioControlComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>,re::Slice<re::ecs2::VideoAudioControlComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoAudioControlComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VideoAudioControlComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>,re::Slice<re::ecs2::VideoAudioControlComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>*,re::Slice<re::ecs2::VideoAudioControlComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>,re::Slice<re::ecs2::VideoAudioControlComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoAudioControlComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VideoAudioControlComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>,re::Slice<re::ecs2::VideoAudioControlComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>*,re::Slice<re::ecs2::VideoAudioControlComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>,re::Slice<re::ecs2::VideoAudioControlComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoAudioControlComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VideoAudioControlComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>,re::Slice<re::ecs2::VideoAudioControlComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>*,re::Slice<re::ecs2::VideoAudioControlComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>,re::Slice<re::ecs2::VideoAudioControlComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoAudioControlComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VideoAudioControlComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VideoAudioControlComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VideoAudioControlComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VideoAudioControlComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>,re::Slice<re::ecs2::VideoAudioControlComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>*,re::Slice<re::ecs2::VideoAudioControlComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoAudioControlComponent>,re::Slice<re::ecs2::VideoAudioControlComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoAudioControlComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ChannelAudioComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ChannelAudioComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ChannelAudioComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::ChannelAudioComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::ChannelAudioComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::ChannelAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::ChannelAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 32, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F7058;
  *(_DWORD *)(v3 + 28) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ChannelAudioComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E7398;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ChannelAudioComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82750, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82750))
  {
    qword_26AF82748 = re::ecs2::introspect_ChannelAudioComponent(0);
    __cxa_guard_release(&qword_26AF82750);
  }
  return qword_26AF82748;
}

__n128 re::ecs2::ComponentType<re::ecs2::ChannelAudioComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ChannelAudioComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ChannelAudioComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E7328;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::ChannelAudioComponent::~ChannelAudioComponent(re::ecs2::ChannelAudioComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ChannelAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::ChannelAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ChannelAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::ChannelAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::ChannelAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E7398;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>::registerCallbacks(_DWORD *a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ChannelAudioComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>,re::Slice<re::ecs2::ChannelAudioComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>*,re::Slice<re::ecs2::ChannelAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>,re::Slice<re::ecs2::ChannelAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::ChannelAudioComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ChannelAudioComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>,re::Slice<re::ecs2::ChannelAudioComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>*,re::Slice<re::ecs2::ChannelAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>,re::Slice<re::ecs2::ChannelAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::ChannelAudioComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ChannelAudioComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>,re::Slice<re::ecs2::ChannelAudioComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>*,re::Slice<re::ecs2::ChannelAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>,re::Slice<re::ecs2::ChannelAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::ChannelAudioComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ChannelAudioComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>,re::Slice<re::ecs2::ChannelAudioComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>*,re::Slice<re::ecs2::ChannelAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>,re::Slice<re::ecs2::ChannelAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::ChannelAudioComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ChannelAudioComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>,re::Slice<re::ecs2::ChannelAudioComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>*,re::Slice<re::ecs2::ChannelAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>,re::Slice<re::ecs2::ChannelAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::ChannelAudioComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ChannelAudioComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>,re::Slice<re::ecs2::ChannelAudioComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>*,re::Slice<re::ecs2::ChannelAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>,re::Slice<re::ecs2::ChannelAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::ChannelAudioComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ChannelAudioComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>,re::Slice<re::ecs2::ChannelAudioComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>*,re::Slice<re::ecs2::ChannelAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>,re::Slice<re::ecs2::ChannelAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::ChannelAudioComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ChannelAudioComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>,re::Slice<re::ecs2::ChannelAudioComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>*,re::Slice<re::ecs2::ChannelAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>,re::Slice<re::ecs2::ChannelAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::ChannelAudioComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ChannelAudioComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ChannelAudioComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ChannelAudioComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ChannelAudioComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>,re::Slice<re::ecs2::ChannelAudioComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>*,re::Slice<re::ecs2::ChannelAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ChannelAudioComponent>,re::Slice<re::ecs2::ChannelAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::ChannelAudioComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::CustomDeformerComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::CustomDeformerComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::CustomDeformerComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::CustomDeformerComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

uint64_t *re::ecs2::ComponentType<re::ecs2::CustomDeformerComponent>::doMakeComponent@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::CustomDeformerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::CustomDeformerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 128, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E74B0;
  *(void *)(v3 + 64) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = 0;
  *(void *)(v3 + 32) = 0;
  *(_DWORD *)(v2 + 56) = 0;
  inited = (re *)objc_initWeak((id *)(v3 + 72), 0);
  *(void *)(v2 + 80) = 0;
  double result = re::globalAllocators(inited);
  *(void *)(v2 + 112) = result[2];
  *(void *)(v2 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CustomDeformerComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E75E8;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CustomDeformerComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82760, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82760))
  {
    qword_26AF82758 = re::ecs2::introspect_CustomDeformerComponent(0);
    __cxa_guard_release(&qword_26AF82760);
  }
  return qword_26AF82758;
}

__n128 re::ecs2::ComponentType<re::ecs2::CustomDeformerComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CustomDeformerComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::CustomDeformerComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E7440;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::CustomDeformerComponent::~CustomDeformerComponent(id *this)
{
  *this = &unk_26E6E74B0;
  uint64_t v2 = (char *)(this + 4);
  re::FramePersistentPtr<re::ecs2::CustomDeformerComponent::CustomDeformerInputs,re::FrameManager>::~FramePersistentPtr(this + 9);
  re::DynamicArray<re::ecs2::CustomDeformerComponent::CustomDeformerData>::deinit((uint64_t)v2);
  *this = &unk_26E6DECE0;
  objc_destructInstance(this + 1);
}

{
  char *v2;
  uint64_t vars8;

  *this = &unk_26E6E74B0;
  uint64_t v2 = (char *)(this + 4);
  re::FramePersistentPtr<re::ecs2::CustomDeformerComponent::CustomDeformerInputs,re::FrameManager>::~FramePersistentPtr(this + 9);
  re::DynamicArray<re::ecs2::CustomDeformerComponent::CustomDeformerData>::deinit((uint64_t)v2);
  *this = &unk_26E6DECE0;
  objc_destructInstance(this + 1);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::CustomDeformerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::CustomDeformerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::CustomDeformerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::CustomDeformerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::CustomDeformerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

id *re::FramePersistentPtr<re::ecs2::CustomDeformerComponent::CustomDeformerInputs,re::FrameManager>::~FramePersistentPtr(id *a1)
{
  void v5[5] = *MEMORY[0x263EF8340];
  inited = (re *)objc_initWeak(&location, 0);
  memset(v5, 0, 24);
  v5[3] = re::globalAllocators(inited)[2];
  void v5[4] = 0;
  re::FramePersistentPtr<re::ecs2::CustomDeformerComponent::CustomDeformerInputs,re::FrameManager>::reset(a1, &location, 0, (uint64_t)v5);
  re::FunctionBase<24ul,void ()(void *)>::destroyCallable((uint64_t)v5);
  objc_destroyWeak(&location);
  id location = 0;
  re::FunctionBase<24ul,void ()(void *)>::destroyCallable((uint64_t)(a1 + 2));
  objc_destroyWeak(a1);
  *a1 = 0;
  return a1;
}

uint64_t re::FramePersistentPtr<re::ecs2::CustomDeformerComponent::CustomDeformerInputs,re::FrameManager>::reset(id *location, id *a2, void *a3, uint64_t a4)
{
  v18[5] = *MEMORY[0x263EF8340];
  if (location[1])
  {
    id WeakRetained = objc_loadWeakRetained(location);
    if (WeakRetained)
    {
      uint64_t v9 = WeakRetained;

      if (!location[6])
      {
        uint64_t v11 = re::globalAllocators(v10)[2];
        v18[0] = &unk_26E6E7538;
        v18[3] = v11;
        uint64_t v18[4] = v18;
        re::FunctionBase<24ul,void ()(void *)>::operator=<24ul>((uint64_t)(location + 2), (uint64_t)v18);
        uint64_t v10 = (re *)re::FunctionBase<24ul,void ()(void *)>::destroyCallable((uint64_t)v18);
      }
      long long v12 = re::globalAllocators(v10);
      unint64_t v13 = v9[2] & 0xFFFFFFFFFFFFFFFLL | ((unint64_t)v9[1] << 60);
      id v14 = location[1];
      uint64_t v15 = re::PerFrameAllocatorManager::perFrameAllocator(v12[6], v13);
      (*(void (**)(uint64_t, id, id *))(*(void *)v15 + 16))(v15, v14, location + 2);
    }
    else
    {
      id v16 = location[6];
      if (v16)
      {
        v18[0] = location[1];
        (*(void (**)(id, void *))(*(void *)v16 + 16))(v16, v18);
      }
      else
      {
        re::internal::destroyPersistent<re::ecs2::CustomDeformerComponent::CustomDeformerInputs>((re *)"reset", 161, location[1]);
      }
    }
  }
  re::ArcWeakPtr<re::VideoHistogram>::operator=(location, a2);
  location[1] = a3;
  return re::FunctionBase<24ul,void ()(void *)>::operator=<24ul>((uint64_t)(location + 2), a4);
}

re *re::internal::destroyPersistent<re::ecs2::CustomDeformerComponent::CustomDeformerInputs>(re *result, uint64_t a2, void *a3)
{
  if (a3)
  {
    uint64_t v4 = re::globalAllocators(result)[2];
    re::FixedArray<re::DynamicArray<re::RigHierarchyJointDescription>>::deinit(a3);
    uint64_t v5 = *(uint64_t (**)(uint64_t, void *))(*(void *)v4 + 40);
    return (re *)v5(v4, a3);
  }
  return result;
}

void re::internal::Callable<re::FramePersistentPtr<re::ecs2::CustomDeformerComponent::CustomDeformerInputs,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::CustomDeformerComponent::CustomDeformerInputs*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::~Callable()
{
}

re *re::internal::Callable<re::FramePersistentPtr<re::ecs2::CustomDeformerComponent::CustomDeformerInputs,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::CustomDeformerComponent::CustomDeformerInputs*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::operator()(uint64_t a1, void **a2)
{
  return re::internal::destroyPersistent<re::ecs2::CustomDeformerComponent::CustomDeformerInputs>((re *)"operator()", 149, *a2);
}

void *re::internal::Callable<re::FramePersistentPtr<re::ecs2::CustomDeformerComponent::CustomDeformerInputs,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::CustomDeformerComponent::CustomDeformerInputs*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::cloneInto(uint64_t a1, void *a2)
{
  __n128 result = a2;
  *a2 = &unk_26E6E7538;
  return result;
}

void *re::internal::Callable<re::FramePersistentPtr<re::ecs2::CustomDeformerComponent::CustomDeformerInputs,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::CustomDeformerComponent::CustomDeformerInputs*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::moveInto(uint64_t a1, void *a2)
{
  __n128 result = a2;
  *a2 = &unk_26E6E7538;
  return result;
}

uint64_t re::internal::Callable<re::FramePersistentPtr<re::ecs2::CustomDeformerComponent::CustomDeformerInputs,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::CustomDeformerComponent::CustomDeformerInputs*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::size()
{
  return 16;
}

uint64_t re::DynamicArray<re::ecs2::CustomDeformerComponent::CustomDeformerData>::deinit(uint64_t a1)
{
  uint64_t result = *(void *)a1;
  if (result)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    if (v3)
    {
      uint64_t v4 = *(void *)(a1 + 16);
      if (v4)
      {
        uint64_t v5 = 120 * v4;
        do
        {
          re::DynamicArray<re::MeshDeformationIndex>::deinit(v3 + 80);
          re::DynamicArray<re::ecs2::CustomDeformerComponent::CustomDeformerData::MappedDeformationData>::deinit(v3 + 40);
          re::DynamicArray<re::ecs2::CustomDeformerComponent::CustomDeformerData::MappedDeformationData>::deinit(v3);
          v3 += 120;
          v5 -= 120;
        }
        while (v5);
        uint64_t result = *(void *)a1;
        uint64_t v3 = *(void *)(a1 + 32);
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 40))(result, v3);
    }
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = 0;
    ++*(_DWORD *)(a1 + 24);
  }
  return result;
}

uint64_t re::DynamicArray<re::ecs2::CustomDeformerComponent::CustomDeformerData::MappedDeformationData>::deinit(uint64_t a1)
{
  uint64_t result = *(void *)a1;
  if (result)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    if (v3)
    {
      uint64_t v4 = *(void *)(a1 + 16);
      if (v4)
      {
        uint64_t v5 = 96 * v4;
        uint64_t v6 = (id *)(v3 + 40);
        do
        {
          re::FramePersistentPtr<std::unique_ptr<void,std::function<void ()(void *)>>,re::FrameManager>::~FramePersistentPtr(v6);
          re::StringID::destroyString((re::StringID *)(v6 - 2));
          re::StringID::destroyString((re::StringID *)(v6 - 4));
          v6 += 12;
          v5 -= 96;
        }
        while (v5);
        uint64_t result = *(void *)a1;
        uint64_t v3 = *(void *)(a1 + 32);
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 40))(result, v3);
    }
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = 0;
    ++*(_DWORD *)(a1 + 24);
  }
  return result;
}

id *re::FramePersistentPtr<std::unique_ptr<void,std::function<void ()(void *)>>,re::FrameManager>::~FramePersistentPtr(id *a1)
{
  void v5[5] = *MEMORY[0x263EF8340];
  inited = (re *)objc_initWeak(&location, 0);
  memset(v5, 0, 24);
  v5[3] = re::globalAllocators(inited)[2];
  void v5[4] = 0;
  re::FramePersistentPtr<std::unique_ptr<void,std::function<void ()(void *)>>,re::FrameManager>::reset(a1, &location, 0, (uint64_t)v5);
  re::FunctionBase<24ul,void ()(void *)>::destroyCallable((uint64_t)v5);
  objc_destroyWeak(&location);
  id location = 0;
  re::FunctionBase<24ul,void ()(void *)>::destroyCallable((uint64_t)(a1 + 2));
  objc_destroyWeak(a1);
  *a1 = 0;
  return a1;
}

uint64_t re::FramePersistentPtr<std::unique_ptr<void,std::function<void ()(void *)>>,re::FrameManager>::reset(id *location, id *a2, void *a3, uint64_t a4)
{
  v18[5] = *MEMORY[0x263EF8340];
  if (location[1])
  {
    id WeakRetained = objc_loadWeakRetained(location);
    if (WeakRetained)
    {
      uint64_t v9 = WeakRetained;

      if (!location[6])
      {
        uint64_t v11 = re::globalAllocators(v10)[2];
        v18[0] = &unk_26E6E7590;
        v18[3] = v11;
        uint64_t v18[4] = v18;
        re::FunctionBase<24ul,void ()(void *)>::operator=<24ul>((uint64_t)(location + 2), (uint64_t)v18);
        uint64_t v10 = (re *)re::FunctionBase<24ul,void ()(void *)>::destroyCallable((uint64_t)v18);
      }
      long long v12 = re::globalAllocators(v10);
      unint64_t v13 = v9[2] & 0xFFFFFFFFFFFFFFFLL | ((unint64_t)v9[1] << 60);
      id v14 = location[1];
      uint64_t v15 = re::PerFrameAllocatorManager::perFrameAllocator(v12[6], v13);
      (*(void (**)(uint64_t, id, id *))(*(void *)v15 + 16))(v15, v14, location + 2);
    }
    else
    {
      id v16 = location[6];
      if (v16)
      {
        v18[0] = location[1];
        (*(void (**)(id, void *))(*(void *)v16 + 16))(v16, v18);
      }
      else
      {
        re::internal::destroyPersistent<std::unique_ptr<void,std::function<void ()(void *)>>>((re *)"reset", 161, (uint64_t *)location[1]);
      }
    }
  }
  re::ArcWeakPtr<re::VideoHistogram>::operator=(location, a2);
  location[1] = a3;
  return re::FunctionBase<24ul,void ()(void *)>::operator=<24ul>((uint64_t)(location + 2), a4);
}

re *re::internal::destroyPersistent<std::unique_ptr<void,std::function<void ()(void *)>>>(re *result, uint64_t a2, uint64_t *a3)
{
  if (a3)
  {
    uint64_t v4 = re::globalAllocators(result)[2];
    std::unique_ptr<void,std::function<void ()(void *)>>::~unique_ptr[abi:nn180100](a3);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t *))(*(void *)v4 + 40);
    return (re *)v5(v4, a3);
  }
  return result;
}

void re::internal::Callable<re::FramePersistentPtr<std::unique_ptr<void,std::function<void ()(void *)>>,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,std::unique_ptr<void,std::function<void ()(void *)>>*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::~Callable()
{
}

re *re::internal::Callable<re::FramePersistentPtr<std::unique_ptr<void,std::function<void ()(void *)>>,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,std::unique_ptr<void,std::function<void ()(void *)>>*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::operator()(uint64_t a1, uint64_t **a2)
{
  return re::internal::destroyPersistent<std::unique_ptr<void,std::function<void ()(void *)>>>((re *)"operator()", 149, *a2);
}

void *re::internal::Callable<re::FramePersistentPtr<std::unique_ptr<void,std::function<void ()(void *)>>,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,std::unique_ptr<void,std::function<void ()(void *)>>*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::cloneInto(uint64_t a1, void *a2)
{
  uint64_t result = a2;
  *a2 = &unk_26E6E7590;
  return result;
}

void *re::internal::Callable<re::FramePersistentPtr<std::unique_ptr<void,std::function<void ()(void *)>>,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,std::unique_ptr<void,std::function<void ()(void *)>>*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::moveInto(uint64_t a1, void *a2)
{
  uint64_t result = a2;
  *a2 = &unk_26E6E7590;
  return result;
}

uint64_t re::internal::Callable<re::FramePersistentPtr<std::unique_ptr<void,std::function<void ()(void *)>>,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,std::unique_ptr<void,std::function<void ()(void *)>>*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::size()
{
  return 16;
}

void re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E75E8;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CustomDeformerComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>,re::Slice<re::ecs2::CustomDeformerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>*,re::Slice<re::ecs2::CustomDeformerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>,re::Slice<re::ecs2::CustomDeformerComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomDeformerComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CustomDeformerComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>,re::Slice<re::ecs2::CustomDeformerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>*,re::Slice<re::ecs2::CustomDeformerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>,re::Slice<re::ecs2::CustomDeformerComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomDeformerComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CustomDeformerComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>,re::Slice<re::ecs2::CustomDeformerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>*,re::Slice<re::ecs2::CustomDeformerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>,re::Slice<re::ecs2::CustomDeformerComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomDeformerComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CustomDeformerComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>,re::Slice<re::ecs2::CustomDeformerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>*,re::Slice<re::ecs2::CustomDeformerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>,re::Slice<re::ecs2::CustomDeformerComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomDeformerComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CustomDeformerComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>,re::Slice<re::ecs2::CustomDeformerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>*,re::Slice<re::ecs2::CustomDeformerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>,re::Slice<re::ecs2::CustomDeformerComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomDeformerComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CustomDeformerComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>,re::Slice<re::ecs2::CustomDeformerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>*,re::Slice<re::ecs2::CustomDeformerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>,re::Slice<re::ecs2::CustomDeformerComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomDeformerComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CustomDeformerComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>,re::Slice<re::ecs2::CustomDeformerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>*,re::Slice<re::ecs2::CustomDeformerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>,re::Slice<re::ecs2::CustomDeformerComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomDeformerComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CustomDeformerComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>,re::Slice<re::ecs2::CustomDeformerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>*,re::Slice<re::ecs2::CustomDeformerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>,re::Slice<re::ecs2::CustomDeformerComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomDeformerComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CustomDeformerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CustomDeformerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CustomDeformerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CustomDeformerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>,re::Slice<re::ecs2::CustomDeformerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>*,re::Slice<re::ecs2::CustomDeformerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDeformerComponent>,re::Slice<re::ecs2::CustomDeformerComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomDeformerComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::AmbientAudioComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AmbientAudioComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::AmbientAudioComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::AmbientAudioComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::AmbientAudioComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::AmbientAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::AmbientAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 32, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F70E0;
  *(_DWORD *)(v3 + 28) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AmbientAudioComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E7700;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AmbientAudioComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82770, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82770))
  {
    qword_26AF82768 = re::ecs2::introspect_AmbientAudioComponent(0);
    __cxa_guard_release(&qword_26AF82770);
  }
  return qword_26AF82768;
}

__n128 re::ecs2::ComponentType<re::ecs2::AmbientAudioComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AmbientAudioComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AmbientAudioComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E7690;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::AmbientAudioComponent::~AmbientAudioComponent(re::ecs2::AmbientAudioComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AmbientAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::AmbientAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AmbientAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::AmbientAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::AmbientAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E7700;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>::registerCallbacks(_DWORD *a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AmbientAudioComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>,re::Slice<re::ecs2::AmbientAudioComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>*,re::Slice<re::ecs2::AmbientAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>,re::Slice<re::ecs2::AmbientAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::AmbientAudioComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AmbientAudioComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>,re::Slice<re::ecs2::AmbientAudioComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>*,re::Slice<re::ecs2::AmbientAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>,re::Slice<re::ecs2::AmbientAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::AmbientAudioComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AmbientAudioComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>,re::Slice<re::ecs2::AmbientAudioComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>*,re::Slice<re::ecs2::AmbientAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>,re::Slice<re::ecs2::AmbientAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::AmbientAudioComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AmbientAudioComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>,re::Slice<re::ecs2::AmbientAudioComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>*,re::Slice<re::ecs2::AmbientAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>,re::Slice<re::ecs2::AmbientAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::AmbientAudioComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AmbientAudioComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>,re::Slice<re::ecs2::AmbientAudioComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>*,re::Slice<re::ecs2::AmbientAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>,re::Slice<re::ecs2::AmbientAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::AmbientAudioComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AmbientAudioComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>,re::Slice<re::ecs2::AmbientAudioComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>*,re::Slice<re::ecs2::AmbientAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>,re::Slice<re::ecs2::AmbientAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::AmbientAudioComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AmbientAudioComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>,re::Slice<re::ecs2::AmbientAudioComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>*,re::Slice<re::ecs2::AmbientAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>,re::Slice<re::ecs2::AmbientAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::AmbientAudioComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AmbientAudioComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>,re::Slice<re::ecs2::AmbientAudioComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>*,re::Slice<re::ecs2::AmbientAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>,re::Slice<re::ecs2::AmbientAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::AmbientAudioComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AmbientAudioComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AmbientAudioComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AmbientAudioComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AmbientAudioComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>,re::Slice<re::ecs2::AmbientAudioComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>*,re::Slice<re::ecs2::AmbientAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>,re::Slice<re::ecs2::AmbientAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::AmbientAudioComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::SpatialAudioComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SpatialAudioComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::SpatialAudioComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::SpatialAudioComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::SpatialAudioComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::SpatialAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::SpatialAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 64, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F7168;
  *(_DWORD *)(v3 + 28) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 36) = 0x13F800000;
  double result = 6.14672757e-10;
  *(_OWORD *)(v3 + 44) = xmmword_234386C90;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SpatialAudioComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E7818;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SpatialAudioComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82780, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82780))
  {
    qword_26AF82778 = re::ecs2::introspect_SpatialAudioComponent(0);
    __cxa_guard_release(&qword_26AF82780);
  }
  return qword_26AF82778;
}

__n128 re::ecs2::ComponentType<re::ecs2::SpatialAudioComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SpatialAudioComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SpatialAudioComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E77A8;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SpatialAudioComponent::~SpatialAudioComponent(re::ecs2::SpatialAudioComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SpatialAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::SpatialAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SpatialAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::SpatialAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::SpatialAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E7818;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>::registerCallbacks(_DWORD *a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SpatialAudioComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Slice<re::ecs2::SpatialAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialAudioComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SpatialAudioComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Slice<re::ecs2::SpatialAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialAudioComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SpatialAudioComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Slice<re::ecs2::SpatialAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialAudioComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SpatialAudioComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Slice<re::ecs2::SpatialAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialAudioComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SpatialAudioComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Slice<re::ecs2::SpatialAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialAudioComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SpatialAudioComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Slice<re::ecs2::SpatialAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialAudioComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SpatialAudioComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Slice<re::ecs2::SpatialAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialAudioComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SpatialAudioComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Slice<re::ecs2::SpatialAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialAudioComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SpatialAudioComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SpatialAudioComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SpatialAudioComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SpatialAudioComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Slice<re::ecs2::SpatialAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialAudioComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::AudioTransientComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioTransientComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::AudioTransientComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::AudioTransientComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::AudioTransientComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::AudioTransientComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::AudioTransientComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType+ 7), 136, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(void *)(v2 + 128) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E6118;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_OWORD *)(v3 + 60) = 0u;
  *(void *)&double result = 0x7FFFFFFFLL;
  *(void *)(v3 + 76) = 0x7FFFFFFFLL;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(_DWORD *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 124) = 0x7FFFFFFFLL;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioTransientComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E7930;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioTransientComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82790, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82790))
  {
    qword_26AF82788 = re::ecs2::introspect_AudioTransientComponent(0);
    __cxa_guard_release(&qword_26AF82790);
  }
  return qword_26AF82788;
}

__n128 re::ecs2::ComponentType<re::ecs2::AudioTransientComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioTransientComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioTransientComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E78C0;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E7930;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioTransientComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>,re::Slice<re::ecs2::AudioTransientComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>*,re::Slice<re::ecs2::AudioTransientComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>,re::Slice<re::ecs2::AudioTransientComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioTransientComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioTransientComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>,re::Slice<re::ecs2::AudioTransientComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>*,re::Slice<re::ecs2::AudioTransientComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>,re::Slice<re::ecs2::AudioTransientComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioTransientComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioTransientComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>,re::Slice<re::ecs2::AudioTransientComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>*,re::Slice<re::ecs2::AudioTransientComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>,re::Slice<re::ecs2::AudioTransientComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioTransientComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioTransientComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>,re::Slice<re::ecs2::AudioTransientComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>*,re::Slice<re::ecs2::AudioTransientComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>,re::Slice<re::ecs2::AudioTransientComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioTransientComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioTransientComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>,re::Slice<re::ecs2::AudioTransientComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>*,re::Slice<re::ecs2::AudioTransientComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>,re::Slice<re::ecs2::AudioTransientComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioTransientComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioTransientComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>,re::Slice<re::ecs2::AudioTransientComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>*,re::Slice<re::ecs2::AudioTransientComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>,re::Slice<re::ecs2::AudioTransientComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioTransientComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioTransientComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>,re::Slice<re::ecs2::AudioTransientComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>*,re::Slice<re::ecs2::AudioTransientComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>,re::Slice<re::ecs2::AudioTransientComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioTransientComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioTransientComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>,re::Slice<re::ecs2::AudioTransientComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>*,re::Slice<re::ecs2::AudioTransientComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>,re::Slice<re::ecs2::AudioTransientComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioTransientComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioTransientComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioTransientComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioTransientComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioTransientComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>,re::Slice<re::ecs2::AudioTransientComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>*,re::Slice<re::ecs2::AudioTransientComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>,re::Slice<re::ecs2::AudioTransientComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioTransientComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::AudioSessionComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioSessionComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::AudioSessionComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::AudioSessionComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

re::ecs2::AudioSessionComponent *re::ecs2::ComponentType<re::ecs2::AudioSessionComponent>::doMakeComponent@<X0>(re::ecs2::AudioSessionComponent **a1@<X8>)
{
  uint64_t v2 = (re::ecs2::AudioSessionComponent *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::AudioSessionComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                                + 7)
                                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::AudioSessionComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 256, 0);
  double result = re::ecs2::AudioSessionComponent::AudioSessionComponent(v2);
  *a1 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioSessionComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E7A48;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioSessionComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF827A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF827A0))
  {
    qword_26AF82798 = re::ecs2::introspect_AudioSessionComponent(0);
    __cxa_guard_release(&qword_26AF827A0);
  }
  return qword_26AF82798;
}

__n128 re::ecs2::ComponentType<re::ecs2::AudioSessionComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioSessionComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioSessionComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E79D8;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E7A48;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>::registerCallbacks(_DWORD *a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioSessionComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>,re::Slice<re::ecs2::AudioSessionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>*,re::Slice<re::ecs2::AudioSessionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>,re::Slice<re::ecs2::AudioSessionComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioSessionComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioSessionComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>,re::Slice<re::ecs2::AudioSessionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>*,re::Slice<re::ecs2::AudioSessionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>,re::Slice<re::ecs2::AudioSessionComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioSessionComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioSessionComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>,re::Slice<re::ecs2::AudioSessionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>*,re::Slice<re::ecs2::AudioSessionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>,re::Slice<re::ecs2::AudioSessionComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioSessionComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioSessionComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>,re::Slice<re::ecs2::AudioSessionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>*,re::Slice<re::ecs2::AudioSessionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>,re::Slice<re::ecs2::AudioSessionComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioSessionComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioSessionComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>,re::Slice<re::ecs2::AudioSessionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>*,re::Slice<re::ecs2::AudioSessionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>,re::Slice<re::ecs2::AudioSessionComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioSessionComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioSessionComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>,re::Slice<re::ecs2::AudioSessionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>*,re::Slice<re::ecs2::AudioSessionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>,re::Slice<re::ecs2::AudioSessionComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioSessionComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioSessionComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>,re::Slice<re::ecs2::AudioSessionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>*,re::Slice<re::ecs2::AudioSessionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>,re::Slice<re::ecs2::AudioSessionComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioSessionComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioSessionComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>,re::Slice<re::ecs2::AudioSessionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>*,re::Slice<re::ecs2::AudioSessionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>,re::Slice<re::ecs2::AudioSessionComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioSessionComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioSessionComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioSessionComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioSessionComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioSessionComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>,re::Slice<re::ecs2::AudioSessionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>*,re::Slice<re::ecs2::AudioSessionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>,re::Slice<re::ecs2::AudioSessionComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioSessionComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::AudioAnimationComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioAnimationComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::AudioAnimationComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::AudioAnimationComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::AudioAnimationComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (re::ecs2::AudioAnimationComponent *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::AudioAnimationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                                  + 7)
                                                                                               + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::AudioAnimationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 248, 0);
  re::ecs2::AudioAnimationComponent::AudioAnimationComponent(v2);
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioAnimationComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E7B60;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioAnimationComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF827B0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF827B0))
  {
    qword_26AF827A8 = re::ecs2::introspect_AudioAnimationComponent(0);
    __cxa_guard_release(&qword_26AF827B0);
  }
  return qword_26AF827A8;
}

__n128 re::ecs2::ComponentType<re::ecs2::AudioAnimationComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioAnimationComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioAnimationComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E7AF0;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E7B60;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>::registerCallbacks(_DWORD *a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioAnimationComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>,re::Slice<re::ecs2::AudioAnimationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>*,re::Slice<re::ecs2::AudioAnimationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>,re::Slice<re::ecs2::AudioAnimationComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioAnimationComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioAnimationComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>,re::Slice<re::ecs2::AudioAnimationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>*,re::Slice<re::ecs2::AudioAnimationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>,re::Slice<re::ecs2::AudioAnimationComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioAnimationComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioAnimationComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>,re::Slice<re::ecs2::AudioAnimationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>*,re::Slice<re::ecs2::AudioAnimationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>,re::Slice<re::ecs2::AudioAnimationComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioAnimationComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioAnimationComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>,re::Slice<re::ecs2::AudioAnimationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>*,re::Slice<re::ecs2::AudioAnimationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>,re::Slice<re::ecs2::AudioAnimationComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioAnimationComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioAnimationComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>,re::Slice<re::ecs2::AudioAnimationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>*,re::Slice<re::ecs2::AudioAnimationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>,re::Slice<re::ecs2::AudioAnimationComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioAnimationComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioAnimationComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>,re::Slice<re::ecs2::AudioAnimationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>*,re::Slice<re::ecs2::AudioAnimationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>,re::Slice<re::ecs2::AudioAnimationComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioAnimationComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioAnimationComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>,re::Slice<re::ecs2::AudioAnimationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>*,re::Slice<re::ecs2::AudioAnimationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>,re::Slice<re::ecs2::AudioAnimationComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioAnimationComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioAnimationComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>,re::Slice<re::ecs2::AudioAnimationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>*,re::Slice<re::ecs2::AudioAnimationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>,re::Slice<re::ecs2::AudioAnimationComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioAnimationComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioAnimationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioAnimationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioAnimationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioAnimationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>,re::Slice<re::ecs2::AudioAnimationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>*,re::Slice<re::ecs2::AudioAnimationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>,re::Slice<re::ecs2::AudioAnimationComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioAnimationComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::AudioMixerComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioMixerComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::AudioMixerComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::AudioMixerComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::AudioMixerComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::AudioMixerComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::AudioMixerComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 128, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6FD140;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_DWORD *)(v3 + 64) = 0;
  *(void *)&double result = 0x7FFFFFFFLL;
  *(void *)(v3 + 68) = 0x7FFFFFFFLL;
  *(_OWORD *)(v3 + 80) = 0u;
  *(_OWORD *)(v3 + 96) = 0u;
  *(_DWORD *)(v3 + 112) = 0;
  *(void *)(v3 + 116) = 0x7FFFFFFFLL;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioMixerComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E7C78;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioMixerComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF827C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF827C0))
  {
    qword_26AF827B8 = re::ecs2::introspect_AudioMixerComponent(0);
    __cxa_guard_release(&qword_26AF827C0);
  }
  return qword_26AF827B8;
}

__n128 re::ecs2::ComponentType<re::ecs2::AudioMixerComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioMixerComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioMixerComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E7C08;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E7C78;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>::registerCallbacks(_DWORD *a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioMixerComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>,re::Slice<re::ecs2::AudioMixerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>*,re::Slice<re::ecs2::AudioMixerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>,re::Slice<re::ecs2::AudioMixerComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioMixerComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioMixerComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>,re::Slice<re::ecs2::AudioMixerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>*,re::Slice<re::ecs2::AudioMixerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>,re::Slice<re::ecs2::AudioMixerComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioMixerComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioMixerComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>,re::Slice<re::ecs2::AudioMixerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>*,re::Slice<re::ecs2::AudioMixerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>,re::Slice<re::ecs2::AudioMixerComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioMixerComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioMixerComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>,re::Slice<re::ecs2::AudioMixerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>*,re::Slice<re::ecs2::AudioMixerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>,re::Slice<re::ecs2::AudioMixerComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioMixerComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioMixerComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>,re::Slice<re::ecs2::AudioMixerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>*,re::Slice<re::ecs2::AudioMixerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>,re::Slice<re::ecs2::AudioMixerComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioMixerComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioMixerComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>,re::Slice<re::ecs2::AudioMixerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>*,re::Slice<re::ecs2::AudioMixerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>,re::Slice<re::ecs2::AudioMixerComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioMixerComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioMixerComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>,re::Slice<re::ecs2::AudioMixerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>*,re::Slice<re::ecs2::AudioMixerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>,re::Slice<re::ecs2::AudioMixerComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioMixerComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioMixerComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>,re::Slice<re::ecs2::AudioMixerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>*,re::Slice<re::ecs2::AudioMixerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>,re::Slice<re::ecs2::AudioMixerComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioMixerComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioMixerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioMixerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioMixerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioMixerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>,re::Slice<re::ecs2::AudioMixerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>*,re::Slice<re::ecs2::AudioMixerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>,re::Slice<re::ecs2::AudioMixerComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioMixerComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ReverbComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ReverbComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ReverbComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::ReverbComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::ReverbComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::ReverbComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::ReverbComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 48, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6FFCC8;
  *(void *)(v3 + 32) = -1;
  *(unsigned char *)(v3 + 40) = 1;
  *(_WORD *)(v3 + 42) = 1;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ReverbComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E7D90;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ReverbComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF827D0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF827D0))
  {
    qword_26AF827C8 = re::ecs2::introspect_ReverbComponent(0);
    __cxa_guard_release(&qword_26AF827D0);
  }
  return qword_26AF827C8;
}

__n128 re::ecs2::ComponentType<re::ecs2::ReverbComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ReverbComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ReverbComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E7D20;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E7D90;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>::registerCallbacks(_DWORD *a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ReverbComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>,re::Slice<re::ecs2::ReverbComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>*,re::Slice<re::ecs2::ReverbComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>,re::Slice<re::ecs2::ReverbComponent*>>::Subscription const&,re::Slice<re::ecs2::ReverbComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ReverbComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>,re::Slice<re::ecs2::ReverbComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>*,re::Slice<re::ecs2::ReverbComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>,re::Slice<re::ecs2::ReverbComponent*>>::Subscription const&,re::Slice<re::ecs2::ReverbComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ReverbComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>,re::Slice<re::ecs2::ReverbComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>*,re::Slice<re::ecs2::ReverbComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>,re::Slice<re::ecs2::ReverbComponent*>>::Subscription const&,re::Slice<re::ecs2::ReverbComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ReverbComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>,re::Slice<re::ecs2::ReverbComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>*,re::Slice<re::ecs2::ReverbComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>,re::Slice<re::ecs2::ReverbComponent*>>::Subscription const&,re::Slice<re::ecs2::ReverbComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ReverbComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>,re::Slice<re::ecs2::ReverbComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>*,re::Slice<re::ecs2::ReverbComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>,re::Slice<re::ecs2::ReverbComponent*>>::Subscription const&,re::Slice<re::ecs2::ReverbComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ReverbComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>,re::Slice<re::ecs2::ReverbComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>*,re::Slice<re::ecs2::ReverbComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>,re::Slice<re::ecs2::ReverbComponent*>>::Subscription const&,re::Slice<re::ecs2::ReverbComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ReverbComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>,re::Slice<re::ecs2::ReverbComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>*,re::Slice<re::ecs2::ReverbComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>,re::Slice<re::ecs2::ReverbComponent*>>::Subscription const&,re::Slice<re::ecs2::ReverbComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ReverbComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>,re::Slice<re::ecs2::ReverbComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>*,re::Slice<re::ecs2::ReverbComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>,re::Slice<re::ecs2::ReverbComponent*>>::Subscription const&,re::Slice<re::ecs2::ReverbComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ReverbComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ReverbComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ReverbComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ReverbComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>,re::Slice<re::ecs2::ReverbComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>*,re::Slice<re::ecs2::ReverbComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>,re::Slice<re::ecs2::ReverbComponent*>>::Subscription const&,re::Slice<re::ecs2::ReverbComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::AudioMixGroupsComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioMixGroupsComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::AudioMixGroupsComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::AudioMixGroupsComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::AudioMixGroupsComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::AudioMixGroupsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::AudioMixGroupsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 128, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E7005A8;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_DWORD *)(v3 + 64) = 0;
  *(void *)&double result = 0x7FFFFFFFLL;
  *(void *)(v3 + 68) = 0x7FFFFFFFLL;
  *(_OWORD *)(v3 + 80) = 0u;
  *(_OWORD *)(v3 + 96) = 0u;
  *(_DWORD *)(v3 + 112) = 0;
  *(void *)(v3 + 116) = 0x7FFFFFFFLL;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioMixGroupsComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E7EA8;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioMixGroupsComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF827E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF827E0))
  {
    qword_26AF827D8 = re::ecs2::introspect_AudioMixGroupsComponent(0);
    __cxa_guard_release(&qword_26AF827E0);
  }
  return qword_26AF827D8;
}

__n128 re::ecs2::ComponentType<re::ecs2::AudioMixGroupsComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioMixGroupsComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioMixGroupsComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E7E38;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E7EA8;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioMixGroupsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>,re::Slice<re::ecs2::AudioMixGroupsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>*,re::Slice<re::ecs2::AudioMixGroupsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>,re::Slice<re::ecs2::AudioMixGroupsComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioMixGroupsComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioMixGroupsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>,re::Slice<re::ecs2::AudioMixGroupsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>*,re::Slice<re::ecs2::AudioMixGroupsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>,re::Slice<re::ecs2::AudioMixGroupsComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioMixGroupsComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioMixGroupsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>,re::Slice<re::ecs2::AudioMixGroupsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>*,re::Slice<re::ecs2::AudioMixGroupsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>,re::Slice<re::ecs2::AudioMixGroupsComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioMixGroupsComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioMixGroupsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>,re::Slice<re::ecs2::AudioMixGroupsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>*,re::Slice<re::ecs2::AudioMixGroupsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>,re::Slice<re::ecs2::AudioMixGroupsComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioMixGroupsComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioMixGroupsComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>,re::Slice<re::ecs2::AudioMixGroupsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>*,re::Slice<re::ecs2::AudioMixGroupsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>,re::Slice<re::ecs2::AudioMixGroupsComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioMixGroupsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioMixGroupsComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>,re::Slice<re::ecs2::AudioMixGroupsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>*,re::Slice<re::ecs2::AudioMixGroupsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>,re::Slice<re::ecs2::AudioMixGroupsComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioMixGroupsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioMixGroupsComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>,re::Slice<re::ecs2::AudioMixGroupsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>*,re::Slice<re::ecs2::AudioMixGroupsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>,re::Slice<re::ecs2::AudioMixGroupsComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioMixGroupsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioMixGroupsComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>,re::Slice<re::ecs2::AudioMixGroupsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>*,re::Slice<re::ecs2::AudioMixGroupsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>,re::Slice<re::ecs2::AudioMixGroupsComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioMixGroupsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioMixGroupsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioMixGroupsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioMixGroupsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioMixGroupsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>,re::Slice<re::ecs2::AudioMixGroupsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>*,re::Slice<re::ecs2::AudioMixGroupsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>,re::Slice<re::ecs2::AudioMixGroupsComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioMixGroupsComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::AudioDebugComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioDebugComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::AudioDebugComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::AudioDebugComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::AudioDebugComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::AudioDebugComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::AudioDebugComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType+ 7), 40, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(void *)(v2 + 32) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(_WORD *)(v3 + 24) = 256;
  *(void *)uint64_t v3 = &unk_26E6E7FC0;
  *(void *)&double result = 3;
  *(void *)(v3 + 28) = 3;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioDebugComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E8048;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioDebugComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF827F0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF827F0))
  {
    qword_26AF827E8 = re::ecs2::introspect_AudioDebugComponent(0);
    __cxa_guard_release(&qword_26AF827F0);
  }
  return qword_26AF827E8;
}

__n128 re::ecs2::ComponentType<re::ecs2::AudioDebugComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioDebugComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioDebugComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E7F50;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::AudioDebugComponent::~AudioDebugComponent(re::ecs2::AudioDebugComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AudioDebugComponent,(re::ecs2::ComponentTypeBase::Flags)1>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::AudioDebugComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AudioDebugComponent,(re::ecs2::ComponentTypeBase::Flags)1>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::AudioDebugComponent,(re::ecs2::ComponentTypeBase::Flags)1>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::AudioDebugComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E8048;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>::registerCallbacks(_DWORD *a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioDebugComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>,re::Slice<re::ecs2::AudioDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>*,re::Slice<re::ecs2::AudioDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>,re::Slice<re::ecs2::AudioDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioDebugComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioDebugComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>,re::Slice<re::ecs2::AudioDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>*,re::Slice<re::ecs2::AudioDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>,re::Slice<re::ecs2::AudioDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioDebugComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioDebugComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>,re::Slice<re::ecs2::AudioDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>*,re::Slice<re::ecs2::AudioDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>,re::Slice<re::ecs2::AudioDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioDebugComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioDebugComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>,re::Slice<re::ecs2::AudioDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>*,re::Slice<re::ecs2::AudioDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>,re::Slice<re::ecs2::AudioDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioDebugComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioDebugComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>,re::Slice<re::ecs2::AudioDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>*,re::Slice<re::ecs2::AudioDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>,re::Slice<re::ecs2::AudioDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioDebugComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioDebugComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>,re::Slice<re::ecs2::AudioDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>*,re::Slice<re::ecs2::AudioDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>,re::Slice<re::ecs2::AudioDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioDebugComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioDebugComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>,re::Slice<re::ecs2::AudioDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>*,re::Slice<re::ecs2::AudioDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>,re::Slice<re::ecs2::AudioDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioDebugComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioDebugComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>,re::Slice<re::ecs2::AudioDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>*,re::Slice<re::ecs2::AudioDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>,re::Slice<re::ecs2::AudioDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioDebugComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioDebugComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioDebugComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioDebugComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioDebugComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>,re::Slice<re::ecs2::AudioDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>*,re::Slice<re::ecs2::AudioDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>,re::Slice<re::ecs2::AudioDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioDebugComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::AudioLibraryComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioLibraryComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::AudioLibraryComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::AudioLibraryComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::AudioLibraryComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::AudioLibraryComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::AudioLibraryComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 80, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E8160;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_DWORD *)(v3 + 64) = 0;
  *(void *)&double result = 0x7FFFFFFFLL;
  *(void *)(v3 + 68) = 0x7FFFFFFFLL;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioLibraryComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E81E8;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioLibraryComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82800, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82800))
  {
    qword_26AF827F8 = re::ecs2::introspect_AudioLibraryComponent(0);
    __cxa_guard_release(&qword_26AF82800);
  }
  return qword_26AF827F8;
}

__n128 re::ecs2::ComponentType<re::ecs2::AudioLibraryComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioLibraryComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioLibraryComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E80F0;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::AudioLibraryComponent::~AudioLibraryComponent(re::ecs2::AudioLibraryComponent *this)
{
  *(void *)this = &unk_26E6E8160;
  re::HashTable<re::DynamicString,re::AssetHandle,re::Hash<re::DynamicString>,re::EqualTo<re::DynamicString>,true,false>::deinit((uint64_t *)this + 4);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6E8160;
  re::HashTable<re::DynamicString,re::AssetHandle,re::Hash<re::DynamicString>,re::EqualTo<re::DynamicString>,true,false>::deinit((uint64_t *)this + 4);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AudioLibraryComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::AudioLibraryComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AudioLibraryComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::AudioLibraryComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::AudioLibraryComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

double re::HashTable<re::DynamicString,re::AssetHandle,re::Hash<re::DynamicString>,re::EqualTo<re::DynamicString>,true,false>::deinit(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2)
  {
    if (*((_DWORD *)a1 + 8))
    {
      uint64_t v3 = 0;
      unint64_t v4 = 0;
      do
      {
        re::HashTable<re::DynamicString,re::AssetHandle,re::Hash<re::DynamicString>,re::EqualTo<re::DynamicString>,true,false>::EntryWithHash::free((_DWORD *)(a1[2] + v3));
        ++v4;
        v3 += 72;
      }
      while (v4 < *((unsigned int *)a1 + 8));
      uint64_t v2 = *a1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)v2 + 40))(v2, a1[1]);
    *((_DWORD *)a1 + 8) = 0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
    *(void *)&double result = 0x7FFFFFFFLL;
    *(uint64_t *)((char *)a1 + 36) = 0x7FFFFFFFLL;
  }
  return result;
}

void re::HashTable<re::DynamicString,re::AssetHandle,re::Hash<re::DynamicString>,re::EqualTo<re::DynamicString>,true,false>::EntryWithHash::free(_DWORD *a1)
{
  int v1 = a1[2];
  if (v1 < 0)
  {
    a1[2] = v1 & 0x7FFFFFFF;
    re::DynamicString::deinit((re::DynamicString *)(a1 + 4));
    re::AssetHandle::~AssetHandle((re::AssetHandle *)(a1 + 12));
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E81E8;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioLibraryComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>,re::Slice<re::ecs2::AudioLibraryComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>*,re::Slice<re::ecs2::AudioLibraryComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>,re::Slice<re::ecs2::AudioLibraryComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioLibraryComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioLibraryComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>,re::Slice<re::ecs2::AudioLibraryComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>*,re::Slice<re::ecs2::AudioLibraryComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>,re::Slice<re::ecs2::AudioLibraryComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioLibraryComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioLibraryComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>,re::Slice<re::ecs2::AudioLibraryComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>*,re::Slice<re::ecs2::AudioLibraryComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>,re::Slice<re::ecs2::AudioLibraryComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioLibraryComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioLibraryComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>,re::Slice<re::ecs2::AudioLibraryComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>*,re::Slice<re::ecs2::AudioLibraryComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>,re::Slice<re::ecs2::AudioLibraryComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioLibraryComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioLibraryComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>,re::Slice<re::ecs2::AudioLibraryComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>*,re::Slice<re::ecs2::AudioLibraryComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>,re::Slice<re::ecs2::AudioLibraryComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioLibraryComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioLibraryComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>,re::Slice<re::ecs2::AudioLibraryComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>*,re::Slice<re::ecs2::AudioLibraryComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>,re::Slice<re::ecs2::AudioLibraryComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioLibraryComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioLibraryComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>,re::Slice<re::ecs2::AudioLibraryComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>*,re::Slice<re::ecs2::AudioLibraryComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>,re::Slice<re::ecs2::AudioLibraryComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioLibraryComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioLibraryComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>,re::Slice<re::ecs2::AudioLibraryComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>*,re::Slice<re::ecs2::AudioLibraryComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>,re::Slice<re::ecs2::AudioLibraryComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioLibraryComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioLibraryComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioLibraryComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioLibraryComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioLibraryComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>,re::Slice<re::ecs2::AudioLibraryComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>*,re::Slice<re::ecs2::AudioLibraryComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>,re::Slice<re::ecs2::AudioLibraryComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioLibraryComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::AREnvironmentProbeComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AREnvironmentProbeComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::AREnvironmentProbeComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::AREnvironmentProbeComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::AREnvironmentProbeComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::AREnvironmentProbeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::AREnvironmentProbeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 96, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E8300;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = 0;
  *(void *)(v3 + 32) = 0;
  *(int32x4_t *)(v3 + 64) = vdupq_n_s32(0x7F800000u);
  *(unsigned char *)(v3 + 80) = 0;
  __asm { FMOV            V0.2S, #1.0 }
  *(double *)(v3 + 84) = result;
  *(_DWORD *)(v3 + 92) = 0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AREnvironmentProbeComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E8388;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AREnvironmentProbeComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82810, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82810))
  {
    qword_26AF82808 = re::ecs2::introspect_AREnvironmentProbeComponent(0);
    __cxa_guard_release(&qword_26AF82810);
  }
  return qword_26AF82808;
}

__n128 re::ecs2::ComponentType<re::ecs2::AREnvironmentProbeComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AREnvironmentProbeComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AREnvironmentProbeComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E8290;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::AREnvironmentProbeComponent::~AREnvironmentProbeComponent(re::ecs2::AREnvironmentProbeComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  re::AssetHandle::~AssetHandle((re::ecs2::AREnvironmentProbeComponent *)((char *)this + 32));
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AREnvironmentProbeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::AREnvironmentProbeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AREnvironmentProbeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::AREnvironmentProbeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::AREnvironmentProbeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E8388;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AREnvironmentProbeComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>,re::Slice<re::ecs2::AREnvironmentProbeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>*,re::Slice<re::ecs2::AREnvironmentProbeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>,re::Slice<re::ecs2::AREnvironmentProbeComponent*>>::Subscription const&,re::Slice<re::ecs2::AREnvironmentProbeComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AREnvironmentProbeComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>,re::Slice<re::ecs2::AREnvironmentProbeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>*,re::Slice<re::ecs2::AREnvironmentProbeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>,re::Slice<re::ecs2::AREnvironmentProbeComponent*>>::Subscription const&,re::Slice<re::ecs2::AREnvironmentProbeComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AREnvironmentProbeComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>,re::Slice<re::ecs2::AREnvironmentProbeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>*,re::Slice<re::ecs2::AREnvironmentProbeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>,re::Slice<re::ecs2::AREnvironmentProbeComponent*>>::Subscription const&,re::Slice<re::ecs2::AREnvironmentProbeComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AREnvironmentProbeComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>,re::Slice<re::ecs2::AREnvironmentProbeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>*,re::Slice<re::ecs2::AREnvironmentProbeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>,re::Slice<re::ecs2::AREnvironmentProbeComponent*>>::Subscription const&,re::Slice<re::ecs2::AREnvironmentProbeComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AREnvironmentProbeComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>,re::Slice<re::ecs2::AREnvironmentProbeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>*,re::Slice<re::ecs2::AREnvironmentProbeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>,re::Slice<re::ecs2::AREnvironmentProbeComponent*>>::Subscription const&,re::Slice<re::ecs2::AREnvironmentProbeComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AREnvironmentProbeComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>,re::Slice<re::ecs2::AREnvironmentProbeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>*,re::Slice<re::ecs2::AREnvironmentProbeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>,re::Slice<re::ecs2::AREnvironmentProbeComponent*>>::Subscription const&,re::Slice<re::ecs2::AREnvironmentProbeComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AREnvironmentProbeComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>,re::Slice<re::ecs2::AREnvironmentProbeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>*,re::Slice<re::ecs2::AREnvironmentProbeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>,re::Slice<re::ecs2::AREnvironmentProbeComponent*>>::Subscription const&,re::Slice<re::ecs2::AREnvironmentProbeComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AREnvironmentProbeComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>,re::Slice<re::ecs2::AREnvironmentProbeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>*,re::Slice<re::ecs2::AREnvironmentProbeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>,re::Slice<re::ecs2::AREnvironmentProbeComponent*>>::Subscription const&,re::Slice<re::ecs2::AREnvironmentProbeComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AREnvironmentProbeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AREnvironmentProbeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AREnvironmentProbeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AREnvironmentProbeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>,re::Slice<re::ecs2::AREnvironmentProbeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>*,re::Slice<re::ecs2::AREnvironmentProbeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>,re::Slice<re::ecs2::AREnvironmentProbeComponent*>>::Subscription const&,re::Slice<re::ecs2::AREnvironmentProbeComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ARSegmentationComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ARSegmentationComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ARSegmentationComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::ARSegmentationComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::ARSegmentationComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::ARSegmentationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::ARSegmentationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 64, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E84A0;
  double result = 0.0;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ARSegmentationComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E8528;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ARSegmentationComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82820, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82820))
  {
    qword_26AF82818 = re::ecs2::introspect_ARSegmentationComponent(0);
    __cxa_guard_release(&qword_26AF82820);
  }
  return qword_26AF82818;
}

__n128 re::ecs2::ComponentType<re::ecs2::ARSegmentationComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ARSegmentationComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ARSegmentationComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E8430;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::ARSegmentationComponent::~ARSegmentationComponent(re::ecs2::ARSegmentationComponent *this)
{
  uint64_t v2 = (void *)*((void *)this + 7);
  if (v2)
  {

    *((void *)this + 7) = 0;
  }
  uint64_t v3 = (void *)*((void *)this + 6);
  if (v3)
  {

    *((void *)this + 6) = 0;
  }
  long long v4 = (void *)*((void *)this + 5);
  if (v4)
  {

    *((void *)this + 5) = 0;
  }
  uint64_t v5 = (void *)*((void *)this + 4);
  if (v5)
  {

    *((void *)this + 4) = 0;
  }
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t vars8;

  uint64_t v2 = (void *)*((void *)this + 7);
  if (v2)
  {

    *((void *)this + 7) = 0;
  }
  uint64_t v3 = (void *)*((void *)this + 6);
  if (v3)
  {

    *((void *)this + 6) = 0;
  }
  long long v4 = (void *)*((void *)this + 5);
  if (v4)
  {

    *((void *)this + 5) = 0;
  }
  uint64_t v5 = (void *)*((void *)this + 4);
  if (v5)
  {

    *((void *)this + 4) = 0;
  }
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ARSegmentationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::ARSegmentationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ARSegmentationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::ARSegmentationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::ARSegmentationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E8528;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ARSegmentationComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>,re::Slice<re::ecs2::ARSegmentationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>*,re::Slice<re::ecs2::ARSegmentationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>,re::Slice<re::ecs2::ARSegmentationComponent*>>::Subscription const&,re::Slice<re::ecs2::ARSegmentationComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ARSegmentationComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>,re::Slice<re::ecs2::ARSegmentationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>*,re::Slice<re::ecs2::ARSegmentationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>,re::Slice<re::ecs2::ARSegmentationComponent*>>::Subscription const&,re::Slice<re::ecs2::ARSegmentationComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ARSegmentationComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>,re::Slice<re::ecs2::ARSegmentationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>*,re::Slice<re::ecs2::ARSegmentationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>,re::Slice<re::ecs2::ARSegmentationComponent*>>::Subscription const&,re::Slice<re::ecs2::ARSegmentationComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ARSegmentationComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>,re::Slice<re::ecs2::ARSegmentationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>*,re::Slice<re::ecs2::ARSegmentationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>,re::Slice<re::ecs2::ARSegmentationComponent*>>::Subscription const&,re::Slice<re::ecs2::ARSegmentationComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ARSegmentationComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>,re::Slice<re::ecs2::ARSegmentationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>*,re::Slice<re::ecs2::ARSegmentationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>,re::Slice<re::ecs2::ARSegmentationComponent*>>::Subscription const&,re::Slice<re::ecs2::ARSegmentationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ARSegmentationComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>,re::Slice<re::ecs2::ARSegmentationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>*,re::Slice<re::ecs2::ARSegmentationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>,re::Slice<re::ecs2::ARSegmentationComponent*>>::Subscription const&,re::Slice<re::ecs2::ARSegmentationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ARSegmentationComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>,re::Slice<re::ecs2::ARSegmentationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>*,re::Slice<re::ecs2::ARSegmentationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>,re::Slice<re::ecs2::ARSegmentationComponent*>>::Subscription const&,re::Slice<re::ecs2::ARSegmentationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ARSegmentationComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>,re::Slice<re::ecs2::ARSegmentationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>*,re::Slice<re::ecs2::ARSegmentationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>,re::Slice<re::ecs2::ARSegmentationComponent*>>::Subscription const&,re::Slice<re::ecs2::ARSegmentationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ARSegmentationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ARSegmentationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ARSegmentationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ARSegmentationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>,re::Slice<re::ecs2::ARSegmentationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>*,re::Slice<re::ecs2::ARSegmentationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>,re::Slice<re::ecs2::ARSegmentationComponent*>>::Subscription const&,re::Slice<re::ecs2::ARSegmentationComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::BallSocketJointComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::BallSocketJointComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::BallSocketJointComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::BallSocketJointComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

id re::ecs2::ComponentType<re::ecs2::BallSocketJointComponent>::doMakeComponent@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::BallSocketJointComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::BallSocketJointComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 176, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E2AB0;
  objc_initWeak((id *)(v2 + 32), 0);
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = 0;
  re::ecs2::EntityHandle::reset((re::ecs2::EntityHandle *)(v2 + 32));
  objc_initWeak((id *)(v2 + 56), 0);
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = 0;
  re::ecs2::EntityHandle::reset((re::ecs2::EntityHandle *)(v2 + 56));
  *(_OWORD *)(v2 + 80) = 0u;
  *(void *)(v2 + 96) = 0;
  *(void *)(v2 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0x3F80000000000000;
  *(_OWORD *)(v2 + 112) = 0u;
  *(void *)(v2 + 128) = 0;
  *(void *)(v2 + 136) = 0x3F80000000000000;
  *(unsigned char *)(v2 + 144) = 1;
  *(void *)(v2 + 152) = 0;
  id result = objc_initWeak((id *)(v2 + 160), 0);
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::BallSocketJointComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E8640;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::BallSocketJointComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82830, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82830))
  {
    qword_26AF82828 = re::ecs2::introspect_BallSocketJointComponent(0);
    __cxa_guard_release(&qword_26AF82830);
  }
  return qword_26AF82828;
}

__n128 re::ecs2::ComponentType<re::ecs2::BallSocketJointComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::BallSocketJointComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::BallSocketJointComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E85D0;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E8640;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::BallSocketJointComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>,re::Slice<re::ecs2::BallSocketJointComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>*,re::Slice<re::ecs2::BallSocketJointComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>,re::Slice<re::ecs2::BallSocketJointComponent*>>::Subscription const&,re::Slice<re::ecs2::BallSocketJointComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::BallSocketJointComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>,re::Slice<re::ecs2::BallSocketJointComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>*,re::Slice<re::ecs2::BallSocketJointComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>,re::Slice<re::ecs2::BallSocketJointComponent*>>::Subscription const&,re::Slice<re::ecs2::BallSocketJointComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::BallSocketJointComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>,re::Slice<re::ecs2::BallSocketJointComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>*,re::Slice<re::ecs2::BallSocketJointComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>,re::Slice<re::ecs2::BallSocketJointComponent*>>::Subscription const&,re::Slice<re::ecs2::BallSocketJointComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::BallSocketJointComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>,re::Slice<re::ecs2::BallSocketJointComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>*,re::Slice<re::ecs2::BallSocketJointComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>,re::Slice<re::ecs2::BallSocketJointComponent*>>::Subscription const&,re::Slice<re::ecs2::BallSocketJointComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::BallSocketJointComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>,re::Slice<re::ecs2::BallSocketJointComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>*,re::Slice<re::ecs2::BallSocketJointComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>,re::Slice<re::ecs2::BallSocketJointComponent*>>::Subscription const&,re::Slice<re::ecs2::BallSocketJointComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::BallSocketJointComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>,re::Slice<re::ecs2::BallSocketJointComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>*,re::Slice<re::ecs2::BallSocketJointComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>,re::Slice<re::ecs2::BallSocketJointComponent*>>::Subscription const&,re::Slice<re::ecs2::BallSocketJointComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::BallSocketJointComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>,re::Slice<re::ecs2::BallSocketJointComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>*,re::Slice<re::ecs2::BallSocketJointComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>,re::Slice<re::ecs2::BallSocketJointComponent*>>::Subscription const&,re::Slice<re::ecs2::BallSocketJointComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::BallSocketJointComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>,re::Slice<re::ecs2::BallSocketJointComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>*,re::Slice<re::ecs2::BallSocketJointComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>,re::Slice<re::ecs2::BallSocketJointComponent*>>::Subscription const&,re::Slice<re::ecs2::BallSocketJointComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::BallSocketJointComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::BallSocketJointComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::BallSocketJointComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::BallSocketJointComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>,re::Slice<re::ecs2::BallSocketJointComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>*,re::Slice<re::ecs2::BallSocketJointComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>,re::Slice<re::ecs2::BallSocketJointComponent*>>::Subscription const&,re::Slice<re::ecs2::BallSocketJointComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::BlendShapeWeightsBufferComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::BlendShapeWeightsBufferComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::BlendShapeWeightsBufferComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::BlendShapeWeightsBufferComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::BlendShapeWeightsBufferComponent>::doMakeComponent@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::BlendShapeWeightsBufferComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::BlendShapeWeightsBufferComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 176, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E2268;
  inited = (re *)objc_initWeak((id *)(v2 + 32), 0);
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 72) = re::globalAllocators(inited)[2];
  *(void *)(v2 + 168) = 0;
  double result = 0.0;
  *(_OWORD *)(v2 + 108) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_DWORD *)(v2 + 160) = 0;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::BlendShapeWeightsBufferComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E8758;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::BlendShapeWeightsBufferComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82840, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82840))
  {
    qword_26AF82838 = re::ecs2::introspect_BlendShapeWeightsBufferComponent(0);
    __cxa_guard_release(&qword_26AF82840);
  }
  return qword_26AF82838;
}

__n128 re::ecs2::ComponentType<re::ecs2::BlendShapeWeightsBufferComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::BlendShapeWeightsBufferComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::BlendShapeWeightsBufferComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E86E8;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E8758;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::BlendShapeWeightsBufferComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>*,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>>::Subscription const&,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::BlendShapeWeightsBufferComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>*,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>>::Subscription const&,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::BlendShapeWeightsBufferComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>*,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>>::Subscription const&,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::BlendShapeWeightsBufferComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>*,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>>::Subscription const&,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::BlendShapeWeightsBufferComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>*,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>>::Subscription const&,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::BlendShapeWeightsBufferComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>*,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>>::Subscription const&,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::BlendShapeWeightsBufferComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>*,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>>::Subscription const&,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::BlendShapeWeightsBufferComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>*,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>>::Subscription const&,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::BlendShapeWeightsBufferComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::BlendShapeWeightsBufferComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::BlendShapeWeightsBufferComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::BlendShapeWeightsBufferComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>*,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>>::Subscription const&,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

uint64_t re::ecs2::ComponentType<re::ecs2::BlendShapeWeightsComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::BlendShapeWeightsComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::BlendShapeWeightsComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::BlendShapeWeightsComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::BlendShapeWeightsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::BlendShapeWeightsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 368, 0);
  return re::make::shared::inplace<re::ecs2::BlendShapeWeightsComponent>(v2, a1);
}

uint64_t re::ecs2::ComponentType<re::ecs2::BlendShapeWeightsComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E8870;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::BlendShapeWeightsComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82850, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82850))
  {
    qword_26AF82848 = re::ecs2::introspect_BlendShapeWeightsComponent(0);
    __cxa_guard_release(&qword_26AF82850);
  }
  return qword_26AF82848;
}

__n128 re::ecs2::ComponentType<re::ecs2::BlendShapeWeightsComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::BlendShapeWeightsComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::BlendShapeWeightsComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E8800;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E8870;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::BlendShapeWeightsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>,re::Slice<re::ecs2::BlendShapeWeightsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>*,re::Slice<re::ecs2::BlendShapeWeightsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>,re::Slice<re::ecs2::BlendShapeWeightsComponent*>>::Subscription const&,re::Slice<re::ecs2::BlendShapeWeightsComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::BlendShapeWeightsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>,re::Slice<re::ecs2::BlendShapeWeightsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>*,re::Slice<re::ecs2::BlendShapeWeightsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>,re::Slice<re::ecs2::BlendShapeWeightsComponent*>>::Subscription const&,re::Slice<re::ecs2::BlendShapeWeightsComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::BlendShapeWeightsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>,re::Slice<re::ecs2::BlendShapeWeightsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>*,re::Slice<re::ecs2::BlendShapeWeightsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>,re::Slice<re::ecs2::BlendShapeWeightsComponent*>>::Subscription const&,re::Slice<re::ecs2::BlendShapeWeightsComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::BlendShapeWeightsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>,re::Slice<re::ecs2::BlendShapeWeightsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>*,re::Slice<re::ecs2::BlendShapeWeightsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>,re::Slice<re::ecs2::BlendShapeWeightsComponent*>>::Subscription const&,re::Slice<re::ecs2::BlendShapeWeightsComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::BlendShapeWeightsComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>,re::Slice<re::ecs2::BlendShapeWeightsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>*,re::Slice<re::ecs2::BlendShapeWeightsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>,re::Slice<re::ecs2::BlendShapeWeightsComponent*>>::Subscription const&,re::Slice<re::ecs2::BlendShapeWeightsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::BlendShapeWeightsComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>,re::Slice<re::ecs2::BlendShapeWeightsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>*,re::Slice<re::ecs2::BlendShapeWeightsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>,re::Slice<re::ecs2::BlendShapeWeightsComponent*>>::Subscription const&,re::Slice<re::ecs2::BlendShapeWeightsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::BlendShapeWeightsComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>,re::Slice<re::ecs2::BlendShapeWeightsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>*,re::Slice<re::ecs2::BlendShapeWeightsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>,re::Slice<re::ecs2::BlendShapeWeightsComponent*>>::Subscription const&,re::Slice<re::ecs2::BlendShapeWeightsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::BlendShapeWeightsComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>,re::Slice<re::ecs2::BlendShapeWeightsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>*,re::Slice<re::ecs2::BlendShapeWeightsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>,re::Slice<re::ecs2::BlendShapeWeightsComponent*>>::Subscription const&,re::Slice<re::ecs2::BlendShapeWeightsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::BlendShapeWeightsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::BlendShapeWeightsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::BlendShapeWeightsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::BlendShapeWeightsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>,re::Slice<re::ecs2::BlendShapeWeightsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>*,re::Slice<re::ecs2::BlendShapeWeightsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>,re::Slice<re::ecs2::BlendShapeWeightsComponent*>>::Subscription const&,re::Slice<re::ecs2::BlendShapeWeightsComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::BodyTrackingComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::BodyTrackingComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::BodyTrackingComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::BodyTrackingComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::BodyTrackingComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::BodyTrackingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::BodyTrackingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 56, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(void *)(v2 + 48) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E8988;
  *(void *)(v3 + 36) = 0;
  *(void *)(v3 + 28) = 0;
  *(void *)(v3 + 41) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::BodyTrackingComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E8A10;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::BodyTrackingComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82860, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82860))
  {
    qword_26AF82858 = re::ecs2::introspect_BodyTrackingComponent(0);
    __cxa_guard_release(&qword_26AF82860);
  }
  return qword_26AF82858;
}

__n128 re::ecs2::ComponentType<re::ecs2::BodyTrackingComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::BodyTrackingComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::BodyTrackingComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E8918;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::BodyTrackingComponent::~BodyTrackingComponent(re::ecs2::BodyTrackingComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::BodyTrackingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::BodyTrackingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::BodyTrackingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::BodyTrackingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::BodyTrackingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E8A10;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::BodyTrackingComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>,re::Slice<re::ecs2::BodyTrackingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>*,re::Slice<re::ecs2::BodyTrackingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>,re::Slice<re::ecs2::BodyTrackingComponent*>>::Subscription const&,re::Slice<re::ecs2::BodyTrackingComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::BodyTrackingComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>,re::Slice<re::ecs2::BodyTrackingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>*,re::Slice<re::ecs2::BodyTrackingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>,re::Slice<re::ecs2::BodyTrackingComponent*>>::Subscription const&,re::Slice<re::ecs2::BodyTrackingComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::BodyTrackingComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>,re::Slice<re::ecs2::BodyTrackingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>*,re::Slice<re::ecs2::BodyTrackingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>,re::Slice<re::ecs2::BodyTrackingComponent*>>::Subscription const&,re::Slice<re::ecs2::BodyTrackingComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::BodyTrackingComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>,re::Slice<re::ecs2::BodyTrackingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>*,re::Slice<re::ecs2::BodyTrackingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>,re::Slice<re::ecs2::BodyTrackingComponent*>>::Subscription const&,re::Slice<re::ecs2::BodyTrackingComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::BodyTrackingComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>,re::Slice<re::ecs2::BodyTrackingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>*,re::Slice<re::ecs2::BodyTrackingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>,re::Slice<re::ecs2::BodyTrackingComponent*>>::Subscription const&,re::Slice<re::ecs2::BodyTrackingComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::BodyTrackingComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>,re::Slice<re::ecs2::BodyTrackingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>*,re::Slice<re::ecs2::BodyTrackingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>,re::Slice<re::ecs2::BodyTrackingComponent*>>::Subscription const&,re::Slice<re::ecs2::BodyTrackingComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::BodyTrackingComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>,re::Slice<re::ecs2::BodyTrackingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>*,re::Slice<re::ecs2::BodyTrackingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>,re::Slice<re::ecs2::BodyTrackingComponent*>>::Subscription const&,re::Slice<re::ecs2::BodyTrackingComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::BodyTrackingComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>,re::Slice<re::ecs2::BodyTrackingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>*,re::Slice<re::ecs2::BodyTrackingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>,re::Slice<re::ecs2::BodyTrackingComponent*>>::Subscription const&,re::Slice<re::ecs2::BodyTrackingComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::BodyTrackingComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::BodyTrackingComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::BodyTrackingComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::BodyTrackingComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>,re::Slice<re::ecs2::BodyTrackingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>*,re::Slice<re::ecs2::BodyTrackingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>,re::Slice<re::ecs2::BodyTrackingComponent*>>::Subscription const&,re::Slice<re::ecs2::BodyTrackingComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::CameraViewDescriptorsComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::CameraViewDescriptorsComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::CameraViewDescriptorsComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::CameraViewDescriptorsComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::CameraViewDescriptorsComponent>::doMakeComponent@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::CameraViewDescriptorsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::CameraViewDescriptorsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 376, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 176) = 0u;
  *(_OWORD *)(v2 + 192) = 0u;
  *(_OWORD *)(v2 + 208) = 0u;
  *(_OWORD *)(v2 + 224) = 0u;
  *(_OWORD *)(v2 + 240) = 0u;
  *(_OWORD *)(v2 + 256) = 0u;
  *(_OWORD *)(v2 + 272) = 0u;
  *(_OWORD *)(v2 + 288) = 0u;
  *(_OWORD *)(v2 + 304) = 0u;
  *(_OWORD *)(v2 + 3objc_destroyWeak(this + 20) = 0u;
  *(_OWORD *)(v2 + 336) = 0u;
  *(_OWORD *)(v2 + 352) = 0u;
  *(void *)(v2 + 368) = 0;
  *(_OWORD *)(v2 + 32) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E8B28;
  *(_DWORD *)(v3 + 28) = 0;
  objc_initWeak((id *)(v2 + 32), 0);
  *(void *)(v2 + 48) = 0;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 40) = 0;
  *(_DWORD *)(v2 + 64) = 0;
  *(void *)(v2 + 312) = 0;
  double result = 0.0;
  *(_OWORD *)(v2 + 328) = 0u;
  *(_OWORD *)(v2 + 344) = 0u;
  *(_DWORD *)(v2 + 360) = 0;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 88) = 0u;
  *(_DWORD *)(v2 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_DWORD *)(v2 + 144) = 0;
  *(_OWORD *)(v2 + 152) = 0u;
  *(_OWORD *)(v2 + 168) = 0u;
  *(_DWORD *)(v2 + 184) = 0;
  *(_DWORD *)(v2 + 224) = 0;
  *(_OWORD *)(v2 + 192) = 0u;
  *(_OWORD *)(v2 + 208) = 0u;
  *(_DWORD *)(v2 + 264) = 0;
  *(_OWORD *)(v2 + 248) = 0u;
  *(_OWORD *)(v2 + 232) = 0u;
  *(_DWORD *)(v2 + 304) = 0;
  *(_OWORD *)(v2 + 272) = 0u;
  *(_OWORD *)(v2 + 288) = 0u;
  *(void *)(v2 + 364) = 0x7FFFFFFFLL;
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CameraViewDescriptorsComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E8BB0;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CameraViewDescriptorsComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82870, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82870))
  {
    qword_26AF82868 = re::ecs2::introspect_CameraViewDescriptorsComponent(0);
    __cxa_guard_release(&qword_26AF82870);
  }
  return qword_26AF82868;
}

__n128 re::ecs2::ComponentType<re::ecs2::CameraViewDescriptorsComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CameraViewDescriptorsComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::CameraViewDescriptorsComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E8AB8;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::CameraViewDescriptorsComponent::~CameraViewDescriptorsComponent(re::ecs2::CameraViewDescriptorsComponent *this)
{
  *(void *)this = &unk_26E6E8B28;
  re::HashTable<unsigned long,re::DynamicString,re::Hash<unsigned long>,re::EqualTo<unsigned long>,true,false>::deinit((uint64_t *)this + 41);
  re::DynamicArray<re::ecs2::CameraViewDescriptorsComponent::OneoffViewDescriptor>::deinit((uint64_t)this + 280);
  re::DynamicArray<re::ecs2::CameraViewDescriptor>::deinit((void *)this + 30);
  re::DynamicArray<re::ecs2::CameraViewDescriptor>::deinit((void *)this + 25);
  re::DynamicArray<re::ecs2::CameraViewDescriptor>::deinit((void *)this + 20);
  re::DynamicArray<re::ecs2::CameraViewDescriptor>::deinit((void *)this + 15);
  re::DynamicArray<re::CameraMultiView>::deinit((uint64_t)this + 80);
  re::DynamicArray<re::CameraView>::deinit((uint64_t)this + 40);
  objc_destroyWeak((id *)this + 4);
  *((void *)this + 4) = 0;
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6E8B28;
  re::HashTable<unsigned long,re::DynamicString,re::Hash<unsigned long>,re::EqualTo<unsigned long>,true,false>::deinit((uint64_t *)this + 41);
  re::DynamicArray<re::ecs2::CameraViewDescriptorsComponent::OneoffViewDescriptor>::deinit((uint64_t)this + 280);
  re::DynamicArray<re::ecs2::CameraViewDescriptor>::deinit((void *)this + 30);
  re::DynamicArray<re::ecs2::CameraViewDescriptor>::deinit((void *)this + 25);
  re::DynamicArray<re::ecs2::CameraViewDescriptor>::deinit((void *)this + 20);
  re::DynamicArray<re::ecs2::CameraViewDescriptor>::deinit((void *)this + 15);
  re::DynamicArray<re::CameraMultiView>::deinit((uint64_t)this + 80);
  re::DynamicArray<re::CameraView>::deinit((uint64_t)this + 40);
  objc_destroyWeak((id *)this + 4);
  *((void *)this + 4) = 0;
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::CameraViewDescriptorsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::CameraViewDescriptorsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::CameraViewDescriptorsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::CameraViewDescriptorsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::CameraViewDescriptorsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

double re::HashTable<unsigned long,re::DynamicString,re::Hash<unsigned long>,re::EqualTo<unsigned long>,true,false>::deinit(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2)
  {
    unint64_t v3 = *((unsigned int *)a1 + 8);
    if (v3)
    {
      uint64_t v4 = 0;
      for (unint64_t i = 0; i < v3; ++i)
      {
        uint64_t v6 = a1[2] + v4;
        int v7 = *(_DWORD *)(v6 + 8);
        if (v7 < 0)
        {
          *(_DWORD *)(v6 + 8) = v7 & 0x7FFFFFFF;
          re::DynamicString::deinit((re::DynamicString *)(v6 + 24));
          unint64_t v3 = *((unsigned int *)a1 + 8);
        }
        v4 += 56;
      }
      uint64_t v2 = *a1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)v2 + 40))(v2, a1[1]);
    *((_DWORD *)a1 + 8) = 0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
    *(void *)&double result = 0x7FFFFFFFLL;
    *(uint64_t *)((char *)a1 + 36) = 0x7FFFFFFFLL;
  }
  return result;
}

uint64_t re::DynamicArray<re::ecs2::CameraViewDescriptorsComponent::OneoffViewDescriptor>::deinit(uint64_t a1)
{
  uint64_t result = *(void *)a1;
  if (result)
  {
    unint64_t v3 = *(re::ecs2::CameraViewDescriptorsComponent::OneoffViewDescriptor **)(a1 + 32);
    if (v3)
    {
      uint64_t v4 = *(void *)(a1 + 16);
      if (v4)
      {
        uint64_t v5 = 384 * v4;
        do
        {
          re::ecs2::CameraViewDescriptorsComponent::OneoffViewDescriptor::~OneoffViewDescriptor(v3);
          unint64_t v3 = (re::ecs2::CameraViewDescriptorsComponent::OneoffViewDescriptor *)((char *)v3 + 384);
          v5 -= 384;
        }
        while (v5);
        uint64_t result = *(void *)a1;
        unint64_t v3 = *(re::ecs2::CameraViewDescriptorsComponent::OneoffViewDescriptor **)(a1 + 32);
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, re::ecs2::CameraViewDescriptorsComponent::OneoffViewDescriptor *))(*(void *)result + 40))(result, v3);
    }
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = 0;
    ++*(_DWORD *)(a1 + 24);
  }
  return result;
}

void re::ecs2::CameraViewDescriptorsComponent::OneoffViewDescriptor::~OneoffViewDescriptor(re::ecs2::CameraViewDescriptorsComponent::OneoffViewDescriptor *this)
{
  re::FunctionBase<24ul,void ()(re::FrameCount)>::destroyCallable((uint64_t)this + 336);
  re::DynamicArray<re::ecs2::SpecifyLaneCommand>::deinit((uint64_t)this + 288);
  for (uint64_t i = 272; i != 256; i -= 8)
  {
    unint64_t v3 = *(void **)((char *)this + i);
    if (v3)
    {

      *(void *)((char *)this + i) = 0;
    }
  }
  do
  {
    uint64_t v4 = *(void **)((char *)this + i);
    if (v4)
    {

      *(void *)((char *)this + i) = 0;
    }
    i -= 8;
  }
  while (i != 240);
  do
  {
    uint64_t v5 = *(void **)((char *)this + i);
    if (v5)
    {

      *(void *)((char *)this + i) = 0;
    }
    i -= 8;
  }
  while (i != 224);
  for (uint64_t j = 152; j != 72; j -= 40)
    re::DynamicArray<re::ecs2::ScopeLanePair>::deinit((uint64_t)this + j);
  re::DynamicArray<re::ecs2::ScopeLanePair>::deinit((uint64_t)this + 72);
  re::AssetHandle::~AssetHandle(this);
}

uint64_t re::DynamicArray<re::ecs2::SpecifyLaneCommand>::deinit(uint64_t a1)
{
  uint64_t result = *(void *)a1;
  if (result)
  {
    unint64_t v3 = *(re::DynamicString **)(a1 + 32);
    if (v3)
    {
      uint64_t v4 = *(void *)(a1 + 16);
      if (v4)
      {
        uint64_t v5 = (re::DynamicString *)((char *)v3 + 136 * v4);
        do
        {
          for (uint64_t i = 112; i != 96; i -= 8)
          {
            int v7 = *(void **)((char *)v3 + i);
            if (v7)
            {

              *(void *)((char *)v3 + i) = 0;
            }
          }
          do
          {
            uint64_t v8 = *(void **)((char *)v3 + i);
            if (v8)
            {

              *(void *)((char *)v3 + i) = 0;
            }
            i -= 8;
          }
          while (i != 80);
          for (uint64_t j = 56; j != 8; j -= 24)
            re::AssetHandle::~AssetHandle((re::DynamicString *)((char *)v3 + j));
          re::DynamicString::deinit(v3);
          unint64_t v3 = (re::DynamicString *)((char *)v3 + 136);
        }
        while (v3 != v5);
        uint64_t result = *(void *)a1;
        unint64_t v3 = *(re::DynamicString **)(a1 + 32);
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, re::DynamicString *))(*(void *)result + 40))(result, v3);
    }
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = 0;
    ++*(_DWORD *)(a1 + 24);
  }
  return result;
}

uint64_t re::DynamicArray<re::ecs2::ScopeLanePair>::deinit(uint64_t a1)
{
  uint64_t result = *(void *)a1;
  if (result)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    if (v3)
    {
      uint64_t v4 = *(void *)(a1 + 16);
      if (v4)
      {
        uint64_t v5 = v4 << 6;
        do
        {
          re::DynamicString::deinit((re::DynamicString *)(v3 + 32));
          re::DynamicString::deinit((re::DynamicString *)v3);
          v3 += 64;
          v5 -= 64;
        }
        while (v5);
        uint64_t result = *(void *)a1;
        uint64_t v3 = *(void *)(a1 + 32);
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 40))(result, v3);
    }
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = 0;
    ++*(_DWORD *)(a1 + 24);
  }
  return result;
}

void *re::DynamicArray<re::ecs2::CameraViewDescriptor>::deinit(void *result)
{
  if (*result)
  {
    int v1 = result;
    uint64_t result = (void *)result[4];
    if (result)
    {
      re::ObjectHelper::destroy<re::ecs2::CameraViewDescriptor>((re::AssetHandle *)result, (re::AssetHandle *)&result[42 * v1[2]]);
      uint64_t result = (void *)(*(uint64_t (**)(void, void))(*(void *)*v1 + 40))(*v1, v1[4]);
    }
    v1[4] = 0;
    v1[1] = 0;
    v1[2] = 0;
    *int v1 = 0;
    ++*((_DWORD *)v1 + 6);
  }
  return result;
}

void re::ObjectHelper::destroy<re::ecs2::CameraViewDescriptor>(re::AssetHandle *a1, re::AssetHandle *a2)
{
  if (a1 != a2)
  {
    uint64_t v3 = a1;
    do
    {
      re::DynamicArray<re::ecs2::SpecifyLaneCommand>::deinit((uint64_t)v3 + 288);
      for (uint64_t i = 272; i != 256; i -= 8)
      {
        uint64_t v5 = *(void **)((char *)v3 + i);
        if (v5)
        {

          *(void *)((char *)v3 + i) = 0;
        }
      }
      do
      {
        uint64_t v6 = *(void **)((char *)v3 + i);
        if (v6)
        {

          *(void *)((char *)v3 + i) = 0;
        }
        i -= 8;
      }
      while (i != 240);
      do
      {
        int v7 = *(void **)((char *)v3 + i);
        if (v7)
        {

          *(void *)((char *)v3 + i) = 0;
        }
        i -= 8;
      }
      while (i != 224);
      for (uint64_t j = 152; j != 72; j -= 40)
        re::DynamicArray<re::ecs2::ScopeLanePair>::deinit((uint64_t)v3 + j);
      re::DynamicArray<re::ecs2::ScopeLanePair>::deinit((uint64_t)v3 + 72);
      re::AssetHandle::~AssetHandle(v3);
      uint64_t v3 = (re::AssetHandle *)((char *)v3 + 336);
    }
    while (v3 != a2);
  }
}

uint64_t re::DynamicArray<re::CameraMultiView>::deinit(uint64_t a1)
{
  uint64_t result = *(void *)a1;
  if (result)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    if (v3)
    {
      uint64_t v4 = *(void *)(a1 + 16);
      if (v4)
      {
        uint64_t v5 = v3 + 1360 * v4;
        do
        {
          uint64_t v6 = 1344;
          do
          {
            re::DynamicArray<re::ecs2::ScopeLanePair>::deinit(v3 + v6 - 400);
            re::DynamicArray<re::RenderGraphFileProvider>::deinit(v3 + v6 - 448);
            re::DynamicString::deinit((re::DynamicString *)(v3 + v6 - 672));
            v6 -= 672;
          }
          while (v6);
          v3 += 1360;
        }
        while (v3 != v5);
        uint64_t result = *(void *)a1;
        uint64_t v3 = *(void *)(a1 + 32);
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 40))(result, v3);
    }
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = 0;
    ++*(_DWORD *)(a1 + 24);
  }
  return result;
}

uint64_t re::DynamicArray<re::RenderGraphFileProvider>::deinit(uint64_t a1)
{
  uint64_t result = *(void *)a1;
  if (result)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    if (v3)
    {
      uint64_t v4 = *(void *)(a1 + 16);
      if (v4)
      {
        uint64_t v5 = 48 * v4;
        uint64_t v6 = (re::DynamicString *)(v3 + 8);
        do
        {
          re::DynamicString::deinit(v6);
          uint64_t v6 = (re::DynamicString *)((char *)v6 + 48);
          v5 -= 48;
        }
        while (v5);
        uint64_t result = *(void *)a1;
        uint64_t v3 = *(void *)(a1 + 32);
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 40))(result, v3);
    }
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = 0;
    ++*(_DWORD *)(a1 + 24);
  }
  return result;
}

uint64_t re::DynamicArray<re::CameraView>::deinit(uint64_t a1)
{
  uint64_t result = *(void *)a1;
  if (result)
  {
    uint64_t v3 = *(re::DynamicString **)(a1 + 32);
    if (v3)
    {
      uint64_t v4 = *(void *)(a1 + 16);
      if (v4)
      {
        uint64_t v5 = 672 * v4;
        do
        {
          re::DynamicArray<re::ecs2::ScopeLanePair>::deinit((uint64_t)v3 + 272);
          re::DynamicArray<re::RenderGraphFileProvider>::deinit((uint64_t)v3 + 224);
          re::DynamicString::deinit(v3);
          uint64_t v3 = (re::DynamicString *)((char *)v3 + 672);
          v5 -= 672;
        }
        while (v5);
        uint64_t result = *(void *)a1;
        uint64_t v3 = *(re::DynamicString **)(a1 + 32);
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, re::DynamicString *))(*(void *)result + 40))(result, v3);
    }
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = 0;
    ++*(_DWORD *)(a1 + 24);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E8BB0;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CameraViewDescriptorsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>*,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>>::Subscription const&,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CameraViewDescriptorsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>*,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>>::Subscription const&,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CameraViewDescriptorsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>*,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>>::Subscription const&,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CameraViewDescriptorsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>*,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>>::Subscription const&,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CameraViewDescriptorsComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>*,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>>::Subscription const&,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CameraViewDescriptorsComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>*,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>>::Subscription const&,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CameraViewDescriptorsComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>*,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>>::Subscription const&,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CameraViewDescriptorsComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>*,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>>::Subscription const&,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CameraViewDescriptorsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CameraViewDescriptorsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CameraViewDescriptorsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CameraViewDescriptorsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>*,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>>::Subscription const&,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::CameraMovementComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::CameraMovementComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::CameraMovementComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::CameraMovementComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::CameraMovementComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::CameraMovementComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::CameraMovementComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 208, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  *((_OWORD *)v2 + 8) = 0u;
  *((_OWORD *)v2 + 9) = 0u;
  *((_OWORD *)v2 + 10) = 0u;
  *((_OWORD *)v2 + 11) = 0u;
  *((_OWORD *)v2 + 12) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(_WORD *)(v3 + 24) = 256;
  *(void *)uint64_t v3 = &unk_26E6E8CC8;
  *(void *)(v3 + 28) = 0x3F80000000000000;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_OWORD *)(v3 + 64) = xmmword_234386CA0;
  *(void *)(v3 + 80) = 1065353216;
  double result = 0.0;
  *(void *)(v3 + 96) = 0;
  *(_OWORD *)(v3 + 112) = 0u;
  *(void *)(v3 + 128) = 0xBF00000041200000;
  *(_DWORD *)(v3 + 136) = -1071644672;
  *(void *)(v3 + 144) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(void *)(v3 + 176) = 0xBF00000041200000;
  *(_DWORD *)(v3 + 184) = -1071644672;
  *(void *)(v3 + 192) = 0;
  *(unsigned char *)(v3 + 200) = 0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CameraMovementComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E8D50;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CameraMovementComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82880, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82880))
  {
    qword_26AF82878 = re::ecs2::introspect_CameraMovementComponent(0);
    __cxa_guard_release(&qword_26AF82880);
  }
  return qword_26AF82878;
}

__n128 re::ecs2::ComponentType<re::ecs2::CameraMovementComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CameraMovementComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::CameraMovementComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E8C58;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::CameraMovementComponent::~CameraMovementComponent(re::ecs2::CameraMovementComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::CameraMovementComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::CameraMovementComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::CameraMovementComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::CameraMovementComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::CameraMovementComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E8D50;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CameraMovementComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>,re::Slice<re::ecs2::CameraMovementComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>*,re::Slice<re::ecs2::CameraMovementComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>,re::Slice<re::ecs2::CameraMovementComponent*>>::Subscription const&,re::Slice<re::ecs2::CameraMovementComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CameraMovementComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>,re::Slice<re::ecs2::CameraMovementComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>*,re::Slice<re::ecs2::CameraMovementComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>,re::Slice<re::ecs2::CameraMovementComponent*>>::Subscription const&,re::Slice<re::ecs2::CameraMovementComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CameraMovementComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>,re::Slice<re::ecs2::CameraMovementComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>*,re::Slice<re::ecs2::CameraMovementComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>,re::Slice<re::ecs2::CameraMovementComponent*>>::Subscription const&,re::Slice<re::ecs2::CameraMovementComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CameraMovementComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>,re::Slice<re::ecs2::CameraMovementComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>*,re::Slice<re::ecs2::CameraMovementComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>,re::Slice<re::ecs2::CameraMovementComponent*>>::Subscription const&,re::Slice<re::ecs2::CameraMovementComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CameraMovementComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>,re::Slice<re::ecs2::CameraMovementComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>*,re::Slice<re::ecs2::CameraMovementComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>,re::Slice<re::ecs2::CameraMovementComponent*>>::Subscription const&,re::Slice<re::ecs2::CameraMovementComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CameraMovementComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>,re::Slice<re::ecs2::CameraMovementComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>*,re::Slice<re::ecs2::CameraMovementComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>,re::Slice<re::ecs2::CameraMovementComponent*>>::Subscription const&,re::Slice<re::ecs2::CameraMovementComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CameraMovementComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>,re::Slice<re::ecs2::CameraMovementComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>*,re::Slice<re::ecs2::CameraMovementComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>,re::Slice<re::ecs2::CameraMovementComponent*>>::Subscription const&,re::Slice<re::ecs2::CameraMovementComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CameraMovementComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>,re::Slice<re::ecs2::CameraMovementComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>*,re::Slice<re::ecs2::CameraMovementComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>,re::Slice<re::ecs2::CameraMovementComponent*>>::Subscription const&,re::Slice<re::ecs2::CameraMovementComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CameraMovementComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CameraMovementComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CameraMovementComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CameraMovementComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>,re::Slice<re::ecs2::CameraMovementComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>*,re::Slice<re::ecs2::CameraMovementComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>,re::Slice<re::ecs2::CameraMovementComponent*>>::Subscription const&,re::Slice<re::ecs2::CameraMovementComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::CharacterControllerComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::CharacterControllerComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::CharacterControllerComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::CharacterControllerComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::CharacterControllerComponent>::doMakeComponent@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::CharacterControllerComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::CharacterControllerComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 96, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E41E0;
  objc_initWeak((id *)(v2 + 32), 0);
  *(void *)(v2 + 40) = 0x3F490FD83C23D70ALL;
  *(_DWORD *)(v2 + 48) = 1045220557;
  double result = NAN;
  *(void *)(v2 + 52) = 0xFFFFFFFF00000001;
  *(_DWORD *)(v2 + 60) = 0;
  *(_DWORD *)(v2 + 64) = 0;
  *(void *)(v2 + 68) = 0x100000000;
  *(void *)(v2 + 80) = 0;
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CharacterControllerComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E8E68;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CharacterControllerComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82890, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82890))
  {
    qword_26AF82888 = re::ecs2::introspect_CharacterControllerComponent(0);
    __cxa_guard_release(&qword_26AF82890);
  }
  return qword_26AF82888;
}

__n128 re::ecs2::ComponentType<re::ecs2::CharacterControllerComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CharacterControllerComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::CharacterControllerComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E8DF8;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E8E68;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CharacterControllerComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>,re::Slice<re::ecs2::CharacterControllerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>*,re::Slice<re::ecs2::CharacterControllerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>,re::Slice<re::ecs2::CharacterControllerComponent*>>::Subscription const&,re::Slice<re::ecs2::CharacterControllerComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CharacterControllerComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>,re::Slice<re::ecs2::CharacterControllerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>*,re::Slice<re::ecs2::CharacterControllerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>,re::Slice<re::ecs2::CharacterControllerComponent*>>::Subscription const&,re::Slice<re::ecs2::CharacterControllerComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CharacterControllerComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>,re::Slice<re::ecs2::CharacterControllerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>*,re::Slice<re::ecs2::CharacterControllerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>,re::Slice<re::ecs2::CharacterControllerComponent*>>::Subscription const&,re::Slice<re::ecs2::CharacterControllerComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CharacterControllerComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>,re::Slice<re::ecs2::CharacterControllerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>*,re::Slice<re::ecs2::CharacterControllerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>,re::Slice<re::ecs2::CharacterControllerComponent*>>::Subscription const&,re::Slice<re::ecs2::CharacterControllerComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CharacterControllerComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>,re::Slice<re::ecs2::CharacterControllerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>*,re::Slice<re::ecs2::CharacterControllerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>,re::Slice<re::ecs2::CharacterControllerComponent*>>::Subscription const&,re::Slice<re::ecs2::CharacterControllerComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CharacterControllerComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>,re::Slice<re::ecs2::CharacterControllerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>*,re::Slice<re::ecs2::CharacterControllerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>,re::Slice<re::ecs2::CharacterControllerComponent*>>::Subscription const&,re::Slice<re::ecs2::CharacterControllerComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CharacterControllerComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>,re::Slice<re::ecs2::CharacterControllerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>*,re::Slice<re::ecs2::CharacterControllerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>,re::Slice<re::ecs2::CharacterControllerComponent*>>::Subscription const&,re::Slice<re::ecs2::CharacterControllerComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CharacterControllerComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>,re::Slice<re::ecs2::CharacterControllerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>*,re::Slice<re::ecs2::CharacterControllerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>,re::Slice<re::ecs2::CharacterControllerComponent*>>::Subscription const&,re::Slice<re::ecs2::CharacterControllerComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CharacterControllerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CharacterControllerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CharacterControllerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CharacterControllerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>,re::Slice<re::ecs2::CharacterControllerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>*,re::Slice<re::ecs2::CharacterControllerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>,re::Slice<re::ecs2::CharacterControllerComponent*>>::Subscription const&,re::Slice<re::ecs2::CharacterControllerComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::CharacterControllerStateComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::CharacterControllerStateComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::CharacterControllerStateComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::CharacterControllerStateComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::CharacterControllerStateComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::CharacterControllerStateComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::CharacterControllerStateComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 32, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E4268;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CharacterControllerStateComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E8F80;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CharacterControllerStateComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF828A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF828A0))
  {
    qword_26AF82898 = re::ecs2::introspect_CharacterControllerStateComponent(0);
    __cxa_guard_release(&qword_26AF828A0);
  }
  return qword_26AF82898;
}

__n128 re::ecs2::ComponentType<re::ecs2::CharacterControllerStateComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CharacterControllerStateComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::CharacterControllerStateComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E8F10;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E8F80;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CharacterControllerStateComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>,re::Slice<re::ecs2::CharacterControllerStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>*,re::Slice<re::ecs2::CharacterControllerStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>,re::Slice<re::ecs2::CharacterControllerStateComponent*>>::Subscription const&,re::Slice<re::ecs2::CharacterControllerStateComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CharacterControllerStateComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>,re::Slice<re::ecs2::CharacterControllerStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>*,re::Slice<re::ecs2::CharacterControllerStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>,re::Slice<re::ecs2::CharacterControllerStateComponent*>>::Subscription const&,re::Slice<re::ecs2::CharacterControllerStateComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CharacterControllerStateComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>,re::Slice<re::ecs2::CharacterControllerStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>*,re::Slice<re::ecs2::CharacterControllerStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>,re::Slice<re::ecs2::CharacterControllerStateComponent*>>::Subscription const&,re::Slice<re::ecs2::CharacterControllerStateComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CharacterControllerStateComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>,re::Slice<re::ecs2::CharacterControllerStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>*,re::Slice<re::ecs2::CharacterControllerStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>,re::Slice<re::ecs2::CharacterControllerStateComponent*>>::Subscription const&,re::Slice<re::ecs2::CharacterControllerStateComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CharacterControllerStateComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>,re::Slice<re::ecs2::CharacterControllerStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>*,re::Slice<re::ecs2::CharacterControllerStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>,re::Slice<re::ecs2::CharacterControllerStateComponent*>>::Subscription const&,re::Slice<re::ecs2::CharacterControllerStateComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CharacterControllerStateComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>,re::Slice<re::ecs2::CharacterControllerStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>*,re::Slice<re::ecs2::CharacterControllerStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>,re::Slice<re::ecs2::CharacterControllerStateComponent*>>::Subscription const&,re::Slice<re::ecs2::CharacterControllerStateComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CharacterControllerStateComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>,re::Slice<re::ecs2::CharacterControllerStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>*,re::Slice<re::ecs2::CharacterControllerStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>,re::Slice<re::ecs2::CharacterControllerStateComponent*>>::Subscription const&,re::Slice<re::ecs2::CharacterControllerStateComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CharacterControllerStateComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>,re::Slice<re::ecs2::CharacterControllerStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>*,re::Slice<re::ecs2::CharacterControllerStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>,re::Slice<re::ecs2::CharacterControllerStateComponent*>>::Subscription const&,re::Slice<re::ecs2::CharacterControllerStateComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CharacterControllerStateComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CharacterControllerStateComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CharacterControllerStateComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CharacterControllerStateComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>,re::Slice<re::ecs2::CharacterControllerStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>*,re::Slice<re::ecs2::CharacterControllerStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>,re::Slice<re::ecs2::CharacterControllerStateComponent*>>::Subscription const&,re::Slice<re::ecs2::CharacterControllerStateComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ClippingBoxComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClippingBoxComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ClippingBoxComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::ClippingBoxComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::ClippingBoxComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::ClippingBoxComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::ClippingBoxComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 80, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E9098;
  *(void *)(v3 + 32) = 0xBF000000BF000000;
  *(void *)(v3 + 40) = 3204448256;
  *(void *)(v3 + 48) = 0x3F0000003F000000;
  *(void *)(v3 + 56) = 1056964608;
  *(_DWORD *)(v3 + 64) = 0;
  *(unsigned char *)(v3 + 68) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClippingBoxComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E9120;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClippingBoxComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF828B0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF828B0))
  {
    qword_26AF828A8 = re::ecs2::introspect_ClippingBoxComponent(0);
    __cxa_guard_release(&qword_26AF828B0);
  }
  return qword_26AF828A8;
}

__n128 re::ecs2::ComponentType<re::ecs2::ClippingBoxComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClippingBoxComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClippingBoxComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E9028;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::ClippingBoxComponent::~ClippingBoxComponent(re::ecs2::ClippingBoxComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ClippingBoxComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::ClippingBoxComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ClippingBoxComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::ClippingBoxComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::ClippingBoxComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E9120;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ClippingBoxComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>,re::Slice<re::ecs2::ClippingBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>*,re::Slice<re::ecs2::ClippingBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>,re::Slice<re::ecs2::ClippingBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::ClippingBoxComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ClippingBoxComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>,re::Slice<re::ecs2::ClippingBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>*,re::Slice<re::ecs2::ClippingBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>,re::Slice<re::ecs2::ClippingBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::ClippingBoxComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ClippingBoxComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>,re::Slice<re::ecs2::ClippingBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>*,re::Slice<re::ecs2::ClippingBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>,re::Slice<re::ecs2::ClippingBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::ClippingBoxComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ClippingBoxComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>,re::Slice<re::ecs2::ClippingBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>*,re::Slice<re::ecs2::ClippingBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>,re::Slice<re::ecs2::ClippingBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::ClippingBoxComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ClippingBoxComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>,re::Slice<re::ecs2::ClippingBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>*,re::Slice<re::ecs2::ClippingBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>,re::Slice<re::ecs2::ClippingBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::ClippingBoxComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ClippingBoxComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>,re::Slice<re::ecs2::ClippingBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>*,re::Slice<re::ecs2::ClippingBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>,re::Slice<re::ecs2::ClippingBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::ClippingBoxComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ClippingBoxComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>,re::Slice<re::ecs2::ClippingBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>*,re::Slice<re::ecs2::ClippingBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>,re::Slice<re::ecs2::ClippingBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::ClippingBoxComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ClippingBoxComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>,re::Slice<re::ecs2::ClippingBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>*,re::Slice<re::ecs2::ClippingBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>,re::Slice<re::ecs2::ClippingBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::ClippingBoxComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ClippingBoxComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ClippingBoxComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ClippingBoxComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ClippingBoxComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>,re::Slice<re::ecs2::ClippingBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>*,re::Slice<re::ecs2::ClippingBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>,re::Slice<re::ecs2::ClippingBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::ClippingBoxComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ClippingPrimitiveComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClippingPrimitiveComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ClippingPrimitiveComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::ClippingPrimitiveComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::ClippingPrimitiveComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::ClippingPrimitiveComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::ClippingPrimitiveComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 112, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E9238;
  *(void *)(v3 + 32) = 0xBF000000BF000000;
  *(void *)(v3 + 40) = 3204448256;
  *(void *)(v3 + 48) = 0x3F0000003F000000;
  *(void *)(v3 + 56) = 1056964608;
  double result = 0.0;
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 80) = 0u;
  *(void *)(v3 + 93) = 0;
  *(unsigned char *)(v3 + 101) = 1;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClippingPrimitiveComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E92C0;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClippingPrimitiveComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF828C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF828C0))
  {
    qword_26AF828B8 = re::ecs2::introspect_ClippingPrimitiveComponent(0);
    __cxa_guard_release(&qword_26AF828C0);
  }
  return qword_26AF828B8;
}

__n128 re::ecs2::ComponentType<re::ecs2::ClippingPrimitiveComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClippingPrimitiveComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClippingPrimitiveComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E91C8;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::ClippingPrimitiveComponent::~ClippingPrimitiveComponent(re::ecs2::ClippingPrimitiveComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ClippingPrimitiveComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::ClippingPrimitiveComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ClippingPrimitiveComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return 2;
}

void *re::ecs2::ComponentImpl<re::ecs2::ClippingPrimitiveComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::ClippingPrimitiveComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E92C0;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ClippingPrimitiveComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>,re::Slice<re::ecs2::ClippingPrimitiveComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>*,re::Slice<re::ecs2::ClippingPrimitiveComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>,re::Slice<re::ecs2::ClippingPrimitiveComponent*>>::Subscription const&,re::Slice<re::ecs2::ClippingPrimitiveComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ClippingPrimitiveComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>,re::Slice<re::ecs2::ClippingPrimitiveComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>*,re::Slice<re::ecs2::ClippingPrimitiveComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>,re::Slice<re::ecs2::ClippingPrimitiveComponent*>>::Subscription const&,re::Slice<re::ecs2::ClippingPrimitiveComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ClippingPrimitiveComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>,re::Slice<re::ecs2::ClippingPrimitiveComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>*,re::Slice<re::ecs2::ClippingPrimitiveComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>,re::Slice<re::ecs2::ClippingPrimitiveComponent*>>::Subscription const&,re::Slice<re::ecs2::ClippingPrimitiveComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ClippingPrimitiveComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>,re::Slice<re::ecs2::ClippingPrimitiveComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>*,re::Slice<re::ecs2::ClippingPrimitiveComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>,re::Slice<re::ecs2::ClippingPrimitiveComponent*>>::Subscription const&,re::Slice<re::ecs2::ClippingPrimitiveComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ClippingPrimitiveComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>,re::Slice<re::ecs2::ClippingPrimitiveComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>*,re::Slice<re::ecs2::ClippingPrimitiveComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>,re::Slice<re::ecs2::ClippingPrimitiveComponent*>>::Subscription const&,re::Slice<re::ecs2::ClippingPrimitiveComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ClippingPrimitiveComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>,re::Slice<re::ecs2::ClippingPrimitiveComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>*,re::Slice<re::ecs2::ClippingPrimitiveComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>,re::Slice<re::ecs2::ClippingPrimitiveComponent*>>::Subscription const&,re::Slice<re::ecs2::ClippingPrimitiveComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ClippingPrimitiveComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>,re::Slice<re::ecs2::ClippingPrimitiveComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>*,re::Slice<re::ecs2::ClippingPrimitiveComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>,re::Slice<re::ecs2::ClippingPrimitiveComponent*>>::Subscription const&,re::Slice<re::ecs2::ClippingPrimitiveComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ClippingPrimitiveComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>,re::Slice<re::ecs2::ClippingPrimitiveComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>*,re::Slice<re::ecs2::ClippingPrimitiveComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>,re::Slice<re::ecs2::ClippingPrimitiveComponent*>>::Subscription const&,re::Slice<re::ecs2::ClippingPrimitiveComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ClippingPrimitiveComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ClippingPrimitiveComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ClippingPrimitiveComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ClippingPrimitiveComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>,re::Slice<re::ecs2::ClippingPrimitiveComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>*,re::Slice<re::ecs2::ClippingPrimitiveComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>,re::Slice<re::ecs2::ClippingPrimitiveComponent*>>::Subscription const&,re::Slice<re::ecs2::ClippingPrimitiveComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ColliderComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ColliderComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ColliderComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::ColliderComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

id re::ecs2::ComponentType<re::ecs2::ColliderComponent>::doMakeComponent@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::ColliderComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::ColliderComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 168, 0);
  return re::make::shared::inplace<re::ecs2::ColliderComponent>(v2, a1);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ColliderComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E93D8;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ColliderComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF828D0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF828D0))
  {
    qword_26AF828C8 = re::ecs2::introspect_ColliderComponent(0);
    __cxa_guard_release(&qword_26AF828D0);
  }
  return qword_26AF828C8;
}

__n128 re::ecs2::ComponentType<re::ecs2::ColliderComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ColliderComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ColliderComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E9368;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E93D8;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ColliderComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>,re::Slice<re::ecs2::ColliderComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>*,re::Slice<re::ecs2::ColliderComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>,re::Slice<re::ecs2::ColliderComponent*>>::Subscription const&,re::Slice<re::ecs2::ColliderComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ColliderComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>,re::Slice<re::ecs2::ColliderComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>*,re::Slice<re::ecs2::ColliderComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>,re::Slice<re::ecs2::ColliderComponent*>>::Subscription const&,re::Slice<re::ecs2::ColliderComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ColliderComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>,re::Slice<re::ecs2::ColliderComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>*,re::Slice<re::ecs2::ColliderComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>,re::Slice<re::ecs2::ColliderComponent*>>::Subscription const&,re::Slice<re::ecs2::ColliderComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ColliderComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>,re::Slice<re::ecs2::ColliderComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>*,re::Slice<re::ecs2::ColliderComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>,re::Slice<re::ecs2::ColliderComponent*>>::Subscription const&,re::Slice<re::ecs2::ColliderComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ColliderComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>,re::Slice<re::ecs2::ColliderComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>*,re::Slice<re::ecs2::ColliderComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>,re::Slice<re::ecs2::ColliderComponent*>>::Subscription const&,re::Slice<re::ecs2::ColliderComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ColliderComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>,re::Slice<re::ecs2::ColliderComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>*,re::Slice<re::ecs2::ColliderComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>,re::Slice<re::ecs2::ColliderComponent*>>::Subscription const&,re::Slice<re::ecs2::ColliderComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ColliderComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>,re::Slice<re::ecs2::ColliderComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>*,re::Slice<re::ecs2::ColliderComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>,re::Slice<re::ecs2::ColliderComponent*>>::Subscription const&,re::Slice<re::ecs2::ColliderComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ColliderComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>,re::Slice<re::ecs2::ColliderComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>*,re::Slice<re::ecs2::ColliderComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>,re::Slice<re::ecs2::ColliderComponent*>>::Subscription const&,re::Slice<re::ecs2::ColliderComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ColliderComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ColliderComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ColliderComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ColliderComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>,re::Slice<re::ecs2::ColliderComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>*,re::Slice<re::ecs2::ColliderComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>,re::Slice<re::ecs2::ColliderComponent*>>::Subscription const&,re::Slice<re::ecs2::ColliderComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ForceEffectComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ForceEffectComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ForceEffectComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::ForceEffectComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::ForceEffectComponent>::doMakeComponent@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::ForceEffectComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::ForceEffectComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 176, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(_WORD *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E4E58;
  *(void *)(v3 + 64) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = 0;
  *(void *)(v3 + 32) = 0;
  *(_DWORD *)(v2 + 56) = 0;
  objc_initWeak((id *)(v3 + 72), 0);
  *(void *)(v2 + 96) = 0;
  *(void *)(v2 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0;
  *(void *)(v2 + 88) = 0;
  *(_DWORD *)(v2 + 112) = 0;
  *(void *)(v2 + 160) = 0;
  double result = 0.0;
  *(_OWORD *)(v2 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0u;
  *(_OWORD *)(v2 + 136) = 0u;
  *(_DWORD *)(v2 + 152) = 0;
  *(unsigned char *)(v2 + 168) = 1;
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ForceEffectComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E94F0;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ForceEffectComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF828E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF828E0))
  {
    qword_26AF828D8 = re::ecs2::introspect_ForceEffectComponent(0);
    __cxa_guard_release(&qword_26AF828E0);
  }
  return qword_26AF828D8;
}

__n128 re::ecs2::ComponentType<re::ecs2::ForceEffectComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ForceEffectComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ForceEffectComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E9480;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E94F0;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ForceEffectComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>,re::Slice<re::ecs2::ForceEffectComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>*,re::Slice<re::ecs2::ForceEffectComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>,re::Slice<re::ecs2::ForceEffectComponent*>>::Subscription const&,re::Slice<re::ecs2::ForceEffectComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ForceEffectComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>,re::Slice<re::ecs2::ForceEffectComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>*,re::Slice<re::ecs2::ForceEffectComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>,re::Slice<re::ecs2::ForceEffectComponent*>>::Subscription const&,re::Slice<re::ecs2::ForceEffectComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ForceEffectComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>,re::Slice<re::ecs2::ForceEffectComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>*,re::Slice<re::ecs2::ForceEffectComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>,re::Slice<re::ecs2::ForceEffectComponent*>>::Subscription const&,re::Slice<re::ecs2::ForceEffectComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ForceEffectComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>,re::Slice<re::ecs2::ForceEffectComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>*,re::Slice<re::ecs2::ForceEffectComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>,re::Slice<re::ecs2::ForceEffectComponent*>>::Subscription const&,re::Slice<re::ecs2::ForceEffectComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ForceEffectComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>,re::Slice<re::ecs2::ForceEffectComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>*,re::Slice<re::ecs2::ForceEffectComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>,re::Slice<re::ecs2::ForceEffectComponent*>>::Subscription const&,re::Slice<re::ecs2::ForceEffectComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ForceEffectComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>,re::Slice<re::ecs2::ForceEffectComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>*,re::Slice<re::ecs2::ForceEffectComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>,re::Slice<re::ecs2::ForceEffectComponent*>>::Subscription const&,re::Slice<re::ecs2::ForceEffectComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ForceEffectComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>,re::Slice<re::ecs2::ForceEffectComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>*,re::Slice<re::ecs2::ForceEffectComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>,re::Slice<re::ecs2::ForceEffectComponent*>>::Subscription const&,re::Slice<re::ecs2::ForceEffectComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ForceEffectComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>,re::Slice<re::ecs2::ForceEffectComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>*,re::Slice<re::ecs2::ForceEffectComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>,re::Slice<re::ecs2::ForceEffectComponent*>>::Subscription const&,re::Slice<re::ecs2::ForceEffectComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ForceEffectComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ForceEffectComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ForceEffectComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ForceEffectComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>,re::Slice<re::ecs2::ForceEffectComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>*,re::Slice<re::ecs2::ForceEffectComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>,re::Slice<re::ecs2::ForceEffectComponent*>>::Subscription const&,re::Slice<re::ecs2::ForceEffectComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ConstraintListComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ConstraintListComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ConstraintListComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::ConstraintListComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::ConstraintListComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::ConstraintListComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::ConstraintListComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 112, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E9608;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = 0;
  *(void *)(v3 + 32) = 0;
  *(_DWORD *)(v3 + 56) = 0;
  *(void *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0;
  double result = 0.0;
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 80) = 0u;
  *(_DWORD *)(v3 + 96) = 0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ConstraintListComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E9690;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 632) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ConstraintListComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF828F0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF828F0))
  {
    qword_26AF828E8 = re::ecs2::introspect_ConstraintListComponent(0);
    __cxa_guard_release(&qword_26AF828F0);
  }
  return qword_26AF828E8;
}

__n128 re::ecs2::ComponentType<re::ecs2::ConstraintListComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ConstraintListComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ConstraintListComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E9598;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::ConstraintListComponent::~ConstraintListComponent(re::ecs2::ConstraintListComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72);
  re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ConstraintListComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::ConstraintListComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ConstraintListComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::ConstraintListComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::ConstraintListComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E9690;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ConstraintListComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>,re::Slice<re::ecs2::ConstraintListComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>*,re::Slice<re::ecs2::ConstraintListComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>,re::Slice<re::ecs2::ConstraintListComponent*>>::Subscription const&,re::Slice<re::ecs2::ConstraintListComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ConstraintListComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>,re::Slice<re::ecs2::ConstraintListComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>*,re::Slice<re::ecs2::ConstraintListComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>,re::Slice<re::ecs2::ConstraintListComponent*>>::Subscription const&,re::Slice<re::ecs2::ConstraintListComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ConstraintListComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>,re::Slice<re::ecs2::ConstraintListComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>*,re::Slice<re::ecs2::ConstraintListComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>,re::Slice<re::ecs2::ConstraintListComponent*>>::Subscription const&,re::Slice<re::ecs2::ConstraintListComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ConstraintListComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>,re::Slice<re::ecs2::ConstraintListComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>*,re::Slice<re::ecs2::ConstraintListComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>,re::Slice<re::ecs2::ConstraintListComponent*>>::Subscription const&,re::Slice<re::ecs2::ConstraintListComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ConstraintListComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>,re::Slice<re::ecs2::ConstraintListComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>*,re::Slice<re::ecs2::ConstraintListComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>,re::Slice<re::ecs2::ConstraintListComponent*>>::Subscription const&,re::Slice<re::ecs2::ConstraintListComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ConstraintListComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>,re::Slice<re::ecs2::ConstraintListComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>*,re::Slice<re::ecs2::ConstraintListComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>,re::Slice<re::ecs2::ConstraintListComponent*>>::Subscription const&,re::Slice<re::ecs2::ConstraintListComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ConstraintListComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>,re::Slice<re::ecs2::ConstraintListComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>*,re::Slice<re::ecs2::ConstraintListComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>,re::Slice<re::ecs2::ConstraintListComponent*>>::Subscription const&,re::Slice<re::ecs2::ConstraintListComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ConstraintListComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>,re::Slice<re::ecs2::ConstraintListComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>*,re::Slice<re::ecs2::ConstraintListComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>,re::Slice<re::ecs2::ConstraintListComponent*>>::Subscription const&,re::Slice<re::ecs2::ConstraintListComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ConstraintListComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ConstraintListComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ConstraintListComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ConstraintListComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>,re::Slice<re::ecs2::ConstraintListComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>*,re::Slice<re::ecs2::ConstraintListComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>,re::Slice<re::ecs2::ConstraintListComponent*>>::Subscription const&,re::Slice<re::ecs2::ConstraintListComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::CustomMatrixCameraComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::CustomMatrixCameraComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::CustomMatrixCameraComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::CustomMatrixCameraComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

re::ecs2::CustomMatrixCameraComponent *re::ecs2::ComponentType<re::ecs2::CustomMatrixCameraComponent>::doMakeComponent@<X0>(re::ecs2::CustomMatrixCameraComponent **a1@<X8>)
{
  uint64_t v2 = (re::ecs2::CustomMatrixCameraComponent *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::CustomMatrixCameraComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType + 7) + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::CustomMatrixCameraComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 384, 0);
  double result = re::ecs2::CustomMatrixCameraComponent::CustomMatrixCameraComponent(v2);
  *a1 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CustomMatrixCameraComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E97A8;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CustomMatrixCameraComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82900, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82900))
  {
    qword_26AF828F8 = re::ecs2::introspect_CustomMatrixCameraComponent(0);
    __cxa_guard_release(&qword_26AF82900);
  }
  return qword_26AF828F8;
}

__n128 re::ecs2::ComponentType<re::ecs2::CustomMatrixCameraComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CustomMatrixCameraComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::CustomMatrixCameraComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E9738;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E97A8;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CustomMatrixCameraComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>,re::Slice<re::ecs2::CustomMatrixCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>*,re::Slice<re::ecs2::CustomMatrixCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>,re::Slice<re::ecs2::CustomMatrixCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomMatrixCameraComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CustomMatrixCameraComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>,re::Slice<re::ecs2::CustomMatrixCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>*,re::Slice<re::ecs2::CustomMatrixCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>,re::Slice<re::ecs2::CustomMatrixCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomMatrixCameraComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CustomMatrixCameraComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>,re::Slice<re::ecs2::CustomMatrixCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>*,re::Slice<re::ecs2::CustomMatrixCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>,re::Slice<re::ecs2::CustomMatrixCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomMatrixCameraComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CustomMatrixCameraComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>,re::Slice<re::ecs2::CustomMatrixCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>*,re::Slice<re::ecs2::CustomMatrixCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>,re::Slice<re::ecs2::CustomMatrixCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomMatrixCameraComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CustomMatrixCameraComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>,re::Slice<re::ecs2::CustomMatrixCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>*,re::Slice<re::ecs2::CustomMatrixCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>,re::Slice<re::ecs2::CustomMatrixCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomMatrixCameraComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CustomMatrixCameraComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>,re::Slice<re::ecs2::CustomMatrixCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>*,re::Slice<re::ecs2::CustomMatrixCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>,re::Slice<re::ecs2::CustomMatrixCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomMatrixCameraComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CustomMatrixCameraComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>,re::Slice<re::ecs2::CustomMatrixCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>*,re::Slice<re::ecs2::CustomMatrixCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>,re::Slice<re::ecs2::CustomMatrixCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomMatrixCameraComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CustomMatrixCameraComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>,re::Slice<re::ecs2::CustomMatrixCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>*,re::Slice<re::ecs2::CustomMatrixCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>,re::Slice<re::ecs2::CustomMatrixCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomMatrixCameraComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CustomMatrixCameraComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CustomMatrixCameraComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CustomMatrixCameraComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CustomMatrixCameraComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>,re::Slice<re::ecs2::CustomMatrixCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>*,re::Slice<re::ecs2::CustomMatrixCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>,re::Slice<re::ecs2::CustomMatrixCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomMatrixCameraComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::DebugMeshComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::DebugMeshComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::DebugMeshComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::DebugMeshComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void *re::ecs2::ComponentType<re::ecs2::DebugMeshComponent>::doMakeComponent@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::DebugMeshComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::DebugMeshComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 64, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E98C0;
  *(_OWORD *)(v2 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  double result = re::DynamicString::setCapacity((void *)(v2 + 32), 0);
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DebugMeshComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E9948;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DebugMeshComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82910, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82910))
  {
    qword_26AF82908 = re::ecs2::introspect_DebugMeshComponent(0);
    __cxa_guard_release(&qword_26AF82910);
  }
  return qword_26AF82908;
}

__n128 re::ecs2::ComponentType<re::ecs2::DebugMeshComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DebugMeshComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::DebugMeshComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E9850;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::DebugMeshComponent::~DebugMeshComponent(re::ecs2::DebugMeshComponent *this)
{
  *(void *)this = &unk_26E6E98C0;
  re::DynamicString::deinit((re::ecs2::DebugMeshComponent *)((char *)this + 32));
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6E98C0;
  re::DynamicString::deinit((re::ecs2::DebugMeshComponent *)((char *)this + 32));
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::DebugMeshComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::DebugMeshComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::DebugMeshComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::DebugMeshComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::DebugMeshComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E9948;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DebugMeshComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>,re::Slice<re::ecs2::DebugMeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>*,re::Slice<re::ecs2::DebugMeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>,re::Slice<re::ecs2::DebugMeshComponent*>>::Subscription const&,re::Slice<re::ecs2::DebugMeshComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DebugMeshComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>,re::Slice<re::ecs2::DebugMeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>*,re::Slice<re::ecs2::DebugMeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>,re::Slice<re::ecs2::DebugMeshComponent*>>::Subscription const&,re::Slice<re::ecs2::DebugMeshComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DebugMeshComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>,re::Slice<re::ecs2::DebugMeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>*,re::Slice<re::ecs2::DebugMeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>,re::Slice<re::ecs2::DebugMeshComponent*>>::Subscription const&,re::Slice<re::ecs2::DebugMeshComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DebugMeshComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>,re::Slice<re::ecs2::DebugMeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>*,re::Slice<re::ecs2::DebugMeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>,re::Slice<re::ecs2::DebugMeshComponent*>>::Subscription const&,re::Slice<re::ecs2::DebugMeshComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DebugMeshComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>,re::Slice<re::ecs2::DebugMeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>*,re::Slice<re::ecs2::DebugMeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>,re::Slice<re::ecs2::DebugMeshComponent*>>::Subscription const&,re::Slice<re::ecs2::DebugMeshComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DebugMeshComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>,re::Slice<re::ecs2::DebugMeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>*,re::Slice<re::ecs2::DebugMeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>,re::Slice<re::ecs2::DebugMeshComponent*>>::Subscription const&,re::Slice<re::ecs2::DebugMeshComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DebugMeshComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>,re::Slice<re::ecs2::DebugMeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>*,re::Slice<re::ecs2::DebugMeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>,re::Slice<re::ecs2::DebugMeshComponent*>>::Subscription const&,re::Slice<re::ecs2::DebugMeshComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DebugMeshComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>,re::Slice<re::ecs2::DebugMeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>*,re::Slice<re::ecs2::DebugMeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>,re::Slice<re::ecs2::DebugMeshComponent*>>::Subscription const&,re::Slice<re::ecs2::DebugMeshComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DebugMeshComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DebugMeshComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DebugMeshComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DebugMeshComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>,re::Slice<re::ecs2::DebugMeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>*,re::Slice<re::ecs2::DebugMeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>,re::Slice<re::ecs2::DebugMeshComponent*>>::Subscription const&,re::Slice<re::ecs2::DebugMeshComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::CustomDockingRegionComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::CustomDockingRegionComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::CustomDockingRegionComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::CustomDockingRegionComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

int32x4_t re::ecs2::ComponentType<re::ecs2::CustomDockingRegionComponent>::doMakeComponent@<Q0>(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::CustomDockingRegionComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::CustomDockingRegionComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 128, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F6B30;
  int32x4_t result = vdupq_n_s32(0x7F800000u);
  *(void *)&long long v5 = 0x7F0000007FLL;
  *((void *)&v5 + 1) = 0x7F0000007FLL;
  *(int32x4_t *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = result;
  *(_OWORD *)(v3 + 48) = v5;
  *(void *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0;
  *(_DWORD *)(v3 + 112) = 0;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 80) = 0;
  *(void *)(v3 + 88) = 0;
  *(_DWORD *)(v3 + 96) = 0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CustomDockingRegionComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E9A60;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  long long v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CustomDockingRegionComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82920, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82920))
  {
    qword_26AF82918 = re::ecs2::introspect_CustomDockingRegionComponent(0);
    __cxa_guard_release(&qword_26AF82920);
  }
  return qword_26AF82918;
}

__n128 re::ecs2::ComponentType<re::ecs2::CustomDockingRegionComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CustomDockingRegionComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::CustomDockingRegionComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E99F0;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::CustomDockingRegionComponent::~CustomDockingRegionComponent(re::ecs2::CustomDockingRegionComponent *this, void *a2, uint64_t a3, void *a4)
{
  *(void *)this = &unk_26E6F6B30;
  long long v5 = (re::ecs2::CustomDockingRegionComponent *)((char *)this + 96);
  re::ecs2::PlacementAnimationSerialization::~PlacementAnimationSerialization((re::ecs2::CustomDockingRegionComponent *)((char *)this + 112), a2, a3, a4);
  re::ecs2::PlacementAnimationSerialization::~PlacementAnimationSerialization(v5, v6, v7, v8);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  re::ecs2::PlacementAnimationSerialization *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t vars8;

  *(void *)this = &unk_26E6F6B30;
  long long v5 = (re::ecs2::CustomDockingRegionComponent *)((char *)this + 96);
  re::ecs2::PlacementAnimationSerialization::~PlacementAnimationSerialization((re::ecs2::CustomDockingRegionComponent *)((char *)this + 112), a2, a3, a4);
  re::ecs2::PlacementAnimationSerialization::~PlacementAnimationSerialization(v5, v6, v7, v8);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::CustomDockingRegionComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::CustomDockingRegionComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::CustomDockingRegionComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::CustomDockingRegionComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::CustomDockingRegionComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E9A60;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      long long v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    long long v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CustomDockingRegionComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>,re::Slice<re::ecs2::CustomDockingRegionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>*,re::Slice<re::ecs2::CustomDockingRegionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>,re::Slice<re::ecs2::CustomDockingRegionComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomDockingRegionComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    long long v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CustomDockingRegionComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>,re::Slice<re::ecs2::CustomDockingRegionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>*,re::Slice<re::ecs2::CustomDockingRegionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>,re::Slice<re::ecs2::CustomDockingRegionComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomDockingRegionComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    long long v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CustomDockingRegionComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>,re::Slice<re::ecs2::CustomDockingRegionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>*,re::Slice<re::ecs2::CustomDockingRegionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>,re::Slice<re::ecs2::CustomDockingRegionComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomDockingRegionComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    long long v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CustomDockingRegionComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>,re::Slice<re::ecs2::CustomDockingRegionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>*,re::Slice<re::ecs2::CustomDockingRegionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>,re::Slice<re::ecs2::CustomDockingRegionComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomDockingRegionComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CustomDockingRegionComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>,re::Slice<re::ecs2::CustomDockingRegionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>*,re::Slice<re::ecs2::CustomDockingRegionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>,re::Slice<re::ecs2::CustomDockingRegionComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomDockingRegionComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CustomDockingRegionComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>,re::Slice<re::ecs2::CustomDockingRegionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>*,re::Slice<re::ecs2::CustomDockingRegionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>,re::Slice<re::ecs2::CustomDockingRegionComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomDockingRegionComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CustomDockingRegionComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>,re::Slice<re::ecs2::CustomDockingRegionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>*,re::Slice<re::ecs2::CustomDockingRegionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>,re::Slice<re::ecs2::CustomDockingRegionComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomDockingRegionComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CustomDockingRegionComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>,re::Slice<re::ecs2::CustomDockingRegionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>*,re::Slice<re::ecs2::CustomDockingRegionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>,re::Slice<re::ecs2::CustomDockingRegionComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomDockingRegionComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CustomDockingRegionComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CustomDockingRegionComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CustomDockingRegionComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CustomDockingRegionComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>,re::Slice<re::ecs2::CustomDockingRegionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>*,re::Slice<re::ecs2::CustomDockingRegionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>,re::Slice<re::ecs2::CustomDockingRegionComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomDockingRegionComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::DrawableQueueSyncComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::DrawableQueueSyncComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::DrawableQueueSyncComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::DrawableQueueSyncComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentType<re::ecs2::DrawableQueueSyncComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E9B78;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DrawableQueueSyncComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82930, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82930))
  {
    qword_26AF82928 = re::ecs2::introspect_DrawableQueueSyncComponent(0);
    __cxa_guard_release(&qword_26AF82930);
  }
  return qword_26AF82928;
}

__n128 re::ecs2::ComponentType<re::ecs2::DrawableQueueSyncComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DrawableQueueSyncComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::DrawableQueueSyncComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E9B08;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E9B78;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DrawableQueueSyncComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>,re::Slice<re::ecs2::DrawableQueueSyncComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>*,re::Slice<re::ecs2::DrawableQueueSyncComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>,re::Slice<re::ecs2::DrawableQueueSyncComponent*>>::Subscription const&,re::Slice<re::ecs2::DrawableQueueSyncComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DrawableQueueSyncComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>,re::Slice<re::ecs2::DrawableQueueSyncComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>*,re::Slice<re::ecs2::DrawableQueueSyncComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>,re::Slice<re::ecs2::DrawableQueueSyncComponent*>>::Subscription const&,re::Slice<re::ecs2::DrawableQueueSyncComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DrawableQueueSyncComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>,re::Slice<re::ecs2::DrawableQueueSyncComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>*,re::Slice<re::ecs2::DrawableQueueSyncComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>,re::Slice<re::ecs2::DrawableQueueSyncComponent*>>::Subscription const&,re::Slice<re::ecs2::DrawableQueueSyncComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DrawableQueueSyncComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>,re::Slice<re::ecs2::DrawableQueueSyncComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>*,re::Slice<re::ecs2::DrawableQueueSyncComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>,re::Slice<re::ecs2::DrawableQueueSyncComponent*>>::Subscription const&,re::Slice<re::ecs2::DrawableQueueSyncComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DrawableQueueSyncComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>,re::Slice<re::ecs2::DrawableQueueSyncComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>*,re::Slice<re::ecs2::DrawableQueueSyncComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>,re::Slice<re::ecs2::DrawableQueueSyncComponent*>>::Subscription const&,re::Slice<re::ecs2::DrawableQueueSyncComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DrawableQueueSyncComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>,re::Slice<re::ecs2::DrawableQueueSyncComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>*,re::Slice<re::ecs2::DrawableQueueSyncComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>,re::Slice<re::ecs2::DrawableQueueSyncComponent*>>::Subscription const&,re::Slice<re::ecs2::DrawableQueueSyncComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DrawableQueueSyncComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>,re::Slice<re::ecs2::DrawableQueueSyncComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>*,re::Slice<re::ecs2::DrawableQueueSyncComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>,re::Slice<re::ecs2::DrawableQueueSyncComponent*>>::Subscription const&,re::Slice<re::ecs2::DrawableQueueSyncComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DrawableQueueSyncComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>,re::Slice<re::ecs2::DrawableQueueSyncComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>*,re::Slice<re::ecs2::DrawableQueueSyncComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>,re::Slice<re::ecs2::DrawableQueueSyncComponent*>>::Subscription const&,re::Slice<re::ecs2::DrawableQueueSyncComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DrawableQueueSyncComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DrawableQueueSyncComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DrawableQueueSyncComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DrawableQueueSyncComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>,re::Slice<re::ecs2::DrawableQueueSyncComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>*,re::Slice<re::ecs2::DrawableQueueSyncComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>,re::Slice<re::ecs2::DrawableQueueSyncComponent*>>::Subscription const&,re::Slice<re::ecs2::DrawableQueueSyncComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::DrawWorldComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::DrawWorldComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::DrawWorldComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::DrawWorldComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::DrawWorldComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::DrawWorldComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::DrawWorldComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 40, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(void *)(v2 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E5920;
  *(_DWORD *)(v3 + 28) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DrawWorldComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E9C90;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DrawWorldComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82940, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82940))
  {
    qword_26AF82938 = re::ecs2::introspect_DrawWorldComponent(0);
    __cxa_guard_release(&qword_26AF82940);
  }
  return qword_26AF82938;
}

__n128 re::ecs2::ComponentType<re::ecs2::DrawWorldComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DrawWorldComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::DrawWorldComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E9C20;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E9C90;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DrawWorldComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>,re::Slice<re::ecs2::DrawWorldComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>*,re::Slice<re::ecs2::DrawWorldComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>,re::Slice<re::ecs2::DrawWorldComponent*>>::Subscription const&,re::Slice<re::ecs2::DrawWorldComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DrawWorldComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>,re::Slice<re::ecs2::DrawWorldComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>*,re::Slice<re::ecs2::DrawWorldComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>,re::Slice<re::ecs2::DrawWorldComponent*>>::Subscription const&,re::Slice<re::ecs2::DrawWorldComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DrawWorldComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>,re::Slice<re::ecs2::DrawWorldComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>*,re::Slice<re::ecs2::DrawWorldComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>,re::Slice<re::ecs2::DrawWorldComponent*>>::Subscription const&,re::Slice<re::ecs2::DrawWorldComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DrawWorldComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>,re::Slice<re::ecs2::DrawWorldComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>*,re::Slice<re::ecs2::DrawWorldComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>,re::Slice<re::ecs2::DrawWorldComponent*>>::Subscription const&,re::Slice<re::ecs2::DrawWorldComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DrawWorldComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>,re::Slice<re::ecs2::DrawWorldComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>*,re::Slice<re::ecs2::DrawWorldComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>,re::Slice<re::ecs2::DrawWorldComponent*>>::Subscription const&,re::Slice<re::ecs2::DrawWorldComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DrawWorldComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>,re::Slice<re::ecs2::DrawWorldComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>*,re::Slice<re::ecs2::DrawWorldComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>,re::Slice<re::ecs2::DrawWorldComponent*>>::Subscription const&,re::Slice<re::ecs2::DrawWorldComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DrawWorldComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>,re::Slice<re::ecs2::DrawWorldComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>*,re::Slice<re::ecs2::DrawWorldComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>,re::Slice<re::ecs2::DrawWorldComponent*>>::Subscription const&,re::Slice<re::ecs2::DrawWorldComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DrawWorldComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>,re::Slice<re::ecs2::DrawWorldComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>*,re::Slice<re::ecs2::DrawWorldComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>,re::Slice<re::ecs2::DrawWorldComponent*>>::Subscription const&,re::Slice<re::ecs2::DrawWorldComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DrawWorldComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DrawWorldComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DrawWorldComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DrawWorldComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>,re::Slice<re::ecs2::DrawWorldComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>*,re::Slice<re::ecs2::DrawWorldComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>,re::Slice<re::ecs2::DrawWorldComponent*>>::Subscription const&,re::Slice<re::ecs2::DrawWorldComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::DynamicBoundingBoxComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::DynamicBoundingBoxComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::DynamicBoundingBoxComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::DynamicBoundingBoxComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

int32x4_t re::ecs2::ComponentType<re::ecs2::DynamicBoundingBoxComponent>::doMakeComponent@<Q0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::DynamicBoundingBoxComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::DynamicBoundingBoxComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType+ 7), 368, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 176) = 0u;
  *(_OWORD *)(v2 + 192) = 0u;
  *(_OWORD *)(v2 + 208) = 0u;
  *(_OWORD *)(v2 + 224) = 0u;
  *(_OWORD *)(v2 + 240) = 0u;
  *(_OWORD *)(v2 + 256) = 0u;
  *(_OWORD *)(v2 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v2 + 288) = 0u;
  *(_OWORD *)(v2 + 304) = 0u;
  *(_OWORD *)(v2 + 3objc_destroyWeak(this + 20) = 0u;
  *(_OWORD *)(v2 + 336) = 0u;
  *(_OWORD *)(v2 + 352) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E9DA8;
  inited = (re *)objc_initWeak((id *)(v2 + 32), 0);
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = re::globalAllocators(inited)[2];
  *(void *)(v2 + 80) = 0;
  uint64_t v5 = (re *)objc_initWeak((id *)(v2 + 88), 0);
  *(void *)(v2 + 96) = 0;
  *(void *)(v2 + 128) = re::globalAllocators(v5)[2];
  *(void *)(v2 + 136) = 0;
  uint64_t v6 = (re *)objc_initWeak((id *)(v2 + 144), 0);
  *(void *)(v2 + 152) = 0;
  *(void *)(v2 + 184) = re::globalAllocators(v6)[2];
  *(_DWORD *)(v2 + 224) = 0;
  *(_OWORD *)(v2 + 192) = 0u;
  *(_OWORD *)(v2 + 208) = 0u;
  *(_DWORD *)(v2 + 264) = 0;
  *(_OWORD *)(v2 + 248) = 0u;
  *(_OWORD *)(v2 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0u;
  *(void *)(v2 + 280) = 0;
  *(void *)(v2 + 288) = 0;
  *(void *)(v2 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v2 + 296) = 1;
  *(void *)(v2 + 304) = 0;
  *(void *)(v2 + 312) = 0;
  *(void *)(v2 + 328) = 0;
  int32x4_t result = vdupq_n_s32(0x7F800000u);
  *(void *)&long long v8 = 0x7F0000007FLL;
  *((void *)&v8 + 1) = 0x7F0000007FLL;
  *(int32x4_t *)(v2 + 336) = result;
  *(_OWORD *)(v2 + 352) = v8;
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DynamicBoundingBoxComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6E9F38;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DynamicBoundingBoxComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82950, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82950))
  {
    qword_26AF82948 = re::ecs2::introspect_DynamicBoundingBoxComponent(0);
    __cxa_guard_release(&qword_26AF82950);
  }
  return qword_26AF82948;
}

__n128 re::ecs2::ComponentType<re::ecs2::DynamicBoundingBoxComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DynamicBoundingBoxComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::DynamicBoundingBoxComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E9D38;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::DynamicBoundingBoxComponent::~DynamicBoundingBoxComponent(id *this)
{
  *this = &unk_26E6E9DA8;
  uint64_t v2 = this + 4;
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(this + 35));
  re::DynamicArray<unsigned long>::deinit((uint64_t)(this + 30));
  re::DynamicArray<unsigned long>::deinit((uint64_t)(this + 25));
  re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::PersistentDynamicBoundingBoxData,re::FrameManager>::~FramePersistentPtr(this + 18);
  re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::DynamicBoundingBoxData,re::FrameManager>::~FramePersistentPtr(this + 11);
  re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::BoundingBoxBufferInputs,re::FrameManager>::~FramePersistentPtr(v2);
  *this = &unk_26E6DECE0;
  objc_destructInstance(this + 1);
}

{
  id *v2;
  uint64_t vars8;

  *this = &unk_26E6E9DA8;
  uint64_t v2 = this + 4;
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(this + 35));
  re::DynamicArray<unsigned long>::deinit((uint64_t)(this + 30));
  re::DynamicArray<unsigned long>::deinit((uint64_t)(this + 25));
  re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::PersistentDynamicBoundingBoxData,re::FrameManager>::~FramePersistentPtr(this + 18);
  re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::DynamicBoundingBoxData,re::FrameManager>::~FramePersistentPtr(this + 11);
  re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::BoundingBoxBufferInputs,re::FrameManager>::~FramePersistentPtr(v2);
  *this = &unk_26E6DECE0;
  objc_destructInstance(this + 1);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::DynamicBoundingBoxComponent,(re::ecs2::ComponentTypeBase::Flags)1>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::DynamicBoundingBoxComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::DynamicBoundingBoxComponent,(re::ecs2::ComponentTypeBase::Flags)1>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::DynamicBoundingBoxComponent,(re::ecs2::ComponentTypeBase::Flags)1>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::DynamicBoundingBoxComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType;
}

id *re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::PersistentDynamicBoundingBoxData,re::FrameManager>::~FramePersistentPtr(id *a1)
{
  void v5[5] = *MEMORY[0x263EF8340];
  inited = (re *)objc_initWeak(&location, 0);
  memset(v5, 0, 24);
  v5[3] = re::globalAllocators(inited)[2];
  void v5[4] = 0;
  re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::PersistentDynamicBoundingBoxData,re::FrameManager>::reset(a1, &location, 0, (uint64_t)v5);
  re::FunctionBase<24ul,void ()(void *)>::destroyCallable((uint64_t)v5);
  objc_destroyWeak(&location);
  id location = 0;
  re::FunctionBase<24ul,void ()(void *)>::destroyCallable((uint64_t)(a1 + 2));
  objc_destroyWeak(a1);
  *a1 = 0;
  return a1;
}

uint64_t re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::PersistentDynamicBoundingBoxData,re::FrameManager>::reset(id *location, id *a2, void *a3, uint64_t a4)
{
  v18[5] = *MEMORY[0x263EF8340];
  if (location[1])
  {
    id WeakRetained = objc_loadWeakRetained(location);
    if (WeakRetained)
    {
      uint64_t v9 = WeakRetained;

      if (!location[6])
      {
        uint64_t v11 = re::globalAllocators(v10)[2];
        v18[0] = &unk_26E6E9E30;
        v18[3] = v11;
        uint64_t v18[4] = v18;
        re::FunctionBase<24ul,void ()(void *)>::operator=<24ul>((uint64_t)(location + 2), (uint64_t)v18);
        uint64_t v10 = (re *)re::FunctionBase<24ul,void ()(void *)>::destroyCallable((uint64_t)v18);
      }
      long long v12 = re::globalAllocators(v10);
      unint64_t v13 = v9[2] & 0xFFFFFFFFFFFFFFFLL | ((unint64_t)v9[1] << 60);
      id v14 = location[1];
      uint64_t v15 = re::PerFrameAllocatorManager::perFrameAllocator(v12[6], v13);
      (*(void (**)(uint64_t, id, id *))(*(void *)v15 + 16))(v15, v14, location + 2);
    }
    else
    {
      id v16 = location[6];
      if (v16)
      {
        v18[0] = location[1];
        (*(void (**)(id, void *))(*(void *)v16 + 16))(v16, v18);
      }
      else
      {
        re::internal::destroyPersistent<re::ecs2::DynamicBoundingBoxComponent::PersistentDynamicBoundingBoxData>((re *)"reset", 161, (uint64_t)location[1]);
      }
    }
  }
  re::ArcWeakPtr<re::VideoHistogram>::operator=(location, a2);
  location[1] = a3;
  return re::FunctionBase<24ul,void ()(void *)>::operator=<24ul>((uint64_t)(location + 2), a4);
}

re *re::internal::destroyPersistent<re::ecs2::DynamicBoundingBoxComponent::PersistentDynamicBoundingBoxData>(re *result, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v4 = re::globalAllocators(result)[2];
    re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a3 + 56);
    re::DynamicArray<unsigned long>::deinit(a3);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 40);
    return (re *)v5(v4, a3);
  }
  return result;
}

void re::internal::Callable<re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::PersistentDynamicBoundingBoxData,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::DynamicBoundingBoxComponent::PersistentDynamicBoundingBoxData*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::~Callable()
{
}

re *re::internal::Callable<re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::PersistentDynamicBoundingBoxData,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::DynamicBoundingBoxComponent::PersistentDynamicBoundingBoxData*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::operator()(uint64_t a1, uint64_t *a2)
{
  return re::internal::destroyPersistent<re::ecs2::DynamicBoundingBoxComponent::PersistentDynamicBoundingBoxData>((re *)"operator()", 149, *a2);
}

void *re::internal::Callable<re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::PersistentDynamicBoundingBoxData,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::DynamicBoundingBoxComponent::PersistentDynamicBoundingBoxData*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::cloneInto(uint64_t a1, void *a2)
{
  __n128 result = a2;
  *a2 = &unk_26E6E9E30;
  return result;
}

void *re::internal::Callable<re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::PersistentDynamicBoundingBoxData,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::DynamicBoundingBoxComponent::PersistentDynamicBoundingBoxData*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::moveInto(uint64_t a1, void *a2)
{
  __n128 result = a2;
  *a2 = &unk_26E6E9E30;
  return result;
}

uint64_t re::internal::Callable<re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::PersistentDynamicBoundingBoxData,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::DynamicBoundingBoxComponent::PersistentDynamicBoundingBoxData*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::size()
{
  return 16;
}

id *re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::DynamicBoundingBoxData,re::FrameManager>::~FramePersistentPtr(id *a1)
{
  void v5[5] = *MEMORY[0x263EF8340];
  inited = (re *)objc_initWeak(&location, 0);
  memset(v5, 0, 24);
  v5[3] = re::globalAllocators(inited)[2];
  void v5[4] = 0;
  re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::DynamicBoundingBoxData,re::FrameManager>::reset(a1, &location, 0, (uint64_t)v5);
  re::FunctionBase<24ul,void ()(void *)>::destroyCallable((uint64_t)v5);
  objc_destroyWeak(&location);
  id location = 0;
  re::FunctionBase<24ul,void ()(void *)>::destroyCallable((uint64_t)(a1 + 2));
  objc_destroyWeak(a1);
  *a1 = 0;
  return a1;
}

uint64_t re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::DynamicBoundingBoxData,re::FrameManager>::reset(id *location, id *a2, void *a3, uint64_t a4)
{
  v18[5] = *MEMORY[0x263EF8340];
  if (location[1])
  {
    id WeakRetained = objc_loadWeakRetained(location);
    if (WeakRetained)
    {
      uint64_t v9 = WeakRetained;

      if (!location[6])
      {
        uint64_t v11 = re::globalAllocators(v10)[2];
        v18[0] = &unk_26E6E9E88;
        v18[3] = v11;
        uint64_t v18[4] = v18;
        re::FunctionBase<24ul,void ()(void *)>::operator=<24ul>((uint64_t)(location + 2), (uint64_t)v18);
        uint64_t v10 = (re *)re::FunctionBase<24ul,void ()(void *)>::destroyCallable((uint64_t)v18);
      }
      long long v12 = re::globalAllocators(v10);
      unint64_t v13 = v9[2] & 0xFFFFFFFFFFFFFFFLL | ((unint64_t)v9[1] << 60);
      id v14 = location[1];
      uint64_t v15 = re::PerFrameAllocatorManager::perFrameAllocator(v12[6], v13);
      (*(void (**)(uint64_t, id, id *))(*(void *)v15 + 16))(v15, v14, location + 2);
    }
    else
    {
      id v16 = location[6];
      if (v16)
      {
        v18[0] = location[1];
        (*(void (**)(id, void *))(*(void *)v16 + 16))(v16, v18);
      }
      else
      {
        re::internal::destroyPersistent<re::ecs2::DynamicBoundingBoxComponent::DynamicBoundingBoxData>((re *)"reset", 161, (uint64_t)location[1]);
      }
    }
  }
  re::ArcWeakPtr<re::VideoHistogram>::operator=(location, a2);
  location[1] = a3;
  return re::FunctionBase<24ul,void ()(void *)>::operator=<24ul>((uint64_t)(location + 2), a4);
}

re *re::internal::destroyPersistent<re::ecs2::DynamicBoundingBoxComponent::DynamicBoundingBoxData>(re *result, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v4 = re::globalAllocators(result)[2];
    re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a3 + 168);
    re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a3 + 96);
    re::DynamicArray<unsigned long>::deinit(a3 + 40);
    re::DynamicArray<unsigned long>::deinit(a3);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 40);
    return (re *)v5(v4, a3);
  }
  return result;
}

void re::internal::Callable<re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::DynamicBoundingBoxData,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::DynamicBoundingBoxComponent::DynamicBoundingBoxData*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::~Callable()
{
}

re *re::internal::Callable<re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::DynamicBoundingBoxData,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::DynamicBoundingBoxComponent::DynamicBoundingBoxData*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::operator()(uint64_t a1, uint64_t *a2)
{
  return re::internal::destroyPersistent<re::ecs2::DynamicBoundingBoxComponent::DynamicBoundingBoxData>((re *)"operator()", 149, *a2);
}

void *re::internal::Callable<re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::DynamicBoundingBoxData,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::DynamicBoundingBoxComponent::DynamicBoundingBoxData*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::cloneInto(uint64_t a1, void *a2)
{
  __n128 result = a2;
  *a2 = &unk_26E6E9E88;
  return result;
}

void *re::internal::Callable<re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::DynamicBoundingBoxData,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::DynamicBoundingBoxComponent::DynamicBoundingBoxData*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::moveInto(uint64_t a1, void *a2)
{
  __n128 result = a2;
  *a2 = &unk_26E6E9E88;
  return result;
}

uint64_t re::internal::Callable<re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::DynamicBoundingBoxData,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::DynamicBoundingBoxComponent::DynamicBoundingBoxData*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::size()
{
  return 16;
}

id *re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::BoundingBoxBufferInputs,re::FrameManager>::~FramePersistentPtr(id *a1)
{
  void v5[5] = *MEMORY[0x263EF8340];
  inited = (re *)objc_initWeak(&location, 0);
  memset(v5, 0, 24);
  v5[3] = re::globalAllocators(inited)[2];
  void v5[4] = 0;
  re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::BoundingBoxBufferInputs,re::FrameManager>::reset(a1, &location, 0, (uint64_t)v5);
  re::FunctionBase<24ul,void ()(void *)>::destroyCallable((uint64_t)v5);
  objc_destroyWeak(&location);
  id location = 0;
  re::FunctionBase<24ul,void ()(void *)>::destroyCallable((uint64_t)(a1 + 2));
  objc_destroyWeak(a1);
  *a1 = 0;
  return a1;
}

uint64_t re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::BoundingBoxBufferInputs,re::FrameManager>::reset(id *location, id *a2, void *a3, uint64_t a4)
{
  v18[5] = *MEMORY[0x263EF8340];
  if (location[1])
  {
    id WeakRetained = objc_loadWeakRetained(location);
    if (WeakRetained)
    {
      uint64_t v9 = WeakRetained;

      if (!location[6])
      {
        uint64_t v11 = re::globalAllocators(v10)[2];
        v18[0] = &unk_26E6E9EE0;
        v18[3] = v11;
        uint64_t v18[4] = v18;
        re::FunctionBase<24ul,void ()(void *)>::operator=<24ul>((uint64_t)(location + 2), (uint64_t)v18);
        uint64_t v10 = (re *)re::FunctionBase<24ul,void ()(void *)>::destroyCallable((uint64_t)v18);
      }
      long long v12 = re::globalAllocators(v10);
      unint64_t v13 = v9[2] & 0xFFFFFFFFFFFFFFFLL | ((unint64_t)v9[1] << 60);
      id v14 = location[1];
      uint64_t v15 = re::PerFrameAllocatorManager::perFrameAllocator(v12[6], v13);
      (*(void (**)(uint64_t, id, id *))(*(void *)v15 + 16))(v15, v14, location + 2);
    }
    else
    {
      id v16 = location[6];
      if (v16)
      {
        v18[0] = location[1];
        (*(void (**)(id, void *))(*(void *)v16 + 16))(v16, v18);
      }
      else
      {
        re::internal::destroyPersistent<re::ecs2::DynamicBoundingBoxComponent::BoundingBoxBufferInputs>((re *)"reset", 161, (uint64_t)location[1]);
      }
    }
  }
  re::ArcWeakPtr<re::VideoHistogram>::operator=(location, a2);
  location[1] = a3;
  return re::FunctionBase<24ul,void ()(void *)>::operator=<24ul>((uint64_t)(location + 2), a4);
}

re *re::internal::destroyPersistent<re::ecs2::DynamicBoundingBoxComponent::BoundingBoxBufferInputs>(re *result, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v4 = re::globalAllocators(result)[2];
    re::FixedArray<re::PerFrameSparseCircularBuffer<re::BoundingBoxBuffer,8>>::deinit((void *)(a3 + 32));
    re::FixedArray<CoreIKTransform>::deinit((uint64_t *)(a3 + 8));
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 40);
    return (re *)v5(v4, a3);
  }
  return result;
}

void re::internal::Callable<re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::BoundingBoxBufferInputs,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::DynamicBoundingBoxComponent::BoundingBoxBufferInputs*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::~Callable()
{
}

re *re::internal::Callable<re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::BoundingBoxBufferInputs,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::DynamicBoundingBoxComponent::BoundingBoxBufferInputs*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::operator()(uint64_t a1, uint64_t *a2)
{
  return re::internal::destroyPersistent<re::ecs2::DynamicBoundingBoxComponent::BoundingBoxBufferInputs>((re *)"operator()", 149, *a2);
}

void *re::internal::Callable<re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::BoundingBoxBufferInputs,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::DynamicBoundingBoxComponent::BoundingBoxBufferInputs*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::cloneInto(uint64_t a1, void *a2)
{
  __n128 result = a2;
  *a2 = &unk_26E6E9EE0;
  return result;
}

void *re::internal::Callable<re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::BoundingBoxBufferInputs,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::DynamicBoundingBoxComponent::BoundingBoxBufferInputs*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::moveInto(uint64_t a1, void *a2)
{
  __n128 result = a2;
  *a2 = &unk_26E6E9EE0;
  return result;
}

uint64_t re::internal::Callable<re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::BoundingBoxBufferInputs,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::DynamicBoundingBoxComponent::BoundingBoxBufferInputs*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::size()
{
  return 16;
}

void *re::FixedArray<re::PerFrameSparseCircularBuffer<re::BoundingBoxBuffer,8ll>>::deinit(void *result)
{
  if (*result)
  {
    int v1 = result;
    uint64_t v3 = result + 1;
    uint64_t v2 = result[1];
    if (v2)
    {
      uint64_t v4 = result[2];
      uint64_t v5 = v4 + 136 * v2;
      do
      {
        uint64_t v6 = v4;
        v4 += 136;
        for (uint64_t i = 128; i != 64; i -= 8)
        {
          long long v8 = *(void **)(v6 + i);
          if (v8)
          {

            *(void *)(v6 + i) = 0;
          }
        }
      }
      while (v4 != v5);
      __n128 result = (void *)(*(uint64_t (**)(void, void))(*(void *)*v1 + 40))(*v1, v1[2]);
      *uint64_t v3 = 0;
      v3[1] = 0;
    }
    *int v1 = 0;
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6E9F38;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        long long v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DynamicBoundingBoxComponent>;
    uint64_t v7 = 0;
    long long v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>*,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DynamicBoundingBoxComponent>;
    uint64_t v7 = 0;
    long long v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>*,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DynamicBoundingBoxComponent>;
    uint64_t v7 = 0;
    long long v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>*,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DynamicBoundingBoxComponent>;
    uint64_t v7 = 0;
    long long v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>*,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DynamicBoundingBoxComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>*,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DynamicBoundingBoxComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>*,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DynamicBoundingBoxComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>*,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DynamicBoundingBoxComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>*,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DynamicBoundingBoxComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DynamicBoundingBoxComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DynamicBoundingBoxComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DynamicBoundingBoxComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>*,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::DynamicTextComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::DynamicTextComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::DynamicTextComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::DynamicTextComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void *re::ecs2::ComponentType<re::ecs2::DynamicTextComponent>::doMakeComponent@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::DynamicTextComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::DynamicTextComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 128, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6EA050;
  *(_OWORD *)(v2 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  double result = re::DynamicString::setCapacity((void *)(v2 + 32), 0);
  *(_DWORD *)(v2 + 64) = 0;
  *(void *)(v2 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(void *)(v2 + 80) = 0;
  *(void *)(v2 + 96) = 0x3F8000003F800000;
  *(void *)(v2 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0x3F8000003F800000;
  *(void *)(v2 + 88) = 0;
  *(unsigned char *)(v2 + 112) = 0;
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DynamicTextComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EA0D8;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DynamicTextComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82960, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82960))
  {
    qword_26AF82958 = re::ecs2::introspect_DynamicTextComponent(0);
    __cxa_guard_release(&qword_26AF82960);
  }
  return qword_26AF82958;
}

__n128 re::ecs2::ComponentType<re::ecs2::DynamicTextComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DynamicTextComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::DynamicTextComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6E9FE0;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::DynamicTextComponent::~DynamicTextComponent(re::ecs2::DynamicTextComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  re::AssetHandle::~AssetHandle((re::ecs2::DynamicTextComponent *)((char *)this + 72));
  re::DynamicString::deinit((re::ecs2::DynamicTextComponent *)((char *)this + 32));
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::DynamicTextComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::DynamicTextComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::DynamicTextComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::DynamicTextComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::DynamicTextComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EA0D8;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DynamicTextComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>,re::Slice<re::ecs2::DynamicTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>*,re::Slice<re::ecs2::DynamicTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>,re::Slice<re::ecs2::DynamicTextComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicTextComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DynamicTextComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>,re::Slice<re::ecs2::DynamicTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>*,re::Slice<re::ecs2::DynamicTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>,re::Slice<re::ecs2::DynamicTextComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicTextComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DynamicTextComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>,re::Slice<re::ecs2::DynamicTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>*,re::Slice<re::ecs2::DynamicTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>,re::Slice<re::ecs2::DynamicTextComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicTextComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DynamicTextComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>,re::Slice<re::ecs2::DynamicTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>*,re::Slice<re::ecs2::DynamicTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>,re::Slice<re::ecs2::DynamicTextComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicTextComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DynamicTextComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>,re::Slice<re::ecs2::DynamicTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>*,re::Slice<re::ecs2::DynamicTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>,re::Slice<re::ecs2::DynamicTextComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicTextComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DynamicTextComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>,re::Slice<re::ecs2::DynamicTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>*,re::Slice<re::ecs2::DynamicTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>,re::Slice<re::ecs2::DynamicTextComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicTextComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DynamicTextComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>,re::Slice<re::ecs2::DynamicTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>*,re::Slice<re::ecs2::DynamicTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>,re::Slice<re::ecs2::DynamicTextComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicTextComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DynamicTextComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>,re::Slice<re::ecs2::DynamicTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>*,re::Slice<re::ecs2::DynamicTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>,re::Slice<re::ecs2::DynamicTextComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicTextComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DynamicTextComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DynamicTextComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DynamicTextComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DynamicTextComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>,re::Slice<re::ecs2::DynamicTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>*,re::Slice<re::ecs2::DynamicTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>,re::Slice<re::ecs2::DynamicTextComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicTextComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::EDRColorManagementComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::EDRColorManagementComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::EDRColorManagementComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::EDRColorManagementComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::EDRColorManagementComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::EDRColorManagementComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::EDRColorManagementComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 40, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(void *)(v2 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6EA1F0;
  *(void *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::EDRColorManagementComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EA278;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::EDRColorManagementComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82970, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82970))
  {
    qword_26AF82968 = re::ecs2::introspect_EDRColorManagementComponent(0);
    __cxa_guard_release(&qword_26AF82970);
  }
  return qword_26AF82968;
}

__n128 re::ecs2::ComponentType<re::ecs2::EDRColorManagementComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::EDRColorManagementComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::EDRColorManagementComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EA180;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::EDRColorManagementComponent::~EDRColorManagementComponent(re::ecs2::EDRColorManagementComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::EDRColorManagementComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::EDRColorManagementComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::EDRColorManagementComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::EDRColorManagementComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::EDRColorManagementComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EA278;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::EDRColorManagementComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>,re::Slice<re::ecs2::EDRColorManagementComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>*,re::Slice<re::ecs2::EDRColorManagementComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>,re::Slice<re::ecs2::EDRColorManagementComponent*>>::Subscription const&,re::Slice<re::ecs2::EDRColorManagementComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::EDRColorManagementComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>,re::Slice<re::ecs2::EDRColorManagementComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>*,re::Slice<re::ecs2::EDRColorManagementComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>,re::Slice<re::ecs2::EDRColorManagementComponent*>>::Subscription const&,re::Slice<re::ecs2::EDRColorManagementComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::EDRColorManagementComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>,re::Slice<re::ecs2::EDRColorManagementComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>*,re::Slice<re::ecs2::EDRColorManagementComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>,re::Slice<re::ecs2::EDRColorManagementComponent*>>::Subscription const&,re::Slice<re::ecs2::EDRColorManagementComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::EDRColorManagementComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>,re::Slice<re::ecs2::EDRColorManagementComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>*,re::Slice<re::ecs2::EDRColorManagementComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>,re::Slice<re::ecs2::EDRColorManagementComponent*>>::Subscription const&,re::Slice<re::ecs2::EDRColorManagementComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::EDRColorManagementComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>,re::Slice<re::ecs2::EDRColorManagementComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>*,re::Slice<re::ecs2::EDRColorManagementComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>,re::Slice<re::ecs2::EDRColorManagementComponent*>>::Subscription const&,re::Slice<re::ecs2::EDRColorManagementComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::EDRColorManagementComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>,re::Slice<re::ecs2::EDRColorManagementComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>*,re::Slice<re::ecs2::EDRColorManagementComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>,re::Slice<re::ecs2::EDRColorManagementComponent*>>::Subscription const&,re::Slice<re::ecs2::EDRColorManagementComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::EDRColorManagementComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>,re::Slice<re::ecs2::EDRColorManagementComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>*,re::Slice<re::ecs2::EDRColorManagementComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>,re::Slice<re::ecs2::EDRColorManagementComponent*>>::Subscription const&,re::Slice<re::ecs2::EDRColorManagementComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::EDRColorManagementComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>,re::Slice<re::ecs2::EDRColorManagementComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>*,re::Slice<re::ecs2::EDRColorManagementComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>,re::Slice<re::ecs2::EDRColorManagementComponent*>>::Subscription const&,re::Slice<re::ecs2::EDRColorManagementComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::EDRColorManagementComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::EDRColorManagementComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::EDRColorManagementComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::EDRColorManagementComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>,re::Slice<re::ecs2::EDRColorManagementComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>*,re::Slice<re::ecs2::EDRColorManagementComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>,re::Slice<re::ecs2::EDRColorManagementComponent*>>::Subscription const&,re::Slice<re::ecs2::EDRColorManagementComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::HingeJointComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::HingeJointComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::HingeJointComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::HingeJointComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

id re::ecs2::ComponentType<re::ecs2::HingeJointComponent>::doMakeComponent@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::HingeJointComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::HingeJointComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 176, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E5E30;
  objc_initWeak((id *)(v2 + 32), 0);
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = 0;
  re::ecs2::EntityHandle::reset((re::ecs2::EntityHandle *)(v2 + 32));
  objc_initWeak((id *)(v2 + 56), 0);
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  re::ecs2::EntityHandle::reset((re::ecs2::EntityHandle *)(v2 + 56));
  *(_OWORD *)(v2 + 80) = 0u;
  *(void *)(v2 + 96) = 0;
  *(void *)(v2 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0x3F80000000000000;
  *(_OWORD *)(v2 + 112) = 0u;
  *(void *)(v2 + 128) = 0;
  *(void *)(v2 + 136) = 0x3F80000000000000;
  *(unsigned char *)(v2 + 144) = 1;
  *(void *)(v2 + 152) = 0;
  id result = objc_initWeak((id *)(v2 + 160), 0);
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::HingeJointComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EA390;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::HingeJointComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82980, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82980))
  {
    qword_26AF82978 = re::ecs2::introspect_HingeJointComponent(0);
    __cxa_guard_release(&qword_26AF82980);
  }
  return qword_26AF82978;
}

__n128 re::ecs2::ComponentType<re::ecs2::HingeJointComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::HingeJointComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::HingeJointComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EA320;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EA390;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::HingeJointComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>,re::Slice<re::ecs2::HingeJointComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>*,re::Slice<re::ecs2::HingeJointComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>,re::Slice<re::ecs2::HingeJointComponent*>>::Subscription const&,re::Slice<re::ecs2::HingeJointComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::HingeJointComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>,re::Slice<re::ecs2::HingeJointComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>*,re::Slice<re::ecs2::HingeJointComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>,re::Slice<re::ecs2::HingeJointComponent*>>::Subscription const&,re::Slice<re::ecs2::HingeJointComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::HingeJointComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>,re::Slice<re::ecs2::HingeJointComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>*,re::Slice<re::ecs2::HingeJointComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>,re::Slice<re::ecs2::HingeJointComponent*>>::Subscription const&,re::Slice<re::ecs2::HingeJointComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::HingeJointComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>,re::Slice<re::ecs2::HingeJointComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>*,re::Slice<re::ecs2::HingeJointComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>,re::Slice<re::ecs2::HingeJointComponent*>>::Subscription const&,re::Slice<re::ecs2::HingeJointComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::HingeJointComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>,re::Slice<re::ecs2::HingeJointComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>*,re::Slice<re::ecs2::HingeJointComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>,re::Slice<re::ecs2::HingeJointComponent*>>::Subscription const&,re::Slice<re::ecs2::HingeJointComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::HingeJointComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>,re::Slice<re::ecs2::HingeJointComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>*,re::Slice<re::ecs2::HingeJointComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>,re::Slice<re::ecs2::HingeJointComponent*>>::Subscription const&,re::Slice<re::ecs2::HingeJointComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::HingeJointComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>,re::Slice<re::ecs2::HingeJointComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>*,re::Slice<re::ecs2::HingeJointComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>,re::Slice<re::ecs2::HingeJointComponent*>>::Subscription const&,re::Slice<re::ecs2::HingeJointComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::HingeJointComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>,re::Slice<re::ecs2::HingeJointComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>*,re::Slice<re::ecs2::HingeJointComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>,re::Slice<re::ecs2::HingeJointComponent*>>::Subscription const&,re::Slice<re::ecs2::HingeJointComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::HingeJointComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::HingeJointComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::HingeJointComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::HingeJointComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>,re::Slice<re::ecs2::HingeJointComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>*,re::Slice<re::ecs2::HingeJointComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>,re::Slice<re::ecs2::HingeJointComponent*>>::Subscription const&,re::Slice<re::ecs2::HingeJointComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ImageBasedLightComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ImageBasedLightComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ImageBasedLightComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::ImageBasedLightComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::ImageBasedLightComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (void *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::ImageBasedLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                       + 7)
                                                                    + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::ImageBasedLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 1360, 0);
  bzero(v2, 0x550uLL);
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  v2[2] = 0;
  *((unsigned char *)v2 + 24) = 0;
  *uint64_t v2 = &unk_26E6EA4A8;
  *(void *)((char *)v2 + 28) = 0;
  *(void *)((char *)v2 + 140) = 0;
  *(_OWORD *)(v2 + 5) = 0u;
  *(_OWORD *)(v2 + 7) = 0u;
  *(_OWORD *)(v2 + 9) = 0u;
  *(_OWORD *)(v2 + 11) = 0u;
  *(_OWORD *)(v2 + 13) = 0u;
  *(_OWORD *)(v2 + 15) = 0u;
  *((_WORD *)v2 + 68) = 0;
  *((unsigned char *)v2 + 148) = 1;
  *((unsigned char *)v2 + 152) = 0;
  *((_OWORD *)v2 + 73) = 0u;
  *((_OWORD *)v2 + 74) = 0u;
  re::DynamicString::setCapacity(v2 + 146, 0);
  *((_WORD *)v2 + 604) = 0;
  v2[150] = 0;
  *((_OWORD *)v2 + 76) = xmmword_23435FD50;
  *((_OWORD *)v2 + 77) = xmmword_23435FD60;
  *((_OWORD *)v2 + 78) = xmmword_23435FD80;
  v2[158] = 0;
  double result = 0.0;
  *((_OWORD *)v2 + 80) = 0u;
  *((unsigned char *)v2 + 1296) = 0;
  *(_OWORD *)(v2 + 163) = 0u;
  *(_OWORD *)(v2 + 165) = 0u;
  *(_OWORD *)((char *)v2 + 13re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0u;
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ImageBasedLightComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EA530;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ImageBasedLightComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82990, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82990))
  {
    qword_26AF82988 = re::ecs2::introspect_ImageBasedLightComponent(0);
    __cxa_guard_release(&qword_26AF82990);
  }
  return qword_26AF82988;
}

__n128 re::ecs2::ComponentType<re::ecs2::ImageBasedLightComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ImageBasedLightComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ImageBasedLightComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EA438;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::ImageBasedLightComponent::~ImageBasedLightComponent(re::ecs2::ImageBasedLightComponent *this)
{
  re::ecs2::ImageBasedLightComponent::~ImageBasedLightComponent(this);
  JUMPOUT(0x237DBCBD0);
}

{
  void *v2;
  void *v3;
  double v4;

  *(void *)this = &unk_26E6EA4A8;
  uint64_t v2 = (void *)*((void *)this + 165);
  if (v2)
  {

    *((void *)this + 165) = 0;
  }
  uint64_t v3 = (void *)*((void *)this + 164);
  if (v3)
  {

    *((void *)this + 164) = 0;
  }
  long long v4 = re::DynamicString::deinit((re::ecs2::ImageBasedLightComponent *)((char *)this + 1168));
  if (*((unsigned char *)this + 152)) {
    (**((void (***)(double))this + 20))(v4);
  }
  re::AssetHandle::~AssetHandle((re::ecs2::ImageBasedLightComponent *)((char *)this + 112));
  re::AssetHandle::~AssetHandle((re::ecs2::ImageBasedLightComponent *)((char *)this + 88));
  re::AssetHandle::~AssetHandle((re::ecs2::ImageBasedLightComponent *)((char *)this + 64));
  re::AssetHandle::~AssetHandle((re::ecs2::ImageBasedLightComponent *)((char *)this + 40));
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ImageBasedLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::ImageBasedLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ImageBasedLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::ImageBasedLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::ImageBasedLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EA530;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ImageBasedLightComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>,re::Slice<re::ecs2::ImageBasedLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>*,re::Slice<re::ecs2::ImageBasedLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>,re::Slice<re::ecs2::ImageBasedLightComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedLightComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ImageBasedLightComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>,re::Slice<re::ecs2::ImageBasedLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>*,re::Slice<re::ecs2::ImageBasedLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>,re::Slice<re::ecs2::ImageBasedLightComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedLightComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ImageBasedLightComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>,re::Slice<re::ecs2::ImageBasedLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>*,re::Slice<re::ecs2::ImageBasedLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>,re::Slice<re::ecs2::ImageBasedLightComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedLightComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ImageBasedLightComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>,re::Slice<re::ecs2::ImageBasedLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>*,re::Slice<re::ecs2::ImageBasedLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>,re::Slice<re::ecs2::ImageBasedLightComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedLightComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ImageBasedLightComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>,re::Slice<re::ecs2::ImageBasedLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>*,re::Slice<re::ecs2::ImageBasedLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>,re::Slice<re::ecs2::ImageBasedLightComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ImageBasedLightComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>,re::Slice<re::ecs2::ImageBasedLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>*,re::Slice<re::ecs2::ImageBasedLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>,re::Slice<re::ecs2::ImageBasedLightComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ImageBasedLightComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>,re::Slice<re::ecs2::ImageBasedLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>*,re::Slice<re::ecs2::ImageBasedLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>,re::Slice<re::ecs2::ImageBasedLightComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ImageBasedLightComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>,re::Slice<re::ecs2::ImageBasedLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>*,re::Slice<re::ecs2::ImageBasedLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>,re::Slice<re::ecs2::ImageBasedLightComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ImageBasedLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ImageBasedLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ImageBasedLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ImageBasedLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>,re::Slice<re::ecs2::ImageBasedLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>*,re::Slice<re::ecs2::ImageBasedLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>,re::Slice<re::ecs2::ImageBasedLightComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedLightComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ImageBasedLightReceiverComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ImageBasedLightReceiverComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ImageBasedLightReceiverComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::ImageBasedLightReceiverComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::ImageBasedLightReceiverComponent>::doMakeComponent(uint64_t *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::ImageBasedLightReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::ImageBasedLightReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 64, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6EA648;
  objc_initWeak((id *)(v2 + 32), 0);
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = 0;
  re::ecs2::EntityHandle::reset((re::ecs2::EntityHandle *)(v2 + 32));
  *(void *)(v2 + 56) = 0;
  *a1 = v2;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ImageBasedLightReceiverComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EA6D0;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ImageBasedLightReceiverComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF829A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF829A0))
  {
    qword_26AF82998 = re::ecs2::introspect_ImageBasedLightReceiverComponent(0);
    __cxa_guard_release(&qword_26AF829A0);
  }
  return qword_26AF82998;
}

__n128 re::ecs2::ComponentType<re::ecs2::ImageBasedLightReceiverComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ImageBasedLightReceiverComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ImageBasedLightReceiverComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EA5D8;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::ImageBasedLightReceiverComponent::~ImageBasedLightReceiverComponent(re::ecs2::ImageBasedLightReceiverComponent *this)
{
  *(void *)this = &unk_26E6EA648;
  uint64_t v2 = (id *)((char *)this + 32);
  re::ecs2::EntityHandle::reset((re::ecs2::ImageBasedLightReceiverComponent *)((char *)this + 32));
  objc_destroyWeak(v2);
  *((void *)this + 4) = 0;
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  id *v2;
  uint64_t vars8;

  *(void *)this = &unk_26E6EA648;
  uint64_t v2 = (id *)((char *)this + 32);
  re::ecs2::EntityHandle::reset((re::ecs2::ImageBasedLightReceiverComponent *)((char *)this + 32));
  objc_destroyWeak(v2);
  *((void *)this + 4) = 0;
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ImageBasedLightReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::ImageBasedLightReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ImageBasedLightReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::ImageBasedLightReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::ImageBasedLightReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EA6D0;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ImageBasedLightReceiverComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>*,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ImageBasedLightReceiverComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>*,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ImageBasedLightReceiverComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>*,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ImageBasedLightReceiverComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>*,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ImageBasedLightReceiverComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>*,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ImageBasedLightReceiverComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>*,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ImageBasedLightReceiverComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>*,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ImageBasedLightReceiverComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>*,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ImageBasedLightReceiverComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ImageBasedLightReceiverComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ImageBasedLightReceiverComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ImageBasedLightReceiverComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>*,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::KeyValueComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::KeyValueComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::KeyValueComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::KeyValueComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::KeyValueComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (void *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::KeyValueComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                       + 7)
                                                                    + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::KeyValueComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 808, 0);
  bzero(v2, 0x328uLL);
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  v2[2] = 0;
  *((unsigned char *)v2 + 24) = 0;
  *uint64_t v2 = &unk_26E6EA7E8;
  v2[4] = &unk_26E700E88;
  double result = 0.0;
  *(_OWORD *)(v2 + 5) = 0u;
  *(_OWORD *)(v2 + 7) = 0u;
  *((_DWORD *)v2 + 18) = 0;
  *(void *)((char *)v2 + 76) = 0x7FFFFFFFLL;
  *(_OWORD *)(v2 + 11) = 0u;
  *(_OWORD *)(v2 + 13) = 0u;
  *((_DWORD *)v2 + 30) = 0;
  *(void *)((char *)v2 + 124) = 0x7FFFFFFFLL;
  *(_OWORD *)(v2 + 17) = 0u;
  *(_OWORD *)(v2 + re::ecs2::BasicComponentStates<re::ecs2::BlendShapeWeightsBufferComponent>::~BasicComponentStates((void *)this + 19) = 0u;
  *((_DWORD *)v2 + 42) = 0;
  *(void *)((char *)v2 + 1re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0x7FFFFFFFLL;
  *(_OWORD *)(v2 + 23) = 0u;
  *(_OWORD *)(v2 + 25) = 0u;
  *((_DWORD *)v2 + 54) = 0;
  *(void *)((char *)v2 + 2objc_destroyWeak(this + 20) = 0x7FFFFFFFLL;
  *(_OWORD *)(v2 + 29) = 0u;
  *(_OWORD *)(v2 + 31) = 0u;
  *((_DWORD *)v2 + 66) = 0;
  *(_OWORD *)(v2 + 35) = 0u;
  *(void *)((char *)v2 + 268) = 0x7FFFFFFFLL;
  *((_DWORD *)v2 + 78) = 0;
  *(_OWORD *)(v2 + 37) = 0u;
  *(void *)((char *)v2 + 316) = 0x7FFFFFFFLL;
  *(_OWORD *)(v2 + 41) = 0u;
  *(_OWORD *)(v2 + 43) = 0u;
  *((_DWORD *)v2 + 90) = 0;
  *(void *)((char *)v2 + 364) = 0x7FFFFFFFLL;
  *(_OWORD *)(v2 + 47) = 0u;
  *(_OWORD *)(v2 + 49) = 0u;
  *((_DWORD *)v2 + 102) = 0;
  *(void *)((char *)v2 + 412) = 0x7FFFFFFFLL;
  *(_OWORD *)(v2 + 53) = 0u;
  *(_OWORD *)(v2 + 55) = 0u;
  *((_DWORD *)v2 + 114) = 0;
  *(void *)((char *)v2 + 460) = 0x7FFFFFFFLL;
  *((_DWORD *)v2 + 126) = 0;
  *(_OWORD *)(v2 + 59) = 0u;
  *(_OWORD *)(v2 + 61) = 0u;
  *(void *)((char *)v2 + 508) = 0x7FFFFFFFLL;
  *((_DWORD *)v2 + 138) = 0;
  *(_OWORD *)(v2 + 65) = 0u;
  *(_OWORD *)(v2 + 67) = 0u;
  *(void *)((char *)v2 + 556) = 0x7FFFFFFFLL;
  *((_DWORD *)v2 + 150) = 0;
  *(_OWORD *)(v2 + 71) = 0u;
  *(_OWORD *)(v2 + 73) = 0u;
  *(void *)((char *)v2 + 604) = 0x7FFFFFFFLL;
  *((_DWORD *)v2 + 162) = 0;
  *(_OWORD *)(v2 + 77) = 0u;
  *(_OWORD *)(v2 + 79) = 0u;
  *(void *)((char *)v2 + 652) = 0x7FFFFFFFLL;
  *(_OWORD *)(v2 + 83) = 0u;
  *(_OWORD *)(v2 + 85) = 0u;
  *((_DWORD *)v2 + 174) = 0;
  *(void *)((char *)v2 + 700) = 0x7FFFFFFFLL;
  *((_DWORD *)v2 + 186) = 0;
  *(_OWORD *)(v2 + 89) = 0u;
  *(_OWORD *)(v2 + 91) = 0u;
  *(void *)((char *)v2 + 748) = 0x7FFFFFFFLL;
  *((_DWORD *)v2 + 198) = 0;
  *(_OWORD *)(v2 + 95) = 0u;
  *(_OWORD *)(v2 + 97) = 0u;
  *(void *)((char *)v2 + 796) = 0x7FFFFFFFLL;
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::KeyValueComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EA870;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::KeyValueComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF829B0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF829B0))
  {
    qword_26AF829A8 = re::ecs2::introspect_KeyValueComponent(0);
    __cxa_guard_release(&qword_26AF829B0);
  }
  return qword_26AF829A8;
}

__n128 re::ecs2::ComponentType<re::ecs2::KeyValueComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::KeyValueComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::KeyValueComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EA778;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::KeyValueComponent::~KeyValueComponent(re::ecs2::KeyValueComponent *this)
{
  *(void *)this = &unk_26E6EA7E8;
  re::KeyValueStore::~KeyValueStore((re::ecs2::KeyValueComponent *)((char *)this + 32));
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6EA7E8;
  re::KeyValueStore::~KeyValueStore((re::ecs2::KeyValueComponent *)((char *)this + 32));
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::KeyValueComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::KeyValueComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::KeyValueComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return 5;
}

void *re::ecs2::ComponentImpl<re::ecs2::KeyValueComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::KeyValueComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::KeyValueStore::~KeyValueStore(re::KeyValueStore *this)
{
  *(void *)this = &unk_26E700E88;
  uint64_t v2 = (uint64_t *)((char *)this + 8);
  re::HashTable<re::StringID,re::BlendShapeWeights,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)this + 91);
  re::HashTable<re::StringID,re::DataArrayHandle<re::RigGraphOperatorDefinition>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)this + 85);
  re::HashTable<re::StringID,re::DynamicArray<re::Vector3<float>>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)this + 79);
  re::HashTable<re::StringID,re::DynamicArray<re::Vector3<float>>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)this + 73);
  re::HashTable<re::StringID,re::SkeletalPose,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)this + 67);
  re::HashTable<re::StringID,re::DynamicString,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)this + 61);
  re::HashTable<re::StringID,re::GenericSRT<float>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)this + 55);
  re::HashTable<re::StringID,re::DeformationAttributeData,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)this + 49);
  re::HashTable<re::StringID,re::DeformationAttributeData,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)this + 43);
  re::HashTable<re::StringID,re::DeformationAttributeData,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)this + 37);
  re::HashTable<re::StringID,re::DataArrayHandle<re::RigGraphOperatorDefinition>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)this + 31);
  re::HashTable<re::StringID,re::DataArrayHandle<re::RigGraphOperatorDefinition>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)this + 25);
  re::HashTable<re::StringID,re::DataArrayHandle<re::RigGraphOperatorDefinition>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)this + 19);
  re::HashTable<re::StringID,re::DataArrayHandle<re::RigGraphOperatorDefinition>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)this + 13);
  re::HashTable<re::StringID,re::DataArrayHandle<re::RigGraphOperatorDefinition>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)this + 7);
  re::HashTable<re::StringID,re::DataArrayHandle<re::RigGraphOperatorDefinition>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit(v2);
}

double re::HashTable<re::StringID,re::BlendShapeWeights,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2)
  {
    if (*((_DWORD *)a1 + 8))
    {
      uint64_t v3 = 0;
      unint64_t v4 = 0;
      do
      {
        re::HashTable<re::StringID,re::BlendShapeWeights,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::EntryWithoutHash::free((_DWORD *)(a1[2] + v3));
        ++v4;
        v3 += 56;
      }
      while (v4 < *((unsigned int *)a1 + 8));
      uint64_t v2 = *a1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)v2 + 40))(v2, a1[1]);
    *((_DWORD *)a1 + 8) = 0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
    *(void *)&double result = 0x7FFFFFFFLL;
    *(uint64_t *)((char *)a1 + 36) = 0x7FFFFFFFLL;
  }
  return result;
}

void re::HashTable<re::StringID,re::BlendShapeWeights,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::EntryWithoutHash::free(_DWORD *a1)
{
  if ((*a1 & 0x80000000) != 0)
  {
    *a1 &= ~0x80000000;
    re::StringID::destroyString((re::StringID *)(a1 + 2));
    re::BlendShapeWeights::~BlendShapeWeights((re::BlendShapeWeights *)(a1 + 6));
  }
}

double re::HashTable<re::StringID,re::DynamicArray<re::Vector3<float>>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2)
  {
    if (*((_DWORD *)a1 + 8))
    {
      uint64_t v3 = 0;
      unint64_t v4 = 0;
      do
      {
        re::HashTable<re::StringID,re::DynamicArray<re::Vector3<float>>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::EntryWithoutHash::free((_DWORD *)(a1[2] + v3));
        ++v4;
        v3 += 64;
      }
      while (v4 < *((unsigned int *)a1 + 8));
      uint64_t v2 = *a1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)v2 + 40))(v2, a1[1]);
    *((_DWORD *)a1 + 8) = 0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
    *(void *)&double result = 0x7FFFFFFFLL;
    *(uint64_t *)((char *)a1 + 36) = 0x7FFFFFFFLL;
  }
  return result;
}

_DWORD *re::HashTable<re::StringID,re::DynamicArray<re::Vector3<float>>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::EntryWithoutHash::free(_DWORD *result)
{
  if ((*result & 0x80000000) != 0)
  {
    int v1 = result;
    *result &= ~0x80000000;
    re::StringID::destroyString((re::StringID *)(result + 2));
    return (_DWORD *)re::DynamicArray<unsigned long>::deinit((uint64_t)(v1 + 6));
  }
  return result;
}

double re::HashTable<re::StringID,re::SkeletalPose,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2)
  {
    if (*((_DWORD *)a1 + 8))
    {
      uint64_t v3 = 0;
      unint64_t v4 = 0;
      do
      {
        re::HashTable<re::StringID,re::SkeletalPose,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::EntryWithoutHash::free((_DWORD *)(a1[2] + v3));
        ++v4;
        v3 += 112;
      }
      while (v4 < *((unsigned int *)a1 + 8));
      uint64_t v2 = *a1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)v2 + 40))(v2, a1[1]);
    *((_DWORD *)a1 + 8) = 0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
    *(void *)&double result = 0x7FFFFFFFLL;
    *(uint64_t *)((char *)a1 + 36) = 0x7FFFFFFFLL;
  }
  return result;
}

void re::HashTable<re::StringID,re::SkeletalPose,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::EntryWithoutHash::free(_DWORD *a1)
{
  if ((*a1 & 0x80000000) != 0)
  {
    *a1 &= ~0x80000000;
    re::StringID::destroyString((re::StringID *)(a1 + 2));
    re::SkeletalPose::~SkeletalPose((re::SkeletalPose *)(a1 + 6));
  }
}

double re::HashTable<re::StringID,re::GenericSRT<float>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2)
  {
    unint64_t v3 = *((unsigned int *)a1 + 8);
    if (v3)
    {
      uint64_t v4 = 0;
      for (unint64_t i = 0; i < v3; ++i)
      {
        uint64_t v6 = a1[2];
        int v7 = *(_DWORD *)(v6 + v4);
        if (v7 < 0)
        {
          *(_DWORD *)(v6 + v4) = v7 & 0x7FFFFFFF;
          re::StringID::destroyString((re::StringID *)(v6 + v4 + 8));
          unint64_t v3 = *((unsigned int *)a1 + 8);
        }
        v4 += 80;
      }
      uint64_t v2 = *a1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)v2 + 40))(v2, a1[1]);
    *((_DWORD *)a1 + 8) = 0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
    *(void *)&double result = 0x7FFFFFFFLL;
    *(uint64_t *)((char *)a1 + 36) = 0x7FFFFFFFLL;
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EA870;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::KeyValueComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>,re::Slice<re::ecs2::KeyValueComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>*,re::Slice<re::ecs2::KeyValueComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>,re::Slice<re::ecs2::KeyValueComponent*>>::Subscription const&,re::Slice<re::ecs2::KeyValueComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::KeyValueComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>,re::Slice<re::ecs2::KeyValueComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>*,re::Slice<re::ecs2::KeyValueComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>,re::Slice<re::ecs2::KeyValueComponent*>>::Subscription const&,re::Slice<re::ecs2::KeyValueComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::KeyValueComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>,re::Slice<re::ecs2::KeyValueComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>*,re::Slice<re::ecs2::KeyValueComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>,re::Slice<re::ecs2::KeyValueComponent*>>::Subscription const&,re::Slice<re::ecs2::KeyValueComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::KeyValueComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>,re::Slice<re::ecs2::KeyValueComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>*,re::Slice<re::ecs2::KeyValueComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>,re::Slice<re::ecs2::KeyValueComponent*>>::Subscription const&,re::Slice<re::ecs2::KeyValueComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::KeyValueComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>,re::Slice<re::ecs2::KeyValueComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>*,re::Slice<re::ecs2::KeyValueComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>,re::Slice<re::ecs2::KeyValueComponent*>>::Subscription const&,re::Slice<re::ecs2::KeyValueComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::KeyValueComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>,re::Slice<re::ecs2::KeyValueComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>*,re::Slice<re::ecs2::KeyValueComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>,re::Slice<re::ecs2::KeyValueComponent*>>::Subscription const&,re::Slice<re::ecs2::KeyValueComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::KeyValueComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>,re::Slice<re::ecs2::KeyValueComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>*,re::Slice<re::ecs2::KeyValueComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>,re::Slice<re::ecs2::KeyValueComponent*>>::Subscription const&,re::Slice<re::ecs2::KeyValueComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::KeyValueComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>,re::Slice<re::ecs2::KeyValueComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>*,re::Slice<re::ecs2::KeyValueComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>,re::Slice<re::ecs2::KeyValueComponent*>>::Subscription const&,re::Slice<re::ecs2::KeyValueComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::KeyValueComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::KeyValueComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::KeyValueComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::KeyValueComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>,re::Slice<re::ecs2::KeyValueComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>*,re::Slice<re::ecs2::KeyValueComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>,re::Slice<re::ecs2::KeyValueComponent*>>::Subscription const&,re::Slice<re::ecs2::KeyValueComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::LightComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::LightComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::LightComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::LightComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

__n128 re::ecs2::ComponentType<re::ecs2::LightComponent>::doMakeComponent@<Q0>(void *a1@<X8>)
{
  uint64_t v2 = (void *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::LightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                       + 7)
                                                                    + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::LightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 880, 0);
  bzero(v2, 0x370uLL);
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  v2[2] = 0;
  *((unsigned char *)v2 + 24) = 0;
  *uint64_t v2 = &unk_26E6EA988;
  *((_DWORD *)v2 + 7) = 3;
  v2[4] = 0x42B4000046D2A785;
  *((_DWORD *)v2 + 10) = 1120403456;
  v2[6] = 0;
  *((unsigned char *)v2 + 56) = 0;
  *((_DWORD *)v2 + 15) = 1008981770;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  long long v4 = (_anonymous_namespace_ *)re::DynamicString::setCapacity(v2 + 8, 0);
  *((_DWORD *)v2 + 44) = 0;
  *((_OWORD *)v2 + 9) = 0u;
  *((_OWORD *)v2 + 10) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  *((_OWORD *)v2 + 8) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *(void *)((char *)v2 + 180) = 0x412000003C23D70ALL;
  *(void *)((char *)v2 + 188) = 0;
  *((unsigned char *)v2 + 196) = 0;
  *(_DWORD *)((char *)v2 + 198) = 16842752;
  *((_DWORD *)v2 + 51) = 1065353216;
  *((_OWORD *)v2 + 14) = 0u;
  *((_OWORD *)v2 + 13) = 0u;
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicString::setCapacity(v2 + 26, 0);
  *((_DWORD *)v2 + 80) = 0;
  *((_OWORD *)v2 + 18) = 0u;
  *((_OWORD *)v2 + re::ecs2::BasicComponentStates<re::ecs2::BlendShapeWeightsBufferComponent>::~BasicComponentStates((void *)this + 19) = 0u;
  *((_OWORD *)v2 + 16) = 0u;
  *((_OWORD *)v2 + 17) = 0u;
  *((_OWORD *)v2 + 15) = 0u;
  *(void *)((char *)v2 + 324) = 0x412000003C23D70ALL;
  *((_WORD *)v2 + 215) = 0;
  *((unsigned char *)v2 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *((_OWORD *)v2 + 21) = 0u;
  *((_OWORD *)v2 + 22) = 0u;
  *((_OWORD *)v2 + 23) = 0u;
  *((_OWORD *)v2 + 24) = 0u;
  *((_OWORD *)v2 + 25) = 0u;
  *(_OWORD *)((char *)v2 + 413) = 0u;
  *((_OWORD *)v2 + 28) = 0u;
  *((_OWORD *)v2 + 29) = 0u;
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicString::setCapacity(v2 + 56, 0);
  *((_DWORD *)v2 + 140) = 0;
  *((_OWORD *)v2 + 33) = 0u;
  *((_OWORD *)v2 + 34) = 0u;
  *((_OWORD *)v2 + 31) = 0u;
  *((_OWORD *)v2 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0u;
  *((_OWORD *)v2 + 30) = 0u;
  *(void *)((char *)v2 + 564) = 0x412000003C23D70ALL;
  *((_WORD *)v2 + 331) = 0;
  *((_OWORD *)v2 + 36) = 0u;
  *((_OWORD *)v2 + 37) = 0u;
  *((_OWORD *)v2 + 38) = 0u;
  *((_OWORD *)v2 + 39) = 0u;
  *((_OWORD *)v2 + 40) = 0u;
  *(void *)((char *)v2 + 653) = 0;
  *((_OWORD *)v2 + 42) = 0u;
  *((_OWORD *)v2 + 43) = 0u;
  re::DynamicString::setCapacity(v2 + 84, 0);
  *((_OWORD *)v2 + 47) = 0u;
  *((_OWORD *)v2 + 48) = 0u;
  *((_OWORD *)v2 + 45) = 0u;
  *((_OWORD *)v2 + 46) = 0u;
  *((_OWORD *)v2 + 44) = 0u;
  v2[98] = 0x3C23D70A00000000;
  *((_DWORD *)v2 + 198) = 1092616192;
  v2[100] = 0;
  *((unsigned char *)v2 + 808) = 0;
  *((_OWORD *)v2 + 51) = 0u;
  *((_DWORD *)v2 + 208) = 0;
  __asm { FMOV            V0.4S, #1.0 }
  *((__n128 *)v2 + 53) = result;
  *((unsigned char *)v2 + 864) = 0;
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::LightComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EAA10;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::LightComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF829C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF829C0))
  {
    qword_26AF829B8 = re::ecs2::introspect_LightComponent(0);
    __cxa_guard_release(&qword_26AF829C0);
  }
  return qword_26AF829B8;
}

__n128 re::ecs2::ComponentType<re::ecs2::LightComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::LightComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::LightComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EA918;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::LightComponent::~LightComponent(re::ecs2::LightComponent *this)
{
  *(void *)this = &unk_26E6EA988;
  uint64_t v2 = (re::ecs2::LightComponent *)((char *)this + 64);
  re::DynamicString::deinit((re::ecs2::LightComponent *)((char *)this + 672));
  re::DynamicString::deinit((re::ecs2::LightComponent *)((char *)this + 448));
  re::DynamicString::deinit((re::ecs2::LightComponent *)((char *)this + 208));
  re::DynamicString::deinit(v2);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  re::DynamicString *v2;
  uint64_t vars8;

  *(void *)this = &unk_26E6EA988;
  uint64_t v2 = (re::ecs2::LightComponent *)((char *)this + 64);
  re::DynamicString::deinit((re::ecs2::LightComponent *)((char *)this + 672));
  re::DynamicString::deinit((re::ecs2::LightComponent *)((char *)this + 448));
  re::DynamicString::deinit((re::ecs2::LightComponent *)((char *)this + 208));
  re::DynamicString::deinit(v2);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::LightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::LightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::LightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::LightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::LightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EAA10;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::LightComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>,re::Slice<re::ecs2::LightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>*,re::Slice<re::ecs2::LightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>,re::Slice<re::ecs2::LightComponent*>>::Subscription const&,re::Slice<re::ecs2::LightComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::LightComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>,re::Slice<re::ecs2::LightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>*,re::Slice<re::ecs2::LightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>,re::Slice<re::ecs2::LightComponent*>>::Subscription const&,re::Slice<re::ecs2::LightComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::LightComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>,re::Slice<re::ecs2::LightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>*,re::Slice<re::ecs2::LightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>,re::Slice<re::ecs2::LightComponent*>>::Subscription const&,re::Slice<re::ecs2::LightComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::LightComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>,re::Slice<re::ecs2::LightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>*,re::Slice<re::ecs2::LightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>,re::Slice<re::ecs2::LightComponent*>>::Subscription const&,re::Slice<re::ecs2::LightComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::LightComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>,re::Slice<re::ecs2::LightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>*,re::Slice<re::ecs2::LightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>,re::Slice<re::ecs2::LightComponent*>>::Subscription const&,re::Slice<re::ecs2::LightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::LightComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>,re::Slice<re::ecs2::LightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>*,re::Slice<re::ecs2::LightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>,re::Slice<re::ecs2::LightComponent*>>::Subscription const&,re::Slice<re::ecs2::LightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::LightComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>,re::Slice<re::ecs2::LightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>*,re::Slice<re::ecs2::LightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>,re::Slice<re::ecs2::LightComponent*>>::Subscription const&,re::Slice<re::ecs2::LightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::LightComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>,re::Slice<re::ecs2::LightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>*,re::Slice<re::ecs2::LightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>,re::Slice<re::ecs2::LightComponent*>>::Subscription const&,re::Slice<re::ecs2::LightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::LightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::LightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::LightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::LightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>,re::Slice<re::ecs2::LightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>*,re::Slice<re::ecs2::LightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>,re::Slice<re::ecs2::LightComponent*>>::Subscription const&,re::Slice<re::ecs2::LightComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::LightGroupComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::LightGroupComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::LightGroupComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::LightGroupComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::LightGroupComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::LightGroupComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::LightGroupComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 32, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6EAB28;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::LightGroupComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EABB0;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::LightGroupComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF829D0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF829D0))
  {
    qword_26AF829C8 = re::ecs2::introspect_LightGroupComponent(0);
    __cxa_guard_release(&qword_26AF829D0);
  }
  return qword_26AF829C8;
}

__n128 re::ecs2::ComponentType<re::ecs2::LightGroupComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::LightGroupComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::LightGroupComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EAAB8;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::LightGroupComponent::~LightGroupComponent(re::ecs2::LightGroupComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::LightGroupComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::LightGroupComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::LightGroupComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::LightGroupComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::LightGroupComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EABB0;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::LightGroupComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>,re::Slice<re::ecs2::LightGroupComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>*,re::Slice<re::ecs2::LightGroupComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>,re::Slice<re::ecs2::LightGroupComponent*>>::Subscription const&,re::Slice<re::ecs2::LightGroupComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::LightGroupComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>,re::Slice<re::ecs2::LightGroupComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>*,re::Slice<re::ecs2::LightGroupComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>,re::Slice<re::ecs2::LightGroupComponent*>>::Subscription const&,re::Slice<re::ecs2::LightGroupComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::LightGroupComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>,re::Slice<re::ecs2::LightGroupComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>*,re::Slice<re::ecs2::LightGroupComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>,re::Slice<re::ecs2::LightGroupComponent*>>::Subscription const&,re::Slice<re::ecs2::LightGroupComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::LightGroupComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>,re::Slice<re::ecs2::LightGroupComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>*,re::Slice<re::ecs2::LightGroupComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>,re::Slice<re::ecs2::LightGroupComponent*>>::Subscription const&,re::Slice<re::ecs2::LightGroupComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::LightGroupComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>,re::Slice<re::ecs2::LightGroupComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>*,re::Slice<re::ecs2::LightGroupComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>,re::Slice<re::ecs2::LightGroupComponent*>>::Subscription const&,re::Slice<re::ecs2::LightGroupComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::LightGroupComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>,re::Slice<re::ecs2::LightGroupComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>*,re::Slice<re::ecs2::LightGroupComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>,re::Slice<re::ecs2::LightGroupComponent*>>::Subscription const&,re::Slice<re::ecs2::LightGroupComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::LightGroupComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>,re::Slice<re::ecs2::LightGroupComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>*,re::Slice<re::ecs2::LightGroupComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>,re::Slice<re::ecs2::LightGroupComponent*>>::Subscription const&,re::Slice<re::ecs2::LightGroupComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::LightGroupComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>,re::Slice<re::ecs2::LightGroupComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>*,re::Slice<re::ecs2::LightGroupComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>,re::Slice<re::ecs2::LightGroupComponent*>>::Subscription const&,re::Slice<re::ecs2::LightGroupComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::LightGroupComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::LightGroupComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::LightGroupComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::LightGroupComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>,re::Slice<re::ecs2::LightGroupComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>*,re::Slice<re::ecs2::LightGroupComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>,re::Slice<re::ecs2::LightGroupComponent*>>::Subscription const&,re::Slice<re::ecs2::LightGroupComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::AmbientLightComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AmbientLightComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::AmbientLightComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::AmbientLightComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

__n128 re::ecs2::ComponentType<re::ecs2::AmbientLightComponent>::doMakeComponent@<Q0>(__n128 **a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::AmbientLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::AmbientLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 96, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  v3[1].n128_u64[0] = 0;
  v3[1].n128_u8[8] = 0;
  v3->n128_u64[0] = (unint64_t)&unk_26E6EACC8;
  v3[1].n128_u32[3] = 1143652352;
  v3[2].n128_u64[0] = 0;
  v3[2].n128_u64[1] = 0;
  v3[3].n128_u32[0] = 0;
  __asm { FMOV            V0.4S, #1.0 }
  v3[4] = result;
  v3[5].n128_u8[0] = 0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AmbientLightComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EAD50;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AmbientLightComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF829E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF829E0))
  {
    qword_26AF829D8 = re::ecs2::introspect_AmbientLightComponent(0);
    __cxa_guard_release(&qword_26AF829E0);
  }
  return qword_26AF829D8;
}

__n128 re::ecs2::ComponentType<re::ecs2::AmbientLightComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AmbientLightComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AmbientLightComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EAC58;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::AmbientLightComponent::~AmbientLightComponent(re::ecs2::AmbientLightComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AmbientLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::AmbientLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AmbientLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::AmbientLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::AmbientLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EAD50;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AmbientLightComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>,re::Slice<re::ecs2::AmbientLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>*,re::Slice<re::ecs2::AmbientLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>,re::Slice<re::ecs2::AmbientLightComponent*>>::Subscription const&,re::Slice<re::ecs2::AmbientLightComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AmbientLightComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>,re::Slice<re::ecs2::AmbientLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>*,re::Slice<re::ecs2::AmbientLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>,re::Slice<re::ecs2::AmbientLightComponent*>>::Subscription const&,re::Slice<re::ecs2::AmbientLightComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AmbientLightComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>,re::Slice<re::ecs2::AmbientLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>*,re::Slice<re::ecs2::AmbientLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>,re::Slice<re::ecs2::AmbientLightComponent*>>::Subscription const&,re::Slice<re::ecs2::AmbientLightComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AmbientLightComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>,re::Slice<re::ecs2::AmbientLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>*,re::Slice<re::ecs2::AmbientLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>,re::Slice<re::ecs2::AmbientLightComponent*>>::Subscription const&,re::Slice<re::ecs2::AmbientLightComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AmbientLightComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>,re::Slice<re::ecs2::AmbientLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>*,re::Slice<re::ecs2::AmbientLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>,re::Slice<re::ecs2::AmbientLightComponent*>>::Subscription const&,re::Slice<re::ecs2::AmbientLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AmbientLightComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>,re::Slice<re::ecs2::AmbientLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>*,re::Slice<re::ecs2::AmbientLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>,re::Slice<re::ecs2::AmbientLightComponent*>>::Subscription const&,re::Slice<re::ecs2::AmbientLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AmbientLightComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>,re::Slice<re::ecs2::AmbientLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>*,re::Slice<re::ecs2::AmbientLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>,re::Slice<re::ecs2::AmbientLightComponent*>>::Subscription const&,re::Slice<re::ecs2::AmbientLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AmbientLightComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>,re::Slice<re::ecs2::AmbientLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>*,re::Slice<re::ecs2::AmbientLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>,re::Slice<re::ecs2::AmbientLightComponent*>>::Subscription const&,re::Slice<re::ecs2::AmbientLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AmbientLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AmbientLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AmbientLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AmbientLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>,re::Slice<re::ecs2::AmbientLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>*,re::Slice<re::ecs2::AmbientLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>,re::Slice<re::ecs2::AmbientLightComponent*>>::Subscription const&,re::Slice<re::ecs2::AmbientLightComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::DirectionalLightComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::DirectionalLightComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::DirectionalLightComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::DirectionalLightComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

re::ecs2::DirectionalLightComponent *re::ecs2::ComponentType<re::ecs2::DirectionalLightComponent>::doMakeComponent@<X0>(re::ecs2::DirectionalLightComponent **a1@<X8>)
{
  uint64_t v2 = (re::ecs2::DirectionalLightComponent *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::DirectionalLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType + 7)
                                                                                                 + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::DirectionalLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 368, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  *((_OWORD *)v2 + 8) = 0u;
  *((_OWORD *)v2 + 9) = 0u;
  *((_OWORD *)v2 + 10) = 0u;
  *((_OWORD *)v2 + 11) = 0u;
  *((_OWORD *)v2 + 12) = 0u;
  *((_OWORD *)v2 + 13) = 0u;
  *((_OWORD *)v2 + 14) = 0u;
  *((_OWORD *)v2 + 15) = 0u;
  *((_OWORD *)v2 + 16) = 0u;
  *((_OWORD *)v2 + 17) = 0u;
  *((_OWORD *)v2 + 18) = 0u;
  *((_OWORD *)v2 + re::ecs2::BasicComponentStates<re::ecs2::BlendShapeWeightsBufferComponent>::~BasicComponentStates((void *)this + 19) = 0u;
  *((_OWORD *)v2 + objc_destroyWeak(this + 20) = 0u;
  *((_OWORD *)v2 + 21) = 0u;
  *((_OWORD *)v2 + 22) = 0u;
  double result = re::ecs2::DirectionalLightComponent::DirectionalLightComponent(v2);
  *a1 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DirectionalLightComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EAE68;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DirectionalLightComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF829F0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF829F0))
  {
    qword_26AF829E8 = re::ecs2::introspect_DirectionalLightComponent(0);
    __cxa_guard_release(&qword_26AF829F0);
  }
  return qword_26AF829E8;
}

__n128 re::ecs2::ComponentType<re::ecs2::DirectionalLightComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DirectionalLightComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::DirectionalLightComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EADF8;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

re::ecs2::DirectionalLightComponent *re::ecs2::DirectionalLightComponent::DirectionalLightComponent(re::ecs2::DirectionalLightComponent *this)
{
  ArcSharedObject::ArcSharedObject(this, 0);
  *(void *)(v2 + 16) = 0;
  *(unsigned char *)(v2 + 24) = 0;
  *(void *)uint64_t v2 = &unk_26E703820;
  *(_DWORD *)(v2 + 28) = 1158028115;
  *(unsigned char *)(v2 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  uint64_t v3 = (void *)(v2 + 48);
  long long v4 = (_anonymous_namespace_ *)re::DynamicString::setCapacity(v3, 0);
  *((_DWORD *)this + 40) = 0;
  *((_OWORD *)this + 8) = 0u;
  *((_OWORD *)this + 9) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *(void *)((char *)this + 164) = 0x412000003C23D70ALL;
  *(void *)((char *)this + 1re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *((unsigned char *)this + 180) = 0;
  *(_DWORD *)((char *)this + 182) = 16842752;
  *((_DWORD *)this + 47) = 1065353216;
  *((_OWORD *)this + 13) = 0u;
  *((_OWORD *)this + 12) = 0u;
  re::DynamicString::setCapacity((void *)this + 24, 0);
  *((_OWORD *)this + 17) = 0u;
  *((_OWORD *)this + 18) = 0u;
  *((_OWORD *)this + 15) = 0u;
  *((_OWORD *)this + 16) = 0u;
  *((_OWORD *)this + 14) = 0u;
  *((void *)this + 38) = 0x3C23D70A00000000;
  *((_DWORD *)this + 78) = 1092616192;
  *(void *)((char *)this + 316) = 0;
  *((unsigned char *)this + 324) = 0;
  *((unsigned char *)this + 326) = 1;
  *((_DWORD *)this + 82) = 1065353216;
  *((unsigned char *)this + 3re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 1;
  __asm { FMOV            V0.4S, #1.0 }
  *((_OWORD *)this + 21) = _Q0;
  *((unsigned char *)this + 352) = 0;
  return this;
}

void re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EAE68;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DirectionalLightComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>,re::Slice<re::ecs2::DirectionalLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>*,re::Slice<re::ecs2::DirectionalLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>,re::Slice<re::ecs2::DirectionalLightComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectionalLightComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DirectionalLightComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>,re::Slice<re::ecs2::DirectionalLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>*,re::Slice<re::ecs2::DirectionalLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>,re::Slice<re::ecs2::DirectionalLightComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectionalLightComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DirectionalLightComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>,re::Slice<re::ecs2::DirectionalLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>*,re::Slice<re::ecs2::DirectionalLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>,re::Slice<re::ecs2::DirectionalLightComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectionalLightComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DirectionalLightComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>,re::Slice<re::ecs2::DirectionalLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>*,re::Slice<re::ecs2::DirectionalLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>,re::Slice<re::ecs2::DirectionalLightComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectionalLightComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DirectionalLightComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>,re::Slice<re::ecs2::DirectionalLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>*,re::Slice<re::ecs2::DirectionalLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>,re::Slice<re::ecs2::DirectionalLightComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectionalLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DirectionalLightComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>,re::Slice<re::ecs2::DirectionalLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>*,re::Slice<re::ecs2::DirectionalLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>,re::Slice<re::ecs2::DirectionalLightComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectionalLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DirectionalLightComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>,re::Slice<re::ecs2::DirectionalLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>*,re::Slice<re::ecs2::DirectionalLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>,re::Slice<re::ecs2::DirectionalLightComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectionalLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DirectionalLightComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>,re::Slice<re::ecs2::DirectionalLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>*,re::Slice<re::ecs2::DirectionalLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>,re::Slice<re::ecs2::DirectionalLightComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectionalLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DirectionalLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DirectionalLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DirectionalLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DirectionalLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>,re::Slice<re::ecs2::DirectionalLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>*,re::Slice<re::ecs2::DirectionalLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>,re::Slice<re::ecs2::DirectionalLightComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectionalLightComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::SpotLightComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SpotLightComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::SpotLightComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::SpotLightComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

re::ecs2::SpotLightComponent *re::ecs2::ComponentType<re::ecs2::SpotLightComponent>::doMakeComponent@<X0>(re::ecs2::SpotLightComponent **a1@<X8>)
{
  uint64_t v2 = (re::ecs2::SpotLightComponent *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::SpotLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                             + 7)
                                                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::SpotLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 320, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  *((_OWORD *)v2 + 8) = 0u;
  *((_OWORD *)v2 + 9) = 0u;
  *((_OWORD *)v2 + 10) = 0u;
  *((_OWORD *)v2 + 11) = 0u;
  *((_OWORD *)v2 + 12) = 0u;
  *((_OWORD *)v2 + 13) = 0u;
  *((_OWORD *)v2 + 14) = 0u;
  *((_OWORD *)v2 + 15) = 0u;
  *((_OWORD *)v2 + 16) = 0u;
  *((_OWORD *)v2 + 17) = 0u;
  *((_OWORD *)v2 + 18) = 0u;
  *((_OWORD *)v2 + re::ecs2::BasicComponentStates<re::ecs2::BlendShapeWeightsBufferComponent>::~BasicComponentStates((void *)this + 19) = 0u;
  double result = re::ecs2::SpotLightComponent::SpotLightComponent(v2);
  *a1 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SpotLightComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EAF80;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SpotLightComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82A00, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82A00))
  {
    qword_26AF829F8 = re::ecs2::introspect_SpotLightComponent(0);
    __cxa_guard_release(&qword_26AF82A00);
  }
  return qword_26AF829F8;
}

__n128 re::ecs2::ComponentType<re::ecs2::SpotLightComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SpotLightComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SpotLightComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EAF10;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

re::ecs2::SpotLightComponent *re::ecs2::SpotLightComponent::SpotLightComponent(re::ecs2::SpotLightComponent *this)
{
  ArcSharedObject::ArcSharedObject(this, 0);
  *(void *)(v2 + 16) = 0;
  *(unsigned char *)(v2 + 24) = 0;
  *(void *)uint64_t v2 = &unk_26E7038A8;
  *(_OWORD *)(v2 + 28) = xmmword_234386CB0;
  *(_DWORD *)(v2 + 44) = 0x40000000;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  uint64_t v3 = (void *)(v2 + 48);
  re::DynamicString::setCapacity(v3, 0);
  *((_DWORD *)this + 40) = 0;
  *((_OWORD *)this + 8) = 0u;
  *((_OWORD *)this + 9) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *(void *)((char *)this + 164) = 0x412000003C23D70ALL;
  *((_WORD *)this + 135) = 0;
  *((unsigned char *)this + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *((_OWORD *)this + 11) = 0u;
  *((_OWORD *)this + 12) = 0u;
  *((_OWORD *)this + 13) = 0u;
  *((_OWORD *)this + 14) = 0u;
  *((_OWORD *)this + 15) = 0u;
  *(_OWORD *)((char *)this + 253) = 0u;
  __asm { FMOV            V0.4S, #1.0 }
  *((_OWORD *)this + 18) = _Q0;
  *((unsigned char *)this + 304) = 0;
  return this;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EAF80;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SpotLightComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>,re::Slice<re::ecs2::SpotLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>*,re::Slice<re::ecs2::SpotLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>,re::Slice<re::ecs2::SpotLightComponent*>>::Subscription const&,re::Slice<re::ecs2::SpotLightComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SpotLightComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>,re::Slice<re::ecs2::SpotLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>*,re::Slice<re::ecs2::SpotLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>,re::Slice<re::ecs2::SpotLightComponent*>>::Subscription const&,re::Slice<re::ecs2::SpotLightComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SpotLightComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>,re::Slice<re::ecs2::SpotLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>*,re::Slice<re::ecs2::SpotLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>,re::Slice<re::ecs2::SpotLightComponent*>>::Subscription const&,re::Slice<re::ecs2::SpotLightComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SpotLightComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>,re::Slice<re::ecs2::SpotLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>*,re::Slice<re::ecs2::SpotLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>,re::Slice<re::ecs2::SpotLightComponent*>>::Subscription const&,re::Slice<re::ecs2::SpotLightComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SpotLightComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>,re::Slice<re::ecs2::SpotLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>*,re::Slice<re::ecs2::SpotLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>,re::Slice<re::ecs2::SpotLightComponent*>>::Subscription const&,re::Slice<re::ecs2::SpotLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SpotLightComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>,re::Slice<re::ecs2::SpotLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>*,re::Slice<re::ecs2::SpotLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>,re::Slice<re::ecs2::SpotLightComponent*>>::Subscription const&,re::Slice<re::ecs2::SpotLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SpotLightComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>,re::Slice<re::ecs2::SpotLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>*,re::Slice<re::ecs2::SpotLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>,re::Slice<re::ecs2::SpotLightComponent*>>::Subscription const&,re::Slice<re::ecs2::SpotLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SpotLightComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>,re::Slice<re::ecs2::SpotLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>*,re::Slice<re::ecs2::SpotLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>,re::Slice<re::ecs2::SpotLightComponent*>>::Subscription const&,re::Slice<re::ecs2::SpotLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SpotLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SpotLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SpotLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SpotLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>,re::Slice<re::ecs2::SpotLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>*,re::Slice<re::ecs2::SpotLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>,re::Slice<re::ecs2::SpotLightComponent*>>::Subscription const&,re::Slice<re::ecs2::SpotLightComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PointLightComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PointLightComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PointLightComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::PointLightComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

re::ecs2::PointLightComponent *re::ecs2::ComponentType<re::ecs2::PointLightComponent>::doMakeComponent@<X0>(re::ecs2::PointLightComponent **a1@<X8>)
{
  uint64_t v2 = (re::ecs2::PointLightComponent *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::PointLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                              + 7)
                                                                                           + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::PointLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 304, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  *((_OWORD *)v2 + 8) = 0u;
  *((_OWORD *)v2 + 9) = 0u;
  *((_OWORD *)v2 + 10) = 0u;
  *((_OWORD *)v2 + 11) = 0u;
  *((_OWORD *)v2 + 12) = 0u;
  *((_OWORD *)v2 + 13) = 0u;
  *((_OWORD *)v2 + 14) = 0u;
  *((_OWORD *)v2 + 15) = 0u;
  *((_OWORD *)v2 + 16) = 0u;
  *((_OWORD *)v2 + 17) = 0u;
  *((_OWORD *)v2 + 18) = 0u;
  double result = re::ecs2::PointLightComponent::PointLightComponent(v2);
  *a1 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PointLightComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EB098;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PointLightComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82A10, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82A10))
  {
    qword_26AF82A08 = re::ecs2::introspect_PointLightComponent(0);
    __cxa_guard_release(&qword_26AF82A10);
  }
  return qword_26AF82A08;
}

__n128 re::ecs2::ComponentType<re::ecs2::PointLightComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PointLightComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PointLightComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EB028;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

re::ecs2::PointLightComponent *re::ecs2::PointLightComponent::PointLightComponent(re::ecs2::PointLightComponent *this)
{
  ArcSharedObject::ArcSharedObject(this, 0);
  *(void *)(v2 + 16) = 0;
  *(unsigned char *)(v2 + 24) = 0;
  *(void *)uint64_t v2 = &unk_26E703930;
  *(void *)(v2 + 28) = 0x4120000046D2A785;
  *(_DWORD *)(v2 + 36) = 0x40000000;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  uint64_t v3 = (void *)(v2 + 48);
  re::DynamicString::setCapacity(v3, 0);
  *((_DWORD *)this + 40) = 0;
  *((_OWORD *)this + 8) = 0u;
  *((_OWORD *)this + 9) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *(void *)((char *)this + 164) = 0x412000003C23D70ALL;
  *((_WORD *)this + 131) = 0;
  *((_OWORD *)this + 11) = 0u;
  *((_OWORD *)this + 12) = 0u;
  *((_OWORD *)this + 13) = 0u;
  *((_OWORD *)this + 14) = 0u;
  *((_OWORD *)this + 15) = 0u;
  *(void *)((char *)this + 253) = 0;
  __asm { FMOV            V0.4S, #1.0 }
  *((_OWORD *)this + 17) = _Q0;
  *((unsigned char *)this + 288) = 0;
  return this;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EB098;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PointLightComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>,re::Slice<re::ecs2::PointLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>*,re::Slice<re::ecs2::PointLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>,re::Slice<re::ecs2::PointLightComponent*>>::Subscription const&,re::Slice<re::ecs2::PointLightComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PointLightComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>,re::Slice<re::ecs2::PointLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>*,re::Slice<re::ecs2::PointLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>,re::Slice<re::ecs2::PointLightComponent*>>::Subscription const&,re::Slice<re::ecs2::PointLightComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PointLightComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>,re::Slice<re::ecs2::PointLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>*,re::Slice<re::ecs2::PointLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>,re::Slice<re::ecs2::PointLightComponent*>>::Subscription const&,re::Slice<re::ecs2::PointLightComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PointLightComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>,re::Slice<re::ecs2::PointLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>*,re::Slice<re::ecs2::PointLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>,re::Slice<re::ecs2::PointLightComponent*>>::Subscription const&,re::Slice<re::ecs2::PointLightComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PointLightComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>,re::Slice<re::ecs2::PointLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>*,re::Slice<re::ecs2::PointLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>,re::Slice<re::ecs2::PointLightComponent*>>::Subscription const&,re::Slice<re::ecs2::PointLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PointLightComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>,re::Slice<re::ecs2::PointLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>*,re::Slice<re::ecs2::PointLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>,re::Slice<re::ecs2::PointLightComponent*>>::Subscription const&,re::Slice<re::ecs2::PointLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PointLightComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>,re::Slice<re::ecs2::PointLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>*,re::Slice<re::ecs2::PointLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>,re::Slice<re::ecs2::PointLightComponent*>>::Subscription const&,re::Slice<re::ecs2::PointLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PointLightComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>,re::Slice<re::ecs2::PointLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>*,re::Slice<re::ecs2::PointLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>,re::Slice<re::ecs2::PointLightComponent*>>::Subscription const&,re::Slice<re::ecs2::PointLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PointLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PointLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PointLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PointLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>,re::Slice<re::ecs2::PointLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>*,re::Slice<re::ecs2::PointLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>,re::Slice<re::ecs2::PointLightComponent*>>::Subscription const&,re::Slice<re::ecs2::PointLightComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::RectAreaLightComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::RectAreaLightComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::RectAreaLightComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::RectAreaLightComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

re::ecs2::RectAreaLightComponent *re::ecs2::ComponentType<re::ecs2::RectAreaLightComponent>::doMakeComponent@<X0>(re::ecs2::RectAreaLightComponent **a1@<X8>)
{
  uint64_t v2 = (re::ecs2::RectAreaLightComponent *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::RectAreaLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                                 + 7)
                                                                                              + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::RectAreaLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 224, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  *((_OWORD *)v2 + 8) = 0u;
  *((_OWORD *)v2 + 9) = 0u;
  *((_OWORD *)v2 + 10) = 0u;
  *((_OWORD *)v2 + 11) = 0u;
  *((_OWORD *)v2 + 12) = 0u;
  *((_OWORD *)v2 + 13) = 0u;
  double result = re::ecs2::RectAreaLightComponent::RectAreaLightComponent(v2);
  *a1 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RectAreaLightComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EB238;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RectAreaLightComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82A20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82A20))
  {
    qword_26AF82A18 = re::ecs2::introspect_RectAreaLightComponent(0);
    __cxa_guard_release(&qword_26AF82A20);
  }
  return qword_26AF82A18;
}

__n128 re::ecs2::ComponentType<re::ecs2::RectAreaLightComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RectAreaLightComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::RectAreaLightComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EB140;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

re::ecs2::RectAreaLightComponent *re::ecs2::RectAreaLightComponent::RectAreaLightComponent(re::ecs2::RectAreaLightComponent *this)
{
  ArcSharedObject::ArcSharedObject(this, 0);
  *(void *)(v2 + 16) = 0;
  *(unsigned char *)(v2 + 24) = 0;
  *(void *)uint64_t v2 = &unk_26E6EB1B0;
  *(_DWORD *)(v2 + 28) = 1143652352;
  __asm { FMOV            V0.2S, #1.0 }
  *(void *)(v2 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = _D0;
  *(unsigned char *)(v2 + 40) = 0;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  uint64_t v8 = (void *)(v2 + 48);
  re::DynamicString::setCapacity(v8, 0);
  *((_DWORD *)this + 40) = 0;
  *((_OWORD *)this + 8) = 0u;
  *((_OWORD *)this + 9) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *(void *)((char *)this + 164) = 0x412000003C23D70ALL;
  *((void *)this + 22) = 0;
  *((unsigned char *)this + 184) = 0;
  __asm { FMOV            V0.4S, #1.0 }
  *((_OWORD *)this + 12) = _Q0;
  *((unsigned char *)this + 208) = 0;
  return this;
}

void re::ecs2::RectAreaLightComponent::~RectAreaLightComponent(re::ecs2::RectAreaLightComponent *this)
{
  *(void *)this = &unk_26E6EB1B0;
  re::DynamicString::deinit((re::ecs2::RectAreaLightComponent *)((char *)this + 48));
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6EB1B0;
  re::DynamicString::deinit((re::ecs2::RectAreaLightComponent *)((char *)this + 48));
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::RectAreaLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::RectAreaLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::RectAreaLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::RectAreaLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::RectAreaLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EB238;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RectAreaLightComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>,re::Slice<re::ecs2::RectAreaLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>*,re::Slice<re::ecs2::RectAreaLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>,re::Slice<re::ecs2::RectAreaLightComponent*>>::Subscription const&,re::Slice<re::ecs2::RectAreaLightComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RectAreaLightComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>,re::Slice<re::ecs2::RectAreaLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>*,re::Slice<re::ecs2::RectAreaLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>,re::Slice<re::ecs2::RectAreaLightComponent*>>::Subscription const&,re::Slice<re::ecs2::RectAreaLightComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RectAreaLightComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>,re::Slice<re::ecs2::RectAreaLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>*,re::Slice<re::ecs2::RectAreaLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>,re::Slice<re::ecs2::RectAreaLightComponent*>>::Subscription const&,re::Slice<re::ecs2::RectAreaLightComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RectAreaLightComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>,re::Slice<re::ecs2::RectAreaLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>*,re::Slice<re::ecs2::RectAreaLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>,re::Slice<re::ecs2::RectAreaLightComponent*>>::Subscription const&,re::Slice<re::ecs2::RectAreaLightComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RectAreaLightComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>,re::Slice<re::ecs2::RectAreaLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>*,re::Slice<re::ecs2::RectAreaLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>,re::Slice<re::ecs2::RectAreaLightComponent*>>::Subscription const&,re::Slice<re::ecs2::RectAreaLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RectAreaLightComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>,re::Slice<re::ecs2::RectAreaLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>*,re::Slice<re::ecs2::RectAreaLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>,re::Slice<re::ecs2::RectAreaLightComponent*>>::Subscription const&,re::Slice<re::ecs2::RectAreaLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RectAreaLightComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>,re::Slice<re::ecs2::RectAreaLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>*,re::Slice<re::ecs2::RectAreaLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>,re::Slice<re::ecs2::RectAreaLightComponent*>>::Subscription const&,re::Slice<re::ecs2::RectAreaLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RectAreaLightComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>,re::Slice<re::ecs2::RectAreaLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>*,re::Slice<re::ecs2::RectAreaLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>,re::Slice<re::ecs2::RectAreaLightComponent*>>::Subscription const&,re::Slice<re::ecs2::RectAreaLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RectAreaLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RectAreaLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RectAreaLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RectAreaLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>,re::Slice<re::ecs2::RectAreaLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>*,re::Slice<re::ecs2::RectAreaLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>,re::Slice<re::ecs2::RectAreaLightComponent*>>::Subscription const&,re::Slice<re::ecs2::RectAreaLightComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::FrustumLightComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::FrustumLightComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::FrustumLightComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::FrustumLightComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

re::ecs2::FrustumLightComponent *re::ecs2::ComponentType<re::ecs2::FrustumLightComponent>::doMakeComponent@<X0>(re::ecs2::FrustumLightComponent **a1@<X8>)
{
  uint64_t v2 = (re::ecs2::FrustumLightComponent *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::FrustumLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                                + 7)
                                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::FrustumLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 336, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  *((_OWORD *)v2 + 8) = 0u;
  *((_OWORD *)v2 + 9) = 0u;
  *((_OWORD *)v2 + 10) = 0u;
  *((_OWORD *)v2 + 11) = 0u;
  *((_OWORD *)v2 + 12) = 0u;
  *((_OWORD *)v2 + 13) = 0u;
  *((_OWORD *)v2 + 14) = 0u;
  *((_OWORD *)v2 + 15) = 0u;
  *((_OWORD *)v2 + 16) = 0u;
  *((_OWORD *)v2 + 17) = 0u;
  *((_OWORD *)v2 + 18) = 0u;
  *((_OWORD *)v2 + re::ecs2::BasicComponentStates<re::ecs2::BlendShapeWeightsBufferComponent>::~BasicComponentStates((void *)this + 19) = 0u;
  *((_OWORD *)v2 + objc_destroyWeak(this + 20) = 0u;
  double result = re::ecs2::FrustumLightComponent::FrustumLightComponent(v2);
  *a1 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::FrustumLightComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EB3D8;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::FrustumLightComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82A30, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82A30))
  {
    qword_26AF82A28 = re::ecs2::introspect_FrustumLightComponent(0);
    __cxa_guard_release(&qword_26AF82A30);
  }
  return qword_26AF82A28;
}

__n128 re::ecs2::ComponentType<re::ecs2::FrustumLightComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::FrustumLightComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::FrustumLightComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EB2E0;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

re::ecs2::FrustumLightComponent *re::ecs2::FrustumLightComponent::FrustumLightComponent(re::ecs2::FrustumLightComponent *this)
{
  ArcSharedObject::ArcSharedObject(this, 0);
  *(void *)(v2 + 16) = 0;
  *(unsigned char *)(v2 + 24) = 0;
  *(void *)uint64_t v2 = &unk_26E6EB350;
  *(_OWORD *)(v2 + 28) = xmmword_234386CC0;
  __asm { FMOV            V0.2S, #1.0 }
  *(void *)(v2 + 48) = _D0;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  uint64_t v8 = v2 + 64;
  re::DynamicString::setCapacity((void *)v8, 0);
  *((_DWORD *)this + 44) = 0;
  *((_OWORD *)this + 9) = 0u;
  *((_OWORD *)this + 10) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_OWORD *)this + 8) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *(void *)((char *)this + 180) = 0x412000003C23D70ALL;
  *((_WORD *)this + 143) = 0;
  *((unsigned char *)this + 288) = 0;
  *((_OWORD *)this + 12) = 0u;
  *((_OWORD *)this + 13) = 0u;
  *((_OWORD *)this + 14) = 0u;
  *((_OWORD *)this + 15) = 0u;
  *((_OWORD *)this + 16) = 0u;
  *(_OWORD *)(v8 + 205) = 0u;
  __asm { FMOV            V0.4S, #1.0 }
  *((_OWORD *)this + re::ecs2::BasicComponentStates<re::ecs2::BlendShapeWeightsBufferComponent>::~BasicComponentStates((void *)this + 19) = _Q0;
  *((unsigned char *)this + 3objc_destroyWeak(this + 20) = 0;
  return this;
}

void re::ecs2::FrustumLightComponent::~FrustumLightComponent(re::ecs2::FrustumLightComponent *this)
{
  *(void *)this = &unk_26E6EB350;
  re::DynamicString::deinit((re::ecs2::FrustumLightComponent *)((char *)this + 64));
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6EB350;
  re::DynamicString::deinit((re::ecs2::FrustumLightComponent *)((char *)this + 64));
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::FrustumLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::FrustumLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::FrustumLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::FrustumLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::FrustumLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EB3D8;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::FrustumLightComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>,re::Slice<re::ecs2::FrustumLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>*,re::Slice<re::ecs2::FrustumLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>,re::Slice<re::ecs2::FrustumLightComponent*>>::Subscription const&,re::Slice<re::ecs2::FrustumLightComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::FrustumLightComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>,re::Slice<re::ecs2::FrustumLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>*,re::Slice<re::ecs2::FrustumLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>,re::Slice<re::ecs2::FrustumLightComponent*>>::Subscription const&,re::Slice<re::ecs2::FrustumLightComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::FrustumLightComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>,re::Slice<re::ecs2::FrustumLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>*,re::Slice<re::ecs2::FrustumLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>,re::Slice<re::ecs2::FrustumLightComponent*>>::Subscription const&,re::Slice<re::ecs2::FrustumLightComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::FrustumLightComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>,re::Slice<re::ecs2::FrustumLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>*,re::Slice<re::ecs2::FrustumLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>,re::Slice<re::ecs2::FrustumLightComponent*>>::Subscription const&,re::Slice<re::ecs2::FrustumLightComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::FrustumLightComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>,re::Slice<re::ecs2::FrustumLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>*,re::Slice<re::ecs2::FrustumLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>,re::Slice<re::ecs2::FrustumLightComponent*>>::Subscription const&,re::Slice<re::ecs2::FrustumLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::FrustumLightComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>,re::Slice<re::ecs2::FrustumLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>*,re::Slice<re::ecs2::FrustumLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>,re::Slice<re::ecs2::FrustumLightComponent*>>::Subscription const&,re::Slice<re::ecs2::FrustumLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::FrustumLightComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>,re::Slice<re::ecs2::FrustumLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>*,re::Slice<re::ecs2::FrustumLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>,re::Slice<re::ecs2::FrustumLightComponent*>>::Subscription const&,re::Slice<re::ecs2::FrustumLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::FrustumLightComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>,re::Slice<re::ecs2::FrustumLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>*,re::Slice<re::ecs2::FrustumLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>,re::Slice<re::ecs2::FrustumLightComponent*>>::Subscription const&,re::Slice<re::ecs2::FrustumLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::FrustumLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::FrustumLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::FrustumLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::FrustumLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>,re::Slice<re::ecs2::FrustumLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>*,re::Slice<re::ecs2::FrustumLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>,re::Slice<re::ecs2::FrustumLightComponent*>>::Subscription const&,re::Slice<re::ecs2::FrustumLightComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ShadowMapComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ShadowMapComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ShadowMapComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::ShadowMapComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::ShadowMapComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::ShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::ShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 40, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(void *)(v2 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6EB4F0;
  double result = 2048.00048;
  *(void *)(v3 + 28) = 0x40A000003F800000;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ShadowMapComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EB578;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ShadowMapComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82A40, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82A40))
  {
    qword_26AF82A38 = re::ecs2::introspect_ShadowMapComponent(0);
    __cxa_guard_release(&qword_26AF82A40);
  }
  return qword_26AF82A38;
}

__n128 re::ecs2::ComponentType<re::ecs2::ShadowMapComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ShadowMapComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ShadowMapComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EB480;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::ShadowMapComponent::~ShadowMapComponent(re::ecs2::ShadowMapComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::ShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::ShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::ShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EB578;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ShadowMapComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>,re::Slice<re::ecs2::ShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>*,re::Slice<re::ecs2::ShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>,re::Slice<re::ecs2::ShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowMapComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ShadowMapComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>,re::Slice<re::ecs2::ShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>*,re::Slice<re::ecs2::ShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>,re::Slice<re::ecs2::ShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowMapComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ShadowMapComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>,re::Slice<re::ecs2::ShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>*,re::Slice<re::ecs2::ShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>,re::Slice<re::ecs2::ShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowMapComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ShadowMapComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>,re::Slice<re::ecs2::ShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>*,re::Slice<re::ecs2::ShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>,re::Slice<re::ecs2::ShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowMapComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ShadowMapComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>,re::Slice<re::ecs2::ShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>*,re::Slice<re::ecs2::ShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>,re::Slice<re::ecs2::ShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ShadowMapComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>,re::Slice<re::ecs2::ShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>*,re::Slice<re::ecs2::ShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>,re::Slice<re::ecs2::ShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ShadowMapComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>,re::Slice<re::ecs2::ShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>*,re::Slice<re::ecs2::ShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>,re::Slice<re::ecs2::ShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ShadowMapComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>,re::Slice<re::ecs2::ShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>*,re::Slice<re::ecs2::ShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>,re::Slice<re::ecs2::ShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ShadowMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ShadowMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ShadowMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ShadowMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>,re::Slice<re::ecs2::ShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>*,re::Slice<re::ecs2::ShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>,re::Slice<re::ecs2::ShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowMapComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PointLightShadowMapComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PointLightShadowMapComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PointLightShadowMapComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::PointLightShadowMapComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::PointLightShadowMapComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::PointLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::PointLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 56, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0u;
  *(void *)(v2 + 48) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6EB690;
  *(_DWORD *)(v3 + 28) = 1065353216;
  *(unsigned char *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(unsigned char *)(v3 + 36) = 0;
  *(unsigned char *)(v3 + 44) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PointLightShadowMapComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EB718;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PointLightShadowMapComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82A50, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82A50))
  {
    qword_26AF82A48 = re::ecs2::introspect_PointLightShadowMapComponent(0);
    __cxa_guard_release(&qword_26AF82A50);
  }
  return qword_26AF82A48;
}

__n128 re::ecs2::ComponentType<re::ecs2::PointLightShadowMapComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PointLightShadowMapComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PointLightShadowMapComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EB620;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::PointLightShadowMapComponent::~PointLightShadowMapComponent(re::ecs2::PointLightShadowMapComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PointLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::PointLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PointLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::PointLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::PointLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EB718;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PointLightShadowMapComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>,re::Slice<re::ecs2::PointLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>*,re::Slice<re::ecs2::PointLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>,re::Slice<re::ecs2::PointLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::PointLightShadowMapComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PointLightShadowMapComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>,re::Slice<re::ecs2::PointLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>*,re::Slice<re::ecs2::PointLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>,re::Slice<re::ecs2::PointLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::PointLightShadowMapComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PointLightShadowMapComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>,re::Slice<re::ecs2::PointLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>*,re::Slice<re::ecs2::PointLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>,re::Slice<re::ecs2::PointLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::PointLightShadowMapComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PointLightShadowMapComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>,re::Slice<re::ecs2::PointLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>*,re::Slice<re::ecs2::PointLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>,re::Slice<re::ecs2::PointLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::PointLightShadowMapComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PointLightShadowMapComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>,re::Slice<re::ecs2::PointLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>*,re::Slice<re::ecs2::PointLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>,re::Slice<re::ecs2::PointLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::PointLightShadowMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PointLightShadowMapComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>,re::Slice<re::ecs2::PointLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>*,re::Slice<re::ecs2::PointLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>,re::Slice<re::ecs2::PointLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::PointLightShadowMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PointLightShadowMapComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>,re::Slice<re::ecs2::PointLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>*,re::Slice<re::ecs2::PointLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>,re::Slice<re::ecs2::PointLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::PointLightShadowMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PointLightShadowMapComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>,re::Slice<re::ecs2::PointLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>*,re::Slice<re::ecs2::PointLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>,re::Slice<re::ecs2::PointLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::PointLightShadowMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PointLightShadowMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PointLightShadowMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PointLightShadowMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PointLightShadowMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>,re::Slice<re::ecs2::PointLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>*,re::Slice<re::ecs2::PointLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>,re::Slice<re::ecs2::PointLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::PointLightShadowMapComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::DirectionalLightShadowMapComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::DirectionalLightShadowMapComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::DirectionalLightShadowMapComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::DirectionalLightShadowMapComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::DirectionalLightShadowMapComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::DirectionalLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::DirectionalLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 56, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0u;
  *(void *)(v2 + 48) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6EB830;
  *(void *)(v3 + 28) = 0x40A000003F800000;
  *(unsigned char *)(v3 + 36) = 0;
  *(unsigned char *)(v3 + 38) = 1;
  double result = 524288.117;
  *(void *)(v3 + 40) = 0x412000003C23D70ALL;
  *(_DWORD *)(v3 + 48) = 1065353216;
  *(unsigned char *)(v3 + 52) = 1;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DirectionalLightShadowMapComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EB8B8;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DirectionalLightShadowMapComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82A60, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82A60))
  {
    qword_26AF82A58 = re::ecs2::introspect_DirectionalLightShadowMapComponent(0);
    __cxa_guard_release(&qword_26AF82A60);
  }
  return qword_26AF82A58;
}

__n128 re::ecs2::ComponentType<re::ecs2::DirectionalLightShadowMapComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DirectionalLightShadowMapComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::DirectionalLightShadowMapComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EB7C0;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::DirectionalLightShadowMapComponent::~DirectionalLightShadowMapComponent(re::ecs2::DirectionalLightShadowMapComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::DirectionalLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::DirectionalLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::DirectionalLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::DirectionalLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::DirectionalLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EB8B8;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DirectionalLightShadowMapComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>*,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DirectionalLightShadowMapComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>*,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DirectionalLightShadowMapComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>*,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DirectionalLightShadowMapComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>*,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DirectionalLightShadowMapComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>*,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DirectionalLightShadowMapComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>*,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DirectionalLightShadowMapComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>*,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DirectionalLightShadowMapComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>*,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DirectionalLightShadowMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DirectionalLightShadowMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DirectionalLightShadowMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DirectionalLightShadowMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>*,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::SpotLightShadowMapComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SpotLightShadowMapComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::SpotLightShadowMapComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::SpotLightShadowMapComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::SpotLightShadowMapComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::SpotLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::SpotLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 56, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0u;
  *(void *)(v2 + 48) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6EB9D0;
  *(_DWORD *)(v3 + 28) = 1065353216;
  *(unsigned char *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(unsigned char *)(v3 + 36) = 0;
  *(unsigned char *)(v3 + 44) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SpotLightShadowMapComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EBA58;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SpotLightShadowMapComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82A70, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82A70))
  {
    qword_26AF82A68 = re::ecs2::introspect_SpotLightShadowMapComponent(0);
    __cxa_guard_release(&qword_26AF82A70);
  }
  return qword_26AF82A68;
}

__n128 re::ecs2::ComponentType<re::ecs2::SpotLightShadowMapComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SpotLightShadowMapComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SpotLightShadowMapComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EB960;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SpotLightShadowMapComponent::~SpotLightShadowMapComponent(re::ecs2::SpotLightShadowMapComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SpotLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::SpotLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SpotLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::SpotLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::SpotLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EBA58;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SpotLightShadowMapComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>,re::Slice<re::ecs2::SpotLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>*,re::Slice<re::ecs2::SpotLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>,re::Slice<re::ecs2::SpotLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::SpotLightShadowMapComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SpotLightShadowMapComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>,re::Slice<re::ecs2::SpotLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>*,re::Slice<re::ecs2::SpotLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>,re::Slice<re::ecs2::SpotLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::SpotLightShadowMapComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SpotLightShadowMapComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>,re::Slice<re::ecs2::SpotLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>*,re::Slice<re::ecs2::SpotLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>,re::Slice<re::ecs2::SpotLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::SpotLightShadowMapComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SpotLightShadowMapComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>,re::Slice<re::ecs2::SpotLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>*,re::Slice<re::ecs2::SpotLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>,re::Slice<re::ecs2::SpotLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::SpotLightShadowMapComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SpotLightShadowMapComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>,re::Slice<re::ecs2::SpotLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>*,re::Slice<re::ecs2::SpotLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>,re::Slice<re::ecs2::SpotLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::SpotLightShadowMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SpotLightShadowMapComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>,re::Slice<re::ecs2::SpotLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>*,re::Slice<re::ecs2::SpotLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>,re::Slice<re::ecs2::SpotLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::SpotLightShadowMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SpotLightShadowMapComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>,re::Slice<re::ecs2::SpotLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>*,re::Slice<re::ecs2::SpotLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>,re::Slice<re::ecs2::SpotLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::SpotLightShadowMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SpotLightShadowMapComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>,re::Slice<re::ecs2::SpotLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>*,re::Slice<re::ecs2::SpotLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>,re::Slice<re::ecs2::SpotLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::SpotLightShadowMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SpotLightShadowMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SpotLightShadowMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SpotLightShadowMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SpotLightShadowMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>,re::Slice<re::ecs2::SpotLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>*,re::Slice<re::ecs2::SpotLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>,re::Slice<re::ecs2::SpotLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::SpotLightShadowMapComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::FilterMapComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::FilterMapComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::FilterMapComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::FilterMapComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::FilterMapComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::FilterMapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::FilterMapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 56, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0u;
  *(void *)(v2 + 48) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6EBB70;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = 0;
  *(void *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::FilterMapComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EBBF8;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::FilterMapComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82A80, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82A80))
  {
    qword_26AF82A78 = re::ecs2::introspect_FilterMapComponent(0);
    __cxa_guard_release(&qword_26AF82A80);
  }
  return qword_26AF82A78;
}

__n128 re::ecs2::ComponentType<re::ecs2::FilterMapComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::FilterMapComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::FilterMapComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EBB00;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::FilterMapComponent::~FilterMapComponent(re::ecs2::FilterMapComponent *this)
{
  *(void *)this = &unk_26E6EBB70;
  re::AssetHandle::~AssetHandle((re::ecs2::FilterMapComponent *)((char *)this + 32));
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6EBB70;
  re::AssetHandle::~AssetHandle((re::ecs2::FilterMapComponent *)((char *)this + 32));
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::FilterMapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::FilterMapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::FilterMapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::FilterMapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::FilterMapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EBBF8;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::FilterMapComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>,re::Slice<re::ecs2::FilterMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>*,re::Slice<re::ecs2::FilterMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>,re::Slice<re::ecs2::FilterMapComponent*>>::Subscription const&,re::Slice<re::ecs2::FilterMapComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::FilterMapComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>,re::Slice<re::ecs2::FilterMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>*,re::Slice<re::ecs2::FilterMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>,re::Slice<re::ecs2::FilterMapComponent*>>::Subscription const&,re::Slice<re::ecs2::FilterMapComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::FilterMapComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>,re::Slice<re::ecs2::FilterMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>*,re::Slice<re::ecs2::FilterMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>,re::Slice<re::ecs2::FilterMapComponent*>>::Subscription const&,re::Slice<re::ecs2::FilterMapComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::FilterMapComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>,re::Slice<re::ecs2::FilterMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>*,re::Slice<re::ecs2::FilterMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>,re::Slice<re::ecs2::FilterMapComponent*>>::Subscription const&,re::Slice<re::ecs2::FilterMapComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::FilterMapComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>,re::Slice<re::ecs2::FilterMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>*,re::Slice<re::ecs2::FilterMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>,re::Slice<re::ecs2::FilterMapComponent*>>::Subscription const&,re::Slice<re::ecs2::FilterMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::FilterMapComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>,re::Slice<re::ecs2::FilterMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>*,re::Slice<re::ecs2::FilterMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>,re::Slice<re::ecs2::FilterMapComponent*>>::Subscription const&,re::Slice<re::ecs2::FilterMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::FilterMapComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>,re::Slice<re::ecs2::FilterMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>*,re::Slice<re::ecs2::FilterMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>,re::Slice<re::ecs2::FilterMapComponent*>>::Subscription const&,re::Slice<re::ecs2::FilterMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::FilterMapComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>,re::Slice<re::ecs2::FilterMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>*,re::Slice<re::ecs2::FilterMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>,re::Slice<re::ecs2::FilterMapComponent*>>::Subscription const&,re::Slice<re::ecs2::FilterMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::FilterMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::FilterMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::FilterMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::FilterMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>,re::Slice<re::ecs2::FilterMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>*,re::Slice<re::ecs2::FilterMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>,re::Slice<re::ecs2::FilterMapComponent*>>::Subscription const&,re::Slice<re::ecs2::FilterMapComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::VFXSceneComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VFXSceneComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::VFXSceneComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::VFXSceneComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::VFXSceneComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (re::ecs2::VFXSceneComponent *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::VFXSceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                            + 7)
                                                                                         + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::VFXSceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 368, 0);
  re::ecs2::VFXSceneComponent::VFXSceneComponent(v2);
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VFXSceneComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EBD10;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

char *re::ecs2::ComponentType<re::ecs2::VFXSceneComponent>::doGetComponentIntrospectionInfo()
{
  v0 = re::KTXTextureCompiler::getSupportedExtensions(void)const::supportedExtensions;
  {
    v0 = re::KTXTextureCompiler::getSupportedExtensions(void)const::supportedExtensions;
    if (v2)
    {
      re::introspect<re::ecs2::VFXSceneComponent>(void)::info = (_UNKNOWN *)re::ecs2::introspect_VFXSceneComponent(0);
      v0 = re::KTXTextureCompiler::getSupportedExtensions(void)const::supportedExtensions;
    }
  }
  return v0[121];
}

__n128 re::ecs2::ComponentType<re::ecs2::VFXSceneComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VFXSceneComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VFXSceneComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EBCA0;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EBD10;
  int v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VFXSceneComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>,re::Slice<re::ecs2::VFXSceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>*,re::Slice<re::ecs2::VFXSceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>,re::Slice<re::ecs2::VFXSceneComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VFXSceneComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>,re::Slice<re::ecs2::VFXSceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>*,re::Slice<re::ecs2::VFXSceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>,re::Slice<re::ecs2::VFXSceneComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VFXSceneComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>,re::Slice<re::ecs2::VFXSceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>*,re::Slice<re::ecs2::VFXSceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>,re::Slice<re::ecs2::VFXSceneComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VFXSceneComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>,re::Slice<re::ecs2::VFXSceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>*,re::Slice<re::ecs2::VFXSceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>,re::Slice<re::ecs2::VFXSceneComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VFXSceneComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>,re::Slice<re::ecs2::VFXSceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>*,re::Slice<re::ecs2::VFXSceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>,re::Slice<re::ecs2::VFXSceneComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VFXSceneComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>,re::Slice<re::ecs2::VFXSceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>*,re::Slice<re::ecs2::VFXSceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>,re::Slice<re::ecs2::VFXSceneComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VFXSceneComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>,re::Slice<re::ecs2::VFXSceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>*,re::Slice<re::ecs2::VFXSceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>,re::Slice<re::ecs2::VFXSceneComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VFXSceneComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>,re::Slice<re::ecs2::VFXSceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>*,re::Slice<re::ecs2::VFXSceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>,re::Slice<re::ecs2::VFXSceneComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VFXSceneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VFXSceneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VFXSceneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VFXSceneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>,re::Slice<re::ecs2::VFXSceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>*,re::Slice<re::ecs2::VFXSceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>,re::Slice<re::ecs2::VFXSceneComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::VFXSceneMetadataComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VFXSceneMetadataComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::VFXSceneMetadataComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::VFXSceneMetadataComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::VFXSceneMetadataComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  int v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::VFXSceneMetadataComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::VFXSceneMetadataComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 96, 0);
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E2900;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = 0;
  *(void *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(_DWORD *)(v3 + 56) = 0;
  double result = 0.0;
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 80) = 0u;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VFXSceneMetadataComponent>::doMakeSceneComponentCollection(re *a1)
{
  int v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EBE28;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VFXSceneMetadataComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82A90, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82A90))
  {
    qword_26AF82A88 = re::ecs2::introspect_VFXSceneMetadataComponent(0);
    __cxa_guard_release(&qword_26AF82A90);
  }
  return qword_26AF82A88;
}

__n128 re::ecs2::ComponentType<re::ecs2::VFXSceneMetadataComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VFXSceneMetadataComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VFXSceneMetadataComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EBDB8;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EBE28;
  int v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VFXSceneMetadataComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>,re::Slice<re::ecs2::VFXSceneMetadataComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>*,re::Slice<re::ecs2::VFXSceneMetadataComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>,re::Slice<re::ecs2::VFXSceneMetadataComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneMetadataComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VFXSceneMetadataComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>,re::Slice<re::ecs2::VFXSceneMetadataComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>*,re::Slice<re::ecs2::VFXSceneMetadataComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>,re::Slice<re::ecs2::VFXSceneMetadataComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneMetadataComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VFXSceneMetadataComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>,re::Slice<re::ecs2::VFXSceneMetadataComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>*,re::Slice<re::ecs2::VFXSceneMetadataComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>,re::Slice<re::ecs2::VFXSceneMetadataComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneMetadataComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VFXSceneMetadataComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>,re::Slice<re::ecs2::VFXSceneMetadataComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>*,re::Slice<re::ecs2::VFXSceneMetadataComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>,re::Slice<re::ecs2::VFXSceneMetadataComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneMetadataComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VFXSceneMetadataComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>,re::Slice<re::ecs2::VFXSceneMetadataComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>*,re::Slice<re::ecs2::VFXSceneMetadataComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>,re::Slice<re::ecs2::VFXSceneMetadataComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneMetadataComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VFXSceneMetadataComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>,re::Slice<re::ecs2::VFXSceneMetadataComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>*,re::Slice<re::ecs2::VFXSceneMetadataComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>,re::Slice<re::ecs2::VFXSceneMetadataComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneMetadataComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VFXSceneMetadataComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>,re::Slice<re::ecs2::VFXSceneMetadataComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>*,re::Slice<re::ecs2::VFXSceneMetadataComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>,re::Slice<re::ecs2::VFXSceneMetadataComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneMetadataComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VFXSceneMetadataComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>,re::Slice<re::ecs2::VFXSceneMetadataComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>*,re::Slice<re::ecs2::VFXSceneMetadataComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>,re::Slice<re::ecs2::VFXSceneMetadataComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneMetadataComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VFXSceneMetadataComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VFXSceneMetadataComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VFXSceneMetadataComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VFXSceneMetadataComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>,re::Slice<re::ecs2::VFXSceneMetadataComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>*,re::Slice<re::ecs2::VFXSceneMetadataComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>,re::Slice<re::ecs2::VFXSceneMetadataComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneMetadataComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::VFXSceneReadbackComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VFXSceneReadbackComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::VFXSceneReadbackComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::VFXSceneReadbackComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::VFXSceneReadbackComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::VFXSceneReadbackComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::VFXSceneReadbackComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 88, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(void *)(v2 + 80) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E27E0;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_DWORD *)(v3 + 64) = 0;
  *(void *)&double result = 0x7FFFFFFFLL;
  *(void *)(v3 + 68) = 0x7FFFFFFFLL;
  *(unsigned char *)(v3 + 80) = 0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VFXSceneReadbackComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EBF40;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VFXSceneReadbackComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82AA0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82AA0))
  {
    qword_26AF82A98 = re::ecs2::introspect_VFXSceneReadbackComponent(0);
    __cxa_guard_release(&qword_26AF82AA0);
  }
  return qword_26AF82A98;
}

__n128 re::ecs2::ComponentType<re::ecs2::VFXSceneReadbackComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VFXSceneReadbackComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VFXSceneReadbackComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EBED0;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EBF40;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VFXSceneReadbackComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>,re::Slice<re::ecs2::VFXSceneReadbackComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>*,re::Slice<re::ecs2::VFXSceneReadbackComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>,re::Slice<re::ecs2::VFXSceneReadbackComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneReadbackComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VFXSceneReadbackComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>,re::Slice<re::ecs2::VFXSceneReadbackComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>*,re::Slice<re::ecs2::VFXSceneReadbackComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>,re::Slice<re::ecs2::VFXSceneReadbackComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneReadbackComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VFXSceneReadbackComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>,re::Slice<re::ecs2::VFXSceneReadbackComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>*,re::Slice<re::ecs2::VFXSceneReadbackComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>,re::Slice<re::ecs2::VFXSceneReadbackComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneReadbackComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VFXSceneReadbackComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>,re::Slice<re::ecs2::VFXSceneReadbackComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>*,re::Slice<re::ecs2::VFXSceneReadbackComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>,re::Slice<re::ecs2::VFXSceneReadbackComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneReadbackComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VFXSceneReadbackComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>,re::Slice<re::ecs2::VFXSceneReadbackComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>*,re::Slice<re::ecs2::VFXSceneReadbackComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>,re::Slice<re::ecs2::VFXSceneReadbackComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneReadbackComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VFXSceneReadbackComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>,re::Slice<re::ecs2::VFXSceneReadbackComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>*,re::Slice<re::ecs2::VFXSceneReadbackComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>,re::Slice<re::ecs2::VFXSceneReadbackComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneReadbackComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VFXSceneReadbackComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>,re::Slice<re::ecs2::VFXSceneReadbackComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>*,re::Slice<re::ecs2::VFXSceneReadbackComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>,re::Slice<re::ecs2::VFXSceneReadbackComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneReadbackComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VFXSceneReadbackComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>,re::Slice<re::ecs2::VFXSceneReadbackComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>*,re::Slice<re::ecs2::VFXSceneReadbackComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>,re::Slice<re::ecs2::VFXSceneReadbackComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneReadbackComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VFXSceneReadbackComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VFXSceneReadbackComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VFXSceneReadbackComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VFXSceneReadbackComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>,re::Slice<re::ecs2::VFXSceneReadbackComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>*,re::Slice<re::ecs2::VFXSceneReadbackComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>,re::Slice<re::ecs2::VFXSceneReadbackComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneReadbackComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::RenderGraphFileProviderArrayComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::RenderGraphFileProviderArrayComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::RenderGraphFileProviderArrayComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::RenderGraphFileProviderArrayComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::RenderGraphFileProviderArrayComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::RenderGraphFileProviderArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::RenderGraphFileProviderArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 88, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(void *)(v2 + 80) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(_WORD *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6EC058;
  *(void *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(void *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 1000;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = 0;
  *(void *)(v3 + 56) = 0;
  *(_DWORD *)(v3 + 64) = 0;
  *(unsigned char *)(v3 + 80) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RenderGraphFileProviderArrayComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EC0E0;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RenderGraphFileProviderArrayComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82AB0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82AB0))
  {
    qword_26AF82AA8 = re::ecs2::introspect_RenderGraphFileProviderArrayComponent(0);
    __cxa_guard_release(&qword_26AF82AB0);
  }
  return qword_26AF82AA8;
}

__n128 re::ecs2::ComponentType<re::ecs2::RenderGraphFileProviderArrayComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RenderGraphFileProviderArrayComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::RenderGraphFileProviderArrayComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EBFE8;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::RenderGraphFileProviderArrayComponent::~RenderGraphFileProviderArrayComponent(re::ecs2::RenderGraphFileProviderArrayComponent *this)
{
  *(void *)this = &unk_26E6EC058;
  re::DynamicArray<re::ecs2::RenderGraphFileProviderEntry>::deinit((uint64_t)this + 40);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6EC058;
  re::DynamicArray<re::ecs2::RenderGraphFileProviderEntry>::deinit((uint64_t)this + 40);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::RenderGraphFileProviderArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::RenderGraphFileProviderArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::RenderGraphFileProviderArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::RenderGraphFileProviderArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::RenderGraphFileProviderArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

uint64_t re::DynamicArray<re::ecs2::RenderGraphFileProviderEntry>::deinit(uint64_t a1)
{
  uint64_t result = *(void *)a1;
  if (result)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    if (v3)
    {
      uint64_t v4 = *(void *)(a1 + 16);
      if (v4)
      {
        uint64_t v5 = 80 * v4;
        do
        {
          re::DynamicString::deinit((re::DynamicString *)(v3 + 24));
          re::AssetHandle::~AssetHandle((re::AssetHandle *)v3);
          v3 += 80;
          v5 -= 80;
        }
        while (v5);
        uint64_t result = *(void *)a1;
        uint64_t v3 = *(void *)(a1 + 32);
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 40))(result, v3);
    }
    *(void *)(a1 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = 0;
    ++*(_DWORD *)(a1 + 24);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EC0E0;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RenderGraphFileProviderArrayComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>*,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RenderGraphFileProviderArrayComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>*,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RenderGraphFileProviderArrayComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>*,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RenderGraphFileProviderArrayComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>*,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RenderGraphFileProviderArrayComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>*,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RenderGraphFileProviderArrayComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>*,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RenderGraphFileProviderArrayComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>*,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RenderGraphFileProviderArrayComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>*,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RenderGraphFileProviderArrayComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RenderGraphFileProviderArrayComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RenderGraphFileProviderArrayComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RenderGraphFileProviderArrayComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>*,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ListenerComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ListenerComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ListenerComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::ListenerComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::ListenerComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::ListenerComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::ListenerComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 144, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  *((_OWORD *)v2 + 8) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6EC1F8;
  *(_DWORD *)(v3 + 28) = 1065353216;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = xmmword_234361D10;
  *(unsigned char *)(v3 + 48) = 1;
  *(_DWORD *)(v3 + 52) = 1065353216;
  *(_OWORD *)(v3 + 64) = xmmword_23435FD50;
  *(_OWORD *)(v3 + 80) = xmmword_23435FD60;
  double result = 0.0;
  *(_OWORD *)(v3 + 96) = xmmword_23435FD80;
  *(_OWORD *)(v3 + 112) = xmmword_23435FBB0;
  *(unsigned char *)(v3 + 128) = 1;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ListenerComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EC280;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ListenerComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82AC0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82AC0))
  {
    qword_26AF82AB8 = re::ecs2::introspect_ListenerComponent(0);
    __cxa_guard_release(&qword_26AF82AC0);
  }
  return qword_26AF82AB8;
}

__n128 re::ecs2::ComponentType<re::ecs2::ListenerComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ListenerComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ListenerComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EC188;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::ListenerComponent::~ListenerComponent(re::ecs2::ListenerComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ListenerComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::ListenerComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ListenerComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::ListenerComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::ListenerComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EC280;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>::registerCallbacks(_DWORD *a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ListenerComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>,re::Slice<re::ecs2::ListenerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>*,re::Slice<re::ecs2::ListenerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>,re::Slice<re::ecs2::ListenerComponent*>>::Subscription const&,re::Slice<re::ecs2::ListenerComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ListenerComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>,re::Slice<re::ecs2::ListenerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>*,re::Slice<re::ecs2::ListenerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>,re::Slice<re::ecs2::ListenerComponent*>>::Subscription const&,re::Slice<re::ecs2::ListenerComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ListenerComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>,re::Slice<re::ecs2::ListenerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>*,re::Slice<re::ecs2::ListenerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>,re::Slice<re::ecs2::ListenerComponent*>>::Subscription const&,re::Slice<re::ecs2::ListenerComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ListenerComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>,re::Slice<re::ecs2::ListenerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>*,re::Slice<re::ecs2::ListenerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>,re::Slice<re::ecs2::ListenerComponent*>>::Subscription const&,re::Slice<re::ecs2::ListenerComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ListenerComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>,re::Slice<re::ecs2::ListenerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>*,re::Slice<re::ecs2::ListenerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>,re::Slice<re::ecs2::ListenerComponent*>>::Subscription const&,re::Slice<re::ecs2::ListenerComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ListenerComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>,re::Slice<re::ecs2::ListenerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>*,re::Slice<re::ecs2::ListenerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>,re::Slice<re::ecs2::ListenerComponent*>>::Subscription const&,re::Slice<re::ecs2::ListenerComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ListenerComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>,re::Slice<re::ecs2::ListenerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>*,re::Slice<re::ecs2::ListenerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>,re::Slice<re::ecs2::ListenerComponent*>>::Subscription const&,re::Slice<re::ecs2::ListenerComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ListenerComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>,re::Slice<re::ecs2::ListenerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>*,re::Slice<re::ecs2::ListenerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>,re::Slice<re::ecs2::ListenerComponent*>>::Subscription const&,re::Slice<re::ecs2::ListenerComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ListenerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ListenerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ListenerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ListenerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>,re::Slice<re::ecs2::ListenerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>*,re::Slice<re::ecs2::ListenerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>,re::Slice<re::ecs2::ListenerComponent*>>::Subscription const&,re::Slice<re::ecs2::ListenerComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::MaterialOverrideComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::MaterialOverrideComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::MaterialOverrideComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::MaterialOverrideComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::MaterialOverrideComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::MaterialOverrideComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::MaterialOverrideComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 72, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(void *)(v2 + 64) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F6FD0;
  *(void *)(v3 + 64) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = 0;
  *(void *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(_DWORD *)(v3 + 56) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MaterialOverrideComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EC398;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MaterialOverrideComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82AD0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82AD0))
  {
    qword_26AF82AC8 = re::ecs2::introspect_MaterialOverrideComponent(0);
    __cxa_guard_release(&qword_26AF82AD0);
  }
  return qword_26AF82AC8;
}

__n128 re::ecs2::ComponentType<re::ecs2::MaterialOverrideComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MaterialOverrideComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::MaterialOverrideComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EC328;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::MaterialOverrideComponent::~MaterialOverrideComponent(re::ecs2::MaterialOverrideComponent *this)
{
  *(void *)this = &unk_26E6F6FD0;
  re::DynamicArray<re::ecs2::MaterialOverride>::deinit((uint64_t)this + 32);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6F6FD0;
  re::DynamicArray<re::ecs2::MaterialOverride>::deinit((uint64_t)this + 32);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::MaterialOverrideComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::MaterialOverrideComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::MaterialOverrideComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::MaterialOverrideComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::MaterialOverrideComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

uint64_t re::DynamicArray<re::ecs2::MaterialOverride>::deinit(uint64_t a1)
{
  uint64_t result = *(void *)a1;
  if (result)
  {
    uint64_t v3 = *(uint64_t **)(a1 + 32);
    if (v3)
    {
      uint64_t v4 = *(void *)(a1 + 16);
      if (v4)
      {
        uint64_t v5 = 120 * v4;
        do
        {
          re::AssetHandle::~AssetHandle((re::AssetHandle *)(v3 + 12));
          re::AssetHandle::~AssetHandle((re::AssetHandle *)(v3 + 9));
          re::AssetHandle::~AssetHandle((re::AssetHandle *)(v3 + 6));
          re::HashTable<re::StringID,re::ecs2::MaterialParameterVariant,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit(v3);
          v3 += 15;
          v5 -= 120;
        }
        while (v5);
        uint64_t result = *(void *)a1;
        uint64_t v3 = *(uint64_t **)(a1 + 32);
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t *))(*(void *)result + 40))(result, v3);
    }
    *(void *)(a1 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = 0;
    ++*(_DWORD *)(a1 + 24);
  }
  return result;
}

double re::HashTable<re::StringID,re::ecs2::MaterialParameterVariant,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2)
  {
    if (*((_DWORD *)a1 + 8))
    {
      uint64_t v3 = 0;
      unint64_t v4 = 0;
      do
      {
        re::HashTable<re::StringID,re::ecs2::MaterialParameterVariant,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::EntryWithoutHash::free((_DWORD *)(a1[2] + v3));
        ++v4;
        v3 += 120;
      }
      while (v4 < *((unsigned int *)a1 + 8));
      uint64_t v2 = *a1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)v2 + 40))(v2, a1[1]);
    *((_DWORD *)a1 + 8) = 0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
    *(void *)&double result = 0x7FFFFFFFLL;
    *(uint64_t *)((char *)a1 + 36) = 0x7FFFFFFFLL;
  }
  return result;
}

void re::HashTable<re::StringID,re::ecs2::MaterialParameterVariant,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::EntryWithoutHash::free(_DWORD *a1)
{
  if ((*a1 & 0x80000000) != 0)
  {
    *a1 &= ~0x80000000;
    re::StringID::destroyString((re::StringID *)(a1 + 2));
    re::AssetHandle::~AssetHandle((re::AssetHandle *)(a1 + 24));
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EC398;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>::registerCallbacks(_DWORD *a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MaterialOverrideComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>,re::Slice<re::ecs2::MaterialOverrideComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>*,re::Slice<re::ecs2::MaterialOverrideComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>,re::Slice<re::ecs2::MaterialOverrideComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialOverrideComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MaterialOverrideComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>,re::Slice<re::ecs2::MaterialOverrideComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>*,re::Slice<re::ecs2::MaterialOverrideComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>,re::Slice<re::ecs2::MaterialOverrideComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialOverrideComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MaterialOverrideComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>,re::Slice<re::ecs2::MaterialOverrideComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>*,re::Slice<re::ecs2::MaterialOverrideComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>,re::Slice<re::ecs2::MaterialOverrideComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialOverrideComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MaterialOverrideComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>,re::Slice<re::ecs2::MaterialOverrideComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>*,re::Slice<re::ecs2::MaterialOverrideComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>,re::Slice<re::ecs2::MaterialOverrideComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialOverrideComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MaterialOverrideComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>,re::Slice<re::ecs2::MaterialOverrideComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>*,re::Slice<re::ecs2::MaterialOverrideComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>,re::Slice<re::ecs2::MaterialOverrideComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialOverrideComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MaterialOverrideComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>,re::Slice<re::ecs2::MaterialOverrideComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>*,re::Slice<re::ecs2::MaterialOverrideComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>,re::Slice<re::ecs2::MaterialOverrideComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialOverrideComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MaterialOverrideComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>,re::Slice<re::ecs2::MaterialOverrideComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>*,re::Slice<re::ecs2::MaterialOverrideComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>,re::Slice<re::ecs2::MaterialOverrideComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialOverrideComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MaterialOverrideComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>,re::Slice<re::ecs2::MaterialOverrideComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>*,re::Slice<re::ecs2::MaterialOverrideComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>,re::Slice<re::ecs2::MaterialOverrideComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialOverrideComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MaterialOverrideComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MaterialOverrideComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MaterialOverrideComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MaterialOverrideComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>,re::Slice<re::ecs2::MaterialOverrideComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>*,re::Slice<re::ecs2::MaterialOverrideComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>,re::Slice<re::ecs2::MaterialOverrideComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialOverrideComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::DirectMaterialParametersArrayComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::DirectMaterialParametersArrayComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::DirectMaterialParametersArrayComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::DirectMaterialParametersArrayComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::DirectMaterialParametersArrayComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::DirectMaterialParametersArrayComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::DirectMaterialParametersArrayComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 72, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(void *)(v2 + 64) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6EC4B0;
  *(void *)(v3 + 64) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = 0;
  *(void *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(_DWORD *)(v3 + 56) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DirectMaterialParametersArrayComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EC538;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DirectMaterialParametersArrayComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82AE0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82AE0))
  {
    qword_26AF82AD8 = re::ecs2::introspect_DirectMaterialParametersArrayComponent(0);
    __cxa_guard_release(&qword_26AF82AE0);
  }
  return qword_26AF82AD8;
}

__n128 re::ecs2::ComponentType<re::ecs2::DirectMaterialParametersArrayComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DirectMaterialParametersArrayComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::DirectMaterialParametersArrayComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EC440;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::DirectMaterialParametersArrayComponent::~DirectMaterialParametersArrayComponent(re::ecs2::DirectMaterialParametersArrayComponent *this)
{
  *(void *)this = &unk_26E6EC4B0;
  re::DynamicArray<re::ecs2::SerializableDirectMaterialParameters>::deinit((uint64_t)this + 32);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6EC4B0;
  re::DynamicArray<re::ecs2::SerializableDirectMaterialParameters>::deinit((uint64_t)this + 32);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::DirectMaterialParametersArrayComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::DirectMaterialParametersArrayComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::DirectMaterialParametersArrayComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return 16;
}

void *re::ecs2::ComponentImpl<re::ecs2::DirectMaterialParametersArrayComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::DirectMaterialParametersArrayComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

uint64_t re::DynamicArray<re::ecs2::SerializableDirectMaterialParameters>::deinit(uint64_t a1)
{
  uint64_t result = *(void *)a1;
  if (result)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    if (v3)
    {
      uint64_t v4 = *(void *)(a1 + 16);
      if (v4)
      {
        uint64_t v5 = 80 * v4;
        do
        {
          re::DynamicArray<re::SharedPtr<re::ecs2::System>>::deinit(v3 + 40);
          re::DynamicArray<re::SharedPtr<re::ecs2::System>>::deinit(v3);
          v3 += 80;
          v5 -= 80;
        }
        while (v5);
        uint64_t result = *(void *)a1;
        uint64_t v3 = *(void *)(a1 + 32);
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 40))(result, v3);
    }
    *(void *)(a1 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = 0;
    ++*(_DWORD *)(a1 + 24);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EC538;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DirectMaterialParametersArrayComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>*,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DirectMaterialParametersArrayComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>*,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DirectMaterialParametersArrayComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>*,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DirectMaterialParametersArrayComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>*,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DirectMaterialParametersArrayComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>*,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DirectMaterialParametersArrayComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>*,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DirectMaterialParametersArrayComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>*,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DirectMaterialParametersArrayComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>*,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DirectMaterialParametersArrayComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DirectMaterialParametersArrayComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DirectMaterialParametersArrayComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DirectMaterialParametersArrayComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>*,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

uint64_t re::ecs2::ComponentType<re::ecs2::MaterialParameterBlockArrayComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::MaterialParameterBlockArrayComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::MaterialParameterBlockArrayComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::MaterialParameterBlockArrayComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::MaterialParameterBlockArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::MaterialParameterBlockArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 152, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(void *)(v2 + 144) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6EC650;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = 0;
  *(void *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(_DWORD *)(v3 + 56) = 0;
  *(void *)(v3 + 144) = 0;
  double result = 0.0;
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 80) = 0u;
  *(_DWORD *)(v3 + 96) = 0;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0u;
  *(_DWORD *)(v3 + 136) = 0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MaterialParameterBlockArrayComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EC6D8;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MaterialParameterBlockArrayComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82AF0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82AF0))
  {
    qword_26AF82AE8 = re::ecs2::introspect_MaterialParameterBlockArrayComponent(0);
    __cxa_guard_release(&qword_26AF82AF0);
  }
  return qword_26AF82AE8;
}

__n128 re::ecs2::ComponentType<re::ecs2::MaterialParameterBlockArrayComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MaterialParameterBlockArrayComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::MaterialParameterBlockArrayComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EC5E0;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::MaterialParameterBlockArrayComponent::~MaterialParameterBlockArrayComponent(re::ecs2::MaterialParameterBlockArrayComponent *this)
{
  *(void *)this = &unk_26E6EC650;
  uint64_t v2 = (char *)this + 32;
  re::DynamicArray<re::ecs2::SerializableMaterialParameterBlock>::deinit((uint64_t)this + 112);
  re::DynamicArray<re::SharedPtr<re::ecs2::System>>::deinit((uint64_t)this + 72);
  re::DynamicArray<re::ecs2::SerializableMaterialParameterBlockHandle>::deinit((uint64_t)v2);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  char *v2;
  uint64_t vars8;

  *(void *)this = &unk_26E6EC650;
  uint64_t v2 = (char *)this + 32;
  re::DynamicArray<re::ecs2::SerializableMaterialParameterBlock>::deinit((uint64_t)this + 112);
  re::DynamicArray<re::SharedPtr<re::ecs2::System>>::deinit((uint64_t)this + 72);
  re::DynamicArray<re::ecs2::SerializableMaterialParameterBlockHandle>::deinit((uint64_t)v2);
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::MaterialParameterBlockArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::MaterialParameterBlockArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::MaterialParameterBlockArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return 8;
}

void *re::ecs2::ComponentImpl<re::ecs2::MaterialParameterBlockArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::MaterialParameterBlockArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

uint64_t re::DynamicArray<re::ecs2::SerializableMaterialParameterBlock>::deinit(uint64_t a1)
{
  uint64_t result = *(void *)a1;
  if (result)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    if (v3)
    {
      uint64_t v4 = *(void *)(a1 + 16);
      if (v4)
      {
        uint64_t v5 = 0;
        uint64_t v6 = 408 * v4;
        do
        {
          re::HashSetBase<re::StringID,re::StringID,re::internal::ValueAsKey<re::StringID>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)(v3 + v5 + 352));
          re::HashTable<re::StringID,re::ecs2::SerializedMaterialParameter,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)(v3 + v5 + 304));
          re::HashTable<re::StringID,re::Optional<re::ecs2::SerializableParameterBinding>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)(v3 + v5 + 256));
          re::HashTable<unsigned long long,re::RenderGraphTargetHandle,re::PrecalculatedHash,re::EqualTo<unsigned long long>,false,false>::deinit((uint64_t *)(v3 + v5 + 208));
          re::HashTable<re::StringID,re::StringID,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)(v3 + v5 + 160));
          re::HashTable<re::StringID,re::DataArrayHandle<re::RigGraphOperatorDefinition>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)(v3 + v5 + 112));
          re::HashTable<re::StringID,re::DataArrayHandle<re::RigGraphOperatorDefinition>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)(v3 + v5 + 64));
          re::HashTable<re::StringID,re::StringID,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)(v3 + v5 + 16));
          *(void *)(v3 + v5) = &unk_26E6DECE0;
          objc_destructInstance((id)(v3 + v5 + 8));
          v5 += 408;
        }
        while (v6 != v5);
        uint64_t result = *(void *)a1;
        uint64_t v3 = *(void *)(a1 + 32);
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 40))(result, v3);
    }
    *(void *)(a1 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = 0;
    ++*(_DWORD *)(a1 + 24);
  }
  return result;
}

double re::HashTable<re::StringID,re::Optional<re::ecs2::SerializableParameterBinding>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2)
  {
    if (*((_DWORD *)a1 + 8))
    {
      uint64_t v3 = 0;
      unint64_t v4 = 0;
      do
      {
        re::HashTable<re::StringID,re::Optional<re::ecs2::SerializableParameterBinding>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::EntryWithoutHash::free((_DWORD *)(a1[2] + v3));
        ++v4;
        v3 += 72;
      }
      while (v4 < *((unsigned int *)a1 + 8));
      uint64_t v2 = *a1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)v2 + 40))(v2, a1[1]);
    *((_DWORD *)a1 + 8) = 0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
    *(void *)&double result = 0x7FFFFFFFLL;
    *(uint64_t *)((char *)a1 + 36) = 0x7FFFFFFFLL;
  }
  return result;
}

_DWORD *re::HashTable<re::StringID,re::Optional<re::ecs2::SerializableParameterBinding>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::EntryWithoutHash::free(_DWORD *result)
{
  if ((*result & 0x80000000) != 0)
  {
    int v1 = result;
    *result &= ~0x80000000;
    re::StringID::destroyString((re::StringID *)(result + 2));
    return re::Optional<re::ecs2::SerializableParameterBinding>::~Optional((unsigned char *)v1 + 24);
  }
  return result;
}

unsigned char *re::Optional<re::ecs2::SerializableParameterBinding>::~Optional(unsigned char *a1)
{
  if (*a1)
  {
    re::StringID::destroyString((re::StringID *)(a1 + 32));
    re::StringID::destroyString((re::StringID *)(a1 + 16));
  }
  return a1;
}

double re::HashTable<re::StringID,re::StringID,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2)
  {
    if (*((_DWORD *)a1 + 8))
    {
      uint64_t v3 = 0;
      unint64_t v4 = 0;
      do
      {
        re::HashTable<re::StringID,re::StringID,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::EntryWithoutHash::free((_DWORD *)(a1[2] + v3));
        ++v4;
        v3 += 40;
      }
      while (v4 < *((unsigned int *)a1 + 8));
      uint64_t v2 = *a1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)v2 + 40))(v2, a1[1]);
    *((_DWORD *)a1 + 8) = 0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
    *(void *)&double result = 0x7FFFFFFFLL;
    *(uint64_t *)((char *)a1 + 36) = 0x7FFFFFFFLL;
  }
  return result;
}

uint64_t re::DynamicArray<re::ecs2::SerializableMaterialParameterBlockHandle>::deinit(uint64_t a1)
{
  uint64_t result = *(void *)a1;
  if (result)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    if (v3)
    {
      uint64_t v4 = *(void *)(a1 + 16);
      if (v4)
      {
        uint64_t v5 = 24 * v4;
        do
        {
          if (*(void *)v3)
          {

            *(void *)uint64_t v3 = 0;
          }
          v3 += 24;
          v5 -= 24;
        }
        while (v5);
        uint64_t result = *(void *)a1;
        uint64_t v3 = *(void *)(a1 + 32);
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 40))(result, v3);
    }
    *(void *)(a1 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = 0;
    ++*(_DWORD *)(a1 + 24);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EC6D8;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MaterialParameterBlockArrayComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>*,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MaterialParameterBlockArrayComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>*,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MaterialParameterBlockArrayComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>*,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MaterialParameterBlockArrayComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>*,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MaterialParameterBlockArrayComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>*,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MaterialParameterBlockArrayComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>*,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MaterialParameterBlockArrayComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>*,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MaterialParameterBlockArrayComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>*,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MaterialParameterBlockArrayComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MaterialParameterBlockArrayComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MaterialParameterBlockArrayComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MaterialParameterBlockArrayComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>*,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::UnlitMaterialParametersComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::UnlitMaterialParametersComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::UnlitMaterialParametersComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::UnlitMaterialParametersComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

__n128 re::ecs2::ComponentType<re::ecs2::UnlitMaterialParametersComponent>::doMakeComponent@<Q0>(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::UnlitMaterialParametersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::UnlitMaterialParametersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 104, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(void *)(v2 + 96) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E5C38;
  __asm { FMOV            V0.4S, #1.0 }
  *(__n128 *)(v3 + 28) = result;
  *(unsigned char *)(v3 + 44) = 0;
  *(void *)(v3 + 88) = 0;
  *(void *)(v3 + 96) = 0;
  *(void *)(v3 + 80) = 0;
  *(void *)(v3 + 56) = 0;
  *(void *)(v3 + 64) = 0;
  *(void *)(v3 + 48) = 0;
  *(void *)(v3 + 70) = 0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::UnlitMaterialParametersComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EC7F0;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::UnlitMaterialParametersComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82B00, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82B00))
  {
    qword_26AF82AF8 = re::ecs2::introspect_UnlitMaterialParametersComponent(0);
    __cxa_guard_release(&qword_26AF82B00);
  }
  return qword_26AF82AF8;
}

__n128 re::ecs2::ComponentType<re::ecs2::UnlitMaterialParametersComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::UnlitMaterialParametersComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::UnlitMaterialParametersComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EC780;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EC7F0;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::UnlitMaterialParametersComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>*,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::UnlitMaterialParametersComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>*,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::UnlitMaterialParametersComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>*,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::UnlitMaterialParametersComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>*,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::UnlitMaterialParametersComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>*,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::UnlitMaterialParametersComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>*,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::UnlitMaterialParametersComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>*,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::UnlitMaterialParametersComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>*,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::UnlitMaterialParametersComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::UnlitMaterialParametersComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::UnlitMaterialParametersComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::UnlitMaterialParametersComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>*,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PbrMaterialParametersComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PbrMaterialParametersComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PbrMaterialParametersComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::PbrMaterialParametersComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::PbrMaterialParametersComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (void *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::PbrMaterialParametersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                       + 7)
                                                                    + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::PbrMaterialParametersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 560, 0);
  bzero(v2, 0x230uLL);
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  v2[2] = 0;
  *((unsigned char *)v2 + 24) = 0;
  *uint64_t v2 = &unk_26E6EC908;
  re::PbrMaterialParameters::PbrMaterialParameters((re::PbrMaterialParameters *)(v2 + 4));
  v2[68] = 0;
  double result = 0.0;
  *((_OWORD *)v2 + 33) = 0u;
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PbrMaterialParametersComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6EC990;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PbrMaterialParametersComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82B10, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82B10))
  {
    qword_26AF82B08 = re::ecs2::introspect_PbrMaterialParametersComponent(0);
    __cxa_guard_release(&qword_26AF82B10);
  }
  return qword_26AF82B08;
}

__n128 re::ecs2::ComponentType<re::ecs2::PbrMaterialParametersComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PbrMaterialParametersComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PbrMaterialParametersComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6EC898;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::PbrMaterialParametersComponent::~PbrMaterialParametersComponent(re::ecs2::PbrMaterialParametersComponent *this)
{
  re::ecs2::PbrMaterialParametersComponent::~PbrMaterialParametersComponent(this);
  JUMPOUT(0x237DBCBD0);
}

{
  re::AssetHandle *v2;

  *(void *)this = &unk_26E6EC908;
  uint64_t v2 = (re::ecs2::PbrMaterialParametersComponent *)((char *)this + 248);
  re::AssetHandle::~AssetHandle((re::ecs2::PbrMaterialParametersComponent *)((char *)this + 528));
  re::AssetHandle::~AssetHandle((re::ecs2::PbrMaterialParametersComponent *)((char *)this + 344));
  re::AssetHandle::~AssetHandle((re::ecs2::PbrMaterialParametersComponent *)((char *)this + 320));
  re::AssetHandle::~AssetHandle((re::ecs2::PbrMaterialParametersComponent *)((char *)this + 296));
  re::AssetHandle::~AssetHandle((re::ecs2::PbrMaterialParametersComponent *)((char *)this + 272));
  re::AssetHandle::~AssetHandle(v2);
  re::AssetHandle::~AssetHandle((re::ecs2::PbrMaterialParametersComponent *)((char *)this + 224));
  re::AssetHandle::~AssetHandle((re::ecs2::PbrMaterialParametersComponent *)((char *)this + 200));
  re::AssetHandle::~AssetHandle((re::ecs2::PbrMaterialParametersComponent *)((char *)this + 176));
  re::AssetHandle::~AssetHandle((re::ecs2::PbrMaterialParametersComponent *)((char *)this + 152));
  re::AssetHandle::~AssetHandle((re::ecs2::PbrMaterialParametersComponent *)((char *)this + 128));
  re::AssetHandle::~AssetHandle((re::ecs2::PbrMaterialParametersComponent *)((char *)this + 104));
  re::AssetHandle::~AssetHandle((re::ecs2::PbrMaterialParametersComponent *)((char *)this + 80));
  re::AssetHandle::~AssetHandle((re::ecs2::PbrMaterialParametersComponent *)((char *)this + 56));
  re::AssetHandle::~AssetHandle((re::ecs2::PbrMaterialParametersComponent *)((char *)this + 32));
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PbrMaterialParametersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::PbrMaterialParametersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PbrMaterialParametersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::PbrMaterialParametersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::PbrMaterialParametersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6EC990;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PbrMaterialParametersComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>,re::Slice<re::ecs2::PbrMaterialParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>*,re::Slice<re::ecs2::PbrMaterialParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>,re::Slice<re::ecs2::PbrMaterialParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::PbrMaterialParametersComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PbrMaterialParametersComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>,re::Slice<re::ecs2::PbrMaterialParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>*,re::Slice<re::ecs2::PbrMaterialParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>,re::Slice<re::ecs2::PbrMaterialParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::PbrMaterialParametersComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PbrMaterialParametersComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>,re::Slice<re::ecs2::PbrMaterialParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>*,re::Slice<re::ecs2::PbrMaterialParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>,re::Slice<re::ecs2::PbrMaterialParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::PbrMaterialParametersComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PbrMaterialParametersComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>,re::Slice<re::ecs2::PbrMaterialParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>*,re::Slice<re::ecs2::PbrMaterialParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>,re::Slice<re::ecs2::PbrMaterialParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::PbrMaterialParametersComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PbrMaterialParametersComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>,re::Slice<re::ecs2::PbrMaterialParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>*,re::Slice<re::ecs2::PbrMaterialParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>,re::Slice<re::ecs2::PbrMaterialParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::PbrMaterialParametersComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PbrMaterialParametersComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>,re::Slice<re::ecs2::PbrMaterialParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>*,re::Slice<re::ecs2::PbrMaterialParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>,re::Slice<re::ecs2::PbrMaterialParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::PbrMaterialParametersComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PbrMaterialParametersComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>,re::Slice<re::ecs2::PbrMaterialParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>*,re::Slice<re::ecs2::PbrMaterialParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>,re::Slice<re::ecs2::PbrMaterialParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::PbrMaterialParametersComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PbrMaterialParametersComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>,re::Slice<re::ecs2::PbrMaterialParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>*,re::Slice<re::ecs2::PbrMaterialParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>,re::Slice<re::ecs2::PbrMaterialParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::PbrMaterialParametersComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PbrMaterialParametersComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PbrMaterialParametersComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PbrMaterialParametersComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PbrMaterialParametersComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>,re::Slice<re::ecs2::PbrMaterialParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>*,re::Slice<re::ecs2::PbrMaterialParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>,re::Slice<re::ecs2::PbrMaterialParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::PbrMaterialParametersComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::MeshComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::MeshComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::MeshComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

id *re::ecs2::ComponentType<re::ecs2::MeshComponent>::doMakeComponent@<X0>(id **a1@<X8>)
{
  uint64_t v2 = (id *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::MeshComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                   + 7)
                                                                + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::MeshComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 336, 0);
  double result = re::ecs2::MeshComponent::MeshComponent(v2);
  *a1 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6ECAA8;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82B20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82B20))
  {
    qword_26AF82B18 = re::ecs2::introspect_MeshComponent(0);
    __cxa_guard_release(&qword_26AF82B20);
  }
  return qword_26AF82B18;
}

__n128 re::ecs2::ComponentType<re::ecs2::MeshComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6ECA38;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6ECAA8;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MeshComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>,re::Slice<re::ecs2::MeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>*,re::Slice<re::ecs2::MeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>,re::Slice<re::ecs2::MeshComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MeshComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>,re::Slice<re::ecs2::MeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>*,re::Slice<re::ecs2::MeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>,re::Slice<re::ecs2::MeshComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MeshComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>,re::Slice<re::ecs2::MeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>*,re::Slice<re::ecs2::MeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>,re::Slice<re::ecs2::MeshComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MeshComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>,re::Slice<re::ecs2::MeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>*,re::Slice<re::ecs2::MeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>,re::Slice<re::ecs2::MeshComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MeshComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>,re::Slice<re::ecs2::MeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>*,re::Slice<re::ecs2::MeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>,re::Slice<re::ecs2::MeshComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MeshComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>,re::Slice<re::ecs2::MeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>*,re::Slice<re::ecs2::MeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>,re::Slice<re::ecs2::MeshComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MeshComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>,re::Slice<re::ecs2::MeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>*,re::Slice<re::ecs2::MeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>,re::Slice<re::ecs2::MeshComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MeshComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>,re::Slice<re::ecs2::MeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>*,re::Slice<re::ecs2::MeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>,re::Slice<re::ecs2::MeshComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MeshComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MeshComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MeshComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MeshComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>,re::Slice<re::ecs2::MeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>*,re::Slice<re::ecs2::MeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>,re::Slice<re::ecs2::MeshComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::MeshSceneComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshSceneComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::MeshSceneComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::MeshSceneComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

uint64_t *re::ecs2::ComponentType<re::ecs2::MeshSceneComponent>::doMakeComponent@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (void *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::MeshSceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                       + 7)
                                                                    + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::MeshSceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 704, 0);
  bzero(v2, 0x2C0uLL);
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  v2[2] = 0;
  *((unsigned char *)v2 + 24) = 0;
  *uint64_t v2 = &unk_26E6E5340;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_DWORD *)v2 + 16) = 0;
  *(void *)((char *)v2 + 68) = 0x7FFFFFFFLL;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_DWORD *)v2 + 28) = 0;
  *(void *)((char *)v2 + 116) = 0x7FFFFFFFLL;
  *((_OWORD *)v2 + 8) = 0u;
  *((_OWORD *)v2 + 9) = 0u;
  *((_DWORD *)v2 + 40) = 0;
  *(void *)((char *)v2 + 164) = 0x7FFFFFFFLL;
  v2[26] = 0;
  v2[23] = 0;
  v2[24] = 0;
  v2[22] = 0;
  *((_DWORD *)v2 + 50) = 0;
  *((_DWORD *)v2 + 54) = 0;
  *((_OWORD *)v2 + 14) = 0u;
  *((_OWORD *)v2 + 15) = 0u;
  *(_OWORD *)((char *)v2 + 252) = 0u;
  *(void *)((char *)v2 + 268) = 0x7FFFFFFFLL;
  *((_DWORD *)v2 + 78) = 0;
  *(_OWORD *)(v2 + 35) = 0u;
  *(_OWORD *)(v2 + 37) = 0u;
  *(void *)((char *)v2 + 316) = 0x7FFFFFFFLL;
  v2[79] = 0;
  *(_OWORD *)(v2 + 41) = 0u;
  *(_OWORD *)(v2 + 43) = 0u;
  *(_OWORD *)(v2 + 45) = 0u;
  *(_OWORD *)(v2 + 47) = 0u;
  *(_OWORD *)(v2 + 49) = 0u;
  *(_OWORD *)(v2 + 51) = 0u;
  *(_OWORD *)(v2 + 53) = 0u;
  *(_OWORD *)(v2 + 55) = 0u;
  *(_OWORD *)(v2 + 57) = 0u;
  *(_OWORD *)(v2 + 59) = 0u;
  *(_OWORD *)(v2 + 61) = 0u;
  *(_OWORD *)(v2 + 63) = 0u;
  *(_OWORD *)(v2 + 65) = 0u;
  *(_OWORD *)(v2 + 67) = 0u;
  *(_OWORD *)(v2 + 69) = 0u;
  *(_OWORD *)(v2 + 71) = 0u;
  *(_OWORD *)(v2 + 73) = 0u;
  *(_OWORD *)(v2 + 75) = 0u;
  *(_OWORD *)(v2 + 77) = 0u;
  inited = (re *)objc_initWeak((id *)v2 + 80, 0);
  v2[81] = 0;
  double result = re::globalAllocators(inited);
  v2[85] = result[2];
  v2[86] = 0;
  v2[87] = 0;
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshSceneComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6ECBC0;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshSceneComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82B30, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82B30))
  {
    qword_26AF82B28 = re::ecs2::introspect_MeshSceneComponent(0);
    __cxa_guard_release(&qword_26AF82B30);
  }
  return qword_26AF82B28;
}

__n128 re::ecs2::ComponentType<re::ecs2::MeshSceneComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshSceneComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshSceneComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6ECB50;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6ECBC0;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>::registerCallbacks(_DWORD *a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MeshSceneComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Slice<re::ecs2::MeshSceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSceneComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MeshSceneComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Slice<re::ecs2::MeshSceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSceneComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MeshSceneComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Slice<re::ecs2::MeshSceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSceneComponent*>&&)#1}::__invoke;
    double result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MeshSceneComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Slice<re::ecs2::MeshSceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSceneComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MeshSceneComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Slice<re::ecs2::MeshSceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSceneComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MeshSceneComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Slice<re::ecs2::MeshSceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSceneComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MeshSceneComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Slice<re::ecs2::MeshSceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSceneComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MeshSceneComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Slice<re::ecs2::MeshSceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSceneComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MeshSceneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MeshSceneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MeshSceneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MeshSceneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Slice<re::ecs2::MeshSceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSceneComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::MeshSortingComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshSortingComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::MeshSortingComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::MeshSortingComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::MeshSortingComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::MeshSortingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::MeshSortingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 464, 0);
  return re::make::shared::inplace<re::ecs2::MeshSortingComponent>(v2, a1);
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshSortingComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6ECCD8;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshSortingComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82B40, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82B40))
  {
    qword_26AF82B38 = re::ecs2::introspect_MeshSortingComponent(0);
    __cxa_guard_release(&qword_26AF82B40);
  }
  return qword_26AF82B38;
}

__n128 re::ecs2::ComponentType<re::ecs2::MeshSortingComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshSortingComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshSortingComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6ECC68;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6ECCD8;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MeshSortingComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>,re::Slice<re::ecs2::MeshSortingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>*,re::Slice<re::ecs2::MeshSortingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>,re::Slice<re::ecs2::MeshSortingComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSortingComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MeshSortingComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>,re::Slice<re::ecs2::MeshSortingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>*,re::Slice<re::ecs2::MeshSortingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>,re::Slice<re::ecs2::MeshSortingComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSortingComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MeshSortingComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>,re::Slice<re::ecs2::MeshSortingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>*,re::Slice<re::ecs2::MeshSortingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>,re::Slice<re::ecs2::MeshSortingComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSortingComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MeshSortingComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>,re::Slice<re::ecs2::MeshSortingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>*,re::Slice<re::ecs2::MeshSortingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>,re::Slice<re::ecs2::MeshSortingComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSortingComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MeshSortingComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>,re::Slice<re::ecs2::MeshSortingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>*,re::Slice<re::ecs2::MeshSortingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>,re::Slice<re::ecs2::MeshSortingComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSortingComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MeshSortingComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>,re::Slice<re::ecs2::MeshSortingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>*,re::Slice<re::ecs2::MeshSortingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>,re::Slice<re::ecs2::MeshSortingComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSortingComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MeshSortingComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>,re::Slice<re::ecs2::MeshSortingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>*,re::Slice<re::ecs2::MeshSortingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>,re::Slice<re::ecs2::MeshSortingComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSortingComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MeshSortingComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>,re::Slice<re::ecs2::MeshSortingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>*,re::Slice<re::ecs2::MeshSortingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>,re::Slice<re::ecs2::MeshSortingComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSortingComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MeshSortingComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MeshSortingComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MeshSortingComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MeshSortingComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>,re::Slice<re::ecs2::MeshSortingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>*,re::Slice<re::ecs2::MeshSortingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>,re::Slice<re::ecs2::MeshSortingComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSortingComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::MeshDeformationComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshDeformationComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::MeshDeformationComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::MeshDeformationComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

uint64_t *re::ecs2::ComponentType<re::ecs2::MeshDeformationComponent>::doMakeComponent@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::MeshDeformationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::MeshDeformationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 440, 0);
  return re::make::shared::inplace<re::ecs2::MeshDeformationComponent>(v2, a1);
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshDeformationComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6ECDF0;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshDeformationComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82B50, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82B50))
  {
    qword_26AF82B48 = re::ecs2::introspect_MeshDeformationComponent(0);
    __cxa_guard_release(&qword_26AF82B50);
  }
  return qword_26AF82B48;
}

__n128 re::ecs2::ComponentType<re::ecs2::MeshDeformationComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshDeformationComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshDeformationComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6ECD80;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6ECDF0;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MeshDeformationComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>,re::Slice<re::ecs2::MeshDeformationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>*,re::Slice<re::ecs2::MeshDeformationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>,re::Slice<re::ecs2::MeshDeformationComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshDeformationComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MeshDeformationComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>,re::Slice<re::ecs2::MeshDeformationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>*,re::Slice<re::ecs2::MeshDeformationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>,re::Slice<re::ecs2::MeshDeformationComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshDeformationComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MeshDeformationComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>,re::Slice<re::ecs2::MeshDeformationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>*,re::Slice<re::ecs2::MeshDeformationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>,re::Slice<re::ecs2::MeshDeformationComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshDeformationComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MeshDeformationComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>,re::Slice<re::ecs2::MeshDeformationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>*,re::Slice<re::ecs2::MeshDeformationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>,re::Slice<re::ecs2::MeshDeformationComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshDeformationComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MeshDeformationComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>,re::Slice<re::ecs2::MeshDeformationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>*,re::Slice<re::ecs2::MeshDeformationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>,re::Slice<re::ecs2::MeshDeformationComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshDeformationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MeshDeformationComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>,re::Slice<re::ecs2::MeshDeformationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>*,re::Slice<re::ecs2::MeshDeformationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>,re::Slice<re::ecs2::MeshDeformationComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshDeformationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MeshDeformationComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>,re::Slice<re::ecs2::MeshDeformationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>*,re::Slice<re::ecs2::MeshDeformationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>,re::Slice<re::ecs2::MeshDeformationComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshDeformationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MeshDeformationComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>,re::Slice<re::ecs2::MeshDeformationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>*,re::Slice<re::ecs2::MeshDeformationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>,re::Slice<re::ecs2::MeshDeformationComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshDeformationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MeshDeformationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MeshDeformationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MeshDeformationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MeshDeformationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>,re::Slice<re::ecs2::MeshDeformationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>*,re::Slice<re::ecs2::MeshDeformationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>,re::Slice<re::ecs2::MeshDeformationComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshDeformationComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::HierarchicalFadeComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::HierarchicalFadeComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::HierarchicalFadeComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::HierarchicalFadeComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::HierarchicalFadeComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::HierarchicalFadeComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::HierarchicalFadeComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 40, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(void *)(v2 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F6C40;
  *(_DWORD *)(v3 + 28) = 1065353216;
  *(unsigned char *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 1;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::HierarchicalFadeComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6ECF08;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  uint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::HierarchicalFadeComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82B60, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82B60))
  {
    qword_26AF82B58 = re::ecs2::introspect_HierarchicalFadeComponent(0);
    __cxa_guard_release(&qword_26AF82B60);
  }
  return qword_26AF82B58;
}

__n128 re::ecs2::ComponentType<re::ecs2::HierarchicalFadeComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::HierarchicalFadeComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::HierarchicalFadeComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6ECE98;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::HierarchicalFadeComponent::~HierarchicalFadeComponent(re::ecs2::HierarchicalFadeComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::HierarchicalFadeComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::HierarchicalFadeComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::HierarchicalFadeComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return 3;
}

void *re::ecs2::ComponentImpl<re::ecs2::HierarchicalFadeComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::HierarchicalFadeComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6ECF08;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      uint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::HierarchicalFadeComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>,re::Slice<re::ecs2::HierarchicalFadeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>*,re::Slice<re::ecs2::HierarchicalFadeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>,re::Slice<re::ecs2::HierarchicalFadeComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalFadeComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::HierarchicalFadeComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>,re::Slice<re::ecs2::HierarchicalFadeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>*,re::Slice<re::ecs2::HierarchicalFadeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>,re::Slice<re::ecs2::HierarchicalFadeComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalFadeComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::HierarchicalFadeComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>,re::Slice<re::ecs2::HierarchicalFadeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>*,re::Slice<re::ecs2::HierarchicalFadeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>,re::Slice<re::ecs2::HierarchicalFadeComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalFadeComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    uint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::HierarchicalFadeComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>,re::Slice<re::ecs2::HierarchicalFadeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>*,re::Slice<re::ecs2::HierarchicalFadeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>,re::Slice<re::ecs2::HierarchicalFadeComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalFadeComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::HierarchicalFadeComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>,re::Slice<re::ecs2::HierarchicalFadeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>*,re::Slice<re::ecs2::HierarchicalFadeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>,re::Slice<re::ecs2::HierarchicalFadeComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalFadeComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::HierarchicalFadeComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>,re::Slice<re::ecs2::HierarchicalFadeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>*,re::Slice<re::ecs2::HierarchicalFadeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>,re::Slice<re::ecs2::HierarchicalFadeComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalFadeComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::HierarchicalFadeComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>,re::Slice<re::ecs2::HierarchicalFadeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>*,re::Slice<re::ecs2::HierarchicalFadeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>,re::Slice<re::ecs2::HierarchicalFadeComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalFadeComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::HierarchicalFadeComponent>;
    uint64_t v5 = 0;
    uint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>,re::Slice<re::ecs2::HierarchicalFadeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>*,re::Slice<re::ecs2::HierarchicalFadeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>,re::Slice<re::ecs2::HierarchicalFadeComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalFadeComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::HierarchicalFadeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::HierarchicalFadeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::HierarchicalFadeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::HierarchicalFadeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>,re::Slice<re::ecs2::HierarchicalFadeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>*,re::Slice<re::ecs2::HierarchicalFadeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>,re::Slice<re::ecs2::HierarchicalFadeComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalFadeComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

BOOL ___ZN2re8snapshot8Registry3addINS_4ecs225HierarchicalFadeComponentEEEPKNS1_5EntryEv_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a3) {
    return 0;
  }
  re::ecs2::HierarchicalFadeComponent::snapshotMapFields<re::snapshot::Writer<re::snapshot::EncoderRaw>>(a3, (unsigned int *)a2);
  unint64_t v4 = *(void *)(a2 + 40);
  if (v4) {
    unint64_t v5 = v4 >> 1;
  }
  else {
    unint64_t v5 = v4 >> 1;
  }
  return v5 == 0;
}

BOOL ___ZN2re8snapshot8Registry3addINS_4ecs225HierarchicalFadeComponentEEEPKNS1_5EntryEv_block_invoke_2(int a1, re::snapshot::EncoderOPACK *this, uint64_t a3)
{
  if (!a3) {
    return 0;
  }
  re::snapshot::EncoderOPACK::beginObject((unsigned int *)this);
  re::ecs2::HierarchicalFadeComponent::snapshotMapFields<re::snapshot::Writer<re::snapshot::EncoderOPACK>>(a3, this);
  re::snapshot::EncoderOPACK::endObject((unsigned int *)this);
  unint64_t v5 = *((void *)this + 5);
  if (v5) {
    unint64_t v6 = v5 >> 1;
  }
  else {
    unint64_t v6 = v5 >> 1;
  }
  return v6 == 0;
}

uint64_t ___ZN2re8snapshot8Registry3addINS_4ecs225HierarchicalFadeComponentEEEPKNS1_5EntryEv_block_invoke_3(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a3) {
    return 0;
  }
  re::ecs2::HierarchicalFadeComponent::snapshotMapFields<re::snapshot::Reader<re::snapshot::DecoderRaw>>(a3, a2);
  uint64_t v4 = *(void *)(a2 + 16);
  if (v4 != *(void *)(a2 + 24)) {
    re::snapshot::Decoder::error((const char **)a2, "failed to consume input: %zu vs %zu", v4 - *(void *)a2, *(void *)(a2 + 8));
  }
  if (!*(unsigned char *)(a2 + 36)) {
    return 1;
  }
  re::snapshot::Decoder::logInput((re::snapshot::Decoder *)a2);
  return 0;
}

uint64_t ___ZN2re8snapshot8Registry3addINS_4ecs225HierarchicalFadeComponentEEEPKNS1_5EntryEv_block_invoke_4(int a1, re::snapshot::DecoderOPACK *this, uint64_t a3)
{
  if (!a3) {
    return 0;
  }
  if (re::snapshot::DecoderOPACK::beginObject(this, 0))
  {
    re::ecs2::HierarchicalFadeComponent::snapshotMapFields<re::snapshot::Reader<re::snapshot::DecoderOPACK>>(a3, (uint64_t)this);
    re::snapshot::DecoderOPACK::endObject((uint64_t *)this, 0);
  }
  uint64_t v5 = *((void *)this + 2);
  if (v5 != *((void *)this + 3)) {
    re::snapshot::Decoder::error((const char **)this, "failed to consume input: %zu vs %zu", v5 - *(void *)this, *((void *)this + 1));
  }
  if (!*((unsigned char *)this + 36)) {
    return 1;
  }
  re::snapshot::Decoder::logInput(this);
  return 0;
}

double re::ecs2::ComponentType<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 32, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6F6CC8;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6ED0A0;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  uint64_t v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  unint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82B78, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82B78))
  {
    qword_26AF82B70 = re::ecs2::introspect_HierarchicalFadeSecondaryOpacityMarkerComponent(0);
    __cxa_guard_release(&qword_26AF82B78);
  }
  return qword_26AF82B70;
}

__n128 re::ecs2::ComponentType<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6ED030;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent::~HierarchicalFadeSecondaryOpacityMarkerComponent(re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6ED0A0;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      unint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>*,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>*,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>*,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>*,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>*,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>*,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>*,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>*,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>*,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::HierarchicalTintComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::HierarchicalTintComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::HierarchicalTintComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::HierarchicalTintComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

void re::ecs2::ComponentType<re::ecs2::HierarchicalTintComponent>::doMakeComponent(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::HierarchicalTintComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::HierarchicalTintComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 32, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6ED1B8;
  *(_DWORD *)(v3 + 28) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::HierarchicalTintComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6ED240;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  unint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::HierarchicalTintComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82B88, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82B88))
  {
    qword_26AF82B80 = re::ecs2::introspect_HierarchicalTintComponent(0);
    __cxa_guard_release(&qword_26AF82B88);
  }
  return qword_26AF82B80;
}

__n128 re::ecs2::ComponentType<re::ecs2::HierarchicalTintComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::HierarchicalTintComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::HierarchicalTintComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6ED148;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::HierarchicalTintComponent::~HierarchicalTintComponent(re::ecs2::HierarchicalTintComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::HierarchicalTintComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::HierarchicalTintComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::HierarchicalTintComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return 4;
}

void *re::ecs2::ComponentImpl<re::ecs2::HierarchicalTintComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::HierarchicalTintComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6ED240;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      unint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::HierarchicalTintComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>,re::Slice<re::ecs2::HierarchicalTintComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>*,re::Slice<re::ecs2::HierarchicalTintComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>,re::Slice<re::ecs2::HierarchicalTintComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalTintComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::HierarchicalTintComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>,re::Slice<re::ecs2::HierarchicalTintComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>*,re::Slice<re::ecs2::HierarchicalTintComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>,re::Slice<re::ecs2::HierarchicalTintComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalTintComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::HierarchicalTintComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>,re::Slice<re::ecs2::HierarchicalTintComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>*,re::Slice<re::ecs2::HierarchicalTintComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>,re::Slice<re::ecs2::HierarchicalTintComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalTintComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::HierarchicalTintComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>,re::Slice<re::ecs2::HierarchicalTintComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>*,re::Slice<re::ecs2::HierarchicalTintComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>,re::Slice<re::ecs2::HierarchicalTintComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalTintComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::HierarchicalTintComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>,re::Slice<re::ecs2::HierarchicalTintComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>*,re::Slice<re::ecs2::HierarchicalTintComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>,re::Slice<re::ecs2::HierarchicalTintComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalTintComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::HierarchicalTintComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>,re::Slice<re::ecs2::HierarchicalTintComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>*,re::Slice<re::ecs2::HierarchicalTintComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>,re::Slice<re::ecs2::HierarchicalTintComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalTintComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::HierarchicalTintComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>,re::Slice<re::ecs2::HierarchicalTintComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>*,re::Slice<re::ecs2::HierarchicalTintComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>,re::Slice<re::ecs2::HierarchicalTintComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalTintComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::HierarchicalTintComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>,re::Slice<re::ecs2::HierarchicalTintComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>*,re::Slice<re::ecs2::HierarchicalTintComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>,re::Slice<re::ecs2::HierarchicalTintComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalTintComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::HierarchicalTintComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::HierarchicalTintComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::HierarchicalTintComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::HierarchicalTintComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>,re::Slice<re::ecs2::HierarchicalTintComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>*,re::Slice<re::ecs2::HierarchicalTintComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>,re::Slice<re::ecs2::HierarchicalTintComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalTintComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::MeshSmoothComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshSmoothComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::MeshSmoothComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::MeshSmoothComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::MeshSmoothComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::MeshSmoothComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::MeshSmoothComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 336, 0);
  return re::make::shared::inplace<re::ecs2::MeshSmoothComponent>(v2, a1);
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshSmoothComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6ED358;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  unint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshSmoothComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82B98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82B98))
  {
    qword_26AF82B90 = re::ecs2::introspect_MeshSmoothComponent(0);
    __cxa_guard_release(&qword_26AF82B98);
  }
  return qword_26AF82B90;
}

__n128 re::ecs2::ComponentType<re::ecs2::MeshSmoothComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshSmoothComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshSmoothComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6ED2E8;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6ED358;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      unint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MeshSmoothComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>,re::Slice<re::ecs2::MeshSmoothComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>*,re::Slice<re::ecs2::MeshSmoothComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>,re::Slice<re::ecs2::MeshSmoothComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSmoothComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MeshSmoothComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>,re::Slice<re::ecs2::MeshSmoothComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>*,re::Slice<re::ecs2::MeshSmoothComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>,re::Slice<re::ecs2::MeshSmoothComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSmoothComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MeshSmoothComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>,re::Slice<re::ecs2::MeshSmoothComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>*,re::Slice<re::ecs2::MeshSmoothComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>,re::Slice<re::ecs2::MeshSmoothComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSmoothComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MeshSmoothComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>,re::Slice<re::ecs2::MeshSmoothComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>*,re::Slice<re::ecs2::MeshSmoothComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>,re::Slice<re::ecs2::MeshSmoothComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSmoothComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MeshSmoothComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>,re::Slice<re::ecs2::MeshSmoothComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>*,re::Slice<re::ecs2::MeshSmoothComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>,re::Slice<re::ecs2::MeshSmoothComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSmoothComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MeshSmoothComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>,re::Slice<re::ecs2::MeshSmoothComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>*,re::Slice<re::ecs2::MeshSmoothComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>,re::Slice<re::ecs2::MeshSmoothComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSmoothComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MeshSmoothComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>,re::Slice<re::ecs2::MeshSmoothComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>*,re::Slice<re::ecs2::MeshSmoothComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>,re::Slice<re::ecs2::MeshSmoothComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSmoothComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MeshSmoothComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>,re::Slice<re::ecs2::MeshSmoothComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>*,re::Slice<re::ecs2::MeshSmoothComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>,re::Slice<re::ecs2::MeshSmoothComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSmoothComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MeshSmoothComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MeshSmoothComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MeshSmoothComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MeshSmoothComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>,re::Slice<re::ecs2::MeshSmoothComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>*,re::Slice<re::ecs2::MeshSmoothComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>,re::Slice<re::ecs2::MeshSmoothComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSmoothComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::MeshOffsetsComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshOffsetsComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::MeshOffsetsComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::MeshOffsetsComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

uint64_t *re::ecs2::ComponentType<re::ecs2::MeshOffsetsComponent>::doMakeComponent@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::MeshOffsetsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::MeshOffsetsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 216, 0);
  return re::make::shared::inplace<re::ecs2::MeshOffsetsComponent>(v2, a1);
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshOffsetsComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6ED470;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  unint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshOffsetsComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82BA8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82BA8))
  {
    qword_26AF82BA0 = re::ecs2::introspect_MeshOffsetsComponent(0);
    __cxa_guard_release(&qword_26AF82BA8);
  }
  return qword_26AF82BA0;
}

__n128 re::ecs2::ComponentType<re::ecs2::MeshOffsetsComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshOffsetsComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshOffsetsComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6ED400;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6ED470;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      unint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MeshOffsetsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>,re::Slice<re::ecs2::MeshOffsetsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>*,re::Slice<re::ecs2::MeshOffsetsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>,re::Slice<re::ecs2::MeshOffsetsComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshOffsetsComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MeshOffsetsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>,re::Slice<re::ecs2::MeshOffsetsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>*,re::Slice<re::ecs2::MeshOffsetsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>,re::Slice<re::ecs2::MeshOffsetsComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshOffsetsComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MeshOffsetsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>,re::Slice<re::ecs2::MeshOffsetsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>*,re::Slice<re::ecs2::MeshOffsetsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>,re::Slice<re::ecs2::MeshOffsetsComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshOffsetsComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MeshOffsetsComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>,re::Slice<re::ecs2::MeshOffsetsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>*,re::Slice<re::ecs2::MeshOffsetsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>,re::Slice<re::ecs2::MeshOffsetsComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshOffsetsComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MeshOffsetsComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>,re::Slice<re::ecs2::MeshOffsetsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>*,re::Slice<re::ecs2::MeshOffsetsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>,re::Slice<re::ecs2::MeshOffsetsComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshOffsetsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MeshOffsetsComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>,re::Slice<re::ecs2::MeshOffsetsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>*,re::Slice<re::ecs2::MeshOffsetsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>,re::Slice<re::ecs2::MeshOffsetsComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshOffsetsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MeshOffsetsComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>,re::Slice<re::ecs2::MeshOffsetsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>*,re::Slice<re::ecs2::MeshOffsetsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>,re::Slice<re::ecs2::MeshOffsetsComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshOffsetsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MeshOffsetsComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>,re::Slice<re::ecs2::MeshOffsetsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>*,re::Slice<re::ecs2::MeshOffsetsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>,re::Slice<re::ecs2::MeshOffsetsComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshOffsetsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MeshOffsetsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MeshOffsetsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MeshOffsetsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MeshOffsetsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>,re::Slice<re::ecs2::MeshOffsetsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>*,re::Slice<re::ecs2::MeshOffsetsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>,re::Slice<re::ecs2::MeshOffsetsComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshOffsetsComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::EntityFunctionConstantComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::EntityFunctionConstantComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::EntityFunctionConstantComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::EntityFunctionConstantComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

double re::ecs2::ComponentType<re::ecs2::EntityFunctionConstantComponent>::doMakeComponent@<D0>(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::EntityFunctionConstantComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::EntityFunctionConstantComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 80, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6E2A28;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_DWORD *)(v3 + 64) = 0;
  *(void *)&double result = 0x7FFFFFFFLL;
  *(void *)(v3 + 68) = 0x7FFFFFFFLL;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::EntityFunctionConstantComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6ED588;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  uint64_t v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  unint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::EntityFunctionConstantComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82BB8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82BB8))
  {
    qword_26AF82BB0 = re::ecs2::introspect_EntityFunctionConstantComponent(0);
    __cxa_guard_release(&qword_26AF82BB8);
  }
  return qword_26AF82BB0;
}

__n128 re::ecs2::ComponentType<re::ecs2::EntityFunctionConstantComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::EntityFunctionConstantComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::EntityFunctionConstantComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6ED518;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6ED588;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(re::ecs2::Component ***)(a2 + 32);
      unint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::EntityFunctionConstantComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>,re::Slice<re::ecs2::EntityFunctionConstantComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>*,re::Slice<re::ecs2::EntityFunctionConstantComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>,re::Slice<re::ecs2::EntityFunctionConstantComponent*>>::Subscription const&,re::Slice<re::ecs2::EntityFunctionConstantComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::EntityFunctionConstantComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>,re::Slice<re::ecs2::EntityFunctionConstantComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>*,re::Slice<re::ecs2::EntityFunctionConstantComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>,re::Slice<re::ecs2::EntityFunctionConstantComponent*>>::Subscription const&,re::Slice<re::ecs2::EntityFunctionConstantComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::EntityFunctionConstantComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>,re::Slice<re::ecs2::EntityFunctionConstantComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>*,re::Slice<re::ecs2::EntityFunctionConstantComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>,re::Slice<re::ecs2::EntityFunctionConstantComponent*>>::Subscription const&,re::Slice<re::ecs2::EntityFunctionConstantComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    uint64_t v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::EntityFunctionConstantComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>,re::Slice<re::ecs2::EntityFunctionConstantComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>*,re::Slice<re::ecs2::EntityFunctionConstantComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>,re::Slice<re::ecs2::EntityFunctionConstantComponent*>>::Subscription const&,re::Slice<re::ecs2::EntityFunctionConstantComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::EntityFunctionConstantComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>,re::Slice<re::ecs2::EntityFunctionConstantComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>*,re::Slice<re::ecs2::EntityFunctionConstantComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>,re::Slice<re::ecs2::EntityFunctionConstantComponent*>>::Subscription const&,re::Slice<re::ecs2::EntityFunctionConstantComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::EntityFunctionConstantComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>,re::Slice<re::ecs2::EntityFunctionConstantComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>*,re::Slice<re::ecs2::EntityFunctionConstantComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>,re::Slice<re::ecs2::EntityFunctionConstantComponent*>>::Subscription const&,re::Slice<re::ecs2::EntityFunctionConstantComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::EntityFunctionConstantComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>,re::Slice<re::ecs2::EntityFunctionConstantComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>*,re::Slice<re::ecs2::EntityFunctionConstantComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>,re::Slice<re::ecs2::EntityFunctionConstantComponent*>>::Subscription const&,re::Slice<re::ecs2::EntityFunctionConstantComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::EntityFunctionConstantComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>,re::Slice<re::ecs2::EntityFunctionConstantComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>*,re::Slice<re::ecs2::EntityFunctionConstantComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>,re::Slice<re::ecs2::EntityFunctionConstantComponent*>>::Subscription const&,re::Slice<re::ecs2::EntityFunctionConstantComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::EntityFunctionConstantComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::EntityFunctionConstantComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 32);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::EntityFunctionConstantComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::EntityFunctionConstantComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 48);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>,re::Slice<re::ecs2::EntityFunctionConstantComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>*,re::Slice<re::ecs2::EntityFunctionConstantComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>,re::Slice<re::ecs2::EntityFunctionConstantComponent*>>::Subscription const&,re::Slice<re::ecs2::EntityFunctionConstantComponent*>&&)#1}::__invoke(uint64_t a1, void *a2, void *a3)
{
  long long v4 = (uint64_t (*)(void *, uint64_t, void, void))a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = (void *)(*a2 + (v5 >> 1));
  if (v5) {
    long long v4 = *(uint64_t (**)(void *, uint64_t, void, void))(*v6 + v4);
  }
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ProjectiveShadowReceiverComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ProjectiveShadowReceiverComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ProjectiveShadowReceiverComponent>::~ComponentType(uint64_t a1)
{
  re::ecs2::ComponentType<re::ecs2::ProjectiveShadowReceiverComponent>::~ComponentType(a1);
  JUMPOUT(0x237DBCBD0);
}

int32x4_t re::ecs2::ComponentType<re::ecs2::ProjectiveShadowReceiverComponent>::doMakeComponent@<Q0>(void *a1@<X8>)
{
  uint64_t v2 = (ArcSharedObject *)(*(uint64_t (**)(void, uint64_t, void))(**((void **)re::ecs2::ComponentImpl<re::ecs2::ProjectiveShadowReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((void *)re::ecs2::ComponentImpl<re::ecs2::ProjectiveShadowReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 112, 0);
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)uint64_t v3 = &unk_26E6ED6A0;
  *(void *)(v3 + 28) = 0x400000003FA00000;
  *(_DWORD *)(v3 + 36) = 1094713344;
  *(_WORD *)(v3 + 40) = 1;
  int32x4_t result = vdupq_n_s32(0x7F800000u);
  *(void *)&long long v5 = 0x7F0000007FLL;
  *((void *)&v5 + 1) = 0x7F0000007FLL;
  *(int32x4_t *)(v3 + 48) = result;
  *(_OWORD *)(v3 + 64) = v5;
  *(void *)(v3 + 88) = 0;
  *(void *)(v3 + 96) = 0;
  *(void *)(v3 + 80) = 0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ProjectiveShadowReceiverComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t v2 = re::globalAllocators(a1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2[2] + 32))(v2[2], 656, 8);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + std::__hash_table<std::__hash_value_type<unsigned long long,unsigned short>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::hash<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,unsigned short>,std::equal_to<unsigned long long>,std::hash<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,unsigned short>>>::~__hash_table((uint64_t)this + 104) = 0u;
  *(void *)(v3 + re::DynamicArray<unsigned long>::deinit((uint64_t)this + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)uint64_t v3 = &unk_26E6ED728;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 136) = 0;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(void *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 2re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(void *)(v3 + 304) = 0;
  *(void *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(void *)(v3 + 3objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(void *)(v3 + re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit((uint64_t)this + 392) = 0;
  *(void *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(void *)(v3 + 408) = 0;
  *(void *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 4re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(void *)(v3 + 480) = 0;
  *(void *)(v3 + 488) = 0;
  *(void *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(void *)(v3 + 5objc_destroyWeak(this + 20) = 0;
  *(void *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(void *)(v3 + 528) = 0;
  *(void *)(v3 + 552) = 0;
  *(void *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(void *)(v3 + 576) = 0;
  *(void *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(void *)(v3 + 584) = 0;
  *(void *)(v3 + 608) = 0;
  *(void *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(void *)(v3 + 6re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32) = 0;
  *(void *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(void *)(v3 + 640) = 0;
  long long v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  long long v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  unint64_t v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  uint64_t v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((void *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ProjectiveShadowReceiverComponent>::doGetComponentIntrospectionInfo()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AF82BC8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AF82BC8))
  {
    qword_26AF82BC0 = re::ecs2::introspect_ProjectiveShadowReceiverComponent(0);
    __cxa_guard_release(&qword_26AF82BC8);
  }
  return qword_26AF82BC0;
}

__n128 re::ecs2::ComponentType<re::ecs2::ProjectiveShadowReceiverComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ProjectiveShadowReceiverComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ProjectiveShadowReceiverComponent>::~ComponentType(uint64_t a1)
{
  *(void *)a1 = &unk_26E6ED630;
  if (*(void *)(a1 + 48)) {
    RESyncRelease();
  }
  re::internal::destroyPersistent<re::Allocator>((re *)"~ComponentType", 46, *(void (****)(void))(a1 + 56));
  *(void *)a1 = &unk_26E6E1EB8;
  re::StringID::destroyString((re::StringID *)(a1 + 24));
  return a1;
}

void re::ecs2::ProjectiveShadowReceiverComponent::~ProjectiveShadowReceiverComponent(re::ecs2::ProjectiveShadowReceiverComponent *this)
{
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t vars8;

  re::AssetHandle::~AssetHandle((re::ecs2::ProjectiveShadowReceiverComponent *)((char *)this + 80));
  *(void *)this = &unk_26E6DECE0;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x237DBCBD0);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ProjectiveShadowReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((void *)re::ecs2::ComponentImpl<re::ecs2::ProjectiveShadowReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ProjectiveShadowReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::ProjectiveShadowReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::ProjectiveShadowReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>::~SceneComponentCollection(void *a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x237DBCBD0);
}

{
  uint64_t v2;
  uint64_t vars8;

  *a1 = &unk_26E6ED728;
  uint64_t v2 = (uint64_t)(a1 + 16);
  if (a1[16]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 16));
  }
  if (a1[27]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 27));
  }
  if (a1[38]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 38));
  }
  if (a1[49]) {
    re::DynamicArray<unsigned long>::deinit((uint64_t)(a1 + 49));
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 60));
  re::BucketArray<unsigned long,8ul>::deinit((uint64_t)(a1 + 75));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 75));
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit((uint64_t)(a1 + 68));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 68));
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit((uint64_t)(a1 + 61));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a1 + 61));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 49));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 38));
  re::Event<re::Engine>::~Event((uint64_t)(a1 + 27));
  re::Event<re::Engine>::~Event(v2);
  re::ecs2::SceneComponentCollectionBase::~SceneComponentCollectionBase((re::ecs2::SceneComponentCollectionBase *)a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)) {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      long long v5 = *(re::ecs2::Component ***)(a2 + 32);
      unint64_t v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      uint64_t v7 = 8 * v4;
      do
      {
        uint64_t v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>::registerCallbacks(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    long long v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ProjectiveShadowReceiverComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>*,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    long long v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ProjectiveShadowReceiverComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>*,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    long long v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ProjectiveShadowReceiverComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>*,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>&&)#1}::__invoke;
    double result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    long long v5 = a2;
    unint64_t v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ProjectiveShadowReceiverComponent>;
    uint64_t v7 = 0;
    uint64_t v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>*,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>::unregisterCallbacks(uint64_t a1, void *a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (a2[3])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ProjectiveShadowReceiverComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>*,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ProjectiveShadowReceiverComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>*,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ProjectiveShadowReceiverComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>*,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(void *)&long long v4 = a2;
    *((void *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ProjectiveShadowReceiverComponent>;
    uint64_t v5 = 0;
    unint64_t v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>*,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ProjectiveShadowReceiverComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(void))(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    if (a4)
    {
      uint64_t v7 = 8 * a4;
      do
      {
        uint64_t v8 = *a3++;
        ((void (*)(uint64_t, void))v5)(v8, *(void *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    uint64_t v9 = 8 * a4;
    do
    {
      uint64_t v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}