uint64_t sub_1C26941E8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  int64_t v32;
  void *v33;
  uint64_t v34;

  v1 = v0;
  v2 = type metadata accessor for UserProfile();
  v34 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  sub_1C2643B90();
  v6 = sub_1C277C280();
  v7 = v6;
  if (*(void *)(v5 + 16))
  {
    v31 = v0;
    v8 = 1 << *(unsigned char *)(v5 + 32);
    v9 = *(void *)(v5 + 56);
    v33 = (void *)(v5 + 56);
    if (v8 < 64) {
      v10 = ~(-1 << v8);
    }
    else {
      v10 = -1;
    }
    v11 = v10 & v9;
    v32 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v32) {
          goto LABEL_33;
        }
        v19 = v33[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v32) {
            goto LABEL_33;
          }
          v19 = v33[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v32) {
              goto LABEL_33;
            }
            v19 = v33[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v32)
              {
LABEL_33:
                swift_release();
                v1 = v31;
                v29 = 1 << *(unsigned char *)(v5 + 32);
                if (v29 > 63) {
                  bzero(v33, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *v33 = -1 << v29;
                }
                *(void *)(v5 + 16) = 0;
                break;
              }
              v19 = v33[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v32) {
                    goto LABEL_33;
                  }
                  v19 = v33[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = *(void *)(v34 + 72);
      sub_1C2643AE0(*(void *)(v5 + 48) + v21 * v17, (uint64_t)v4);
      sub_1C277C8C0();
      sub_1C277A8A0();
      sub_1C2642C1C(&qword_1EBB84F38, MEMORY[0x1E4F27990]);
      sub_1C277B7C0();
      result = sub_1C277C910();
      v22 = -1 << *(unsigned char *)(v7 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26) {
            v24 = 0;
          }
          v25 |= v27;
          v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      result = sub_1C2643AE0((uint64_t)v4, *(void *)(v7 + 48) + v15 * v21);
      ++*(void *)(v7 + 16);
    }
  }
  result = swift_release();
  *v1 = v7;
  return result;
}

uint64_t sub_1C26945A8()
{
  v1 = v0;
  uint64_t v2 = *v0;
  sub_1C269B708(0, &qword_1EA304630, (void (*)(void))sub_1C265DA88);
  uint64_t v3 = sub_1C277C280();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_1C277C8C0();
      sub_1C277B8B0();
      uint64_t result = sub_1C277C910();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      void *v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1C26948A8(uint64_t a1, void (*a2)(void))
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  a2(0);
  uint64_t v5 = sub_1C277C280();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    v30 = v2;
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    int64_t v8 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v4 + 56);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v12 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v11) {
            goto LABEL_33;
          }
          unint64_t v19 = v8[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v11) {
              goto LABEL_33;
            }
            unint64_t v19 = v8[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                uint64_t v3 = v30;
                uint64_t v29 = 1 << *(unsigned char *)(v4 + 32);
                if (v29 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v8 = -1 << v29;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v11) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v8[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v4 + 48) + 8 * v17);
      uint64_t result = sub_1C277C020();
      uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_1C2694B48(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v6 = v5;
  uint64_t v7 = *v5;
  sub_1C269B5E8(0, a2, a3, a4, a5);
  uint64_t v8 = sub_1C277C280();
  uint64_t v9 = v8;
  if (*(void *)(v7 + 16))
  {
    v33 = v5;
    uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
    int64_t v11 = (void *)(v7 + 56);
    if (v10 < 64) {
      uint64_t v12 = ~(-1 << v10);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v7 + 56);
    int64_t v14 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v15 = v8 + 56;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    while (1)
    {
      if (v13)
      {
        unint64_t v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v20 = v19 | (v17 << 6);
      }
      else
      {
        int64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v21 >= v14) {
          goto LABEL_33;
        }
        unint64_t v22 = v11[v21];
        ++v17;
        if (!v22)
        {
          int64_t v17 = v21 + 1;
          if (v21 + 1 >= v14) {
            goto LABEL_33;
          }
          unint64_t v22 = v11[v17];
          if (!v22)
          {
            int64_t v17 = v21 + 2;
            if (v21 + 2 >= v14) {
              goto LABEL_33;
            }
            unint64_t v22 = v11[v17];
            if (!v22)
            {
              int64_t v23 = v21 + 3;
              if (v23 >= v14)
              {
LABEL_33:
                swift_release();
                uint64_t v6 = v33;
                uint64_t v32 = 1 << *(unsigned char *)(v7 + 32);
                if (v32 > 63) {
                  bzero((void *)(v7 + 56), ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v11 = -1 << v32;
                }
                *(void *)(v7 + 16) = 0;
                break;
              }
              unint64_t v22 = v11[v23];
              if (!v22)
              {
                while (1)
                {
                  int64_t v17 = v23 + 1;
                  if (__OFADD__(v23, 1)) {
                    goto LABEL_39;
                  }
                  if (v17 >= v14) {
                    goto LABEL_33;
                  }
                  unint64_t v22 = v11[v17];
                  ++v23;
                  if (v22) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v17 = v23;
            }
          }
        }
LABEL_23:
        unint64_t v13 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      uint64_t v24 = *(void *)(*(void *)(v7 + 48) + 8 * v20);
      uint64_t result = sub_1C277C020();
      uint64_t v25 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v15 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v18 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v9 + 48) + 8 * v18) = v24;
      ++*(void *)(v9 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v6 = v9;
  return result;
}

uint64_t sub_1C2694DE4()
{
  v1 = v0;
  uint64_t v2 = *v0;
  sub_1C269B554();
  uint64_t v3 = sub_1C277C280();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    unint64_t v27 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v29 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v28 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v12 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v13 = v12 | (v10 << 6);
      }
      else
      {
        int64_t v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v14 >= v28) {
          goto LABEL_33;
        }
        unint64_t v15 = v29[v14];
        ++v10;
        if (!v15)
        {
          int64_t v10 = v14 + 1;
          if (v14 + 1 >= v28) {
            goto LABEL_33;
          }
          unint64_t v15 = v29[v10];
          if (!v15)
          {
            int64_t v10 = v14 + 2;
            if (v14 + 2 >= v28) {
              goto LABEL_33;
            }
            unint64_t v15 = v29[v10];
            if (!v15)
            {
              int64_t v16 = v14 + 3;
              if (v16 >= v28)
              {
LABEL_33:
                swift_release();
                v1 = v27;
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero(v29, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v29 = -1 << v26;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v15 = v29[v16];
              if (!v15)
              {
                while (1)
                {
                  int64_t v10 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v28) {
                    goto LABEL_33;
                  }
                  unint64_t v15 = v29[v10];
                  ++v16;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v16;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
      sub_1C277B850();
      sub_1C277C8C0();
      sub_1C277B8B0();
      uint64_t v18 = sub_1C277C910();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v8 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v11 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      *(void *)(*(void *)(v4 + 48) + 8 * v11) = v17;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1C26950F4()
{
  v1 = v0;
  uint64_t v2 = *v0;
  sub_1C269B708(0, &qword_1EBB83760, (void (*)(void))sub_1C26497D4);
  uint64_t v3 = sub_1C277C280();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_38;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  int64_t v28 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v16 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v17 = v16 | (v10 << 6);
      goto LABEL_33;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v18 >= v8) {
      break;
    }
    unint64_t v19 = v28[v18];
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v8) {
        break;
      }
      unint64_t v19 = v28[v10];
      if (!v19)
      {
        int64_t v10 = v18 + 2;
        if (v18 + 2 >= v8) {
          break;
        }
        unint64_t v19 = v28[v10];
        if (!v19)
        {
          int64_t v20 = v18 + 3;
          if (v20 >= v8) {
            break;
          }
          unint64_t v19 = v28[v20];
          if (!v19)
          {
            while (1)
            {
              int64_t v10 = v20 + 1;
              if (__OFADD__(v20, 1)) {
                goto LABEL_40;
              }
              if (v10 >= v8) {
                goto LABEL_34;
              }
              unint64_t v19 = v28[v10];
              ++v20;
              if (v19) {
                goto LABEL_32;
              }
            }
          }
          int64_t v10 = v20;
        }
      }
    }
LABEL_32:
    unint64_t v7 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_33:
    char v25 = *(unsigned char *)(*(void *)(v2 + 48) + v17);
    sub_1C277C8C0();
    sub_1C277B8B0();
    swift_bridgeObjectRelease();
    uint64_t v11 = sub_1C277C910();
    uint64_t v12 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v13 = v11 & ~v12;
    unint64_t v14 = v13 >> 6;
    if (((-1 << v13) & ~*(void *)(v9 + 8 * (v13 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v13) & ~*(void *)(v9 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v21 = 0;
    unint64_t v22 = (unint64_t)(63 - v12) >> 6;
    do
    {
      if (++v14 == v22 && (v21 & 1) != 0)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0x1C2695670);
      }
      BOOL v23 = v14 == v22;
      if (v14 == v22) {
        unint64_t v14 = 0;
      }
      v21 |= v23;
      uint64_t v24 = *(void *)(v9 + 8 * v14);
    }
    while (v24 == -1);
    unint64_t v15 = __clz(__rbit64(~v24)) + (v14 << 6);
LABEL_8:
    *(void *)(v9 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = v25;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  swift_release();
  v1 = v0;
  uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
  if (v26 > 63) {
    bzero(v28, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v28 = -1 << v26;
  }
  *(void *)(v2 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1C26956D0(uint64_t a1)
{
  return sub_1C2694B48(a1, &qword_1EA304598, &qword_1EBB80DB0, 0x1E4F2B5D8, &qword_1EBB82F98);
}

uint64_t sub_1C26956F4()
{
  v1 = v0;
  uint64_t v2 = *v0;
  sub_1C269B708(0, &qword_1EA3045E0, (void (*)(void))sub_1C265D79C);
  uint64_t v3 = sub_1C277C280();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    v38 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    v36 = v1;
    int64_t v37 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    uint64_t v39 = v2;
    while (1)
    {
      if (v7)
      {
        uint64_t v40 = (v7 - 1) & v7;
        int64_t v41 = v10;
        unint64_t v13 = __clz(__rbit64(v7)) | (v10 << 6);
      }
      else
      {
        int64_t v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v14 >= v37) {
          goto LABEL_35;
        }
        unint64_t v15 = v38[v14];
        int64_t v16 = v10 + 1;
        if (!v15)
        {
          int64_t v16 = v10 + 2;
          if (v10 + 2 >= v37) {
            goto LABEL_35;
          }
          unint64_t v15 = v38[v16];
          if (!v15)
          {
            int64_t v16 = v10 + 3;
            if (v10 + 3 >= v37) {
              goto LABEL_35;
            }
            unint64_t v15 = v38[v16];
            if (!v15)
            {
              uint64_t v17 = v10 + 4;
              if (v10 + 4 >= v37)
              {
LABEL_35:
                swift_release();
                v1 = v36;
                uint64_t v35 = 1 << *(unsigned char *)(v2 + 32);
                if (v35 > 63) {
                  bzero(v38, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v38 = -1 << v35;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v15 = v38[v17];
              if (!v15)
              {
                while (1)
                {
                  int64_t v16 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_41;
                  }
                  if (v16 >= v37) {
                    goto LABEL_35;
                  }
                  unint64_t v15 = v38[v16];
                  ++v17;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v16 = v10 + 4;
            }
          }
        }
LABEL_23:
        uint64_t v40 = (v15 - 1) & v15;
        int64_t v41 = v16;
        unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
      }
      uint64_t v18 = *(void *)(v2 + 48) + 56 * v13;
      unint64_t v19 = *(void **)v18;
      uint64_t v20 = *(void *)(v18 + 8);
      uint64_t v21 = *(void *)(v18 + 16);
      uint64_t v22 = *(void *)(v18 + 24);
      uint64_t v23 = *(void *)(v18 + 32);
      uint64_t v24 = *(void *)(v18 + 40);
      uint64_t v25 = *(void *)(v18 + 48);
      uint64_t v26 = v4;
      sub_1C277C8C0();
      sub_1C277C8D0();
      if (v19)
      {
        id v27 = v19;
        sub_1C277C040();
      }
      swift_bridgeObjectRetain();
      sub_1C277B8B0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1C277B8B0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1C277B8B0();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1C277C910();
      uint64_t v4 = v26;
      uint64_t v28 = -1 << *(unsigned char *)(v26 + 32);
      unint64_t v29 = result & ~v28;
      unint64_t v30 = v29 >> 6;
      if (((-1 << v29) & ~*(void *)(v8 + 8 * (v29 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v29) & ~*(void *)(v8 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v31 = 0;
        unint64_t v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v33 = v30 == v32;
          if (v30 == v32) {
            unint64_t v30 = 0;
          }
          v31 |= v33;
          uint64_t v34 = *(void *)(v8 + 8 * v30);
        }
        while (v34 == -1);
        unint64_t v11 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = (void *)(*(void *)(v26 + 48) + 56 * v11);
      *uint64_t v12 = v19;
      v12[1] = v20;
      v12[2] = v21;
      v12[3] = v22;
      v12[4] = v23;
      v12[5] = v24;
      v12[6] = v25;
      ++*(void *)(v26 + 16);
      uint64_t v2 = v39;
      unint64_t v7 = v40;
      int64_t v10 = v41;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1C2695AC8()
{
  v1 = v0;
  uint64_t v42 = sub_1C277A8A0();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  int64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_1C269AFF4();
  uint64_t v5 = sub_1C277C280();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    int64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    int64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1C2642C1C(&qword_1EBB84F38, MEMORY[0x1E4F27990]);
      uint64_t result = sub_1C277B7B0();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v6;
  return result;
}

uint64_t sub_1C2695EC0()
{
  v1 = v0;
  uint64_t v2 = *v0;
  sub_1C269B708(0, &qword_1EBB83018, (void (*)(void))sub_1C265D678);
  uint64_t v3 = sub_1C277C280();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    unint64_t v29 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_35;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_35;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_35;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_35:
                swift_release();
                v1 = v29;
                uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
                if (v28 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v28;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_41;
                  }
                  if (v12 >= v9) {
                    goto LABEL_35;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      int64_t v19 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
      sub_1C277C8C0();
      sub_1C277C8D0();
      if (v19)
      {
        id v20 = v19;
        sub_1C277C040();
      }
      uint64_t result = sub_1C277C910();
      uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v13 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1C26961C0()
{
  v1 = v0;
  uint64_t v2 = *v0;
  sub_1C269B708(0, &qword_1EA3045C0, (void (*)(void))sub_1C269AEBC);
  uint64_t result = sub_1C277C280();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v26;
                }
                v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
      sub_1C277C8C0();
      sub_1C277C8D0();
      uint64_t result = sub_1C277C910();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1C269648C(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  int64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1C26945A8();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_1C273FB5C();
      goto LABEL_22;
    }
    sub_1C2698250();
  }
  uint64_t v11 = *v4;
  sub_1C277C8C0();
  sub_1C277B8B0();
  uint64_t result = sub_1C277C910();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    int64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_1C277C7E0(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_1C277C840();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        char v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_1C277C7E0();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  unint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *unint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void sub_1C2696628(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v8 = v6 + 1;
  if (a3)
  {
    sub_1C2694B48(v8, &qword_1EBB80F20, (unint64_t *)&qword_1EBB85150, 0x1E4F1C118, &qword_1EBB85158);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1C273FD48();
      goto LABEL_14;
    }
    sub_1C269879C(v8, &qword_1EBB80F20, (unint64_t *)&qword_1EBB85150, 0x1E4F1C118, &qword_1EBB85158);
  }
  uint64_t v9 = *v3;
  uint64_t v10 = sub_1C277C020();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85150);
    id v12 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
    char v13 = sub_1C277C030();

    if (v13)
    {
LABEL_13:
      sub_1C277C840();
      __break(1u);
    }
    else
    {
      uint64_t v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v15 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
        char v16 = sub_1C277C030();

        if (v16) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v17 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v17 + 48) + 8 * a2) = a1;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    *(void *)(v17 + 16) = v20;
  }
}

void sub_1C26967F8(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v8 = v6 + 1;
  if (a3)
  {
    sub_1C2694B48(v8, &qword_1EBB83028, &qword_1EBB80D80, 0x1E4F2B448, &qword_1EBB80D88);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1C273FF3C();
      goto LABEL_14;
    }
    sub_1C269879C(v8, &qword_1EBB83028, &qword_1EBB80D80, 0x1E4F2B448, &qword_1EBB80D88);
  }
  uint64_t v9 = *v3;
  uint64_t v10 = sub_1C277C020();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_1C2644ED8(0, &qword_1EBB80D80);
    id v12 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
    char v13 = sub_1C277C030();

    if (v13)
    {
LABEL_13:
      sub_1C277C840();
      __break(1u);
    }
    else
    {
      uint64_t v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v15 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
        char v16 = sub_1C277C030();

        if (v16) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v17 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v17 + 48) + 8 * a2) = a1;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    *(void *)(v17 + 16) = v20;
  }
}

uint64_t sub_1C26969C8(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 <= v7 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1C2694DE4();
    }
    else
    {
      if (v8 > v7)
      {
        uint64_t result = (uint64_t)sub_1C273FF60();
        goto LABEL_22;
      }
      sub_1C2698A14();
    }
    uint64_t v9 = *v3;
    sub_1C277B850();
    sub_1C277C8C0();
    sub_1C277B8B0();
    uint64_t v10 = sub_1C277C910();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
    a2 = v10 & ~v11;
    if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v12 = sub_1C277B850();
      uint64_t v14 = v13;
      if (v12 == sub_1C277B850() && v14 == v15) {
        goto LABEL_25;
      }
      char v17 = sub_1C277C7E0();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v17)
      {
LABEL_26:
        type metadata accessor for HKFeatureIdentifier(0);
        sub_1C277C840();
        __break(1u);
        JUMPOUT(0x1C2696BF8);
      }
      uint64_t v18 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v18;
        if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        uint64_t v19 = sub_1C277B850();
        uint64_t v21 = v20;
        if (v19 == sub_1C277B850() && v21 == v22) {
          goto LABEL_25;
        }
        char v24 = sub_1C277C7E0();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v24) {
          goto LABEL_26;
        }
      }
    }
  }
LABEL_22:
  uint64_t v25 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v25 + 48) + 8 * a2) = v6;
  uint64_t v26 = *(void *)(v25 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (v27)
  {
    __break(1u);
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  *(void *)(v25 + 16) = v28;
  return result;
}

void sub_1C2696CB8(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v8 = v6 + 1;
  if (a3)
  {
    sub_1C2694B48(v8, &qword_1EA304598, &qword_1EBB80DB0, 0x1E4F2B5D8, &qword_1EBB82F98);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1C27402BC();
      goto LABEL_14;
    }
    sub_1C269879C(v8, &qword_1EA304598, &qword_1EBB80DB0, 0x1E4F2B5D8, &qword_1EBB82F98);
  }
  uint64_t v9 = *v3;
  uint64_t v10 = sub_1C277C020();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_1C2644ED8(0, &qword_1EBB80DB0);
    id v12 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
    char v13 = sub_1C277C030();

    if (v13)
    {
LABEL_13:
      sub_1C277C840();
      __break(1u);
    }
    else
    {
      uint64_t v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v15 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
        char v16 = sub_1C277C030();

        if (v16) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v17 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v17 + 48) + 8 * a2) = a1;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    *(void *)(v17 + 16) = v20;
  }
}

void sub_1C2696E88(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 <= v7 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1C26956F4();
    }
    else
    {
      if (v8 > v7)
      {
        sub_1C27402E0();
        goto LABEL_37;
      }
      sub_1C2699294();
    }
    uint64_t v9 = *v3;
    sub_1C277C8C0();
    uint64_t v10 = *(void **)a1;
    v49 = *(void **)a1;
    if (*(void *)a1)
    {
      sub_1C277C8D0();
      id v11 = v10;
      sub_1C277C040();
    }
    else
    {
      sub_1C277C8D0();
    }
    uint64_t v12 = *(void *)(a1 + 8);
    uint64_t v13 = *(void *)(a1 + 16);
    uint64_t v14 = *(void *)(a1 + 24);
    uint64_t v15 = *(void *)(a1 + 32);
    uint64_t v4 = *(void **)(a1 + 40);
    uint64_t v16 = *(void *)(a1 + 48);
    swift_bridgeObjectRetain();
    uint64_t v47 = v12;
    sub_1C277B8B0();
    uint64_t v46 = v13;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v45 = v14;
    sub_1C277B8B0();
    uint64_t v44 = v15;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C277B8B0();
    uint64_t v43 = v16;
    swift_bridgeObjectRelease();
    uint64_t v17 = sub_1C277C910();
    uint64_t v18 = -1 << *(unsigned char *)(v9 + 32);
    a2 = v17 & ~v18;
    uint64_t v52 = v9 + 56;
    if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      int64_t v40 = v4;
      uint64_t v51 = ~v18;
      uint64_t v48 = v9;
      BOOL v19 = v49;
      do
      {
        uint64_t v21 = *(void *)(v9 + 48) + 56 * a2;
        uint64_t v4 = *(void **)v21;
        uint64_t v22 = *(void *)(v21 + 8);
        uint64_t v23 = *(void *)(v21 + 16);
        uint64_t v24 = *(void *)(v21 + 24);
        uint64_t v25 = *(void *)(v21 + 32);
        uint64_t v26 = *(void *)(v21 + 48);
        if (*(void *)v21)
        {
          if (!v19) {
            goto LABEL_14;
          }
          v50 = *(void **)(v21 + 40);
          BOOL v27 = v19;
          sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85F30);
          id v28 = v27;
          id v29 = v4;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v30 = v29;
          char v31 = sub_1C277C030();

          if ((v31 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v4 = v30;
            uint64_t v9 = v48;
LABEL_36:

            BOOL v19 = v49;
            goto LABEL_14;
          }
        }
        else
        {
          if (v19) {
            goto LABEL_14;
          }
          v50 = *(void **)(v21 + 40);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        BOOL v32 = v22 == v47 && v23 == v46;
        if (!v32 && (sub_1C277C7E0() & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v9 = v48;
          goto LABEL_36;
        }
        BOOL v33 = v24 == v45 && v25 == v44;
        uint64_t v9 = v48;
        if (!v33 && (sub_1C277C7E0() & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_36;
        }
        if (v50 == v40 && v26 == v43) {
          goto LABEL_40;
        }
        char v20 = sub_1C277C7E0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        BOOL v19 = v49;
        if (v20) {
          goto LABEL_41;
        }
LABEL_14:
        a2 = (a2 + 1) & v51;
      }
      while (((*(void *)(v52 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_37:
  uint64_t v34 = *v41;
  *(void *)(*v41 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v35 = *(void *)(v34 + 48) + 56 * a2;
  long long v36 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v35 = *(_OWORD *)a1;
  *(_OWORD *)(v35 + 16) = v36;
  *(_OWORD *)(v35 + 32) = *(_OWORD *)(a1 + 32);
  *(void *)(v35 + 48) = *(void *)(a1 + 48);
  uint64_t v37 = *(void *)(v34 + 16);
  BOOL v38 = __OFADD__(v37, 1);
  uint64_t v39 = v37 + 1;
  if (v38)
  {
    __break(1u);
LABEL_40:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

LABEL_41:
    sub_1C277C840();
    __break(1u);
  }
  else
  {
    *(void *)(v34 + 16) = v39;
  }
}

uint64_t sub_1C26972B0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1C277A8A0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  id v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1C2695AC8();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1C27404F4();
      goto LABEL_12;
    }
    sub_1C2699670();
  }
  uint64_t v12 = *v3;
  sub_1C2642C1C(&qword_1EBB84F38, MEMORY[0x1E4F27990]);
  uint64_t v13 = sub_1C277B7B0();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    BOOL v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1C2642C1C(&qword_1EA3045D0, MEMORY[0x1E4F27990]);
      char v21 = sub_1C277B810();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1C277C840();
  __break(1u);
  return result;
}

void sub_1C2697550(void *a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_18;
  }
  if (a3)
  {
    sub_1C2695EC0();
  }
  else
  {
    if (v8 > v7)
    {
      sub_1C274079C();
      goto LABEL_18;
    }
    sub_1C2699A1C();
  }
  uint64_t v9 = *v3;
  sub_1C277C8C0();
  sub_1C277C8D0();
  if (a1)
  {
    id v10 = a1;
    sub_1C277C040();
  }
  uint64_t v11 = sub_1C277C910();
  uint64_t v12 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v11 & ~v12;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v13 = ~v12;
    do
    {
      uint64_t v14 = *(void **)(*(void *)(v9 + 48) + 8 * a2);
      if (v14)
      {
        if (a1)
        {
          sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85F30);
          id v15 = a1;
          id v16 = v14;
          char v17 = sub_1C277C030();

          if (v17)
          {
LABEL_17:
            sub_1C277C840();
            __break(1u);
            break;
          }
        }
      }
      else if (!a1)
      {
        goto LABEL_17;
      }
      a2 = (a2 + 1) & v13;
    }
    while (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_18:
  uint64_t v18 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v18 + 48) + 8 * a2) = a1;
  uint64_t v19 = *(void *)(v18 + 16);
  BOOL v20 = __OFADD__(v19, 1);
  uint64_t v21 = v19 + 1;
  if (v20) {
    __break(1u);
  }
  else {
    *(void *)(v18 + 16) = v21;
  }
}

void sub_1C2697718(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v8 = v6 + 1;
  if (a3)
  {
    sub_1C2694B48(v8, &qword_1EBB842E8, &qword_1EBB84260, 0x1E4F2B3B8, (unint64_t *)&qword_1EBB84268);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1C2740968();
      goto LABEL_14;
    }
    sub_1C269879C(v8, &qword_1EBB842E8, &qword_1EBB84260, 0x1E4F2B3B8, (unint64_t *)&qword_1EBB84268);
  }
  uint64_t v9 = *v3;
  uint64_t v10 = sub_1C277C020();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_1C2644ED8(0, &qword_1EBB84260);
    id v12 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
    char v13 = sub_1C277C030();

    if (v13)
    {
LABEL_13:
      sub_1C277C840();
      __break(1u);
    }
    else
    {
      uint64_t v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v15 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
        char v16 = sub_1C277C030();

        if (v16) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v17 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v17 + 48) + 8 * a2) = a1;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    *(void *)(v17 + 16) = v20;
  }
}

uint64_t sub_1C26978E8(uint64_t result, unint64_t a2, char a3)
{
  int v5 = result & 1;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1C26961C0();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1C274098C();
      goto LABEL_14;
    }
    sub_1C2699CEC();
  }
  uint64_t v8 = *v3;
  sub_1C277C8C0();
  sub_1C277C8D0();
  uint64_t result = sub_1C277C910();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (((v5 == 0) ^ *(unsigned __int8 *)(v10 + a2)))
    {
LABEL_13:
      uint64_t result = sub_1C277C840();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (((v5 == 0) ^ *(unsigned __int8 *)(v10 + a2))) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v12 + 48) + a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

void sub_1C2697A50(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v8 = v6 + 1;
  if (a3)
  {
    sub_1C2694B48(v8, &qword_1EA3045A8, (unint64_t *)&qword_1EBB82FE0, 0x1E4F2B4B8, &qword_1EBB82FF0);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1C2740B40();
      goto LABEL_14;
    }
    sub_1C269879C(v8, &qword_1EA3045A8, (unint64_t *)&qword_1EBB82FE0, 0x1E4F2B4B8, &qword_1EBB82FF0);
  }
  uint64_t v9 = *v3;
  uint64_t v10 = sub_1C277C020();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_1C2644ED8(0, (unint64_t *)&qword_1EBB82FE0);
    id v12 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
    char v13 = sub_1C277C030();

    if (v13)
    {
LABEL_13:
      sub_1C277C840();
      __break(1u);
    }
    else
    {
      uint64_t v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v15 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
        char v16 = sub_1C277C030();

        if (v16) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v17 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v17 + 48) + 8 * a2) = a1;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    *(void *)(v17 + 16) = v20;
  }
}

uint64_t sub_1C2697C20()
{
  v1 = v0;
  uint64_t v2 = *v0;
  sub_1C261E8D8();
  uint64_t v3 = sub_1C277C280();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    BOOL v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_1C277C8C0();
    swift_bridgeObjectRetain();
    sub_1C277B8B0();
    uint64_t result = sub_1C277C910();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    char v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    void *v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C2697ECC()
{
  v1 = v0;
  uint64_t v2 = type metadata accessor for UserProfile();
  uint64_t v33 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_1C2643B90();
  uint64_t v6 = sub_1C277C280();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v7;
    return result;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = *(void *)(v5 + 56);
  uint64_t v30 = v0;
  uint64_t v31 = v5 + 56;
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v9;
  int64_t v32 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v32) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v31 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v32) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v31 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v32) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v31 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    uint64_t v21 = *(void *)(v33 + 72);
    sub_1C26448A4(*(void *)(v5 + 48) + v21 * v17, (uint64_t)v4);
    sub_1C277C8C0();
    sub_1C277A8A0();
    sub_1C2642C1C(&qword_1EBB84F38, MEMORY[0x1E4F27990]);
    sub_1C277B7C0();
    uint64_t result = sub_1C277C910();
    uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t result = sub_1C2643AE0((uint64_t)v4, *(void *)(v7 + 48) + v15 * v21);
    ++*(void *)(v7 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v32)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    v1 = v30;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v31 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v32) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v31 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C2698250()
{
  v1 = v0;
  uint64_t v2 = *v0;
  sub_1C269B708(0, &qword_1EA304630, (void (*)(void))sub_1C265DA88);
  uint64_t v3 = sub_1C277C280();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_1C277C8C0();
    swift_bridgeObjectRetain();
    sub_1C277B8B0();
    uint64_t result = sub_1C277C910();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    char v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    void *v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C2698520(uint64_t a1, void (*a2)(void))
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  a2(0);
  uint64_t v5 = sub_1C277C280();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  int64_t v29 = v2;
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v8 = v4 + 56;
  if (v7 < 64) {
    uint64_t v9 = ~(-1 << v7);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v4 + 56);
  int64_t v11 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v12 = v5 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v8 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v8 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    id v21 = *(id *)(*(void *)(v4 + 48) + 8 * v17);
    uint64_t result = sub_1C277C020();
    uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
    ++*(void *)(v6 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v3 = v29;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v8 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C269879C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v6 = v5;
  uint64_t v7 = *v5;
  sub_1C269B5E8(0, a2, a3, a4, a5);
  uint64_t v8 = sub_1C277C280();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v6 = v9;
    return result;
  }
  int64_t v32 = v5;
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = v7 + 56;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & *(void *)(v7 + 56);
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v15 = v8 + 56;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_24;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v21 >= v14) {
      goto LABEL_33;
    }
    unint64_t v22 = *(void *)(v11 + 8 * v21);
    ++v17;
    if (!v22)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v14) {
        goto LABEL_33;
      }
      unint64_t v22 = *(void *)(v11 + 8 * v17);
      if (!v22)
      {
        int64_t v17 = v21 + 2;
        if (v21 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v22 = *(void *)(v11 + 8 * v17);
        if (!v22) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
LABEL_24:
    id v24 = *(id *)(*(void *)(v7 + 48) + 8 * v20);
    uint64_t result = sub_1C277C020();
    uint64_t v25 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v15 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v18 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v9 + 48) + 8 * v18) = v24;
    ++*(void *)(v9 + 16);
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v14)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v6 = v32;
    goto LABEL_35;
  }
  unint64_t v22 = *(void *)(v11 + 8 * v23);
  if (v22)
  {
    int64_t v17 = v23;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v17 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v22 = *(void *)(v11 + 8 * v17);
    ++v23;
    if (v22) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C2698A14()
{
  v1 = v0;
  uint64_t v2 = *v0;
  sub_1C269B554();
  uint64_t v3 = sub_1C277C280();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  unint64_t v27 = v0;
  uint64_t v28 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v28 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v28 + 8 * v10);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    int64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v13);
    sub_1C277B850();
    sub_1C277C8C0();
    id v18 = v17;
    sub_1C277B8B0();
    uint64_t v19 = sub_1C277C910();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = v19 & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v8 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v21) & ~*(void *)(v8 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v8 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v11 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(void *)(*(void *)(v4 + 48) + 8 * v11) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    v1 = v27;
    goto LABEL_35;
  }
  unint64_t v15 = *(void *)(v28 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C2698CF0()
{
  v1 = v0;
  uint64_t v2 = *v0;
  sub_1C269B708(0, &qword_1EBB83760, (void (*)(void))sub_1C26497D4);
  uint64_t v3 = sub_1C277C280();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_36;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v27 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v16 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v17 = v16 | (v10 << 6);
      goto LABEL_33;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_37;
    }
    if (v18 >= v27) {
      break;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v27) {
        break;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v10);
      if (!v19)
      {
        int64_t v10 = v18 + 2;
        if (v18 + 2 >= v27) {
          break;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v10);
        if (!v19)
        {
          int64_t v20 = v18 + 3;
          if (v20 >= v27) {
            break;
          }
          unint64_t v19 = *(void *)(v6 + 8 * v20);
          if (!v19)
          {
            while (1)
            {
              int64_t v10 = v20 + 1;
              if (__OFADD__(v20, 1)) {
                goto LABEL_38;
              }
              if (v10 >= v27) {
                goto LABEL_34;
              }
              unint64_t v19 = *(void *)(v6 + 8 * v10);
              ++v20;
              if (v19) {
                goto LABEL_32;
              }
            }
          }
          int64_t v10 = v20;
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_33:
    char v25 = *(unsigned char *)(*(void *)(v2 + 48) + v17);
    sub_1C277C8C0();
    sub_1C277B8B0();
    swift_bridgeObjectRelease();
    uint64_t v11 = sub_1C277C910();
    uint64_t v12 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v13 = v11 & ~v12;
    unint64_t v14 = v13 >> 6;
    if (((-1 << v13) & ~*(void *)(v9 + 8 * (v13 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v13) & ~*(void *)(v9 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v21 = 0;
    unint64_t v22 = (unint64_t)(63 - v12) >> 6;
    do
    {
      if (++v14 == v22 && (v21 & 1) != 0)
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        JUMPOUT(0x1C2699234);
      }
      BOOL v23 = v14 == v22;
      if (v14 == v22) {
        unint64_t v14 = 0;
      }
      v21 |= v23;
      uint64_t v24 = *(void *)(v9 + 8 * v14);
    }
    while (v24 == -1);
    unint64_t v15 = __clz(__rbit64(~v24)) + (v14 << 6);
LABEL_8:
    *(void *)(v9 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = v25;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  uint64_t result = swift_release_n();
  v1 = v0;
LABEL_36:
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1C2699294()
{
  v1 = v0;
  uint64_t v2 = *v0;
  sub_1C269B708(0, &qword_1EA3045E0, (void (*)(void))sub_1C265D79C);
  uint64_t v3 = sub_1C277C280();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_38:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  long long v36 = v1;
  uint64_t v37 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v38 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  for (i = v2; ; uint64_t v2 = i)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      int64_t v40 = v10;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v15 >= v38) {
      goto LABEL_36;
    }
    unint64_t v16 = *(void *)(v37 + 8 * v15);
    int64_t v17 = v10 + 1;
    if (!v16)
    {
      int64_t v17 = v10 + 2;
      if (v10 + 2 >= v38) {
        goto LABEL_36;
      }
      unint64_t v16 = *(void *)(v37 + 8 * v17);
      if (!v16)
      {
        int64_t v17 = v10 + 3;
        if (v10 + 3 >= v38) {
          goto LABEL_36;
        }
        unint64_t v16 = *(void *)(v37 + 8 * v17);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v16 - 1) & v16;
    int64_t v40 = v17;
    unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
LABEL_24:
    uint64_t v19 = *(void *)(v2 + 48) + 56 * v14;
    int64_t v20 = *(void **)v19;
    uint64_t v41 = *(void *)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
    uint64_t v22 = *(void *)(v19 + 24);
    uint64_t v23 = *(void *)(v19 + 32);
    uint64_t v24 = *(void *)(v19 + 40);
    uint64_t v25 = *(void *)(v19 + 48);
    uint64_t v26 = v4;
    sub_1C277C8C0();
    sub_1C277C8D0();
    if (v20)
    {
      id v27 = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v28 = v27;
      sub_1C277C040();
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    sub_1C277B8B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C277B8B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C277B8B0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C277C910();
    uint64_t v4 = v26;
    uint64_t v29 = -1 << *(unsigned char *)(v26 + 32);
    unint64_t v30 = result & ~v29;
    unint64_t v31 = v30 >> 6;
    if (((-1 << v30) & ~*(void *)(v8 + 8 * (v30 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v30) & ~*(void *)(v8 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v32 = 0;
      unint64_t v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v34 = v31 == v33;
        if (v31 == v33) {
          unint64_t v31 = 0;
        }
        v32 |= v34;
        uint64_t v35 = *(void *)(v8 + 8 * v31);
      }
      while (v35 == -1);
      unint64_t v11 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = (void *)(*(void *)(v26 + 48) + 56 * v11);
    int64_t v10 = v40;
    *uint64_t v12 = v20;
    v12[1] = v41;
    v12[2] = v21;
    v12[3] = v22;
    v12[4] = v23;
    v12[5] = v24;
    v12[6] = v25;
    ++*(void *)(v26 + 16);
  }
  uint64_t v18 = v10 + 4;
  if (v10 + 4 >= v38)
  {
LABEL_36:
    uint64_t result = swift_release_n();
    v1 = v36;
    goto LABEL_38;
  }
  unint64_t v16 = *(void *)(v37 + 8 * v18);
  if (v16)
  {
    int64_t v17 = v10 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v17 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v17 >= v38) {
      goto LABEL_36;
    }
    unint64_t v16 = *(void *)(v37 + 8 * v17);
    ++v18;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1C2699670()
{
  v1 = v0;
  uint64_t v2 = sub_1C277A8A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_1C269AFF4();
  uint64_t v7 = sub_1C277C280();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  BOOL v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1C2642C1C(&qword_1EBB84F38, MEMORY[0x1E4F27990]);
    uint64_t result = sub_1C277B7B0();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C2699A1C()
{
  v1 = v0;
  uint64_t v2 = *v0;
  sub_1C269B708(0, &qword_1EBB83018, (void (*)(void))sub_1C265D678);
  uint64_t v3 = sub_1C277C280();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_37:
    uint64_t *v1 = v4;
    return result;
  }
  unint64_t v28 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v16 >= v9) {
      goto LABEL_35;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_35;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_35;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    unint64_t v19 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    sub_1C277C8C0();
    sub_1C277C8D0();
    if (v19)
    {
      id v20 = v19;
      sub_1C277C040();
    }
    uint64_t result = sub_1C277C910();
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v13 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_35:
    uint64_t result = swift_release_n();
    v1 = v28;
    goto LABEL_37;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_35;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1C2699CEC()
{
  v1 = v0;
  uint64_t v2 = *v0;
  sub_1C269B708(0, &qword_1EA3045C0, (void (*)(void))sub_1C269AEBC);
  uint64_t result = sub_1C277C280();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
    sub_1C277C8C0();
    sub_1C277C8D0();
    uint64_t result = sub_1C277C910();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

char *sub_1C2699F88(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    int64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1C277C610();
  __break(1u);
  return result;
}

uint64_t sub_1C269A074(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C277C610();
  __break(1u);
  return result;
}

uint64_t sub_1C269A168(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C277C610();
  __break(1u);
  return result;
}

uint64_t sub_1C269A258(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C277C610();
  __break(1u);
  return result;
}

uint64_t sub_1C269A350(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1C2621120(0, &qword_1EA304610);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C277C610();
  __break(1u);
  return result;
}

uint64_t sub_1C269A46C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_1C2621120(0, &qword_1EBB829B8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C277C610();
  __break(1u);
  return result;
}

uint64_t sub_1C269A58C(uint64_t a1)
{
  uint64_t v2 = sub_1C277A9A0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  unint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_1C269B268();
    uint64_t v9 = sub_1C277C2A0();
    uint64_t v10 = 0;
    unint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    int64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    BOOL v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_1C2642C1C(&qword_1EBB82668, MEMORY[0x1E4F27C88]);
      uint64_t v16 = sub_1C277B7B0();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_1C2642C1C(&qword_1EA3045E8, MEMORY[0x1E4F27C88]);
          char v23 = sub_1C277B810();
          BOOL v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1C269A8A0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C277C610();
  __break(1u);
  return result;
}

void sub_1C269A994(unint64_t a1)
{
  unint64_t v1 = a1;
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C277C5A0();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_1C269B5E8(0, &qword_1EA3045A0, (unint64_t *)&qword_1EBB85E80, 0x1E4F2B2C0, (unint64_t *)&qword_1EBB84498);
      uint64_t v3 = sub_1C277C2A0();
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1C277C5A0();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = MEMORY[0x1E4FBC870];
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  uint64_t v7 = v3 + 56;
  uint64_t v43 = v5;
  if ((v1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = 0;
    unint64_t v41 = v1;
    while (1)
    {
      while (1)
      {
        uint64_t v9 = MEMORY[0x1C875C230](v8, v1);
        BOOL v10 = __OFADD__(v8++, 1);
        if (v10)
        {
          __break(1u);
          goto LABEL_36;
        }
        uint64_t v11 = v9;
        uint64_t v12 = sub_1C277C020();
        uint64_t v13 = -1 << *(unsigned char *)(v3 + 32);
        unint64_t v14 = v12 & ~v13;
        unint64_t v15 = v14 >> 6;
        uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
        uint64_t v17 = 1 << v14;
        if (((1 << v14) & v16) != 0) {
          break;
        }
LABEL_20:
        *(void *)(v7 + 8 * v15) = v17 | v16;
        *(void *)(*(void *)(v3 + 48) + 8 * v14) = v11;
        uint64_t v23 = *(void *)(v3 + 16);
        BOOL v10 = __OFADD__(v23, 1);
        uint64_t v24 = v23 + 1;
        if (v10) {
          goto LABEL_37;
        }
        *(void *)(v3 + 16) = v24;
        if (v8 == v5) {
          return;
        }
      }
      sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85E80);
      id v18 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
      char v19 = sub_1C277C030();

      if ((v19 & 1) == 0)
      {
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
          char v22 = sub_1C277C030();

          if (v22) {
            goto LABEL_11;
          }
        }
        unint64_t v1 = v41;
        uint64_t v5 = v43;
        goto LABEL_20;
      }
LABEL_11:
      swift_unknownObjectRelease();
      unint64_t v1 = v41;
      uint64_t v5 = v43;
      if (v8 == v43) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  unint64_t v40 = v1 + 32;
  uint64_t v42 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v42)
  {
    id v26 = *(id *)(v40 + 8 * v25);
    uint64_t v27 = sub_1C277C020();
    uint64_t v28 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v29 = v27 & ~v28;
    unint64_t v30 = v29 >> 6;
    uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
    uint64_t v32 = 1 << v29;
    if (((1 << v29) & v31) != 0)
    {
      sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85E80);
      id v33 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
      char v34 = sub_1C277C030();

      if (v34)
      {
LABEL_24:

        goto LABEL_25;
      }
      uint64_t v35 = ~v28;
      while (1)
      {
        unint64_t v29 = (v29 + 1) & v35;
        unint64_t v30 = v29 >> 6;
        uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
        uint64_t v32 = 1 << v29;
        if ((v31 & (1 << v29)) == 0) {
          break;
        }
        id v36 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
        char v37 = sub_1C277C030();

        if (v37) {
          goto LABEL_24;
        }
      }
    }
    *(void *)(v7 + 8 * v30) = v32 | v31;
    *(void *)(*(void *)(v3 + 48) + 8 * v29) = v26;
    uint64_t v38 = *(void *)(v3 + 16);
    BOOL v10 = __OFADD__(v38, 1);
    uint64_t v39 = v38 + 1;
    if (v10) {
      goto LABEL_38;
    }
    *(void *)(v3 + 16) = v39;
LABEL_25:
    if (++v25 == v43) {
      return;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

uint64_t sub_1C269AD0C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C277C610();
  __break(1u);
  return result;
}

unint64_t sub_1C269AE04()
{
  unint64_t result = qword_1EBB826B0;
  if (!qword_1EBB826B0)
  {
    sub_1C2641054(255, &qword_1EBB826A8, (uint64_t (*)(uint64_t))type metadata accessor for HealthAppOrchestrationServer, MEMORY[0x1E4FBB718]);
    unint64_t result = swift_getFunctionTypeMetadata0();
    atomic_store(result, (unint64_t *)&qword_1EBB826B0);
  }
  return result;
}

unint64_t sub_1C269AE78()
{
  unint64_t result = qword_1EA3045B8;
  if (!qword_1EA3045B8)
  {
    unint64_t result = swift_getFunctionTypeMetadata0();
    atomic_store(result, (unint64_t *)&qword_1EA3045B8);
  }
  return result;
}

unint64_t sub_1C269AEBC()
{
  unint64_t result = qword_1EA3045C8;
  if (!qword_1EA3045C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3045C8);
  }
  return result;
}

unint64_t sub_1C269AF10()
{
  unint64_t result = qword_1EBB838E0;
  if (!qword_1EBB838E0)
  {
    unint64_t result = swift_getFunctionTypeMetadata1();
    atomic_store(result, (unint64_t *)&qword_1EBB838E0);
  }
  return result;
}

void sub_1C269AF60()
{
  if (!qword_1EBB83020)
  {
    type metadata accessor for EncodedFeatureTag();
    sub_1C2642C1C(&qword_1EBB853A8, (void (*)(uint64_t))type metadata accessor for EncodedFeatureTag);
    unint64_t v0 = sub_1C277C2B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB83020);
    }
  }
}

void sub_1C269AFF4()
{
  if (!qword_1EA3045D8)
  {
    sub_1C277A8A0();
    sub_1C2642C1C(&qword_1EBB84F38, MEMORY[0x1E4F27990]);
    unint64_t v0 = sub_1C277C2B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA3045D8);
    }
  }
}

uint64_t sub_1C269B088(uint64_t a1, uint64_t a2)
{
  return a2;
}

id *sub_1C269B0E4(id *a1)
{
  id v2 = *a1;
  return a1;
}

id *sub_1C269B110(id *a1)
{
  return a1;
}

void **sub_1C269B13C(void **a1)
{
  id v2 = *a1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

unint64_t sub_1C269B190()
{
  unint64_t result = qword_1EBB843C0;
  if (!qword_1EBB843C0)
  {
    sub_1C269B1E4();
    unint64_t result = swift_getFunctionTypeMetadata1();
    atomic_store(result, (unint64_t *)&qword_1EBB843C0);
  }
  return result;
}

void sub_1C269B1E4()
{
  if (!qword_1EBB843B8)
  {
    type metadata accessor for CachingSharedSummaryTransactionBuilder();
    sub_1C2621120(255, (unint64_t *)&qword_1EBB831D0);
    unint64_t v0 = sub_1C277C990();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB843B8);
    }
  }
}

void sub_1C269B268()
{
  if (!qword_1EBB83008)
  {
    sub_1C277A9A0();
    sub_1C2642C1C(&qword_1EBB82668, MEMORY[0x1E4F27C88]);
    unint64_t v0 = sub_1C277C2B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB83008);
    }
  }
}

void sub_1C269B2FC()
{
  if (!qword_1EA3045F0)
  {
    type metadata accessor for Profile();
    sub_1C2642C1C(&qword_1EBB85088, (void (*)(uint64_t))type metadata accessor for Profile);
    unint64_t v0 = sub_1C277C2B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA3045F0);
    }
  }
}

uint64_t sub_1C269B390(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UserProfile();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1C269B3EC()
{
  unint64_t result = qword_1EA304600;
  if (!qword_1EA304600)
  {
    sub_1C269B44C(255, &qword_1EA304608, MEMORY[0x1E4FBB718]);
    unint64_t result = swift_getFunctionTypeMetadata0();
    atomic_store(result, (unint64_t *)&qword_1EA304600);
  }
  return result;
}

void sub_1C269B44C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1C2621120(255, &qword_1EA304610);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1C269B4C0()
{
  if (!qword_1EA304620)
  {
    type metadata accessor for FeedItem();
    sub_1C2642C1C(&qword_1EA3042C0, (void (*)(uint64_t))type metadata accessor for FeedItem);
    unint64_t v0 = sub_1C277C2B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA304620);
    }
  }
}

void sub_1C269B554()
{
  if (!qword_1EBB842F0)
  {
    type metadata accessor for HKFeatureIdentifier(255);
    sub_1C2642C1C(&qword_1EBB842A0, type metadata accessor for HKFeatureIdentifier);
    unint64_t v0 = sub_1C277C2B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB842F0);
    }
  }
}

void sub_1C269B5E8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  if (!*a2)
  {
    sub_1C2644ED8(255, a3);
    sub_1C264E7E8(a5, a3);
    unint64_t v8 = sub_1C277C2B0();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C269B674()
{
  if (!qword_1EA304628)
  {
    type metadata accessor for SharableModelReference();
    sub_1C2642C1C(&qword_1EBB853C8, (void (*)(uint64_t))type metadata accessor for SharableModelReference);
    unint64_t v0 = sub_1C277C2B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA304628);
    }
  }
}

void sub_1C269B708(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t v4 = sub_1C277C2B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C269B768()
{
  if (!qword_1EA304638)
  {
    type metadata accessor for Keyword();
    sub_1C2642C1C(&qword_1EBB853D0, (void (*)(uint64_t))type metadata accessor for Keyword);
    unint64_t v0 = sub_1C277C2B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA304638);
    }
  }
}

void sub_1C269B7FC()
{
  if (!qword_1EA304640)
  {
    type metadata accessor for DataType();
    sub_1C2642C1C((unint64_t *)&unk_1EBB85090, (void (*)(uint64_t))type metadata accessor for DataType);
    unint64_t v0 = sub_1C277C2B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA304640);
    }
  }
}

uint64_t HealthAppPluginInfo.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t HealthAppPluginInfo.principalObject.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t HealthAppPluginInfo.init(name:bundleIdentifier:bundle:principalObject:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a5;
  a7[3] = a3;
  a7[4] = a4;
  a7[5] = a6;
  return result;
}

uint64_t HealthAppPluginInfo.LoadError.debugDescription.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C277A750();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Error = type metadata accessor for HealthAppPluginInfo.LoadError(0);
  MEMORY[0x1F4188790](Error);
  unint64_t v8 = (void **)((char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  strcpy((char *)v20, "[LoadError]: ");
  HIWORD(v20[1]) = -4864;
  sub_1C2635178(v1, (uint64_t)v8, type metadata accessor for HealthAppPluginInfo.LoadError);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      (*(void (**)(char *, void **, uint64_t))(v3 + 32))(v5, v8, v2);
      unint64_t v18 = 0;
      unint64_t v19 = 0xE000000000000000;
      sub_1C277C2D0();
      swift_bridgeObjectRelease();
      unint64_t v18 = 0xD000000000000023;
      unint64_t v19 = 0x80000001C278AE30;
      sub_1C277A710();
      sub_1C277B8D0();
      swift_bridgeObjectRelease();
      sub_1C277B8D0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return v20[0];
    case 2u:
      unint64_t v18 = 0;
      unint64_t v19 = 0xE000000000000000;
      sub_1C277C2D0();
      swift_bridgeObjectRelease();
      unint64_t v9 = 0xD000000000000021;
      BOOL v10 = "Could not find bundle with name: ";
      goto LABEL_8;
    case 3u:
      unint64_t v18 = 0;
      unint64_t v19 = 0xE000000000000000;
      sub_1C277C2D0();
      swift_bridgeObjectRelease();
      unint64_t v9 = 0xD00000000000002DLL;
      BOOL v10 = "Could not find bundle with bundleIdentifier: ";
      goto LABEL_8;
    case 4u:
      uint64_t v11 = *v8;
      unint64_t v18 = 0;
      unint64_t v19 = 0xE000000000000000;
      sub_1C277C2D0();
      swift_bridgeObjectRelease();
      unint64_t v18 = 0xD000000000000020;
      unint64_t v19 = 0x80000001C278ADA0;
      id v12 = objc_msgSend(v11, sel_description);
      goto LABEL_12;
    case 5u:
      unint64_t v18 = 0;
      unint64_t v19 = 0xE000000000000000;
      sub_1C277C2D0();
      swift_bridgeObjectRelease();
      unint64_t v9 = 0xD000000000000017;
      BOOL v10 = "Bundle is not allowed: ";
      goto LABEL_8;
    case 6u:
      uint64_t v13 = *v8;
      unint64_t v18 = 0;
      unint64_t v19 = 0xE000000000000000;
      sub_1C277C2D0();
      sub_1C277B8D0();
      v17[1] = v13;
      sub_1C26532A4();
      sub_1C277C450();
      sub_1C277B8D0();
      swift_bridgeObjectRelease();

      return v20[0];
    case 7u:
      unint64_t v14 = *v8;
      unint64_t v18 = 0;
      unint64_t v19 = 0xE000000000000000;
      sub_1C277C2D0();
      sub_1C277B8D0();
      MEMORY[0x1C875B960](v14, MEMORY[0x1E4FBB1A0]);
      sub_1C277B8D0();
      swift_bridgeObjectRelease();
      goto LABEL_15;
    case 8u:
      uint64_t v11 = *v8;
      unint64_t v18 = 0;
      unint64_t v19 = 0xE000000000000000;
      sub_1C277C2D0();
      swift_bridgeObjectRelease();
      unint64_t v18 = 0xD00000000000001FLL;
      unint64_t v19 = 0x80000001C278ACD0;
      id v12 = objc_msgSend(v11, sel_description);
LABEL_12:
      id v15 = v12;
      sub_1C277B850();

      sub_1C277B8D0();
      swift_bridgeObjectRelease();
      sub_1C277B8D0();

      goto LABEL_16;
    case 9u:
      unint64_t v18 = 0;
      unint64_t v19 = 0xE000000000000000;
      sub_1C277C2D0();
      sub_1C277B8D0();
      goto LABEL_14;
    default:
      unint64_t v18 = 0;
      unint64_t v19 = 0xE000000000000000;
      sub_1C277C2D0();
      swift_bridgeObjectRelease();
      unint64_t v9 = 0xD000000000000020;
      BOOL v10 = "Cannot load bundle at location: ";
LABEL_8:
      unint64_t v18 = v9;
      unint64_t v19 = (unint64_t)(v10 - 32) | 0x8000000000000000;
LABEL_14:
      sub_1C277B8D0();
LABEL_15:
      swift_bridgeObjectRelease();
      sub_1C277B8D0();
LABEL_16:
      swift_bridgeObjectRelease();
      return v20[0];
  }
}

uint64_t static HealthAppPluginSource.healthPluginSuffix.getter()
{
  return 0x6C7068746C616568;
}

uint64_t HealthAppPluginSource.__allocating_init(bundleProvider:knownBundles:disabledBundleIdentifiers:allowedBundleIdentifiers:)(id (*a1)(), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  HealthAppPluginSource.init(bundleProvider:knownBundles:disabledBundleIdentifiers:allowedBundleIdentifiers:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t HealthAppPluginSource.knownBundles.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t HealthAppPluginSource.disabledBundleIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t HealthAppPluginSource.allowedBundleIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C269BF1C()
{
  return sub_1C277B860();
}

Swift::Void __swiftcall HealthAppPluginSource.install(plugins:)(Swift::OpaquePointer plugins)
{
  uint64_t v2 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 28);
  os_unfair_lock_lock(v2);
  sub_1C269D6E0();
  os_unfair_lock_unlock(v2);
}

unint64_t HealthAppPluginSource.providedBundleIdentifiers()()
{
  unint64_t result = (*(uint64_t (**)(void))(v0 + 24))();
  if (!v1)
  {
    unint64_t v3 = result;
    if (result >> 62)
    {
      swift_bridgeObjectRetain();
      unint64_t result = sub_1C277C5A0();
      uint64_t v4 = result;
      if (result) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v4 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
      unint64_t result = swift_bridgeObjectRetain();
      if (v4)
      {
LABEL_4:
        if (v4 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v5 = 0;
        uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
        do
        {
          if ((v3 & 0xC000000000000001) != 0) {
            id v7 = (id)MEMORY[0x1C875C230](v5, v3);
          }
          else {
            id v7 = *(id *)(v3 + 8 * v5 + 32);
          }
          unint64_t v8 = v7;
          id v9 = objc_msgSend(v7, sel_bundleIdentifier);
          if (v9)
          {
            uint64_t v10 = v9;
            uint64_t v11 = sub_1C277B850();
            uint64_t v13 = v12;

            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v6 = sub_1C26404F8(0, v6[2] + 1, 1, v6);
            }
            unint64_t v15 = v6[2];
            unint64_t v14 = v6[3];
            if (v15 >= v14 >> 1) {
              uint64_t v6 = sub_1C26404F8((void *)(v14 > 1), v15 + 1, 1, v6);
            }
            v6[2] = v15 + 1;
            uint64_t v16 = &v6[2 * v15];
            v16[4] = v11;
            v16[5] = v13;
          }
          else
          {
          }
          ++v5;
        }
        while (v4 != v5);
        goto LABEL_19;
      }
    }
    uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
LABEL_19:
    swift_bridgeObjectRelease_n();
    uint64_t v17 = sub_1C2648348((uint64_t)v6);
    swift_bridgeObjectRelease();
    return v17;
  }
  return result;
}

uint64_t HealthAppPluginSource.knownBundleIdentifiers()()
{
  uint64_t v1 = type metadata accessor for HealthAppPluginSource.KnownBundle(0);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + 40);
  int64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C264872C(0, v6, 0);
    uint64_t v8 = v5 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v9 = *(void *)(v2 + 72);
    uint64_t v7 = v18;
    do
    {
      sub_1C2635178(v8, (uint64_t)v4, type metadata accessor for HealthAppPluginSource.KnownBundle);
      uint64_t v11 = *((void *)v4 + 2);
      uint64_t v10 = *((void *)v4 + 3);
      swift_bridgeObjectRetain();
      sub_1C2635098((uint64_t)v4, type metadata accessor for HealthAppPluginSource.KnownBundle);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C264872C(0, *(void *)(v7 + 16) + 1, 1);
        uint64_t v7 = v18;
      }
      unint64_t v13 = *(void *)(v7 + 16);
      unint64_t v12 = *(void *)(v7 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1C264872C(v12 > 1, v13 + 1, 1);
        uint64_t v7 = v18;
      }
      *(void *)(v7 + 16) = v13 + 1;
      uint64_t v14 = v7 + 16 * v13;
      *(void *)(v14 + 32) = v11;
      *(void *)(v14 + 40) = v10;
      v8 += v9;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  uint64_t v15 = sub_1C2648348(v7);
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t HealthAppPluginSource.plugin(name:allowDynamicFallback:)@<X0>(void (*a1)(char *, uint64_t)@<X8>)
{
  if (sub_1C277B940())
  {
    uint64_t v2 = swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1C277B8D0();
    swift_bridgeObjectRetain();
    sub_1C277B8D0();
    uint64_t v2 = swift_bridgeObjectRelease();
  }
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = v3 + 4;
  uint64_t v5 = v3 + 7;
  os_unfair_lock_lock(v3 + 7);
  sub_1C269D718(v4, a1);
  os_unfair_lock_unlock(v5);
  return swift_bridgeObjectRelease();
}

void sub_1C269C4C4(void *a1@<X0>, void (*a2)(void, void, void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, void (*a7)(char *, uint64_t)@<X8>)
{
  uint64_t v118 = a6;
  LODWORD(v121) = a5;
  uint64_t v133 = a4;
  v136 = a2;
  uint64_t v137 = a3;
  v128 = a7;
  uint64_t v8 = sub_1C277A640();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v131 = v8;
  uint64_t v132 = v9;
  MEMORY[0x1F4188790](v8);
  v130 = (char *)&v117 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C277A750();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v125 = v11;
  uint64_t v126 = v12;
  MEMORY[0x1F4188790](v11);
  v124 = (char *)&v117 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C263F5FC(0, &qword_1EBB84FA8, type metadata accessor for HealthAppPluginSource.KnownBundle, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v127 = (uint64_t)&v117 - v15;
  uint64_t v129 = type metadata accessor for HealthAppPluginSource.KnownBundle(0);
  v134 = *(char **)(v129 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v129);
  v120 = (uint64_t *)((char *)&v117 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v119 = (uint64_t)&v117 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  char v22 = (uint64_t *)((char *)&v117 - v21);
  MEMORY[0x1F4188790](v20);
  v122 = a1;
  v123 = (uint64_t *)((char *)&v117 - v23);
  uint64_t v24 = *a1;
  uint64_t v25 = *(void *)(*a1 + 16);
  if (!v25)
  {
LABEL_9:
    uint64_t v34 = *(void *)(v133 + 40);
    uint64_t v35 = *(void *)(v34 + 16);
    if (v35)
    {
      uint64_t v36 = v34 + ((v134[80] + 32) & ~(unint64_t)v134[80]);
      uint64_t v37 = *((void *)v134 + 9);
      swift_bridgeObjectRetain();
      uint64_t v38 = v132;
      uint64_t v39 = v136;
      uint64_t v40 = v137;
      while (1)
      {
        sub_1C2635178(v36, (uint64_t)v22, type metadata accessor for HealthAppPluginSource.KnownBundle);
        BOOL v41 = (void (*)(void, void, void))*v22 == v39 && v22[1] == v40;
        if (v41 || (sub_1C277C7E0() & 1) != 0) {
          break;
        }
        sub_1C2635098((uint64_t)v22, type metadata accessor for HealthAppPluginSource.KnownBundle);
        v36 += v37;
        if (!--v35)
        {
          uint64_t v42 = 1;
          goto LABEL_20;
        }
      }
      uint64_t v43 = v127;
      sub_1C2635B20((uint64_t)v22, v127);
      uint64_t v42 = 0;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v42 = 1;
      uint64_t v38 = v132;
      uint64_t v39 = v136;
      uint64_t v40 = v137;
LABEL_20:
      uint64_t v43 = v127;
    }
    uint64_t v44 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))v134;
    uint64_t v45 = v129;
    (*((void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v134 + 7))(v43, v42, 1, v129);
    swift_bridgeObjectRelease();
    int v46 = v44[6](v43, 1, v45);
    uint64_t v47 = v130;
    uint64_t v48 = v131;
    if (v46 != 1)
    {
      v62 = v123;
      sub_1C2635B20(v43, (uint64_t)v123);
      v63 = (char *)v62 + *(int *)(v45 + 24);
      uint64_t v64 = v62[1];
      uint64_t v138 = *v62;
      uint64_t v139 = v64;
      uint64_t v66 = v38 + 104;
      v65 = *(void (**)(void))(v38 + 104);
      LODWORD(v137) = *MEMORY[0x1E4F276C0];
      v136 = (void (*)(void, void, void))v65;
      v65(v47);
      sub_1C26366A8();
      swift_bridgeObjectRetain();
      v67 = v124;
      v134 = v63;
      sub_1C277A740();
      v70 = *(void (**)(char *, uint64_t))(v38 + 8);
      uint64_t v69 = v38 + 8;
      v68 = v70;
      v71 = v47;
      v72 = v67;
      v70(v71, v48);
      swift_bridgeObjectRelease();
      id v73 = objc_allocWithZone(MEMORY[0x1E4F28B50]);
      v74 = (void *)sub_1C277A6A0();
      id v75 = objc_msgSend(v73, sel_initWithURL_, v74);

      uint64_t v76 = v126 + 8;
      v77 = v72;
      v78 = *(void (**)(char *, uint64_t))(v126 + 8);
      v78(v77, v125);
      if (v75)
      {
        sub_1C2636AB4(v75, v122, v128);
        sub_1C2635098((uint64_t)v62, type metadata accessor for HealthAppPluginSource.KnownBundle);
      }
      else
      {
        v128 = v68;
        uint64_t v82 = v137;
        uint64_t v133 = v66;
        uint64_t v126 = v76;
        if (qword_1EBB85EA8 != -1) {
          swift_once();
        }
        v135 = v78;
        uint64_t v132 = v69;
        uint64_t v83 = sub_1C277B130();
        __swift_project_value_buffer(v83, (uint64_t)qword_1EBB85ED8);
        uint64_t v84 = v119;
        sub_1C2635178((uint64_t)v62, v119, type metadata accessor for HealthAppPluginSource.KnownBundle);
        uint64_t v85 = (uint64_t)v62;
        v86 = v120;
        sub_1C2635178(v85, (uint64_t)v120, type metadata accessor for HealthAppPluginSource.KnownBundle);
        v87 = sub_1C277B100();
        os_log_type_t v88 = sub_1C277BD20();
        int v89 = v88;
        if (os_log_type_enabled(v87, v88))
        {
          uint64_t v90 = swift_slowAlloc();
          uint64_t v127 = swift_slowAlloc();
          uint64_t v140 = v127;
          *(_DWORD *)uint64_t v90 = 136315650;
          LODWORD(v122) = v89;
          uint64_t v138 = v118;
          swift_getMetatypeMetadata();
          uint64_t v91 = sub_1C277B860();
          os_log_t v121 = v87;
          uint64_t v138 = sub_1C263FDFC(v91, v92, &v140);
          sub_1C277C0D0();
          swift_bridgeObjectRelease();
          *(_WORD *)(v90 + 12) = 2080;
          uint64_t v94 = *(void *)(v84 + 16);
          unint64_t v93 = *(void *)(v84 + 24);
          swift_bridgeObjectRetain();
          uint64_t v138 = sub_1C263FDFC(v94, v93, &v140);
          sub_1C277C0D0();
          swift_bridgeObjectRelease();
          sub_1C2635098(v84, type metadata accessor for HealthAppPluginSource.KnownBundle);
          *(_WORD *)(v90 + 22) = 2080;
          uint64_t v119 = v90 + 24;
          v95 = v130;
          uint64_t v96 = v86[1];
          uint64_t v138 = *v86;
          uint64_t v139 = v96;
          v136(v130, v82, v131);
          swift_bridgeObjectRetain();
          uint64_t v97 = (uint64_t)v86;
          v98 = v124;
          sub_1C277A740();
          v128(v95, v131);
          swift_bridgeObjectRelease();
          sub_1C269E8C0((unint64_t *)&qword_1EA304AD0, MEMORY[0x1E4F276F0]);
          uint64_t v99 = v125;
          uint64_t v100 = sub_1C277C7B0();
          unint64_t v102 = v101;
          v103 = v135;
          v135(v98, v99);
          uint64_t v138 = sub_1C263FDFC(v100, v102, &v140);
          sub_1C277C0D0();
          swift_bridgeObjectRelease();
          sub_1C2635098(v97, type metadata accessor for HealthAppPluginSource.KnownBundle);
          os_log_t v104 = v121;
          _os_log_impl(&dword_1C2601000, v121, (os_log_type_t)v122, "[%s] Known URL for bundle identifier %s appears invalid; cannot load bundle at that location: %s",
            (uint8_t *)v90,
            0x20u);
          uint64_t v105 = v127;
          swift_arrayDestroy();
          MEMORY[0x1C875D230](v105, -1, -1);
          uint64_t v106 = v90;
          uint64_t v107 = v131;
          MEMORY[0x1C875D230](v106, -1, -1);
        }
        else
        {
          sub_1C2635098(v84, type metadata accessor for HealthAppPluginSource.KnownBundle);
          sub_1C2635098((uint64_t)v86, type metadata accessor for HealthAppPluginSource.KnownBundle);

          v95 = v130;
          uint64_t v107 = v131;
          v98 = v124;
          v103 = v135;
        }
        type metadata accessor for HealthAppPluginInfo.LoadError(0);
        sub_1C269E8C0(&qword_1EA304648, (void (*)(uint64_t))type metadata accessor for HealthAppPluginInfo.LoadError);
        v135 = (void (*)(char *, uint64_t))swift_allocError();
        v109 = v108;
        v110 = v123;
        uint64_t v111 = v123[1];
        uint64_t v138 = *v123;
        uint64_t v139 = v111;
        v136(v95, v137, v107);
        swift_bridgeObjectRetain();
        sub_1C277A740();
        v128(v95, v107);
        swift_bridgeObjectRelease();
        uint64_t v112 = sub_1C277A700();
        uint64_t v114 = v113;
        v103(v98, v125);
        uint64_t *v109 = v112;
        v109[1] = v114;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        sub_1C2635098((uint64_t)v110, type metadata accessor for HealthAppPluginSource.KnownBundle);
      }
      return;
    }
    sub_1C263F58C(v43, &qword_1EBB84FA8, type metadata accessor for HealthAppPluginSource.KnownBundle);
    if (v121)
    {
      v49 = v122;
      v50 = v135;
      sub_1C2636774(v122);
      if (v50) {
        return;
      }
      uint64_t v51 = *(void *)(*v49 + 16);
      if (v51)
      {
        uint64_t v52 = (uint64_t *)(*v49 + 40);
        while (1)
        {
          v54 = (void (*)(void, void, void))*(v52 - 1);
          uint64_t v53 = *v52;
          v55 = (void *)v52[1];
          uint64_t v56 = v52[2];
          uint64_t v58 = v52[3];
          uint64_t v57 = v52[4];
          if (v54 == v136 && v53 == v137) {
            break;
          }
          if (sub_1C277C7E0()) {
            goto LABEL_47;
          }
          v52 += 6;
          if (!--v51) {
            goto LABEL_32;
          }
        }
        v54 = v136;
        uint64_t v53 = v137;
LABEL_47:
        v115 = v128;
        *(void *)v128 = v54;
        *((void *)v115 + 1) = v53;
        *((void *)v115 + 2) = v55;
        *((void *)v115 + 3) = v56;
        *((void *)v115 + 4) = v58;
        *((void *)v115 + 5) = v57;
        swift_bridgeObjectRetain();
        id v116 = v55;
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        return;
      }
LABEL_32:
      type metadata accessor for HealthAppPluginInfo.LoadError(0);
      sub_1C269E8C0(&qword_1EA304648, (void (*)(uint64_t))type metadata accessor for HealthAppPluginInfo.LoadError);
      swift_allocError();
      uint64_t v60 = v137;
      void *v61 = v136;
      v61[1] = v60;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      type metadata accessor for HealthAppPluginInfo.LoadError(0);
      sub_1C269E8C0(&qword_1EA304648, (void (*)(uint64_t))type metadata accessor for HealthAppPluginInfo.LoadError);
      swift_allocError();
      void *v81 = v39;
      v81[1] = v40;
      swift_storeEnumTagMultiPayload();
    }
    swift_bridgeObjectRetain();
    swift_willThrow();
    return;
  }
  id v26 = (uint64_t *)(v24 + 40);
  while (1)
  {
    uint64_t v27 = (void (*)(void, void, void))*(v26 - 1);
    uint64_t v28 = *v26;
    unint64_t v29 = (void *)v26[1];
    uint64_t v30 = v26[2];
    uint64_t v32 = v26[3];
    uint64_t v31 = v26[4];
    if (v27 == v136 && v28 == v137) {
      break;
    }
    if (sub_1C277C7E0()) {
      goto LABEL_36;
    }
    v26 += 6;
    if (!--v25) {
      goto LABEL_9;
    }
  }
  uint64_t v27 = v136;
  uint64_t v28 = v137;
LABEL_36:
  v79 = v128;
  *(void *)v128 = v27;
  *((void *)v79 + 1) = v28;
  *((void *)v79 + 2) = v29;
  *((void *)v79 + 3) = v30;
  *((void *)v79 + 4) = v32;
  *((void *)v79 + 5) = v31;
  swift_bridgeObjectRetain();
  id v80 = v29;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
}

uint64_t HealthAppPluginSource.deinit()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t HealthAppPluginSource.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t HealthAppPluginSource.notificationCenterDelegateProvidingPlugins()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for HealthAppPluginSource.KnownBundle(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  int64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v9 = v0[5];
  uint64_t v10 = MEMORY[0x1E4FBC860];
  uint64_t v24 = MEMORY[0x1E4FBC860];
  uint64_t v11 = *(void *)(v9 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v23 = v11;
  if (v11)
  {
    uint64_t v20 = v1;
    unint64_t v13 = 0;
    uint64_t v21 = v2;
    uint64_t v22 = v3;
    while (v13 < *(void *)(v9 + 16))
    {
      unint64_t v14 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      uint64_t v15 = *(void *)(v3 + 72);
      sub_1C2635178(v9 + v14 + v15 * v13, (uint64_t)v8, type metadata accessor for HealthAppPluginSource.KnownBundle);
      if (v8[*(int *)(v2 + 32)] == 1)
      {
        sub_1C2635B20((uint64_t)v8, (uint64_t)v6);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1C264E020(0, *(void *)(v10 + 16) + 1, 1);
        }
        uint64_t v10 = v24;
        unint64_t v17 = *(void *)(v24 + 16);
        unint64_t v16 = *(void *)(v24 + 24);
        if (v17 >= v16 >> 1)
        {
          sub_1C264E020(v16 > 1, v17 + 1, 1);
          uint64_t v10 = v24;
        }
        *(void *)(v10 + 16) = v17 + 1;
        uint64_t result = sub_1C2635B20((uint64_t)v6, v10 + v14 + v17 * v15);
        uint64_t v2 = v21;
        uint64_t v3 = v22;
      }
      else
      {
        uint64_t result = sub_1C2635098((uint64_t)v8, type metadata accessor for HealthAppPluginSource.KnownBundle);
      }
      if (v23 == ++v13)
      {
        uint64_t v10 = v24;
        uint64_t v1 = v20;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    swift_retain();
    uint64_t v18 = sub_1C2615910(v10, v1);
    swift_release();
    swift_release();
    return (uint64_t)v18;
  }
  return result;
}

unint64_t static HealthAppPluginSource.disabledHealthPluginsDefaultsKey.getter()
{
  return 0xD000000000000015;
}

unint64_t static HealthAppPluginSource.allowedHealthPluginsDefaultsKey.getter()
{
  return 0xD000000000000014;
}

void HealthAppPluginSource.conformingPlugins<A>(_:)()
{
  uint64_t v2 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v3 = v2 + 4;
  uint64_t v4 = v2 + 7;
  os_unfair_lock_lock(v2 + 7);
  sub_1C2607FD4(v3, &v6);
  os_unfair_lock_unlock(v4);
  if (v1)
  {
    __break(1u);
  }
  else
  {
    MEMORY[0x1F4188790](v5);
    sub_1C2648924(0, &qword_1EBB80D70);
    sub_1C264EA48(&qword_1EBB82DF8, &qword_1EBB80D70);
    sub_1C277B970();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C269D598@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  swift_unknownObjectRetain();
  int v4 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, v4 ^ 1u, 1, a1);
}

uint64_t type metadata accessor for HealthAppPluginInfo.LoadError(uint64_t a1)
{
  return sub_1C2635628(a1, (uint64_t *)&unk_1EA304650);
}

uint64_t sub_1C269D650()
{
  uint64_t v1 = sub_1C277A750();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C269D6E0()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_1C27687F4(v0);
}

void sub_1C269D718(void *a1@<X0>, void (*a2)(char *, uint64_t)@<X8>)
{
  sub_1C269C4C4(a1, *(void (**)(void, void, void))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(unsigned __int8 *)(v2 + 40), *(void *)(v2 + 48), a2);
}

uint64_t sub_1C269D740@<X0>(uint64_t a1@<X8>)
{
  return sub_1C269D598(*(void *)(v1 + 16), a1);
}

uint64_t dispatch thunk of HealthAppPluginPrincipalClass.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void *assignWithCopy for HealthAppPluginInfo(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[2];
  uint64_t v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t assignWithTake for HealthAppPluginInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_unknownObjectRelease();
  return a1;
}

char *initializeBufferWithCopyOfBuffer for HealthAppPluginInfo.LoadError(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    id v6 = *a2;
    *(void *)a1 = *a2;
    a1 = &v6[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v7 = sub_1C277A750();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        break;
      case 4u:
      case 8u:
        uint64_t v8 = *a2;
        *(void *)a1 = *a2;
        uint64_t v9 = v8;
        break;
      case 6u:
        uint64_t v10 = *a2;
        uint64_t v11 = v10;
        *(void *)a1 = v10;
        break;
      case 7u:
        *(void *)a1 = *a2;
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v12 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v12;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void destroy for HealthAppPluginInfo.LoadError(void **a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 2u:
    case 3u:
    case 5u:
    case 7u:
    case 9u:
      swift_bridgeObjectRelease();
      break;
    case 1u:
      uint64_t v3 = sub_1C277A750();
      uint64_t v4 = *(void (**)(void **, uint64_t))(*(void *)(v3 - 8) + 8);
      v4(a1, v3);
      break;
    case 4u:
    case 8u:
      uint64_t v2 = *a1;
      goto LABEL_7;
    case 6u:
      uint64_t v2 = *a1;
LABEL_7:

      break;
    default:
      return;
  }
}

void *initializeWithCopy for HealthAppPluginInfo.LoadError(void *a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v4 = sub_1C277A750();
      (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      break;
    case 4u:
    case 8u:
      int v5 = *(void **)a2;
      *a1 = *(void *)a2;
      id v6 = v5;
      break;
    case 6u:
      uint64_t v7 = *(void **)a2;
      id v8 = v7;
      *a1 = v7;
      break;
    case 7u:
      *a1 = *(void *)a2;
      swift_bridgeObjectRetain();
      break;
    default:
      uint64_t v9 = *(void *)(a2 + 8);
      *a1 = *(void *)a2;
      a1[1] = v9;
      swift_bridgeObjectRetain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **assignWithCopy for HealthAppPluginInfo.LoadError(void **a1, void **a2)
{
  if (a1 != a2)
  {
    sub_1C2635098((uint64_t)a1, type metadata accessor for HealthAppPluginInfo.LoadError);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v4 = sub_1C277A750();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        break;
      case 4u:
      case 8u:
        int v5 = *a2;
        *a1 = *a2;
        id v6 = v5;
        break;
      case 6u:
        uint64_t v7 = *a2;
        id v8 = v7;
        *a1 = v7;
        break;
      case 7u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        break;
      default:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for HealthAppPluginInfo.LoadError(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1C277A750();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for HealthAppPluginInfo.LoadError(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C2635098((uint64_t)a1, type metadata accessor for HealthAppPluginInfo.LoadError);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1C277A750();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for HealthAppPluginInfo.LoadError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for HealthAppPluginInfo.LoadError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_1C269E1B0()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C269E1C0()
{
  uint64_t result = sub_1C277A750();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t method lookup function for HealthAppPluginSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HealthAppPluginSource);
}

uint64_t dispatch thunk of HealthAppPluginSource.__allocating_init(bundleProvider:knownBundles:disabledBundleIdentifiers:allowedBundleIdentifiers:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

void *initializeBufferWithCopyOfBuffer for HealthAppPluginSource.KnownBundle(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_1C277A750();
    unint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = a3[8];
    *((unsigned char *)v4 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    *((unsigned char *)v4 + v14) = *((unsigned char *)a2 + v14);
  }
  return v4;
}

void *assignWithCopy for HealthAppPluginSource.KnownBundle(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C277A750();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

_OWORD *initializeWithTake for HealthAppPluginSource.KnownBundle(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C277A750();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + v11) = *((unsigned char *)a2 + v11);
  return a1;
}

void *assignWithTake for HealthAppPluginSource.KnownBundle(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1C277A750();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
  return a1;
}

uint64_t sub_1C269E600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C277A750();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C269E6B0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C277A750();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for HealthAppPluginSource.State(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for HealthAppPluginSource.State()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for HealthAppPluginSource.State(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for HealthAppPluginSource.State(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for HealthAppPluginSource.State(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 9)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HealthAppPluginSource.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 9) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HealthAppPluginSource.State()
{
  return &type metadata for HealthAppPluginSource.State;
}

uint64_t sub_1C269E8C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C269E90C(uint64_t a1, uint64_t a2)
{
  return sub_1C269EA98(a1, a2, (void (*)(void))sub_1C269ECEC);
}

uint64_t static RelevanceFeatureTag.name.getter()
{
  return sub_1C277B860();
}

uint64_t dispatch thunk of static RelevanceFeatureTag.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1C269E968(uint64_t a1, uint64_t a2)
{
  return sub_1C269EA98(a1, a2, (void (*)(void))sub_1C269ECB0);
}

uint64_t dispatch thunk of RelevanceFeatureTag.value.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of RelevanceFeatureTag.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of RelevanceFeatureTagEncodable.makeEncodedValue()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1C269E9C0(uint64_t a1, uint64_t a2)
{
  return sub_1C269EA98(a1, a2, (void (*)(void))sub_1C269EC74);
}

uint64_t sub_1C269E9D8(uint64_t a1, uint64_t a2)
{
  return sub_1C269EA98(a1, a2, (void (*)(void))sub_1C269EC38);
}

uint64_t sub_1C269E9F0(uint64_t a1, uint64_t a2)
{
  return sub_1C269EA98(a1, a2, (void (*)(void))sub_1C269EBFC);
}

uint64_t sub_1C269EA08(uint64_t a1, uint64_t a2)
{
  return sub_1C269EA98(a1, a2, (void (*)(void))sub_1C269EBC0);
}

uint64_t sub_1C269EA20(uint64_t a1, uint64_t a2)
{
  return sub_1C269EA98(a1, a2, (void (*)(void))sub_1C269EB84);
}

uint64_t sub_1C269EA38(uint64_t a1, uint64_t a2)
{
  return sub_1C269EA98(a1, a2, (void (*)(void))sub_1C2627398);
}

uint64_t sub_1C269EA50(uint64_t a1, uint64_t a2)
{
  return sub_1C269EA98(a1, a2, (void (*)(void))sub_1C269EB48);
}

uint64_t sub_1C269EA68(uint64_t a1, uint64_t a2)
{
  return sub_1C269EA98(a1, a2, (void (*)(void))sub_1C269EB0C);
}

uint64_t sub_1C269EA80(uint64_t a1, uint64_t a2)
{
  return sub_1C269EA98(a1, a2, (void (*)(void))sub_1C269EAD0);
}

uint64_t sub_1C269EA98(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  return sub_1C277B860();
}

unint64_t sub_1C269EAD0()
{
  unint64_t result = qword_1EBB827E0;
  if (!qword_1EBB827E0)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB827E0);
  }
  return result;
}

unint64_t sub_1C269EB0C()
{
  unint64_t result = qword_1EA304660;
  if (!qword_1EA304660)
  {
    type metadata accessor for DateRangeFeatureTag();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA304660);
  }
  return result;
}

unint64_t sub_1C269EB48()
{
  unint64_t result = qword_1EBB85E48;
  if (!qword_1EBB85E48)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB85E48);
  }
  return result;
}

unint64_t sub_1C269EB84()
{
  unint64_t result = qword_1EA304668;
  if (!qword_1EA304668)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA304668);
  }
  return result;
}

unint64_t sub_1C269EBC0()
{
  unint64_t result = qword_1EA304670;
  if (!qword_1EA304670)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA304670);
  }
  return result;
}

unint64_t sub_1C269EBFC()
{
  unint64_t result = qword_1EA304678;
  if (!qword_1EA304678)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA304678);
  }
  return result;
}

unint64_t sub_1C269EC38()
{
  unint64_t result = qword_1EBB85E68;
  if (!qword_1EBB85E68)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB85E68);
  }
  return result;
}

unint64_t sub_1C269EC74()
{
  unint64_t result = qword_1EBB85E60;
  if (!qword_1EBB85E60)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB85E60);
  }
  return result;
}

unint64_t sub_1C269ECB0()
{
  unint64_t result = qword_1EBB85E50;
  if (!qword_1EBB85E50)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB85E50);
  }
  return result;
}

unint64_t sub_1C269ECEC()
{
  unint64_t result = qword_1EBB85E58;
  if (!qword_1EBB85E58)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB85E58);
  }
  return result;
}

id static Keyword.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  unint64_t v1 = (void *)sub_1C277B820();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

id sub_1C269ED90@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_sortOrder);
  *a2 = result;
  return result;
}

id sub_1C269EDC4(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSortOrder_, *a1);
}

char *keypath_get_selector_identifier()
{
  return sel_identifier;
}

void sub_1C269EDE4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_identifier);
  uint64_t v4 = sub_1C277B850();
  uint64_t v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

void sub_1C269EE40(uint64_t a1, void **a2)
{
  id v2 = *a2;
  id v3 = (id)sub_1C277B820();
  objc_msgSend(v2, sel_setIdentifier_, v3);
}

char *keypath_get_selector_feedItems()
{
  return sel_feedItems;
}

void sub_1C269EEB0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_feedItems);
  type metadata accessor for FeedItem();
  sub_1C265D848();
  uint64_t v4 = sub_1C277BBC0();

  *a2 = v4;
}

void sub_1C269EF24(uint64_t a1, void **a2)
{
  id v2 = *a2;
  type metadata accessor for FeedItem();
  sub_1C265D848();
  id v3 = (id)sub_1C277BBB0();
  objc_msgSend(v2, sel_setFeedItems_, v3);
}

uint64_t UserDefault.key.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

id UserDefault.userDefaults.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t sub_1C269EFE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for UserDefault();
  return UserDefault.wrappedValue.getter(v2, a1);
}

uint64_t sub_1C269F01C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UserDefault();
  return sub_1C2619A18(a1, v2);
}

uint64_t sub_1C269F05C()
{
  return 8;
}

void *sub_1C269F068(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t *sub_1C269F074(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || v7 + ((v6 + 24) & (unint64_t)~v6) + 1 > 0x18)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v11 = a2[1];
    *a1 = *a2;
    a1[1] = v11;
    uint64_t v12 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v13 = (void **)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v14 = *v13;
    *uint64_t v12 = *v13;
    uint64_t v15 = ((unint64_t)v12 + v6 + 8) & ~v6;
    uint64_t v16 = ((unint64_t)v13 + v6 + 8) & ~v6;
    unint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    id v18 = v14;
    v17(v15, v16, v4);
    *(unsigned char *)(v15 + v7) = *(unsigned char *)(v16 + v7);
  }
  return a1;
}

void *sub_1C269F1B0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void **)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void **)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = *v7;
  uint64_t v9 = *v6;
  *uint64_t v6 = *v7;
  id v10 = v8;

  uint64_t v11 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v12 = v11 + 24;
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = ((unint64_t)v6 + v13 + 8) & ~v13;
  uint64_t v15 = ((unint64_t)v7 + v13 + 8) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v11 + 24))(v14, v15);
  *(unsigned char *)(*(void *)(v12 + 40) + v14) = *(unsigned char *)(*(void *)(v12 + 40) + v15);
  return a1;
}

_OWORD *sub_1C269F288(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v7 = v6 + 32;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)v4 + v8 + 8) & ~v8;
  uint64_t v10 = ((unint64_t)v5 + v8 + 8) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(v9, v10);
  *(unsigned char *)(*(void *)(v7 + 32) + v9) = *(unsigned char *)(*(void *)(v7 + 32) + v10);
  return a1;
}

void *sub_1C269F32C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (void **)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void **)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = *v7;
  *uint64_t v7 = *v8;

  uint64_t v10 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v11 = v10 + 40;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = ((unint64_t)v7 + v12 + 8) & ~v12;
  uint64_t v14 = ((unint64_t)v8 + v12 + 8) & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v10 + 40))(v13, v14);
  *(unsigned char *)(*(void *)(v11 + 24) + v13) = *(unsigned char *)(*(void *)(v11 + 24) + v14);
  return a1;
}

uint64_t sub_1C269F3F0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + ((v6 + 24) & ~v6) + 1;
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8)
      }
                                                                      + v6
                                                                      + 8) & ~v6);
      unint64_t v15 = *((void *)a1 + 1);
      if (v15 >= 0xFFFFFFFF) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_1C269F59C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 24) & ~v9) + 1;
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 24) & ~v9) != -1)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x1C269F808);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v18 = (((unint64_t)(a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v9 + 8) & ~v9;
          uint64_t v19 = *(void (**)(unint64_t))(v6 + 56);
          v19(v18);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 1) = a2 - 1;
        }
      }
      return;
  }
}

id Profile.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id Profile.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for Profile();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id Profile.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Profile();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t static HKSharedSummaryTransaction.dateCommittedMetadataKey.getter()
{
  return 0xD000000000000032;
}

unint64_t static HKSharedSummaryTransaction.bundleVersionMetadataKey.getter()
{
  return 0xD000000000000032;
}

unint64_t static HKSharedSummaryTransaction.buildVersionMetadataKey.getter()
{
  return 0xD000000000000031;
}

unint64_t static HKSharedSummaryTransaction.hasPairedDeviceDataMetadataKey.getter()
{
  return 0xD000000000000038;
}

unint64_t static HKSharedSummaryTransaction.healthappdManagedTransactionVersionMetadataKey.getter()
{
  return 0xD000000000000048;
}

uint64_t sub_1C269F9AC()
{
  if (qword_1EBB848B8 != -1) {
    swift_once();
  }
  xmmword_1EBB842B8 = xmmword_1EBB848A0;

  return swift_bridgeObjectRetain();
}

uint64_t static HKSharedSummaryTransaction.currentHealthappdManagedTransactionVersionMetadata.getter()
{
  if (qword_1EBB842C8 != -1) {
    swift_once();
  }
  uint64_t v0 = xmmword_1EBB842B8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t HKSharedSummaryTransaction.dateCommitted.getter@<X0>(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_metadata);
  uint64_t v4 = sub_1C277B760();

  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_1C2629588(0xD000000000000032, 0x80000001C278B630), (v6 & 1) != 0))
  {
    sub_1C263FED0(*(void *)(v4 + 56) + 32 * v5, (uint64_t)&v11);
    swift_bridgeObjectRelease();
    if (*((void *)&v12 + 1))
    {
      uint64_t v7 = sub_1C277A840();
      int v8 = swift_dynamicCast();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a1, v8 ^ 1u, 1, v7);
    }
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
    swift_bridgeObjectRelease();
  }
  sub_1C262F2E4((uint64_t)&v11);
  uint64_t v10 = sub_1C277A840();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a1, 1, 1, v10);
}

BOOL HKSharedSummaryTransaction.isCommitted.getter()
{
  uint64_t v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C263D41C(0, (unint64_t *)&unk_1EBB84888, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  id v3 = (char *)&v7 - v2;
  HKSharedSummaryTransaction.dateCommitted.getter((uint64_t)&v7 - v2);
  uint64_t v4 = sub_1C277A840();
  BOOL v5 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4) != 1;
  sub_1C263C860((uint64_t)v3, (unint64_t *)&unk_1EBB84888, v0);
  return v5;
}

double static HKSharedSummaryTransaction.maximumPreferredTransactionAgeInDays.getter()
{
  return 3.0;
}

uint64_t sub_1C269FCF0()
{
  id v1 = objc_msgSend(v0, sel_metadata);
  uint64_t v2 = sub_1C277B760();

  if (!*(void *)(v2 + 16) || (unint64_t v3 = sub_1C2629588(0xD000000000000038, 0x80000001C278B6F0), (v4 & 1) == 0))
  {
    long long v7 = 0u;
    long long v8 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_1C263FED0(*(void *)(v2 + 56) + 32 * v3, (uint64_t)&v7);
  swift_bridgeObjectRelease();
  if (!*((void *)&v8 + 1))
  {
LABEL_8:
    sub_1C262F2E4((uint64_t)&v7);
    return 2;
  }
  if (swift_dynamicCast()) {
    return v6;
  }
  else {
    return 2;
  }
}

uint64_t sub_1C269FDF4()
{
  return sub_1C269FE10(0xD000000000000048, 0x80000001C278B730);
}

uint64_t sub_1C269FE10(uint64_t a1, uint64_t a2)
{
  id v5 = objc_msgSend(v2, sel_metadata);
  uint64_t v6 = sub_1C277B760();

  if (!*(void *)(v6 + 16) || (unint64_t v7 = sub_1C2629588(a1, a2), (v8 & 1) == 0))
  {
    long long v11 = 0u;
    long long v12 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_1C263FED0(*(void *)(v6 + 56) + 32 * v7, (uint64_t)&v11);
  swift_bridgeObjectRelease();
  if (!*((void *)&v12 + 1))
  {
LABEL_9:
    sub_1C262F2E4((uint64_t)&v11);
    return 0;
  }
  if (swift_dynamicCast()) {
    return v10;
  }
  else {
    return 0;
  }
}

uint64_t HKSharedSummaryTransaction.isUsableHealthappdManagedTransaction.getter()
{
  uint64_t v1 = sub_1C269FE10(0xD000000000000048, 0x80000001C278B730);
  uint64_t v2 = v0;
  if (qword_1EBB842C8 != -1)
  {
    swift_once();
    if (v2) {
      goto LABEL_3;
    }
LABEL_11:
    char v4 = 0;
    return v4 & 1;
  }
  if (!v0) {
    goto LABEL_11;
  }
LABEL_3:
  if (v1 == (void)xmmword_1EBB842B8 && v2 == *((void *)&xmmword_1EBB842B8 + 1)) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1C277C7E0();
  }
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t static HKSharedSummaryTransaction.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v4 = sub_1C277A8A0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  char v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v15 - v9;
  id v11 = objc_msgSend(a1, sel_UUID);
  sub_1C277A880();

  id v12 = objc_msgSend(a2, sel_UUID);
  sub_1C277A880();

  LOBYTE(v12) = sub_1C277A870();
  int v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v8, v4);
  v13(v10, v4);
  return v12 & 1;
}

uint64_t sub_1C26A013C(void **a1, void **a2)
{
  return _sSo26HKSharedSummaryTransactionC14HealthPlatformE1loiySbAB_ABtFZ_0(*a1, *a2);
}

id Sequence<>.selectPreferredTransaction(calendar:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](a1);
  uint64_t v9 = &v30[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16);
  v10(&v30[-v11], v3, a2);
  uint64_t v31 = a1;
  unint64_t v12 = sub_1C277B990();
  unint64_t v13 = v12;
  if (!(v12 >> 62))
  {
    if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1C277C5A0();
  swift_bridgeObjectRelease();
  if (!v29)
  {
LABEL_3:
    swift_bridgeObjectRelease();
    v10(v9, v3, a2);
    sub_1C26A10D0();
    unint64_t v13 = sub_1C277BB30();
  }
LABEL_4:
  id v14 = sub_1C26A09BC(v13);
  swift_bridgeObjectRelease();
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1C277B130();
  __swift_project_value_buffer(v15, (uint64_t)qword_1EBB86280);
  id v16 = v14;
  int v17 = sub_1C277B100();
  os_log_type_t v18 = sub_1C277BD40();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v32 = (uint64_t)v14;
    v33[0] = v20;
    *(_DWORD *)uint64_t v19 = 136315394;
    sub_1C263D41C(0, &qword_1EBB82FE8, (uint64_t (*)(uint64_t))sub_1C26A10D0, MEMORY[0x1E4FBB718]);
    id v21 = v16;
    uint64_t v22 = sub_1C277B870();
    uint64_t v32 = sub_1C263FDFC(v22, v23, v33);
    sub_1C277C0D0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    if (v14)
    {
      id v24 = objc_msgSend(v21, sel_metadata);
      uint64_t v25 = sub_1C277B760();
    }
    else
    {
      uint64_t v25 = 0;
    }
    uint64_t v32 = v25;
    sub_1C263D41C(0, &qword_1EBB82DC0, (uint64_t (*)(uint64_t))sub_1C26A1110, MEMORY[0x1E4FBB718]);
    uint64_t v26 = sub_1C277B860();
    uint64_t v32 = sub_1C263FDFC(v26, v27, v33);
    sub_1C277C0D0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v17, v18, "[Transaction] Selecting transaction %s. Transaction metadata: %s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v20, -1, -1);
    MEMORY[0x1C875D230](v19, -1, -1);
  }
  else
  {
  }
  return v14;
}

BOOL sub_1C26A05A4(uint64_t *a1, uint64_t a2)
{
  uint64_t v30 = a2;
  sub_1C263D41C(0, (unint64_t *)&unk_1EBB84888, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v25 - v4;
  uint64_t v6 = sub_1C277A840();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v28 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v26 = (char *)&v25 - v10;
  uint64_t v29 = sub_1C277A5D0();
  uint64_t v27 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  unint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = *a1;
  sub_1C263D41C(0, &qword_1EBB83120, MEMORY[0x1E4F27C88], MEMORY[0x1E4FBBE00]);
  uint64_t v13 = sub_1C277A9A0();
  uint64_t v14 = *(void *)(v13 - 8);
  unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C277E480;
  (*(void (**)(unint64_t, void, uint64_t))(v14 + 104))(v16 + v15, *MEMORY[0x1E4F27C10], v13);
  sub_1C269A58C(v16);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  HKSharedSummaryTransaction.dateCommitted.getter((uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    int v17 = v26;
    sub_1C277A7C0();
    sub_1C263C860((uint64_t)v5, (unint64_t *)&unk_1EBB84888, MEMORY[0x1E4F27928]);
  }
  else
  {
    int v17 = v26;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v26, v5, v6);
  }
  os_log_type_t v18 = v28;
  sub_1C277A830();
  sub_1C277A970();
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v7 + 8);
  v19(v18, v6);
  v19(v17, v6);
  uint64_t v20 = sub_1C277A5C0();
  char v22 = v21;
  (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v29);
  return (v22 & 1) == 0 && v20 < 4;
}

id sub_1C26A09BC(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = (id)swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  id result = (id)sub_1C277C5A0();
  uint64_t v2 = (uint64_t)result;
  if (!result) {
    goto LABEL_23;
  }
LABEL_3:
  unint64_t v4 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    id result = (id)MEMORY[0x1C875C230](0, a1);
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    id result = *(id *)(a1 + 32);
  }
  uint64_t v5 = result;
  unint64_t v6 = v2 - 1;
  if (v2 == 1)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return v5;
  }
  if (v2 < 2) {
    goto LABEL_27;
  }
  if (v4 || (unint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10), v7 >= 2) && v6 < v7)
  {
    uint64_t v8 = 0;
    do
    {
      if (v4) {
        id v9 = (id)MEMORY[0x1C875C230](v8 + 1, a1);
      }
      else {
        id v9 = *(id *)(a1 + 8 * v8 + 40);
      }
      id v10 = v9;
      char v11 = _sSo26HKSharedSummaryTransactionC14HealthPlatformE1loiySbAB_ABtFZ_0(v5, v9);
      if (v11) {
        unint64_t v12 = v5;
      }
      else {
        unint64_t v12 = v10;
      }
      if (v11) {
        uint64_t v5 = v10;
      }

      ++v8;
    }
    while (v6 != v8);
    goto LABEL_7;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t _sSo26HKSharedSummaryTransactionC14HealthPlatformE1loiySbAB_ABtFZ_0(void *a1, void *a2)
{
  v55 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C263D41C(0, (unint64_t *)&unk_1EBB84888, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v53 = (uint64_t)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v52 - v7;
  uint64_t v9 = sub_1C277A840();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  unint64_t v15 = (char *)&v52 - v14;
  sub_1C263D41C(0, &qword_1EBB806C8, MEMORY[0x1E4F27A78], v3);
  MEMORY[0x1F4188790](v16 - 8);
  os_log_type_t v18 = (char *)&v52 - v17;
  id v54 = a1;
  uint64_t v19 = sub_1C269FE10(0xD000000000000032, 0x80000001C278B670);
  if (v20)
  {
    uint64_t v21 = v19;
    uint64_t v22 = v20;
    uint64_t v23 = sub_1C269FE10(0xD000000000000032, 0x80000001C278B670);
    if (v24)
    {
      uint64_t v25 = v23;
      uint64_t v26 = v24;
      if ((v21 != v23 || v22 != v24) && (sub_1C277C7E0() & 1) == 0)
      {
        uint64_t v58 = v21;
        uint64_t v59 = v22;
        uint64_t v56 = v25;
        uint64_t v57 = v26;
        uint64_t v49 = sub_1C277A960();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v18, 1, 1, v49);
        sub_1C26366A8();
        uint64_t v50 = sub_1C277C100();
        sub_1C263C860((uint64_t)v18, &qword_1EBB806C8, MEMORY[0x1E4F27A78]);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v31 = v50 == -1;
        return v31 & 1;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  char v27 = sub_1C269FCF0();
  uint64_t v28 = v55;
  if (v27 == 2
    || (BOOL v29 = v27 == 0, v30 = sub_1C269FCF0(), v30 == 2)
    || (char v31 = v30, ((v29 ^ v30) & 1) != 0))
  {
    HKSharedSummaryTransaction.dateCommitted.getter((uint64_t)v8);
    uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    if (v32(v8, 1, v9) == 1)
    {
      sub_1C277A7C0();
      sub_1C263C860((uint64_t)v8, (unint64_t *)&unk_1EBB84888, MEMORY[0x1E4F27928]);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
    }
    sub_1C277A7B0();
    double v34 = v33;
    uint64_t v35 = *(void (**)(char *, uint64_t))(v10 + 8);
    v35(v15, v9);
    double v36 = round(v34 / 259200.0);
    uint64_t v37 = v53;
    HKSharedSummaryTransaction.dateCommitted.getter(v53);
    if (v32((char *)v37, 1, v9) == 1)
    {
      sub_1C277A7C0();
      sub_1C263C860(v37, (unint64_t *)&unk_1EBB84888, MEMORY[0x1E4F27928]);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v13, v37, v9);
    }
    sub_1C277A7B0();
    double v39 = v38;
    v35(v13, v9);
    double v40 = round(v39 / 259200.0);
    if (v36 == v40)
    {
      id v41 = objc_msgSend(v54, sel_sourceDeviceIdentifier);
      uint64_t v42 = sub_1C277B850();
      uint64_t v44 = v43;

      id v45 = objc_msgSend(v28, sel_sourceDeviceIdentifier);
      uint64_t v46 = sub_1C277B850();
      uint64_t v48 = v47;

      if (v42 == v46 && v44 == v48)
      {
        swift_bridgeObjectRelease_n();
        char v31 = 0;
      }
      else
      {
        char v31 = sub_1C277C7E0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      char v31 = v36 < v40;
    }
  }
  return v31 & 1;
}

BOOL sub_1C26A10B0(uint64_t *a1)
{
  return sub_1C26A05A4(a1, *(void *)(v1 + 16));
}

unint64_t sub_1C26A10D0()
{
  unint64_t result = qword_1EBB82FE0;
  if (!qword_1EBB82FE0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB82FE0);
  }
  return result;
}

void sub_1C26A1110()
{
  if (!qword_1EBB82DB8)
  {
    unint64_t v0 = sub_1C277B7A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB82DB8);
    }
  }
}

unint64_t sub_1C26A1180()
{
  unint64_t result = qword_1EA304680;
  if (!qword_1EA304680)
  {
    sub_1C26A10D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304680);
  }
  return result;
}

uint64_t sub_1C26A11D8(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  sub_1C264872C(0, v2, 0);
  uint64_t v3 = v12;
  if (v2)
  {
    for (uint64_t i = a1 + 32; ; i += 32)
    {
      sub_1C263FED0(i, (uint64_t)v11);
      if (!swift_dynamicCast()) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C264872C(0, *(void *)(v3 + 16) + 1, 1);
        uint64_t v3 = v12;
      }
      unint64_t v6 = *(void *)(v3 + 16);
      unint64_t v5 = *(void *)(v3 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1C264872C(v5 > 1, v6 + 1, 1);
        uint64_t v3 = v12;
      }
      *(void *)(v3 + 16) = v6 + 1;
      uint64_t v7 = v3 + 16 * v6;
      *(void *)(v7 + 32) = v9;
      *(void *)(v7 + 40) = v10;
      if (!--v2) {
        return v3;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

uint64_t sub_1C26A1320(unint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  sub_1C277C3C0();
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        MEMORY[0x1C875C230](i, v1);
        uint64_t v4 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        self;
        if (!swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_1C277C390();
        sub_1C277C3D0();
        sub_1C277C3E0();
        sub_1C277C3A0();
        if (v4 == v2) {
          return v9;
        }
      }
      __break(1u);
    }
    else
    {
      for (uint64_t j = 0; ; ++j)
      {
        uint64_t v6 = j + 1;
        if (__OFADD__(j, 1)) {
          break;
        }
        self;
        uint64_t v7 = swift_dynamicCastObjCClass();
        if (!v7)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v1 = v7;
        swift_unknownObjectRetain();
        sub_1C277C390();
        sub_1C277C3D0();
        sub_1C277C3E0();
        sub_1C277C3A0();
        if (v6 == v2) {
          return v9;
        }
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_1C277C5A0();
    swift_bridgeObjectRelease();
    sub_1C277C3C0();
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C277C5A0();
    swift_bridgeObjectRelease();
  }
  return v9;
}

id sub_1C26A150C()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 24);
  uint64_t v2 = (void **)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1C26A1870(v2, &v7);
  os_unfair_lock_unlock(v3);
  id v4 = v7;
  id v5 = objc_msgSend(v7, sel_viewContext);

  return v5;
}

uint64_t sub_1C26A15B8()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (void **)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1C26A188C(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

id sub_1C26A1640@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  if (*a1)
  {
    id v4 = *a1;
  }
  else
  {
    uint64_t v6 = (void *)sub_1C26A1788();
    id v7 = objc_msgSend(v6, sel_newBackgroundContext);

    objc_msgSend(v7, sel_setAutomaticallyMergesChangesFromParent_, 1);
    id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C130]), sel_initWithMergeType_, 1);
    objc_msgSend(v7, sel_setMergePolicy_, v8);

    *a1 = v7;
    id v4 = v7;
    uint64_t v3 = 0;
  }
  *a2 = v4;
  return v3;
}

void sub_1C26A1710(id *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)a2 + 24);
  uint64_t v3 = (id *)(v2 + 16);
  id v4 = (os_unfair_lock_s *)(v2 + 24);
  id v5 = *a1;
  os_unfair_lock_lock(v4);
  sub_1C26A2C4C(v3);
  os_unfair_lock_unlock(v4);
}

uint64_t sub_1C26A1788()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 24);
  uint64_t v2 = (void **)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1C26A2C68(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

id sub_1C26A1810@<X0>(void **a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  id v4 = *a1;
  if (*a1)
  {
    id v5 = *a1;
  }
  else
  {
    id v7 = sub_1C26A2790(*(void **)(a2 + 32));
    *a1 = v7;
    id v5 = v7;
    id v4 = 0;
  }
  *a3 = v5;
  return v4;
}

id sub_1C26A1870@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  return sub_1C26A1810(a1, *(void *)(v2 + 16), a2);
}

id sub_1C26A188C@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  return sub_1C26A1640(a1, a2);
}

void sub_1C26A18A8(void *a1)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 24);
  id v4 = (id *)&v3[4];
  id v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_1C26A190C(v4);
  os_unfair_lock_unlock(v5);
}

id sub_1C26A190C(id *a1)
{
  uint64_t v3 = *(void **)(v1 + 16);

  *a1 = v3;
  return v3;
}

void (*sub_1C26A1950(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 24);
  a1[1] = v3;
  id v4 = (void **)&v3[4];
  id v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_1C26A2C68(v4, &v7);
  a1[2] = 0;
  os_unfair_lock_unlock(v5);
  *a1 = v7;
  return sub_1C26A1A04;
}

void sub_1C26A1A04(uint64_t a1, char a2)
{
  id v3 = *(id *)a1;
  uint64_t v2 = *(os_unfair_lock_s **)(a1 + 8);
  id v4 = v2 + 6;
  id v5 = (id *)&v2[4];
  if (a2)
  {
    id v3 = v3;
    os_unfair_lock_lock(v4);
    sub_1C26A2C4C(v5);
    os_unfair_lock_unlock(v4);
  }
  else
  {
    os_unfair_lock_lock(v2 + 6);
    sub_1C26A2C4C(v5);
    os_unfair_lock_unlock(v4);
  }
}

id MemoryHealthExperienceStore.persistentStoreDescription.getter()
{
  return *(id *)(v0 + 32);
}

id sub_1C26A1AB4()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 24);
  uint64_t v2 = (void **)&v1[4];
  id v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1C26A2C68(v2, &v7);
  os_unfair_lock_unlock(v3);
  id v4 = v7;
  id v5 = objc_msgSend(v7, sel_persistentStoreCoordinator);

  return v5;
}

uint64_t sub_1C26A1B60()
{
  uint64_t v0 = sub_1C277A8A0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = 0;
  unint64_t v6 = 0xE000000000000000;
  sub_1C277C2D0();
  swift_bridgeObjectRelease();
  uint64_t v5 = 0x6C756E2F7665642FLL;
  unint64_t v6 = 0xEA00000000002F6CLL;
  sub_1C277A890();
  sub_1C277A850();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  sub_1C277B8D0();
  sub_1C277A680();
  return swift_bridgeObjectRelease();
}

uint64_t MemoryHealthExperienceStore.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  MemoryHealthExperienceStore.init()();
  return v0;
}

void *MemoryHealthExperienceStore.init()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C277A750();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C26A1E88(0, &qword_1EA304690, (unint64_t *)&unk_1EA304698, &qword_1EBB85190);
  uint64_t v6 = swift_allocObject();
  *(_DWORD *)(v6 + 24) = 0;
  *(void *)(v6 + 16) = 0;
  v1[2] = v6;
  sub_1C26A1E88(0, &qword_1EA3046A8, &qword_1EA3046B0, &qword_1EA3046B8);
  uint64_t v7 = swift_allocObject();
  *(_DWORD *)(v7 + 24) = 0;
  *(void *)(v7 + 16) = 0;
  v1[3] = v7;
  sub_1C26A1B60();
  id v8 = objc_allocWithZone(MEMORY[0x1E4F1C190]);
  uint64_t v9 = (void *)sub_1C277A6A0();
  id v10 = objc_msgSend(v8, sel_initWithURL_, v9);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v1[4] = v10;
  return v1;
}

void sub_1C26A1E88(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  if (!*a2)
  {
    sub_1C26A1EFC(255, a3, a4);
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v5 = sub_1C277C370();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C26A1EFC(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C2644ED8(255, a3);
    unint64_t v4 = sub_1C277C0B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C26A1F54()
{
  id v2 = sub_1C26A2790(*(void **)(v0 + 32));
  uint64_t v3 = *(os_unfair_lock_s **)(v0 + 24);
  unint64_t v4 = (id *)&v3[4];
  uint64_t v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_1C26A2C4C(v4);
  os_unfair_lock_unlock(v5);
  if (v1) {
    __break(1u);
  }
  else {
}
  }

void sub_1C26A1FE4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v2 = (void *)sub_1C277A610();
    sub_1C277C2D0();
    swift_bridgeObjectRelease();
    id v3 = objc_msgSend(v2, sel_description);
    sub_1C277B850();

    sub_1C277B8D0();
    swift_bridgeObjectRelease();
    sub_1C277B8D0();
    id v4 = objc_msgSend(v2, sel_userInfo);
    sub_1C277B760();

    sub_1C277B770();
    sub_1C277B8D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C277C560();
    __break(1u);
  }
}

uint64_t sub_1C26A2158()
{
  uint64_t v1 = v0;
  aBlock[0] = type metadata accessor for FeedItem();
  sub_1C261C7B4();
  sub_1C277B860();
  id v2 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v3 = (void *)sub_1C277B820();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_initWithEntityName_, v3);

  objc_msgSend(v4, sel_setIncludesPropertyValues_, 0);
  uint64_t v5 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v6 = (void **)&v5[4];
  uint64_t v7 = v5 + 6;
  os_unfair_lock_lock(v5 + 6);
  sub_1C26A2C80(v6, aBlock);
  os_unfair_lock_unlock(v7);
  id v8 = (void *)aBlock[0];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v1;
  *(void *)(v9 + 24) = v4;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1C26A2A28;
  *(void *)(v10 + 24) = v9;
  aBlock[4] = sub_1C261AECC;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C262BAF0;
  aBlock[3] = &block_descriptor_5;
  uint64_t v11 = _Block_copy(aBlock);
  swift_retain();
  id v12 = v4;
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_performBlockAndWait_, v11);

  _Block_release(v11);
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v12) {
    __break(1u);
  }
  return result;
}

id sub_1C26A23A8()
{
  v15[2] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v0 = (void *)sub_1C26A15B8();
  sub_1C26A2BF4();
  unint64_t v1 = sub_1C277C000();

  uint64_t v2 = sub_1C26A1320(v1);
  swift_bridgeObjectRelease();
  if (v2) {
    unint64_t v3 = v2;
  }
  else {
    unint64_t v3 = MEMORY[0x1E4FBC860];
  }
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C277C5A0();
    swift_bridgeObjectRelease();
    if (!v4) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      goto LABEL_13;
    }
  }
  if (v4 < 1) {
    __break(1u);
  }
  uint64_t v5 = 0;
  do
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v6 = (id)MEMORY[0x1C875C230](v5, v3);
    }
    else {
      id v6 = *(id *)(v3 + 8 * v5 + 32);
    }
    uint64_t v7 = v6;
    ++v5;
    id v8 = (void *)sub_1C26A15B8();
    objc_msgSend(v8, sel_deleteObject_, v7);
  }
  while (v4 != v5);
LABEL_13:
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)sub_1C26A15B8();
  v15[0] = 0;
  unsigned int v10 = objc_msgSend(v9, sel_save_, v15);

  id v11 = v15[0];
  if (v10)
  {
    return v11;
  }
  else
  {
    id v13 = v15[0];
    uint64_t v14 = (void *)sub_1C277A620();

    swift_willThrow();
    id result = (id)sub_1C277C560();
    __break(1u);
  }
  return result;
}

uint64_t MemoryHealthExperienceStore.deinit()
{
  swift_release();
  swift_release();

  return v0;
}

uint64_t MemoryHealthExperienceStore.__deallocating_deinit()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

id sub_1C26A2660()
{
  return sub_1C26A150C();
}

uint64_t sub_1C26A2684()
{
  return sub_1C26A15B8();
}

uint64_t sub_1C26A26A8()
{
  return sub_1C26A1788();
}

id sub_1C26A26CC()
{
  return sub_1C26A1AB4();
}

id sub_1C26A26F0()
{
  return *(id *)(*(void *)v0 + 32);
}

void sub_1C26A26FC()
{
  uint64_t v2 = *v0;
  id v3 = sub_1C26A2790(*(void **)(v2 + 32));
  uint64_t v4 = *(os_unfair_lock_s **)(v2 + 24);
  uint64_t v5 = (id *)&v4[4];
  id v6 = v4 + 6;
  os_unfair_lock_lock(v4 + 6);
  sub_1C26A2C4C(v5);
  os_unfair_lock_unlock(v6);
  if (v1) {
    __break(1u);
  }
  else {
}
  }

id sub_1C26A2790(void *a1)
{
  if (qword_1EBB848D8 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1EBB8CE18;
  id v3 = objc_allocWithZone(MEMORY[0x1E4F1C150]);
  id v4 = v2;
  uint64_t v5 = (void *)sub_1C277B820();
  id v6 = objc_msgSend(v3, sel_initWithName_managedObjectModel_, v5, v4);

  sub_1C260846C();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C277E590;
  *(void *)(v7 + 32) = a1;
  v15[0] = v7;
  sub_1C277BA60();
  sub_1C2644ED8(0, &qword_1EBB85198);
  id v8 = a1;
  uint64_t v9 = (void *)sub_1C277BA30();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setPersistentStoreDescriptions_, v9, v15[0]);

  v15[4] = sub_1C26A1FE4;
  v15[5] = 0;
  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 1107296256;
  v15[2] = sub_1C26056A4;
  id v15[3] = &block_descriptor_17;
  unsigned int v10 = _Block_copy(v15);
  objc_msgSend(v6, sel_loadPersistentStoresWithCompletionHandler_, v10);
  _Block_release(v10);
  id v11 = objc_msgSend(v6, sel_viewContext);
  objc_msgSend(v11, sel_setAutomaticallyMergesChangesFromParent_, 1);

  id v12 = objc_msgSend(v6, sel_viewContext);
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C130]), sel_initWithMergeType_, 1);
  objc_msgSend(v12, sel_setMergePolicy_, v13);

  return v6;
}

uint64_t sub_1C26A29E8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

id sub_1C26A2A28()
{
  return sub_1C26A23A8();
}

uint64_t sub_1C26A2A30()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C26A2A40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C26A1788();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for MemoryHealthExperienceStore()
{
  return self;
}

uint64_t method lookup function for MemoryHealthExperienceStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MemoryHealthExperienceStore);
}

uint64_t dispatch thunk of MemoryHealthExperienceStore.viewContext.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of MemoryHealthExperienceStore.sharedBackgroundContext.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of MemoryHealthExperienceStore.persistentContainer.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of MemoryHealthExperienceStore.persistentContainer.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of MemoryHealthExperienceStore.persistentContainer.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of MemoryHealthExperienceStore.persistentStoreCoordinator.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of MemoryHealthExperienceStore.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of MemoryHealthExperienceStore.initPersistentContainer()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of MemoryHealthExperienceStore.deleteAllFeedItems()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

unint64_t sub_1C26A2BF4()
{
  unint64_t result = qword_1EA304FA0;
  if (!qword_1EA304FA0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA304FA0);
  }
  return result;
}

id sub_1C26A2C4C(id *a1)
{
  return sub_1C26A190C(a1);
}

id sub_1C26A2C68@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  return sub_1C26A1870(a1, a2);
}

id sub_1C26A2C80@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  return sub_1C26A188C(a1, a2);
}

uint64_t static StorageLocations.feedItemPluginsDirectory.getter()
{
  uint64_t v0 = sub_1C277A640();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C277A750();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static StorageLocations.rootDirectory.getter();
  v9[0] = 0xD000000000000026;
  v9[1] = 0x80000001C278AE90;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F276A8], v0);
  sub_1C26366A8();
  sub_1C277A740();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

id sub_1C26A2E74()
{
  id result = objc_msgSend(self, sel_defaultManager);
  qword_1EBB82768 = (uint64_t)result;
  return result;
}

uint64_t static StorageLocations.mobileLibraryHealthDirectory.getter()
{
  uint64_t v0 = sub_1C277A750();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static StorageLocations.homeMobileDirectory.getter();
  sub_1C277A6B0();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t StorageLocations.deinit()
{
  return v0;
}

uint64_t StorageLocations.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t method lookup function for StorageLocations(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for StorageLocations);
}

uint64_t dispatch thunk of LegacyFeedItemGenerationOperation.context.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of LegacyFeedItemGenerationOperation.init(context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1C26A305C(uint64_t a1)
{
  return sub_1C2614ED8(a1, qword_1EBB82A38);
}

uint64_t static Logger.orchestration.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2635660(&qword_1EBB82A50, (uint64_t)qword_1EBB82A38, a1);
}

uint64_t sub_1C26A30AC(uint64_t a1)
{
  return sub_1C2614ED8(a1, qword_1EA3046C0);
}

uint64_t static Logger.search.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2635660(&qword_1EA303EF8, (uint64_t)qword_1EA3046C0, a1);
}

uint64_t sub_1C26A30EC(uint64_t a1)
{
  return sub_1C2614ED8(a1, qword_1EBB85ED8);
}

uint64_t sub_1C26A3108(uint64_t a1)
{
  return sub_1C2614ED8(a1, qword_1EA3046D8);
}

uint64_t static Logger.focus.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2635660(&qword_1EA303F00, (uint64_t)qword_1EA3046D8, a1);
}

uint64_t sub_1C26A3148(uint64_t a1)
{
  return sub_1C2614ED8(a1, qword_1EBB84480);
}

uint64_t sub_1C26A3174(uint64_t a1)
{
  return sub_1C2614ED8(a1, qword_1EBB83520);
}

uint64_t sub_1C26A3194(uint64_t a1)
{
  return sub_1C2614ED8(a1, qword_1EBB80820);
}

uint64_t static Logger.heart.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2635660(&qword_1EBB80838, (uint64_t)qword_1EBB80820, a1);
}

uint64_t sub_1C26A31D4(uint64_t a1)
{
  return sub_1C2614ED8(a1, qword_1EBB854D8);
}

uint64_t sub_1C26A31FC(uint64_t a1)
{
  return sub_1C2614ED8(a1, qword_1EA3046F0);
}

uint64_t static Logger.camera.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2635660(qword_1EA303F08, (uint64_t)qword_1EA3046F0, a1);
}

uint64_t sub_1C26A323C(uint64_t a1)
{
  return sub_1C2614ED8(a1, qword_1EBB834D0);
}

uint64_t sub_1C26A3264(uint64_t a1)
{
  return sub_1C2614ED8(a1, qword_1EBB80840);
}

uint64_t static Logger.sleep.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2635660(&qword_1EBB806B8, (uint64_t)qword_1EBB80840, a1);
}

HealthPlatform::LogCategory_optional __swiftcall LogCategory.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C277C810();
  result.value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 7;
  switch(v3)
  {
    case 0:
      goto LABEL_9;
    case 1:
      char v5 = 1;
      goto LABEL_9;
    case 2:
      char v5 = 2;
      goto LABEL_9;
    case 3:
      char v5 = 3;
      goto LABEL_9;
    case 4:
      char v5 = 4;
      goto LABEL_9;
    case 5:
      char v5 = 5;
      goto LABEL_9;
    case 6:
      char v5 = 6;
LABEL_9:
      char v6 = v5;
      break;
    case 7:
      break;
    case 8:
      char v6 = 8;
      break;
    case 9:
      char v6 = 9;
      break;
    case 10:
      char v6 = 10;
      break;
    case 11:
      char v6 = 11;
      break;
    case 12:
      char v6 = 12;
      break;
    case 13:
      char v6 = 13;
      break;
    case 14:
      char v6 = 14;
      break;
    case 15:
      char v6 = 15;
      break;
    case 16:
      char v6 = 16;
      break;
    case 17:
      char v6 = 17;
      break;
    case 18:
      char v6 = 18;
      break;
    case 19:
      char v6 = 19;
      break;
    case 20:
      char v6 = 20;
      break;
    case 21:
      char v6 = 21;
      break;
    case 22:
      char v6 = 22;
      break;
    case 23:
      char v6 = 23;
      break;
    case 24:
      char v6 = 24;
      break;
    default:
      char v6 = 25;
      break;
  }
  *uint64_t v2 = v6;
  return result;
}

void *static LogCategory.allCases.getter()
{
  return &unk_1F1DC5150;
}

uint64_t sub_1C26A3460(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C273DEB4(*a1, *a2);
}

uint64_t sub_1C26A346C()
{
  return sub_1C277C910();
}

uint64_t sub_1C26A34D4()
{
  LogCategory.rawValue.getter();
  sub_1C277B8B0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C26A3538()
{
  return sub_1C277C910();
}

HealthPlatform::LogCategory_optional sub_1C26A359C(Swift::String *a1)
{
  return LogCategory.init(rawValue:)(*a1);
}

unint64_t sub_1C26A35A8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = LogCategory.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1C26A35D0(void *a1@<X8>)
{
  *a1 = &unk_1F1DC5150;
}

uint64_t Array<A>.singleLineDescription()()
{
  return sub_1C277B7D0();
}

uint64_t Optional.logDescription.getter(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](a1);
  char v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  id v8 = (char *)&v14 - v7;
  MEMORY[0x1F4188790](v6);
  unsigned int v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v11 + 16))(v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v10, 1, v1) == 1) {
    return 7104878;
  }
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v8, v10, v1);
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v8, v1);
  uint64_t v12 = sub_1C277B860();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v8, v1);
  return v12;
}

unint64_t sub_1C26A386C()
{
  unint64_t result = qword_1EBB85F28;
  if (!qword_1EBB85F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB85F28);
  }
  return result;
}

uint64_t sub_1C26A38C0()
{
  return sub_1C264EA48(&qword_1EA304708, &qword_1EA304710);
}

uint64_t getEnumTagSinglePayload for LogCategory(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE8) {
    goto LABEL_17;
  }
  if (a2 + 24 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 24) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 24;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 24;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 24;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x19;
  int v8 = v6 - 25;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for LogCategory(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 24 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 24) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE7)
  {
    unsigned int v6 = ((a2 - 232) >> 8) + 1;
    *unint64_t result = a2 + 24;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C26A3A60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 24;
        break;
    }
  }
  return result;
}

uint64_t static InputSignalSet.LookupKey.wheelchairUse.getter(uint64_t a1)
{
  return sub_1C26A3B30(a1, &qword_1EBB841D0, (uint64_t)qword_1EBB841B8, (void (*)(void))sub_1C26A3C90);
}

uint64_t static InputSignalSet.LookupKey.dateOfBirth.getter(uint64_t a1)
{
  return sub_1C26A3B30(a1, &qword_1EBB84188, (uint64_t)qword_1EBB84168, (void (*)(void))sub_1C26A3EAC);
}

uint64_t static InputSignalSet.LookupKey.biologicalSex.getter(uint64_t a1)
{
  return sub_1C26A3B30(a1, &qword_1EBB841B0, (uint64_t)qword_1EBB84190, (void (*)(void))sub_1C26A4110);
}

uint64_t sub_1C26A3B30(uint64_t a1, void *a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v7 = sub_1C277AEE0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unsigned int v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a2 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v7, a3);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  a4(0);
  return sub_1C277ACD0();
}

uint64_t sub_1C26A3C6C(uint64_t a1)
{
  return sub_1C26A40B0(a1, qword_1EBB841B8);
}

void sub_1C26A3C90()
{
  if (!qword_1EA304718)
  {
    type metadata accessor for HKWheelchairUse(255);
    sub_1C26A7E40(&qword_1EA304720, type metadata accessor for HKWheelchairUse);
    sub_1C26A7E40(&qword_1EA304728, type metadata accessor for HKWheelchairUse);
    sub_1C26A7E40(&qword_1EA304730, type metadata accessor for HKWheelchairUse);
    unint64_t v0 = type metadata accessor for UserCharacteristicInputSignal();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA304718);
    }
  }
}

uint64_t type metadata accessor for UserCharacteristicInputSignal()
{
  return swift_getGenericMetadata();
}

uint64_t static InputSignalIdentifier.wheelchairUse.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C26A4238(&qword_1EBB841D0, (uint64_t)qword_1EBB841B8, a1);
}

uint64_t static InputSignalIdentifier.wheelchairUse.setter(uint64_t a1)
{
  return sub_1C26A4304(a1, &qword_1EBB841D0, (uint64_t)qword_1EBB841B8);
}

uint64_t (*static InputSignalIdentifier.wheelchairUse.modify())()
{
  if (qword_1EBB841D0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1C277AEE0();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBB841B8);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1C26A3E88(uint64_t a1)
{
  return sub_1C26A40B0(a1, qword_1EBB84168);
}

void sub_1C26A3EAC()
{
  if (!qword_1EA304738)
  {
    sub_1C277A5D0();
    uint64_t v0 = (void (*)(uint64_t))MEMORY[0x1E4F26F90];
    sub_1C26A7E40(&qword_1EA304740, MEMORY[0x1E4F26F90]);
    sub_1C26A7E40(&qword_1EA304748, v0);
    sub_1C26A7E40(&qword_1EA304750, v0);
    unint64_t v1 = type metadata accessor for UserCharacteristicInputSignal();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EA304738);
    }
  }
}

uint64_t static InputSignalIdentifier.dateOfBirth.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C26A4238(&qword_1EBB84188, (uint64_t)qword_1EBB84168, a1);
}

uint64_t static InputSignalIdentifier.dateOfBirth.setter(uint64_t a1)
{
  return sub_1C26A4304(a1, &qword_1EBB84188, (uint64_t)qword_1EBB84168);
}

uint64_t (*static InputSignalIdentifier.dateOfBirth.modify())()
{
  if (qword_1EBB84188 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1C277AEE0();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBB84168);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1C26A408C(uint64_t a1)
{
  return sub_1C26A40B0(a1, qword_1EBB84190);
}

uint64_t sub_1C26A40B0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1C277AEE0();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1C277AED0();
}

void sub_1C26A4110()
{
  if (!qword_1EA304758)
  {
    type metadata accessor for HKBiologicalSex(255);
    sub_1C26A7E40(&qword_1EA304760, type metadata accessor for HKBiologicalSex);
    sub_1C26A7E40(&qword_1EA304768, type metadata accessor for HKBiologicalSex);
    sub_1C26A7E40(&qword_1EA304770, type metadata accessor for HKBiologicalSex);
    unint64_t v0 = type metadata accessor for UserCharacteristicInputSignal();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA304758);
    }
  }
}

uint64_t static InputSignalIdentifier.biologicalSex.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C26A4238(&qword_1EBB841B0, (uint64_t)qword_1EBB84190, a1);
}

uint64_t sub_1C26A4238@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1C277AEE0();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t static InputSignalIdentifier.biologicalSex.setter(uint64_t a1)
{
  return sub_1C26A4304(a1, &qword_1EBB841B0, (uint64_t)qword_1EBB84190);
}

uint64_t sub_1C26A4304(uint64_t a1, void *a2, uint64_t a3)
{
  if (*a2 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1C277AEE0();
  uint64_t v6 = __swift_project_value_buffer(v5, a3);
  swift_beginAccess();
  uint64_t v7 = *(void *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(v6, a1, v5);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v5);
}

uint64_t (*static InputSignalIdentifier.biologicalSex.modify())()
{
  if (qword_1EBB841B0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1C277AEE0();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBB84190);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t static UserCharacteristicInputSignal<>.wheelchairUse(context:observer:healthStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v25 = a4;
  uint64_t v23 = a2;
  uint64_t v8 = sub_1C277AEE0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v23 - v13;
  uint64_t v15 = qword_1EBB841D0;
  swift_unknownObjectRetain();
  uint64_t v24 = a3;
  swift_unknownObjectRetain();
  if (v15 != -1) {
    swift_once();
  }
  uint64_t v16 = __swift_project_value_buffer(v8, (uint64_t)qword_1EBB841B8);
  swift_beginAccess();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v17(v14, v16, v8);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a5;
  v17(v12, (uint64_t)v14, v8);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1C26A46F8;
  *(void *)(v19 + 24) = v18;
  swift_allocObject();
  id v20 = a5;
  uint64_t v21 = sub_1C26A54D4(a1, v23, v24, v25, (uint64_t)v12, (uint64_t)sub_1C26A8300, v19);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  return v21;
}

uint64_t sub_1C26A46C0()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C26A46F8(uint64_t a1@<X8>)
{
  sub_1C26A4F70(*(void **)(v1 + 16), (SEL *)&selRef_wheelchairUseWithError_, (SEL *)&selRef_wheelchairUse, a1);
}

uint64_t UserCharacteristicInputSignal.__allocating_init(context:observer:identifier:provider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1C26A4B98(a1, a2, a3, a4, a5, a6, a7, (uint64_t)&unk_1F1DC79C8, (uint64_t)sub_1C26A6AD4);
}

{
  return sub_1C26A4B98(a1, a2, a3, a4, a5, a6, a7, (uint64_t)&unk_1F1DC7A40, (uint64_t)sub_1C26A6C04);
}

{
  uint64_t v14;

  uint64_t v14 = swift_allocObject();
  UserCharacteristicInputSignal.init(context:observer:identifier:provider:)(a1, a2, a3, a4, a5, a6, a7);
  return v14;
}

uint64_t static UserCharacteristicInputSignal<>.wheelchairUseConfiguration.getter()
{
  return sub_1C26A506C(&qword_1EBB841D0, (uint64_t)qword_1EBB841B8);
}

uint64_t static UserCharacteristicInputSignal<>.dateOfBirth(context:observer:healthStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v25 = a4;
  uint64_t v23 = a2;
  uint64_t v8 = sub_1C277AEE0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v23 - v13;
  uint64_t v15 = qword_1EBB84188;
  swift_unknownObjectRetain();
  uint64_t v24 = a3;
  swift_unknownObjectRetain();
  if (v15 != -1) {
    swift_once();
  }
  uint64_t v16 = __swift_project_value_buffer(v8, (uint64_t)qword_1EBB84168);
  swift_beginAccess();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v17(v14, v16, v8);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a5;
  v17(v12, (uint64_t)v14, v8);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = &unk_1EA304780;
  *(void *)(v19 + 24) = v18;
  swift_allocObject();
  id v20 = a5;
  uint64_t v21 = sub_1C26A54D4(a1, v23, v24, v25, (uint64_t)v12, (uint64_t)sub_1C26A6BC4, v19);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  return v21;
}

uint64_t sub_1C26A49C8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C26A4A68;
  return MEMORY[0x1F40E7950](a1);
}

uint64_t sub_1C26A4A68()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1C26A4B98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10 = v9;
  uint64_t v26 = a3;
  uint64_t v27 = a4;
  uint64_t v25 = a9;
  uint64_t v16 = sub_1C277AEE0();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a5, v16);
  uint64_t v20 = swift_allocObject();
  long long v21 = *(_OWORD *)(v10 + 96);
  *(_OWORD *)(v20 + 16) = *(_OWORD *)(v10 + 80);
  *(_OWORD *)(v20 + 32) = v21;
  *(void *)(v20 + 48) = a6;
  *(void *)(v20 + 56) = a7;
  uint64_t v22 = swift_allocObject();
  UserCharacteristicInputSignal.init(context:observer:identifier:provider:)(a1, a2, v26, v27, (uint64_t)v19, v25, v20);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a5, v16);
  return v22;
}

uint64_t static UserCharacteristicInputSignal<>.dateOfBirthConfiguration.getter()
{
  return sub_1C26A506C(&qword_1EBB84188, (uint64_t)qword_1EBB84168);
}

uint64_t static UserCharacteristicInputSignal<>.biologicalSex(context:observer:healthStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v25 = a4;
  uint64_t v23 = a2;
  uint64_t v8 = sub_1C277AEE0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v23 - v13;
  uint64_t v15 = qword_1EBB841B0;
  swift_unknownObjectRetain();
  uint64_t v24 = a3;
  swift_unknownObjectRetain();
  if (v15 != -1) {
    swift_once();
  }
  uint64_t v16 = __swift_project_value_buffer(v8, (uint64_t)qword_1EBB84190);
  swift_beginAccess();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v17(v14, v16, v8);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a5;
  v17(v12, (uint64_t)v14, v8);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1C26A6C34;
  *(void *)(v19 + 24) = v18;
  swift_allocObject();
  id v20 = a5;
  uint64_t v21 = sub_1C26A54D4(a1, v23, v24, v25, (uint64_t)v12, (uint64_t)sub_1C26A6C60, v19);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  return v21;
}

void sub_1C26A4F70(void *a1@<X0>, SEL *a2@<X1>, SEL *a3@<X2>, uint64_t a4@<X8>)
{
  v11[1] = *(id *)MEMORY[0x1E4F143B8];
  v11[0] = 0;
  id v6 = objc_msgSend(a1, *a2, v11);
  if (v6)
  {
    uint64_t v7 = v6;
    id v8 = v11[0];
    id v9 = [v7 *a3];

    *(void *)a4 = v9;
    *(unsigned char *)(a4 + 8) = 0;
  }
  else
  {
    id v10 = v11[0];
    sub_1C277A620();

    swift_willThrow();
  }
}

uint64_t static UserCharacteristicInputSignal<>.biologicalSexConfiguration.getter()
{
  return sub_1C26A506C(&qword_1EBB841B0, (uint64_t)qword_1EBB84190);
}

uint64_t sub_1C26A506C(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1C277AEE0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v8 = __swift_project_value_buffer(v4, a2);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  return sub_1C277AEB0();
}

uint64_t UserCharacteristicInputSignal.context.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t UserCharacteristicInputSignal.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + qword_1EBB8CDD0;
  uint64_t v4 = sub_1C277AEE0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t UserCharacteristicInputSignal.observer.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t UserCharacteristicInputSignal.provider.getter()
{
  uint64_t v1 = *(void *)(v0 + qword_1EBB8CE10);
  swift_retain();
  return v1;
}

uint64_t sub_1C26A529C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C26A52F4();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C26A52F4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  uint64_t v3 = *(void (**)(uint64_t (*)(void *, void *), uint64_t))((char *)v0 + qword_1EBB8CE10);
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = *(void *)(v1 + 80);
  *(_OWORD *)(v5 + 24) = *(_OWORD *)(v2 + 88);
  *(void *)(v5 + 40) = *(void *)(v1 + 104);
  *(void *)(v5 + 48) = v4;
  swift_retain();
  v3(sub_1C26A7F10, v5);
  swift_release();

  return swift_release();
}

Swift::Void __swiftcall UserCharacteristicInputSignal.stopObservation()()
{
}

uint64_t sub_1C26A54D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v35 = a6;
  uint64_t v36 = a7;
  uint64_t v33 = a4;
  uint64_t v34 = a5;
  uint64_t v31 = a2;
  uint64_t v32 = a3;
  uint64_t v30 = a1;
  uint64_t v9 = sub_1C277BEA0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C277BE40();
  MEMORY[0x1F4188790](v13);
  uint64_t v14 = sub_1C277B660();
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v29 = qword_1EBB8CDF8;
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85180);
  sub_1C277B650();
  uint64_t v37 = MEMORY[0x1E4FBC860];
  sub_1C26A7E40((unint64_t *)&unk_1EBB85160, MEMORY[0x1E4FBCC10]);
  sub_1C2633C5C(0, (unint64_t *)&qword_1EBB850C0, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1C2633DEC();
  sub_1C277C120();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBCC58], v9);
  uint64_t v15 = (void *)sub_1C277BED0();
  *(void *)(v8 + v29) = v15;
  uint64_t v16 = v31;
  *(void *)(v8 + 16) = v30;
  *(void *)(v8 + 24) = v16;
  uint64_t v17 = (void *)(v8 + qword_1EBB8CE08);
  uint64_t v18 = v33;
  *uint64_t v17 = v32;
  v17[1] = v18;
  uint64_t v19 = v8 + qword_1EBB8CDD0;
  uint64_t v20 = sub_1C277AEE0();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = v34;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v19, v34, v20);
  uint64_t v23 = (void *)(v8 + qword_1EBB8CE10);
  uint64_t v24 = v36;
  *uint64_t v23 = v35;
  v23[1] = v24;
  sub_1C277AB40();
  swift_allocObject();
  id v25 = v15;
  uint64_t v26 = sub_1C277AB20();
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v20);
  *(void *)(v8 + qword_1EBB8CE00) = v26;
  return v8;
}

uint64_t UserCharacteristicInputSignal.init(context:observer:identifier:provider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v35 = a6;
  uint64_t v36 = a7;
  uint64_t v33 = a4;
  uint64_t v34 = a5;
  uint64_t v31 = a2;
  uint64_t v32 = a3;
  uint64_t v30 = a1;
  uint64_t v9 = sub_1C277BEA0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C277BE40();
  MEMORY[0x1F4188790](v13);
  uint64_t v14 = sub_1C277B660();
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v29 = qword_1EBB8CDF8;
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85180);
  sub_1C277B650();
  uint64_t v37 = MEMORY[0x1E4FBC860];
  sub_1C26A7E40((unint64_t *)&unk_1EBB85160, MEMORY[0x1E4FBCC10]);
  sub_1C2633C5C(0, (unint64_t *)&qword_1EBB850C0, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1C2633DEC();
  sub_1C277C120();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBCC58], v9);
  uint64_t v15 = (void *)sub_1C277BED0();
  *(void *)(v8 + v29) = v15;
  uint64_t v16 = v31;
  *(void *)(v8 + 16) = v30;
  *(void *)(v8 + 24) = v16;
  uint64_t v17 = (void *)(v8 + qword_1EBB8CE08);
  uint64_t v18 = v33;
  *uint64_t v17 = v32;
  v17[1] = v18;
  uint64_t v19 = v8 + qword_1EBB8CDD0;
  uint64_t v20 = sub_1C277AEE0();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = v34;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v19, v34, v20);
  uint64_t v23 = (void *)(v8 + qword_1EBB8CE10);
  uint64_t v24 = v36;
  *uint64_t v23 = v35;
  v23[1] = v24;
  sub_1C277AB40();
  swift_allocObject();
  id v25 = v15;
  uint64_t v26 = sub_1C277AB20();
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v20);
  *(void *)(v8 + qword_1EBB8CE00) = v26;
  return v8;
}

uint64_t sub_1C26A5C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C2633C5C(0, &qword_1EBB84258, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v14 - v9;
  uint64_t v11 = sub_1C277BB90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = a3;
  v12[5] = a4;
  v12[6] = a1;
  v12[7] = a2;
  swift_retain();
  swift_retain();
  sub_1C26A66D8((uint64_t)v10, (uint64_t)&unk_1EA3047B0, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_1C26A5D4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1C2633C5C(0, &qword_1EBB84258, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v22 - v17;
  uint64_t v19 = sub_1C277BB90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  uint64_t v20 = (void *)swift_allocObject();
  void v20[2] = 0;
  v20[3] = 0;
  v20[4] = a5;
  v20[5] = a6;
  v20[6] = a7;
  v20[7] = a8;
  v20[8] = a3;
  v20[9] = a4;
  v20[10] = a1;
  v20[11] = a2;
  swift_retain();
  swift_retain();
  sub_1C26A66D8((uint64_t)v18, (uint64_t)&unk_1EA304790, (uint64_t)v20);
  return swift_release();
}

uint64_t sub_1C26A5EBC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[2] = a6;
  v7[3] = a7;
  sub_1C2633C5C(0, &qword_1EBB83A20, MEMORY[0x1E4F26F90], MEMORY[0x1E4FBB718]);
  v7[4] = swift_task_alloc();
  uint64_t v9 = swift_task_alloc();
  v7[5] = v9;
  uint64_t v12 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v10 = (void *)swift_task_alloc();
  v7[6] = v10;
  *uint64_t v10 = v7;
  v10[1] = sub_1C26A6010;
  return v12(v9);
}

uint64_t sub_1C26A6010()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C26A61C8;
  }
  else {
    uint64_t v2 = sub_1C26A6124;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C26A6124()
{
  (*(void (**)(void, void))(v0 + 16))(*(void *)(v0 + 40), 0);
  sub_1C26A826C(*(void *)(v0 + 40), &qword_1EBB83A20, MEMORY[0x1E4F26F90]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C26A61C8()
{
  uint64_t v1 = (void *)v0[7];
  uint64_t v2 = v0[4];
  uint64_t v3 = (void (*)(uint64_t, void *))v0[2];
  uint64_t v4 = sub_1C277A5D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 1, 1, v4);
  id v5 = v1;
  v3(v2, v1);

  sub_1C26A826C(v0[4], &qword_1EBB83A20, MEMORY[0x1E4F26F90]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1C26A62D4(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[3] = a7;
  v8[4] = a8;
  v8[2] = a6;
  uint64_t v10 = sub_1C277C0B0();
  v8[5] = v10;
  v8[6] = *(void *)(v10 - 8);
  v8[7] = swift_task_alloc();
  uint64_t v11 = swift_task_alloc();
  v8[8] = v11;
  uint64_t v14 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v12 = (void *)swift_task_alloc();
  v8[9] = v12;
  *uint64_t v12 = v8;
  v12[1] = sub_1C26A6434;
  return v14(v11);
}

uint64_t sub_1C26A6434()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C26A65E0;
  }
  else {
    uint64_t v2 = sub_1C26A6548;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C26A6548()
{
  (*(void (**)(void, void))(v0 + 16))(*(void *)(v0 + 64), 0);
  (*(void (**)(void, void))(*(void *)(v0 + 48) + 8))(*(void *)(v0 + 64), *(void *)(v0 + 40));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C26A65E0()
{
  uint64_t v1 = (void *)v0[10];
  uint64_t v2 = v0[7];
  uint64_t v3 = (void (*)(uint64_t, void *))v0[2];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0[4] - 8) + 56))(v2, 1, 1);
  id v4 = v1;
  v3(v2, v1);

  (*(void (**)(void, void))(v0[6] + 8))(v0[7], v0[5]);
  swift_task_dealloc();
  swift_task_dealloc();
  id v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1C26A66D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C277BB90();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1C277BB80();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1C26A826C(a1, &qword_1EBB84258, MEMORY[0x1E4FBCFE8]);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1C277BB40();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1C26A6898(uint64_t (*a1)(uint64_t *, void), uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  a3(&v5);
  return a1(&v5, 0);
}

uint64_t sub_1C26A6934(void (*a1)(char *, void), uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5 = sub_1C277C0B0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v12 - v9;
  a3(v8);
  a1(v10, 0);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v10, v5);
}

uint64_t sub_1C26A6AD4(uint64_t a1, uint64_t a2)
{
  return sub_1C26A6C1C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void))sub_1C26A6934);
}

uint64_t sub_1C26A6AEC(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C26A4A68;
  return sub_1C26A49C8(a1);
}

uint64_t sub_1C26A6B8C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C26A6BC4(uint64_t a1, uint64_t a2)
{
  return sub_1C26A5C04(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1C26A6BCC()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1C26A6C04(uint64_t a1, uint64_t a2)
{
  return sub_1C26A6C1C(a1, a2, sub_1C26A5D4C);
}

uint64_t sub_1C26A6C1C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, void, void, void, void, void))
{
  return a3(a1, a2, v3[6], v3[7], v3[2], v3[3], v3[4], v3[5]);
}

void sub_1C26A6C34(uint64_t a1@<X8>)
{
  sub_1C26A4F70(*(void **)(v1 + 16), (SEL *)&selRef_biologicalSexWithError_, (SEL *)&selRef_biologicalSex, a1);
}

uint64_t sub_1C26A6C60(uint64_t (*a1)(uint64_t *, void), uint64_t a2)
{
  return sub_1C26A6898(a1, a2, *(void (**)(uint64_t *__return_ptr))(v2 + 16));
}

uint64_t sub_1C26A6C7C(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v59 = a2;
  uint64_t v51 = a1;
  uint64_t v11 = sub_1C277B130();
  uint64_t v53 = *(void *)(v11 - 8);
  uint64_t ObjectType = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v52 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C277C0B0();
  uint64_t v50 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v50 - v14;
  uint64_t v16 = sub_1C277AEE0();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = a4;
  uint64_t v56 = a5;
  uint64_t v61 = a4;
  uint64_t v62 = a5;
  uint64_t v57 = a6;
  uint64_t v58 = a7;
  uint64_t v63 = a6;
  uint64_t v64 = a7;
  uint64_t v20 = sub_1C277AE60();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v50 - v22;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v25 = result;
    uint64_t v26 = v59;
    if (v59)
    {
      swift_getObjectType();
      id v27 = v26;
      uint64_t v28 = v52;
      sub_1C277AC30();
      id v29 = v26;
      id v30 = v26;
      swift_retain();
      uint64_t v31 = sub_1C277B100();
      os_log_type_t v32 = sub_1C277BD20();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = swift_slowAlloc();
        uint64_t v51 = (void *)swift_slowAlloc();
        uint64_t v34 = swift_slowAlloc();
        uint64_t v61 = v34;
        *(_DWORD *)uint64_t v33 = 136446466;
        uint64_t v35 = UserCharacteristicInputSignal.description.getter();
        uint64_t v60 = sub_1C263FDFC(v35, v36, &v61);
        sub_1C277C0D0();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v33 + 12) = 2112;
        id v37 = v26;
        uint64_t v38 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v60 = v38;
        sub_1C277C0D0();
        double v39 = v51;
        *uint64_t v51 = v38;

        _os_log_impl(&dword_1C2601000, v31, v32, "%{public}s: Failed to fetch updated characteristic value: %@", (uint8_t *)v33, 0x16u);
        sub_1C264E608();
        swift_arrayDestroy();
        MEMORY[0x1C875D230](v39, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x1C875D230](v34, -1, -1);
        MEMORY[0x1C875D230](v33, -1, -1);
      }
      else
      {
        swift_release();
      }
      (*(void (**)(char *, uint64_t))(v53 + 8))(v28, ObjectType);
      uint64_t v44 = (void *)sub_1C277A610();
      unsigned int v45 = objc_msgSend(v44, sel_hk_isDatabaseAccessibilityError);

      if (v45)
      {
        if (qword_1EA303F18 != -1) {
          swift_once();
        }
        uint64_t v46 = swift_allocObject();
        swift_weakInit();
        uint64_t v47 = (void *)swift_allocObject();
        uint64_t v48 = v56;
        v47[2] = v55;
        v47[3] = v48;
        uint64_t v49 = v58;
        v47[4] = v57;
        v47[5] = v49;
        v47[6] = v46;
        swift_retain();
        sub_1C2721A14((uint64_t)sub_1C26A7F20, (uint64_t)v47);

        swift_release();
        swift_release();
      }
      else
      {
      }
    }
    else
    {
      uint64_t v59 = *(void **)(result + qword_1EBB8CE08 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v25 + qword_1EBB8CDD0, v16);
      (*(void (**)(char *, void *, uint64_t))(v50 + 16))(v15, v51, v13);
      uint64_t v41 = v55;
      uint64_t v40 = v56;
      uint64_t v43 = v57;
      uint64_t v42 = v58;
      sub_1C277AE50();
      uint64_t v60 = v25;
      uint64_t v61 = v41;
      uint64_t v62 = v40;
      uint64_t v63 = v43;
      uint64_t v64 = v42;
      type metadata accessor for UserCharacteristicInputSignal();
      swift_getWitnessTable();
      sub_1C277AE40();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1C26A72F8()
{
  uint64_t v0 = sub_1C277B130();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_getObjectType();
    sub_1C277AC30();
    swift_retain();
    uint64_t v5 = sub_1C277B100();
    os_log_type_t v6 = sub_1C277BD40();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      v13[0] = v0;
      uint64_t v8 = (uint8_t *)v7;
      uint64_t v9 = swift_slowAlloc();
      uint64_t v14 = v9;
      *(_DWORD *)uint64_t v8 = 136446210;
      uint64_t v10 = UserCharacteristicInputSignal.description.getter();
      v13[1] = sub_1C263FDFC(v10, v11, &v14);
      sub_1C277C0D0();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v5, v6, "%{public}s: Device unlocked, retrying fetch characteristic", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v9, -1, -1);
      MEMORY[0x1C875D230](v8, -1, -1);

      uint64_t v12 = (*(uint64_t (**)(char *, void))(v1 + 8))(v3, v13[0]);
    }
    else
    {

      swift_release();
      uint64_t v12 = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    }
    sub_1C26A52F4(v12);
    return swift_release();
  }
  return result;
}

uint64_t UserCharacteristicInputSignal.deinit()
{
  swift_unknownObjectRelease();
  uint64_t v1 = v0 + qword_1EBB8CDD0;
  uint64_t v2 = sub_1C277AEE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return v0;
}

uint64_t UserCharacteristicInputSignal.__deallocating_deinit()
{
  UserCharacteristicInputSignal.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C26A7650@<X0>(uint64_t a1@<X8>)
{
  return UserCharacteristicInputSignal.identifier.getter(a1);
}

uint64_t sub_1C26A7674()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1C26A76A4()
{
  return _s14HealthPlatform29UserCharacteristicInputSignalC16beginObservation4from14configurationsy0A13Orchestration19OptionalValueAnchorVyxGSg_SayAG21IdentityConfigurationVGtF_0();
}

void sub_1C26A76C8()
{
}

uint64_t UserCharacteristicInputSignal.description.getter()
{
  uint64_t v1 = sub_1C277C9E0();
  sub_1C277B8D0();
  sub_1C277AEE0();
  sub_1C26A7E40(&qword_1EBB841D8, MEMORY[0x1E4F66E78]);
  sub_1C277C7B0();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C26A77C8()
{
  return UserCharacteristicInputSignal.description.getter();
}

uint64_t sub_1C26A77EC()
{
  return sub_1C277BA10();
}

uint64_t sub_1C26A787C()
{
  return sub_1C277B9F0();
}

uint64_t sub_1C26A78FC()
{
  return sub_1C277BA10();
}

uint64_t sub_1C26A798C()
{
  return sub_1C277B9F0();
}

uint64_t sub_1C26A7A0C(uint64_t a1, int *a2)
{
  os_log_type_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  id v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *id v4 = v2;
  v4[1] = sub_1C26A7AE8;
  return v6(a1);
}

uint64_t sub_1C26A7AE8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1C26A7BE0()
{
  return *(void *)(v0 + qword_1EBB8CE08);
}

uint64_t _s14HealthPlatform29UserCharacteristicInputSignalC16beginObservation4from14configurationsy0A13Orchestration19OptionalValueAnchorVyxGSg_SayAG21IdentityConfigurationVGtF_0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = *(void *)(v1 + 80);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(v2 + 88);
  *(void *)(v4 + 40) = *(void *)(v1 + 104);
  *(void *)(v4 + 48) = v3;
  swift_retain();
  sub_1C277AB00();
  swift_release();
  swift_release();

  return sub_1C26A52F4();
}

uint64_t sub_1C26A7D14()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C26A7D30()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C26A7D4C()
{
  uint64_t result = sub_1C277AEE0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for UserCharacteristicInputSignal(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for UserCharacteristicInputSignal);
}

uint64_t dispatch thunk of UserCharacteristicInputSignal.__allocating_init(context:observer:identifier:provider:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t sub_1C26A7E40(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C26A7E88()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C26A7EC0()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1C26A7EF8()
{
  return sub_1C26A7F38((uint64_t (*)(void, void, void, void, void))sub_1C26A529C);
}

uint64_t sub_1C26A7F10(void *a1, void *a2)
{
  return sub_1C26A6C7C(a1, a2, v2[6], v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_1C26A7F20()
{
  return sub_1C26A7F38((uint64_t (*)(void, void, void, void, void))sub_1C26A72F8);
}

uint64_t sub_1C26A7F38(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1C26A7F50()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 96, 7);
}

uint64_t sub_1C26A7F98(uint64_t a1)
{
  uint64_t v5 = v1[3];
  uint64_t v4 = v1[4];
  uint64_t v6 = v1[2];
  uint64_t v7 = (int *)v1[8];
  uint64_t v8 = v1[9];
  uint64_t v9 = v1[10];
  uint64_t v10 = v1[11];
  unint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *unint64_t v11 = v2;
  v11[1] = sub_1C26A82DC;
  return sub_1C26A62D4(a1, v6, v5, v7, v8, v9, v10, v4);
}

uint64_t sub_1C26A8098(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C26A82DC;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EA304798 + dword_1EA304798);
  return v6(a1, v4);
}

uint64_t sub_1C26A8150()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1C26A8198(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1C26A4A68;
  return sub_1C26A5EBC(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1C26A826C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C2633C5C(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

double ContentCompletenessFeatureTag.value.getter()
{
  return *(double *)v0;
}

HealthPlatform::ContentCompletenessFeatureTag __swiftcall ContentCompletenessFeatureTag.init(_:)(HealthPlatform::ContentCompletenessFeatureTag result)
{
  v1->value = result.value;
  return result;
}

ValueMetadata *type metadata accessor for ContentCompletenessFeatureTag()
{
  return &type metadata for ContentCompletenessFeatureTag;
}

uint64_t sub_1C26A8324@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1C26A88BC(a1, a2);
}

uint64_t sub_1C26A833C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_1C277A4A0();
  swift_allocObject();
  sub_1C277A490();
  sub_1C2627464(0, &qword_1EBB85798, (void (*)(void))sub_1C26A93B4, (void (*)(void))sub_1C26A9408);
  id v5 = objc_msgSend(a1, sel_data);
  uint64_t v6 = sub_1C277A780();
  unint64_t v8 = v7;

  sub_1C26A945C();
  sub_1C277A480();
  sub_1C263CC84(v6, v8);
  uint64_t result = swift_release();
  if (v2)
  {
    sub_1C26A8E74();
    swift_allocError();
    *uint64_t v10 = v2;
    return swift_willThrow();
  }
  else
  {
    *a2 = v11;
  }
  return result;
}

uint64_t sub_1C26A848C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_1C277A4A0();
  swift_allocObject();
  sub_1C277A490();
  sub_1C2627464(0, &qword_1EBB85CE8, (void (*)(void))sub_1C26A94EC, (void (*)(void))sub_1C26A9540);
  id v5 = objc_msgSend(a1, sel_data);
  uint64_t v6 = sub_1C277A780();
  unint64_t v8 = v7;

  sub_1C26A9594();
  sub_1C277A480();
  sub_1C263CC84(v6, v8);
  uint64_t result = swift_release();
  if (v2)
  {
    sub_1C26A8E74();
    swift_allocError();
    *uint64_t v10 = v2;
    return swift_willThrow();
  }
  else
  {
    *a2 = v11;
  }
  return result;
}

uint64_t sub_1C26A85DC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_1C277A4A0();
  swift_allocObject();
  sub_1C277A490();
  sub_1C2627464(0, &qword_1EBB857A8, (void (*)(void))sub_1C26A975C, (void (*)(void))sub_1C26A97B0);
  id v5 = objc_msgSend(a1, sel_data);
  uint64_t v6 = sub_1C277A780();
  unint64_t v8 = v7;

  sub_1C26A9804();
  sub_1C277A480();
  sub_1C263CC84(v6, v8);
  uint64_t result = swift_release();
  if (v2)
  {
    sub_1C26A8E74();
    swift_allocError();
    *uint64_t v10 = v2;
    return swift_willThrow();
  }
  else
  {
    *a2 = v11;
  }
  return result;
}

uint64_t static RelevanceFeatureTagDecodable<>.makeFromFeedItemTag(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v16 = a4;
  uint64_t v17 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v16 - v13;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 24))(a1, a2, a3);
  if (!v4)
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v17 + 32))(v12, a2);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, AssociatedTypeWitness);
  }
  return result;
}

uint64_t sub_1C26A88BC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1C26A8B60(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C26A88E8(void *a1)
{
  sub_1C277A4A0();
  swift_allocObject();
  sub_1C277A490();
  sub_1C26A9894(0, (unint64_t *)&qword_1EBB857B8);
  id v3 = objc_msgSend(a1, sel_data);
  uint64_t v4 = sub_1C277A780();
  unint64_t v6 = v5;

  sub_1C26A933C();
  sub_1C277A480();
  sub_1C263CC84(v4, v6);
  swift_release();
  if (!v1) {
    return v9;
  }
  sub_1C26A8E74();
  swift_allocError();
  *unint64_t v7 = v1;
  return swift_willThrow();
}

uint64_t sub_1C26A8A18(void *a1)
{
  sub_1C277A4A0();
  swift_allocObject();
  sub_1C277A490();
  sub_1C2627464(0, &qword_1EA3047C0, (void (*)(void))sub_1C26A9624, (void (*)(void))sub_1C26A9678);
  id v3 = objc_msgSend(a1, sel_data);
  uint64_t v4 = sub_1C277A780();
  unint64_t v6 = v5;

  sub_1C26A96CC();
  sub_1C277A480();
  sub_1C263CC84(v4, v6);
  swift_release();
  if (!v1) {
    return v9;
  }
  sub_1C26A8E74();
  swift_allocError();
  *unint64_t v7 = v1;
  return swift_willThrow();
}

uint64_t sub_1C26A8B60(void *a1)
{
  sub_1C277A4A0();
  swift_allocObject();
  sub_1C277A490();
  sub_1C26A9894(0, &qword_1EBB857C8);
  id v3 = objc_msgSend(a1, sel_data);
  uint64_t v4 = sub_1C277A780();
  unint64_t v6 = v5;

  sub_1C26A98E4();
  sub_1C277A480();
  sub_1C263CC84(v4, v6);
  uint64_t result = swift_release();
  if (v1)
  {
    sub_1C26A8E74();
    swift_allocError();
    *unint64_t v8 = v1;
    return swift_willThrow();
  }
  return result;
}

uint64_t static RelevanceFeatureTagDecodable<>.value(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = type metadata accessor for ValueJSONWrapper();
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)&v15 - v7;
  sub_1C277A4A0();
  swift_allocObject();
  sub_1C277A490();
  id v9 = objc_msgSend(a1, sel_data);
  uint64_t v10 = sub_1C277A780();
  unint64_t v12 = v11;

  swift_getWitnessTable();
  sub_1C277A480();
  sub_1C263CC84(v10, v12);
  swift_release();
  if (!v2) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a2, v8, AssociatedTypeWitness);
  }
  sub_1C26A8E74();
  swift_allocError();
  void *v13 = v2;
  return swift_willThrow();
}

unint64_t sub_1C26A8E74()
{
  unint64_t result = qword_1EA3047B8;
  if (!qword_1EA3047B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3047B8);
  }
  return result;
}

uint64_t FeedItem.get<A>(featureTag:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v22 = a4;
  uint64_t v7 = *(void *)(a3 + 8);
  uint64_t v20 = a1;
  uint64_t v21 = v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  unint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v20 - v13;
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(a3 + 16);
  id v16 = v4;
  v15(a2, a3);
  id v24 = v16;
  uint64_t v17 = (void (*)(unsigned char *, void))swift_readAtKeyPath();
  uint64_t v18 = *(void (**)(char *))(v9 + 16);
  v18(v14);
  v17(v23, 0);
  swift_release();

  ((void (*)(char *, char *, uint64_t))v18)(v12, v14, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t))(v21 + 32))(v12, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, AssociatedTypeWitness);
}

uint64_t dispatch thunk of static RelevanceFeatureTagKeyPathCorresponding.keyPath.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static RelevanceFeatureTagDecodable.makeFromFeedItemTag(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of static RelevanceFeatureTagDecodable.value(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

void *initializeBufferWithCopyOfBuffer for RelevanceFeatureTagCoreDataError(void *a1, id *a2)
{
  id v3 = *a2;
  id v4 = *a2;
  *a1 = v3;
  return a1;
}

void destroy for RelevanceFeatureTagCoreDataError(id *a1)
{
}

void **assignWithCopy for RelevanceFeatureTagCoreDataError(void **a1, id *a2)
{
  id v3 = *a2;
  id v4 = *a2;
  unint64_t v5 = *a1;
  *a1 = v3;

  return a1;
}

void **assignWithTake for RelevanceFeatureTagCoreDataError(void **a1, void **a2)
{
  id v3 = *a1;
  *a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for RelevanceFeatureTagCoreDataError()
{
  return &type metadata for RelevanceFeatureTagCoreDataError;
}

unint64_t sub_1C26A91C8(void *a1)
{
  unint64_t v1 = 0xD00000000000002ELL;
  if (a1)
  {
    id v3 = a1;
    sub_1C277C2D0();
    sub_1C277B8D0();
    sub_1C26532A4();
    sub_1C277C450();

    return 0;
  }
  return v1;
}

unint64_t sub_1C26A9290()
{
  return sub_1C26A91C8(*v0);
}

uint64_t sub_1C26A9298@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1C26A85DC(a1, a2);
}

uint64_t sub_1C26A92B0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1C26A8A18(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_1C26A92E0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1C26A848C(a1, a2);
}

uint64_t sub_1C26A92F8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1C26A833C(a1, a2);
}

uint64_t sub_1C26A9310@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C26A88E8(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

unint64_t sub_1C26A933C()
{
  unint64_t result = qword_1EBB827B0;
  if (!qword_1EBB827B0)
  {
    sub_1C26A9894(255, (unint64_t *)&qword_1EBB857B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB827B0);
  }
  return result;
}

unint64_t sub_1C26A93B4()
{
  unint64_t result = qword_1EBB857E0;
  if (!qword_1EBB857E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB857E0);
  }
  return result;
}

unint64_t sub_1C26A9408()
{
  unint64_t result = qword_1EBB857D0;
  if (!qword_1EBB857D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB857D0);
  }
  return result;
}

unint64_t sub_1C26A945C()
{
  unint64_t result = qword_1EBB82798;
  if (!qword_1EBB82798)
  {
    sub_1C2627464(255, &qword_1EBB85798, (void (*)(void))sub_1C26A93B4, (void (*)(void))sub_1C26A9408);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB82798);
  }
  return result;
}

unint64_t sub_1C26A94EC()
{
  unint64_t result = qword_1EBB85D00;
  if (!qword_1EBB85D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB85D00);
  }
  return result;
}

unint64_t sub_1C26A9540()
{
  unint64_t result = qword_1EBB85CF0;
  if (!qword_1EBB85CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB85CF0);
  }
  return result;
}

unint64_t sub_1C26A9594()
{
  unint64_t result = qword_1EBB827A0;
  if (!qword_1EBB827A0)
  {
    sub_1C2627464(255, &qword_1EBB85CE8, (void (*)(void))sub_1C26A94EC, (void (*)(void))sub_1C26A9540);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB827A0);
  }
  return result;
}

unint64_t sub_1C26A9624()
{
  unint64_t result = qword_1EA3047C8;
  if (!qword_1EA3047C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3047C8);
  }
  return result;
}

unint64_t sub_1C26A9678()
{
  unint64_t result = qword_1EA3047D0;
  if (!qword_1EA3047D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3047D0);
  }
  return result;
}

unint64_t sub_1C26A96CC()
{
  unint64_t result = qword_1EA3047D8;
  if (!qword_1EA3047D8)
  {
    sub_1C2627464(255, &qword_1EA3047C0, (void (*)(void))sub_1C26A9624, (void (*)(void))sub_1C26A9678);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3047D8);
  }
  return result;
}

unint64_t sub_1C26A975C()
{
  unint64_t result = qword_1EBB85800[0];
  if (!qword_1EBB85800[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EBB85800);
  }
  return result;
}

unint64_t sub_1C26A97B0()
{
  unint64_t result = qword_1EBB857F0;
  if (!qword_1EBB857F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB857F0);
  }
  return result;
}

unint64_t sub_1C26A9804()
{
  unint64_t result = qword_1EBB827A8;
  if (!qword_1EBB827A8)
  {
    sub_1C2627464(255, &qword_1EBB857A8, (void (*)(void))sub_1C26A975C, (void (*)(void))sub_1C26A97B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB827A8);
  }
  return result;
}

void sub_1C26A9894(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = type metadata accessor for ValueJSONWrapper();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

unint64_t sub_1C26A98E4()
{
  unint64_t result = qword_1EBB827B8;
  if (!qword_1EBB827B8)
  {
    sub_1C26A9894(255, &qword_1EBB857C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB827B8);
  }
  return result;
}

uint64_t static InputSignalIdentifier.summarySharing.getter()
{
  return sub_1C277AED0();
}

uint64_t static InputSignalSet.LookupKey.summarySharing.getter()
{
  uint64_t v0 = sub_1C277AEE0();
  MEMORY[0x1F4188790](v0 - 8);
  sub_1C277AED0();
  type metadata accessor for SummarySharingInputSignal();
  return sub_1C277ACD0();
}

uint64_t type metadata accessor for SummarySharingInputSignal()
{
  uint64_t result = qword_1EBB83B78;
  if (!qword_1EBB83B78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C26A9A68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B5E0]), sel_initWithHealthStore_, a2);
  objc_msgSend(v5, sel_addObserver_, a1);
  uint64_t result = sub_1C2644ED8(0, &qword_1EBB82FF8);
  a3[3] = result;
  a3[4] = &protocol witness table for HKSummarySharingEntryStore;
  *a3 = v5;
  return result;
}

void *SummarySharingInputSignal.__allocating_init(context:observer:sourceFactory:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v12 = (void *)swift_allocObject();
  uint64_t ObjectType = swift_getObjectType();

  return sub_1C26AAFF8(a1, a3, a4, a5, a6, v12, ObjectType, a2);
}

void *SummarySharingInputSignal.init(context:observer:sourceFactory:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t ObjectType = swift_getObjectType();

  return sub_1C26AAFF8(a1, a3, a4, a5, a6, v6, ObjectType, a2);
}

uint64_t static SummarySharingInputSignal.identityConfiguration.getter()
{
  uint64_t v0 = sub_1C277AEE0();
  MEMORY[0x1F4188790](v0 - 8);
  sub_1C277AED0();
  return sub_1C277AEB0();
}

uint64_t SummarySharingInputSignal.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC14HealthPlatform25SummarySharingInputSignal_identifier;
  uint64_t v4 = sub_1C277AEE0();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SummarySharingInputSignal.observer.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t SummarySharingInputSignal.beginObservation(from:configurations:)(uint64_t a1, uint64_t a2)
{
  sub_1C26AB0E8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v8 = *(os_unfair_lock_s **)(v2 + 48);
  uint64_t v9 = v8 + 4;
  uint64_t v10 = v8 + 18;
  os_unfair_lock_lock(v8 + 18);
  sub_1C26AB364(v9);
  os_unfair_lock_unlock(v10);
  os_unfair_lock_lock(v10);
  sub_1C26AB380((uint64_t)v9, (uint64_t)v17);
  os_unfair_lock_unlock(v10);
  uint64_t v11 = v18;
  uint64_t v12 = v19;
  __swift_project_boxed_opaque_existential_1(v17, v18);
  sub_1C26AB39C(a1, (uint64_t)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v13 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v2;
  sub_1C26AB404((uint64_t)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13);
  *(void *)(v14 + ((v7 + v13 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
  uint64_t v15 = *(void (**)(uint64_t (*)(char, void *), uint64_t, uint64_t, uint64_t))(v12 + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  v15(sub_1C26AB468, v14, v11, v12);
  swift_release();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
}

Swift::Void __swiftcall SummarySharingInputSignal.stopObservation()()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 48);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 18;
  os_unfair_lock_lock(v1 + 18);
  sub_1C26AB364(v2);

  os_unfair_lock_unlock(v3);
}

uint64_t sub_1C26A9F60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t))(a2 + 16))(a2);
  sub_1C26ABA0C(a1);
  sub_1C26482E4(a3, a1);
  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  uint64_t result = swift_release();
  *(void *)(a1 + 40) = sub_1C26ABB98;
  *(void *)(a1 + 48) = v5;
  return result;
}

uint64_t sub_1C26AA004()
{
  uint64_t v0 = sub_1C277AEE0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C26AB140();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v10 = result;
    v13[1] = *(void *)(result + OBJC_IVAR____TtC14HealthPlatform25SummarySharingInputSignal_observer + 8);
    swift_getObjectType();
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v10 + OBJC_IVAR____TtC14HealthPlatform25SummarySharingInputSignal_identifier, v0);
    unint64_t v11 = swift_bridgeObjectRetain();
    uint64_t v12 = sub_1C265C61C(v11);
    swift_bridgeObjectRelease();
    uint64_t v14 = v12;
    sub_1C26AB238();
    sub_1C26AB2C8(&qword_1EBB82E88, (void (*)(uint64_t))sub_1C26AB238);
    sub_1C26AB2C8(&qword_1EBB82E90, (void (*)(uint64_t))sub_1C26AB238);
    sub_1C26AB310(&qword_1EBB82F90);
    sub_1C277AF60();
    uint64_t v14 = v10;
    type metadata accessor for SummarySharingInputSignal();
    sub_1C26AB2C8((unint64_t *)&unk_1EBB82878, (void (*)(uint64_t))type metadata accessor for SummarySharingInputSignal);
    sub_1C277AE40();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C26AA2FC(char a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v46 = a4;
  sub_1C26AB0E8();
  uint64_t v45 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v45 + 64);
  MEMORY[0x1F4188790](v9 - 8);
  unint64_t v11 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C277B130();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  id v16 = (char *)v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)v40 - v17;
  if (a1)
  {
    swift_getObjectType();
    sub_1C277AC30();
    uint64_t v19 = sub_1C277B100();
    os_log_type_t v20 = sub_1C277BD40();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl(&dword_1C2601000, v19, v20, "Started observing summary sharing entry store.", v21, 2u);
      MEMORY[0x1C875D230](v21, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  }
  else
  {
    if (!a2
      || (uint64_t v48 = (uint64_t)a2,
          id v23 = a2,
          sub_1C262B07C(0, (unint64_t *)&qword_1EBB831D0),
          sub_1C2644ED8(0, (unint64_t *)&qword_1EBB854D0),
          (swift_dynamicCast() & 1) == 0)
      || (id v24 = v47,
          unsigned __int8 v25 = objc_msgSend(v47, sel_hk_isDatabaseAccessibilityError),
          v24,
          (v25 & 1) == 0))
    {
      uint64_t v44 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
      swift_getObjectType();
      sub_1C277AC30();
      id v26 = a2;
      id v27 = a2;
      uint64_t v28 = sub_1C277B100();
      os_log_type_t v29 = sub_1C277BD20();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v42 = v12;
        id v30 = (uint8_t *)swift_slowAlloc();
        uint64_t v41 = swift_slowAlloc();
        id v47 = a2;
        uint64_t v48 = v41;
        uint64_t v43 = a5;
        *(_DWORD *)id v30 = 136315138;
        v40[1] = v30 + 4;
        id v31 = a2;
        sub_1C26357E4(0, (unint64_t *)&qword_1EA305660, (unint64_t *)&qword_1EBB831D0);
        uint64_t v32 = sub_1C277B860();
        id v47 = (id)sub_1C263FDFC(v32, v33, &v48);
        a5 = v43;
        sub_1C277C0D0();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1C2601000, v28, v29, "Failed to perform initial fetch of sharing entries (%s); retrying.",
          v30,
          0xCu);
        uint64_t v34 = v41;
        swift_arrayDestroy();
        MEMORY[0x1C875D230](v34, -1, -1);
        MEMORY[0x1C875D230](v30, -1, -1);

        (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v42);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
      }
      unint64_t v11 = v44;
    }
    if (qword_1EA303F18 != -1) {
      swift_once();
    }
    sub_1C26AB39C(v46, (uint64_t)v11);
    unint64_t v35 = (*(unsigned __int8 *)(v45 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
    uint64_t v36 = v10 + v35 + 7;
    uint64_t v37 = (uint64_t)v11;
    unint64_t v38 = v36 & 0xFFFFFFFFFFFFFFF8;
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = a3;
    sub_1C26AB404(v37, v39 + v35);
    *(void *)(v39 + v38) = a5;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C2721A14((uint64_t)sub_1C26ABAD0, v39);
    return swift_release();
  }
}

uint64_t sub_1C26AA7FC(void *a1, uint64_t a2)
{
  if (a1[3])
  {
    sub_1C26482E4((uint64_t)a1, (uint64_t)v7);
    uint64_t v4 = v8;
    uint64_t v5 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a2, v4, v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
  }
  uint64_t result = swift_release();
  a1[5] = nullsub_1;
  a1[6] = 0;
  return result;
}

Swift::Void __swiftcall SummarySharingInputSignal.sharingEntryStoreDidUpdate()()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 48);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 18;
  os_unfair_lock_lock(v1 + 18);
  sub_1C26AA92C(v2, &v4);
  os_unfair_lock_unlock(v3);
  v4();

  swift_release();
}

uint64_t sub_1C26AA92C@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  sub_1C26AB990(a1, (uint64_t)&v9);
  if (v10)
  {
    sub_1C261F308(&v9, (uint64_t)v11);
    uint64_t v5 = *(void *)(a1 + 40);
    uint64_t v4 = *(void *)(a1 + 48);
    sub_1C261F308(v11, (uint64_t)&v9);
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v5;
    *(void *)(v6 + 24) = v4;
    sub_1C261F308(&v9, v6 + 32);
    uint64_t result = swift_retain();
    uint64_t v8 = sub_1C26ABAC0;
  }
  else
  {
    uint64_t result = sub_1C26ABA0C((uint64_t)&v9);
    uint64_t v6 = 0;
    uint64_t v8 = nullsub_1;
  }
  *a2 = v8;
  a2[1] = (uint64_t (*)())v6;
  return result;
}

uint64_t sub_1C26AAA00(void (*a1)(void), uint64_t a2, void *a3)
{
  uint64_t v4 = a3[3];
  uint64_t v5 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  a1();

  return swift_bridgeObjectRelease();
}

uint64_t SummarySharingInputSignal.deinit()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC14HealthPlatform25SummarySharingInputSignal_identifier;
  uint64_t v2 = sub_1C277AEE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();
  return v0;
}

uint64_t SummarySharingInputSignal.__deallocating_deinit()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC14HealthPlatform25SummarySharingInputSignal_identifier;
  uint64_t v2 = sub_1C277AEE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1C26AAC68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC14HealthPlatform25SummarySharingInputSignal_identifier;
  uint64_t v4 = sub_1C277AEE0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1C26AACE0()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1C26AAD18(uint64_t a1, uint64_t a2)
{
  return SummarySharingInputSignal.beginObservation(from:configurations:)(a1, a2);
}

void sub_1C26AAD3C()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)v0 + 48);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 18;
  os_unfair_lock_lock(v1 + 18);
  sub_1C26AB364(v2);

  os_unfair_lock_unlock(v3);
}

uint64_t sub_1C26AADA0(uint64_t a1)
{
  uint64_t v2 = sub_1C26AB2C8((unint64_t *)&unk_1EBB82878, (void (*)(uint64_t))type metadata accessor for SummarySharingInputSignal);

  return MEMORY[0x1F411FB20](a1, v2);
}

uint64_t sub_1C26AAE0C()
{
  id v1 = objc_msgSend(*v0, sel_sharingEntries);
  sub_1C2644ED8(0, &qword_1EBB80DB0);
  uint64_t v2 = sub_1C277BA40();

  return v2;
}

uint64_t sub_1C26AAE74(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  v6[4] = a1;
  v6[5] = a2;
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 1107296256;
  v6[2] = sub_1C264ABF4;
  v6[3] = &block_descriptor_6;
  uint64_t v4 = _Block_copy(v6);
  swift_retain();
  objc_msgSend(v3, sel_fetchSharingEntriesWithCompletion_, v4);
  _Block_release(v4);
  return swift_release();
}

id sub_1C26AAF28(uint64_t a1)
{
  return objc_msgSend(*v1, sel_removeObserver_, a1);
}

void *sub_1C26AAF3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a4;
  uint64_t v14 = (void *)swift_allocObject();

  return sub_1C26AAFF8(a1, a2, a3, (uint64_t)sub_1C26AB988, v13, v14, a6, a7);
}

void *sub_1C26AAFF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  memset(v18, 0, sizeof(v18));
  uint64_t v19 = 0;
  os_log_type_t v20 = nullsub_1;
  uint64_t v21 = 0;
  sub_1C26ABBA0();
  uint64_t v15 = swift_allocObject();
  *(_DWORD *)(v15 + 72) = 0;
  sub_1C26ABC00((uint64_t)v18, v15 + 16);
  sub_1C26ABC38((uint64_t)v18);
  a6[6] = v15;
  sub_1C277AED0();
  a6[2] = a4;
  a6[3] = a5;
  a6[4] = a1;
  a6[5] = a8;
  id v16 = (void *)((char *)a6 + OBJC_IVAR____TtC14HealthPlatform25SummarySharingInputSignal_observer);
  *id v16 = a2;
  v16[1] = a3;
  return a6;
}

void sub_1C26AB0E8()
{
  if (!qword_1EBB82A18)
  {
    sub_1C26AB140();
    unint64_t v0 = sub_1C277C0B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB82A18);
    }
  }
}

void sub_1C26AB140()
{
  if (!qword_1EBB82A10)
  {
    sub_1C26AB238();
    sub_1C26AB2C8(&qword_1EBB82E88, (void (*)(uint64_t))sub_1C26AB238);
    sub_1C26AB2C8(&qword_1EBB82E90, (void (*)(uint64_t))sub_1C26AB238);
    sub_1C26AB310(&qword_1EBB82F90);
    unint64_t v0 = sub_1C277AF80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB82A10);
    }
  }
}

void sub_1C26AB238()
{
  if (!qword_1EBB82E80)
  {
    sub_1C2644ED8(255, &qword_1EBB80DB0);
    sub_1C26AB310(&qword_1EBB82F98);
    unint64_t v0 = sub_1C277BC20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB82E80);
    }
  }
}

uint64_t sub_1C26AB2C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C26AB310(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2644ED8(255, &qword_1EBB80DB0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C26AB364(void *a1)
{
  return sub_1C26AA7FC(a1, v1);
}

uint64_t sub_1C26AB380@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C26A9F60(a1, v2, a2);
}

uint64_t sub_1C26AB39C(uint64_t a1, uint64_t a2)
{
  sub_1C26AB0E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C26AB404(uint64_t a1, uint64_t a2)
{
  sub_1C26AB0E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C26AB468(char a1, void *a2)
{
  sub_1C26AB0E8();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v2 + 16);
  uint64_t v9 = *(void *)(v2 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_1C26AA2FC(a1, a2, v8, v2 + v7, v9);
}

uint64_t sub_1C26AB518()
{
  return sub_1C26AB2C8(&qword_1EBB83B70, (void (*)(uint64_t))type metadata accessor for SummarySharingInputSignal);
}

uint64_t sub_1C26AB560()
{
  return sub_1C26AB2C8(&qword_1EBB82A08, (void (*)(uint64_t))sub_1C26AB140);
}

uint64_t dispatch thunk of SummarySharingEntrySource.sharingEntries.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SummarySharingEntrySource.fetchSharingEntries(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of SummarySharingEntrySource.remove(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1C26AB5E4()
{
  return type metadata accessor for SummarySharingInputSignal();
}

uint64_t sub_1C26AB5EC()
{
  uint64_t result = sub_1C277AEE0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for SummarySharingInputSignal(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SummarySharingInputSignal);
}

uint64_t dispatch thunk of SummarySharingInputSignal.__allocating_init(context:observer:sourceFactory:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t destroy for SummarySharingInputSignal.ProtectedState(uint64_t a1)
{
  if (*(void *)(a1 + 24)) {
    __swift_destroy_boxed_opaque_existential_0(a1);
  }

  return swift_release();
}

uint64_t initializeWithCopy for SummarySharingInputSignal.ProtectedState(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SummarySharingInputSignal.ProtectedState(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 3);
  if (!*(void *)(a1 + 24))
  {
    if (v4)
    {
      *(void *)(a1 + 24) = v4;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
      goto LABEL_8;
    }
LABEL_7:
    long long v5 = *a2;
    long long v6 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
LABEL_8:
  uint64_t v7 = *((void *)a2 + 6);
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  *(void *)(a1 + 48) = v7;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SummarySharingInputSignal.ProtectedState(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24)) {
    __swift_destroy_boxed_opaque_existential_0(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SummarySharingInputSignal.ProtectedState(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SummarySharingInputSignal.ProtectedState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SummarySharingInputSignal.ProtectedState()
{
  return &type metadata for SummarySharingInputSignal.ProtectedState;
}

uint64_t sub_1C26AB950()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C26AB988@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C26A9A68(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1C26AB990(uint64_t a1, uint64_t a2)
{
  sub_1C26357E4(0, &qword_1EBB82870, &qword_1EBB82868);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C26ABA0C(uint64_t a1)
{
  sub_1C26357E4(0, &qword_1EBB82870, &qword_1EBB82868);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C26ABA80()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 32);

  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1C26ABAC0()
{
  return sub_1C26AAA00(*(void (**)(void))(v0 + 16), *(void *)(v0 + 24), (void *)(v0 + 32));
}

uint64_t sub_1C26ABAD0()
{
  sub_1C26AB0E8();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return SummarySharingInputSignal.beginObservation(from:configurations:)(v0 + v3, *(void *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1C26ABB60()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C26ABB98()
{
  return sub_1C26AA004();
}

void sub_1C26ABBA0()
{
  if (!qword_1EBB80F08)
  {
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_1C277C370();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB80F08);
    }
  }
}

uint64_t sub_1C26ABC00(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C26ABC38(uint64_t a1)
{
  return a1;
}

unint64_t static OpenTransactionBuilderManager.regenerateAllSummariesNeededDefaultsKey.getter()
{
  return 0xD000000000000045;
}

uint64_t static OpenTransactionBuilderManager.MakeTransactionError.== infix(_:_:)()
{
  return 1;
}

uint64_t OpenTransactionBuilderManager.MakeTransactionError.hash(into:)()
{
  return sub_1C277C8D0();
}

uint64_t OpenTransactionBuilderManager.MakeTransactionError.hashValue.getter()
{
  return sub_1C277C910();
}

uint64_t sub_1C26ABCF8()
{
  if (qword_1EBB84910 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_1EBB84900;
  type metadata accessor for OpenTransactionBuilderManager();
  uint64_t v1 = swift_allocObject();
  uint64_t result = OpenTransactionBuilderManager.init(userDefaults:)((uint64_t)v0);
  qword_1EBB83B98 = v1;
  return result;
}

uint64_t OpenTransactionBuilderManager.__allocating_init(userDefaults:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  OpenTransactionBuilderManager.init(userDefaults:)(a1);
  return v2;
}

uint64_t static OpenTransactionBuilderManager.shared.getter()
{
  if (qword_1EBB83BA8 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_1C26ABE0C(uint64_t a1, char a2)
{
  uint64_t v4 = sub_1C277A8A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    unint64_t v12 = 0x2864657461657263;
    unint64_t v13 = 0xE800000000000000;
    uint64_t v8 = *(void **)(a1 + 16);
    sub_1C2633FC4(a1, 1);
    id v9 = objc_msgSend(v8, sel_transactionUUID);
    sub_1C277A880();

    sub_1C277A850();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1C277B8D0();
    swift_bridgeObjectRelease();
    sub_1C277B8D0();
    sub_1C263403C(a1, 1, MEMORY[0x1E4FBC898], MEMORY[0x1E4FBC8D0]);
  }
  else
  {
    unint64_t v12 = 0;
    unint64_t v13 = 0xE000000000000000;
    sub_1C277C2D0();
    swift_bridgeObjectRelease();
    unint64_t v12 = 0xD00000000000001CLL;
    unint64_t v13 = 0x80000001C278BCE0;
    v11[1] = *(void *)(a1 + 16);
    sub_1C277C7B0();
    sub_1C277B8D0();
    swift_bridgeObjectRelease();
    sub_1C277B8D0();
  }
  return v12;
}

unint64_t sub_1C26AC010()
{
  return sub_1C26ABE0C(*(void *)v0, *(unsigned char *)(v0 + 8));
}

uint64_t OpenTransactionBuilderManager.init(userDefaults:)(uint64_t a1)
{
  uint64_t v13 = a1;
  uint64_t v12 = sub_1C277BEA0();
  uint64_t v2 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C277BE40();
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = sub_1C277B660();
  MEMORY[0x1F4188790](v6 - 8);
  sub_1C26AC300();
  uint64_t v7 = swift_allocObject();
  *(_DWORD *)(v7 + 24) = 0;
  *(void *)(v7 + 16) = MEMORY[0x1E4FBC868];
  *(void *)(v1 + 16) = v7;
  uint64_t v11 = sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85180);
  sub_1C277B650();
  uint64_t v14 = MEMORY[0x1E4FBC860];
  sub_1C2633AA0((unint64_t *)&unk_1EBB85160, MEMORY[0x1E4FBCC10]);
  uint64_t v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1C2633CC0(0, (unint64_t *)&qword_1EBB850C0, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1C2634050(qword_1EBB850D0, (unint64_t *)&qword_1EBB850C0, v8);
  sub_1C277C120();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FBCC58], v12);
  *(void *)(v1 + 24) = sub_1C277BED0();
  *(void *)(v1 + 32) = 0xD000000000000045;
  uint64_t v9 = v13;
  *(void *)(v1 + 40) = 0x80000001C278BBD0;
  *(void *)(v1 + 48) = v9;
  *(void *)(v1 + 56) = 0;
  *(void *)(v1 + 64) = 0xE000000000000000;
  *(unsigned char *)(v1 + 72) = 0;
  return v1;
}

void sub_1C26AC300()
{
  if (!qword_1EBB84300)
  {
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_1C277C370();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB84300);
    }
  }
}

uint64_t sub_1C26AC360(void *a1, char a2, uint64_t (*a3)(void *, uint64_t))
{
  uint64_t v5 = a2 & 1;
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1C277B130();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EBB86280);
  sub_1C26B3334(a1, v5);
  sub_1C26B3334(a1, v5);
  uint64_t v7 = sub_1C277B100();
  os_log_type_t v8 = sub_1C277BD40();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v20 = v10;
    *(_DWORD *)uint64_t v9 = 136446466;
    uint64_t v11 = sub_1C277C9E0();
    sub_1C263FDFC(v11, v12, &v20);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2082;
    sub_1C26B3334(a1, v5);
    sub_1C2617808(0, (unint64_t *)&qword_1EBB843B8, MEMORY[0x1E4FBC448]);
    uint64_t v13 = sub_1C277B860();
    sub_1C263FDFC(v13, v14, &v20);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    uint64_t v15 = (uint64_t (*)(void))MEMORY[0x1E4FBC8D0];
    id v16 = (uint64_t (*)(void))MEMORY[0x1E4FBC8B8];
    sub_1C263403C((uint64_t)a1, v5, MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC8B8]);
    sub_1C263403C((uint64_t)a1, v5, v15, v16);
    _os_log_impl(&dword_1C2601000, v7, v8, "[%{public}s] Enqueued completion notified of result %{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v10, -1, -1);
    MEMORY[0x1C875D230](v9, -1, -1);
  }
  else
  {
    uint64_t v17 = (uint64_t (*)(void))MEMORY[0x1E4FBC8D0];
    uint64_t v18 = (uint64_t (*)(void))MEMORY[0x1E4FBC8B8];
    sub_1C263403C((uint64_t)a1, v5, MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC8B8]);
    sub_1C263403C((uint64_t)a1, v5, v17, v18);
  }

  return a3(a1, v5);
}

uint64_t sub_1C26AC658(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, void *a5)
{
  if (a2) {
    unint64_t v7 = a2;
  }
  else {
    unint64_t v7 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  sub_1C26AC6C4(a5, v7, a3);

  return swift_bridgeObjectRelease();
}

void sub_1C26AC6C4(void *a1, unint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v111 = *v3;
  os_log_type_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C2633CC0(0, &qword_1EBB82660, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v106 - v10;
  uint64_t v12 = sub_1C277A8A0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v15 = (unint64_t)&v106 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2633CC0(0, (unint64_t *)&unk_1EBB84888, MEMORY[0x1E4F27928], v8);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v106 - v17;
  if (a3)
  {
    id v19 = a3;
    id v20 = objc_msgSend(a1, sel_profileIdentifier);
    sub_1C26ADABC((uint64_t)v20, a3);

    return;
  }
  uint64_t v21 = v4;
  uint64_t v22 = v111;
  uint64_t v112 = v15;
  uint64_t v106 = v13;
  uint64_t v107 = v12;
  v108 = v11;
  uint64_t v23 = MEMORY[0x1E4FBC860];
  unint64_t v113 = MEMORY[0x1E4FBC860];
  if (a2 >> 62)
  {
    LODWORD(v11) = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1C277C5A0();
  }
  else
  {
    uint64_t v24 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v109 = v21;
  v110 = a1;
  if (!v24)
  {
    uint64_t v22 = a1;
    swift_bridgeObjectRelease();
    unint64_t v15 = MEMORY[0x1E4FBC860];
    goto LABEL_25;
  }
  if (v24 < 1)
  {
    __break(1u);
    goto LABEL_95;
  }
  for (uint64_t i = 0; i != v24; ++i)
  {
    if ((a2 & 0xC000000000000001) != 0) {
      id v27 = (id)MEMORY[0x1C875C230](i, a2);
    }
    else {
      id v27 = *(id *)(a2 + 8 * i + 32);
    }
    uint64_t v28 = v27;
    id v29 = objc_msgSend(v27, sel_metadata, v106);
    uint64_t v30 = sub_1C277B760();

    if (*(void *)(v30 + 16) && (unint64_t v31 = sub_1C2629588(0xD000000000000032, 0x80000001C278B630), (v32 & 1) != 0))
    {
      sub_1C263FED0(*(void *)(v30 + 56) + 32 * v31, (uint64_t)&v115);
    }
    else
    {
      long long v115 = 0u;
      long long v116 = 0u;
    }
    swift_bridgeObjectRelease();
    if (!*((void *)&v116 + 1))
    {
      sub_1C262F2E4((uint64_t)&v115);
      uint64_t v26 = sub_1C277A840();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v18, 1, 1, v26);
LABEL_11:
      sub_1C2652EB4((uint64_t)v18);
      sub_1C277C390();
      uint64_t v11 = *(char **)(v113 + 16);
      sub_1C277C3D0();
      sub_1C277C3E0();
      sub_1C277C3A0();
      continue;
    }
    uint64_t v33 = sub_1C277A840();
    int v34 = swift_dynamicCast();
    uint64_t v11 = *(char **)(v33 - 8);
    (*((void (**)(char *, void, uint64_t, uint64_t))v11 + 7))(v18, v34 ^ 1u, 1, v33);
    unint64_t v35 = (unsigned int (*)(char *, uint64_t, uint64_t))*((void *)v11 + 6);
    LODWORD(v11) = v11 + 48;
    if (v35(v18, 1, v33) == 1) {
      goto LABEL_11;
    }
    sub_1C2652EB4((uint64_t)v18);
  }
  swift_bridgeObjectRelease();
  unint64_t v15 = v113;
  uint64_t v22 = v110;
  uint64_t v23 = MEMORY[0x1E4FBC860];
LABEL_25:
  uint64_t v114 = v23;
  uint64_t v18 = (char *)v112;
  if ((v15 & 0x8000000000000000) != 0 || (v15 & 0x4000000000000000) != 0)
  {
    swift_retain();
    uint64_t v23 = sub_1C277C5A0();
    if (!v23) {
      goto LABEL_46;
    }
LABEL_28:
    if (v23 >= 1)
    {
      uint64_t v36 = 0;
      while (1)
      {
        if ((v15 & 0xC000000000000001) != 0) {
          id v37 = (id)MEMORY[0x1C875C230](v36, v15);
        }
        else {
          id v37 = *(id *)(v15 + 8 * v36 + 32);
        }
        unint64_t v38 = v37;
        id v39 = objc_msgSend(v37, sel_metadata, v106);
        uint64_t v40 = sub_1C277B760();

        if (*(void *)(v40 + 16) && (unint64_t v41 = sub_1C2629588(0xD000000000000048, 0x80000001C278B730), (v42 & 1) != 0))
        {
          sub_1C263FED0(*(void *)(v40 + 56) + 32 * v41, (uint64_t)&v115);
        }
        else
        {
          long long v115 = 0u;
          long long v116 = 0u;
        }
        swift_bridgeObjectRelease();
        if (*((void *)&v116 + 1))
        {
          if (swift_dynamicCast())
          {
            swift_bridgeObjectRelease();
            sub_1C277C390();
            sub_1C277C3D0();
            sub_1C277C3E0();
            sub_1C277C3A0();
            goto LABEL_32;
          }
        }
        else
        {
          sub_1C262F2E4((uint64_t)&v115);
        }

LABEL_32:
        uint64_t v18 = (char *)v112;
        if (v23 == ++v36)
        {
          swift_release();
          uint64_t v23 = v114;
          uint64_t v22 = v110;
          goto LABEL_47;
        }
      }
    }
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  uint64_t v23 = *(void *)(v15 + 16);
  swift_retain();
  if (v23) {
    goto LABEL_28;
  }
LABEL_46:
  swift_release();
  uint64_t v23 = MEMORY[0x1E4FBC860];
LABEL_47:
  LODWORD(v11) = v23 < 0 || (v23 & 0x4000000000000000) != 0;
  if (v11 == 1)
  {
    swift_retain();
    if (!sub_1C277C5A0()) {
      goto LABEL_90;
    }
LABEL_52:
    if ((v23 & 0xC000000000000001) == 0)
    {
      if (!*(void *)(v23 + 16))
      {
        __break(1u);
LABEL_98:
        swift_once();
        goto LABEL_91;
      }
      id v44 = *(id *)(v23 + 32);
LABEL_55:
      uint64_t v45 = v44;
      swift_release();
      if (v11)
      {
        swift_bridgeObjectRetain();
        uint64_t v46 = sub_1C277C5A0();
        swift_release();
        if (v46 != 1)
        {

          swift_bridgeObjectRetain();
          uint64_t v47 = sub_1C277C5A0();
          swift_release_n();
          if (v47 < 2) {
            goto LABEL_71;
          }
          goto LABEL_66;
        }
      }
      else if (*(void *)(v23 + 16) != 1)
      {

        uint64_t v51 = *(void *)(v23 + 16);
        swift_release();
        if (v51 < 2)
        {
LABEL_71:
          swift_release();
          return;
        }
LABEL_66:
        if (qword_1EBB86260 != -1) {
          swift_once();
        }
        uint64_t v52 = sub_1C277B130();
        __swift_project_value_buffer(v52, (uint64_t)qword_1EBB86280);
        uint64_t v53 = sub_1C277B100();
        os_log_type_t v54 = sub_1C277BD20();
        if (os_log_type_enabled(v53, v54))
        {
          uint64_t v55 = (uint8_t *)swift_slowAlloc();
          uint64_t v56 = swift_slowAlloc();
          *(void *)&long long v115 = v56;
          *(_DWORD *)uint64_t v55 = 136446210;
          uint64_t v57 = sub_1C277C9E0();
          unint64_t v113 = sub_1C263FDFC(v57, v58, (uint64_t *)&v115);
          uint64_t v22 = v110;
          sub_1C277C0D0();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C2601000, v53, v54, "[%{public}s] More than one healthappd managed open transaction detected, discarding all open transactions and creating a fresh transaction", v55, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C875D230](v56, -1, -1);
          MEMORY[0x1C875D230](v55, -1, -1);
        }

        sub_1C26AE8EC(v22, v15, 0);
        goto LABEL_71;
      }
      swift_release();
      uint64_t v48 = sub_1C269FDF4();
      unint64_t v50 = v49;
      if (qword_1EBB842C8 != -1) {
        swift_once();
      }
      if (v50)
      {
        if (__PAIR128__(v50, v48) == xmmword_1EBB842B8)
        {
          swift_release();
          swift_bridgeObjectRelease();
LABEL_74:
          uint64_t v60 = v106;
          if (qword_1EBB86260 != -1) {
            swift_once();
          }
          uint64_t v61 = sub_1C277B130();
          __swift_project_value_buffer(v61, (uint64_t)qword_1EBB86280);
          id v62 = v45;
          uint64_t v63 = sub_1C277B100();
          os_log_type_t v64 = sub_1C277BD40();
          v65 = &selRef_relevantEndDate;
          if (os_log_type_enabled(v63, v64))
          {
            uint64_t v66 = swift_slowAlloc();
            uint64_t v112 = swift_slowAlloc();
            *(void *)&long long v115 = v112;
            *(_DWORD *)uint64_t v66 = 136446466;
            uint64_t v67 = sub_1C277C9E0();
            unint64_t v113 = sub_1C263FDFC(v67, v68, (uint64_t *)&v115);
            sub_1C277C0D0();
            swift_bridgeObjectRelease();
            *(_WORD *)(v66 + 12) = 2082;
            id v69 = objc_msgSend(v62, sel_UUID);
            sub_1C277A880();

            uint64_t v70 = sub_1C277A850();
            v71 = v18;
            unint64_t v73 = v72;
            v74 = *(void (**)(char *, uint64_t))(v60 + 8);
            uint64_t v75 = v60;
            uint64_t v76 = v107;
            v74(v71, v107);
            uint64_t v77 = v70;
            v65 = &selRef_relevantEndDate;
            unint64_t v113 = sub_1C263FDFC(v77, v73, (uint64_t *)&v115);
            sub_1C277C0D0();

            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1C2601000, v63, v64, "[%{public}s] Found only one healthappd managed open transaction, using %{public}s", (uint8_t *)v66, 0x16u);
            uint64_t v78 = v112;
            swift_arrayDestroy();
            uint64_t v22 = v110;
            MEMORY[0x1C875D230](v78, -1, -1);
            MEMORY[0x1C875D230](v66, -1, -1);
          }
          else
          {

            uint64_t v75 = v60;
            uint64_t v76 = v107;
          }
          id v91 = v22;
          id v92 = [v62 v65[168]];
          unint64_t v93 = v108;
          sub_1C277A880();

          (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v93, 0, 1, v76);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v93, 1, v76) == 1)
          {
            uint64_t v94 = 0;
          }
          else
          {
            uint64_t v94 = (void *)sub_1C277A860();
            (*(void (**)(char *, uint64_t))(v75 + 8))(v93, v76);
          }
          id v95 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B4C0]), sel_initWithHealthStore_transactionUUID_, v91, v94);

          type metadata accessor for CachingSharedSummaryTransactionBuilder();
          swift_allocObject();
          id v96 = v95;
          uint64_t v97 = sub_1C2662E08(v96, (uint64_t)sub_1C26AD760, 0);

          id v98 = objc_msgSend(v91, sel_profileIdentifier);
          sub_1C26AD768((uint64_t)v98, (uint64_t)v97);

          swift_release();
          return;
        }
        char v59 = sub_1C277C7E0();
        swift_bridgeObjectRelease();
        if (v59)
        {
          swift_release();
          goto LABEL_74;
        }
      }
      if (qword_1EBB86260 != -1) {
        swift_once();
      }
      uint64_t v79 = sub_1C277B130();
      __swift_project_value_buffer(v79, (uint64_t)qword_1EBB86280);
      id v80 = v45;
      v81 = sub_1C277B100();
      os_log_type_t v82 = sub_1C277BD40();
      if (os_log_type_enabled(v81, v82))
      {
        uint64_t v83 = swift_slowAlloc();
        uint64_t v84 = swift_slowAlloc();
        unint64_t v113 = v84;
        *(_DWORD *)uint64_t v83 = 136446722;
        uint64_t v85 = sub_1C277C9E0();
        *(void *)&long long v115 = sub_1C263FDFC(v85, v86, (uint64_t *)&v113);
        sub_1C277C0D0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v83 + 12) = 2080;
        *(void *)&long long v115 = sub_1C269FDF4();
        *((void *)&v115 + 1) = v87;
        sub_1C262F068(0, (unint64_t *)&qword_1EBB85920);
        uint64_t v88 = sub_1C277B860();
        *(void *)&long long v115 = sub_1C263FDFC(v88, v89, (uint64_t *)&v113);
        sub_1C277C0D0();

        swift_bridgeObjectRelease();
        *(_WORD *)(v83 + 22) = 2080;
        long long v90 = xmmword_1EBB842B8;
        swift_bridgeObjectRetain();
        *(void *)&long long v115 = sub_1C263FDFC(v90, *((unint64_t *)&v90 + 1), (uint64_t *)&v113);
        sub_1C277C0D0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2601000, v81, v82, "[%{public}s] Open transaction does not match healthappd managed transaction version %s does not match current version %s. Discarding all transactions and creating a fresh transaction.", (uint8_t *)v83, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1C875D230](v84, -1, -1);
        MEMORY[0x1C875D230](v83, -1, -1);
      }
      else
      {
      }
      sub_1C26AE8EC(v110, v15, 0);
      swift_release();

      return;
    }
LABEL_96:
    id v44 = (id)MEMORY[0x1C875C230](0, v23);
    goto LABEL_55;
  }
  uint64_t v43 = *(void *)(v23 + 16);
  swift_retain();
  if (v43) {
    goto LABEL_52;
  }
LABEL_90:
  swift_release();
  swift_release_n();
  if (qword_1EBB86260 != -1) {
    goto LABEL_98;
  }
LABEL_91:
  uint64_t v99 = sub_1C277B130();
  __swift_project_value_buffer(v99, (uint64_t)qword_1EBB86280);
  uint64_t v100 = sub_1C277B100();
  os_log_type_t v101 = sub_1C277BD40();
  if (os_log_type_enabled(v100, v101))
  {
    unint64_t v102 = (uint8_t *)swift_slowAlloc();
    uint64_t v103 = swift_slowAlloc();
    *(void *)&long long v115 = v103;
    *(_DWORD *)unint64_t v102 = 136446210;
    uint64_t v104 = sub_1C277C9E0();
    unint64_t v113 = sub_1C263FDFC(v104, v105, (uint64_t *)&v115);
    uint64_t v22 = v110;
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v100, v101, "[%{public}s] No healthappd managed open transactions, creating fresh transaction", v102, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v103, -1, -1);
    MEMORY[0x1C875D230](v102, -1, -1);
  }

  sub_1C26AE288(v22);
}

uint64_t sub_1C26AD760()
{
  return 0;
}

uint64_t sub_1C26AD768(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  uint64_t v7 = sub_1C277B630();
  uint64_t v22 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1C277B660();
  uint64_t v10 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (os_unfair_lock_s *)v3[2];
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  char v25 = 1;
  uint64_t v26 = v6;
  uint64_t v14 = (uint64_t *)&v13[4];
  unint64_t v15 = v13 + 6;
  os_unfair_lock_lock(v13 + 6);
  sub_1C26B3600(v14, aBlock);
  os_unfair_lock_unlock(v15);
  uint64_t v16 = aBlock[0];
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v16;
  *(void *)(v17 + 24) = a2;
  aBlock[4] = (uint64_t)sub_1C26B3060;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1C26254FC;
  aBlock[3] = (uint64_t)&block_descriptor_74;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  sub_1C277B650();
  uint64_t v27 = MEMORY[0x1E4FBC860];
  sub_1C2633AA0((unint64_t *)&qword_1EBB84A60, MEMORY[0x1E4FBCB00]);
  id v19 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1C2633CC0(0, (unint64_t *)&unk_1EBB85470, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C2634050((unint64_t *)&qword_1EBB85480, (unint64_t *)&unk_1EBB85470, v19);
  sub_1C277C120();
  MEMORY[0x1C875BDD0](0, v12, v9, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v21);
  return swift_release();
}

uint64_t sub_1C26ADABC(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  uint64_t v7 = sub_1C277B630();
  uint64_t v23 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1C277B660();
  uint64_t v10 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (os_unfair_lock_s *)v3[2];
  uint64_t v24 = a1;
  uint64_t v25 = 0;
  char v26 = -1;
  uint64_t v27 = v6;
  uint64_t v14 = (uint64_t *)&v13[4];
  unint64_t v15 = v13 + 6;
  os_unfair_lock_lock(v13 + 6);
  sub_1C26B2F9C(v14, aBlock);
  os_unfair_lock_unlock(v15);
  uint64_t v16 = aBlock[0];
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v16;
  *(void *)(v17 + 24) = a2;
  aBlock[4] = (uint64_t)sub_1C26B2FD8;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1C26254FC;
  aBlock[3] = (uint64_t)&block_descriptor_67;
  uint64_t v18 = _Block_copy(aBlock);
  id v19 = a2;
  sub_1C277B650();
  uint64_t v28 = MEMORY[0x1E4FBC860];
  sub_1C2633AA0((unint64_t *)&qword_1EBB84A60, MEMORY[0x1E4FBCB00]);
  id v20 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1C2633CC0(0, (unint64_t *)&unk_1EBB85470, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C2634050((unint64_t *)&qword_1EBB85480, (unint64_t *)&unk_1EBB85470, v20);
  sub_1C277C120();
  MEMORY[0x1C875BDD0](0, v12, v9, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v22);
  return swift_release();
}

uint64_t sub_1C26ADE10(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v6 = swift_bridgeObjectRetain() + 40;
    do
    {
      uint64_t v7 = *(void (**)(uint64_t *))(v6 - 8);
      uint64_t v8 = a2;
      char v9 = a3 & 1;
      swift_retain();
      v7(&v8);
      swift_release();
      v6 += 16;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C26ADED0@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, unsigned __int8 a4@<W3>, uint64_t *a5@<X8>)
{
  uint64_t v6 = *a1;
  if (!*(void *)(*a1 + 16)) {
    goto LABEL_6;
  }
  id v10 = a2;
  unint64_t v11 = sub_1C26344B4((uint64_t)v10);
  if ((v12 & 1) == 0)
  {

LABEL_6:
    uint64_t v14 = 0;
    unsigned __int8 v16 = -1;
    goto LABEL_7;
  }
  uint64_t v13 = *(void *)(v6 + 56) + 16 * v11;
  uint64_t v14 = *(void *)v13;
  char v15 = *(unsigned char *)(v13 + 8);
  sub_1C2633FC4(*(void *)v13, v15);

  if ((v15 & 1) == 0)
  {
    if (a4 == 0xFF)
    {
      id v29 = v10;
      sub_1C2633FC4(v14, 0);
      uint64_t v30 = sub_1C2689FE8((uint64_t)v29);
      unsigned __int8 v32 = v31;

      sub_1C2633FE8(v30, v32);
    }
    else
    {
      id v27 = v10;
      sub_1C2633FC4(v14, 0);
      sub_1C2633FD0(a3, a4);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v33 = *a1;
      *a1 = 0x8000000000000000;
      sub_1C268B540(a3, a4 & 1, v27, isUniquelyReferenced_nonNull_native);
      *a1 = v33;

      swift_bridgeObjectRelease();
    }
    uint64_t result = sub_1C263403C(v14, 0, MEMORY[0x1E4FBC898], MEMORY[0x1E4FBC8D0]);
    goto LABEL_13;
  }
  unsigned __int8 v16 = 1;
LABEL_7:
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1C277B130();
  __swift_project_value_buffer(v17, (uint64_t)qword_1EBB86280);
  sub_1C2633FD0(v14, v16);
  sub_1C2633FD0(v14, v16);
  uint64_t v18 = sub_1C277B100();
  os_log_type_t v19 = sub_1C277BD30();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v34 = v21;
    *(_DWORD *)uint64_t v20 = 136446466;
    uint64_t v22 = sub_1C277C9E0();
    sub_1C263FDFC(v22, v23, &v34);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2082;
    sub_1C2633FD0(v14, v16);
    sub_1C262F068(0, &qword_1EA3047F0);
    uint64_t v24 = sub_1C277B860();
    sub_1C263FDFC(v24, v25, &v34);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    sub_1C2633FE8(v14, v16);
    sub_1C2633FE8(v14, v16);
    _os_log_impl(&dword_1C2601000, v18, v19, "[%{public}s] Expected current state to be in progress, but is %{public}s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v21, -1, -1);
    MEMORY[0x1C875D230](v20, -1, -1);
  }
  else
  {
    sub_1C2633FE8(v14, v16);
    sub_1C2633FE8(v14, v16);
  }

  uint64_t result = sub_1C2633FE8(v14, v16);
  uint64_t v14 = MEMORY[0x1E4FBC860];
LABEL_13:
  *a5 = v14;
  return result;
}

void sub_1C26AE288(void *a1)
{
  sub_1C26AE5D0();
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B4C0]), sel_initWithHealthStore_, a1);
  sub_1C2633CC0(0, (unint64_t *)&qword_1EBB85218, (uint64_t (*)(uint64_t))sub_1C264EB14, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C277E480;
  *(void *)(inited + 32) = 0xD000000000000048;
  *(void *)(inited + 40) = 0x80000001C278B730;
  if (qword_1EBB842C8 != -1) {
    swift_once();
  }
  long long v5 = xmmword_1EBB842B8;
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(_OWORD *)(inited + 48) = v5;
  swift_bridgeObjectRetain();
  sub_1C262DBAC(inited);
  uint64_t v6 = (void *)sub_1C277B750();
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = v1;
  void v7[3] = a1;
  v7[4] = v3;
  v11[4] = sub_1C26B2F90;
  v11[5] = v7;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  void v11[2] = sub_1C264ABF4;
  v11[3] = &block_descriptor_61;
  uint64_t v8 = _Block_copy(v11);
  swift_retain();
  id v9 = a1;
  id v10 = v3;
  swift_release();
  objc_msgSend(v10, sel_addMetadata_completion_, v6, v8);
  _Block_release(v8);
}

void sub_1C26AE49C(int a1, id a2, uint64_t a3, void *a4, void *a5)
{
  if (a2)
  {
    id v7 = a2;
    id v8 = objc_msgSend(a4, sel_profileIdentifier);
    sub_1C26ADABC((uint64_t)v8, a2);

    id v9 = a2;
  }
  else
  {
    type metadata accessor for CachingSharedSummaryTransactionBuilder();
    swift_allocObject();
    id v11 = a5;
    char v12 = sub_1C2662E08(v11, (uint64_t)sub_1C26AD760, 0);

    id v13 = objc_msgSend(a4, sel_profileIdentifier);
    sub_1C26AD768((uint64_t)v13, (uint64_t)v12);
    swift_release();
    id v9 = v13;
  }
}

uint64_t sub_1C26AE5D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C277A840();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  long long v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1C277B130();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EBB86280);
  id v7 = sub_1C277B100();
  os_log_type_t v8 = sub_1C277BD40();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    v17[1] = v1;
    id v10 = (uint8_t *)v9;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v18 = v11;
    *(_DWORD *)id v10 = 136446210;
    uint64_t v12 = sub_1C277C9E0();
    void v17[2] = sub_1C263FDFC(v12, v13, &v18);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v7, v8, "[%{public}s] Setting user defaults flag to indicate all summaries need to be regenerated", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v11, -1, -1);
    MEMORY[0x1C875D230](v10, -1, -1);
  }

  uint64_t v18 = 0;
  unint64_t v19 = 0xE000000000000000;
  sub_1C277C2D0();
  swift_bridgeObjectRelease();
  uint64_t v18 = 0xD00000000000001DLL;
  unint64_t v19 = 0x80000001C278BCC0;
  sub_1C277A830();
  sub_1C2633AA0(&qword_1EBB82650, MEMORY[0x1E4F27928]);
  sub_1C277C7B0();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v14 = v18;
  uint64_t v15 = v19;
  swift_beginAccess();
  sub_1C26B2E1C(v14, v15);
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

void sub_1C26AE8EC(void *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  sub_1C2633CC0(0, &qword_1EBB82660, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v53 - v10;
  uint64_t v12 = sub_1C277A8A0();
  uint64_t v60 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!(a2 >> 62))
  {
    uint64_t v15 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v15 > a3) {
      goto LABEL_3;
    }
LABEL_12:
    if (qword_1EBB86260 == -1) {
      goto LABEL_13;
    }
    goto LABEL_32;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1C277C5A0();
  swift_bridgeObjectRelease();
  if (v15 <= a3) {
    goto LABEL_12;
  }
LABEL_3:
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v16 = (id)MEMORY[0x1C875C230](a3, a2);
    goto LABEL_7;
  }
  if (a3 < 0)
  {
    __break(1u);
    goto LABEL_31;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) <= (unint64_t)a3)
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_once();
LABEL_13:
    uint64_t v27 = sub_1C277B130();
    __swift_project_value_buffer(v27, (uint64_t)qword_1EBB86280);
    swift_bridgeObjectRetain_n();
    uint64_t v28 = sub_1C277B100();
    int v29 = sub_1C277BD40();
    if (os_log_type_enabled(v28, (os_log_type_t)v29))
    {
      int v57 = v29;
      os_log_t v59 = v28;
      uint64_t v30 = swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      aBlock[0] = v56;
      *(_DWORD *)uint64_t v30 = 136446466;
      uint64_t v31 = sub_1C277C9E0();
      uint64_t v64 = sub_1C263FDFC(v31, v32, aBlock);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      unint64_t v58 = (uint8_t *)v30;
      *(_WORD *)(v30 + 12) = 2082;
      uint64_t v33 = MEMORY[0x1E4FBC860];
      if (v15)
      {
        v53[1] = &v65;
        os_log_type_t v54 = a1;
        uint64_t v62 = v12;
        uint64_t v55 = v4;
        uint64_t v64 = MEMORY[0x1E4FBC860];
        sub_1C264872C(0, v15 & ~(v15 >> 63), 0);
        if (v15 < 0)
        {
          __break(1u);
          return;
        }
        uint64_t v34 = 0;
        unint64_t v61 = a2 & 0xC000000000000001;
        unint64_t v35 = (void (**)(char *, uint64_t))(v60 + 8);
        unint64_t v36 = a2;
        uint64_t v37 = v15;
        do
        {
          if (v61) {
            id v38 = (id)MEMORY[0x1C875C230](v34, a2);
          }
          else {
            id v38 = *(id *)(a2 + 8 * v34 + 32);
          }
          id v39 = v38;
          id v40 = objc_msgSend(v38, sel_UUID);
          sub_1C277A880();

          uint64_t v41 = sub_1C277A850();
          uint64_t v43 = v42;
          (*v35)(v14, v62);

          uint64_t v33 = v64;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C264872C(0, *(void *)(v33 + 16) + 1, 1);
            uint64_t v33 = v64;
          }
          unint64_t v45 = *(void *)(v33 + 16);
          unint64_t v44 = *(void *)(v33 + 24);
          if (v45 >= v44 >> 1)
          {
            sub_1C264872C(v44 > 1, v45 + 1, 1);
            uint64_t v33 = v64;
          }
          ++v34;
          *(void *)(v33 + 16) = v45 + 1;
          unint64_t v46 = v33 + 16 * v45;
          *(void *)(v46 + 32) = v41;
          *(void *)(v46 + 40) = v43;
          a2 = v36;
        }
        while (v37 != v34);
        a1 = v54;
      }
      uint64_t v47 = v58;
      uint64_t v48 = MEMORY[0x1C875B960](v33, MEMORY[0x1E4FBB1A0]);
      unint64_t v50 = v49;
      swift_bridgeObjectRelease();
      uint64_t v64 = sub_1C263FDFC(v48, v50, aBlock);
      sub_1C277C0D0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      os_log_t v51 = v59;
      _os_log_impl(&dword_1C2601000, v59, (os_log_type_t)v57, "[%{public}s] Creating new transaction after successfully discarding all transactions: %{public}s", v47, 0x16u);
      uint64_t v52 = v56;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v52, -1, -1);
      MEMORY[0x1C875D230](v47, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1C26AE288(a1);
    return;
  }
  id v16 = *(id *)(a2 + 8 * a3 + 32);
LABEL_7:
  uint64_t v17 = v16;
  id v18 = a1;
  id v19 = objc_msgSend(v17, sel_UUID);
  sub_1C277A880();

  uint64_t v20 = v60;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v11, 0, 1, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v11, 1, v12) == 1)
  {
    uint64_t v21 = 0;
  }
  else
  {
    uint64_t v21 = (void *)sub_1C277A860();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v11, v12);
  }
  id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B4C0]), sel_initWithHealthStore_transactionUUID_, v18, v21);

  unint64_t v23 = (void *)swift_allocObject();
  v23[2] = v17;
  v23[3] = v4;
  v23[4] = v18;
  v23[5] = a2;
  v23[6] = a3;
  v23[7] = v8;
  aBlock[4] = (uint64_t)sub_1C26B2E0C;
  aBlock[5] = (uint64_t)v23;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1C264ABF4;
  aBlock[3] = (uint64_t)&block_descriptor_55;
  uint64_t v24 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v25 = v18;
  id v26 = v17;
  swift_retain();
  swift_release();
  objc_msgSend(v22, sel_discardWithCompletion_, v24);
  _Block_release(v24);
}

void sub_1C26AEFC4(int a1, void *a2, void *a3, uint64_t a4, void *a5, void *a6, uint64_t a7)
{
  uint64_t v14 = sub_1C277A8A0();
  uint64_t v58 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  id v16 = (char *)v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v17 = a2;
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_1C277B130();
    __swift_project_value_buffer(v18, (uint64_t)qword_1EBB86280);
    id v19 = a3;
    id v20 = a2;
    id v21 = v19;
    id v22 = a2;
    unint64_t v23 = sub_1C277B100();
    os_log_type_t v24 = sub_1C277BD20();
    int v25 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v26 = swift_slowAlloc();
      int v57 = a5;
      uint64_t v27 = v26;
      uint64_t v56 = swift_slowAlloc();
      uint64_t v60 = v56;
      *(_DWORD *)uint64_t v27 = 136446722;
      uint64_t v28 = sub_1C277C9E0();
      int v55 = v25;
      uint64_t v59 = sub_1C263FDFC(v28, v29, &v60);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2082;
      id v30 = objc_msgSend(v21, sel_UUID);
      sub_1C277A880();

      uint64_t v31 = sub_1C277A850();
      unint64_t v33 = v32;
      (*(void (**)(char *, uint64_t))(v58 + 8))(v16, v14);
      uint64_t v59 = sub_1C263FDFC(v31, v33, &v60);
      sub_1C277C0D0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 22) = 2082;
      uint64_t v59 = (uint64_t)a2;
      id v34 = a2;
      sub_1C26532A4();
      uint64_t v35 = sub_1C277B860();
      uint64_t v59 = sub_1C263FDFC(v35, v36, &v60);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C2601000, v23, (os_log_type_t)v55, "[%{public}s] Failed to discard transaction %{public}s: %{public}s", (uint8_t *)v27, 0x20u);
      uint64_t v37 = v56;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v37, -1, -1);
      uint64_t v38 = v27;
      a5 = v57;
      MEMORY[0x1C875D230](v38, -1, -1);
    }
    else
    {
    }
    id v53 = objc_msgSend(a5, sel_profileIdentifier);
    sub_1C26ADABC((uint64_t)v53, a2);
  }
  else
  {
    int v55 = a1;
    uint64_t v56 = a7;
    int v57 = a6;
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v39 = sub_1C277B130();
    __swift_project_value_buffer(v39, (uint64_t)qword_1EBB86280);
    id v40 = a3;
    uint64_t v41 = sub_1C277B100();
    os_log_type_t v42 = sub_1C277BD40();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = swift_slowAlloc();
      v54[0] = swift_slowAlloc();
      uint64_t v60 = v54[0];
      *(_DWORD *)uint64_t v43 = 136446722;
      uint64_t v44 = sub_1C277C9E0();
      v54[1] = a4;
      uint64_t v59 = sub_1C263FDFC(v44, v45, &v60);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2082;
      id v46 = objc_msgSend(v40, sel_UUID);
      sub_1C277A880();

      uint64_t v47 = sub_1C277A850();
      uint64_t v48 = v14;
      unint64_t v49 = a5;
      unint64_t v51 = v50;
      (*(void (**)(char *, uint64_t))(v58 + 8))(v16, v48);
      uint64_t v59 = sub_1C263FDFC(v47, v51, &v60);
      sub_1C277C0D0();

      a5 = v49;
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 22) = 1024;
      LODWORD(v59) = v55 & 1;
      sub_1C277C0D0();
      _os_log_impl(&dword_1C2601000, v41, v42, "[%{public}s] Discard transaction %{public}s %{BOOL}d", (uint8_t *)v43, 0x1Cu);
      uint64_t v52 = v54[0];
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v52, -1, -1);
      MEMORY[0x1C875D230](v43, -1, -1);
    }
    else
    {
    }
    if (__OFADD__(v56, 1)) {
      __break(1u);
    }
    else {
      sub_1C26AE8EC(a5, v57, v56 + 1);
    }
  }
}

void sub_1C26AF5D4(void *a1, int a2, uint64_t a3, uint64_t a4)
{
  long long v5 = v4;
  uint64_t v78 = a3;
  int v79 = a2;
  uint64_t v8 = *v4;
  uint64_t v81 = sub_1C277A8A0();
  uint64_t v76 = *(void *)(v81 - 8);
  MEMORY[0x1F4188790](v81);
  uint64_t v10 = (char *)v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1C277B130();
  uint64_t v12 = __swift_project_value_buffer(v11, (uint64_t)qword_1EBB86280);
  id v13 = a1;
  uint64_t v80 = v12;
  uint64_t v14 = sub_1C277B100();
  os_log_type_t v15 = sub_1C277BD40();
  BOOL v16 = os_log_type_enabled(v14, v15);
  id v17 = &selRef_relevantEndDate;
  uint64_t v77 = a4;
  uint64_t v82 = v8;
  if (v16)
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v84 = v19;
    *(_DWORD *)uint64_t v18 = 136446466;
    uint64_t v20 = sub_1C277C9E0();
    uint64_t v83 = sub_1C263FDFC(v20, v21, &v84);
    uint64_t v75 = v5;
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    id v22 = objc_msgSend(v13, sel_profileIdentifier);
    id v23 = objc_msgSend(v22, sel_identifier);

    sub_1C277A880();
    uint64_t v24 = sub_1C277A850();
    unint64_t v26 = v25;
    (*(void (**)(char *, uint64_t))(v76 + 8))(v10, v81);
    uint64_t v83 = sub_1C263FDFC(v24, v26, &v84);
    long long v5 = v75;
    sub_1C277C0D0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v14, v15, "[%{public}s] Getting current transaction for committing for %{public}s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    uint64_t v27 = v19;
    id v17 = &selRef_relevantEndDate;
    MEMORY[0x1C875D230](v27, -1, -1);
    MEMORY[0x1C875D230](v18, -1, -1);
  }
  else
  {
  }
  id v28 = [v13 v17[122]];
  v71[-2] = MEMORY[0x1F4188790](v28);
  id v30 = (uint64_t *)&v29[4];
  uint64_t v31 = v29 + 6;
  os_unfair_lock_lock(v29 + 6);
  sub_1C26B2794(v30, &v84);
  os_unfair_lock_unlock(v31);
  uint64_t v32 = v84;
  if (v84)
  {
    id v74 = v28;
    swift_retain_n();
    id v33 = v13;
    id v34 = sub_1C277B100();
    os_log_type_t v35 = sub_1C277BD40();
    int v36 = v35;
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v80 = swift_slowAlloc();
      uint64_t v84 = v80;
      *(_DWORD *)uint64_t v37 = 136446722;
      os_log_t v73 = v34;
      uint64_t v38 = sub_1C277C9E0();
      int v72 = v36;
      uint64_t v83 = sub_1C263FDFC(v38, v39, &v84);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2082;
      v71[1] = v37 + 14;
      id v40 = objc_msgSend(*(id *)(v32 + 16), sel_transactionUUID);
      sub_1C277A880();

      uint64_t v41 = sub_1C277A850();
      uint64_t v75 = v5;
      unint64_t v43 = v42;
      uint64_t v76 = *(void *)(v76 + 8);
      ((void (*)(char *, uint64_t))v76)(v10, v81);
      uint64_t v83 = sub_1C263FDFC(v41, v43, &v84);
      sub_1C277C0D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 22) = 2082;
      id v44 = [v33 v17[122]];
      id v45 = objc_msgSend(v44, sel_identifier);

      sub_1C277A880();
      uint64_t v46 = sub_1C277A850();
      unint64_t v48 = v47;
      ((void (*)(char *, uint64_t))v76)(v10, v81);
      uint64_t v49 = v82;
      uint64_t v83 = sub_1C263FDFC(v46, v48, &v84);
      sub_1C277C0D0();

      long long v5 = v75;
      swift_bridgeObjectRelease();
      os_log_t v50 = v73;
      _os_log_impl(&dword_1C2601000, v73, (os_log_type_t)v72, "[%{public}s] Committing current transaction %{public}s for %{public}s", (uint8_t *)v37, 0x20u);
      uint64_t v51 = v80;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v51, -1, -1);
      MEMORY[0x1C875D230](v37, -1, -1);

      uint64_t v52 = v77;
    }
    else
    {

      swift_release_n();
      uint64_t v52 = v77;
      uint64_t v49 = v82;
    }
    char v61 = v79;
    sub_1C2644ED8(0, &qword_1EBB842D8);
    unint64_t v62 = sub_1C277417C();
    uint64_t v63 = swift_allocObject();
    *(void *)(v63 + 16) = v32;
    *(void *)(v63 + 24) = v5;
    uint64_t v64 = v78;
    *(void *)(v63 + 32) = v33;
    *(void *)(v63 + 40) = v64;
    *(void *)(v63 + 48) = v52;
    *(void *)(v63 + 56) = v62;
    *(unsigned char *)(v63 + 64) = v61 & 1;
    *(void *)(v63 + 72) = v49;
    uint64_t v65 = (void *)swift_allocObject();
    v65[2] = v32;
    v65[3] = v62;
    v65[4] = sub_1C26B2868;
    v65[5] = v63;
    uint64_t v66 = swift_allocObject();
    *(void *)(v66 + 16) = sub_1C26B2868;
    *(void *)(v66 + 24) = v63;
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    id v67 = v33;
    swift_retain();
    swift_retain();
    sub_1C261ADFC();
    swift_release_n();

    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    id v53 = sub_1C277B100();
    os_log_type_t v54 = sub_1C277BD40();
    if (os_log_type_enabled(v53, v54))
    {
      id v74 = v28;
      int v55 = (uint8_t *)swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      uint64_t v84 = v56;
      *(_DWORD *)int v55 = 136446210;
      uint64_t v57 = v82;
      uint64_t v58 = sub_1C277C9E0();
      uint64_t v83 = sub_1C263FDFC(v58, v59, &v84);
      id v28 = v74;
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v53, v54, "[%{public}s] No transaction found, fetching or creating a new one for committing", v55, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v56, -1, -1);
      MEMORY[0x1C875D230](v55, -1, -1);

      uint64_t v60 = v77;
    }
    else
    {

      uint64_t v60 = v77;
      uint64_t v57 = v82;
    }
    uint64_t v68 = v78;
    uint64_t v69 = swift_allocObject();
    *(void *)(v69 + 16) = v5;
    *(void *)(v69 + 24) = v13;
    *(unsigned char *)(v69 + 32) = v79 & 1;
    *(void *)(v69 + 40) = v68;
    *(void *)(v69 + 48) = v60;
    *(void *)(v69 + 56) = v57;
    id v70 = v13;
    swift_retain();
    swift_retain();
    sub_1C2632DE0(v70, (void (*)(void *, uint64_t))sub_1C26B27F8, v69);
    swift_release();
  }
}

void sub_1C26AFF08(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = *a1;
  if (!*(void *)(*a1 + 16)) {
    goto LABEL_7;
  }
  id v6 = a2;
  unint64_t v7 = sub_1C26344B4((uint64_t)v6);
  if ((v8 & 1) == 0)
  {

LABEL_7:
    uint64_t v10 = 0;
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v4 + 56) + 16 * v7;
  uint64_t v10 = *(void *)v9;
  int v11 = *(unsigned __int8 *)(v9 + 8);
  sub_1C2633FC4(*(void *)v9, *(unsigned char *)(v9 + 8));

  if (v11 != 1)
  {
    sub_1C263403C(v10, 0, MEMORY[0x1E4FBC898], MEMORY[0x1E4FBC8D0]);
    goto LABEL_7;
  }
  id v12 = v6;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = *a1;
  *a1 = 0x8000000000000000;
  sub_1C268B540(MEMORY[0x1E4FBC860], 0, v12, isUniquelyReferenced_nonNull_native);
  *a1 = v14;

  swift_bridgeObjectRelease();
LABEL_8:
  *a3 = v10;
}

uint64_t sub_1C26B002C(void *a1, char a2, uint64_t a3, void *a4, char a5, void (*a6)(void *), uint64_t a7)
{
  uint64_t v13 = sub_1C277A8A0();
  MEMORY[0x1F4188790](v13);
  BOOL v16 = (char *)v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0) {
    return sub_1C26AF5D4(a4, a5 & 1, a6, a7);
  }
  uint64_t v47 = v14;
  unint64_t v48 = a6;
  id v18 = a1;
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1C277B130();
  __swift_project_value_buffer(v19, (uint64_t)qword_1EBB86280);
  sub_1C26B3334(a1, 1);
  id v20 = a4;
  sub_1C26B3334(a1, 1);
  id v21 = v20;
  id v22 = sub_1C277B100();
  os_log_type_t v23 = sub_1C277BD40();
  int v24 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    uint64_t v50 = v46;
    *(_DWORD *)uint64_t v25 = 136446722;
    int v45 = v24;
    uint64_t v26 = sub_1C277C9E0();
    uint64_t v49 = sub_1C263FDFC(v26, v27, &v50);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2082;
    v44[1] = v25 + 14;
    id v28 = objc_msgSend(v21, sel_profileIdentifier);
    id v29 = objc_msgSend(v28, sel_identifier);

    sub_1C277A880();
    uint64_t v30 = sub_1C277A850();
    unint64_t v32 = v31;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v16, v13);
    uint64_t v49 = sub_1C263FDFC(v30, v32, &v50);
    sub_1C277C0D0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 22) = 2082;
    uint64_t v49 = (uint64_t)a1;
    id v33 = a1;
    sub_1C26532A4();
    uint64_t v34 = sub_1C277B860();
    uint64_t v49 = sub_1C263FDFC(v34, v35, &v50);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    int v36 = (uint64_t (*)(void))MEMORY[0x1E4FBC8D0];
    uint64_t v37 = (uint64_t (*)(void))MEMORY[0x1E4FBC8B8];
    sub_1C263403C((uint64_t)a1, 1, MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC8B8]);
    sub_1C263403C((uint64_t)a1, 1, v36, v37);
    _os_log_impl(&dword_1C2601000, v22, (os_log_type_t)v45, "[%{public}s] Failed to get current transaction for %{public}s: %{public}s", (uint8_t *)v25, 0x20u);
    uint64_t v38 = v46;
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v38, -1, -1);
    MEMORY[0x1C875D230](v25, -1, -1);
  }
  else
  {

    unint64_t v39 = (uint64_t (*)(void))MEMORY[0x1E4FBC8D0];
    id v40 = (uint64_t (*)(void))MEMORY[0x1E4FBC8B8];
    sub_1C263403C((uint64_t)a1, 1, MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC8B8]);
    sub_1C263403C((uint64_t)a1, 1, v39, v40);
  }

  id v41 = a1;
  v48(a1);
  unint64_t v42 = (uint64_t (*)(void))MEMORY[0x1E4FBC8D0];
  unint64_t v43 = (uint64_t (*)(void))MEMORY[0x1E4FBC8B8];
  sub_1C263403C((uint64_t)a1, 1, MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC8B8]);
  return sub_1C263403C((uint64_t)a1, 1, v42, v43);
}

void sub_1C26B04DC(void *a1, uint64_t a2, uint64_t a3, void *a4, os_log_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9)
{
  uint64_t v16 = sub_1C277A8A0();
  uint64_t v74 = *(void *)(v16 - 8);
  uint64_t v75 = v16;
  MEMORY[0x1F4188790](v16);
  id v18 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v19 = a1;
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1C277B130();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EBB86280);
    swift_retain();
    id v21 = a1;
    swift_retain();
    id v22 = a1;
    os_log_type_t v23 = sub_1C277B100();
    os_log_type_t v24 = sub_1C277BD20();
    int v25 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v72 = a3;
      uint64_t v27 = v26;
      uint64_t v71 = swift_slowAlloc();
      uint64_t v77 = v71;
      *(_DWORD *)uint64_t v27 = 136446722;
      LODWORD(v70) = v25;
      uint64_t v28 = sub_1C277C9E0();
      uint64_t v76 = sub_1C263FDFC(v28, v29, &v77);
      uint64_t v73 = a6;
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2082;
      id v30 = objc_msgSend(*(id *)(a2 + 16), sel_transactionUUID);
      sub_1C277A880();

      uint64_t v31 = sub_1C277A850();
      os_log_t v69 = v23;
      unint64_t v32 = a5;
      id v33 = a4;
      unint64_t v35 = v34;
      (*(void (**)(char *, uint64_t))(v74 + 8))(v18, v75);
      uint64_t v76 = sub_1C263FDFC(v31, v35, &v77);
      sub_1C277C0D0();
      swift_release_n();
      a4 = v33;
      a5 = v32;
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 22) = 2082;
      uint64_t v76 = (uint64_t)a1;
      id v36 = a1;
      sub_1C26532A4();
      uint64_t v37 = sub_1C277B860();
      uint64_t v76 = sub_1C263FDFC(v37, v38, &v77);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();

      os_log_t v39 = v69;
      _os_log_impl(&dword_1C2601000, v69, (os_log_type_t)v70, "[%{public}s] Failed to add metadata %{public}s: %{public}s", (uint8_t *)v27, 0x20u);
      uint64_t v40 = v71;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v40, -1, -1);
      MEMORY[0x1C875D230](v27, -1, -1);
    }
    else
    {
      swift_release_n();
    }
    id v59 = objc_msgSend(a4, sel_profileIdentifier);
    sub_1C26ADABC((uint64_t)v59, a1);

    id v60 = a1;
    ((void (*)(void *))a5)(a1);
  }
  else
  {
    LODWORD(v71) = a8;
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v41 = sub_1C277B130();
    __swift_project_value_buffer(v41, (uint64_t)qword_1EBB86280);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    unint64_t v42 = sub_1C277B100();
    os_log_type_t v43 = sub_1C277BD40();
    int v44 = v43;
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v45 = swift_slowAlloc();
      os_log_t v69 = a5;
      uint64_t v46 = v45;
      uint64_t v68 = swift_slowAlloc();
      uint64_t v77 = v68;
      *(_DWORD *)uint64_t v46 = 136446722;
      int v67 = v44;
      uint64_t v47 = sub_1C277C9E0();
      id v70 = a4;
      uint64_t v76 = sub_1C263FDFC(v47, v48, &v77);
      uint64_t v72 = a3;
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v46 + 12) = 2082;
      id v49 = objc_msgSend(*(id *)(a2 + 16), sel_transactionUUID);
      sub_1C277A880();

      uint64_t v50 = sub_1C277A850();
      uint64_t v73 = a6;
      unint64_t v52 = v51;
      (*(void (**)(char *, uint64_t))(v74 + 8))(v18, v75);
      uint64_t v76 = sub_1C263FDFC(v50, v52, &v77);
      sub_1C277C0D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v46 + 22) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v53 = sub_1C277B770();
      unint64_t v55 = v54;
      swift_bridgeObjectRelease();
      uint64_t v56 = v53;
      a6 = v73;
      uint64_t v76 = sub_1C263FDFC(v56, v55, &v77);
      a3 = v72;
      sub_1C277C0D0();
      swift_bridgeObjectRelease_n();
      a4 = v70;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v42, (os_log_type_t)v67, "[%{public}s] Committing transaction %{public}s after adding metadata: %{public}s", (uint8_t *)v46, 0x20u);
      uint64_t v57 = v68;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v57, -1, -1);
      uint64_t v58 = v46;
      a5 = v69;
      MEMORY[0x1C875D230](v58, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
    char v61 = v71;
    unint64_t v62 = (void *)swift_allocObject();
    v62[2] = a2;
    v62[3] = a3;
    v62[4] = a4;
    v62[5] = a5;
    v62[6] = a6;
    v62[7] = a9;
    uint64_t v63 = swift_allocObject();
    *(void *)(v63 + 16) = a2;
    *(unsigned char *)(v63 + 24) = v61 & 1;
    *(void *)(v63 + 32) = sub_1C26B3288;
    *(void *)(v63 + 40) = v62;
    uint64_t v64 = swift_allocObject();
    *(void *)(v64 + 16) = sub_1C26B3288;
    *(void *)(v64 + 24) = v62;
    swift_retain_n();
    swift_retain_n();
    swift_retain();
    id v65 = a4;
    swift_retain();
    sub_1C261ADFC();
    swift_release();
    swift_release();
    swift_release();
  }
}

void sub_1C26B0C84(void *a1, char a2, uint64_t a3, uint64_t a4, id a5, void (*a6)(void), uint64_t a7)
{
  uint64_t v14 = sub_1C277A8A0();
  uint64_t v53 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v54 = a5;
    id v30 = a1;
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_1C277B130();
    __swift_project_value_buffer(v31, (uint64_t)qword_1EBB86280);
    swift_retain();
    sub_1C26B331C(a1);
    swift_retain();
    sub_1C26B331C(a1);
    unint64_t v32 = sub_1C277B100();
    os_log_type_t v33 = sub_1C277BD20();
    int v34 = v33;
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v35 = swift_slowAlloc();
      uint64_t v56 = a7;
      uint64_t v36 = v35;
      uint64_t v51 = swift_slowAlloc();
      uint64_t v58 = v51;
      *(_DWORD *)uint64_t v36 = 136446722;
      int v50 = v34;
      uint64_t v37 = sub_1C277C9E0();
      uint64_t v55 = a4;
      uint64_t v57 = sub_1C263FDFC(v37, v38, &v58);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 12) = 2082;
      id v39 = objc_msgSend(*(id *)(a3 + 16), sel_transactionUUID);
      sub_1C277A880();

      uint64_t v40 = sub_1C277A850();
      unint64_t v52 = a6;
      unint64_t v42 = v41;
      (*(void (**)(char *, uint64_t))(v53 + 8))(v16, v14);
      uint64_t v57 = sub_1C263FDFC(v40, v42, &v58);
      sub_1C277C0D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 22) = 2082;
      uint64_t v57 = (uint64_t)a1;
      id v43 = a1;
      sub_1C26532A4();
      uint64_t v44 = sub_1C277B860();
      uint64_t v57 = sub_1C263FDFC(v44, v45, &v58);
      a6 = v52;
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      sub_1C26B3328(a1);
      sub_1C26B3328(a1);
      _os_log_impl(&dword_1C2601000, v32, (os_log_type_t)v50, "[%{public}s] Using old transaction %{public}s as commit failed: %{public}s", (uint8_t *)v36, 0x20u);
      uint64_t v46 = v51;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v46, -1, -1);
      MEMORY[0x1C875D230](v36, -1, -1);
    }
    else
    {
      swift_release_n();
      sub_1C26B3328(a1);
      sub_1C26B3328(a1);
    }

    id v47 = objc_msgSend(v54, sel_profileIdentifier);
    sub_1C26AD768((uint64_t)v47, a3);

    id v48 = a1;
    a6(a1);
    sub_1C26B3328(a1);
    sub_1C26B3328(a1);
  }
  else
  {
    uint64_t v55 = a4;
    uint64_t v56 = a7;
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1C277B130();
    __swift_project_value_buffer(v17, (uint64_t)qword_1EBB86280);
    swift_retain_n();
    id v18 = sub_1C277B100();
    os_log_type_t v19 = sub_1C277BD40();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      unint64_t v52 = a6;
      uint64_t v21 = v20;
      uint64_t v51 = swift_slowAlloc();
      uint64_t v58 = v51;
      *(_DWORD *)uint64_t v21 = 136446466;
      uint64_t v22 = sub_1C277C9E0();
      id v54 = a5;
      uint64_t v57 = sub_1C263FDFC(v22, v23, &v58);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2082;
      id v24 = objc_msgSend(*(id *)(a3 + 16), sel_transactionUUID);
      sub_1C277A880();

      uint64_t v25 = sub_1C277A850();
      unint64_t v27 = v26;
      (*(void (**)(char *, uint64_t))(v53 + 8))(v16, v14);
      uint64_t v57 = sub_1C263FDFC(v25, v27, &v58);
      a5 = v54;
      sub_1C277C0D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v18, v19, "[%{public}s] Successfully committed transaction %{public}s", (uint8_t *)v21, 0x16u);
      uint64_t v28 = v51;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v28, -1, -1);
      uint64_t v29 = v21;
      a6 = v52;
      MEMORY[0x1C875D230](v29, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    sub_1C26B12B8(a5);
    a6(0);
  }
}

void sub_1C26B12B8(void *a1)
{
  uint64_t v3 = *v1;
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B4C0]), sel_initWithHealthStore_, a1);
  sub_1C2633CC0(0, (unint64_t *)&qword_1EBB85218, (uint64_t (*)(uint64_t))sub_1C264EB14, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C277E480;
  *(void *)(inited + 32) = 0xD000000000000048;
  *(void *)(inited + 40) = 0x80000001C278B730;
  if (qword_1EBB842C8 != -1) {
    swift_once();
  }
  long long v6 = xmmword_1EBB842B8;
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(_OWORD *)(inited + 48) = v6;
  swift_bridgeObjectRetain();
  sub_1C262DBAC(inited);
  unint64_t v7 = (void *)sub_1C277B750();
  swift_bridgeObjectRelease();
  char v8 = (void *)swift_allocObject();
  v8[2] = v1;
  v8[3] = a1;
  v8[4] = v4;
  v8[5] = v3;
  v12[4] = sub_1C26B2D5C;
  v12[5] = v8;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  v12[2] = sub_1C264ABF4;
  v12[3] = &block_descriptor_43;
  uint64_t v9 = _Block_copy(v12);
  swift_retain();
  id v10 = a1;
  id v11 = v4;
  swift_release();
  objc_msgSend(v11, sel_addMetadata_completion_, v7, v9);
  _Block_release(v9);
}

void sub_1C26B14F8(int a1, id a2, uint64_t a3, void *a4, void *a5, uint64_t a6)
{
  if (a2)
  {
    id v10 = a2;
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1C277B130();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EBB86280);
    id v12 = sub_1C277B100();
    os_log_type_t v13 = sub_1C277BD20();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      aBlock[0] = v15;
      *(_DWORD *)uint64_t v14 = 136446210;
      uint64_t v16 = sub_1C277C9E0();
      sub_1C263FDFC(v16, v17, aBlock);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v12, v13, "[%{public}s] Failed to set healthappd managed transaction metadata to new transaction", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v15, -1, -1);
      MEMORY[0x1C875D230](v14, -1, -1);
    }

    sub_1C26AE5D0();
    id v18 = objc_msgSend(a4, sel_profileIdentifier);
    sub_1C26ADABC((uint64_t)v18, a2);
  }
  else
  {
    uint64_t v20 = (void *)swift_allocObject();
    void v20[2] = a5;
    v20[3] = a3;
    v20[4] = a4;
    v20[5] = a6;
    aBlock[4] = (uint64_t)sub_1C26B2DB0;
    aBlock[5] = (uint64_t)v20;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1C264ABF4;
    aBlock[3] = (uint64_t)&block_descriptor_49;
    uint64_t v21 = _Block_copy(aBlock);
    id v22 = a5;
    swift_retain();
    id v23 = a4;
    swift_release();
    objc_msgSend(v22, sel_reuseAllSummariesWithPackage_completion_, 0, v21);
    _Block_release(v21);
  }
}

void sub_1C26B1798(int a1, void *a2, void *a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v53 = a6;
  id v56 = a5;
  int v51 = a1;
  uint64_t v9 = sub_1C277A8A0();
  uint64_t v54 = *(void *)(v9 - 8);
  uint64_t v55 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = &qword_1EBB85FF0[2];
  if (a2)
  {
    id v13 = a2;
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1C277B130();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EBB86280);
    id v15 = a2;
    id v16 = a3;
    id v17 = a2;
    id v18 = v16;
    os_log_type_t v19 = sub_1C277B100();
    os_log_type_t v20 = sub_1C277BD20();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      int v50 = a3;
      uint64_t v22 = v21;
      uint64_t v49 = swift_slowAlloc();
      uint64_t v58 = v49;
      *(_DWORD *)uint64_t v22 = 136446722;
      uint64_t v23 = sub_1C277C9E0();
      uint64_t v57 = sub_1C263FDFC(v23, v24, &v58);
      uint64_t v52 = a4;
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2082;
      id v25 = objc_msgSend(v18, sel_transactionUUID);
      sub_1C277A880();

      uint64_t v26 = sub_1C277A850();
      unint64_t v28 = v27;
      (*(void (**)(char *, uint64_t))(v54 + 8))(v11, v55);
      uint64_t v57 = sub_1C263FDFC(v26, v28, &v58);
      sub_1C277C0D0();

      id v12 = qword_1EBB85FF0 + 16;
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 22) = 2082;
      uint64_t v57 = (uint64_t)a2;
      id v29 = a2;
      sub_1C26532A4();
      uint64_t v30 = sub_1C277B860();
      uint64_t v57 = sub_1C263FDFC(v30, v31, &v58);
      a4 = v52;
      sub_1C277C0D0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C2601000, v19, v20, "[%{public}s] Setting flag to regenerate all summaries since unable to reuse all transactions for %{public}s: %{public}s", (uint8_t *)v22, 0x20u);
      uint64_t v32 = v49;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v32, -1, -1);
      uint64_t v33 = v22;
      a3 = v50;
      MEMORY[0x1C875D230](v33, -1, -1);
    }
    else
    {
    }
    sub_1C26AE5D0();
  }
  if (v12[76] != -1) {
    swift_once();
  }
  uint64_t v34 = sub_1C277B130();
  __swift_project_value_buffer(v34, (uint64_t)qword_1EBB86280);
  id v35 = a3;
  uint64_t v36 = sub_1C277B100();
  os_log_type_t v37 = sub_1C277BD40();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    uint64_t v58 = v39;
    *(_DWORD *)uint64_t v38 = 136446722;
    uint64_t v40 = sub_1C277C9E0();
    uint64_t v52 = a4;
    uint64_t v57 = sub_1C263FDFC(v40, v41, &v58);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 1024;
    LODWORD(v57) = v51 & 1;
    sub_1C277C0D0();
    *(_WORD *)(v38 + 18) = 2082;
    id v42 = objc_msgSend(v35, sel_transactionUUID);
    sub_1C277A880();

    uint64_t v43 = sub_1C277A850();
    unint64_t v45 = v44;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v11, v55);
    uint64_t v57 = sub_1C263FDFC(v43, v45, &v58);
    sub_1C277C0D0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v36, v37, "[%{public}s] Reuse all summaries success %{BOOL}d for new transaction %{public}s", (uint8_t *)v38, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v39, -1, -1);
    MEMORY[0x1C875D230](v38, -1, -1);
  }
  else
  {
  }
  type metadata accessor for CachingSharedSummaryTransactionBuilder();
  swift_allocObject();
  id v46 = v35;
  id v47 = sub_1C2662E08(v46, (uint64_t)sub_1C26AD760, 0);

  id v48 = objc_msgSend(v56, sel_profileIdentifier);
  sub_1C26AD768((uint64_t)v48, (uint64_t)v47);
  swift_release();
}

void sub_1C26B1DA4()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (uint64_t *)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1C26B28F0(v2);
  os_unfair_lock_unlock(v3);
}

void sub_1C26B1E00(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  if (*(void *)(*a1 + 16))
  {
    id v3 = a2;
    unint64_t v4 = sub_1C26344B4((uint64_t)v3);
    if (v5)
    {
      uint64_t v6 = *(void *)(v2 + 56) + 16 * v4;
      uint64_t v7 = *(void *)v6;
      int v8 = *(unsigned __int8 *)(v6 + 8);
      sub_1C2633FC4(*(void *)v6, *(unsigned char *)(v6 + 8));

      if (v8 == 1)
      {
        sub_1C263403C(v7, 1, MEMORY[0x1E4FBC898], MEMORY[0x1E4FBC8D0]);
        id v9 = v3;
        uint64_t v10 = sub_1C2689FE8((uint64_t)v9);
        unsigned __int8 v12 = v11;

        sub_1C2633FE8(v10, v12);
      }
      else
      {
        sub_1C263403C(v7, 0, MEMORY[0x1E4FBC898], MEMORY[0x1E4FBC8D0]);
      }
    }
    else
    {
    }
  }
}

void sub_1C26B1F18()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (uint64_t *)&v1[4];
  id v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1C26B1F7C(v2);

  os_unfair_lock_unlock(v3);
}

void sub_1C26B1F7C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(*a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(*a1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  int64_t v8 = 0;
  uint64_t v31 = v3;
  uint64_t v32 = v2;
  while (v6)
  {
    unint64_t v9 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v10 = v9 | (v8 << 6);
LABEL_25:
    uint64_t v14 = *a1;
    if (*(void *)(*a1 + 16))
    {
      id v15 = *(id *)(*(void *)(v2 + 48) + 8 * v10);
      unint64_t v16 = sub_1C26344B4((uint64_t)v15);
      if (v17)
      {
        uint64_t v18 = *(void *)(v14 + 56) + 16 * v16;
        uint64_t v19 = *(void *)v18;
        int v20 = *(unsigned __int8 *)(v18 + 8);
        sub_1C2633FC4(*(void *)v18, *(unsigned char *)(v18 + 8));

        if (v20 == 1)
        {
          int64_t v21 = v7;
          sub_1C263403C(v19, 1, MEMORY[0x1E4FBC898], MEMORY[0x1E4FBC8D0]);
          id v22 = v15;
          swift_bridgeObjectRetain();
          unint64_t v23 = sub_1C26344B4((uint64_t)v22);
          char v25 = v24;
          swift_bridgeObjectRelease();
          if (v25)
          {
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v27 = *a1;
            uint64_t v33 = *a1;
            *a1 = 0x8000000000000000;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_1C2677BF4();
              uint64_t v27 = v33;
            }

            uint64_t v28 = *(void *)(v27 + 56) + 16 * v23;
            uint64_t v29 = *(void *)v28;
            char v30 = *(unsigned char *)(v28 + 8);
            sub_1C268AB48(v23, v27);
            *a1 = v27;

            swift_bridgeObjectRelease();
            sub_1C263403C(v29, v30, MEMORY[0x1E4FBC898], MEMORY[0x1E4FBC8D0]);

            uint64_t v3 = v31;
          }
          else
          {
          }
          int64_t v7 = v21;
          uint64_t v2 = v32;
        }
        else
        {
          sub_1C263403C(v19, 0, MEMORY[0x1E4FBC898], MEMORY[0x1E4FBC8D0]);
        }
      }
      else
      {
      }
    }
  }
  int64_t v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v11 >= v7) {
    goto LABEL_35;
  }
  unint64_t v12 = *(void *)(v3 + 8 * v11);
  ++v8;
  if (v12) {
    goto LABEL_24;
  }
  int64_t v8 = v11 + 1;
  if (v11 + 1 >= v7) {
    goto LABEL_35;
  }
  unint64_t v12 = *(void *)(v3 + 8 * v8);
  if (v12) {
    goto LABEL_24;
  }
  int64_t v8 = v11 + 2;
  if (v11 + 2 >= v7) {
    goto LABEL_35;
  }
  unint64_t v12 = *(void *)(v3 + 8 * v8);
  if (v12) {
    goto LABEL_24;
  }
  int64_t v8 = v11 + 3;
  if (v11 + 3 >= v7) {
    goto LABEL_35;
  }
  unint64_t v12 = *(void *)(v3 + 8 * v8);
  if (v12) {
    goto LABEL_24;
  }
  int64_t v8 = v11 + 4;
  if (v11 + 4 >= v7) {
    goto LABEL_35;
  }
  unint64_t v12 = *(void *)(v3 + 8 * v8);
  if (v12)
  {
LABEL_24:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
    goto LABEL_25;
  }
  int64_t v13 = v11 + 5;
  if (v13 >= v7)
  {
LABEL_35:
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v12 = *(void *)(v3 + 8 * v13);
  if (v12)
  {
    int64_t v8 = v13;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v7) {
      goto LABEL_35;
    }
    unint64_t v12 = *(void *)(v3 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_24;
    }
  }
LABEL_37:
  __break(1u);
}

uint64_t OpenTransactionBuilderManager.deinit()
{
  swift_release();

  uint64_t v1 = *(void **)(v0 + 48);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t OpenTransactionBuilderManager.__deallocating_deinit()
{
  swift_release();

  uint64_t v1 = *(void **)(v0 + 48);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t OpenTransactionBuilderManager.commitTransactionPublisher(healthStore:asUrgent:)(void *a1, char a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v2;
  *(void *)(v5 + 24) = a1;
  *(unsigned char *)(v5 + 32) = a2;
  sub_1C26B2928();
  sub_1C2633AA0((unint64_t *)&qword_1EBB82D80, (void (*)(uint64_t))sub_1C26B2928);
  swift_retain();
  id v6 = a1;

  return sub_1C277B4A0();
}

uint64_t sub_1C26B2450@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  *(unsigned char *)(v8 + 32) = a3;
  sub_1C26B2928();
  swift_allocObject();
  swift_retain();
  id v9 = a2;
  uint64_t result = sub_1C277B480();
  *a4 = result;
  return result;
}

uint64_t sub_1C26B24F4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, int a5)
{
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1C263B0B8;
  *(void *)(v10 + 24) = v9;
  swift_retain();
  sub_1C26AF5D4(a4, a5, (uint64_t)sub_1C26B3228, v10);

  return swift_release();
}

void sub_1C26B25C0(void *a1, void (*a2)(void *, uint64_t))
{
  if (a1)
  {
    id v4 = a1;
    a2(a1, 1);
  }
  else
  {
    a2(0, 0);
  }
}

uint64_t sub_1C26B2638(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = a3;
  int64_t v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_1C2644ED8(0, (unint64_t *)&qword_1EBB82FE0);
    uint64_t v5 = sub_1C277BA40();
  }
  swift_retain();
  id v8 = a2;
  id v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

unint64_t sub_1C26B26F0()
{
  unint64_t result = qword_1EA3047E0;
  if (!qword_1EA3047E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3047E0);
  }
  return result;
}

uint64_t sub_1C26B2744()
{
  return objectdestroyTm_2(32);
}

uint64_t sub_1C26B274C(uint64_t a1, unint64_t a2, void *a3)
{
  return sub_1C26AC658(a1, a2, a3, *(void *)(v3 + 16), *(void **)(v3 + 24));
}

uint64_t sub_1C26B2754()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1C26B2794(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C26AFF08(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1C26B27B0()
{
  swift_release();

  swift_release();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1C26B27F8(void *a1, char a2)
{
  return sub_1C26B002C(a1, a2 & 1, *(void *)(v2 + 16), *(void **)(v2 + 24), *(unsigned char *)(v2 + 32), *(void (**)(void *))(v2 + 40), *(void *)(v2 + 48));
}

uint64_t sub_1C26B2810()
{
  swift_release();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 80, 7);
}

void sub_1C26B2868(void *a1)
{
  sub_1C26B04DC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(os_log_t *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(unsigned __int8 *)(v1 + 64), *(void *)(v1 + 72));
}

uint64_t sub_1C26B28A0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C26B28E8(uint64_t a1)
{
  return sub_1C26603C8(a1, *(uint64_t (**)(void))(v1 + 16));
}

void sub_1C26B28F0(uint64_t *a1)
{
  sub_1C26B1E00(a1, *(void **)(v1 + 16));
}

uint64_t sub_1C26B290C()
{
  return objectdestroyTm_2(32);
}

uint64_t sub_1C26B2914()
{
  return objectdestroyTm_2(33);
}

uint64_t sub_1C26B291C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C26B2450(*(void *)(v1 + 16), *(void **)(v1 + 24), *(unsigned char *)(v1 + 32), a1);
}

void sub_1C26B2928()
{
  if (!qword_1EBB82D88)
  {
    sub_1C26532A4();
    unint64_t v0 = sub_1C277B470();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB82D88);
    }
  }
}

unint64_t sub_1C26B2998()
{
  unint64_t result = qword_1EA3047E8;
  if (!qword_1EA3047E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3047E8);
  }
  return result;
}

uint64_t type metadata accessor for OpenTransactionBuilderManager()
{
  return self;
}

uint64_t method lookup function for OpenTransactionBuilderManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for OpenTransactionBuilderManager);
}

uint64_t dispatch thunk of OpenTransactionBuilderManager.__allocating_init(userDefaults:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of OpenTransactionBuilderManager.makeTransactionBuilder(for:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of OpenTransactionBuilderManager.commitTransaction(healthStore:asUrgent:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of OpenTransactionBuilderManager.clearCachedTransactionBuilder(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of OpenTransactionBuilderManager.clearAllCachedTransactionBuilders()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

unsigned char *storeEnumTagSinglePayload for OpenTransactionBuilderManager.MakeTransactionError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C26B2B68);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for OpenTransactionBuilderManager.MakeTransactionError()
{
  return &type metadata for OpenTransactionBuilderManager.MakeTransactionError;
}

uint64_t sub_1C26B2BA0()
{
  return sub_1C2633AA0(&qword_1EBB84218, (void (*)(uint64_t))sub_1C26B2BE8);
}

void sub_1C26B2BE8()
{
  if (!qword_1EBB84220)
  {
    sub_1C2617808(255, &qword_1EBB82D40, MEMORY[0x1E4F1AC28]);
    sub_1C2617880();
    unint64_t v0 = sub_1C277B4B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB84220);
    }
  }
}

uint64_t sub_1C26B2C68()
{
  return sub_1C2633AA0(&qword_1EBB84228, (void (*)(uint64_t))sub_1C26B2CB0);
}

void sub_1C26B2CB0()
{
  if (!qword_1EBB84230)
  {
    sub_1C26B2928();
    sub_1C2633AA0((unint64_t *)&qword_1EBB82D80, (void (*)(uint64_t))sub_1C26B2928);
    unint64_t v0 = sub_1C277B4B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB84230);
    }
  }
}

ValueMetadata *type metadata accessor for OpenTransactionBuilderManager.State()
{
  return &type metadata for OpenTransactionBuilderManager.State;
}

uint64_t sub_1C26B2D54()
{
  return objectdestroy_39Tm(48);
}

void sub_1C26B2D5C(int a1, void *a2)
{
  sub_1C26B14F8(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1C26B2D68()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1C26B2DB0(int a1, void *a2)
{
  sub_1C26B1798(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1C26B2DBC()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

void sub_1C26B2E0C(int a1, void *a2)
{
  sub_1C26AEFC4(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32), *(void **)(v2 + 40), *(void *)(v2 + 48));
}

void sub_1C26B2E1C(uint64_t a1, uint64_t a2)
{
  sub_1C262F068(0, (unint64_t *)&qword_1EBB85920);
  uint64_t v4 = sub_1C277C0A0();
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
  swift_unknownObjectRelease();

  id v6 = *(void **)(v2 + 16);
  if ((id)v4 == v5)
  {
    int64_t v7 = (void *)sub_1C277B820();
    objc_msgSend(v6, sel_setURL_forKey_, 0, v7);
  }
  else
  {
    if (a2)
    {
      swift_bridgeObjectRetain();
      a2 = sub_1C277C830();
    }
    int64_t v7 = (void *)sub_1C277B820();
    objc_msgSend(v6, sel_setObject_forKey_, a2, v7);
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1C26B2F34()
{
  return objectdestroy_39Tm(40);
}

uint64_t objectdestroy_39Tm(uint64_t a1)
{
  swift_release();

  return MEMORY[0x1F4186498](v1, a1, 7);
}

void sub_1C26B2F90(int a1, void *a2)
{
  sub_1C26AE49C(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_1C26B2F9C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C26ADED0(a1, *(void **)(v2 + 16), *(void *)(v2 + 24), *(unsigned char *)(v2 + 32), a2);
}

uint64_t sub_1C26B2FC0()
{
  return objectdestroy_63Tm(MEMORY[0x1E4FBC8B8]);
}

uint64_t sub_1C26B2FD8()
{
  return sub_1C26ADE10(*(void *)(v0 + 16), *(void *)(v0 + 24), 1);
}

uint64_t sub_1C26B2FF8()
{
  return objectdestroy_63Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t objectdestroy_63Tm(void (*a1)(void))
{
  swift_bridgeObjectRelease();
  a1(*(void *)(v1 + 24));

  return MEMORY[0x1F4186498](v1, 32, 7);
}

uint64_t sub_1C26B3060()
{
  return sub_1C26ADE10(*(void *)(v0 + 16), *(void *)(v0 + 24), 0);
}

void sub_1C26B3080(uint64_t a1, uint64_t a2)
{
  sub_1C26B31AC();
  uint64_t v4 = sub_1C277C0A0();
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
  swift_unknownObjectRelease();

  id v6 = *(void **)(v2 + 16);
  if ((id)v4 == v5)
  {
    id v8 = (void *)sub_1C277B820();
    objc_msgSend(v6, sel_setURL_forKey_, 0, v8);
  }
  else
  {
    if (a2 == 1)
    {
      uint64_t v7 = 0;
    }
    else
    {
      sub_1C262F068(0, (unint64_t *)&qword_1EBB85920);
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_1C277C830();
    }
    id v8 = (void *)sub_1C277B820();
    objc_msgSend(v6, sel_setObject_forKey_, v7, v8);
    swift_unknownObjectRelease();
  }
}

void sub_1C26B31AC()
{
  if (!qword_1EA3047F8)
  {
    sub_1C262F068(255, (unint64_t *)&qword_1EBB85920);
    unint64_t v0 = sub_1C277C0B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA3047F8);
    }
  }
}

uint64_t sub_1C26B3214()
{
  return objectdestroyTm_2(33);
}

uint64_t sub_1C26B321C(uint64_t a1, uint64_t a2)
{
  return sub_1C26B24F4(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(unsigned __int8 *)(v2 + 32));
}

void sub_1C26B3228(void *a1)
{
  sub_1C26B25C0(a1, *(void (**)(void *, uint64_t))(v1 + 16));
}

uint64_t sub_1C26B3230()
{
  return objectdestroyTm_2(32);
}

uint64_t sub_1C26B3238()
{
  swift_release();
  swift_release();

  swift_release();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

void sub_1C26B3288(void *a1, char a2)
{
  sub_1C26B0C84(a1, a2 & 1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(id *)(v2 + 32), *(void (**)(void))(v2 + 40), *(void *)(v2 + 48));
}

uint64_t sub_1C26B329C()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C26B32DC()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C26B3314(uint64_t a1)
{
  return sub_1C266023C(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 16));
}

id sub_1C26B331C(id a1)
{
  return a1;
}

void sub_1C26B3328(id a1)
{
}

id sub_1C26B3334(id a1, char a2)
{
  if (a2) {
    return a1;
  }
  else {
    return (id)swift_retain();
  }
}

uint64_t sub_1C26B3340()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C26B3378(void *a1, char a2)
{
  return sub_1C26AC360(a1, a2 & 1, *(uint64_t (**)(void *, uint64_t))(v2 + 16));
}

uint64_t sub_1C26B33A0(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t initializeBufferWithCopyOfBuffer for OpenTransactionBuilderManager.State.CreationState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1C2633FC4(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for OpenTransactionBuilderManager.State.CreationState(uint64_t a1)
{
  return sub_1C263403C(*(void *)a1, *(unsigned char *)(a1 + 8), MEMORY[0x1E4FBC898], MEMORY[0x1E4FBC8D0]);
}

uint64_t assignWithCopy for OpenTransactionBuilderManager.State.CreationState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1C2633FC4(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_1C263403C(v5, v6, MEMORY[0x1E4FBC898], MEMORY[0x1E4FBC8D0]);
  return a1;
}

uint64_t assignWithTake for OpenTransactionBuilderManager.State.CreationState(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_1C263403C(v5, v6, MEMORY[0x1E4FBC898], MEMORY[0x1E4FBC8D0]);
  return a1;
}

uint64_t getEnumTagSinglePayload for OpenTransactionBuilderManager.State.CreationState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for OpenTransactionBuilderManager.State.CreationState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C26B35D8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1C26B35E0(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for OpenTransactionBuilderManager.State.CreationState()
{
  return &type metadata for OpenTransactionBuilderManager.State.CreationState;
}

uint64_t sub_1C26B3600@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C26B2F9C(a1, a2);
}

uint64_t static AnyPublisher<>.empty.getter()
{
  sub_1C2608654();

  return sub_1C277B450();
}

{
  uint64_t vars8;

  sub_1C26E5000();

  return sub_1C277B450();
}

void GeneratorContext.sourceProfile.setter(void *a1)
{
  id *v1 = a1;
}

uint64_t (*GeneratorContext.sourceProfile.modify())()
{
  return nullsub_1;
}

uint64_t GeneratorContext.country.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GeneratorContext() + 20);

  return sub_1C26B3750(a1, v3);
}

uint64_t sub_1C26B3750(uint64_t a1, uint64_t a2)
{
  sub_1C264C860();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*GeneratorContext.country.modify())()
{
  return nullsub_1;
}

uint64_t (*GeneratorContext.isLaunchGeneration.modify())()
{
  return nullsub_1;
}

uint64_t GeneratorContext.feedItemContext.setter(long long *a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GeneratorContext() + 28);
  __swift_destroy_boxed_opaque_existential_0(v3);

  return sub_1C261F308(a1, v3);
}

uint64_t (*GeneratorContext.feedItemContext.modify())()
{
  return nullsub_1;
}

uint64_t GeneratorContext.sharableModelContext.setter(long long *a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GeneratorContext() + 32);
  __swift_destroy_boxed_opaque_existential_0(v3);

  return sub_1C261F308(a1, v3);
}

uint64_t (*GeneratorContext.sharableModelContext.modify())()
{
  return nullsub_1;
}

void GeneratorDomain.sourceProfile.setter(void *a1)
{
  id *v1 = a1;
}

uint64_t (*GeneratorDomain.sourceProfile.modify())()
{
  return nullsub_1;
}

uint64_t GeneratorDomain.contentKinds.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*GeneratorDomain.contentKinds.modify())()
{
  return nullsub_1;
}

uint64_t GeneratorDomain.hkTypes.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*GeneratorDomain.hkTypes.modify())()
{
  return nullsub_1;
}

uint64_t (*GeneratorDomain.complexity.modify())()
{
  return nullsub_1;
}

BOOL static GeneratorDomain.Complexity.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t GeneratorDomain.hash(into:)(uint64_t a1)
{
  uint64_t v4 = *(void **)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 16);
  if (*(void *)v1)
  {
    sub_1C277C8D0();
    id v6 = v4;
    sub_1C277C040();
  }
  else
  {
    sub_1C277C8D0();
  }
  swift_bridgeObjectRetain();
  sub_1C2679CCC(a1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C2679A34(a1, v5);
  swift_bridgeObjectRelease();
  return sub_1C277C8D0();
}

uint64_t GeneratorDomain.hashValue.getter()
{
  uint64_t v2 = *(void **)v0;
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  sub_1C277C8C0();
  sub_1C277C8D0();
  if (v2)
  {
    id v4 = v2;
    sub_1C277C040();
  }
  swift_bridgeObjectRetain();
  sub_1C2679CCC((uint64_t)v6, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C2679A34((uint64_t)v6, v3);
  swift_bridgeObjectRelease();
  sub_1C277C8D0();
  return sub_1C277C910();
}

uint64_t sub_1C26B3C18()
{
  uint64_t v2 = *(void **)v0;
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  sub_1C277C8C0();
  sub_1C277C8D0();
  if (v2)
  {
    id v4 = v2;
    sub_1C277C040();
  }
  swift_bridgeObjectRetain();
  sub_1C2679CCC((uint64_t)v6, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C2679A34((uint64_t)v6, v3);
  swift_bridgeObjectRelease();
  sub_1C277C8D0();
  return sub_1C277C910();
}

uint64_t GeneratorDomain.Complexity.hash(into:)()
{
  return sub_1C277C8D0();
}

uint64_t GeneratorDomain.Complexity.hashValue.getter()
{
  return sub_1C277C910();
}

uint64_t _s14HealthPlatform15GeneratorDomainV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  int v5 = *(unsigned __int8 *)(a1 + 24);
  uint64_t v7 = *(void **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  int v9 = *(unsigned __int8 *)(a2 + 24);
  if (*(void *)a1)
  {
    if (!v7) {
      return 0;
    }
    sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85F30);
    id v10 = v3;
    id v11 = v7;
    char v12 = sub_1C277C030();

    if ((v12 & 1) == 0) {
      return 0;
    }
  }
  else if (v7)
  {
    return 0;
  }
  if (sub_1C2670A20(v2, v6)) {
    return sub_1C26717D4(v4, v8) & (v5 == v9);
  }
  return 0;
}

unint64_t sub_1C26B3E30()
{
  unint64_t result = qword_1EA304800;
  if (!qword_1EA304800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304800);
  }
  return result;
}

unint64_t sub_1C26B3E88()
{
  unint64_t result = qword_1EA304808;
  if (!qword_1EA304808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304808);
  }
  return result;
}

uint64_t dispatch thunk of Generator.publisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of Generator.domain.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

void **assignWithCopy for GeneratorContext(void **a1, void **a2, int *a3)
{
  uint64_t v6 = *a1;
  uint64_t v7 = *a2;
  *a1 = *a2;
  id v8 = v7;

  if (a1 != a2)
  {
    uint64_t v9 = a3[5];
    id v10 = (void **)((char *)a1 + v9);
    id v11 = (char *)a2 + v9;
    sub_1C2632C4C((uint64_t)a1 + v9);
    sub_1C264C860();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      char v12 = *(void **)v11;
      *id v10 = *(void *)v11;
      id v13 = v12;
    }
    else
    {
      *id v10 = *(void *)v11;
      v10[1] = *((void *)v11 + 1);
      v10[2] = *((void *)v11 + 2);
      uint64_t v14 = *(int *)(type metadata accessor for CountryRetrievalRecord() + 24);
      id v15 = (char *)v10 + v14;
      uint64_t v19 = &v11[v14];
      uint64_t v16 = sub_1C277A840();
      char v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
      swift_bridgeObjectRetain();
      v17(v15, v19, v16);
    }
    swift_storeEnumTagMultiPayload();
  }
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)((char *)a1 + a3[7]), (uint64_t *)((char *)a2 + a3[7]));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)((char *)a1 + a3[8]), (uint64_t *)((char *)a2 + a3[8]));
  return a1;
}

void *initializeWithTake for GeneratorContext(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)((char *)a1 + v6);
  id v8 = (void *)((char *)a2 + v6);
  sub_1C264C860();
  uint64_t v10 = v9;
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
    v7[2] = v8[2];
    uint64_t v11 = *(int *)(type metadata accessor for CountryRetrievalRecord() + 24);
    char v12 = (char *)v7 + v11;
    id v13 = (char *)v8 + v11;
    uint64_t v14 = sub_1C277A840();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v15 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v16 = (char *)a1 + v15;
  char v17 = (char *)a2 + v15;
  long long v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  *((void *)v16 + 4) = *((void *)v17 + 4);
  uint64_t v19 = a3[8];
  int v20 = (char *)a1 + v19;
  int64_t v21 = (char *)a2 + v19;
  long long v22 = *((_OWORD *)v21 + 1);
  *(_OWORD *)int v20 = *(_OWORD *)v21;
  *((_OWORD *)v20 + 1) = v22;
  *((void *)v20 + 4) = *((void *)v21 + 4);
  return a1;
}

uint64_t getEnumTagSinglePayload for GeneratorContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C26B41CC);
}

uint64_t sub_1C26B41CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C264C860();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 28) + 24);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for GeneratorContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C26B42A8);
}

void sub_1C26B42A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1C264C860();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28) + 24) = (a2 - 1);
  }
}

void sub_1C26B436C()
{
  sub_1C264C860();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t assignWithCopy for GeneratorDomain(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  int v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for GeneratorDomain(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GeneratorDomain(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for GeneratorDomain.Complexity(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C26B45ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

HealthPlatform::DataVisualizationKind_optional __swiftcall DataVisualizationKind.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1C277C650();
  result.value = swift_bridgeObjectRelease();
  char v5 = 14;
  if (v3 < 0xE) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

void *static DataVisualizationKind.allCases.getter()
{
  return &unk_1F1DC5300;
}

uint64_t sub_1C26B46B4()
{
  return sub_1C277C910();
}

uint64_t sub_1C26B471C()
{
  DataVisualizationKind.rawValue.getter();
  sub_1C277B8B0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C26B4780()
{
  return sub_1C277C910();
}

HealthPlatform::DataVisualizationKind_optional sub_1C26B47E4(Swift::String *a1)
{
  return DataVisualizationKind.init(rawValue:)(*a1);
}

unint64_t sub_1C26B47F0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = DataVisualizationKind.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C26B4818()
{
  return sub_1C277BA00();
}

uint64_t sub_1C26B4878()
{
  return sub_1C277B9E0();
}

uint64_t sub_1C26B48C8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C273DC84(*a1, *a2);
}

void sub_1C26B48D4(void *a1@<X8>)
{
  *a1 = &unk_1F1DC5300;
}

void DataVisualizationKindFeatureTag.value.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

HealthPlatform::DataVisualizationKindFeatureTag __swiftcall DataVisualizationKindFeatureTag.init(_:)(HealthPlatform::DataVisualizationKindFeatureTag result)
{
  unsigned char *v1 = *(unsigned char *)result.value;
  return result;
}

unint64_t sub_1C26B4900()
{
  unint64_t result = qword_1EA304810;
  if (!qword_1EA304810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304810);
  }
  return result;
}

unint64_t sub_1C26B4958()
{
  unint64_t result = qword_1EA304818;
  if (!qword_1EA304818)
  {
    sub_1C26B49B0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304818);
  }
  return result;
}

void sub_1C26B49B0()
{
  if (!qword_1EA304820)
  {
    unint64_t v0 = sub_1C277BB20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA304820);
    }
  }
}

uint64_t _s14HealthPlatform21DataVisualizationKindOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF3) {
    goto LABEL_17;
  }
  if (a2 + 13 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 13) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 13;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xE;
  int v8 = v6 - 14;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s14HealthPlatform21DataVisualizationKindOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *unint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C26B4B6CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DataVisualizationKindFeatureTag()
{
  return &type metadata for DataVisualizationKindFeatureTag;
}

unint64_t sub_1C26B4BA4()
{
  unint64_t result = qword_1EBB857F8;
  if (!qword_1EBB857F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB857F8);
  }
  return result;
}

Swift::Void __swiftcall PendingValuesInner.lock_sendPendingValuesIfNeeded()()
{
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v6 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v70 = v6;
  uint64_t v69 = sub_1C277B300();
  uint64_t v68 = *(void *)(v69 - 8);
  MEMORY[0x1F4188790](v69);
  int v67 = (char *)&v67 - v7;
  uint64_t v95 = sub_1C277C0B0();
  uint64_t v8 = *(void *)(v95 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v95);
  uint64_t v72 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v71 = (char *)&v67 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v73 = (char *)&v67 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  unint64_t v86 = (char *)&v67 - v16;
  MEMORY[0x1F4188790](v15);
  id v92 = (char *)&v67 - v17;
  uint64_t v75 = AssociatedConformanceWitness;
  uint64_t v87 = AssociatedTypeWitness;
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  int64_t v21 = (char *)&v67 - v20;
  unint64_t v93 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 24);
  uint64_t v94 = v2 + 24;
  uint64_t v22 = v93(v3, v2);
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v22 + 16));
  swift_release();
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v2 + 136))(v3, v2)) {
    return;
  }
  uint64_t v74 = v8;
  uint64_t v84 = *(void (**)(uint64_t, uint64_t))(v2 + 64);
  uint64_t v85 = v2 + 64;
  v84(v3, v2);
  uint64_t v23 = MEMORY[0x1C875BA00]();
  swift_bridgeObjectRelease();
  if (v23 < 1)
  {
LABEL_30:
    char v55 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 112))(v3, v2);
    uint64_t v56 = v74;
    if (v55)
    {
      v84(v3, v2);
      uint64_t v57 = MEMORY[0x1C875BA00]();
      swift_bridgeObjectRelease();
      if (!v57)
      {
        uint64_t v58 = v73;
        (*(void (**)(uint64_t, uint64_t))(v2 + 32))(v3, v2);
        uint64_t v59 = v87;
        uint64_t v60 = *(void *)(v87 - 8);
        char v61 = v71;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v60 + 56))(v71, 1, 1, v87);
        (*(void (**)(char *, uint64_t, uint64_t))(v2 + 40))(v61, v3, v2);
        uint64_t v62 = v93(v3, v2);
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v62 + 16));
        swift_release();
        uint64_t v63 = *(void (**)(uint64_t, uint64_t))(v2 + 56);
        v63(v3, v2);
        os_unfair_recursive_lock_lock_with_options();
        swift_release();
        uint64_t v64 = v72;
        (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v72, v58, v95);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v64, 1, v59) == 1)
        {
          (*(void (**)(char *, uint64_t))(v56 + 8))(v64, v95);
        }
        else
        {
          id v65 = v67;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v67, 1, 1);
          sub_1C277B2C0();
          (*(void (**)(char *, uint64_t))(v68 + 8))(v65, v69);
          (*(void (**)(char *, uint64_t))(v60 + 8))(v64, v59);
        }
        v63(v3, v2);
        os_unfair_recursive_lock_unlock();
        swift_release();
        uint64_t v66 = v93(v3, v2);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v66 + 16));
        swift_release();
        (*(void (**)(char *, uint64_t))(v56 + 8))(v73, v95);
      }
    }
    return;
  }
  char v24 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 88);
  uint64_t v81 = v2 + 80;
  uint64_t v82 = v24;
  uint64_t v80 = v2 + 32;
  uint64_t v83 = v2 + 88;
  uint64_t v90 = v2 + 56;
  uint64_t v91 = v2 + 104;
  int v79 = (void (**)(char *, char *, uint64_t))(v74 + 16);
  uint64_t v78 = v87 - 8;
  uint64_t v88 = (void (**)(char *, uint64_t))(v74 + 8);
  uint64_t v76 = (void (**)(char *, uint64_t))(v19 + 8);
  uint64_t v77 = v21;
  uint64_t v89 = v18;
  for (uint64_t i = v24(v3, v2); ; uint64_t i = v82(v3, v2))
  {
    uint64_t v28 = i;
    sub_1C277B330();
    if (sub_1C277B310()) {
      goto LABEL_11;
    }
    if (v28 < 0) {
      break;
    }
    if (!v28) {
      goto LABEL_30;
    }
LABEL_11:
    uint64_t v29 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v2 + 104);
    char v30 = (void (*)(unsigned char *, void))v29(v96, v3, v2);
    uint64_t v32 = v31;
    uint64_t v33 = *v31;
    sub_1C277B330();
    if ((sub_1C277B310() & 1) == 0)
    {
      sub_1C277B330();
      if (sub_1C277B310())
      {
        uint64_t v34 = sub_1C277B330();
      }
      else
      {
        if (v33 < 0) {
          goto LABEL_38;
        }
        if (!v33) {
          goto LABEL_39;
        }
        uint64_t v34 = v33 - 1;
      }
      *uint64_t v32 = v34;
    }
    v30(v96, 0);
    id v35 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v2 + 80))(v96, v3, v2);
    sub_1C277BB20();
    swift_getWitnessTable();
    sub_1C277BC80();
    v35(v96, 0);
    uint64_t v36 = v92;
    (*(void (**)(uint64_t, uint64_t))(v2 + 32))(v3, v2);
    uint64_t v37 = v93(v3, v2);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v37 + 16));
    swift_release();
    uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v2 + 56);
    v38(v3, v2);
    os_unfair_recursive_lock_lock_with_options();
    swift_release();
    uint64_t v39 = v86;
    uint64_t v40 = v95;
    (*v79)(v86, v36, v95);
    uint64_t v41 = v87;
    uint64_t v42 = *(void *)(v87 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v39, 1, v87) == 1)
    {
      (*v88)(v39, v40);
      uint64_t v43 = sub_1C277B320();
    }
    else
    {
      uint64_t v44 = sub_1C277B2E0();
      uint64_t v45 = v41;
      uint64_t v43 = v44;
      (*(void (**)(char *, uint64_t))(v42 + 8))(v39, v45);
    }
    v38(v3, v2);
    os_unfair_recursive_lock_unlock();
    swift_release();
    uint64_t v46 = v93(v3, v2);
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v46 + 16));
    swift_release();
    id v47 = (void (*)(unsigned char *, void))v29(v96, v3, v2);
    uint64_t v49 = v48;
    uint64_t v50 = *v48;
    sub_1C277B330();
    char v51 = sub_1C277B310();
    uint64_t v26 = v89;
    if ((v51 & 1) == 0)
    {
      sub_1C277B330();
      char v52 = sub_1C277B310();
      uint64_t v53 = sub_1C277B330();
      if (v52)
      {
        uint64_t v26 = v89;
      }
      else
      {
        char v54 = sub_1C277B310();
        uint64_t v26 = v89;
        if (v54) {
          goto LABEL_27;
        }
        if ((v50 | v43) < 0) {
          goto LABEL_40;
        }
        uint64_t v53 = v50 + v43;
        if (__OFADD__(v50, v43))
        {
LABEL_27:
          uint64_t v53 = sub_1C277B330();
        }
        else if (v53 < 0)
        {
          __break(1u);
          goto LABEL_30;
        }
      }
      uint64_t *v49 = v53;
    }
    v47(v96, 0);
    (*v88)(v92, v95);
    (*v76)(v77, v26);
    v84(v3, v2);
    uint64_t v27 = MEMORY[0x1C875BA00]();
    swift_bridgeObjectRelease();
    if (v27 <= 0) {
      goto LABEL_30;
    }
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
}

uint64_t PendingValuesInner.enqueue(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v9 = &v15[-v8];
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 24);
  uint64_t v11 = v10(a2, a3);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 16));
  swift_release();
  if (((*(uint64_t (**)(uint64_t, uint64_t))(a3 + 136))(a2, a3) & 1) == 0)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, AssociatedTypeWitness);
    uint64_t v12 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(a3 + 80))(v15, a2, a3);
    sub_1C277BB20();
    sub_1C277BB00();
    v12(v15, 0);
  }
  PendingValuesInner.lock_sendPendingValuesIfNeeded()();
  uint64_t v13 = v10(a2, a3);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 16));
  return swift_release();
}

uint64_t dispatch thunk of PendingValuesInner.lock.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of PendingValuesInner.downstream.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of PendingValuesInner.downstream.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of PendingValuesInner.downstream.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of PendingValuesInner.downstreamLock.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of PendingValuesInner.pendingValues.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of PendingValuesInner.pendingValues.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of PendingValuesInner.pendingValues.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of PendingValuesInner.pendingDemand.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of PendingValuesInner.pendingDemand.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of PendingValuesInner.pendingDemand.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t dispatch thunk of PendingValuesInner.finished.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of PendingValuesInner.finished.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t dispatch thunk of PendingValuesInner.finished.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 128))();
}

uint64_t dispatch thunk of PendingValuesInner.cancelled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of PendingValuesInner.cancelled.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 144))();
}

uint64_t dispatch thunk of PendingValuesInner.cancelled.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 152))();
}

void sub_1C26B5AD8(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void **)(*a2 + OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_customNotificationSettings);
  swift_beginAccess();
  unsigned int v4 = *v3;
  *uint64_t v3 = v2;
  id v5 = v2;
}

void *sub_1C26B5B3C()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_customNotificationSettings);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_1C26B5B8C(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_customNotificationSettings);
  swift_beginAccess();
  unsigned int v4 = *v3;
  *id v3 = a1;
}

uint64_t (*sub_1C26B5BE0())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C26B5C3C()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_mockNotificationState);
  uint64_t v2 = v1 + 4;
  id v3 = v1 + 10;
  os_unfair_lock_lock(v1 + 10);
  sub_1C26BA6F4(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_1C26B5CA4()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_mockNotificationState);
  uint64_t v2 = (uint64_t)&v1[4];
  id v3 = v1 + 10;
  os_unfair_lock_lock(v1 + 10);
  sub_1C26BA6B4(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

id MockUNUserNotificationCenter.__allocating_init()()
{
  uint64_t v1 = (char *)objc_allocWithZone(v0);
  *(void *)&v1[OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_customNotificationSettings] = 0;
  uint64_t v2 = OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_mockNotificationState;
  id v3 = v1;
  uint64_t v4 = MEMORY[0x1E4FBC860];
  unint64_t v5 = sub_1C267C8B0(MEMORY[0x1E4FBC860]);
  sub_1C26B5E78();
  uint64_t v6 = swift_allocObject();
  *(_DWORD *)(v6 + 40) = 0;
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v4;
  *(void *)(v6 + 32) = v5;
  *(void *)&v1[v2] = v6;

  uint64_t v7 = *MEMORY[0x1E4F2BDC0];
  v9.receiver = v3;
  v9.super_class = v0;
  return objc_msgSendSuper2(&v9, sel_initWithBundleIdentifier_, v7);
}

id MockUNUserNotificationCenter.init()()
{
  *(void *)&v0[OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_customNotificationSettings] = 0;
  uint64_t v1 = OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_mockNotificationState;
  uint64_t v2 = v0;
  uint64_t v3 = MEMORY[0x1E4FBC860];
  unint64_t v4 = sub_1C267C8B0(MEMORY[0x1E4FBC860]);
  sub_1C26B5E78();
  uint64_t v5 = swift_allocObject();
  *(_DWORD *)(v5 + 40) = 0;
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v3;
  *(void *)(v5 + 32) = v4;
  *(void *)&v0[v1] = v5;

  uint64_t v6 = *MEMORY[0x1E4F2BDC0];
  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for MockUNUserNotificationCenter();
  return objc_msgSendSuper2(&v8, sel_initWithBundleIdentifier_, v6);
}

void sub_1C26B5E78()
{
  if (!qword_1EA304838)
  {
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_1C277C370();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA304838);
    }
  }
}

uint64_t type metadata accessor for MockUNUserNotificationCenter()
{
  return self;
}

id sub_1C26B5EFC(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&v3[OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_customNotificationSettings] = 0;
  uint64_t v6 = OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_mockNotificationState;
  uint64_t v7 = v3;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  unint64_t v9 = sub_1C267C8B0(MEMORY[0x1E4FBC860]);
  sub_1C26B5E78();
  uint64_t v10 = swift_allocObject();
  *(_DWORD *)(v10 + 40) = 0;
  *(void *)(v10 + 16) = v8;
  *(void *)(v10 + 24) = v8;
  *(void *)(v10 + 32) = v9;
  *(void *)&v3[v6] = v10;

  if (!a2) {
    sub_1C277B850();
  }
  uint64_t v11 = (void *)sub_1C277B820();
  swift_bridgeObjectRelease();
  v14.receiver = v7;
  v14.super_class = (Class)type metadata accessor for MockUNUserNotificationCenter();
  id v12 = objc_msgSendSuper2(&v14, sel_initWithBundleIdentifier_queue_, v11, a3);

  return v12;
}

void sub_1C26B6060(void *a1, void (*a2)(void), uint64_t a3)
{
  sub_1C263D480(0, (unint64_t *)&unk_1EBB84888, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v62 = (char *)&v58 - v7;
  uint64_t v8 = sub_1C277A840();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  id v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v58 - v14;
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v63 = (char *)&v58 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v58 - v18;
  id v20 = objc_msgSend(a1, sel_trigger);
  if (!v20)
  {
    uint64_t v61 = a3;
    uint64_t v29 = a2;
    id v30 = a1;
    sub_1C277A830();
    uint64_t v31 = (void *)sub_1C277A7E0();
    uint64_t v32 = (void *)sub_1C277B820();
    uint64_t v33 = (void *)sub_1C277BA30();
    id v27 = objc_msgSend(self, sel_notificationWithRequest_date_sourceIdentifier_intentIdentifiers_, v30, v31, v32, v33);

    uint64_t v34 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v15, v8);
    MEMORY[0x1F4188790](v34);
    *(&v58 - 2) = (uint64_t)v27;
    uint64_t v36 = (uint64_t)&v35[4];
    uint64_t v37 = v35 + 10;
    os_unfair_lock_lock(v35 + 10);
    sub_1C26B759C(v36);
    os_unfair_lock_unlock(v37);
    if (v29) {
      ((void (*)(void))v29)(0);
    }
    goto LABEL_8;
  }
  uint64_t v60 = v8;
  id v64 = v20;
  self;
  uint64_t v21 = swift_dynamicCastObjCClass();
  if (v21)
  {
    uint64_t v22 = (void *)v21;
    MEMORY[0x1F4188790](v21);
    *(&v58 - 2) = (uint64_t)a1;
    uint64_t v23 = a2;
    char v25 = (void *)(v24 + 16);
    uint64_t v26 = (os_unfair_lock_s *)(v24 + 40);
    id v27 = v64;
    os_unfair_lock_lock(v26);
    sub_1C26BA70C(v25);
    os_unfair_lock_unlock(v26);
    objc_msgSend(v22, sel_timeInterval);
    sub_1C26B68D0(a1, v28);
    if (v23) {
      ((void (*)(void))v23)(0);
    }

LABEL_8:
    return;
  }
  self;
  uint64_t v38 = swift_dynamicCastObjCClass();
  if (v38)
  {
    uint64_t v61 = a3;
    uint64_t v58 = (uint64_t)&v58;
    uint64_t v59 = a2;
    uint64_t v39 = MEMORY[0x1F4188790](v38);
    *(&v58 - 2) = (uint64_t)a1;
    uint64_t v41 = (void *)(v40 + 16);
    uint64_t v42 = (os_unfair_lock_s *)(v40 + 40);
    uint64_t v43 = (void *)v39;
    id v64 = v64;
    os_unfair_lock_lock(v42);
    sub_1C26B760C(v41);
    os_unfair_lock_unlock(v42);
    sub_1C277A830();
    id v44 = objc_msgSend(v43, sel_nextTriggerDate);
    if (v44)
    {
      uint64_t v45 = v44;
      sub_1C277A810();

      uint64_t v46 = (uint64_t)v62;
      id v47 = v15;
      uint64_t v48 = v60;
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v62, v47, v60);
      uint64_t v49 = 0;
    }
    else
    {
      uint64_t v49 = 1;
      uint64_t v48 = v60;
      uint64_t v46 = (uint64_t)v62;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v46, v49, 1, v48);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v19, v48);
    int v52 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v46, 1, v48);
    uint64_t v53 = v59;
    char v54 = v63;
    if (v52 == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v63, v12, v48);
      sub_1C263FC54(v46, (unint64_t *)&unk_1EBB84888, MEMORY[0x1E4F27928]);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v48);
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v54, v46, v48);
    }
    id v55 = v64;
    sub_1C277A820();
    sub_1C26B68D0(a1, v56);
    if (v53) {
      ((void (*)(void))v53)(0);
    }

    uint64_t v57 = *(void (**)(char *, uint64_t))(v9 + 8);
    v57(v54, v48);
    v57(v19, v48);
  }
  else
  {
    if (a2)
    {
      sub_1C26B75B8();
      uint64_t v50 = swift_allocError();
      a2();

      id v51 = (id)v50;
    }
    else
    {
      id v51 = v64;
    }
  }
}

uint64_t sub_1C26B670C(void *a1, void *a2)
{
  id v3 = a2;
  MEMORY[0x1C875B930]();
  if (*(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C277BA90();
  }
  sub_1C277BAE0();
  return sub_1C277BA60();
}

uint64_t sub_1C26B6784(uint64_t a1, void *a2)
{
  id v3 = a2;
  MEMORY[0x1C875B930]();
  if (*(void *)((*(void *)(a1 + 8) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a1 + 8) & 0xFFFFFFFFFFFFFF8)
                                                                                    + 0x18) >> 1)
    sub_1C277BA90();
  sub_1C277BAE0();
  return sub_1C277BA60();
}

void sub_1C26B68D0(void *a1, double a2)
{
  uint64_t ObjectType = swift_getObjectType();
  sub_1C263D480(0, &qword_1EA304858, MEMORY[0x1E4F28088]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v36 - v6;
  sub_1C263D480(0, &qword_1EA304860, MEMORY[0x1E4F280A0]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v36 - v9;
  uint64_t v11 = sub_1C277C070();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C264ED88();
  uint64_t v16 = v15;
  uint64_t v41 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C26BA498();
  uint64_t v20 = MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)v36 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 == 0.0)
  {
    sub_1C26B7054(a1);
  }
  else
  {
    uint64_t v39 = v20;
    uint64_t v40 = v21;
    sub_1C277B440();
    sub_1C277C060();
    uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    uint64_t v38 = v11;
    v24(v10, 1, 1, v11);
    id v43 = objc_msgSend(self, sel_mainRunLoop);
    uint64_t v25 = sub_1C277C050();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v7, 1, 1, v25);
    sub_1C2644ED8(0, &qword_1EA304870);
    sub_1C26BA650(&qword_1EA304878, (void (*)(uint64_t))sub_1C264ED88);
    v36[1] = v2;
    uint64_t v37 = a1;
    sub_1C26BA564();
    sub_1C277B540();
    sub_1C263FC54((uint64_t)v7, &qword_1EA304858, MEMORY[0x1E4F28088]);

    sub_1C263FC54((uint64_t)v10, &qword_1EA304860, MEMORY[0x1E4F280A0]);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v38);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v18, v16);
    uint64_t v26 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v27 = (void *)swift_allocObject();
    double v28 = v37;
    v27[2] = v26;
    v27[3] = v28;
    v27[4] = ObjectType;
    sub_1C26BA650(&qword_1EA304888, (void (*)(uint64_t))sub_1C26BA498);
    id v29 = v28;
    uint64_t v30 = v39;
    uint64_t v31 = sub_1C277B600();
    swift_release();
    uint64_t v32 = (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v23, v30);
    MEMORY[0x1F4188790](v32);
    v36[-2] = v29;
    v36[-1] = v31;
    uint64_t v34 = (uint64_t)&v33[4];
    id v35 = v33 + 10;
    os_unfair_lock_lock(v33 + 10);
    sub_1C26BA698(v34);
    os_unfair_lock_unlock(v35);
    swift_release();
  }
}

void sub_1C26B6E90(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2 + 16;
  swift_beginAccess();
  uint64_t v5 = MEMORY[0x1C875D340](v4);
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    sub_1C26B7054(a3);
  }
  else
  {
    sub_1C277C2D0();
    sub_1C277C9E0();
    swift_bridgeObjectRelease();
    sub_1C277B8D0();
    sub_1C277C560();
    __break(1u);
  }
}

uint64_t sub_1C26B6F8C(uint64_t a1, id a2, uint64_t a3)
{
  id v5 = objc_msgSend(a2, sel_identifier);
  uint64_t v6 = sub_1C277B850();
  uint64_t v8 = v7;

  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = 0x8000000000000000;
  sub_1C268B6A0(a3, v6, v8, isUniquelyReferenced_nonNull_native);
  *(void *)(a1 + 16) = v11;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1C26B7054(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(os_unfair_lock_s **)&v1[OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_mockNotificationState];
  p_os_unfair_lock_opaque = (unint64_t *)&v4[4]._os_unfair_lock_opaque;
  uint64_t v6 = v4 + 10;
  os_unfair_lock_lock(v4 + 10);
  sub_1C26B85C0(p_os_unfair_lock_opaque);
  os_unfair_lock_unlock(v6);
  id v7 = objc_msgSend(a1, sel_trigger);
  if (v7)
  {
    uint64_t v8 = v7;
    if (objc_msgSend(v7, sel_repeats)) {
      objc_msgSend(v2, sel_addNotificationRequest_withCompletionHandler_, a1, 0);
    }
  }
}

uint64_t sub_1C26B7114(unint64_t *a1, void *a2)
{
  uint64_t v5 = sub_1C277A840();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = a2;
  uint64_t v10 = sub_1C26B8814(a1, v9);

  if (!(*a1 >> 62))
  {
    uint64_t v11 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v11 >= v10) {
      goto LABEL_3;
    }
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1C277C5A0();
  swift_bridgeObjectRelease();
  if (v11 < v10) {
    goto LABEL_11;
  }
LABEL_3:
  v32[1] = v2;
  sub_1C26B97D0(v10, v11, (unint64_t *)&qword_1EBB82FC0);
  id v9 = v9;
  sub_1C277A830();
  uint64_t v12 = (void *)sub_1C277A7E0();
  uint64_t v13 = (void *)sub_1C277B820();
  uint64_t v14 = v5;
  uint64_t v15 = (void *)sub_1C277BA30();
  id v16 = objc_msgSend(self, sel_notificationWithRequest_date_sourceIdentifier_intentIdentifiers_, v9, v12, v13, v15);

  uint64_t v17 = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v14);
  MEMORY[0x1C875B930](v17);
  if (*(void *)((a1[1] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((a1[1] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_12:
  }
    sub_1C277BA90();
  sub_1C277BAE0();
  sub_1C277BA60();
  id v18 = objc_msgSend(v9, sel_identifier);
  uint64_t v19 = sub_1C277B850();
  uint64_t v21 = v20;

  unint64_t v22 = a1[2];
  if (*(void *)(v22 + 16) && (unint64_t v23 = sub_1C2629588(v19, v21), (v24 & 1) != 0))
  {
    uint64_t v25 = *(void *)(*(void *)(v22 + 56) + 8 * v23);
    swift_retain();
    swift_bridgeObjectRelease();
    if (v25)
    {
      sub_1C277B370();
      swift_release();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  id v26 = objc_msgSend(v9, sel_identifier);
  uint64_t v27 = sub_1C277B850();
  uint64_t v29 = v28;

  uint64_t v30 = sub_1C268A0C4(v27, v29);
  swift_bridgeObjectRelease();
  return sub_1C26B8BE8(v30);
}

id sub_1C26B7438(void *a1)
{
  uint64_t v2 = sub_1C277A840();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = a1;
  sub_1C277A830();
  uint64_t v7 = (void *)sub_1C277A7E0();
  uint64_t v8 = (void *)sub_1C277B820();
  id v9 = (void *)sub_1C277BA30();
  id v10 = objc_msgSend(self, sel_notificationWithRequest_date_sourceIdentifier_intentIdentifiers_, v6, v7, v8, v9);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v10;
}

uint64_t sub_1C26B759C(uint64_t a1)
{
  return sub_1C26B6784(a1, *(void **)(v1 + 16));
}

unint64_t sub_1C26B75B8()
{
  unint64_t result = qword_1EA304840;
  if (!qword_1EA304840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304840);
  }
  return result;
}

uint64_t sub_1C26B760C(void *a1)
{
  return sub_1C26B670C(a1, *(void **)(v1 + 16));
}

uint64_t sub_1C26B7628(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

void sub_1C26B7894(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  sub_1C2644ED8(0, a3);
  id v4 = (id)sub_1C277BA30();
  (*(void (**)(uint64_t, id))(a2 + 16))(a2, v4);
}

uint64_t sub_1C26B7908@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 8);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C26B79E8(unint64_t *a1, void *a2)
{
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1C26B8DCC(a1, a2);
  uint64_t result = swift_bridgeObjectRelease();
  if (*a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C277C5A0();
    uint64_t result = swift_bridgeObjectRelease();
    if (v6 >= v4) {
      return sub_1C26B97D0(v4, v6, (unint64_t *)&qword_1EBB82FC0);
    }
  }
  else
  {
    uint64_t v6 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6 >= v4) {
      return sub_1C26B97D0(v4, v6, (unint64_t *)&qword_1EBB82FC0);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C26B7AB0(unint64_t *a1)
{
  return sub_1C26B79E8(a1, *(void **)(v1 + 16));
}

uint64_t sub_1C26B7B64(uint64_t a1, void *a2)
{
  uint64_t v4 = (unint64_t *)(a1 + 8);
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1C26B93B8(v4, a2);
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v7 = *(void *)(a1 + 8);
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C277C5A0();
    uint64_t result = swift_bridgeObjectRelease();
    if (v8 >= v5) {
      return sub_1C26B97D0(v5, v8, &qword_1EA304850);
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8 >= v5) {
      return sub_1C26B97D0(v5, v8, &qword_1EA304850);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C26B7C30(uint64_t a1)
{
  return sub_1C26B7B64(a1, *(void **)(v1 + 16));
}

uint64_t sub_1C26B7CE4(void *a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = MEMORY[0x1E4FBC860];
  return result;
}

uint64_t sub_1C26B7D9C(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = MEMORY[0x1E4FBC860];
  return result;
}

id MockUNUserNotificationCenter.__allocating_init(bundleIdentifier:)()
{
  id v1 = objc_allocWithZone(v0);
  uint64_t v2 = (void *)sub_1C277B820();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithBundleIdentifier_, v2);

  return v3;
}

void MockUNUserNotificationCenter.init(bundleIdentifier:)()
{
}

id MockUNUserNotificationCenter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MockUNUserNotificationCenter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C26B8070@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  id v3 = (void **)(*a1 + OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_customNotificationSettings);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *a2 = *v3;

  return v4;
}

uint64_t method lookup function for MockUNUserNotificationCenter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MockUNUserNotificationCenter);
}

uint64_t dispatch thunk of MockUNUserNotificationCenter.customNotificationSettings.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of MockUNUserNotificationCenter.customNotificationSettings.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of MockUNUserNotificationCenter.customNotificationSettings.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MockUNUserNotificationCenter.localPendingNotifications.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MockUNUserNotificationCenter.localDeliveredNotifications.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MockUNUserNotificationCenter.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of MockUNUserNotificationCenter.createNotification(from:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

unsigned char *storeEnumTagSinglePayload for MockUNUserNotificationCenterError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C26B8324);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MockUNUserNotificationCenterError()
{
  return &type metadata for MockUNUserNotificationCenterError;
}

uint64_t destroy for MockUNUserNotificationCenter.MockNotificationState()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s14HealthPlatform28MockUNUserNotificationCenterC21MockNotificationStateVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for MockUNUserNotificationCenter.MockNotificationState(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for MockUNUserNotificationCenter.MockNotificationState(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MockUNUserNotificationCenter.MockNotificationState(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MockUNUserNotificationCenter.MockNotificationState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MockUNUserNotificationCenter.MockNotificationState()
{
  return &type metadata for MockUNUserNotificationCenter.MockNotificationState;
}

unint64_t sub_1C26B856C()
{
  unint64_t result = qword_1EA304848;
  if (!qword_1EA304848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304848);
  }
  return result;
}

uint64_t sub_1C26B85C0(unint64_t *a1)
{
  return sub_1C26B7114(a1, *(void **)(v1 + 16));
}

void *sub_1C26B85DC(void *a1)
{
  return sub_1C2690BE8(0, a1[2], 0, a1);
}

void sub_1C26B85F4(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1C277C5A0();
    swift_bridgeObjectRelease();
  }

  JUMPOUT(0x1C875C240);
}

uint64_t sub_1C26B8670(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v5)
  {
    uint64_t v6 = 0;
    uint64_t v20 = v3;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v7 = (id)MEMORY[0x1C875C230](v6, a1);
      }
      else {
        id v7 = *(id *)(a1 + 8 * v6 + 32);
      }
      uint64_t v8 = v7;
      id v9 = objc_msgSend(v7, sel_identifier, v20);
      uint64_t v10 = sub_1C277B850();
      uint64_t v12 = v11;

      id v13 = objc_msgSend(a2, sel_identifier);
      uint64_t v3 = sub_1C277B850();
      uint64_t v15 = v14;

      if (v10 == v3 && v12 == v15)
      {

        swift_bridgeObjectRelease_n();
        return v6;
      }
      char v17 = sub_1C277C7E0();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v17) {
        return v6;
      }
      uint64_t v18 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        break;
      }
      ++v6;
      if (v18 == v5) {
        return 0;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C277C5A0();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_1C26B8814(unint64_t *a1, void *a2)
{
  unint64_t v5 = swift_bridgeObjectRetain();
  id v40 = a2;
  unint64_t v41 = sub_1C26B8670(v5, a2);
  char v7 = v6;
  swift_bridgeObjectRelease();
  uint64_t v39 = v2;
  if (v2) {
    return v41;
  }
  if ((v7 & 1) == 0)
  {
    id v8 = (id)(v41 + 1);
    if (__OFADD__(v41, 1)) {
      goto LABEL_60;
    }
    if (*a1 >> 62)
    {
LABEL_61:
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_1C277C5A0();
      swift_bridgeObjectRelease();
      if (v8 != (id)v37) {
        goto LABEL_6;
      }
    }
    else if (v8 != *(id *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      for (unint64_t i = v41 + 5; ; ++i)
      {
        unint64_t v10 = i - 4;
        unint64_t v11 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          id v12 = (id)MEMORY[0x1C875C230](i - 4);
        }
        else
        {
          if ((v10 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
LABEL_59:
            __break(1u);
LABEL_60:
            __break(1u);
            goto LABEL_61;
          }
          if (v10 >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_51;
          }
          id v12 = *(id *)(v11 + 8 * i);
        }
        id v13 = v12;
        id v14 = objc_msgSend(v12, sel_identifier, v39);
        uint64_t v15 = sub_1C277B850();
        uint64_t v17 = v16;

        id v8 = objc_msgSend(v40, sel_identifier);
        uint64_t v18 = sub_1C277B850();
        uint64_t v20 = v19;

        if (v15 == v18 && v17 == v20)
        {

          swift_bridgeObjectRelease_n();
          goto LABEL_38;
        }
        char v22 = sub_1C277C7E0();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v22) {
          goto LABEL_38;
        }
        if (v10 != v41) {
          break;
        }
LABEL_35:
        if (__OFADD__(v41, 1)) {
          goto LABEL_53;
        }
        ++v41;
LABEL_38:
        id v8 = (id)(i - 3);
        if (__OFADD__(v10, 1)) {
          goto LABEL_52;
        }
        if (*a1 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v34 = sub_1C277C5A0();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v34 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        if (v8 == (id)v34) {
          return v41;
        }
      }
      unint64_t v23 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        id v24 = (id)MEMORY[0x1C875C230](v41, *a1);
        unint64_t v23 = *a1;
        if ((*a1 & 0xC000000000000001) == 0)
        {
LABEL_21:
          if ((v10 & 0x8000000000000000) != 0) {
            goto LABEL_56;
          }
          if (v10 >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_57;
          }
          id v25 = *(id *)(v23 + 8 * i);
          goto LABEL_24;
        }
      }
      else
      {
        if ((v41 & 0x8000000000000000) != 0) {
          goto LABEL_54;
        }
        if (v41 >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_55;
        }
        id v24 = *(id *)(v23 + 8 * v41 + 32);
        if ((v23 & 0xC000000000000001) == 0) {
          goto LABEL_21;
        }
      }
      id v25 = (id)MEMORY[0x1C875C230](i - 4, v23);
      unint64_t v23 = *a1;
LABEL_24:
      int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v23;
      if (!isUniquelyReferenced_nonNull_bridgeObject
        || (v23 & 0x8000000000000000) != 0
        || (v23 & 0x4000000000000000) != 0)
      {
        sub_1C26B85F4(v23);
        unint64_t v23 = v27;
        *a1 = v27;
      }
      uint64_t v28 = *(void **)((v23 & 0xFFFFFFFFFFFFFF8) + 8 * v41 + 0x20);
      *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 8 * v41 + 0x20) = v25;

      sub_1C277BA60();
      unint64_t v29 = *a1;
      int v30 = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v29;
      if (!v30 || (v29 & 0x8000000000000000) != 0 || (v29 & 0x4000000000000000) != 0)
      {
        sub_1C26B85F4(v29);
        unint64_t v29 = v31;
        *a1 = v31;
      }
      if ((v10 & 0x8000000000000000) != 0) {
        goto LABEL_58;
      }
      uint64_t v32 = v29 & 0xFFFFFFFFFFFFFF8;
      if (v10 >= *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_59;
      }
      uint64_t v33 = *(void **)(v32 + 8 * i);
      *(void *)(v32 + 8 * i) = v24;

      sub_1C277BA60();
      goto LABEL_35;
    }
    return v41;
  }
  unint64_t v35 = *a1;
  if (!(v35 >> 62)) {
    return *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v38 = sub_1C277C5A0();
  swift_bridgeObjectRelease();
  return v38;
}

uint64_t sub_1C26B8BE8(uint64_t result)
{
  if (result != 1) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1C26B8BF8(unint64_t a1, void *a2)
{
  if (a1 >> 62) {
    goto LABEL_28;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v3)
  {
    uint64_t v4 = 0;
    uint64_t v19 = v3;
    uint64_t v5 = a2[2];
    while (1)
    {
      id v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C875C230](v4, a1) : *(id *)(a1 + 32 + 8 * v4);
      char v7 = v6;
      id v8 = objc_msgSend(v6, sel_identifier);
      uint64_t v9 = sub_1C277B850();
      uint64_t v11 = v10;

      if (v5)
      {
        BOOL v12 = a2[4] == v9 && a2[5] == v11;
        if (v12 || (sub_1C277C7E0() & 1) != 0)
        {
LABEL_25:

          swift_bridgeObjectRelease();
          return v4;
        }
        if (v5 != 1) {
          break;
        }
      }
LABEL_22:

      swift_bridgeObjectRelease();
      if (__OFADD__(v4++, 1)) {
        goto LABEL_27;
      }
      if (v4 == v19) {
        return 0;
      }
    }
    id v13 = a2 + 7;
    uint64_t v14 = 1;
    while (1)
    {
      uint64_t v15 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        break;
      }
      BOOL v16 = *(v13 - 1) == v9 && *v13 == v11;
      if (v16 || (sub_1C277C7E0() & 1) != 0) {
        goto LABEL_25;
      }
      v13 += 2;
      ++v14;
      if (v15 == v5) {
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C277C5A0();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_1C26B8DCC(unint64_t *a1, void *a2)
{
  unint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v38 = a2;
  unint64_t v6 = sub_1C26B8BF8(v5, a2);
  char v8 = v7;
  swift_bridgeObjectRelease();
  if (v2) {
    return v6;
  }
  if ((v8 & 1) == 0)
  {
    unint64_t v9 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_70;
    }
    if (*a1 >> 62)
    {
LABEL_71:
      swift_bridgeObjectRetain();
      uint64_t v36 = sub_1C277C5A0();
      swift_bridgeObjectRelease();
      if (v9 != v36) {
        goto LABEL_6;
      }
    }
    else if (v9 != *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      uint64_t v39 = v38[2];
      while (1)
      {
        unint64_t v10 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          id v11 = (id)MEMORY[0x1C875C230](v9);
        }
        else
        {
          if ((v9 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_60:
            __break(1u);
LABEL_61:
            __break(1u);
            goto LABEL_62;
          }
          if (v9 >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_60;
          }
          id v11 = *(id *)(v10 + 8 * v9 + 32);
        }
        BOOL v12 = v11;
        id v13 = objc_msgSend(v11, sel_identifier);
        uint64_t v14 = sub_1C277B850();
        uint64_t v16 = v15;

        if (v39)
        {
          BOOL v17 = v38[4] == v14 && v38[5] == v16;
          if (v17 || (sub_1C277C7E0() & 1) != 0)
          {
LABEL_17:

            swift_bridgeObjectRelease();
            goto LABEL_47;
          }
          if (v39 != 1)
          {
            uint64_t v18 = v38 + 7;
            uint64_t v19 = 1;
            while (1)
            {
              uint64_t v20 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                break;
              }
              BOOL v21 = *(v18 - 1) == v14 && *v18 == v16;
              if (v21 || (sub_1C277C7E0() & 1) != 0) {
                goto LABEL_17;
              }
              v18 += 2;
              ++v19;
              if (v20 == v39) {
                goto LABEL_27;
              }
            }
LABEL_62:
            __break(1u);
LABEL_63:
            __break(1u);
LABEL_64:
            __break(1u);
LABEL_65:
            __break(1u);
LABEL_66:
            __break(1u);
LABEL_67:
            __break(1u);
LABEL_68:
            __break(1u);
LABEL_69:
            __break(1u);
LABEL_70:
            __break(1u);
            goto LABEL_71;
          }
        }
LABEL_27:

        swift_bridgeObjectRelease();
        if (v6 != v9) {
          break;
        }
LABEL_46:
        BOOL v32 = __OFADD__(v6++, 1);
        if (v32) {
          goto LABEL_63;
        }
LABEL_47:
        BOOL v32 = __OFADD__(v9++, 1);
        if (v32) {
          goto LABEL_61;
        }
        if (*a1 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v33 = sub_1C277C5A0();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v33 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        if (v9 == v33) {
          return v6;
        }
      }
      unint64_t v22 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        id v23 = (id)MEMORY[0x1C875C230](v6, *a1);
        unint64_t v22 = *a1;
        if ((*a1 & 0xC000000000000001) == 0)
        {
LABEL_32:
          if ((v9 & 0x8000000000000000) != 0) {
            goto LABEL_66;
          }
          if (v9 >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_67;
          }
          id v24 = *(id *)(v22 + 8 * v9 + 32);
          goto LABEL_35;
        }
      }
      else
      {
        if ((v6 & 0x8000000000000000) != 0) {
          goto LABEL_64;
        }
        if (v6 >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_65;
        }
        id v23 = *(id *)(v22 + 8 * v6 + 32);
        if ((v22 & 0xC000000000000001) == 0) {
          goto LABEL_32;
        }
      }
      id v24 = (id)MEMORY[0x1C875C230](v9, v22);
      unint64_t v22 = *a1;
LABEL_35:
      int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v22;
      if (!isUniquelyReferenced_nonNull_bridgeObject
        || (v22 & 0x8000000000000000) != 0
        || (v22 & 0x4000000000000000) != 0)
      {
        sub_1C26B85F4(v22);
        unint64_t v22 = v26;
        *a1 = v26;
      }
      unint64_t v27 = *(void **)((v22 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20);
      *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v24;

      sub_1C277BA60();
      unint64_t v28 = *a1;
      int v29 = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v28;
      if (!v29 || (v28 & 0x8000000000000000) != 0 || (v28 & 0x4000000000000000) != 0)
      {
        sub_1C26B85F4(v28);
        unint64_t v28 = v30;
        *a1 = v30;
      }
      if ((v9 & 0x8000000000000000) != 0) {
        goto LABEL_68;
      }
      if (v9 >= *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_69;
      }
      unint64_t v31 = *(void **)((v28 & 0xFFFFFFFFFFFFFF8) + 8 * v9 + 0x20);
      *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 8 * v9 + 0x20) = v23;

      sub_1C277BA60();
      goto LABEL_46;
    }
    return v6;
  }
  unint64_t v34 = *a1;
  if (!(v34 >> 62)) {
    return *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v37 = sub_1C277C5A0();
  swift_bridgeObjectRelease();
  return v37;
}

uint64_t sub_1C26B91C4(unint64_t a1, void *a2)
{
  if (a1 >> 62) {
    goto LABEL_28;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v3)
  {
    uint64_t v4 = 0;
    uint64_t v20 = v3;
    uint64_t v5 = a2[2];
    while (1)
    {
      id v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C875C230](v4, a1) : *(id *)(a1 + 32 + 8 * v4);
      char v7 = v6;
      id v8 = objc_msgSend(v6, sel_request);
      id v9 = objc_msgSend(v8, sel_identifier);

      uint64_t v10 = sub_1C277B850();
      uint64_t v12 = v11;

      if (v5)
      {
        BOOL v13 = a2[4] == v10 && a2[5] == v12;
        if (v13 || (sub_1C277C7E0() & 1) != 0)
        {
LABEL_25:

          swift_bridgeObjectRelease();
          return v4;
        }
        if (v5 != 1) {
          break;
        }
      }
LABEL_22:

      swift_bridgeObjectRelease();
      if (__OFADD__(v4++, 1)) {
        goto LABEL_27;
      }
      if (v4 == v20) {
        return 0;
      }
    }
    uint64_t v14 = a2 + 7;
    uint64_t v15 = 1;
    while (1)
    {
      uint64_t v16 = v15 + 1;
      if (__OFADD__(v15, 1)) {
        break;
      }
      BOOL v17 = *(v14 - 1) == v10 && *v14 == v12;
      if (v17 || (sub_1C277C7E0() & 1) != 0) {
        goto LABEL_25;
      }
      v14 += 2;
      ++v15;
      if (v16 == v5) {
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C277C5A0();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_1C26B93B8(unint64_t *a1, void *a2)
{
  unint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v39 = a2;
  unint64_t v6 = sub_1C26B91C4(v5, a2);
  char v8 = v7;
  swift_bridgeObjectRelease();
  if (v2) {
    return v6;
  }
  if ((v8 & 1) == 0)
  {
    unint64_t v9 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_70;
    }
    if (*a1 >> 62)
    {
LABEL_71:
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_1C277C5A0();
      swift_bridgeObjectRelease();
      if (v9 != v37) {
        goto LABEL_6;
      }
    }
    else if (v9 != *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      uint64_t v40 = v39[2];
      while (1)
      {
        unint64_t v10 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          id v11 = (id)MEMORY[0x1C875C230](v9);
        }
        else
        {
          if ((v9 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_60:
            __break(1u);
LABEL_61:
            __break(1u);
            goto LABEL_62;
          }
          if (v9 >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_60;
          }
          id v11 = *(id *)(v10 + 8 * v9 + 32);
        }
        uint64_t v12 = v11;
        id v13 = objc_msgSend(v11, sel_request);
        id v14 = objc_msgSend(v13, sel_identifier);

        uint64_t v15 = sub_1C277B850();
        uint64_t v17 = v16;

        if (v40)
        {
          BOOL v18 = v39[4] == v15 && v39[5] == v17;
          if (v18 || (sub_1C277C7E0() & 1) != 0)
          {
LABEL_17:

            swift_bridgeObjectRelease();
            goto LABEL_47;
          }
          if (v40 != 1)
          {
            uint64_t v19 = v39 + 7;
            uint64_t v20 = 1;
            while (1)
            {
              uint64_t v21 = v20 + 1;
              if (__OFADD__(v20, 1)) {
                break;
              }
              BOOL v22 = *(v19 - 1) == v15 && *v19 == v17;
              if (v22 || (sub_1C277C7E0() & 1) != 0) {
                goto LABEL_17;
              }
              v19 += 2;
              ++v20;
              if (v21 == v40) {
                goto LABEL_27;
              }
            }
LABEL_62:
            __break(1u);
LABEL_63:
            __break(1u);
LABEL_64:
            __break(1u);
LABEL_65:
            __break(1u);
LABEL_66:
            __break(1u);
LABEL_67:
            __break(1u);
LABEL_68:
            __break(1u);
LABEL_69:
            __break(1u);
LABEL_70:
            __break(1u);
            goto LABEL_71;
          }
        }
LABEL_27:

        swift_bridgeObjectRelease();
        if (v6 != v9) {
          break;
        }
LABEL_46:
        BOOL v33 = __OFADD__(v6++, 1);
        if (v33) {
          goto LABEL_63;
        }
LABEL_47:
        BOOL v33 = __OFADD__(v9++, 1);
        if (v33) {
          goto LABEL_61;
        }
        if (*a1 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v34 = sub_1C277C5A0();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v34 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        if (v9 == v34) {
          return v6;
        }
      }
      unint64_t v23 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        id v24 = (id)MEMORY[0x1C875C230](v6, *a1);
        unint64_t v23 = *a1;
        if ((*a1 & 0xC000000000000001) == 0)
        {
LABEL_32:
          if ((v9 & 0x8000000000000000) != 0) {
            goto LABEL_66;
          }
          if (v9 >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_67;
          }
          id v25 = *(id *)(v23 + 8 * v9 + 32);
          goto LABEL_35;
        }
      }
      else
      {
        if ((v6 & 0x8000000000000000) != 0) {
          goto LABEL_64;
        }
        if (v6 >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_65;
        }
        id v24 = *(id *)(v23 + 8 * v6 + 32);
        if ((v23 & 0xC000000000000001) == 0) {
          goto LABEL_32;
        }
      }
      id v25 = (id)MEMORY[0x1C875C230](v9, v23);
      unint64_t v23 = *a1;
LABEL_35:
      int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v23;
      if (!isUniquelyReferenced_nonNull_bridgeObject
        || (v23 & 0x8000000000000000) != 0
        || (v23 & 0x4000000000000000) != 0)
      {
        sub_1C26B85F4(v23);
        unint64_t v23 = v27;
        *a1 = v27;
      }
      unint64_t v28 = *(void **)((v23 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20);
      *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v25;

      sub_1C277BA60();
      unint64_t v29 = *a1;
      int v30 = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v29;
      if (!v30 || (v29 & 0x8000000000000000) != 0 || (v29 & 0x4000000000000000) != 0)
      {
        sub_1C26B85F4(v29);
        unint64_t v29 = v31;
        *a1 = v31;
      }
      if ((v9 & 0x8000000000000000) != 0) {
        goto LABEL_68;
      }
      if (v9 >= *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_69;
      }
      BOOL v32 = *(void **)((v29 & 0xFFFFFFFFFFFFFF8) + 8 * v9 + 0x20);
      *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 8 * v9 + 0x20) = v24;

      sub_1C277BA60();
      goto LABEL_46;
    }
    return v6;
  }
  unint64_t v35 = *a1;
  if (!(v35 >> 62)) {
    return *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v38 = sub_1C277C5A0();
  swift_bridgeObjectRelease();
  return v38;
}

uint64_t sub_1C26B97D0(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v6 = a3;
    uint64_t v3 = a2;
    uint64_t v5 = a1;
    char v7 = (unint64_t *)*v4;
    if (!(*v4 >> 62))
    {
      if (*(void *)(((unint64_t)v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_1C277C5A0();
  swift_bridgeObjectRelease();
  if (v23 < v3) {
    goto LABEL_33;
  }
LABEL_4:
  char v7 = (unint64_t *)(v3 - v5);
  if (__OFSUB__(v3, v5))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  char v8 = (unint64_t *)(v5 - v3);
  if (__OFSUB__(0, v7))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1C277C5A0();
    swift_bridgeObjectRelease();
    uint64_t v10 = (uint64_t)v8 + v9;
    if (!__OFADD__(v9, v8)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1C277C5A0();
    swift_bridgeObjectRelease();
    unint64_t v11 = *v4;
    goto LABEL_15;
  }
  if (*v4 >> 62) {
    goto LABEL_36;
  }
  uint64_t v9 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v10 = v9 - (void)v7;
  if (__OFADD__(v9, v8)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v11 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v4 = v11;
  uint64_t v9 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v11 & 0x8000000000000000) == 0
    && (v11 & 0x4000000000000000) == 0)
  {
    uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8;
    if (v10 <= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v9 = 1;
  }
  uint64_t v26 = v5;
  char v7 = v8;
  char v8 = v6;
  if (v11 >> 62) {
    goto LABEL_39;
  }
  uint64_t v14 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v10) {
    uint64_t v14 = v10;
  }
  swift_bridgeObjectRetain();
  *uint64_t v4 = MEMORY[0x1C875C240](v9, v14, 1, v11);
  swift_bridgeObjectRelease();
  uint64_t v13 = *v4 & 0xFFFFFFFFFFFFFF8;
  unint64_t v6 = v8;
  char v8 = v7;
  uint64_t v5 = v26;
LABEL_18:
  uint64_t v15 = v13 + 32;
  uint64_t v16 = (char *)(v13 + 32 + 8 * v5);
  sub_1C2644ED8(0, v6);
  swift_arrayDestroy();
  if (v8)
  {
    if (*v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_1C277C5A0();
      swift_bridgeObjectRelease();
      uint64_t v18 = v24 - v3;
      if (!__OFSUB__(v24, v3))
      {
LABEL_21:
        if (v18 < 0)
        {
LABEL_46:
          uint64_t result = sub_1C277C610();
          __break(1u);
          return result;
        }
        uint64_t v19 = (char *)(v15 + 8 * v3);
        if (v5 != v3 || v16 >= &v19[8 * v18]) {
          memmove(v16, v19, 8 * v18);
        }
        if (!(*v4 >> 62))
        {
          uint64_t v20 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t v21 = (char *)v8 + v20;
          if (!__OFADD__(v20, v8))
          {
LABEL_27:
            *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v21;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v25 = sub_1C277C5A0();
        swift_bridgeObjectRelease();
        uint64_t v21 = (char *)v8 + v25;
        if (!__OFADD__(v25, v8)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v17 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v18 = v17 - v3;
      if (!__OFSUB__(v17, v3)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:

  return sub_1C277BA60();
}

uint64_t sub_1C26B9B14(char *a1, void (**a2)(void, void))
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  uint64_t v5 = &a1[OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_customNotificationSettings];
  swift_beginAccess();
  uint64_t v6 = *(void *)v5;
  if (v6)
  {
    _Block_copy(a2);
    a2[2](a2, v6);
  }
  else
  {
    aBlock[4] = sub_1C26B9C98;
    aBlock[5] = v4;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C260836C;
    aBlock[3] = &block_descriptor_10;
    char v7 = _Block_copy(aBlock);
    _Block_copy(a2);
    swift_retain();
    swift_release();
    v9.receiver = a1;
    v9.super_class = (Class)type metadata accessor for MockUNUserNotificationCenter();
    objc_msgSendSuper2(&v9, sel_getNotificationSettingsWithCompletionHandler_, v7);
    _Block_release(v7);
  }
  return swift_release();
}

uint64_t sub_1C26B9C60()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C26B9C98()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

void sub_1C26B9CAC(uint64_t a1)
{
  sub_1C26B7894(a1, *(void *)(v1 + 16), &qword_1EA304850);
}

uint64_t sub_1C26B9CD8(uint64_t a1)
{
  return sub_1C26B9CF0(a1);
}

uint64_t sub_1C26B9CF0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*(void *)(a1 + 8));
}

void sub_1C26B9D24(uint64_t a1)
{
  sub_1C26B7894(a1, *(void *)(v1 + 16), (unint64_t *)&qword_1EBB82FC0);
}

void sub_1C26B9D50(uint64_t a1)
{
  sub_1C2725090(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C26B9D58(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_1C2690BE8(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  sub_1C264DE8C();
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v16 = (char *)&v4[2 * a2 + 4];
    if (a1 != a2 || &v4[2 * a1 + 4] >= (void *)&v16[16 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[2 * a1 + 4], v16, 16 * v15);
    }
    uint64_t v17 = v4[2];
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_1C277C610();
  __break(1u);
  return result;
}

uint64_t sub_1C26B9EC8(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    unint64_t v5 = *v3;
    if (!(*v3 >> 62))
    {
      if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1C277C5A0();
  swift_bridgeObjectRelease();
  if (v19 < v2) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v6 = v4 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C277C5A0();
    swift_bridgeObjectRelease();
    uint64_t v9 = v8 + v6;
    if (!__OFADD__(v8, v6)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1C277C5A0();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  unint64_t v5 = *v3;
  if (*v3 >> 62) {
    goto LABEL_36;
  }
  uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v9 = v8 - v7;
  if (__OFADD__(v8, v6)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v5 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v3 = v5;
  uint64_t v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    uint64_t v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v8 = 1;
  }
  if (v5 >> 62) {
    goto LABEL_39;
  }
  uint64_t v12 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v9) {
    uint64_t v12 = v9;
  }
  swift_bridgeObjectRetain();
  unint64_t v5 = MEMORY[0x1C875C240](v8, v12, 1, v5);
  swift_bridgeObjectRelease();
  *uint64_t v3 = v5;
  uint64_t v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB80D78);
  swift_arrayDestroy();
  if (v6)
  {
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1C277C5A0();
      swift_bridgeObjectRelease();
      uint64_t v14 = v20 - v2;
      if (!__OFSUB__(v20, v2))
      {
LABEL_21:
        if (v14 < 0)
        {
LABEL_46:
          uint64_t result = sub_1C277C610();
          __break(1u);
          return result;
        }
        uint64_t v15 = (const void *)(v11 + 32 + 8 * v2);
        if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v15 + 8 * v14) {
          memmove((void *)(v11 + 32 + 8 * v4), v15, 8 * v14);
        }
        if (!(v5 >> 62))
        {
          uint64_t v16 = *(void *)(v11 + 16);
          uint64_t v17 = v16 + v6;
          if (!__OFADD__(v16, v6))
          {
LABEL_27:
            *(void *)(v11 + 16) = v17;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v21 = sub_1C277C5A0();
        swift_bridgeObjectRelease();
        uint64_t v17 = v21 + v6;
        if (!__OFADD__(v21, v6)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v13 = *(void *)(v11 + 16);
      uint64_t v14 = v13 - v2;
      if (!__OFSUB__(v13, v2)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:

  return sub_1C277BA60();
}

uint64_t sub_1C26BA1B8(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    unint64_t v5 = *v3;
    if (!(*v3 >> 62))
    {
      if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1C277C5A0();
  swift_bridgeObjectRelease();
  if (v19 < v2) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v6 = v4 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C277C5A0();
    swift_bridgeObjectRelease();
    uint64_t v9 = v8 + v6;
    if (!__OFADD__(v8, v6)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1C277C5A0();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  unint64_t v5 = *v3;
  if (*v3 >> 62) {
    goto LABEL_36;
  }
  uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v9 = v8 - v7;
  if (__OFADD__(v8, v6)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v5 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v3 = v5;
  uint64_t v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    uint64_t v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v8 = 1;
  }
  if (v5 >> 62) {
    goto LABEL_39;
  }
  uint64_t v12 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v9) {
    uint64_t v12 = v9;
  }
  swift_bridgeObjectRetain();
  unint64_t v5 = MEMORY[0x1C875C240](v8, v12, 1, v5);
  swift_bridgeObjectRelease();
  *uint64_t v3 = v5;
  uint64_t v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  type metadata accessor for HealthPlatformContextProvider.Context(0);
  swift_arrayDestroy();
  if (v6)
  {
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1C277C5A0();
      swift_bridgeObjectRelease();
      uint64_t v14 = v20 - v2;
      if (!__OFSUB__(v20, v2))
      {
LABEL_21:
        if (v14 < 0)
        {
LABEL_46:
          uint64_t result = sub_1C277C610();
          __break(1u);
          return result;
        }
        uint64_t v15 = (const void *)(v11 + 32 + 8 * v2);
        if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v15 + 8 * v14) {
          memmove((void *)(v11 + 32 + 8 * v4), v15, 8 * v14);
        }
        if (!(v5 >> 62))
        {
          uint64_t v16 = *(void *)(v11 + 16);
          uint64_t v17 = v16 + v6;
          if (!__OFADD__(v16, v6))
          {
LABEL_27:
            *(void *)(v11 + 16) = v17;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v21 = sub_1C277C5A0();
        swift_bridgeObjectRelease();
        uint64_t v17 = v21 + v6;
        if (!__OFADD__(v21, v6)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v13 = *(void *)(v11 + 16);
      uint64_t v14 = v13 - v2;
      if (!__OFSUB__(v13, v2)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:

  return sub_1C277BA60();
}

void sub_1C26BA498()
{
  if (!qword_1EA304868)
  {
    sub_1C264ED88();
    sub_1C2644ED8(255, &qword_1EA304870);
    sub_1C26BA650(&qword_1EA304878, (void (*)(uint64_t))sub_1C264ED88);
    sub_1C26BA564();
    unint64_t v0 = sub_1C277B210();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA304868);
    }
  }
}

unint64_t sub_1C26BA564()
{
  unint64_t result = qword_1EA304880;
  if (!qword_1EA304880)
  {
    sub_1C2644ED8(255, &qword_1EA304870);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304880);
  }
  return result;
}

uint64_t sub_1C26BA5CC()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C26BA604()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1C26BA644(uint64_t a1)
{
  sub_1C26B6E90(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1C26BA650(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C26BA698(uint64_t a1)
{
  return sub_1C26B6F8C(a1, *(id *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C26BA6B4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C26B7908(a1, a2);
}

uint64_t sub_1C26BA6DC(void *a1)
{
  return sub_1C26B7628(a1);
}

uint64_t sub_1C26BA6F4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1C2607FD4(a1, a2);
}

uint64_t sub_1C26BA70C(void *a1)
{
  return sub_1C26B760C(a1);
}

uint64_t sub_1C26BA724(uint64_t a1)
{
  return sub_1C26B7C30(a1);
}

uint64_t sub_1C26BA73C(unint64_t *a1)
{
  return sub_1C26B7AB0(a1);
}

__n128 BasicGeneratorPipeline.domain.setter(uint64_t a1)
{
  unint64_t v3 = *(void *)a1;
  unsigned __int8 v4 = *(unsigned char *)(a1 + 24);
  unint64_t v5 = (void *)v1->n128_u64[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v1->n128_u64[1] = v3;
  __n128 result = *(__n128 *)(a1 + 8);
  v1[1] = result;
  v1[2].n128_u8[0] = v4;
  return result;
}

uint64_t (*BasicGeneratorPipeline.domain.modify())()
{
  return nullsub_1;
}

double BasicGeneratorPipeline.init(generator:domain:)@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C26086AC(0, &qword_1EA304890, (void (*)(uint64_t))sub_1C26468B0);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v15 - v9;
  uint64_t v11 = *a2;
  char v12 = *((unsigned char *)a2 + 24);
  sub_1C26482E4(a1, (uint64_t)v16);
  sub_1C26468B0();
  *(_OWORD *)uint64_t v15 = *(_OWORD *)(a2 + 1);
  sub_1C277B440();
  sub_1C2608700(&qword_1EA304898, &qword_1EA304890, (void (*)(uint64_t))sub_1C26468B0);
  uint64_t v13 = sub_1C277B4E0();
  __swift_destroy_boxed_opaque_existential_0(a1);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *(void *)a3 = v13;
  *(void *)(a3 + 8) = v11;
  double result = v15[0];
  *(_OWORD *)(a3 + 16) = *(_OWORD *)v15;
  *(unsigned char *)(a3 + 32) = v12;
  return result;
}

uint64_t BasicGenerator.publisher.getter()
{
  return swift_retain();
}

uint64_t _s14HealthPlatform22BasicGeneratorPipelineV6domainAA0D6DomainVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  char v5 = *(unsigned char *)(v1 + 32);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  id v6 = v2;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

double BasicGenerator.init(changes:domain:)@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C26086AC(0, &qword_1EBB85910, (void (*)(uint64_t))sub_1C2608654);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v15 - v9;
  uint64_t v11 = *a2;
  char v12 = *((unsigned char *)a2 + 24);
  uint64_t v16 = a1;
  sub_1C2608654();
  *(_OWORD *)uint64_t v15 = *(_OWORD *)(a2 + 1);
  sub_1C277B440();
  sub_1C2608700(&qword_1EBB85908, &qword_1EBB85910, (void (*)(uint64_t))sub_1C2608654);
  uint64_t v13 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *(void *)a3 = v13;
  *(void *)(a3 + 8) = v11;
  double result = v15[0];
  *(_OWORD *)(a3 + 16) = *(_OWORD *)v15;
  *(unsigned char *)(a3 + 32) = v12;
  return result;
}

__n128 _s14HealthPlatform22BasicGeneratorPipelineV9publisher6domainAC7Combine12AnyPublisherVyAA0D0_ps5NeverOG_AA0D6DomainVtcfC_0@<Q0>(unint64_t a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X8>)
{
  unint64_t v3 = *(void *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 24);
  a3->n128_u64[0] = a1;
  a3->n128_u64[1] = v3;
  __n128 result = *(__n128 *)(a2 + 8);
  a3[1] = result;
  a3[2].n128_u8[0] = v4;
  return result;
}

uint64_t sub_1C26BAB40()
{
  return swift_retain();
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for BasicGeneratorPipeline()
{
  return &type metadata for BasicGeneratorPipeline;
}

uint64_t _s14HealthPlatform22BasicGeneratorPipelineVwcp_0(uint64_t a1, uint64_t a2)
{
  long long v3 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_retain();
  id v5 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s14HealthPlatform22BasicGeneratorPipelineVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  uint64_t v4 = *(void **)(a1 + 8);
  id v5 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v5;
  id v6 = v5;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t _s14HealthPlatform22BasicGeneratorPipelineVwta_0(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t _s14HealthPlatform22BasicGeneratorPipelineVwet_0(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C26BAD18(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void HealthPlatformOrchestrationContext.feedItemStorage(for:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  v24[2] = a5;
  uint64_t v11 = sub_1C277ADF0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(uint64_t (**)(uint64_t))(*(void *)(a4 + 8) + 16);
  uint64_t v25 = v5;
  uint64_t v26 = a3;
  uint64_t v16 = (void *)v15(a3);
  if (v16)
  {
    uint64_t v17 = v16;
    id v18 = objc_msgSend(v16, sel_profileIdentifier);
    uint64_t v19 = _sSo11NSPredicateC14HealthPlatformE24feedItemStoragePredicate3for17profileIdentifierAB0B13Orchestration8Executor_p_So09HKProfileJ0CtFZ_0(a1, a2, v18);

    (*(void (**)(uint64_t, uint64_t, void *, uint64_t, uint64_t))(a4 + 16))(a1, a2, v19, v26, a4);
  }
  else
  {
    v24[1] = sub_1C2669068();
    sub_1C26322C0();
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1C277E480;
    swift_getObjectType();
    sub_1C277B090();
    uint64_t v21 = sub_1C277ADE0();
    v24[0] = v6;
    uint64_t v23 = v22;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    *(void *)(v20 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v20 + 64) = sub_1C263226C();
    *(void *)(v20 + 32) = v21;
    *(void *)(v20 + 40) = v23;
    uint64_t v19 = (void *)sub_1C277BCC0();
    (*(void (**)(uint64_t, uint64_t, void *, uint64_t, uint64_t))(a4 + 16))(a1, a2, v19, v26, a4);
  }
}

void FeedItemNotificationManagerStore.init(domain:primaryHealthStore:)(void *a1@<X2>, uint64_t *a2@<X8>)
{
  sub_1C277A4D0();
  swift_allocObject();
  uint64_t v4 = sub_1C277A4C0();
  sub_1C277A4A0();
  swift_allocObject();
  uint64_t v5 = sub_1C277A490();
  type metadata accessor for UnfairLock();
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = (_DWORD *)swift_slowAlloc();
  *(void *)(v6 + 16) = v7;
  *uint64_t v7 = 0;
  id v8 = objc_allocWithZone(MEMORY[0x1E4F2B138]);
  id v9 = a1;
  uint64_t v10 = (void *)sub_1C277B820();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v8, sel_initWithCategory_domainName_healthStore_, 1, v10, v9);

  *a2 = v4;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = (uint64_t)v9;
  a2[4] = (uint64_t)v11;
}

void FeedItemNotificationManagerStore.addOrUpdate(_:)(long long *a1)
{
  uint64_t v37 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1C277A8A0();
  uint64_t v28 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v7 = a1[2];
  uint64_t v36 = *((void *)a1 + 6);
  long long v8 = *a1;
  v35[1] = a1[1];
  v35[2] = v7;
  v35[0] = v8;
  uint64_t v9 = *((void *)v1 + 4);
  long long v29 = v1[1];
  uint64_t v31 = v29;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v29 + 16));
  uint64_t v10 = *(void **)&v35[0];
  long long v30 = *v1;
  v33[0] = v30;
  v33[1] = v29;
  uint64_t v34 = v9;
  id v11 = *(id *)&v35[0];
  uint64_t v12 = sub_1C26BB43C(v10);
  uint64_t v13 = sub_1C265C64C(v12);
  swift_bridgeObjectRelease();
  uint64_t v32 = v13;
  sub_1C265D7F0((id *)v35);
  sub_1C26929CC((uint64_t)v33, v35);
  uint64_t v14 = *(void **)&v33[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v15 = sub_1C2673040(v32);
  swift_bridgeObjectRelease();
  *(void *)&v33[0] = v15;
  sub_1C26BB928();
  sub_1C26BBCA0(&qword_1EA3048A0, (void (*)(void))sub_1C26BB980);
  uint64_t v16 = sub_1C277A4B0();
  uint64_t v18 = v17;
  swift_release();
  if (!v2)
  {
    *(void *)&long long v30 = v9;
    uint64_t v19 = v16;
    *(void *)&long long v29 = v18;
    uint64_t v20 = (void *)sub_1C277A770();
    if (v10)
    {
      id v21 = v11;
      id v22 = objc_msgSend(v21, sel_identifier);
      sub_1C277A880();

      sub_1C277A850();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v4);
    }
    uint64_t v23 = (void *)sub_1C277B820();
    swift_bridgeObjectRelease();
    *(void *)&v33[0] = 0;
    unsigned __int8 v24 = objc_msgSend((id)v30, sel_setData_forKey_error_, v20, v23, v33);

    id v25 = *(id *)&v33[0];
    if ((v24 & 1) == 0)
    {
      uint64_t v26 = v25;
      sub_1C277A620();

      swift_willThrow();
    }
    sub_1C263CC84(v19, v29);
  }

  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v31 + 16));
}

uint64_t sub_1C26BB43C(void *a1)
{
  uint64_t v2 = sub_1C277A8A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v6 = a1;
    id v7 = objc_msgSend(v6, sel_identifier);
    sub_1C277A880();

    sub_1C277A850();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  uint64_t v8 = sub_1C277BE00();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  if (v10 >> 60 == 15) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1C26BB928();
  sub_1C263D360(v8, v10);
  sub_1C26BBCA0(&qword_1EA3048B8, (void (*)(void))sub_1C26BBD0C);
  sub_1C277A480();
  sub_1C2641B58(v8, v10);
  sub_1C2641B58(v8, v10);
  return v12[4];
}

void sub_1C26BB928()
{
  if (!qword_1EBB82E00)
  {
    unint64_t v0 = sub_1C277BB20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB82E00);
    }
  }
}

unint64_t sub_1C26BB980()
{
  unint64_t result = qword_1EA3048A8;
  if (!qword_1EA3048A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3048A8);
  }
  return result;
}

void destroy for FeedItemNotificationManagerStore(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();

  uint64_t v2 = *(void **)(a1 + 32);
}

void *initializeWithCopy for FeedItemNotificationManagerStore(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = (void *)a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = (void *)a2[4];
  a1[4] = v5;
  swift_retain();
  swift_retain();
  swift_retain();
  id v6 = v4;
  id v7 = v5;
  return a1;
}

void *assignWithCopy for FeedItemNotificationManagerStore(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  uint64_t v4 = (void *)a2[3];
  uint64_t v5 = (void *)a1[3];
  a1[3] = v4;
  id v6 = v4;

  id v7 = (void *)a2[4];
  uint64_t v8 = (void *)a1[4];
  a1[4] = v7;
  id v9 = v7;

  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for FeedItemNotificationManagerStore(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  uint64_t v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  uint64_t v5 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  return a1;
}

uint64_t getEnumTagSinglePayload for FeedItemNotificationManagerStore(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedItemNotificationManagerStore(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedItemNotificationManagerStore()
{
  return &type metadata for FeedItemNotificationManagerStore;
}

unint64_t sub_1C26BBC4C()
{
  unint64_t result = qword_1EA3048B0;
  if (!qword_1EA3048B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3048B0);
  }
  return result;
}

uint64_t sub_1C26BBCA0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C26BB928();
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C26BBD0C()
{
  unint64_t result = qword_1EA3048C0;
  if (!qword_1EA3048C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3048C0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FeedItemNotificationManagerError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C26BBDFCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedItemNotificationManagerError()
{
  return &type metadata for FeedItemNotificationManagerError;
}

unint64_t sub_1C26BBE38()
{
  unint64_t result = qword_1EA3048C8;
  if (!qword_1EA3048C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3048C8);
  }
  return result;
}

uint64_t RecursiveUnfairLock.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = (void *)swift_slowAlloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = 0;
  return v0;
}

uint64_t RecursiveUnfairLock.deinit()
{
  MEMORY[0x1C875D230](*(void *)(v0 + 16), -1, -1);
  return v0;
}

uint64_t RecursiveUnfairLock.__deallocating_deinit()
{
  MEMORY[0x1C875D230](*(void *)(v0 + 16), -1, -1);

  return swift_deallocClassInstance();
}

uint64_t os_unfair_recursive_lock_lock()
{
  return os_unfair_recursive_lock_lock_with_options();
}

uint64_t sub_1C26BBF44()
{
  return os_unfair_recursive_lock_trylock();
}

uint64_t sub_1C26BBF60()
{
  return os_unfair_recursive_lock_lock();
}

uint64_t sub_1C26BBF6C()
{
  return os_unfair_recursive_lock_unlock();
}

uint64_t method lookup function for RecursiveUnfairLock(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RecursiveUnfairLock);
}

uint64_t dispatch thunk of RecursiveUnfairLock.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of RecursiveUnfairLock.assertOwner()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of RecursiveUnfairLock.trylock()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t PluginFeedItem.SharableModelReference.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PluginFeedItem.SharableModelReference.init(identifier:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t PluginFeedItem.SharableModelReference.init(_:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C2639748((uint64_t)a1);
  *a2 = v5;
  a2[1] = v4;
  return result;
}

uint64_t static PluginFeedItem.SharableModelReference.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1C277C7E0();
  }
}

uint64_t PluginFeedItem.SharableModelReference.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1C277B8B0();

  return swift_bridgeObjectRelease();
}

uint64_t PluginFeedItem.SharableModelReference.hashValue.getter()
{
  return sub_1C277C910();
}

uint64_t sub_1C26BC13C(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1C277C7E0();
  }
}

uint64_t sub_1C26BC16C()
{
  return sub_1C277C910();
}

uint64_t sub_1C26BC1B8()
{
  return sub_1C277B8B0();
}

uint64_t sub_1C26BC1C0()
{
  return sub_1C277C910();
}

Swift::Void __swiftcall PluginFeedItem.setAssociatedSharableModelReferences(_:)(Swift::OpaquePointer a1)
{
  uint64_t v3 = type metadata accessor for PluginSharableModel();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3 - 8);
  id v7 = (uint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v5);
  id v9 = (char *)&v21 - v8;
  int64_t v10 = *((void *)a1._rawValue + 2);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (v10)
  {
    uint64_t v22 = v1;
    uint64_t v24 = MEMORY[0x1E4FBC860];
    sub_1C2659DE0(0, v10, 0);
    uint64_t v12 = (char *)a1._rawValue
        + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v13 = *(void *)(v4 + 72);
    uint64_t v11 = v24;
    uint64_t v23 = v13;
    do
    {
      sub_1C26397A4((uint64_t)v12, (uint64_t)v9);
      sub_1C26397A4((uint64_t)v9, (uint64_t)v7);
      uint64_t v15 = *v7;
      uint64_t v14 = v7[1];
      swift_bridgeObjectRetain();
      sub_1C2639748((uint64_t)v7);
      sub_1C2639748((uint64_t)v9);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C2659DE0(0, *(void *)(v11 + 16) + 1, 1);
        uint64_t v13 = v23;
        uint64_t v11 = v24;
      }
      unint64_t v17 = *(void *)(v11 + 16);
      unint64_t v16 = *(void *)(v11 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1C2659DE0(v16 > 1, v17 + 1, 1);
        uint64_t v13 = v23;
        uint64_t v11 = v24;
      }
      *(void *)(v11 + 16) = v17 + 1;
      uint64_t v18 = v11 + 16 * v17;
      *(void *)(v18 + 32) = v15;
      *(void *)(v18 + 40) = v14;
      v12 += v13;
      --v10;
    }
    while (v10);
    uint64_t v1 = v22;
  }
  uint64_t v19 = sub_1C265C504(v11);
  swift_bridgeObjectRelease();
  uint64_t v20 = *(int *)(type metadata accessor for PluginFeedItem() + 56);
  swift_bridgeObjectRelease();
  *(void *)(v1 + v20) = v19;
}

unint64_t sub_1C26BC404()
{
  unint64_t result = qword_1EBB853A0;
  if (!qword_1EBB853A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB853A0);
  }
  return result;
}

void *_s14descr1F1DC3F91C22SharableModelReferenceVwCP(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s14descr1F1DC3F91C22SharableModelReferenceVwxx()
{
  return swift_bridgeObjectRelease();
}

void *_s14descr1F1DC3F91C22SharableModelReferenceVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s14descr1F1DC3F91C22SharableModelReferenceVwta(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t static InputSignalSet.LookupKey.pregnancyState.getter()
{
  uint64_t v0 = sub_1C277AEE0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBB83B60 != -1) {
    swift_once();
  }
  uint64_t v4 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBB83B40);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  type metadata accessor for PregnancyStateInputSignal();
  return sub_1C277ACD0();
}

uint64_t static PregnancyStateInputSignal.identityConfiguration.getter()
{
  uint64_t v0 = sub_1C277AEE0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBB83B60 != -1) {
    swift_once();
  }
  uint64_t v4 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBB83B40);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  return sub_1C277AEB0();
}

uint64_t sub_1C26BC72C()
{
  uint64_t v0 = sub_1C277AEE0();
  __swift_allocate_value_buffer(v0, qword_1EBB83B40);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBB83B40);
  sub_1C277C830();
  id v1 = (id)HKSensitiveLogItem();
  swift_unknownObjectRelease();
  sub_1C277C110();
  swift_unknownObjectRelease();
  sub_1C277B860();
  return sub_1C277AEF0();
}

uint64_t type metadata accessor for PregnancyStateInputSignal()
{
  return self;
}

uint64_t PregnancyStateInputSignal.observer.getter()
{
  return swift_unknownObjectRetain();
}

id PregnancyStateInputSignal.__allocating_init(context:observer:healthStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();

  return sub_1C26BD1D4(a1, a3, a4, a5, v5, ObjectType, a2);
}

id PregnancyStateInputSignal.init(context:observer:healthStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();

  return sub_1C26BD24C(a1, a3, a4, a5, v5, ObjectType, a2);
}

void *sub_1C26BC954@<X0>(void *result@<X0>, void *a2@<X8>)
{
  if (*result)
  {
    id v3 = 0;
  }
  else
  {
    uint64_t v4 = result;
    uint64_t v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v6 = objc_allocWithZone(MEMORY[0x1E4F2B168]);
    v8[4] = sub_1C2615E9C;
    v8[5] = v5;
    v8[0] = MEMORY[0x1E4F143A8];
    v8[1] = 1107296256;
    v8[2] = sub_1C2615DFC;
    v8[3] = &block_descriptor_8;
    id v7 = _Block_copy(v8);
    swift_retain();
    id v3 = objc_msgSend(v6, sel_initWithIsRunningForMaintenance_updateHandler_, 1, v7);
    _Block_release(v7);
    swift_release();
    swift_release();
    *uint64_t v4 = v3;
    unint64_t result = v3;
  }
  *a2 = v3;
  return result;
}

Swift::Void __swiftcall PregnancyStateInputSignal.stopObservation()()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC14HealthPlatform25PregnancyStateInputSignal_protectedQuery);
  id v3 = (uint64_t *)&v2[4];
  uint64_t v4 = v2 + 6;
  os_unfair_lock_lock(v2 + 6);
  sub_1C26BCB44(v3, &v6);
  os_unfair_lock_unlock(v4);
  if (v6)
  {
    id v5 = v6;
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC14HealthPlatform25PregnancyStateInputSignal_healthStore), sel_stopQuery_);
  }
}

uint64_t *sub_1C26BCB44@<X0>(uint64_t *result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *result;
  *unint64_t result = 0;
  *a2 = v2;
  return result;
}

uint64_t PregnancyStateInputSignal.description.getter()
{
  uint64_t v0 = sub_1C277AEE0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  uint64_t v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v2);
  id v6 = &v12[-v5];
  if (qword_1EBB83B60 != -1) {
    swift_once();
  }
  uint64_t v7 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBB83B40);
  uint64_t v8 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v1 + 16);
  v8(v6, v7, v0);
  v8(v4, (uint64_t)v6, v0);
  sub_1C277C830();
  id v9 = (id)HKSensitiveLogItem();
  swift_unknownObjectRelease();
  sub_1C277C110();
  swift_unknownObjectRelease();
  uint64_t v10 = sub_1C277B860();
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v6, v0);
  return v10;
}

id PregnancyStateInputSignal.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void PregnancyStateInputSignal.init()()
{
}

id PregnancyStateInputSignal.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C26BD040()
{
  return swift_unknownObjectRetain();
}

void sub_1C26BD078()
{
}

void sub_1C26BD09C()
{
}

uint64_t static InputSignalIdentifier.pregnancyUpdate.getter()
{
  uint64_t v0 = sub_1C277AEE0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBB83B60 != -1) {
    swift_once();
  }
  uint64_t v4 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBB83B40);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  type metadata accessor for PregnancyStateInputSignal();
  return sub_1C277ACD0();
}

id sub_1C26BD1D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, Class a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = (char *)objc_allocWithZone(a5);

  return sub_1C26BD24C(a1, a2, a3, a4, v13, a6, a7);
}

id sub_1C26BD24C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v14 = OBJC_IVAR____TtC14HealthPlatform25PregnancyStateInputSignal_protectedQuery;
  sub_1C26BD660();
  uint64_t v15 = swift_allocObject();
  *(_DWORD *)(v15 + 24) = 0;
  *(void *)(v15 + 16) = 0;
  *(void *)&a5[v14] = v15;
  unint64_t v16 = &a5[OBJC_IVAR____TtC14HealthPlatform25PregnancyStateInputSignal_context];
  *(void *)unint64_t v16 = a1;
  *((void *)v16 + 1) = a7;
  unint64_t v17 = &a5[OBJC_IVAR____TtC14HealthPlatform25PregnancyStateInputSignal_observer];
  *(void *)unint64_t v17 = a2;
  *((void *)v17 + 1) = a3;
  *(void *)&a5[OBJC_IVAR____TtC14HealthPlatform25PregnancyStateInputSignal_healthStore] = a4;
  v19.receiver = a5;
  v19.super_class = ObjectType;
  return objc_msgSendSuper2(&v19, sel_init);
}

void _s14HealthPlatform25PregnancyStateInputSignalC16beginObservation4from14configurationsy0A13Orchestration23SecureCodingValueAnchorVySo18HKMCPregnancyModelCAkG0lM6ObjectAAyHCg_GSg_SayAG21IdentityConfigurationVGtF_0()
{
  if (qword_1EBB85ED0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1C277B130();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBB85EB8);
  uint64_t v2 = v0;
  uint64_t v3 = sub_1C277B100();
  os_log_type_t v4 = sub_1C277BD40();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    id v13 = v2;
    uint64_t v7 = v2;
    sub_1C277C0D0();
    *uint64_t v6 = v2;

    _os_log_impl(&dword_1C2601000, v3, v4, "[%@] Beginning Observation", v5, 0xCu);
    sub_1C26A1EFC(0, (unint64_t *)&qword_1EBB854A0, (unint64_t *)&qword_1EBB85F30);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v6, -1, -1);
    MEMORY[0x1C875D230](v5, -1, -1);
  }
  else
  {
  }
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = v9 + 4;
  uint64_t v11 = v9 + 6;
  os_unfair_lock_lock(v9 + 6);
  sub_1C26BD60C(v10, &v13);
  os_unfair_lock_unlock(v11);
  uint64_t v12 = v13;
  if (v13)
  {
    objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC14HealthPlatform25PregnancyStateInputSignal_healthStore], sel_executeQuery_, v13);
  }
}

uint64_t sub_1C26BD54C(uint64_t a1, uint64_t a2)
{
  return sub_1C2616858(&qword_1EBB83B68, a2, (void (*)(uint64_t))type metadata accessor for PregnancyStateInputSignal);
}

uint64_t sub_1C26BD594()
{
  return sub_1C2616858(&qword_1EBB829F0, 255, (void (*)(uint64_t))sub_1C26167E4);
}

uint64_t method lookup function for PregnancyStateInputSignal(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PregnancyStateInputSignal);
}

uint64_t dispatch thunk of PregnancyStateInputSignal.__allocating_init(context:observer:healthStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

void *sub_1C26BD60C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1C26BC954(a1, a2);
}

uint64_t sub_1C26BD628()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C26BD660()
{
  if (!qword_1EBB84328)
  {
    sub_1C26A1EFC(255, &qword_1EBB842B0, &qword_1EBB83958);
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_1C277C370();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB84328);
    }
  }
}

id static EncodedFeatureTag.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v1 = (void *)sub_1C277B820();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

char *keypath_get_selector_data()
{
  return sel_data;
}

void sub_1C26BD758(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_data);
  uint64_t v4 = sub_1C277A780();
  uint64_t v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

void sub_1C26BD7B4(void *a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_name()
{
  return sel_name;
}

void sub_1C26BD7E0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_name);
  uint64_t v4 = sub_1C277B850();
  uint64_t v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

void sub_1C26BD83C(void *a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void keypath_setTm_0(void *a1, void **a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, void), SEL *a6)
{
  uint64_t v7 = *a2;
  id v8 = (id)a5(*a1, a1[1]);
  objc_msgSend(v7, *a6, v8);
}

char *keypath_get_selector_feedItem()
{
  return sel_feedItem;
}

id sub_1C26BD8D0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_feedItem);
  *a2 = result;
  return result;
}

id sub_1C26BD90C(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFeedItem_, *a1);
}

uint64_t Plugin.__allocating_init(context:package:)(void *a1)
{
  id v3 = self;
  uint64_t v4 = (void *)sub_1C277B820();
  id v5 = objc_msgSend(v3, sel_entityForName_inManagedObjectContext_, v4, a1);

  if (v5)
  {
    id v6 = objc_msgSend(objc_allocWithZone(v1), sel_initWithEntity_insertIntoManagedObjectContext_, v5, a1);
    uint64_t v7 = (void *)sub_1C277B820();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setPackage_, v7);

    return (uint64_t)v6;
  }
  else
  {
    uint64_t result = sub_1C277C560();
    __break(1u);
  }
  return result;
}

uint64_t static Plugin.entityName.getter()
{
  return 0x6E6967756C50;
}

uint64_t sub_1C26BDA7C()
{
  return 0x6E6967756C50;
}

void sub_1C26BDA90()
{
  uint64_t v1 = v0;
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C277B130();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBB86280);
  id v3 = sub_1C277B100();
  os_log_type_t v4 = sub_1C277BD00();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v11 = v6;
    *(_DWORD *)id v5 = 136315138;
    type metadata accessor for DaemonHealthExperienceStore();
    sub_1C2685A98(0, &qword_1EBB82690, 255, (void (*)(uint64_t))type metadata accessor for DaemonHealthExperienceStore);
    uint64_t v7 = sub_1C277B860();
    uint64_t v10 = sub_1C263FDFC(v7, v8, &v11);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v3, v4, "[%s] registerForDebuggingRequests()", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v6, -1, -1);
    MEMORY[0x1C875D230](v5, -1, -1);
  }

  id v9 = objc_msgSend(self, sel_defaultCenter);
  if (qword_1EBB82F50 != -1) {
    swift_once();
  }
  objc_msgSend(v9, sel_addObserver_selector_name_object_, v1, sel_debuggingInfoRequestedWithNote_, qword_1EBB82F48, 0, v10, v11);
}

void sub_1C26BDCD0()
{
  uint64_t v1 = v0;
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C277B130();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBB86280);
  id v3 = sub_1C277B100();
  os_log_type_t v4 = sub_1C277BD00();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v12 = v6;
    *(_DWORD *)id v5 = 136315138;
    type metadata accessor for DaemonHealthExperienceStoreOracle();
    sub_1C2685A98(0, &qword_1EBB80D10, v7, (void (*)(uint64_t))type metadata accessor for DaemonHealthExperienceStoreOracle);
    uint64_t v8 = sub_1C277B860();
    uint64_t v11 = sub_1C263FDFC(v8, v9, &v12);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v3, v4, "[%s] registerForDebuggingRequests()", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v6, -1, -1);
    MEMORY[0x1C875D230](v5, -1, -1);
  }

  id v10 = objc_msgSend(self, sel_defaultCenter);
  if (qword_1EBB82F50 != -1) {
    swift_once();
  }
  objc_msgSend(v10, sel_addObserver_selector_name_object_, v1, sel_debuggingInfoRequestedWithNote_, qword_1EBB82F48, 0, v11, v12);
}

uint64_t sub_1C26BDF08(uint64_t a1, uint64_t a2, void *a3)
{
  os_log_type_t v4 = (void *)sub_1C277B820();
  id v5 = objc_msgSend(a3, sel_objectForKey_, v4);

  if (v5)
  {
    sub_1C277C110();
    swift_unknownObjectRelease();
    sub_1C262FD34(&v7, v8);
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  sub_1C262F068(0, (unint64_t *)&qword_1EBB84A80);
  if (swift_dynamicCast()) {
    return v7;
  }
  else {
    return 2;
  }
}

uint64_t sub_1C26BDFD4()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = (void *)sub_1C277B820();
  id v3 = objc_msgSend(v1, sel_objectForKey_, v2);

  if (v3)
  {
    sub_1C277C110();
    swift_unknownObjectRelease();
    sub_1C262FD34(&v5, v6);
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_1C262F068(0, (unint64_t *)&qword_1EBB84A80);
  sub_1C262F068(0, (unint64_t *)&qword_1EBB85920);
  if (swift_dynamicCast()) {
    return v5;
  }
  else {
    return 0;
  }
}

char *sub_1C26BE0BC()
{
  sub_1C2629308();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1C277A750();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  id v4 = objc_allocWithZone((Class)type metadata accessor for DaemonHealthExperienceStoreOracle());
  uint64_t result = DaemonHealthExperienceStoreOracle.init(overrideStoreLocation:)((uint64_t)v2);
  qword_1EBB83A28 = (uint64_t)result;
  return result;
}

char *DaemonHealthExperienceStoreOracle.__allocating_init(overrideStoreLocation:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return DaemonHealthExperienceStoreOracle.init(overrideStoreLocation:)(a1);
}

char *DaemonHealthExperienceStoreOracle.init(overrideStoreLocation:)(uint64_t a1)
{
  sub_1C2629308();
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v18 - v7;
  uint64_t v9 = OBJC_IVAR____TtC14HealthPlatform33DaemonHealthExperienceStoreOracle__lastPolledHealthKitDatabaseIdentifier;
  uint64_t v10 = qword_1EBB84910;
  uint64_t v11 = v1;
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v12 = &v11[v9];
  id v13 = (void *)qword_1EBB84900;
  *((void *)v12 + 3) = 0;
  *((void *)v12 + 4) = 0;
  *(void *)uint64_t v12 = 0xD00000000000002FLL;
  *((void *)v12 + 1) = 0x80000001C278AB10;
  *((void *)v12 + 2) = v13;
  v12[40] = 0;
  id v14 = v13;

  sub_1C262491C(a1, (uint64_t)v8);
  type metadata accessor for DaemonHealthExperienceStore();
  swift_allocObject();
  sub_1C262491C((uint64_t)v8, (uint64_t)v6);
  uint64_t v15 = DiskHealthExperienceStore.init(overrideStoreLocation:observeExternalChanges:)((uint64_t)v6, 1);
  swift_retain();
  sub_1C26BDA90();
  swift_release();
  sub_1C2685A3C((uint64_t)v8);
  unint64_t v16 = sub_1C26BF010(v15, v11);
  sub_1C26BDCD0();

  sub_1C2685A3C(a1);
  return v16;
}

uint64_t sub_1C26BE34C(uint64_t a1)
{
  sub_1C26482E4(a1, (uint64_t)v2);
  sub_1C262B07C(0, &qword_1EBB82698);
  type metadata accessor for DiskHealthExperienceStore();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    sub_1C26BE3CC();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C26BE3CC()
{
  swift_getObjectType();
  id v1 = sub_1C26BF2F4();
  uint64_t v3 = v2;
  uint64_t v4 = (long long *)(v0
                  + OBJC_IVAR____TtC14HealthPlatform33DaemonHealthExperienceStoreOracle__lastPolledHealthKitDatabaseIdentifier);
  swift_beginAccess();
  *(_OWORD *)&v26[9] = *(long long *)((char *)v4 + 25);
  long long v5 = v4[1];
  long long v25 = *v4;
  *(_OWORD *)uint64_t v26 = v5;
  if (v26[24])
  {
    uint64_t v6 = self;
    sub_1C26BF4F0((uint64_t)&v25);
    if ((objc_msgSend(v6, sel_isAppleInternalInstall) & 1) == 0)
    {
LABEL_5:
      id v10 = *(id *)&v26[8];
      uint64_t v9 = *(void *)&v26[16];
      swift_bridgeObjectRetain();
      goto LABEL_7;
    }
  }
  else
  {
    sub_1C26BF4F0((uint64_t)&v25);
  }
  uint64_t v7 = sub_1C26BDFD4();
  if (v8 == 1) {
    goto LABEL_5;
  }
  id v10 = (id)v7;
  uint64_t v9 = v8;
LABEL_7:
  sub_1C26BF534((uint64_t)&v25);
  if (!v9)
  {
    if (qword_1EBB85EA8 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1C277B130();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EBB85ED8);
    uint64_t v12 = sub_1C277B100();
    os_log_type_t v13 = sub_1C277BD40();
    if (!os_log_type_enabled(v12, v13)) {
      goto LABEL_21;
    }
    id v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    v24[0] = v15;
    *(_DWORD *)id v14 = 136315138;
    swift_getMetatypeMetadata();
    uint64_t v16 = sub_1C277B860();
    sub_1C263FDFC(v16, v17, v24);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    uint64_t v18 = "[%s]: First time fetching DB identifier, wiping cache!";
    goto LABEL_20;
  }
  if (v1 != v10 || v9 != v3)
  {
    char v19 = sub_1C277C7E0();
    swift_bridgeObjectRelease();
    if (v19) {
      return swift_bridgeObjectRelease();
    }
    if (qword_1EBB85EA8 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1C277B130();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EBB85ED8);
    uint64_t v12 = sub_1C277B100();
    os_log_type_t v13 = sub_1C277BD40();
    if (!os_log_type_enabled(v12, v13))
    {
LABEL_21:

      sub_1C270907C();
      swift_beginAccess();
      sub_1C26B3080((uint64_t)v1, v3);
      swift_endAccess();
      return swift_bridgeObjectRelease();
    }
    id v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    v24[0] = v15;
    *(_DWORD *)id v14 = 136315138;
    swift_getMetatypeMetadata();
    uint64_t v21 = sub_1C277B860();
    sub_1C263FDFC(v21, v22, v24);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    uint64_t v18 = "[%s]: DB identifier has changed, wiping cache!";
LABEL_20:
    _os_log_impl(&dword_1C2601000, v12, v13, v18, v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v15, -1, -1);
    MEMORY[0x1C875D230](v14, -1, -1);
    goto LABEL_21;
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C26BEBE8()
{
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC14HealthPlatform33DaemonHealthExperienceStoreOracle__lastPolledHealthKitDatabaseIdentifier
                     + 16));
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

id DaemonHealthExperienceStoreOracle.__deallocating_deinit()
{
  sub_1C2685440();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DaemonHealthExperienceStoreOracle();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void DaemonHealthExperienceStoreOracle.__allocating_init(healthExperienceStore:)()
{
}

void DaemonHealthExperienceStoreOracle.init(healthExperienceStore:)()
{
}

void DaemonHealthExperienceStoreOracle.debuggingInfoRequested(note:)()
{
  uint64_t ObjectType = swift_getObjectType();
  if (qword_1EBB85EA8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1C277B130();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBB85ED8);
  oslog = sub_1C277B100();
  os_log_type_t v2 = sub_1C277BD40();
  if (os_log_type_enabled(oslog, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v8 = v4;
    uint64_t v9 = ObjectType;
    *(_DWORD *)uint64_t v3 = 136315138;
    swift_getMetatypeMetadata();
    uint64_t v5 = sub_1C277B860();
    uint64_t v9 = sub_1C263FDFC(v5, v6, &v8);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, oslog, v2, "[%s]: debuggingInfoRequested()", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v4, -1, -1);
    MEMORY[0x1C875D230](v3, -1, -1);
  }
  else
  {
  }
}

char *sub_1C26BF010(uint64_t a1, char *a2)
{
  swift_getObjectType();
  void v24[3] = type metadata accessor for DaemonHealthExperienceStore();
  v24[4] = &protocol witness table for DiskHealthExperienceStore;
  v24[0] = a1;
  uint64_t v4 = OBJC_IVAR____TtC14HealthPlatform27HealthExperienceStoreOracle_notificationCenter;
  id v5 = objc_allocWithZone(MEMORY[0x1E4F28EB8]);
  unint64_t v6 = a2;
  *(void *)&a2[v4] = objc_msgSend(v5, sel_init);
  uint64_t v7 = OBJC_IVAR____TtC14HealthPlatform27HealthExperienceStoreOracle_protectedState;
  sub_1C26BF57C();
  memset(v23, 0, sizeof(v23));
  uint64_t v8 = swift_allocObject();
  *(_DWORD *)(v8 + 64) = 0;
  sub_1C26BF5DC((uint64_t)v23, v8 + 16);
  sub_1C26BF638((uint64_t)v23);
  *(void *)&v6[v7] = v8;
  sub_1C26482E4((uint64_t)v24, (uint64_t)&v6[OBJC_IVAR____TtC14HealthPlatform27HealthExperienceStoreOracle_healthExperienceStore]);

  v22.receiver = v6;
  v22.super_class = (Class)type metadata accessor for HealthExperienceStoreOracle();
  uint64_t v9 = (char *)objc_msgSendSuper2(&v22, sel_init);
  id v10 = *(os_unfair_lock_s **)&v9[OBJC_IVAR____TtC14HealthPlatform27HealthExperienceStoreOracle_protectedState];
  uint64_t v11 = (uint64_t)&v10[4];
  uint64_t v12 = v10 + 16;
  os_log_type_t v13 = v9;
  os_unfair_lock_lock(v12);
  sub_1C26BF68C(v11, v23);
  os_unfair_lock_unlock(v12);
  if (LOBYTE(v23[0]) == 1) {
    sub_1C27190F8();
  }
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1C277B130();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EBB86280);
  uint64_t v15 = sub_1C277B100();
  os_log_type_t v16 = sub_1C277BD00();
  if (os_log_type_enabled(v15, v16))
  {
    unint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(void *)&v23[0] = v18;
    *(_DWORD *)unint64_t v17 = 136315138;
    uint64_t v19 = sub_1C271A318();
    sub_1C263FDFC(v19, v20, (uint64_t *)v23);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v15, v16, "[%s] init()", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v18, -1, -1);
    MEMORY[0x1C875D230](v17, -1, -1);
  }

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
  return v13;
}

uint64_t method lookup function for DaemonHealthExperienceStoreOracle(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DaemonHealthExperienceStoreOracle);
}

uint64_t dispatch thunk of DaemonHealthExperienceStoreOracle.__allocating_init(overrideStoreLocation:)()
{
  return (*(uint64_t (**)(void))(v0 + 224))();
}

id sub_1C26BF2F4()
{
  v12[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v0 = sub_1C277A8A0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B0B8]), sel_init);
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2AED0]), sel_initWithHealthStore_, v4);

  v12[0] = 0;
  id v6 = objc_msgSend(v5, sel_healthDatabaseIdentifierWithError_, v12);
  id v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    sub_1C277A880();
    id v9 = v7;

    id v7 = (id)sub_1C277A850();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  else
  {
    id v10 = v12[0];
    sub_1C277A620();

    swift_willThrow();
  }
  return v7;
}

unint64_t sub_1C26BF4B0()
{
  unint64_t result = qword_1EBB854D0;
  if (!qword_1EBB854D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB854D0);
  }
  return result;
}

uint64_t sub_1C26BF4F0(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return a1;
}

uint64_t sub_1C26BF534(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1C26BF57C()
{
  if (!qword_1EBB842F8)
  {
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_1C277C370();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB842F8);
    }
  }
}

uint64_t sub_1C26BF5DC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C26BF638(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C26BF68C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1C271A418(a1, a2);
}

unint64_t HealthPluginHostBufferPostNotificationUserInfoKey.getter()
{
  return 0xD000000000000029;
}

uint64_t sub_1C26BF6C4()
{
  type metadata accessor for HealthPluginHostNotificationBuffer();
  uint64_t v0 = swift_allocObject();
  unint64_t v1 = sub_1C267CA00(MEMORY[0x1E4FBC860]);
  sub_1C26BFC20();
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = v1;
  *(void *)(v0 + 16) = result;
  off_1EBB826D0 = (_UNKNOWN *)v0;
  return result;
}

uint64_t static HealthPluginHostNotificationBuffer.shared.getter()
{
  if (qword_1EBB826E0 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_1C26BF788()
{
  uint64_t v0 = (void *)sub_1C277A550();
  sub_1C277B850();

  unint64_t v1 = sub_1C277A570();
  if (!v1) {
    unint64_t v1 = sub_1C267CB50(MEMORY[0x1E4FBC860]);
  }
  MEMORY[0x1F4188790](v1);
  id v3 = (uint64_t *)&v2[4];
  id v4 = v2 + 6;
  os_unfair_lock_lock(v2 + 6);
  sub_1C26BF8FC(v3);
  os_unfair_lock_unlock(v4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C26BF854(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *a1;
  *a1 = 0x8000000000000000;
  sub_1C268B7E0(a4, a2, a3, isUniquelyReferenced_nonNull_native);
  *a1 = v10;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C26BF8FC(uint64_t *a1)
{
  return sub_1C26BF854(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1C26BF91C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v5 = *(os_unfair_lock_s **)(v2 + 16);
  id v6 = (uint64_t *)&v5[4];
  id v7 = v5 + 6;
  os_unfair_lock_lock(v5 + 6);
  sub_1C26BFAA0(v6, v12);
  os_unfair_lock_unlock(v7);
  if (*(void *)&v12[0])
  {
    memset(v12, 0, 32);
    id v8 = a1;
    sub_1C277A540();
    uint64_t v9 = sub_1C277A580();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a2, 0, 1, v9);
  }
  else
  {
    uint64_t v11 = sub_1C277A580();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a2, 1, 1, v11);
  }
}

uint64_t sub_1C26BFA24@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_1C277B850();
  uint64_t v6 = *a1;
  if (*(void *)(v6 + 16) && (unint64_t v7 = sub_1C2629588(v4, v5), (v8 & 1) != 0))
  {
    uint64_t v9 = *(void *)(*(void *)(v6 + 56) + 8 * v7);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v9;
  return result;
}

uint64_t sub_1C26BFAA0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1C26BFA24(a1, a2);
}

void sub_1C26BFABC()
{
  unint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = v1 + 4;
  id v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1C2650DE8(v2);

  os_unfair_lock_unlock(v3);
}

uint64_t HealthPluginHostNotificationBuffer.deinit()
{
  swift_release();
  return v0;
}

uint64_t HealthPluginHostNotificationBuffer.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for HealthPluginHostNotificationBuffer()
{
  return self;
}

uint64_t method lookup function for HealthPluginHostNotificationBuffer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HealthPluginHostNotificationBuffer);
}

uint64_t dispatch thunk of HealthPluginHostNotificationBuffer.storeNotification(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t dispatch thunk of HealthPluginHostNotificationBuffer.notification(withName:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of HealthPluginHostNotificationBuffer.clear()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

void sub_1C26BFC20()
{
  if (!qword_1EBB830C8)
  {
    sub_1C26BFC88();
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_1C277C370();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB830C8);
    }
  }
}

void sub_1C26BFC88()
{
  if (!qword_1EBB82DB0)
  {
    sub_1C267C118();
    unint64_t v0 = sub_1C277B7A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB82DB0);
    }
  }
}

uint64_t static DiskHealthExperienceStore.storeVersion.getter()
{
  if (qword_1EBB848B8 != -1) {
    swift_once();
  }
  uint64_t v0 = xmmword_1EBB848A0;
  swift_bridgeObjectRetain();
  return v0;
}

id DataType.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id DataType.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for DataType();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for DataType()
{
  return self;
}

id DataType.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DataType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void NSManagedObjectContext.markObjectsForDeletion<A>(entity:predicate:)(uint64_t a1, uint64_t a2)
{
  id v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
  self;
  uint64_t v4 = (void *)swift_dynamicCastObjCClass();
  if (v4)
  {
    id v5 = v4;
    objc_msgSend(v4, sel_setPredicate_, a2);
    objc_msgSend(v5, sel_setIncludesPropertyValues_, 0);
    uint64_t v6 = sub_1C277C000();
    MEMORY[0x1F4188790](v6);
    sub_1C277BB20();
    swift_getWitnessTable();
    sub_1C277B9C0();
    swift_bridgeObjectRelease();
  }
  else
  {

    sub_1C277C560();
    __break(1u);
  }
}

id NSManagedObjectContext.makeAllKeywordsFetchedResultsController()()
{
  uint64_t v1 = v0;
  id v2 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  id v3 = (void *)sub_1C277B820();
  id v4 = objc_msgSend(v2, sel_initWithKey_ascending_, v3, 1);

  id v5 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v6 = (void *)sub_1C277B820();
  id v7 = objc_msgSend(v5, sel_initWithEntityName_, v6);

  sub_1C260846C();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C277E590;
  *(void *)(v8 + 32) = v4;
  sub_1C277BA60();
  id v9 = v4;
  objc_msgSend(v7, sel_setPredicate_, 0);
  sub_1C2644ED8(0, (unint64_t *)&unk_1EBB85138);
  uint64_t v10 = (void *)sub_1C277BA30();
  objc_msgSend(v7, sel_setSortDescriptors_, v10);

  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C0F0]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v7, v1, 0, 0);
  swift_bridgeObjectRelease();
  return v11;
}

id NSManagedObjectContext.makeKeywordsWithFeedItemsController()()
{
  uint64_t v1 = v0;
  id v2 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  id v3 = (void *)sub_1C277B820();
  id v4 = objc_msgSend(v2, sel_initWithKey_ascending_, v3, 1);

  id v5 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v6 = (void *)sub_1C277B820();
  id v7 = objc_msgSend(v5, sel_initWithEntityName_, v6);

  sub_1C260846C();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C277E590;
  *(void *)(v8 + 32) = v4;
  sub_1C277BA60();
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85100);
  id v9 = v4;
  uint64_t v10 = (void *)sub_1C277BCC0();
  objc_msgSend(v7, sel_setPredicate_, v10);
  sub_1C2644ED8(0, (unint64_t *)&unk_1EBB85138);
  id v11 = (void *)sub_1C277BA30();
  objc_msgSend(v7, sel_setSortDescriptors_, v11);

  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C0F0]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v7, v1, 0, 0);
  swift_bridgeObjectRelease();

  return v12;
}

id NSManagedObjectContext.feedItemsController(sortDescriptors:predicate:sectionNameKeyPath:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7 = _s14HealthPlatform8FeedItemC12fetchRequestSo07NSFetchF0CyACGyFZ_0();
  objc_msgSend(v7, sel_setPredicate_, a2);
  sub_1C2644ED8(0, (unint64_t *)&unk_1EBB85138);
  uint64_t v8 = (void *)sub_1C277BA30();
  objc_msgSend(v7, sel_setSortDescriptors_, v8);

  id v9 = v7;
  id v10 = v4;
  if (a4)
  {
    swift_bridgeObjectRetain();
    id v11 = (void *)sub_1C277B820();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v11 = 0;
  }
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C0F0]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v7, v4, v11, 0);

  return v12;
}

id NSManagedObjectContext.makeFeedItemFetchedResultsController(forFeedItemIdentifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v6 = _s14HealthPlatform8FeedItemC12fetchRequestSo07NSFetchF0CyACGyFZ_0();
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85100);
  sub_1C26322C0();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C277E470;
  uint64_t v8 = MEMORY[0x1E4FBB1A0];
  *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v9 = sub_1C263226C();
  *(void *)(v7 + 32) = 0xD000000000000010;
  *(void *)(v7 + 40) = 0x80000001C2789760;
  *(void *)(v7 + 96) = v8;
  *(void *)(v7 + 104) = v9;
  *(void *)(v7 + 64) = v9;
  *(void *)(v7 + 72) = a1;
  *(void *)(v7 + 80) = a2;
  swift_bridgeObjectRetain();
  id v10 = (void *)sub_1C277BCC0();
  objc_msgSend(v6, sel_setPredicate_, v10);

  sub_1C260846C();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C277E590;
  id v12 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  os_log_type_t v13 = (void *)sub_1C277B820();
  id v14 = objc_msgSend(v12, sel_initWithKey_ascending_, v13, 1);

  *(void *)(v11 + 32) = v14;
  sub_1C277BA60();
  sub_1C2644ED8(0, (unint64_t *)&unk_1EBB85138);
  uint64_t v15 = (void *)sub_1C277BA30();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setSortDescriptors_, v15);

  id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C0F0]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v6, v3, 0, 0);
  return v16;
}

id sub_1C26C07CC(void *a1)
{
  return objc_msgSend(*(id *)(v1 + 24), sel_deleteObject_, *a1);
}

uint64_t NSManagedObjectContext.deleteEntity<A>(entity:predicates:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  id v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
  self;
  uint64_t v8 = (void *)swift_dynamicCastObjCClass();
  if (v8)
  {
    unint64_t v9 = v8;
    objc_msgSend(v8, sel_setIncludesPropertyValues_, 0);
    if (a2)
    {
      sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85100);
      swift_bridgeObjectRetain();
      id v10 = (void *)sub_1C277BA30();
      swift_bridgeObjectRelease();
      id v11 = objc_msgSend(self, sel_orPredicateWithSubpredicates_, v10);

      objc_msgSend(v9, sel_setPredicate_, v11);
    }
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1C277B130();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EBB86280);
    os_log_type_t v13 = sub_1C277B100();
    os_log_type_t v14 = sub_1C277BD00();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      id v26 = v7;
      aBlock[0] = swift_slowAlloc();
      id v16 = v4;
      uint64_t v17 = aBlock[0];
      *(_DWORD *)uint64_t v15 = 136315138;
      uint64_t v18 = sub_1C277C9E0();
      uint64_t v28 = sub_1C263FDFC(v18, v19, aBlock);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v13, v14, "Attempting to delete %s from database", v15, 0xCu);
      swift_arrayDestroy();
      uint64_t v20 = v17;
      id v4 = v16;
      id v7 = v26;
      MEMORY[0x1C875D230](v20, -1, -1);
      MEMORY[0x1C875D230](v15, -1, -1);
    }

    uint64_t v28 = 0;
    uint64_t v21 = (void *)swift_allocObject();
    v21[2] = a3;
    v21[3] = &v28;
    v21[4] = v4;
    v21[5] = v9;
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = sub_1C26C1434;
    *(void *)(v22 + 24) = v21;
    aBlock[4] = (uint64_t)sub_1C261AECC;
    aBlock[5] = v22;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1C262BAF0;
    aBlock[3] = (uint64_t)&block_descriptor_9;
    uint64_t v23 = _Block_copy(aBlock);
    id v24 = v4;
    id v7 = v7;
    swift_retain();
    swift_release();
    objc_msgSend(v24, sel_performBlockAndWait_, v23);

    _Block_release(v23);
    LOBYTE(v23) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v23 & 1) == 0)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    __break(1u);
  }

  uint64_t result = sub_1C277C560();
  __break(1u);
  return result;
}

id sub_1C26C0C08(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  void v17[3] = *(id *)MEMORY[0x1E4F143B8];
  *a1 = sub_1C277C000();
  swift_bridgeObjectRelease();
  if (*a1) {
    uint64_t v7 = *a1;
  }
  else {
    uint64_t v7 = sub_1C277BAA0();
  }
  swift_bridgeObjectRetain();
  if (MEMORY[0x1C875BA20](v7, a4))
  {
    uint64_t v8 = 4;
    do
    {
      char v9 = sub_1C277BAC0();
      sub_1C277BA80();
      if (v9) {
        id v10 = *(id *)(v7 + 8 * v8);
      }
      else {
        id v10 = (id)sub_1C277C310();
      }
      id v11 = v10;
      uint64_t v12 = v8 - 3;
      if (__OFADD__(v8 - 4, 1)) {
        __break(1u);
      }
      objc_msgSend(a2, sel_deleteObject_, v10);

      ++v8;
    }
    while (v12 != MEMORY[0x1C875BA20](v7, a4));
  }
  swift_bridgeObjectRelease();
  v17[0] = 0;
  unsigned int v13 = objc_msgSend(a2, sel_save_, v17);
  id v14 = v17[0];
  if (v13)
  {
    return v14;
  }
  else
  {
    id v16 = v17[0];
    sub_1C277A620();

    swift_willThrow();
    v17[0] = 0;
    v17[1] = (id)0xE000000000000000;
    sub_1C277C2D0();
    sub_1C277B8D0();
    sub_1C262B07C(0, (unint64_t *)&qword_1EBB831D0);
    sub_1C277C450();
    id result = (id)sub_1C277C560();
    __break(1u);
  }
  return result;
}

uint64_t NSManagedObjectContext.fetchEntity<A>(entity:predicates:sortDescriptors:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v5 = v4;
  uint64_t isEscapingClosureAtFileLocation = (uint64_t)objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
  self;
  uint64_t v10 = swift_dynamicCastObjCClass();
  if (!v10) {
    goto LABEL_16;
  }
  id v11 = (void *)v10;
  if (a2)
  {
    sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85100);
    swift_bridgeObjectRetain();
    uint64_t v12 = (void *)sub_1C277BA30();
    swift_bridgeObjectRelease();
    id v13 = objc_msgSend(self, sel_orPredicateWithSubpredicates_, v12);

    objc_msgSend(v11, sel_setPredicate_, v13);
  }
  if (a3)
  {
    sub_1C2644ED8(0, (unint64_t *)&unk_1EBB85138);
    a3 = (void *)sub_1C277BA30();
  }
  objc_msgSend(v11, sel_setSortDescriptors_, a3);

  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1C277B130();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EBB86280);
  uint64_t v15 = sub_1C277B100();
  os_log_type_t v16 = sub_1C277BD00();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    aBlock[0] = v18;
    *(_DWORD *)uint64_t v17 = 136315138;
    uint64_t v19 = sub_1C277C9E0();
    uint64_t v29 = sub_1C263FDFC(v19, v20, aBlock);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v15, v16, "Attempting to fetch %s from database", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v18, -1, -1);
    MEMORY[0x1C875D230](v17, -1, -1);
  }

  uint64_t v29 = 0;
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = a4;
  v21[3] = &v29;
  v21[4] = v5;
  v21[5] = v11;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_1C26C1450;
  *(void *)(v22 + 24) = v21;
  aBlock[4] = (uint64_t)sub_1C262BB18;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1C262BAF0;
  aBlock[3] = (uint64_t)&block_descriptor_13;
  uint64_t v23 = _Block_copy(aBlock);
  id v24 = v5;
  id v25 = (id)isEscapingClosureAtFileLocation;
  swift_retain();
  swift_release();
  objc_msgSend(v24, sel_performBlockAndWait_, v23);
  _Block_release(v23);
  uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
LABEL_16:

    uint64_t result = sub_1C277C560();
    __break(1u);
    return result;
  }
  uint64_t v26 = v29;
  if (v29) {
    swift_bridgeObjectRetain();
  }
  else {
    uint64_t v26 = sub_1C277BAA0();
  }

  swift_release();
  swift_bridgeObjectRelease();
  return v26;
}

uint64_t sub_1C26C12E0(uint64_t *a1)
{
  *a1 = sub_1C277C000();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C26C13F4()
{
  return MEMORY[0x1F4186498](v0, 48, 7);
}

id sub_1C26C1434()
{
  return sub_1C26C0C08(*(uint64_t **)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 16));
}

uint64_t sub_1C26C1440()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C26C1450()
{
  return sub_1C26C12E0(*(uint64_t **)(v0 + 24));
}

uint64_t sub_1C26C145C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void *sub_1C26C1474(void *a1, void (*a2)(void **, id *), uint64_t a3, unint64_t a4)
{
  return sub_1C26C148C(a1, a2, a3, a4);
}

void *sub_1C26C148C(void *a1, void (*a2)(void **, id *), uint64_t a3, unint64_t a4)
{
  uint64_t v14 = a1;
  uint64_t v7 = a1;
  if (a4 >> 62) {
    goto LABEL_13;
  }
  uint64_t v8 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v8; uint64_t v8 = sub_1C277C5A0())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v10 = (a4 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C875C230](i - 4, a4) : *(id *)(a4 + 8 * i);
      uint64_t v7 = v10;
      uint64_t v11 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v13 = v10;
      a2(&v14, &v13);
      if (v4)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        return v7;
      }

      if (v11 == v8)
      {
        swift_bridgeObjectRelease();
        return v14;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C26C15C8(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for ProtectedNotificationContentState(0);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v23 = (uint64_t)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v20 - v11;
  uint64_t v13 = MEMORY[0x1E4FBC860];
  uint64_t v25 = MEMORY[0x1E4FBC860];
  uint64_t v22 = *(void *)(a3 + 16);
  if (v22)
  {
    unint64_t v14 = 0;
    uint64_t v15 = MEMORY[0x1E4FBC860];
    v20[1] = a2;
    uint64_t v21 = a3;
    v20[0] = a1;
    while (v14 < *(void *)(a3 + 16))
    {
      unint64_t v16 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      uint64_t v13 = *(void *)(v24 + 72);
      sub_1C26C93BC(a3 + v16 + v13 * v14, (uint64_t)v12, type metadata accessor for ProtectedNotificationContentState);
      char v17 = a1(v12);
      if (v3)
      {
        sub_1C26CA5BC((uint64_t)v12, type metadata accessor for ProtectedNotificationContentState);
        swift_release();
        swift_bridgeObjectRelease();
        return v13;
      }
      if (v17)
      {
        sub_1C26C9638((uint64_t)v12, v23, type metadata accessor for ProtectedNotificationContentState);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1C2659F38(0, *(void *)(v15 + 16) + 1, 1);
        }
        uint64_t v15 = v25;
        unint64_t v19 = *(void *)(v25 + 16);
        unint64_t v18 = *(void *)(v25 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_1C2659F38(v18 > 1, v19 + 1, 1);
          uint64_t v15 = v25;
        }
        *(void *)(v15 + 16) = v19 + 1;
        uint64_t result = sub_1C26C9638(v23, v15 + v16 + v19 * v13, type metadata accessor for ProtectedNotificationContentState);
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        uint64_t result = sub_1C26CA5BC((uint64_t)v12, type metadata accessor for ProtectedNotificationContentState);
      }
      if (v22 == ++v14)
      {
        uint64_t v13 = v25;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

void sub_1C26C1860(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v22 = *(void *)(a3 + 16);
  if (v22)
  {
    unint64_t v4 = 0;
    id v5 = (uint64_t *)(a3 + 40);
    uint64_t v6 = MEMORY[0x1E4FBC860];
    while (v4 < *(void *)(v3 + 16))
    {
      uint64_t v8 = (void *)*(v5 - 1);
      uint64_t v7 = *v5;
      uint64_t v10 = v5[1];
      uint64_t v9 = v5[2];
      uint64_t v12 = v5[3];
      uint64_t v11 = v5[4];
      uint64_t v13 = v5[5];
      v28[0] = v8;
      v28[1] = v7;
      uint64_t v25 = v9;
      uint64_t v26 = v7;
      v28[2] = v10;
      v28[3] = v9;
      v28[4] = v12;
      v28[5] = v11;
      uint64_t v24 = v11;
      v28[6] = v13;
      id v14 = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v15 = a1(v28);
      if (v27)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return;
      }
      uint64_t v27 = 0;
      if (v15)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v29 = v6;
        uint64_t v3 = a3;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1C265A030(0, *(void *)(v6 + 16) + 1, 1);
          uint64_t v6 = v29;
        }
        unint64_t v18 = *(void *)(v6 + 16);
        unint64_t v17 = *(void *)(v6 + 24);
        unint64_t v19 = v18 + 1;
        if (v18 >= v17 >> 1)
        {
          sub_1C265A030(v17 > 1, v18 + 1, 1);
          unint64_t v19 = v18 + 1;
          uint64_t v6 = v29;
        }
        *(void *)(v6 + 16) = v19;
        unint64_t v20 = (void *)(v6 + 56 * v18);
        v20[4] = v8;
        v20[5] = v26;
        v20[6] = v10;
        v20[7] = v25;
        v20[8] = v12;
        v20[9] = v24;
        v20[10] = v13;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        uint64_t v3 = a3;
      }
      ++v4;
      v5 += 7;
      if (v22 == v4) {
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
  }
}

id sub_1C26C1A70()
{
  uint64_t v1 = *(void **)(v0 + 32);
  if (v1)
  {
    id v2 = *(id *)(v0 + 32);
  }
  else
  {
    id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2AD28]), sel_initWithHealthStore_, *(void *)(v0 + 40));
    unint64_t v4 = *(void **)(v0 + 32);
    *(void *)(v0 + 32) = v3;
    id v2 = v3;

    uint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

uint64_t sub_1C26C1AE4()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t sub_1C26C1B18(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 72) = a1;
  return result;
}

uint64_t (*sub_1C26C1B58())()
{
  return j__swift_endAccess;
}

uint64_t HealthAppNotificationContentStateManager.__allocating_init(healthStore:domain:queue:)(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  swift_allocObject();
  uint64_t v8 = sub_1C2633E74(a1, a2, a3, a4);

  return v8;
}

uint64_t HealthAppNotificationContentStateManager.init(healthStore:domain:queue:)(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = sub_1C2633E74(a1, a2, a3, a4);

  return v5;
}

uint64_t sub_1C26C1C4C()
{
  uint64_t v31 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC28];
  uint64_t v36 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C2633D24(0, &qword_1EBB84A68, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  id v3 = (char *)&v27 - v2;
  sub_1C26C87E0();
  uint64_t v28 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C26C91AC(0, &qword_1EBB82C28, (void (*)(uint64_t))sub_1C26C87E0, (void (*)(void))sub_1C26C895C);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v32 = v8;
  uint64_t v33 = v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v27 - v10;
  sub_1C26C8994();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v34 = v12;
  uint64_t v35 = v13;
  MEMORY[0x1F4188790](v12);
  char v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v16 = (void *)sub_1C277BFE0();
  uint64_t v37 = sub_1C277BFE0();
  id v38 = v16;
  uint64_t v29 = v16;
  uint64_t v30 = v37;
  sub_1C26C8884();
  sub_1C2633AE8(&qword_1EBB82C98, 255, (void (*)(uint64_t))sub_1C26C8884);
  swift_retain();
  swift_retain();
  sub_1C277B180();
  id v38 = *(id *)(v0 + 48);
  id v17 = v38;
  uint64_t v18 = sub_1C277BE70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v3, 1, 1, v18);
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85180);
  sub_1C26C895C();
  sub_1C264E780();
  id v19 = v17;
  uint64_t v20 = v28;
  sub_1C277B5C0();
  sub_1C26CAB2C((uint64_t)v3, &qword_1EBB84A68, v31);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v20);
  uint64_t v21 = swift_allocObject();
  swift_weakInit();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_1C26C8B30;
  *(void *)(v22 + 24) = v21;
  sub_1C2633D24(0, &qword_1EBB83290, type metadata accessor for NotificationContentState, v36);
  sub_1C26C8A70();
  uint64_t v23 = v32;
  sub_1C277B580();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v23);
  sub_1C2633AE8(&qword_1EBB82B18, 255, (void (*)(uint64_t))sub_1C26C8994);
  uint64_t v24 = v34;
  uint64_t v25 = sub_1C277B4E0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v24);
  return v25;
}

uint64_t sub_1C26C2178@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1C26C224C(a1, a2, a3);
    return swift_release();
  }
  else
  {
    uint64_t v7 = type metadata accessor for NotificationContentState(0);
    return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a3, 1, 1, v7);
  }
}

uint64_t sub_1C26C224C@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  unint64_t v88 = a2;
  uint64_t v102 = type metadata accessor for UnprotectedNotificationContentState(0);
  uint64_t v87 = *(void *)(v102 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v102);
  uint64_t v9 = (char *)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v101 = (uint64_t)&v82 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v82 - v12;
  uint64_t v14 = sub_1C277A8A0();
  uint64_t v96 = *(void *)(v14 - 8);
  uint64_t v97 = v14;
  MEMORY[0x1F4188790](v14);
  unint64_t v16 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for ProtectedNotificationContentState(0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v99 = (uint64_t)&v82 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v82 - v21;
  id v23 = sub_1C26C8BB4(a1);
  if (v23)
  {
    uint64_t v84 = a3;
    uint64_t v91 = v18;
    unint64_t v94 = a1;
    id v98 = v16;
    uint64_t v100 = v9;
    uint64_t v24 = *(void **)(v95 + 56);
    uint64_t v25 = v23;
    id v26 = objc_msgSend(v23, sel_value);
    uint64_t v27 = v17;
    uint64_t v28 = sub_1C277A780();
    unint64_t v30 = v29;

    sub_1C26C9038();
    sub_1C277A480();
    if (v3)
    {

      return sub_1C263CC84(v28, v30);
    }
    else
    {
      id v82 = v25;
      uint64_t v93 = v27;
      uint64_t v33 = sub_1C263CC84(v28, v30);
      uint64_t v103 = v95;
      MEMORY[0x1F4188790](v33);
      *(&v82 - 2) = &v103;
      *(&v82 - 1) = v24;
      uint64_t v92 = (uint64_t)v24;
      uint64_t v34 = MEMORY[0x1E4FBC860];
      uint64_t v35 = sub_1C26C148C(MEMORY[0x1E4FBC860], (void (*)(void **, id *))sub_1C26C9070, (uint64_t)(&v82 - 4), v94);
      MEMORY[0x1F4188790](v35);
      *(&v82 - 2) = v22;
      uint64_t v37 = sub_1C26C15C8((uint64_t (*)(char *))sub_1C26C908C, (uint64_t)(&v82 - 4), v36);
      int64_t v38 = *(void *)(v37 + 16);
      unint64_t v39 = v88;
      uint64_t v83 = (uint64_t *)v22;
      if (v38)
      {
        uint64_t v95 = 0;
        uint64_t v103 = v34;
        sub_1C2659EF0(0, v38, 0);
        uint64_t v40 = *(unsigned __int8 *)(v91 + 80);
        unint64_t v90 = v37;
        uint64_t v41 = v37 + ((v40 + 32) & ~v40);
        unint64_t v94 = *(void *)(v91 + 72);
        uint64_t v42 = v97;
        id v43 = (void (**)(char *, uint64_t, uint64_t))(v96 + 16);
        id v44 = v98;
        do
        {
          uint64_t v45 = v99;
          sub_1C26C93BC(v41, v99, type metadata accessor for ProtectedNotificationContentState);
          (*v43)(v44, v45 + *(int *)(v93 + 20), v42);
          sub_1C26CA5BC(v45, type metadata accessor for ProtectedNotificationContentState);
          uint64_t v46 = v103;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C2659EF0(0, *(void *)(v46 + 16) + 1, 1);
            uint64_t v46 = v103;
          }
          unint64_t v48 = *(void *)(v46 + 16);
          unint64_t v47 = *(void *)(v46 + 24);
          if (v48 >= v47 >> 1)
          {
            sub_1C2659EF0(v47 > 1, v48 + 1, 1);
            uint64_t v46 = v103;
          }
          *(void *)(v46 + 16) = v48 + 1;
          unint64_t v49 = v46
              + ((*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80))
              + *(void *)(v96 + 72) * v48;
          uint64_t v42 = v97;
          id v44 = v98;
          (*(void (**)(unint64_t, char *, uint64_t))(v96 + 32))(v49, v98, v97);
          uint64_t v103 = v46;
          v41 += v94;
          --v38;
        }
        while (v38);
        swift_bridgeObjectRelease();
        uint64_t v4 = v95;
        unint64_t v39 = v88;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v46 = MEMORY[0x1E4FBC860];
      }
      uint64_t v91 = sub_1C265C714(v46);
      swift_bridgeObjectRelease();
      uint64_t v50 = v92;
      if (v39 >> 62) {
        goto LABEL_36;
      }
      uint64_t v51 = *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      for (char i = 0; v51; char i = 0)
      {
        LODWORD(v99) = 0;
        uint64_t v53 = 0;
        uint64_t v89 = v51;
        unint64_t v90 = v88 & 0xC000000000000001;
        unint64_t v85 = v88 + 32;
        uint64_t v86 = v88 & 0xFFFFFFFFFFFFFF8;
        while (1)
        {
          if (v90)
          {
            id v54 = (id)MEMORY[0x1C875C230](v53, v88);
          }
          else
          {
            if ((unint64_t)v53 >= *(void *)(v86 + 16)) {
              goto LABEL_35;
            }
            id v54 = *(id *)(v85 + 8 * (void)v53);
          }
          id v55 = v54;
          BOOL v56 = __OFADD__(v53, 1);
          uint64_t v57 = v53 + 1;
          if (v56) {
            break;
          }
          id v98 = v57;
          id v58 = objc_msgSend(v54, sel_storageEntries);
          sub_1C2644ED8(0, &qword_1EA304900);
          unint64_t v59 = sub_1C277BA40();

          swift_retain();
          unint64_t v60 = sub_1C26C7C18(v59, v50);
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v61 = v91;
          swift_bridgeObjectRetain();
          uint64_t v62 = sub_1C26C83A8(v60, v61);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v63 = *(void *)(v62 + 16);
          if (v63)
          {
            unint64_t v94 = v62;
            uint64_t v95 = v4;
            uint64_t v64 = v62 + ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80));
            uint64_t v65 = *(void *)(v87 + 72);
            do
            {
              sub_1C26C93BC(v64, (uint64_t)v13, type metadata accessor for UnprotectedNotificationContentState);
              id v66 = objc_msgSend(v55, sel_deviceContext);
              unsigned int v67 = objc_msgSend(v66, sel_representsLocalDevice);

              uint64_t v68 = v101;
              sub_1C26C93BC((uint64_t)v13, v101, type metadata accessor for UnprotectedNotificationContentState);
              if (v67)
              {
                int v69 = *(unsigned __int8 *)(v68 + *(int *)(v102 + 24));
                sub_1C26CA5BC(v68, type metadata accessor for UnprotectedNotificationContentState);
                LODWORD(v99) = v99 | v69;
              }
              else
              {
                sub_1C26CA5BC(v68, type metadata accessor for UnprotectedNotificationContentState);
              }
              uint64_t v70 = (uint64_t)v100;
              sub_1C26C9638((uint64_t)v13, (uint64_t)v100, type metadata accessor for UnprotectedNotificationContentState);
              if (i) {
                char i = 1;
              }
              else {
                char i = *(unsigned char *)(v70 + *(int *)(v102 + 28));
              }
              sub_1C26CA5BC(v70, type metadata accessor for UnprotectedNotificationContentState);
              v64 += v65;
              --v63;
            }
            while (v63);

            swift_bridgeObjectRelease();
            uint64_t v4 = v95;
          }
          else
          {

            swift_bridgeObjectRelease();
          }
          uint64_t v53 = v98;
          uint64_t v50 = v92;
          if (v98 == (char *)v89) {
            goto LABEL_38;
          }
        }
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        swift_bridgeObjectRetain();
        uint64_t v51 = sub_1C277C5A0();
      }
      LODWORD(v99) = 0;
LABEL_38:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v71 = (uint64_t)v83;
      uint64_t v73 = *v83;
      uint64_t v72 = v83[1];
      uint64_t v74 = v93;
      uint64_t v75 = (char *)v83 + *(int *)(v93 + 20);
      uint64_t v76 = (int *)type metadata accessor for NotificationContentState(0);
      uint64_t v77 = v84;
      (*(void (**)(char *, char *, uint64_t))(v96 + 16))((char *)v84 + v76[5], v75, v97);
      uint64_t v78 = (uint64_t *)(v71 + *(int *)(v74 + 24));
      uint64_t v79 = *v78;
      uint64_t v80 = v78[1];
      void *v77 = v73;
      v77[1] = v72;
      uint64_t v81 = (void *)((char *)v77 + v76[6]);
      void *v81 = v79;
      v81[1] = v80;
      *((unsigned char *)v77 + v76[7]) = v99 & 1;
      *((unsigned char *)v77 + v76[8]) = i & 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C26CA5BC(v71, type metadata accessor for ProtectedNotificationContentState);
      return (*(uint64_t (**)(void *, void, uint64_t, int *))(*((void *)v76 - 1) + 56))(v77, 0, 1, v76);
    }
  }
  else
  {
    uint64_t v32 = type metadata accessor for NotificationContentState(0);
    return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(a3, 1, 1, v32);
  }
}

uint64_t sub_1C26C2B94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(type metadata accessor for ProtectedNotificationContentState(0) + 24);
  uint64_t v5 = *(void *)(a1 + v4);
  uint64_t v6 = *(void *)(a1 + v4 + 8);
  uint64_t v7 = (void *)(a2 + v4);
  if (v5 == *v7 && v6 == v7[1]) {
    return 1;
  }
  else {
    return sub_1C277C7E0() & 1;
  }
}

uint64_t sub_1C26C2C04(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NotificationContentState(0);
  uint64_t v3 = v2 - 8;
  uint64_t v71 = *(void *)(v2 - 8);
  uint64_t v70 = *(void *)(v71 + 64);
  MEMORY[0x1F4188790](v2);
  uint64_t v68 = (uint64_t)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC28];
  sub_1C2633D24(0, &qword_1EBB84A68, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v60 = (char *)&v52 - v6;
  sub_1C26C90AC();
  uint64_t v61 = v7;
  uint64_t v63 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v58 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C26C9178(0);
  uint64_t v66 = v9;
  uint64_t v69 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unint64_t v59 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C26C928C(0, &qword_1EA304920, sub_1C26C9178, (void (*)(void))sub_1C26C9384);
  uint64_t v65 = v11;
  uint64_t v67 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v62 = (char *)&v52 - v12;
  uint64_t v13 = type metadata accessor for UnprotectedNotificationContentState(0);
  uint64_t v14 = (int *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  unint64_t v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for ProtectedNotificationContentState(0);
  uint64_t v18 = v17 - 8;
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (uint64_t *)((char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v72 = *(void **)a1;
  uint64_t v53 = *(void *)(a1 + 8);
  uint64_t v55 = v3;
  uint64_t v21 = a1 + *(int *)(v3 + 28);
  uint64_t v22 = (char *)v20 + *(int *)(v18 + 28);
  uint64_t v56 = sub_1C277A8A0();
  id v23 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v56 - 8) + 16);
  v23(v22, v21, v56);
  uint64_t v24 = (uint64_t *)(a1 + *(int *)(v3 + 32));
  uint64_t v25 = *v24;
  uint64_t v26 = v24[1];
  uint64_t v27 = v53;
  *uint64_t v20 = v72;
  v20[1] = v27;
  uint64_t v28 = (void *)((char *)v20 + *(int *)(v18 + 32));
  *uint64_t v28 = v25;
  v28[1] = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v29 = v57;
  uint64_t v72 = (void *)sub_1C26C5640((uint64_t)v20);
  sub_1C26CA5BC((uint64_t)v20, type metadata accessor for ProtectedNotificationContentState);
  uint64_t v54 = a1;
  unint64_t v30 = *(void **)a1;
  uint64_t v31 = *(void *)(a1 + 8);
  v23(&v16[v14[7]], v21, v56);
  char v32 = *(unsigned char *)(a1 + *(int *)(v55 + 36));
  char v33 = *(unsigned char *)(a1 + *(int *)(v55 + 40));
  *(void *)unint64_t v16 = v30;
  *((void *)v16 + 1) = v31;
  v16[v14[8]] = v32;
  v16[v14[9]] = v33;
  swift_bridgeObjectRetain();
  uint64_t v34 = v29;
  uint64_t v35 = sub_1C26C5184((uint64_t)v16);
  sub_1C26CA5BC((uint64_t)v16, type metadata accessor for UnprotectedNotificationContentState);
  uint64_t v73 = v35;
  id v74 = v72;
  uint64_t v56 = v35;
  uint64_t v55 = MEMORY[0x1E4FBC848] + 8;
  uint64_t v36 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AAE0];
  sub_1C2617528(0, &qword_1EBB82CD0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4F1AAE0]);
  sub_1C264EF4C(&qword_1EBB82CC8, &qword_1EBB82CD0, v36);
  swift_retain();
  swift_retain();
  uint64_t v37 = v58;
  sub_1C277B180();
  id v74 = *(id *)(v34 + 48);
  id v38 = v74;
  uint64_t v39 = sub_1C277BE70();
  uint64_t v40 = (uint64_t)v60;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v60, 1, 1, v39);
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85180);
  sub_1C26C9254();
  sub_1C264E780();
  id v41 = v38;
  uint64_t v42 = v59;
  uint64_t v43 = v61;
  sub_1C277B5C0();
  sub_1C26CAB2C(v40, &qword_1EBB84A68, v64);

  (*(void (**)(char *, uint64_t))(v63 + 8))(v37, v43);
  uint64_t v44 = v68;
  sub_1C26C93BC(v54, v68, type metadata accessor for NotificationContentState);
  unint64_t v45 = (*(unsigned __int8 *)(v71 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
  uint64_t v46 = swift_allocObject();
  *(void *)(v46 + 16) = v34;
  sub_1C26C9638(v44, v46 + v45, type metadata accessor for NotificationContentState);
  swift_retain();
  sub_1C277B330();
  sub_1C26C9384();
  unint64_t v47 = v62;
  uint64_t v48 = v66;
  sub_1C277B5A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v42, v48);
  sub_1C26C9468();
  uint64_t v49 = v65;
  uint64_t v50 = sub_1C277B4E0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v47, v49);
  return v50;
}

uint64_t sub_1C26C3380(uint64_t a1)
{
  uint64_t v26 = a1;
  uint64_t v3 = type metadata accessor for ProtectedNotificationContentState(0);
  uint64_t v34 = *(void *)(v3 - 8);
  uint64_t v31 = *(void *)(v34 + 64);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v28 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC28];
  uint64_t v29 = (uint64_t)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2633D24(0, &qword_1EBB84A68, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v26 - v6;
  sub_1C26C94F0();
  uint64_t v33 = v8;
  uint64_t v35 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C26C928C(0, &qword_1EA304940, (void (*)(uint64_t))sub_1C26C94F0, (void (*)(void))sub_1C26C95E8);
  uint64_t v30 = v11;
  uint64_t v32 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v26 - v12;
  uint64_t v27 = v1;
  uint64_t v14 = sub_1C26C5640(a1);
  id v36 = *(id *)(v1 + 48);
  id v15 = v36;
  uint64_t v37 = v14;
  uint64_t v16 = sub_1C277BE70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v7, 1, 1, v16);
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AAE0];
  sub_1C2617528(0, &qword_1EBB82CD0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4F1AAE0]);
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85180);
  sub_1C264EF4C(&qword_1EBB82CC8, &qword_1EBB82CD0, v17);
  sub_1C264E780();
  id v18 = v15;
  sub_1C277B5C0();
  sub_1C26CAB2C((uint64_t)v7, &qword_1EBB84A68, v28);

  swift_release();
  uint64_t v19 = v29;
  sub_1C26C93BC(v26, v29, type metadata accessor for ProtectedNotificationContentState);
  unint64_t v20 = (*(unsigned __int8 *)(v34 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v27;
  sub_1C26C9638(v19, v21 + v20, type metadata accessor for ProtectedNotificationContentState);
  swift_retain();
  sub_1C277B330();
  sub_1C26C95E8();
  uint64_t v22 = v33;
  sub_1C277B5A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v10, v22);
  sub_1C26C9724();
  uint64_t v23 = v30;
  uint64_t v24 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v23);
  return v24;
}

uint64_t sub_1C26C382C@<X0>(uint64_t *a1@<X2>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  swift_bridgeObjectRetain();
  sub_1C277B8D0();
  type metadata accessor for ProtectedNotificationContentState(0);
  sub_1C277A8A0();
  sub_1C2633AE8(&qword_1EBB82658, 255, MEMORY[0x1E4F27990]);
  sub_1C277C7B0();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  sub_1C277B8D0();
  swift_bridgeObjectRetain();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_1C26C4820(v5, v6);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_1C26C3968(uint64_t a1)
{
  uint64_t v26 = a1;
  uint64_t v3 = type metadata accessor for UnprotectedNotificationContentState(0);
  uint64_t v34 = *(void *)(v3 - 8);
  uint64_t v31 = *(void *)(v34 + 64);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v28 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC28];
  uint64_t v29 = (uint64_t)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2633D24(0, &qword_1EBB84A68, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v26 - v6;
  sub_1C26C94F0();
  uint64_t v33 = v8;
  uint64_t v35 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C26C928C(0, &qword_1EA304940, (void (*)(uint64_t))sub_1C26C94F0, (void (*)(void))sub_1C26C95E8);
  uint64_t v30 = v11;
  uint64_t v32 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v26 - v12;
  uint64_t v27 = v1;
  uint64_t v14 = sub_1C26C5184(a1);
  id v36 = *(id *)(v1 + 48);
  id v15 = v36;
  uint64_t v37 = v14;
  uint64_t v16 = sub_1C277BE70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v7, 1, 1, v16);
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AAE0];
  sub_1C2617528(0, &qword_1EBB82CD0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4F1AAE0]);
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85180);
  sub_1C264EF4C(&qword_1EBB82CC8, &qword_1EBB82CD0, v17);
  sub_1C264E780();
  id v18 = v15;
  sub_1C277B5C0();
  sub_1C26CAB2C((uint64_t)v7, &qword_1EBB84A68, v28);

  swift_release();
  uint64_t v19 = v29;
  sub_1C26C93BC(v26, v29, type metadata accessor for UnprotectedNotificationContentState);
  unint64_t v20 = (*(unsigned __int8 *)(v34 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v27;
  sub_1C26C9638(v19, v21 + v20, type metadata accessor for UnprotectedNotificationContentState);
  swift_retain();
  sub_1C277B330();
  sub_1C26C95E8();
  uint64_t v22 = v33;
  sub_1C277B5A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v10, v22);
  sub_1C26C9724();
  uint64_t v23 = v30;
  uint64_t v24 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v23);
  return v24;
}

uint64_t sub_1C26C3E14(uint64_t a1, uint64_t a2)
{
  id v41 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC28];
  sub_1C2633D24(0, &qword_1EBB84A68, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v32 - v6;
  sub_1C26C90AC();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v39 = v8;
  uint64_t v40 = v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C26C9178(0);
  uint64_t v43 = v12;
  uint64_t v45 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  id v36 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C26C928C(0, &qword_1EA304920, sub_1C26C9178, (void (*)(void))sub_1C26C9384);
  uint64_t v42 = v14;
  uint64_t v44 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  id v38 = (char *)&v32 - v15;
  uint64_t v33 = a2;
  uint64_t v34 = a1;
  id v47 = (id)sub_1C277BFF0();
  uint64_t v37 = MEMORY[0x1E4FBC848] + 8;
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AAE0];
  sub_1C2617528(0, &qword_1EBB82CD0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4F1AAE0]);
  sub_1C264EF4C(&qword_1EBB82CC8, &qword_1EBB82CD0, v16);
  uint64_t v17 = (void *)sub_1C277B4E0();
  swift_release();
  uint64_t v32 = v2;
  id v47 = (id)sub_1C277BFF0();
  uint64_t v18 = sub_1C277B4E0();
  swift_release();
  uint64_t v35 = v17;
  uint64_t v46 = v18;
  id v47 = v17;
  swift_retain();
  swift_retain();
  sub_1C277B180();
  id v47 = *(id *)(v2 + 48);
  id v19 = v47;
  uint64_t v20 = sub_1C277BE70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v7, 1, 1, v20);
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85180);
  sub_1C26C9254();
  sub_1C264E780();
  id v21 = v19;
  uint64_t v22 = v36;
  uint64_t v23 = v39;
  sub_1C277B5C0();
  sub_1C26CAB2C((uint64_t)v7, &qword_1EBB84A68, v41);

  (*(void (**)(char *, uint64_t))(v40 + 8))(v11, v23);
  uint64_t v24 = (void *)swift_allocObject();
  uint64_t v25 = v33;
  uint64_t v26 = v34;
  uint64_t v24[2] = v32;
  void v24[3] = v26;
  v24[4] = v25;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C277B330();
  sub_1C26C9384();
  uint64_t v27 = v38;
  uint64_t v28 = v43;
  sub_1C277B5A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v22, v28);
  sub_1C26C9468();
  uint64_t v29 = v42;
  uint64_t v30 = sub_1C277B4E0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v27, v29);
  return v30;
}

uint64_t sub_1C26C4360@<X0>(uint64_t *a1@<X8>)
{
  sub_1C277B8D0();
  uint64_t v2 = sub_1C26C4820(0x676E69766F6D6552, 0xE900000000000020);
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1C26C43E0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_1C26C4400(a1, a2, a3, a4, *(void **)(v4 + 48), 0xD000000000000048, 0x80000001C278C3F0);
}

uint64_t sub_1C26C4400(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v37 = a1;
  uint64_t v33 = a6;
  uint64_t v34 = a4;
  uint64_t v35 = a2;
  uint64_t v36 = a3;
  uint64_t v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC28];
  sub_1C2633D24(0, &qword_1EBB84A68, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v33 - v11;
  sub_1C26C9EFC(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v41 = v13;
  uint64_t v42 = v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C26C928C(0, &qword_1EBB82B90, sub_1C26C9EFC, (void (*)(void))sub_1C26CA008);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v39 = v17;
  uint64_t v40 = v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v33 - v19;
  uint64_t v21 = sub_1C277BDB0();
  uint64_t v43 = a5;
  uint64_t v44 = v21;
  uint64_t v22 = sub_1C277BE70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v12, 1, 1, v22);
  sub_1C26C9F30();
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85180);
  sub_1C26C9FD0();
  sub_1C264E780();
  sub_1C277B5C0();
  sub_1C26CAB2C((uint64_t)v12, &qword_1EBB84A68, v9);
  swift_release();
  uint64_t v23 = (void *)swift_allocObject();
  uint64_t v24 = v36;
  v23[2] = v35;
  _OWORD v23[3] = v24;
  uint64_t v25 = v34;
  v23[4] = v33;
  v23[5] = a7;
  v23[6] = v37;
  v23[7] = a5;
  v23[8] = v38;
  v23[9] = v25;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  id v26 = a5;
  id v27 = v25;
  sub_1C277B330();
  uint64_t v28 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AAE0];
  sub_1C2617528(0, &qword_1EBB82CD0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4F1AAE0]);
  sub_1C26CA008();
  sub_1C264EF4C(&qword_1EBB82CC8, &qword_1EBB82CD0, v28);
  uint64_t v29 = v41;
  sub_1C277B5A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v16, v29);
  sub_1C26CA0E4();
  uint64_t v30 = v39;
  uint64_t v31 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v20, v30);
  return v31;
}

uint64_t sub_1C26C4820(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  unint64_t v67 = a2;
  uint64_t v70 = a1;
  uint64_t v59 = *v2;
  uint64_t v4 = MEMORY[0x1E4FBC848] + 8;
  sub_1C26CA234(0, (unint64_t *)&qword_1EBB82D00, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4F1AC08]);
  uint64_t v65 = v5;
  uint64_t v63 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v61 = (char *)&v56 - v6;
  uint64_t v66 = v4;
  sub_1C2617528(0, (unint64_t *)&unk_1EBB831E0, v4, MEMORY[0x1E4F1ACE0]);
  uint64_t v64 = v7;
  uint64_t v62 = *(void (***)(char *, uint64_t))(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v60 = (char *)&v56 - v8;
  sub_1C2633D24(0, &qword_1EBB84A68, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v68 = (char *)&v56 - v10;
  sub_1C26C9CD8();
  uint64_t v12 = v11;
  uint64_t v69 = *((void *)v11 - 1);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C26C9D40();
  uint64_t v16 = v15;
  uint64_t v71 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C26C9DF4();
  uint64_t v20 = v19;
  uint64_t v21 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (void (**)(char *, uint64_t))((char *)&v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = sub_1C277B130();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v72 = (char *)&v56 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (*((unsigned char *)v3 + 72) == 1)
  {
    uint64_t v63 = v25;
    uint64_t v64 = v24;
    uint64_t v57 = v14;
    unint64_t v60 = v18;
    uint64_t v61 = v12;
    uint64_t v62 = v23;
    uint64_t v65 = v16;
    uint64_t v66 = v21;
    uint64_t v58 = v20;
    sub_1C277B0F0();
    unint64_t v27 = v67;
    swift_bridgeObjectRetain_n();
    uint64_t v28 = sub_1C277B100();
    os_log_type_t v29 = sub_1C277BD40();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v31 = (void *)swift_slowAlloc();
      id v74 = v31;
      *(_DWORD *)uint64_t v30 = 136315394;
      uint64_t v32 = sub_1C277C9E0();
      uint64_t v73 = sub_1C263FDFC(v32, v33, (uint64_t *)&v74);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v73 = sub_1C263FDFC(v70, v27, (uint64_t *)&v74);
      sub_1C277C0D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C2601000, v28, v29, "%s Requesting cloud sync for reason: %s", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v31, -1, -1);
      MEMORY[0x1C875D230](v30, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v63 + 8))(v72, v64);
    uint64_t v35 = v65;
    uint64_t v34 = v66;
    uint64_t v36 = v71;
    id v43 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2AE40]), sel_initWithPush_pull_, 1, 0);
    id v44 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2AD68]), sel_initWithContextSyncRequest_, v43);

    id v74 = 0;
    unint64_t v75 = 0xE000000000000000;
    sub_1C277C2D0();
    swift_bridgeObjectRelease();
    id v74 = (id)0xD000000000000024;
    unint64_t v75 = 0x80000001C278C520;
    sub_1C277B8D0();
    id v45 = sub_1C26C1A70();
    uint64_t v46 = v57;
    sub_1C277BEF0();

    swift_bridgeObjectRelease();
    id v47 = (void *)v3[6];
    id v74 = v47;
    uint64_t v48 = sub_1C277BE70();
    uint64_t v49 = (uint64_t)v68;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v68, 1, 1, v48);
    sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85180);
    id v50 = v47;
    swift_getOpaqueTypeConformance2();
    sub_1C264E780();
    uint64_t v52 = v60;
    uint64_t v51 = v61;
    sub_1C277B5C0();
    sub_1C26CAB2C(v49, &qword_1EBB84A68, MEMORY[0x1E4FBCC28]);

    (*(void (**)(char *, char *))(v69 + 8))(v46, v51);
    sub_1C2633AE8(&qword_1EA304980, 255, (void (*)(uint64_t))sub_1C26C9D40);
    uint64_t v53 = (char *)v62;
    sub_1C277B500();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v52, v35);
    sub_1C2633AE8(&qword_1EA304988, 255, (void (*)(uint64_t))sub_1C26C9DF4);
    uint64_t v54 = v58;
    uint64_t v42 = sub_1C277B4E0();

    (*(void (**)(char *, uint64_t))(v34 + 8))(v53, v54);
  }
  else
  {
    uint64_t v37 = v61;
    uint64_t v38 = v66;
    sub_1C277B440();
    sub_1C26532A4();
    uint64_t v39 = v60;
    uint64_t v40 = v65;
    sub_1C277B410();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v37, v40);
    sub_1C26C9E98((unint64_t *)&qword_1EBB831D8, (unint64_t *)&unk_1EBB831E0, v38);
    uint64_t v41 = v64;
    uint64_t v42 = sub_1C277B4E0();
    v62[1](v39, v41);
  }
  return v42;
}

uint64_t sub_1C26C5184(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v29 = type metadata accessor for UnprotectedNotificationContentState(0);
  uint64_t v31 = *(void *)(v29 - 8);
  uint64_t v30 = *(void *)(v31 + 64);
  MEMORY[0x1F4188790](v29);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2633D24(0, &qword_1EA304990, type metadata accessor for UnprotectedNotificationContentState, MEMORY[0x1E4F1AC08]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v28 - v9;
  sub_1C2617528(0, &qword_1EA304998, MEMORY[0x1E4F277C0], MEMORY[0x1E4F1ACE0]);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v32 = v11;
  uint64_t v33 = v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v28 - v13;
  sub_1C26CA61C();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v34 = v15;
  uint64_t v35 = v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void **)(v2 + 24);
  sub_1C26C93BC(a1, (uint64_t)v5, type metadata accessor for UnprotectedNotificationContentState);
  sub_1C277B440();
  sub_1C277B420();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1C26C93BC(a1, (uint64_t)v5, type metadata accessor for UnprotectedNotificationContentState);
  unint64_t v20 = (*(unsigned __int8 *)(v31 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v19;
  sub_1C26C9638((uint64_t)v5, v21 + v20, type metadata accessor for UnprotectedNotificationContentState);
  id v22 = v19;
  sub_1C277B330();
  uint64_t v23 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AAE0];
  sub_1C2617528(0, &qword_1EBB82CD0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4F1AAE0]);
  sub_1C26C9E98(&qword_1EA3049A8, &qword_1EA304998, MEMORY[0x1E4F277C0]);
  sub_1C264EF4C(&qword_1EBB82CC8, &qword_1EBB82CD0, v23);
  uint64_t v24 = v32;
  sub_1C277B5A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v24);
  sub_1C2633AE8(&qword_1EA3049B0, 255, (void (*)(uint64_t))sub_1C26CA61C);
  uint64_t v25 = v34;
  uint64_t v26 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v18, v25);
  return v26;
}

uint64_t sub_1C26C5640(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v29 = type metadata accessor for ProtectedNotificationContentState(0);
  uint64_t v31 = *(void *)(v29 - 8);
  uint64_t v30 = *(void *)(v31 + 64);
  MEMORY[0x1F4188790](v29);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2633D24(0, &qword_1EA3049C0, type metadata accessor for ProtectedNotificationContentState, MEMORY[0x1E4F1AC08]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v28 - v9;
  sub_1C2617528(0, &qword_1EA304998, MEMORY[0x1E4F277C0], MEMORY[0x1E4F1ACE0]);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v32 = v11;
  uint64_t v33 = v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v28 - v13;
  sub_1C26CA61C();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v34 = v15;
  uint64_t v35 = v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void **)(v2 + 16);
  sub_1C26C93BC(a1, (uint64_t)v5, type metadata accessor for ProtectedNotificationContentState);
  sub_1C277B440();
  sub_1C277B420();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1C26C93BC(a1, (uint64_t)v5, type metadata accessor for ProtectedNotificationContentState);
  unint64_t v20 = (*(unsigned __int8 *)(v31 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v19;
  sub_1C26C9638((uint64_t)v5, v21 + v20, type metadata accessor for ProtectedNotificationContentState);
  id v22 = v19;
  sub_1C277B330();
  uint64_t v23 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AAE0];
  sub_1C2617528(0, &qword_1EBB82CD0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4F1AAE0]);
  sub_1C26C9E98(&qword_1EA3049A8, &qword_1EA304998, MEMORY[0x1E4F277C0]);
  sub_1C264EF4C(&qword_1EBB82CC8, &qword_1EBB82CD0, v23);
  uint64_t v24 = v32;
  sub_1C277B5A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v24);
  sub_1C2633AE8(&qword_1EA3049B0, 255, (void (*)(uint64_t))sub_1C26CA61C);
  uint64_t v25 = v34;
  uint64_t v26 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v18, v25);
  return v26;
}

uint64_t sub_1C26C5AFC@<X0>(void (*a1)(void)@<X2>, void (*a2)(void)@<X3>, uint64_t *a3@<X8>)
{
  a1(0);
  a2();
  uint64_t result = sub_1C277A4B0();
  if (!v3)
  {
    *a3 = result;
    a3[1] = v7;
  }
  return result;
}

uint64_t sub_1C26C5B74@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  unint64_t v6 = a1[1];
  sub_1C263D360(*a1, v6);
  uint64_t v4 = sub_1C277BFD0();
  uint64_t result = sub_1C263CC84(v3, v6);
  *a2 = v4;
  return result;
}

uint64_t sub_1C26C5BF4(uint64_t a1)
{
  return sub_1C26C3380(a1);
}

uint64_t sub_1C26C5C18(uint64_t a1)
{
  return sub_1C26C3968(a1);
}

uint64_t sub_1C26C5C3C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_1C26C4400(a1, a2, a3, a4, *(void **)(*(void *)v4 + 48), 0xD000000000000048, 0x80000001C278C3F0);
}

uint64_t sub_1C26C5C7C()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  return *(unsigned __int8 *)(v1 + 72);
}

uint64_t sub_1C26C5CBC(char a1)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 72) = a1;
  return result;
}

uint64_t (*sub_1C26C5D00())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C26C5D58()
{
  return sub_1C26C1C4C();
}

uint64_t sub_1C26C5D7C(uint64_t a1)
{
  return sub_1C26C2C04(a1);
}

uint64_t sub_1C26C5DA0(uint64_t a1, uint64_t a2)
{
  return sub_1C26C3E14(a1, a2);
}

uint64_t sub_1C26C5DC4@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X2>, void (*a3)(void)@<X3>, uint64_t a4@<X4>, unint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v11 = a2(0);
  id v12 = objc_msgSend(a1, sel_value);
  uint64_t v13 = sub_1C277A780();
  unint64_t v15 = v14;

  a3();
  sub_1C277A480();
  if (v6)
  {
    sub_1C263CC84(v13, v15);
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_1C277B130();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EBB86280);
    id v17 = v6;
    id v18 = v6;
    uint64_t v19 = sub_1C277B100();
    os_log_type_t v20 = sub_1C277BD20();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v28 = v26;
      *(_DWORD *)uint64_t v21 = 136315906;
      sub_1C263FDFC(0xD000000000000028, 0x80000001C2781310, &v28);
      sub_1C277C0D0();
      *(_WORD *)(v21 + 12) = 2080;
      sub_1C263FDFC(0xD000000000000017, 0x80000001C278C550, &v28);
      sub_1C277C0D0();
      *(_WORD *)(v21 + 22) = 2080;
      sub_1C263FDFC(a4, a5, &v28);
      sub_1C277C0D0();
      *(_WORD *)(v21 + 32) = 2082;
      id v22 = v6;
      sub_1C26532A4();
      uint64_t v23 = sub_1C277B870();
      sub_1C263FDFC(v23, v24, &v28);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C2601000, v19, v20, "%s %s %s Error: %{public}s", (uint8_t *)v21, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v26, -1, -1);
      MEMORY[0x1C875D230](v21, -1, -1);
    }
    else
    {
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a6, 1, 1, v11);
  }
  else
  {
    sub_1C263CC84(v13, v15);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a6, 0, 1, v11);
  }
}

uint64_t sub_1C26C618C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v88 = a8;
  uint64_t v101 = a7;
  uint64_t v82 = a6;
  uint64_t v99 = a2;
  uint64_t v100 = a4;
  id v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C2633D24(0, &qword_1EBB84A68, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8);
  unint64_t v15 = (char *)&v81 - v14;
  sub_1C26CA16C(0);
  uint64_t v90 = *(void *)(v16 - 8);
  uint64_t v91 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v89 = (char *)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C26CA2B8(0);
  Class isa = v18[-1].isa;
  os_log_t v97 = v18;
  MEMORY[0x1F4188790](v18);
  uint64_t v93 = (char *)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C26C928C(0, &qword_1EBB82BB0, sub_1C26CA2B8, (void (*)(void))sub_1C26CA324);
  uint64_t v94 = *(void *)(v20 - 8);
  uint64_t v95 = v20;
  MEMORY[0x1F4188790](v20);
  uint64_t v92 = (char *)&v81 - v21;
  uint64_t v22 = MEMORY[0x1E4FBC848] + 8;
  sub_1C26CA234(0, (unint64_t *)&qword_1EBB82D00, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4F1AC08]);
  uint64_t v87 = v23;
  uint64_t v85 = *((void *)v23 - 1);
  MEMORY[0x1F4188790](v23);
  uint64_t v83 = (char *)&v81 - v24;
  sub_1C2617528(0, (unint64_t *)&unk_1EBB831E0, v22, MEMORY[0x1E4F1ACE0]);
  uint64_t v86 = v25;
  uint64_t v84 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  unint64_t v27 = (char *)&v81 - v26;
  sub_1C2633D24(0, (unint64_t *)&unk_1EBB84888, MEMORY[0x1E4F27928], v12);
  MEMORY[0x1F4188790](v28 - 8);
  uint64_t v30 = (char *)&v81 - v29;
  uint64_t v31 = sub_1C277A840();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  uint64_t v35 = (char *)&v81 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v33);
  uint64_t v37 = (char *)&v81 - v36;
  sub_1C26663F8(a1, (uint64_t)v30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31) == 1)
  {
    sub_1C26CAB2C((uint64_t)v30, (unint64_t *)&unk_1EBB84888, MEMORY[0x1E4F27928]);
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    unint64_t v98 = a5;
    uint64_t v87 = a9;
    uint64_t v38 = sub_1C277B130();
    __swift_project_value_buffer(v38, (uint64_t)qword_1EBB86280);
    unint64_t v39 = a3;
    swift_bridgeObjectRetain_n();
    uint64_t v40 = sub_1C277B100();
    os_log_type_t v41 = sub_1C277BD40();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      v103[0] = v43;
      *(_DWORD *)uint64_t v42 = 136315394;
      uint64_t v102 = sub_1C263FDFC(0xD000000000000028, 0x80000001C2781310, v103);
      sub_1C277C0D0();
      *(_WORD *)(v42 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v44 = v99;
      uint64_t v102 = sub_1C263FDFC(v99, a3, v103);
      sub_1C277C0D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C2601000, v40, v41, "%s Proceeding with migration for %s", (uint8_t *)v42, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v43, -1, -1);
      MEMORY[0x1C875D230](v42, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v44 = v99;
    }
    uint64_t v102 = v101;
    v103[0] = v82;
    uint64_t v57 = sub_1C277BE70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v15, 1, 1, v57);
    sub_1C26CA1A0();
    sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85180);
    sub_1C26CA280();
    sub_1C264E780();
    uint64_t v58 = v89;
    sub_1C277B5C0();
    sub_1C26CAB2C((uint64_t)v15, &qword_1EBB84A68, MEMORY[0x1E4FBCC28]);
    uint64_t v59 = (void *)swift_allocObject();
    v59[2] = v44;
    v59[3] = v39;
    v59[4] = v88;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1C277B330();
    unint64_t v60 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AAE0];
    uint64_t v99 = MEMORY[0x1E4FBC848] + 8;
    sub_1C2617528(0, &qword_1EBB82CD0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4F1AAE0]);
    sub_1C26CA2EC();
    sub_1C264EF4C(&qword_1EBB82CC8, &qword_1EBB82CD0, v60);
    uint64_t v61 = v93;
    uint64_t v62 = v44;
    unint64_t v63 = v39;
    uint64_t v64 = v91;
    sub_1C277B5A0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v90 + 8))(v58, v64);
    uint64_t v65 = (void *)swift_allocObject();
    v65[2] = v62;
    v65[3] = v63;
    uint64_t v66 = v87;
    uint64_t v67 = v100;
    uint64_t v68 = (void *)v101;
    v65[4] = v87;
    v65[5] = v67;
    v65[6] = v98;
    v65[7] = v68;
    uint64_t v69 = swift_allocObject();
    *(void *)(v69 + 16) = sub_1C26CA424;
    *(void *)(v69 + 24) = v65;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v70 = v66;
    id v71 = v68;
    sub_1C277B330();
    sub_1C26CA324();
    uint64_t v72 = v92;
    os_log_t v73 = v97;
    sub_1C277B5A0();
    swift_release();
    (*((void (**)(char *, os_log_t))isa + 1))(v61, v73);
    sub_1C26CA43C();
    uint64_t v74 = v95;
    uint64_t v75 = sub_1C277B4E0();
    (*(void (**)(char *, uint64_t))(v94 + 8))(v72, v74);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v37, v30, v31);
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v45 = sub_1C277B130();
    __swift_project_value_buffer(v45, (uint64_t)qword_1EBB86280);
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v35, v37, v31);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v46 = sub_1C277B100();
    os_log_type_t v47 = sub_1C277BD00();
    int v48 = v47;
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v49 = swift_slowAlloc();
      unint64_t v98 = a5;
      uint64_t v50 = v49;
      uint64_t v101 = swift_slowAlloc();
      v103[0] = v101;
      *(_DWORD *)uint64_t v50 = 136315906;
      os_log_t v97 = v46;
      uint64_t v102 = sub_1C263FDFC(0xD000000000000028, 0x80000001C2781310, v103);
      LODWORD(isa) = v48;
      sub_1C277C0D0();
      *(_WORD *)(v50 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v102 = sub_1C263FDFC(v99, a3, v103);
      sub_1C277C0D0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v50 + 22) = 2080;
      sub_1C2633AE8(&qword_1EBB82650, 255, MEMORY[0x1E4F27928]);
      uint64_t v51 = sub_1C277C7B0();
      uint64_t v102 = sub_1C263FDFC(v51, v52, v103);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      uint64_t v53 = *(void (**)(char *, uint64_t))(v32 + 8);
      v53(v35, v31);
      *(_WORD *)(v50 + 32) = 2080;
      unint64_t v54 = v98;
      swift_bridgeObjectRetain();
      uint64_t v102 = sub_1C263FDFC(v100, v54, v103);
      sub_1C277C0D0();
      swift_bridgeObjectRelease_n();
      os_log_t v55 = v97;
      _os_log_impl(&dword_1C2601000, v97, (os_log_type_t)isa, "%s Migration already completed for %s on %s for key %s", (uint8_t *)v50, 0x2Au);
      uint64_t v56 = v101;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v56, -1, -1);
      MEMORY[0x1C875D230](v50, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      uint64_t v53 = *(void (**)(char *, uint64_t))(v32 + 8);
      v53(v35, v31);

      swift_bridgeObjectRelease_n();
    }
    uint64_t v76 = MEMORY[0x1E4FBC848] + 8;
    uint64_t v77 = v83;
    sub_1C277B440();
    sub_1C26532A4();
    uint64_t v78 = v87;
    sub_1C277B410();
    (*(void (**)(char *, void *))(v85 + 8))(v77, v78);
    sub_1C26C9E98((unint64_t *)&qword_1EBB831D8, (unint64_t *)&unk_1EBB831E0, v76);
    uint64_t v79 = v86;
    uint64_t v75 = sub_1C277B4E0();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v27, v79);
    v53(v37, v31);
  }
  return v75;
}

uint64_t sub_1C26C6F30(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v48 = a5;
  uint64_t v49 = a3;
  uint64_t v47 = a1;
  uint64_t v7 = MEMORY[0x1E4FBC848] + 8;
  sub_1C26CA234(0, (unint64_t *)&qword_1EBB82D00, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4F1AC08]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v12 = (char *)&v44 - v11;
  sub_1C2617528(0, (unint64_t *)&unk_1EBB831E0, v7, MEMORY[0x1E4F1ACE0]);
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v44 - v16;
  id v18 = (int *)type metadata accessor for NotificationContentState(0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (uint64_t *)((char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C277A890();
    *uint64_t v20 = v49;
    v20[1] = a4;
    uint64_t v21 = (void *)((char *)v20 + v18[6]);
    uint64_t v22 = v47;
    *uint64_t v21 = v47;
    v21[1] = a2;
    *((unsigned char *)v20 + v18[7]) = 1;
    *((unsigned char *)v20 + v18[8]) = 0;
    uint64_t v23 = qword_1EBB86260;
    swift_bridgeObjectRetain();
    unint64_t v24 = a4;
    if (v23 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1C277B130();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EBB86280);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_1C277B100();
    os_log_type_t v27 = sub_1C277BD40();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v51 = v29;
      *(_DWORD *)uint64_t v28 = 136315651;
      uint64_t v50 = sub_1C263FDFC(0xD000000000000028, 0x80000001C2781310, &v51);
      sub_1C277C0D0();
      *(_WORD *)(v28 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v50 = sub_1C263FDFC(v49, v24, &v51);
      sub_1C277C0D0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v28 + 22) = 2081;
      swift_bridgeObjectRetain();
      uint64_t v50 = sub_1C263FDFC(v22, a2, &v51);
      sub_1C277C0D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C2601000, v26, v27, "%s Migrating %s content state: %{private}s", (uint8_t *)v28, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v29, -1, -1);
      MEMORY[0x1C875D230](v28, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    uint64_t v37 = sub_1C26C2C04((uint64_t)v20);
    sub_1C26CA5BC((uint64_t)v20, type metadata accessor for NotificationContentState);
  }
  else
  {
    uint64_t v45 = v17;
    uint64_t v46 = v12;
    uint64_t v47 = v15;
    uint64_t v48 = v10;
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_1C277B130();
    __swift_project_value_buffer(v30, (uint64_t)qword_1EBB86280);
    unint64_t v31 = a4;
    swift_bridgeObjectRetain_n();
    uint64_t v32 = sub_1C277B100();
    os_log_type_t v33 = sub_1C277BD40();
    uint64_t v34 = v9;
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v35 = swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v51 = v36;
      *(_DWORD *)uint64_t v35 = 136315394;
      uint64_t v50 = sub_1C263FDFC(0xD000000000000028, 0x80000001C2781310, &v51);
      sub_1C277C0D0();
      *(_WORD *)(v35 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v50 = sub_1C263FDFC(v49, v31, &v51);
      sub_1C277C0D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C2601000, v32, v33, "%s No pre-existing content state for %s", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v36, -1, -1);
      MEMORY[0x1C875D230](v35, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v39 = v47;
    uint64_t v38 = v48;
    os_log_type_t v41 = v45;
    uint64_t v40 = v46;
    uint64_t v42 = MEMORY[0x1E4FBC848] + 8;
    sub_1C277B440();
    sub_1C26532A4();
    sub_1C277B410();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v34);
    sub_1C26C9E98((unint64_t *)&qword_1EBB831D8, (unint64_t *)&unk_1EBB831E0, v42);
    uint64_t v37 = sub_1C277B4E0();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v14);
  }
  return v37;
}

uint64_t sub_1C26C75E4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v38 = a4;
  uint64_t v39 = a3;
  uint64_t v37 = a1;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C2633D24(0, &qword_1EBB84A68, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  id v12 = (char *)v34 - v11;
  sub_1C2633D24(0, (unint64_t *)&unk_1EBB84888, MEMORY[0x1E4F27928], v9);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)v34 - v14;
  sub_1C26CA4C4();
  uint64_t v17 = v16;
  uint64_t v40 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_1C277B130();
  __swift_project_value_buffer(v20, (uint64_t)qword_1EBB86280);
  swift_bridgeObjectRetain_n();
  uint64_t v21 = sub_1C277B100();
  os_log_type_t v22 = sub_1C277BD40();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    v34[1] = a5;
    uint64_t v24 = v23;
    uint64_t v25 = swift_slowAlloc();
    uint64_t v36 = v17;
    uint64_t v26 = v25;
    uint64_t v42 = v25;
    *(_DWORD *)uint64_t v24 = 136315394;
    uint64_t v35 = v19;
    uint64_t v41 = sub_1C263FDFC(0xD000000000000028, 0x80000001C2781310, &v42);
    sub_1C277C0D0();
    *(_WORD *)(v24 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_1C263FDFC(v37, a2, &v42);
    uint64_t v19 = v35;
    sub_1C277C0D0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C2601000, v21, v22, "%s Marking migration as complete for %s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    uint64_t v27 = v26;
    uint64_t v17 = v36;
    MEMORY[0x1C875D230](v27, -1, -1);
    MEMORY[0x1C875D230](v24, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1C277A830();
  uint64_t v28 = sub_1C277A840();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v15, 0, 1, v28);
  uint64_t v29 = sub_1C277BDD0();
  sub_1C26CAB2C((uint64_t)v15, (unint64_t *)&unk_1EBB84888, MEMORY[0x1E4F27928]);
  uint64_t v41 = a6;
  uint64_t v42 = v29;
  uint64_t v30 = sub_1C277BE70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v12, 1, 1, v30);
  unint64_t v31 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AC28];
  sub_1C2617528(0, (unint64_t *)&qword_1EBB82D88, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4F1AC28]);
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85180);
  sub_1C264EF4C((unint64_t *)&qword_1EBB82D80, (unint64_t *)&qword_1EBB82D88, v31);
  sub_1C264E780();
  sub_1C277B5C0();
  sub_1C26CAB2C((uint64_t)v12, &qword_1EBB84A68, MEMORY[0x1E4FBCC28]);
  swift_release();
  sub_1C2633AE8(&qword_1EBB82C10, 255, (void (*)(uint64_t))sub_1C26CA4C4);
  uint64_t v32 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v19, v17);
  return v32;
}

uint64_t sub_1C26C7B5C(uint64_t a1, id *a2, uint64_t a3, uint64_t a4)
{
  id v5 = objc_msgSend(*a2, sel_storageEntries);
  sub_1C2644ED8(0, &qword_1EA304900);
  unint64_t v6 = sub_1C277BA40();

  swift_retain();
  unint64_t v7 = sub_1C26C7FE0(v6, a4);
  swift_bridgeObjectRelease();
  swift_release();
  return sub_1C2768AAC(v7);
}

unint64_t sub_1C26C7C18(unint64_t a1, uint64_t a2)
{
  uint64_t v29 = a2;
  sub_1C2633D24(0, &qword_1EA3049D0, type metadata accessor for UnprotectedNotificationContentState, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)&v21 - v5;
  uint64_t v28 = type metadata accessor for UnprotectedNotificationContentState(0);
  uint64_t v24 = *(void *)(v28 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v28);
  uint64_t v27 = (uint64_t)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v23 = (uint64_t)&v21 - v9;
  if (a1 >> 62) {
    goto LABEL_20;
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v10; uint64_t v10 = sub_1C277C5A0())
  {
    unint64_t v26 = a1 & 0xC000000000000001;
    uint64_t v11 = (unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
    unint64_t v12 = MEMORY[0x1E4FBC860];
    uint64_t v13 = 4;
    unint64_t v25 = 0x80000001C278C570;
    unint64_t v22 = a1;
    while (1)
    {
      id v14 = v26 ? (id)MEMORY[0x1C875C230](v13 - 4, a1) : *(id *)(a1 + 8 * v13);
      uint64_t v15 = v14;
      uint64_t v16 = v13 - 3;
      if (__OFADD__(v13 - 4, 1)) {
        break;
      }
      sub_1C26C5DC4(v14, type metadata accessor for UnprotectedNotificationContentState, (void (*)(void))sub_1C26CAAF4, 0xD000000000000023, v25, (uint64_t)v6);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v12;
      }

      if ((*v11)(v6, 1, v28) == 1)
      {
        sub_1C26CAB2C((uint64_t)v6, &qword_1EA3049D0, type metadata accessor for UnprotectedNotificationContentState);
      }
      else
      {
        uint64_t v17 = v23;
        sub_1C26C9638((uint64_t)v6, v23, type metadata accessor for UnprotectedNotificationContentState);
        sub_1C26C9638(v17, v27, type metadata accessor for UnprotectedNotificationContentState);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v12 = sub_1C26908F4(0, *(void *)(v12 + 16) + 1, 1, v12);
        }
        unint64_t v19 = *(void *)(v12 + 16);
        unint64_t v18 = *(void *)(v12 + 24);
        if (v19 >= v18 >> 1) {
          unint64_t v12 = sub_1C26908F4(v18 > 1, v19 + 1, 1, v12);
        }
        *(void *)(v12 + 16) = v19 + 1;
        sub_1C26C9638(v27, v12+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v19, type metadata accessor for UnprotectedNotificationContentState);
        a1 = v22;
      }
      ++v13;
      if (v16 == v10)
      {
        swift_bridgeObjectRelease();
        return v12;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

unint64_t sub_1C26C7FE0(unint64_t a1, uint64_t a2)
{
  uint64_t v29 = a2;
  sub_1C2633D24(0, &qword_1EA3049E0, type metadata accessor for ProtectedNotificationContentState, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)&v21 - v5;
  uint64_t v28 = type metadata accessor for ProtectedNotificationContentState(0);
  uint64_t v24 = *(void *)(v28 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v28);
  uint64_t v27 = (uint64_t)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v23 = (uint64_t)&v21 - v9;
  if (a1 >> 62) {
    goto LABEL_20;
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v10; uint64_t v10 = sub_1C277C5A0())
  {
    unint64_t v26 = a1 & 0xC000000000000001;
    uint64_t v11 = (unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
    unint64_t v12 = MEMORY[0x1E4FBC860];
    uint64_t v13 = 4;
    unint64_t v25 = 0x80000001C278C5A0;
    unint64_t v22 = a1;
    while (1)
    {
      id v14 = v26 ? (id)MEMORY[0x1C875C230](v13 - 4, a1) : *(id *)(a1 + 8 * v13);
      uint64_t v15 = v14;
      uint64_t v16 = v13 - 3;
      if (__OFADD__(v13 - 4, 1)) {
        break;
      }
      sub_1C26C5DC4(v14, type metadata accessor for ProtectedNotificationContentState, (void (*)(void))sub_1C26C9038, 0xD000000000000021, v25, (uint64_t)v6);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v12;
      }

      if ((*v11)(v6, 1, v28) == 1)
      {
        sub_1C26CAB2C((uint64_t)v6, &qword_1EA3049E0, type metadata accessor for ProtectedNotificationContentState);
      }
      else
      {
        uint64_t v17 = v23;
        sub_1C26C9638((uint64_t)v6, v23, type metadata accessor for ProtectedNotificationContentState);
        sub_1C26C9638(v17, v27, type metadata accessor for ProtectedNotificationContentState);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v12 = sub_1C269093C(0, *(void *)(v12 + 16) + 1, 1, v12);
        }
        unint64_t v19 = *(void *)(v12 + 16);
        unint64_t v18 = *(void *)(v12 + 24);
        if (v19 >= v18 >> 1) {
          unint64_t v12 = sub_1C269093C(v18 > 1, v19 + 1, 1, v12);
        }
        *(void *)(v12 + 16) = v19 + 1;
        sub_1C26C9638(v27, v12+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v19, type metadata accessor for ProtectedNotificationContentState);
        a1 = v22;
      }
      ++v13;
      if (v16 == v10)
      {
        swift_bridgeObjectRelease();
        return v12;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C26C83A8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1C277A8A0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for UnprotectedNotificationContentState(0);
  uint64_t v9 = MEMORY[0x1F4188790](v32);
  uint64_t v31 = (uint64_t)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v37 = (uint64_t)v28 - v12;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v41 = MEMORY[0x1E4FBC860];
  uint64_t v34 = *(void *)(a1 + 16);
  if (v34)
  {
    uint64_t v14 = 0;
    uint64_t v15 = *(unsigned __int8 *)(v11 + 80);
    v28[1] = v2;
    uint64_t v29 = (v15 + 32) & ~v15;
    uint64_t v33 = a1 + v29;
    uint64_t v35 = *(void *)(v11 + 72);
    uint64_t v38 = v6 + 16;
    uint64_t v39 = a2 + 56;
    uint64_t v30 = v6;
    uint64_t v16 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v17 = a2;
    uint64_t v40 = a2;
    do
    {
      uint64_t v36 = v14;
      sub_1C26C93BC(v33 + v35 * v14, v37, type metadata accessor for UnprotectedNotificationContentState);
      if (*(void *)(v17 + 16)
        && (sub_1C2633AE8(&qword_1EBB84F38, 255, MEMORY[0x1E4F27990]),
            uint64_t v18 = sub_1C277B7B0(),
            uint64_t v17 = v40,
            uint64_t v19 = -1 << *(unsigned char *)(v40 + 32),
            unint64_t v20 = v18 & ~v19,
            ((*(void *)(v39 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) != 0))
      {
        uint64_t v21 = ~v19;
        uint64_t v22 = *(void *)(v30 + 72);
        uint64_t v23 = *(void (**)(char *, unint64_t, uint64_t))(v30 + 16);
        while (1)
        {
          v23(v8, *(void *)(v17 + 48) + v22 * v20, v5);
          sub_1C2633AE8(&qword_1EA3045D0, 255, MEMORY[0x1E4F27990]);
          char v24 = sub_1C277B810();
          (*v16)(v8, v5);
          if (v24) {
            break;
          }
          unint64_t v20 = (v20 + 1) & v21;
          uint64_t v17 = v40;
          if (((*(void *)(v39 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
            goto LABEL_3;
          }
        }
        sub_1C26C9638(v37, v31, type metadata accessor for UnprotectedNotificationContentState);
        uint64_t v25 = v41;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C2659EA8(0, *(void *)(v25 + 16) + 1, 1);
          uint64_t v25 = v41;
        }
        unint64_t v27 = *(void *)(v25 + 16);
        unint64_t v26 = *(void *)(v25 + 24);
        if (v27 >= v26 >> 1)
        {
          sub_1C2659EA8(v26 > 1, v27 + 1, 1);
          uint64_t v25 = v41;
        }
        *(void *)(v25 + 16) = v27 + 1;
        sub_1C26C9638(v31, v25 + v29 + v27 * v35, type metadata accessor for UnprotectedNotificationContentState);
        uint64_t v17 = v40;
      }
      else
      {
LABEL_3:
        sub_1C26CA5BC(v37, type metadata accessor for UnprotectedNotificationContentState);
      }
      uint64_t v14 = v36 + 1;
    }
    while (v36 + 1 != v34);
    return v41;
  }
  return result;
}

void sub_1C26C87E0()
{
  if (!qword_1EBB82A60)
  {
    sub_1C26C8884();
    sub_1C2633AE8(&qword_1EBB82C98, 255, (void (*)(uint64_t))sub_1C26C8884);
    unint64_t v0 = sub_1C277B170();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB82A60);
    }
  }
}

void sub_1C26C8884()
{
  if (!qword_1EBB82CA0)
  {
    sub_1C26C88F4();
    sub_1C26532A4();
    unint64_t v0 = sub_1C277B340();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB82CA0);
    }
  }
}

void sub_1C26C88F4()
{
  if (!qword_1EBB82E58)
  {
    sub_1C2644ED8(255, &qword_1EBB83000);
    unint64_t v0 = sub_1C277BB20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB82E58);
    }
  }
}

uint64_t sub_1C26C895C()
{
  return sub_1C2633AE8(&qword_1EBB82A58, 255, (void (*)(uint64_t))sub_1C26C87E0);
}

void sub_1C26C8994()
{
  if (!qword_1EBB82B20)
  {
    sub_1C26C91AC(255, &qword_1EBB82C28, (void (*)(uint64_t))sub_1C26C87E0, (void (*)(void))sub_1C26C895C);
    sub_1C2633D24(255, &qword_1EBB83290, type metadata accessor for NotificationContentState, MEMORY[0x1E4FBB718]);
    sub_1C26C8A70();
    unint64_t v0 = sub_1C277B240();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB82B20);
    }
  }
}

unint64_t sub_1C26C8A70()
{
  unint64_t result = qword_1EBB82C20;
  if (!qword_1EBB82C20)
  {
    sub_1C26C91AC(255, &qword_1EBB82C28, (void (*)(uint64_t))sub_1C26C87E0, (void (*)(void))sub_1C26C895C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB82C20);
  }
  return result;
}

uint64_t sub_1C26C8AF8()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C26C8B30@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1C26C2178(a1, a2, a3);
}

uint64_t sub_1C26C8B4C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C26C8B84(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]);
}

id sub_1C26C8BB4(unint64_t a1)
{
  uint64_t v48 = sub_1C277A840();
  uint64_t v2 = *(void *)(v48 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v48);
  uint64_t v47 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v46 = (char *)&v38 - v5;
  if (a1 >> 62) {
    goto LABEL_38;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v6)
  {
LABEL_39:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_3:
  unint64_t v7 = 0;
  id v8 = 0;
  unint64_t v40 = a1;
  unint64_t v41 = a1 & 0xC000000000000001;
  unint64_t v38 = a1 + 32;
  uint64_t v39 = v6;
  uint64_t v45 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v9 = (void (**)(char *, uint64_t))(v2 + 8);
  do
  {
    if (v41) {
      id v11 = (id)sub_1C2747C20(v7, a1);
    }
    else {
      id v11 = *(id *)(v38 + 8 * v7);
    }
    id v10 = v11;
    if (__OFADD__(v7++, 1))
    {
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_1C277C5A0();
      if (!v6) {
        goto LABEL_39;
      }
      goto LABEL_3;
    }
    id v13 = objc_msgSend(v11, sel_storageEntries);
    sub_1C2644ED8(0, &qword_1EA304900);
    unint64_t v14 = sub_1C277BA40();

    if (v14 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v2 = sub_1C277C5A0();
      if (!v2) {
        goto LABEL_33;
      }
LABEL_13:
      if (v2 >= 1)
      {
        id v42 = v10;
        unint64_t v43 = v7;
        id v44 = v8;
        unint64_t v15 = 0;
        uint64_t v16 = 0;
        unint64_t v49 = v14 & 0xC000000000000001;
        while (1)
        {
          if (v49)
          {
            id v8 = (id)sub_1C2747C34(v15, v14);
            if (v16) {
              goto LABEL_20;
            }
          }
          else
          {
            id v8 = *(id *)(v14 + 8 * v15 + 32);
            if (v16)
            {
LABEL_20:
              id v17 = v16;
              id v18 = objc_msgSend(v17, sel_modificationDate);
              uint64_t v19 = v2;
              unint64_t v20 = v14;
              uint64_t v21 = v46;
              sub_1C277A810();

              id v22 = objc_msgSend(v8, sel_modificationDate);
              uint64_t v23 = v47;
              sub_1C277A810();

              char v24 = sub_1C277A7F0();
              uint64_t v25 = *v9;
              unint64_t v26 = v23;
              uint64_t v27 = v48;
              (*v9)(v26, v48);
              uint64_t v28 = v21;
              unint64_t v14 = v20;
              uint64_t v2 = v19;
              v25(v28, v27);

              if (v24) {
                uint64_t v29 = v17;
              }
              else {
                uint64_t v29 = v8;
              }
              if ((v24 & 1) == 0) {
                id v8 = v17;
              }
            }
          }
          ++v15;
          uint64_t v16 = v8;
          if (v2 == v15)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v2 = (uint64_t)v44;
            if (!v44)
            {
              uint64_t v6 = v39;
              a1 = v40;
              id v10 = v42;
              unint64_t v7 = v43;
              goto LABEL_6;
            }
            if (v8)
            {
              id v10 = v8;
              uint64_t v2 = (uint64_t)(id)v2;
              id v30 = objc_msgSend((id)v2, sel_modificationDate);
              uint64_t v31 = v46;
              sub_1C277A810();

              id v32 = objc_msgSend(v10, sel_modificationDate);
              uint64_t v33 = v47;
              sub_1C277A810();

              LOBYTE(v32) = sub_1C277A7F0();
              uint64_t v34 = *v45;
              uint64_t v35 = v33;
              uint64_t v36 = v48;
              (*v45)(v35, v48);
              v34(v31, v36);

              if (v32)
              {

                id v10 = (id)v2;
                uint64_t v6 = v39;
                a1 = v40;
                unint64_t v7 = v43;
              }
              else
              {

                uint64_t v2 = (uint64_t)v42;
                unint64_t v7 = v43;
                uint64_t v6 = v39;
                a1 = v40;
                id v8 = v44;
              }
            }
            else
            {
              uint64_t v6 = v39;
              a1 = v40;
              id v10 = v42;
              unint64_t v7 = v43;
            }
LABEL_5:

            goto LABEL_6;
          }
        }
      }
      goto LABEL_37;
    }
    uint64_t v2 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_13;
    }
LABEL_33:
    swift_bridgeObjectRelease_n();
    if (v8)
    {
      uint64_t v2 = (uint64_t)v8;
      id v8 = 0;
      goto LABEL_5;
    }
LABEL_6:
  }
  while (v7 != v6);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1C26C9038()
{
  return sub_1C2633AE8(&qword_1EA3048F8, 255, (void (*)(uint64_t))type metadata accessor for ProtectedNotificationContentState);
}

uint64_t sub_1C26C9070(uint64_t a1, id *a2)
{
  return sub_1C26C7B5C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1C26C908C(uint64_t a1)
{
  return sub_1C26C2B94(a1, *(void *)(v1 + 16)) & 1;
}

void sub_1C26C90AC()
{
  if (!qword_1EA304908)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AAE0];
    sub_1C2617528(255, &qword_1EBB82CD0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4F1AAE0]);
    sub_1C264EF4C(&qword_1EBB82CC8, &qword_1EBB82CD0, v0);
    unint64_t v1 = sub_1C277B170();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EA304908);
    }
  }
}

void sub_1C26C9178(uint64_t a1)
{
}

void sub_1C26C91AC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    sub_1C2644ED8(255, (unint64_t *)&qword_1EBB85180);
    a4();
    sub_1C264E780();
    unint64_t v6 = sub_1C277B2B0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C26C9254()
{
  return sub_1C2633AE8(&qword_1EA304918, 255, (void (*)(uint64_t))sub_1C26C90AC);
}

void sub_1C26C928C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AAE0];
    sub_1C2617528(255, &qword_1EBB82CD0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4F1AAE0]);
    a3(255);
    sub_1C264EF4C(&qword_1EBB82CC8, &qword_1EBB82CD0, v7);
    a4();
    unint64_t v8 = sub_1C277B260();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C26C9384()
{
  return sub_1C2633AE8(&qword_1EA304928, 255, sub_1C26C9178);
}

uint64_t sub_1C26C93BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C26C9424()
{
  return objectdestroy_5Tm_1(type metadata accessor for NotificationContentState);
}

uint64_t sub_1C26C943C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C26C98D4((void (*)(void))type metadata accessor for NotificationContentState, NotificationContentState.description.getter, a1);
}

unint64_t sub_1C26C9468()
{
  unint64_t result = qword_1EA304930;
  if (!qword_1EA304930)
  {
    sub_1C26C928C(255, &qword_1EA304920, sub_1C26C9178, (void (*)(void))sub_1C26C9384);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304930);
  }
  return result;
}

void sub_1C26C94F0()
{
  if (!qword_1EA304938)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AAE0];
    sub_1C2617528(255, &qword_1EBB82CD0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4F1AAE0]);
    sub_1C2644ED8(255, (unint64_t *)&qword_1EBB85180);
    sub_1C264EF4C(&qword_1EBB82CC8, &qword_1EBB82CD0, v0);
    sub_1C264E780();
    unint64_t v1 = sub_1C277B2B0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EA304938);
    }
  }
}

uint64_t sub_1C26C95E8()
{
  return sub_1C2633AE8(&qword_1EA304948, 255, (void (*)(uint64_t))sub_1C26C94F0);
}

uint64_t sub_1C26C9620()
{
  return objectdestroy_5Tm_1(type metadata accessor for ProtectedNotificationContentState);
}

uint64_t sub_1C26C9638(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C26C96A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for ProtectedNotificationContentState(0) - 8);
  uint64_t v4 = (uint64_t *)(v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));

  return sub_1C26C382C(v4, a1);
}

unint64_t sub_1C26C9724()
{
  unint64_t result = qword_1EA304950;
  if (!qword_1EA304950)
  {
    sub_1C26C928C(255, &qword_1EA304940, (void (*)(uint64_t))sub_1C26C94F0, (void (*)(void))sub_1C26C95E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304950);
  }
  return result;
}

uint64_t sub_1C26C97AC()
{
  uint64_t v1 = (int *)(type metadata accessor for UnprotectedNotificationContentState(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + v1[7];
  uint64_t v7 = sub_1C277A8A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return MEMORY[0x1F4186498](v0, v4, v5);
}

uint64_t sub_1C26C98A8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C26C98D4((void (*)(void))type metadata accessor for UnprotectedNotificationContentState, UnprotectedNotificationContentState.description.getter, a1);
}

uint64_t sub_1C26C98D4@<X0>(void (*a1)(void)@<X1>, uint64_t (*a2)(void)@<X2>, uint64_t *a3@<X8>)
{
  a1(0);
  uint64_t v5 = a2();
  uint64_t v7 = sub_1C26C4820(v5, v6);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v7;
  return result;
}

uint64_t sub_1C26C9968()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C26C99A8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C26C4360(a1);
}

uint64_t sub_1C26C99B4(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C2633AE8(&qword_1EBB826F8, a2, (void (*)(uint64_t))type metadata accessor for HealthAppNotificationContentStateManager);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C26C9A0C()
{
  return sub_1C2633AE8(&qword_1EA304958, 255, (void (*)(uint64_t))type metadata accessor for NotificationContentState);
}

uint64_t sub_1C26C9A58()
{
  return sub_1C2633AE8(&qword_1EA304960, 255, (void (*)(uint64_t))type metadata accessor for NotificationContentState);
}

uint64_t sub_1C26C9AA4@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 72);
  return result;
}

uint64_t sub_1C26C9AEC(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 72) = v2;
  return result;
}

uint64_t method lookup function for HealthAppNotificationContentStateManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HealthAppNotificationContentStateManager);
}

uint64_t dispatch thunk of HealthAppNotificationContentStateManager.requestSyncOnUpdate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of HealthAppNotificationContentStateManager.requestSyncOnUpdate.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of HealthAppNotificationContentStateManager.requestSyncOnUpdate.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of HealthAppNotificationContentStateManager.__allocating_init(healthStore:domain:queue:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of HealthAppNotificationContentStateManager.getContentState(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of HealthAppNotificationContentStateManager.deriveContentState(protectedStorageGroups:unprotectedStorageGroups:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of HealthAppNotificationContentStateManager.setContentState(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of HealthAppNotificationContentStateManager.setProtectedContentState(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of HealthAppNotificationContentStateManager.setUnprotectedContentState(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of HealthAppNotificationContentStateManager.removeContentState(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of HealthAppNotificationContentStateManager.migrateContentStateIfNecessary(with:notificationIdentifier:keyValueDomain:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

void sub_1C26C9CD8()
{
  if (!qword_1EA304968)
  {
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EA304968);
    }
  }
}

void sub_1C26C9D40()
{
  if (!qword_1EA304970)
  {
    sub_1C26C9CD8();
    sub_1C2644ED8(255, (unint64_t *)&qword_1EBB85180);
    swift_getOpaqueTypeConformance2();
    sub_1C264E780();
    unint64_t v0 = sub_1C277B2B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA304970);
    }
  }
}

void sub_1C26C9DF4()
{
  if (!qword_1EA304978)
  {
    sub_1C26C9D40();
    sub_1C2633AE8(&qword_1EA304980, 255, (void (*)(uint64_t))sub_1C26C9D40);
    unint64_t v0 = sub_1C277B1E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA304978);
    }
  }
}

uint64_t sub_1C26C9E98(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2617528(255, a2, a3, MEMORY[0x1E4F1ACE0]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C26C9EFC(uint64_t a1)
{
}

void sub_1C26C9F30()
{
  if (!qword_1EBB82D30)
  {
    sub_1C2633D24(255, (unint64_t *)&unk_1EBB84888, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    sub_1C26532A4();
    unint64_t v0 = sub_1C277B470();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB82D30);
    }
  }
}

uint64_t sub_1C26C9FD0()
{
  return sub_1C2633AE8(&qword_1EBB82D28, 255, (void (*)(uint64_t))sub_1C26C9F30);
}

uint64_t sub_1C26CA008()
{
  return sub_1C2633AE8(&qword_1EBB82C00, 255, sub_1C26C9EFC);
}

uint64_t sub_1C26CA040()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();

  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_1C26CA0A0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C26C618C(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(void **)(v2 + 72));
  *a2 = result;
  return result;
}

unint64_t sub_1C26CA0E4()
{
  unint64_t result = qword_1EBB82B88;
  if (!qword_1EBB82B88)
  {
    sub_1C26C928C(255, &qword_1EBB82B90, sub_1C26C9EFC, (void (*)(void))sub_1C26CA008);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB82B88);
  }
  return result;
}

void sub_1C26CA16C(uint64_t a1)
{
}

void sub_1C26CA1A0()
{
  if (!qword_1EBB82C60)
  {
    sub_1C26CA234(255, (unint64_t *)&qword_1EBB85920, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    sub_1C26532A4();
    unint64_t v0 = sub_1C277B340();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB82C60);
    }
  }
}

void sub_1C26CA234(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C26CA280()
{
  return sub_1C2633AE8(&qword_1EBB82C58, 255, (void (*)(uint64_t))sub_1C26CA1A0);
}

void sub_1C26CA2B8(uint64_t a1)
{
}

uint64_t sub_1C26CA2EC()
{
  return sub_1C2633AE8(&qword_1EBB82BF0, 255, sub_1C26CA16C);
}

uint64_t sub_1C26CA324()
{
  return sub_1C2633AE8(&qword_1EBB82B98, 255, sub_1C26CA2B8);
}

uint64_t sub_1C26CA35C()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C26CA39C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C26C6F30(*(void *)a1, *(void *)(a1 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
  *a2 = result;
  return result;
}

uint64_t sub_1C26CA3D4()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1C26CA424()
{
  return sub_1C26C75E4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_1C26CA434@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C2747A30(*(uint64_t (**)(void))(v1 + 16), a1);
}

unint64_t sub_1C26CA43C()
{
  unint64_t result = qword_1EBB82BA8;
  if (!qword_1EBB82BA8)
  {
    sub_1C26C928C(255, &qword_1EBB82BB0, sub_1C26CA2B8, (void (*)(void))sub_1C26CA324);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB82BA8);
  }
  return result;
}

void sub_1C26CA4C4()
{
  if (!qword_1EBB82C18)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AC28];
    sub_1C2617528(255, (unint64_t *)&qword_1EBB82D88, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4F1AC28]);
    sub_1C2644ED8(255, (unint64_t *)&qword_1EBB85180);
    sub_1C264EF4C((unint64_t *)&qword_1EBB82D80, (unint64_t *)&qword_1EBB82D88, v0);
    sub_1C264E780();
    unint64_t v1 = sub_1C277B2B0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBB82C18);
    }
  }
}

uint64_t sub_1C26CA5BC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C26CA61C()
{
  if (!qword_1EA3049A0)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AAE0];
    sub_1C2617528(255, &qword_1EBB82CD0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4F1AAE0]);
    uint64_t v1 = MEMORY[0x1E4F277C0];
    sub_1C2617528(255, &qword_1EA304998, MEMORY[0x1E4F277C0], MEMORY[0x1E4F1ACE0]);
    sub_1C264EF4C(&qword_1EBB82CC8, &qword_1EBB82CD0, v0);
    sub_1C26C9E98(&qword_1EA3049A8, &qword_1EA304998, v1);
    unint64_t v2 = sub_1C277B260();
    if (!v3) {
      atomic_store(v2, (unint64_t *)&qword_1EA3049A0);
    }
  }
}

uint64_t sub_1C26CA748@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C26C5AFC((void (*)(void))type metadata accessor for UnprotectedNotificationContentState, (void (*)(void))sub_1C26CA8A0, a1);
}

uint64_t sub_1C26CA78C()
{
  uint64_t v1 = (int *)(type metadata accessor for UnprotectedNotificationContentState(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;

  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + v1[7];
  uint64_t v7 = sub_1C277A8A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return MEMORY[0x1F4186498](v0, v4, v5);
}

uint64_t sub_1C26CA888@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C26CAA40(a1, (void (*)(void))type metadata accessor for UnprotectedNotificationContentState, a2);
}

uint64_t sub_1C26CA8A0()
{
  return sub_1C2633AE8(&qword_1EA3049B8, 255, (void (*)(uint64_t))type metadata accessor for UnprotectedNotificationContentState);
}

uint64_t sub_1C26CA8D8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C26C5AFC((void (*)(void))type metadata accessor for ProtectedNotificationContentState, (void (*)(void))sub_1C26CAABC, a1);
}

uint64_t sub_1C26CA91C()
{
  uint64_t v1 = (int *)(type metadata accessor for ProtectedNotificationContentState(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;

  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + v1[7];
  uint64_t v7 = sub_1C277A8A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, v4, v5);
}

uint64_t sub_1C26CAA28@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C26CAA40(a1, (void (*)(void))type metadata accessor for ProtectedNotificationContentState, a2);
}

uint64_t sub_1C26CAA40@<X0>(uint64_t *a1@<X0>, void (*a2)(void)@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C26C5B74(a1, a3);
}

uint64_t sub_1C26CAABC()
{
  return sub_1C2633AE8(&qword_1EA3049C8, 255, (void (*)(uint64_t))type metadata accessor for ProtectedNotificationContentState);
}

uint64_t sub_1C26CAAF4()
{
  return sub_1C2633AE8(&qword_1EA3049D8, 255, (void (*)(uint64_t))type metadata accessor for UnprotectedNotificationContentState);
}

uint64_t sub_1C26CAB2C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C2633D24(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t DatabaseAccessibilityDispatchTarget.__allocating_init(target:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  DatabaseAccessibilityDispatchTarget.init(target:)(a1);
  return v2;
}

void *DatabaseAccessibilityDispatchTarget.init(target:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = sub_1C277BEA0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C277B660();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v10 = sub_1C277BE40();
  MEMORY[0x1F4188790](v10 - 8);
  sub_1C26482E4(a1, (uint64_t)(v2 + 2));
  uint64_t v11 = MEMORY[0x1E4FBC860];
  unint64_t v12 = sub_1C267CCCC(MEMORY[0x1E4FBC860]);
  unint64_t v13 = sub_1C267CCF8(v11);
  sub_1C26CAE44();
  uint64_t v14 = swift_allocObject();
  *(_DWORD *)(v14 + 32) = 0;
  *(void *)(v14 + 16) = v12;
  *(void *)(v14 + 24) = v13;
  v2[8] = v14;
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85180);
  v17[1] = v4;
  swift_getMetatypeMetadata();
  sub_1C277B860();
  sub_1C277BE30();
  sub_1C277B650();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FBCC58], v5);
  uint64_t v15 = sub_1C277BED0();
  __swift_destroy_boxed_opaque_existential_0(a1);
  v2[7] = v15;
  return v2;
}

void sub_1C26CAE44()
{
  if (!qword_1EBB84318)
  {
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_1C277C370();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB84318);
    }
  }
}

uint64_t sub_1C26CAEA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1C277B630();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1C277B660();
  uint64_t v10 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  unint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v13 = *(os_unfair_lock_s **)(v3 + 64);
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  uint64_t v14 = (uint64_t)&v13[4];
  uint64_t v15 = v13 + 8;
  os_unfair_lock_lock(v13 + 8);
  sub_1C26CBBD4(v14, aBlock);
  os_unfair_lock_unlock(v15);
  uint64_t v23 = aBlock[0];
  uint64_t v16 = *(void *)(aBlock[0] + 16);
  if (v16)
  {
    uint64_t v26 = *(void *)(v3 + 56);
    id v17 = (long long *)(v23 + 32);
    char v24 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v25 = v33;
    do
    {
      uint64_t v18 = swift_allocObject();
      long long v19 = *v17++;
      long long v28 = v19;
      *(_OWORD *)(v18 + 16) = v19;
      _OWORD v33[2] = sub_1C26CBBF0;
      v33[3] = v18;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      v33[0] = sub_1C26254FC;
      v33[1] = &block_descriptor_11;
      unint64_t v20 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      sub_1C277B650();
      uint64_t v31 = MEMORY[0x1E4FBC860];
      sub_1C26CBBF8((unint64_t *)&qword_1EBB84A60, MEMORY[0x1E4FBCB00]);
      sub_1C26CBC40(0, (unint64_t *)&unk_1EBB85470, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
      sub_1C26314F4();
      sub_1C277C120();
      MEMORY[0x1C875BDD0](0, v12, v9, v20);
      _Block_release(v20);
      swift_release();
      (*v24)(v9, v6);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v27);
      swift_release();
      --v16;
    }
    while (v16);
  }
  return swift_bridgeObjectRelease();
}

void sub_1C26CB21C(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  if (a2)
  {
    id v7 = a2;
    id v8 = a3;
    sub_1C26CBCA4((uint64_t)v7, v8);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (!*(void *)(v9 + 16)) {
    goto LABEL_7;
  }
  id v10 = a3;
  unint64_t v11 = sub_1C26344B4((uint64_t)v10);
  if ((v12 & 1) == 0)
  {

LABEL_7:
    uint64_t v13 = MEMORY[0x1E4FBC860];
    goto LABEL_8;
  }
  uint64_t v13 = *(void *)(*(void *)(v9 + 56) + 8 * v11);
  swift_bridgeObjectRetain();

  sub_1C268A194((uint64_t)v10);
  swift_bridgeObjectRelease();
LABEL_8:
  *a4 = v13;
}

uint64_t sub_1C26CB2D8(uint64_t a1)
{
  sub_1C26CBC40(0, &qword_1EA3049E8, (uint64_t (*)(uint64_t))sub_1C26CB364, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1C26CB364()
{
  unint64_t result = qword_1EA3049F0;
  if (!qword_1EA3049F0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA3049F0);
  }
  return result;
}

uint64_t sub_1C26CB3BC()
{
  uint64_t v1 = sub_1C277AF50();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 96) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, v6 + 16, v5);
}

uint64_t sub_1C26CB4C0()
{
  sub_1C277AF50();
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  return sub_1C277ACC0();
}

uint64_t sub_1C26CB5B4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v33 = a1;
  uint64_t v7 = sub_1C277B130();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_getObjectType();
    id v11 = a2;
    sub_1C277AC30();
    id v12 = a2;
    id v13 = a5;
    id v14 = a2;
    id v15 = v13;
    uint64_t v16 = sub_1C277B100();
    os_log_type_t v17 = sub_1C277BD20();
    int v18 = v17;
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v19 = swift_slowAlloc();
      int v31 = v18;
      uint64_t v20 = v19;
      v28[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 138412546;
      uint64_t v32 = v8;
      uint64_t v29 = v7;
      uint64_t v34 = (uint64_t)v15;
      v28[1] = &v35;
      id v21 = v15;
      os_log_t v30 = v16;
      id v22 = v21;
      uint64_t v7 = v29;
      uint64_t v8 = v32;
      sub_1C277C0D0();
      uint64_t v23 = v28[0];
      *(void *)v28[0] = v15;

      *(_WORD *)(v20 + 12) = 2112;
      id v24 = a2;
      uint64_t v25 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v34 = v25;
      sub_1C277C0D0();
      *(void *)(v23 + 8) = v25;

      os_log_t v26 = v30;
      _os_log_impl(&dword_1C2601000, v30, (os_log_type_t)v31, "Failed to retrieve database accessibility assertion for %@: %@", (uint8_t *)v20, 0x16u);
      sub_1C264E608();
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v23, -1, -1);
      MEMORY[0x1C875D230](v20, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return sub_1C26CAEA4(v33, (uint64_t)a5);
}

uint64_t sub_1C26CB898()
{
  swift_unknownObjectRelease();

  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C26CB8E0(uint64_t a1, void *a2)
{
  return sub_1C26CB5B4(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t DatabaseAccessibilityDispatchTarget.deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);

  swift_release();
  return v0;
}

uint64_t DatabaseAccessibilityDispatchTarget.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);

  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1C26CB964(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *v5;
  id v10 = (void *)sub_1C277B820();
  v13[4] = a4;
  v13[5] = a5;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  void v13[2] = sub_1C26601B0;
  v13[3] = &block_descriptor_10;
  id v11 = _Block_copy(v13);
  swift_retain();
  objc_msgSend(v9, sel_requestDatabaseAccessibilityAssertion_timeout_completion_, v10, v11, a1);
  _Block_release(v11);

  return swift_release();
}

id HealthPlatformContextProvider.Context.databaseAccessibilityProvider.getter@<X0>(void *a1@<X8>)
{
  id v4 = *(id *)(v1 + 16);
  a1[3] = sub_1C2644ED8(0, &qword_1EBB82ED0);
  a1[4] = &protocol witness table for HKHealthStore;
  *a1 = v4;

  return v4;
}

id HealthPlatformContextProvider.Context.profileIdentifier.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_profileIdentifier);

  return v1;
}

uint64_t sub_1C26CBAE0(uint64_t a1)
{
  uint64_t result = sub_1C26CBBF8(&qword_1EBB82708, (void (*)(uint64_t))type metadata accessor for HealthPlatformContextProvider.Context);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t dispatch thunk of DatabaseAccessibilityAssertionProvidingContext.profileIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of DatabaseAccessibilityAssertionProvidingContext.databaseAccessibilityProvider.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t type metadata accessor for DatabaseAccessibilityDispatchTarget()
{
  return self;
}

uint64_t method lookup function for DatabaseAccessibilityDispatchTarget(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DatabaseAccessibilityDispatchTarget);
}

uint64_t dispatch thunk of DatabaseAccessibilityDispatchTarget.__allocating_init(target:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of DatabaseAccessibilityAssertionProviding.requestDatabaseAccessibilityAssertion(_:timeout:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

ValueMetadata *type metadata accessor for DatabaseAccessibilityDispatchTarget.State()
{
  return &type metadata for DatabaseAccessibilityDispatchTarget.State;
}

void sub_1C26CBBD4(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1C26CB21C(a1, *(void **)(v2 + 16), *(void **)(v2 + 24), a2);
}

uint64_t sub_1C26CBBF0()
{
  return sub_1C2661BC0(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1C26CBBF8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C26CBC40(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C26CBCA4(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t result = sub_1C277C1C0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    *uint64_t v3 = sub_1C26CBD58(v7, result + 1);
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_1C268B920(a1, a2, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v10;

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C26CBD58(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1C267BF80();
    uint64_t v2 = sub_1C277C5E0();
    uint64_t v18 = v2;
    sub_1C277C470();
    uint64_t v3 = sub_1C277C520();
    if (v3)
    {
      uint64_t v4 = v3;
      sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85E90);
      do
      {
        swift_dynamicCast();
        sub_1C2644ED8(0, &qword_1EBB842D0);
        swift_dynamicCast();
        uint64_t v2 = v18;
        unint64_t v12 = *(void *)(v18 + 16);
        if (*(void *)(v18 + 24) <= v12)
        {
          sub_1C2675150(v12 + 1, 1);
          uint64_t v2 = v18;
        }
        uint64_t result = sub_1C277C020();
        uint64_t v6 = v2 + 64;
        uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v8 = result & ~v7;
        unint64_t v9 = v8 >> 6;
        if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v13 = 0;
          unint64_t v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v15 = v9 == v14;
            if (v9 == v14) {
              unint64_t v9 = 0;
            }
            v13 |= v15;
            uint64_t v16 = *(void *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          unint64_t v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v11 = 8 * v10;
        *(void *)(*(void *)(v2 + 48) + v11) = v17;
        *(void *)(*(void *)(v2 + 56) + v11) = v4;
        ++*(void *)(v2 + 16);
        uint64_t v4 = sub_1C277C520();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC868];
  }
  return v2;
}

uint64_t sub_1C26CBFA8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t static NSPredicate.feedItemStoragePredicate(for:)()
{
  uint64_t v0 = sub_1C277ADF0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85100);
  sub_1C26322C0();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C277E480;
  swift_getObjectType();
  sub_1C277B090();
  uint64_t v5 = sub_1C277ADE0();
  uint64_t v7 = v6;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 64) = sub_1C263226C();
  *(void *)(v4 + 32) = v5;
  *(void *)(v4 + 40) = v7;
  return sub_1C277BCC0();
}

uint64_t static FeedItemStorageErrors.== infix(_:_:)()
{
  return 1;
}

uint64_t FeedItemStorageErrors.hash(into:)()
{
  return sub_1C277C8D0();
}

uint64_t FeedItemStorageErrors.hashValue.getter()
{
  return sub_1C277C910();
}

uint64_t FeedItemStorage.updateOrCreate(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x1F4188298](sub_1C26CC1FC, 0, 0);
}

uint64_t sub_1C26CC1FC()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 48) = v3;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 24);
  *(void *)(v3 + 32) = v1;
  *(void *)(v3 + 40) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1C26CC2FC;
  return MEMORY[0x1F4188160]();
}

uint64_t sub_1C26CC2FC()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C26CC430;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1C26CC418;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C26CC418()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C26CC430()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C26CC494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1C26D3C28();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v14 + v13, (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  (*(void (**)(uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a5 + 8))(a3, sub_1C26D3CBC, v14, a4, a5);
  return swift_release();
}

uint64_t FeedItemStorage.replaceExisting(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x1F4188298](sub_1C26CC624, 0, 0);
}

uint64_t sub_1C26CC624()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 48) = v3;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 24);
  *(void *)(v3 + 32) = v1;
  *(void *)(v3 + 40) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1C26CC724;
  return MEMORY[0x1F4188160]();
}

uint64_t sub_1C26CC724()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C26D3DEC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1C26D3E28;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C26CC840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1C26D3C28();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v14 + v13, (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  (*(void (**)(uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a5 + 16))(a3, sub_1C26D3CBC, v14, a4, a5);
  return swift_release();
}

uint64_t FeedItemStorage.delete(feedItemIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x1F4188298](sub_1C26CC9D0, 0, 0);
}

uint64_t sub_1C26CC9D0()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 48) = v3;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 24);
  *(void *)(v3 + 32) = v1;
  *(void *)(v3 + 40) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1C26CC724;
  return MEMORY[0x1F4188160]();
}

uint64_t sub_1C26CCAD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1C26D3C28();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v14 + v13, (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  (*(void (**)(uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a5 + 24))(a3, sub_1C26D3CBC, v14, a4, a5);
  return swift_release();
}

uint64_t sub_1C26CCC3C(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    sub_1C26D3C28();
    return sub_1C277BB50();
  }
  else
  {
    sub_1C26D3C28();
    return sub_1C277BB60();
  }
}

uint64_t FeedItemStorage.fetch(matching:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v7 + 56) = a6;
  *(void *)(v7 + 64) = v6;
  *(unsigned char *)(v7 + 96) = a4;
  *(void *)(v7 + 40) = a3;
  *(void *)(v7 + 48) = a5;
  *(void *)(v7 + 24) = a1;
  *(void *)(v7 + 32) = a2;
  return MEMORY[0x1F4188298](sub_1C26CCCC0, 0, 0);
}

uint64_t sub_1C26CCCC0()
{
  uint64_t v1 = *(void *)(v0 + 64);
  char v2 = *(unsigned char *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 24);
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 72) = v6;
  *(_OWORD *)(v6 + 16) = *(_OWORD *)(v0 + 48);
  *(void *)(v6 + 32) = v1;
  *(void *)(v6 + 40) = v5;
  *(void *)(v6 + 48) = v4;
  *(void *)(v6 + 56) = v3;
  *(unsigned char *)(v6 + 64) = v2;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v7;
  sub_1C26D2DC8(0, &qword_1EBB83740, (uint64_t (*)(uint64_t))type metadata accessor for PluginFeedItem, MEMORY[0x1E4FBB320]);
  *uint64_t v7 = v0;
  v7[1] = sub_1C26CCE1C;
  return MEMORY[0x1F4188160](v0 + 16, 0, 0, 0xD000000000000010, 0x80000001C278C710, sub_1C26D2DB4, v6, v8);
}

uint64_t sub_1C26CCE1C()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    char v2 = sub_1C26CCF54;
  }
  else
  {
    swift_task_dealloc();
    char v2 = sub_1C26CCF38;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C26CCF38()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_1C26CCF54()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C26CCFB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, uint64_t a8)
{
  uint64_t v22 = a7;
  unsigned int v21 = a6;
  v20[1] = a2;
  sub_1C26D3AE0();
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x1F4188790](v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v14);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v18 + v17, (char *)v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t, void, uint64_t (*)(void *, char), uint64_t, uint64_t, uint64_t))(a8 + 32))(a3, a4, a5, v21, sub_1C26D3BA8, v18, v22, a8);
  return swift_release();
}

uint64_t sub_1C26CD144(id a1, char a2)
{
  if (a2)
  {
    id v3 = a1;
    sub_1C26D3AE0();
    return sub_1C277BB50();
  }
  else
  {
    sub_1C26D3AE0();
    swift_bridgeObjectRetain();
    return sub_1C277BB60();
  }
}

void PluginFeedItemStorage.updateOrCreate(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v4;
  sub_1C26D2E2C((uint64_t)v4, (uint64_t)v15);
  uint64_t v9 = swift_allocObject();
  long long v10 = v15[3];
  *(_OWORD *)(v9 + 48) = v15[2];
  *(_OWORD *)(v9 + 64) = v10;
  *(_OWORD *)(v9 + 80) = v15[4];
  uint64_t v11 = v16;
  long long v12 = v15[1];
  *(_OWORD *)(v9 + 16) = v15[0];
  *(_OWORD *)(v9 + 32) = v12;
  *(void *)(v9 + 96) = v11;
  *(void *)(v9 + 104) = a1;
  *(void *)(v9 + 112) = a2;
  *(void *)(v9 + 120) = a3;
  aBlock[4] = sub_1C26D2E68;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1C26254FC;
  aBlock[3] = &block_descriptor_11;
  uint64_t v13 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_performBlock_, v13);
  _Block_release(v13);
}

void sub_1C26CD2F4(void **a1, uint64_t a2, void (*a3)(void *))
{
  v10[2] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v5 = sub_1C26CD420(a2);
  uint64_t v6 = *a1;
  v10[0] = 0;
  if (objc_msgSend(v6, sel_save_, v10))
  {
    ((void (*)(id))v5)(v10[0]);
    a3(0);
    swift_release();
  }
  else
  {
    id v7 = v10[0];
    uint64_t v8 = (void *)sub_1C277A620();

    swift_willThrow();
    swift_release();
    id v9 = v8;
    a3(v8);
  }
}

uint64_t (*sub_1C26CD420(uint64_t a1))()
{
  uint64_t v2 = v1;
  uint64_t v33 = type metadata accessor for PluginFeedItem();
  uint64_t v4 = MEMORY[0x1F4188790](v33);
  uint64_t v31 = (uint64_t)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  id v9 = (void *)((char *)v27 - v8);
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    uint64_t v11 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v12 = a1 + ((v11 + 32) & ~v11);
    uint64_t v29 = v11 | 7;
    uint64_t v30 = (v11 + 16) & ~v11;
    unint64_t v28 = (v7 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
    v27[1] = a1;
    v27[2] = v28 + 16;
    uint64_t v32 = *(void *)(v6 + 72);
    swift_bridgeObjectRetain();
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      sub_1C26D3658(v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      PluginFeedItemStorage.updateOrCreate(_:)(v9);
      if (v2)
      {
        sub_1C26D2FD8((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
        swift_bridgeObjectRelease();
        return (uint64_t (*)())swift_bridgeObjectRelease();
      }
      uint64_t v15 = (uint64_t *)((char *)v9 + *(int *)(v33 + 108));
      uint64_t v16 = *v15;
      if (*v15)
      {
        uint64_t v34 = 0;
        uint64_t v17 = v15[1];
        uint64_t v18 = v9;
        uint64_t v19 = v31;
        sub_1C26D3658((uint64_t)v9, v31, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
        uint64_t v20 = swift_allocObject();
        sub_1C2644970(v19, v20 + v30, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
        unsigned int v21 = (uint64_t *)(v20 + v28);
        *unsigned int v21 = v16;
        v21[1] = v17;
        uint64_t v22 = swift_allocObject();
        *(void *)(v22 + 16) = sub_1C26D3A18;
        *(void *)(v22 + 24) = v20;
        sub_1C26121B4(v16);
        sub_1C26121B4(v16);
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v13 = sub_1C2690984(0, v13[2] + 1, 1, v13);
        }
        unint64_t v24 = v13[2];
        unint64_t v23 = v13[3];
        uint64_t v25 = v13;
        if (v24 >= v23 >> 1) {
          uint64_t v25 = sub_1C2690984((void *)(v23 > 1), v24 + 1, 1, v13);
        }
        v25[2] = v24 + 1;
        uint64_t v13 = v25;
        uint64_t v14 = &v25[2 * v24];
        v14[4] = sub_1C261AECC;
        v14[5] = v22;
        swift_release();
        sub_1C261AE94(v16);
        uint64_t v2 = v34;
        id v9 = v18;
      }
      sub_1C26D2FD8((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      v12 += v32;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
  }
  *(void *)(swift_allocObject() + 16) = v13;
  return sub_1C26D37C8;
}

void PluginFeedItemStorage.updateOrCreate(_:)(uint64_t *a1)
{
  id v3 = v1;
  uint64_t v26 = type metadata accessor for PluginFeedItem();
  MEMORY[0x1F4188790](v26);
  uint64_t v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C277A840();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C26CFBA8(a1);
  FeedItem.update(with:)((uint64_t)a1);
  if (!v2)
  {
    v25[2] = v6;
    sub_1C277A830();
    uint64_t v12 = (void *)sub_1C277A7E0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    objc_msgSend(v11, sel_setDateSubmitted_, v12);

    uint64_t v13 = (uint64_t *)((char *)a1 + *(int *)(v26 + 104));
    uint64_t v14 = v13[1];
    if (v14)
    {
      uint64_t v26 = *v13;
      uint64_t v15 = v3;
      uint64_t v17 = v3[4];
      uint64_t v16 = v3[5];
      __swift_project_boxed_opaque_existential_1(v3 + 1, v17);
      uint64_t v19 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 24))(v17, v16);
      uint64_t v20 = (void *)sub_1C277A3C0();
      uint64_t v21 = sub_1C26D140C(v26, v14, v20);
      char v23 = v22;
      swift_bridgeObjectRelease();
      if (v23)
      {
        objc_msgSend(v11, sel_setSortOrder_, 0);
      }
      else
      {
        if (sub_1C277A3D0()) {
          uint64_t v24 = v21;
        }
        else {
          uint64_t v24 = 0;
        }
        objc_msgSend(v11, sel_setSortOrder_, v24);
      }
      uint64_t v18 = (void *)sub_1C277B820();
      objc_msgSend(v11, sel_setFavoriteStatusRawValue_, v18);
    }
    else
    {
      uint64_t v18 = (void *)sub_1C277B820();
      objc_msgSend(v11, sel_setFavoriteStatusRawValue_, v18);
      uint64_t v15 = v3;
    }

    if ((objc_msgSend((id)v15[8], sel_evaluateWithObject_, v11) & 1) == 0)
    {
      sub_1C26D2E78();
      swift_allocError();
      swift_willThrow();
    }
  }
}

uint64_t sub_1C26CDDC4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = type metadata accessor for PluginFeedItem();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1EBB85FE8 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1C277B130();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EBB85FD0);
  sub_1C26D3658(a1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  uint64_t v8 = sub_1C277B100();
  os_log_type_t v9 = sub_1C277BD40();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v17 = a2;
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v19 = v11;
    *(_DWORD *)uint64_t v10 = 136446210;
    uint64_t v16 = a1;
    uint64_t v12 = *v6;
    unint64_t v13 = v6[1];
    swift_bridgeObjectRetain();
    uint64_t v14 = v12;
    a2 = v17;
    uint64_t v18 = sub_1C263FDFC(v14, v13, &v19);
    sub_1C277C0D0();
    a1 = v16;
    swift_bridgeObjectRelease();
    sub_1C26D2FD8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    _os_log_impl(&dword_1C2601000, v8, v9, "Running afterCommit block for %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v11, -1, -1);
    MEMORY[0x1C875D230](v10, -1, -1);
  }
  else
  {
    sub_1C26D2FD8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  }

  return a2(a1);
}

uint64_t sub_1C26CE020(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (v1)
  {
    uint64_t v2 = swift_bridgeObjectRetain() + 40;
    do
    {
      id v3 = *(void (**)(uint64_t))(v2 - 8);
      uint64_t v4 = swift_retain();
      v3(v4);
      swift_release();
      v2 += 16;
      --v1;
    }
    while (v1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void PluginFeedItemStorage.replaceExisting(with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1C26CE0D8(uint64_t a1, void **a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  uint64_t v8 = type metadata accessor for PluginFeedItem();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (uint64_t *)((char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = MEMORY[0x1E4FBC860];
  if (v12)
  {
    uint64_t v30 = a2;
    uint64_t v31 = a4;
    uint64_t v32 = a3;
    *(void *)&long long v33 = MEMORY[0x1E4FBC860];
    sub_1C264872C(0, v12, 0);
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v15 = *(void *)(v9 + 72);
    uint64_t v13 = v33;
    do
    {
      sub_1C26D3658(v14, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      uint64_t v16 = *v11;
      uint64_t v17 = v11[1];
      swift_bridgeObjectRetain();
      sub_1C26D2FD8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C264872C(0, *(void *)(v13 + 16) + 1, 1);
        uint64_t v13 = v33;
      }
      unint64_t v19 = *(void *)(v13 + 16);
      unint64_t v18 = *(void *)(v13 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1C264872C(v18 > 1, v19 + 1, 1);
        uint64_t v13 = v33;
      }
      *(void *)(v13 + 16) = v19 + 1;
      uint64_t v20 = v13 + 16 * v19;
      *(void *)(v20 + 32) = v16;
      *(void *)(v20 + 40) = v17;
      v14 += v15;
      --v12;
    }
    while (v12);
    a3 = v32;
    a2 = v30;
  }
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85100);
  sub_1C26322C0();
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1C277E480;
  sub_1C2632318(0, (unint64_t *)&qword_1EBB85E70, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  *(void *)(v21 + 56) = v22;
  *(void *)(v21 + 64) = sub_1C26D3728(&qword_1EBB82E48);
  *(void *)(v21 + 32) = v13;
  char v23 = (void *)sub_1C277BCC0();
  PluginFeedItemStorage.deleteFeedItems(matching:)(v23, &v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v24 = sub_1C26CD420(a1);
  uint64_t v25 = *a2;
  *(void *)&long long v33 = 0;
  if (objc_msgSend(v25, sel_save_, &v33))
  {
    ((void (*)(id))v24)((id)v33);
    a3(0);

    swift_release();
  }
  else
  {
    id v26 = (id)v33;
    uint64_t v27 = (void *)sub_1C277A620();

    swift_willThrow();
    swift_release();
    id v28 = v27;
    a3(v27);
  }
}

double PluginFeedItemStorage.deleteFeedItems(matching:)@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  id v3 = v2;
  uint64_t v61 = a2;
  sub_1C26D2DC8(0, qword_1EBB84FE0, (uint64_t (*)(uint64_t))type metadata accessor for UserProfile, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v56 - v6;
  uint64_t v8 = _s14HealthPlatform8FeedItemC12fetchRequestSo07NSFetchF0CyACGyFZ_0();
  sub_1C2632318(0, (unint64_t *)&qword_1EBB85220, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C27814A0;
  Class isa = v2[8].isa;
  *(void *)(v9 + 32) = isa;
  *(void *)(v9 + 40) = a1;
  v65[0] = (id)v9;
  sub_1C277BA60();
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85100);
  uint64_t v11 = isa;
  id v12 = a1;
  uint64_t v13 = (void *)sub_1C277BA30();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v13);

  [v8 setPredicate:v14];
  uint64_t v15 = MEMORY[0x1E4FBC860];
  uint64_t v16 = sub_1C2649760(MEMORY[0x1E4FBC860]);
  uint64_t v17 = sub_1C265C9E4(v15);
  *(void *)&long long v67 = v16;
  *((void *)&v67 + 1) = v17;
  os_log_t v62 = v3;
  type metadata accessor for FeedItem();
  unint64_t v60 = v8;
  unint64_t v18 = sub_1C277C000();
  unint64_t v19 = (ValueMetadata **)(v18 >> 62);
  if (v18 >> 62) {
    goto LABEL_15;
  }
  uint64_t v20 = *(ValueMetadata ***)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
  unint64_t v21 = v18;
  swift_bridgeObjectRetain();
  for (; v20; uint64_t v20 = (ValueMetadata **)sub_1C277C5A0())
  {
    uint64_t v59 = (uint8_t *)v19;
    uint64_t v22 = 4;
    while (1)
    {
      unint64_t v18 = (v21 & 0xC000000000000001) != 0
          ? MEMORY[0x1C875C230](v22 - 4, v21)
          : (unint64_t)*(id *)(v21 + 8 * v22);
      uint64_t v24 = (void *)v18;
      unint64_t v19 = (ValueMetadata **)(v22 - 3);
      if (__OFADD__(v22 - 4, 1)) {
        break;
      }
      FeedItem.contentKind.getter((char *)v64);
      sub_1C2649828(v65, LOBYTE(v64[0]));
      uint64_t v25 = FeedItem.associatedProfiles.getter();
      if (*(void *)(v25 + 16) >= 2uLL) {
        goto LABEL_36;
      }
      sub_1C2657AB8(v25, (uint64_t)v7);
      uint64_t v26 = type metadata accessor for UserProfile();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v7, 1, v26) == 1)
      {
        sub_1C26D2F4C((uint64_t)v7);
        swift_bridgeObjectRelease();
        id v23 = 0;
      }
      else
      {
        id v23 = *(id *)&v7[*(int *)(v26 + 20)];
        sub_1C26D2FD8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for UserProfile);
        swift_bridgeObjectRelease();
      }
      sub_1C26931A0(v65, v23);

      [(objc_class *)v62->isa deleteObject:v24];
      ++v22;
      if (v19 == v20)
      {
        swift_bridgeObjectRelease();
        unint64_t v19 = (ValueMetadata **)v59;
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_15:
    unint64_t v21 = v18;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
LABEL_17:
  if (qword_1EBB85FE8 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_1C277B130();
  __swift_project_value_buffer(v27, (uint64_t)qword_1EBB85FD0);
  sub_1C26D2E2C((uint64_t)v62, (uint64_t)v65);
  swift_bridgeObjectRetain();
  id v28 = sub_1C277B100();
  int v29 = sub_1C277BD40();
  os_log_t v62 = v28;
  if (os_log_type_enabled(v28, (os_log_type_t)v29))
  {
    int v58 = v29;
    uint64_t v30 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    uint64_t v57 = v31;
    *(_DWORD *)uint64_t v30 = 136446722;
    unint64_t v63 = &type metadata for PluginFeedItemStorage;
    v64[0] = v31;
    sub_1C26D2F10();
    uint64_t v20 = &v63;
    uint64_t v32 = sub_1C277B860();
    unint64_t v63 = (ValueMetadata *)sub_1C263FDFC(v32, v33, v64);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 12) = 2082;
    id v34 = v65[6];
    unint64_t v35 = (unint64_t)v66;
    swift_bridgeObjectRetain();
    unint64_t v63 = (ValueMetadata *)sub_1C263FDFC((uint64_t)v34, v35, v64);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    sub_1C26D2ECC(v65);
    uint64_t v59 = (uint8_t *)v30;
    *(_WORD *)(v30 + 22) = 2080;
    if (v19)
    {
      swift_bridgeObjectRetain();
      uint64_t v36 = sub_1C277C5A0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v36 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    unint64_t v38 = (ValueMetadata *)MEMORY[0x1E4FBC860];
    if (v36)
    {
      unint64_t v63 = (ValueMetadata *)MEMORY[0x1E4FBC860];
      sub_1C264872C(0, v36 & ~(v36 >> 63), 0);
      if (v36 < 0)
      {
        __break(1u);
        while (1)
        {
LABEL_36:
          sub_1C277C560();
          __break(1u);

          sub_1C26D2E2C((uint64_t)v62, (uint64_t)v65);
          v64[0] = 0;
          v64[1] = 0xE000000000000000;
          sub_1C277C2D0();
          sub_1C277B8D0();
          unint64_t v63 = &type metadata for PluginFeedItemStorage;
          sub_1C26D2F10();
          sub_1C277B860();
          sub_1C277B8D0();
          swift_bridgeObjectRelease();
          sub_1C277B8D0();
          uint64_t v20 = v66;
          swift_bridgeObjectRetain();
          sub_1C277B8D0();
          swift_bridgeObjectRelease();
          sub_1C277B8D0();
        }
      }
      uint64_t v39 = 0;
      unint64_t v38 = v63;
      do
      {
        if ((v21 & 0xC000000000000001) != 0) {
          id v40 = (id)MEMORY[0x1C875C230](v39, v21);
        }
        else {
          id v40 = *(id *)(v21 + 8 * v39 + 32);
        }
        unint64_t v41 = v40;
        id v42 = objc_msgSend(v40, sel_uniqueIdentifier);
        uint64_t v43 = sub_1C277B850();
        uint64_t v45 = v44;

        unint64_t v63 = v38;
        unint64_t Kind = v38[1].Kind;
        unint64_t Description = (unint64_t)v38[1].Description;
        if (Kind >= Description >> 1)
        {
          sub_1C264872C(Description > 1, Kind + 1, 1);
          unint64_t v38 = v63;
        }
        ++v39;
        v38[1].unint64_t Kind = Kind + 1;
        uint64_t v48 = &v38[Kind];
        v48[2].unint64_t Kind = v43;
        v48[2].unint64_t Description = v45;
      }
      while (v36 != v39);
    }
    unint64_t v49 = v59;
    unint64_t v63 = v38;
    sub_1C2632318(0, (unint64_t *)&qword_1EBB85E70, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1C26D3728((unint64_t *)&qword_1EBB85E78);
    uint64_t v50 = sub_1C277B7D0();
    unint64_t v52 = v51;
    swift_bridgeObjectRelease();
    unint64_t v63 = (ValueMetadata *)sub_1C263FDFC(v50, v52, v64);
    sub_1C277C0D0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v53 = v62;
    _os_log_impl(&dword_1C2601000, v62, (os_log_type_t)v58, "[%{public}s][%{public}s] Successfully deleted all feedItems: %s", v49, 0x20u);
    uint64_t v54 = v57;
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v54, -1, -1);
    MEMORY[0x1C875D230](v49, -1, -1);

    os_log_t v37 = v60;
  }
  else
  {
    sub_1C26D2ECC(v65);

    swift_bridgeObjectRelease_n();
    os_log_t v37 = v62;
  }

  double result = *(double *)&v67;
  _OWORD *v61 = v67;
  return result;
}

void PluginFeedItemStorage.delete(feedItemIdentifiers:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1C26CED6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = v6;
  uint64_t v13 = *v9;
  sub_1C26D2E2C((uint64_t)v9, (uint64_t)v20);
  uint64_t v14 = swift_allocObject();
  long long v15 = v20[3];
  *(_OWORD *)(v14 + 56) = v20[2];
  *(_OWORD *)(v14 + 72) = v15;
  *(_OWORD *)(v14 + 88) = v20[4];
  long long v16 = v20[1];
  *(_OWORD *)(v14 + 24) = v20[0];
  *(void *)(v14 + 16) = a1;
  uint64_t v17 = v21;
  *(_OWORD *)(v14 + 40) = v16;
  *(void *)(v14 + 104) = v17;
  *(void *)(v14 + 112) = a2;
  *(void *)(v14 + 120) = a3;
  aBlock[4] = a5;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1C26254FC;
  aBlock[3] = a6;
  unint64_t v18 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_performBlock_, v18);
  _Block_release(v18);
}

void sub_1C26CEEA0(uint64_t a1, void **a2, void (*a3)(void *))
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85100);
  sub_1C26322C0();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C277E480;
  sub_1C2632318(0, (unint64_t *)&qword_1EBB85E70, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  *(void *)(v6 + 56) = v7;
  *(void *)(v6 + 64) = sub_1C26D3728(&qword_1EBB82E48);
  *(void *)(v6 + 32) = a1;
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)sub_1C277BCC0();
  PluginFeedItemStorage.deleteFeedItems(matching:)(v8, &v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = *a2;
  *(void *)&long long v14 = 0;
  if (objc_msgSend(v9, sel_save_, &v14))
  {
    id v10 = (id)v14;
    a3(0);
  }
  else
  {
    id v11 = (id)v14;
    id v12 = (void *)sub_1C277A620();

    swift_willThrow();
    id v13 = v12;
    a3(v12);
  }
}

void PluginFeedItemStorage.fetch(matching:completion:)(void *a1, void *a2, void *a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  long long v14 = *v7;
  sub_1C26D2E2C((uint64_t)v7, (uint64_t)v21);
  uint64_t v15 = swift_allocObject();
  long long v16 = v21[3];
  *(_OWORD *)(v15 + 48) = v21[2];
  *(_OWORD *)(v15 + 64) = v16;
  *(_OWORD *)(v15 + 80) = v21[4];
  uint64_t v17 = v22;
  long long v18 = v21[1];
  *(_OWORD *)(v15 + 16) = v21[0];
  *(_OWORD *)(v15 + 32) = v18;
  *(void *)(v15 + 96) = v17;
  *(void *)(v15 + 104) = a1;
  *(void *)(v15 + 112) = a2;
  *(void *)(v15 + 120) = a3;
  *(unsigned char *)(v15 + 128) = a4;
  *(void *)(v15 + 136) = a5;
  *(void *)(v15 + 144) = a6;
  aBlock[4] = sub_1C26D3050;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1C26254FC;
  aBlock[3] = &block_descriptor_26;
  unint64_t v19 = _Block_copy(aBlock);
  sub_1C26D3054(a1, a2, a3, a4);
  swift_retain();
  swift_release();
  objc_msgSend(v14, sel_performBlock_, v19);
  _Block_release(v19);
}

uint64_t sub_1C26CF1D4(uint64_t a1, void *a2, void *a3, void *a4, char a5, void (*a6)(uint64_t, void), uint64_t a7)
{
  uint64_t v13 = type metadata accessor for PluginFeedItem();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13 - 8);
  long long v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = _s14HealthPlatform8FeedItemC12fetchRequestSo07NSFetchF0CyACGyFZ_0();
  id v18 = sub_1C26CF4C4(a2, a3, a4, a5);
  objc_msgSend(v17, sel_setPredicate_, v18);

  type metadata accessor for FeedItem();
  unint64_t v19 = sub_1C277C000();
  unint64_t v20 = v19;
  if (!(v19 >> 62))
  {
    uint64_t v21 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v21) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    a6(MEMORY[0x1E4FBC860], 0);
LABEL_14:

    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1C277C5A0();
  swift_bridgeObjectRelease();
  if (!v21) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v32 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1C2659FC8(0, v21 & ~(v21 >> 63), 0);
  if ((v21 & 0x8000000000000000) == 0)
  {
    id v29 = v17;
    uint64_t v30 = a7;
    uint64_t v31 = a6;
    uint64_t v23 = 0;
    uint64_t v24 = v32;
    do
    {
      if ((v20 & 0xC000000000000001) != 0) {
        id v25 = (id)MEMORY[0x1C875C230](v23, v20);
      }
      else {
        id v25 = *(id *)(v20 + 8 * v23 + 32);
      }
      PluginFeedItem.init(feedItem:)(v25, (uint64_t)v16);
      uint64_t v32 = v24;
      unint64_t v27 = *(void *)(v24 + 16);
      unint64_t v26 = *(void *)(v24 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_1C2659FC8(v26 > 1, v27 + 1, 1);
        uint64_t v24 = v32;
      }
      ++v23;
      *(void *)(v24 + 16) = v27 + 1;
      sub_1C2644970((uint64_t)v16, v24+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v27, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    }
    while (v21 != v23);
    swift_bridgeObjectRelease();
    id v17 = v29;
    v31(v24, 0);
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

id sub_1C26CF4C4(void *a1, void *a2, void *a3, char a4)
{
  if (a4 != -1)
  {
    sub_1C2632318(0, (unint64_t *)&qword_1EBB85220, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1C277E590;
    id v10 = *(void **)(v4 + 64);
    *(void *)(v9 + 32) = v10;
    uint64_t v35 = v9;
    sub_1C277BA60();
    if (a4)
    {
      if (a4 != 1)
      {
        if (a1 == (void *)1)
        {
          id v15 = v10;
        }
        else
        {
          sub_1C2632318(0, &qword_1EA304290, (uint64_t)&type metadata for SourceProfile, MEMORY[0x1E4FBBE00]);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_1C277E480;
          *(void *)(inited + 32) = a1;
          sub_1C26D3054(a1, a2, a3, 2);
          id v31 = v10;
          sub_1C26D3054(a1, a2, a3, 2);
          _s14HealthPlatform8FeedItemC9predicate11matchingAnySo11NSPredicateCSayAA13SourceProfileOG_tFZ_0(inited);
          swift_setDeallocating();
          uint64_t v32 = swift_arrayDestroy();
          MEMORY[0x1C875B930](v32);
          if (*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C277BA90();
          }
          sub_1C277BAE0();
          sub_1C277BA60();
        }
        goto LABEL_29;
      }
      if (a3 == (void *)1)
      {
        id v11 = v10;
        sub_1C26D3054(a1, a2, (void *)1, 1);
        swift_bridgeObjectRetain();
      }
      else
      {
        sub_1C2632318(0, &qword_1EA304290, (uint64_t)&type metadata for SourceProfile, MEMORY[0x1E4FBBE00]);
        uint64_t v16 = swift_initStackObject();
        *(_OWORD *)(v16 + 16) = xmmword_1C277E480;
        *(void *)(v16 + 32) = a3;
        sub_1C264676C(a3);
        id v17 = v10;
        sub_1C26D3054(a1, a2, a3, 1);
        swift_bridgeObjectRetain();
        sub_1C264676C(a3);
        _s14HealthPlatform8FeedItemC9predicate11matchingAnySo11NSPredicateCSayAA13SourceProfileOG_tFZ_0(v16);
        swift_setDeallocating();
        uint64_t v18 = swift_arrayDestroy();
        MEMORY[0x1C875B930](v18);
        if (*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C277BA90();
        }
        sub_1C277BAE0();
        sub_1C277BA60();
      }
      sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85100);
      sub_1C26322C0();
      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_1C277E470;
      uint64_t v20 = MEMORY[0x1E4FBB1A0];
      *(void *)(v19 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v21 = sub_1C263226C();
      *(void *)(v19 + 32) = 0xD000000000000010;
      *(void *)(v19 + 40) = 0x80000001C2789760;
      *(void *)(v19 + 96) = v20;
      *(void *)(v19 + 104) = v21;
      *(void *)(v19 + 64) = v21;
      *(void *)(v19 + 72) = a1;
      *(void *)(v19 + 80) = a2;
      sub_1C277BCC0();
      MEMORY[0x1C875B930]();
      if (*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C277BA90();
      }
      sub_1C277BAE0();
      sub_1C277BA60();
      uint64_t v22 = a3;
    }
    else
    {
      if (a2 == (void *)1)
      {
        id v14 = v10;
        sub_1C26D3054(a1, (void *)1, a3, 0);
        swift_bridgeObjectRetain();
      }
      else
      {
        sub_1C2632318(0, &qword_1EA304290, (uint64_t)&type metadata for SourceProfile, MEMORY[0x1E4FBBE00]);
        uint64_t v23 = swift_initStackObject();
        *(_OWORD *)(v23 + 16) = xmmword_1C277E480;
        *(void *)(v23 + 32) = a2;
        sub_1C264676C(a2);
        id v24 = v10;
        sub_1C26D3054(a1, a2, a3, 0);
        swift_bridgeObjectRetain();
        sub_1C264676C(a2);
        _s14HealthPlatform8FeedItemC9predicate11matchingAnySo11NSPredicateCSayAA13SourceProfileOG_tFZ_0(v23);
        swift_setDeallocating();
        uint64_t v25 = swift_arrayDestroy();
        MEMORY[0x1C875B930](v25);
        if (*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C277BA90();
        }
        sub_1C277BAE0();
        sub_1C277BA60();
      }
      sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85100);
      sub_1C26322C0();
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_1C277E470;
      uint64_t v27 = MEMORY[0x1E4FBB1A0];
      *(void *)(v26 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v26 + 64) = sub_1C263226C();
      *(void *)(v26 + 32) = 0xD000000000000010;
      *(void *)(v26 + 40) = 0x80000001C2789760;
      uint64_t v28 = sub_1C261C11C((uint64_t)a1);
      swift_bridgeObjectRelease();
      sub_1C2632318(0, (unint64_t *)&qword_1EBB85E70, v27, MEMORY[0x1E4FBB320]);
      *(void *)(v26 + 96) = v29;
      *(void *)(v26 + 104) = sub_1C26D3728(&qword_1EBB82E48);
      *(void *)(v26 + 72) = v28;
      sub_1C277BCC0();
      MEMORY[0x1C875B930]();
      if (*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C277BA90();
      }
      sub_1C277BAE0();
      sub_1C277BA60();
      uint64_t v22 = a2;
    }
    sub_1C264577C(v22);
LABEL_29:
    sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85100);
    unint64_t v33 = (void *)sub_1C277BA30();
    swift_bridgeObjectRelease();
    id v34 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v33);

    sub_1C26D3714(a1, a2, a3, a4);
    return v34;
  }
  id v12 = *(void **)(v4 + 64);

  return v12;
}

void *sub_1C26CFBA8(uint64_t *a1)
{
  id v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C26D2DC8(0, &qword_1EBB85998, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  os_log_t v111 = (os_log_t)((char *)&v108 - v5);
  uint64_t v6 = sub_1C277A840();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v108 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C26D2DC8(0, (unint64_t *)&unk_1EBB85F50, (uint64_t (*)(uint64_t))type metadata accessor for RelevantDateInterval, v3);
  uint64_t v112 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v116 = (uint64_t)&v108 - v10;
  uint64_t v117 = (int *)type metadata accessor for PluginFeedItem();
  uint64_t v11 = MEMORY[0x1F4188790](v117);
  uint64_t v13 = (char *)&v108 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v108 - v15;
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v19 = (char *)&v108 - v18;
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v22 = (uint64_t *)((char *)&v108 - v21);
  uint64_t v23 = MEMORY[0x1F4188790](v20);
  uint64_t v114 = (uint64_t *)((char *)&v108 - v24);
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  unint64_t v113 = (char *)&v108 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v29 = (char *)&v108 - v28;
  MEMORY[0x1F4188790](v27);
  id v31 = (uint64_t *)((char *)&v108 - v30);
  uint64_t v32 = *a1;
  unint64_t v33 = a1[1];
  uint64_t v34 = (uint64_t)a1;
  uint64_t v118 = v1;
  uint64_t v115 = sub_1C26D14F4(v32, v33);
  if (v115)
  {
    if (qword_1EBB85FE8 != -1) {
      swift_once();
    }
    uint64_t v35 = sub_1C277B130();
    __swift_project_value_buffer(v35, (uint64_t)qword_1EBB85FD0);
    sub_1C26D2E2C((uint64_t)v118, (uint64_t)v122);
    uint64_t v36 = (uint64_t)a1;
    os_log_t v37 = v31;
    sub_1C26D3658(v36, (uint64_t)v31, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    uint64_t v38 = (uint64_t)v29;
    sub_1C26D3658(v34, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    uint64_t v39 = v113;
    sub_1C26D3658(v34, (uint64_t)v113, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    uint64_t v40 = (uint64_t)v114;
    sub_1C26D3658(v34, (uint64_t)v114, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    unint64_t v41 = sub_1C277B100();
    os_log_type_t v42 = sub_1C277BD40();
    int v43 = v42;
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v44 = swift_slowAlloc();
      os_log_t v111 = v41;
      uint64_t v45 = v44;
      uint64_t v118 = (void *)swift_slowAlloc();
      os_log_t v121 = v118;
      *(_DWORD *)uint64_t v45 = 136447490;
      uint64_t v119 = &type metadata for PluginFeedItemStorage;
      sub_1C26D2F10();
      uint64_t v46 = sub_1C277B860();
      uint64_t v119 = (ValueMetadata *)sub_1C263FDFC(v46, v47, (uint64_t *)&v121);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v45 + 12) = 2082;
      uint64_t v49 = v123;
      unint64_t v48 = v124;
      swift_bridgeObjectRetain();
      uint64_t v119 = (ValueMetadata *)sub_1C263FDFC(v49, v48, (uint64_t *)&v121);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      sub_1C26D2ECC(v122);
      *(_WORD *)(v45 + 22) = 2080;
      uint64_t v50 = *v37;
      unint64_t v51 = v37[1];
      swift_bridgeObjectRetain();
      uint64_t v119 = (ValueMetadata *)sub_1C263FDFC(v50, v51, (uint64_t *)&v121);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      sub_1C26D2FD8((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      *(_WORD *)(v45 + 32) = 2082;
      unint64_t v52 = v117;
      uint64_t v53 = v38 + v117[11];
      LODWORD(v110) = v43;
      sub_1C26D30BC(v53, v116);
      uint64_t v54 = sub_1C277B860();
      uint64_t v119 = (ValueMetadata *)sub_1C263FDFC(v54, v55, (uint64_t *)&v121);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      sub_1C26D2FD8(v38, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      *(_WORD *)(v45 + 42) = 2082;
      uint64_t v56 = &v39[v52[26]];
      uint64_t v57 = *((void *)v56 + 1);
      uint64_t v119 = *(ValueMetadata **)v56;
      uint64_t v120 = v57;
      sub_1C2632318(0, (unint64_t *)&qword_1EBB85920, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
      swift_bridgeObjectRetain();
      uint64_t v58 = sub_1C277B860();
      uint64_t v119 = (ValueMetadata *)sub_1C263FDFC(v58, v59, (uint64_t *)&v121);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      sub_1C26D2FD8((uint64_t)v39, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      *(_WORD *)(v45 + 52) = 2082;
      LOBYTE(v119) = *(unsigned char *)(v40 + v52[12]);
      unint64_t v60 = ContentKind.rawValue.getter();
      uint64_t v119 = (ValueMetadata *)sub_1C263FDFC(v60, v61, (uint64_t *)&v121);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      sub_1C26D2FD8(v40, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      os_log_t v62 = v111;
      _os_log_impl(&dword_1C2601000, v111, (os_log_type_t)v110, "[%{public}s][%{public}s] fetchOrCreate Updating feedItem with unique identifier %s, relevant date %{public}s, pinned content identifier %{public}s and contentkind %{public}s ", (uint8_t *)v45, 0x3Eu);
      unint64_t v63 = v118;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v63, -1, -1);
      MEMORY[0x1C875D230](v45, -1, -1);
    }
    else
    {
      sub_1C26D2ECC(v122);
      sub_1C26D2FD8((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      sub_1C26D2FD8((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      sub_1C26D2FD8((uint64_t)v39, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      sub_1C26D2FD8(v40, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    }
    return (void *)v115;
  }
  else
  {
    uint64_t v115 = (uint64_t)v8;
    if (qword_1EBB85FE8 != -1) {
      swift_once();
    }
    uint64_t v65 = sub_1C277B130();
    __swift_project_value_buffer(v65, (uint64_t)qword_1EBB85FD0);
    sub_1C26D2E2C((uint64_t)v118, (uint64_t)v122);
    uint64_t v66 = a1;
    sub_1C26D3658((uint64_t)a1, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C26D3658((uint64_t)a1, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C26D3658((uint64_t)a1, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    uint64_t v67 = (uint64_t)v13;
    sub_1C26D3658((uint64_t)a1, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    uint64_t v68 = sub_1C277B100();
    os_log_type_t v69 = sub_1C277BD40();
    int v70 = v69;
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v71 = swift_slowAlloc();
      LODWORD(v113) = v70;
      uint64_t v72 = v71;
      uint64_t v114 = (void *)swift_slowAlloc();
      os_log_t v121 = v114;
      *(_DWORD *)uint64_t v72 = 136447490;
      v109 = v16;
      uint64_t v119 = &type metadata for PluginFeedItemStorage;
      sub_1C26D2F10();
      os_log_t v110 = v68;
      uint64_t v73 = sub_1C277B860();
      uint64_t v119 = (ValueMetadata *)sub_1C263FDFC(v73, v74, (uint64_t *)&v121);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v72 + 12) = 2082;
      uint64_t v76 = v123;
      unint64_t v75 = v124;
      swift_bridgeObjectRetain();
      uint64_t v119 = (ValueMetadata *)sub_1C263FDFC(v76, v75, (uint64_t *)&v121);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      sub_1C26D2ECC(v122);
      *(_WORD *)(v72 + 22) = 2080;
      uint64_t v77 = *v22;
      unint64_t v78 = v22[1];
      swift_bridgeObjectRetain();
      uint64_t v119 = (ValueMetadata *)sub_1C263FDFC(v77, v78, (uint64_t *)&v121);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      sub_1C26D2FD8((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      *(_WORD *)(v72 + 32) = 2082;
      uint64_t v79 = v117;
      sub_1C26D30BC((uint64_t)&v19[v117[11]], v116);
      uint64_t v80 = sub_1C277B860();
      uint64_t v119 = (ValueMetadata *)sub_1C263FDFC(v80, v81, (uint64_t *)&v121);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      sub_1C26D2FD8((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      *(_WORD *)(v72 + 42) = 2082;
      uint64_t v82 = (uint64_t)v109;
      uint64_t v83 = &v109[v79[26]];
      uint64_t v84 = *((void *)v83 + 1);
      uint64_t v119 = *(ValueMetadata **)v83;
      uint64_t v120 = v84;
      sub_1C2632318(0, (unint64_t *)&qword_1EBB85920, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
      swift_bridgeObjectRetain();
      uint64_t v85 = sub_1C277B860();
      uint64_t v119 = (ValueMetadata *)sub_1C263FDFC(v85, v86, (uint64_t *)&v121);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      sub_1C26D2FD8(v82, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      *(_WORD *)(v72 + 52) = 2082;
      LOBYTE(v119) = *(unsigned char *)(v67 + v79[12]);
      unint64_t v87 = ContentKind.rawValue.getter();
      uint64_t v119 = (ValueMetadata *)sub_1C263FDFC(v87, v88, (uint64_t *)&v121);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      sub_1C26D2FD8(v67, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      os_log_t v89 = v110;
      _os_log_impl(&dword_1C2601000, v110, (os_log_type_t)v113, "[%{public}s][%{public}s] fetchOrCreate Creating feedItem with unique identifier %s, relevant date %{public}s, pinned content identifier %{public}s and contentkind %{public}s ", (uint8_t *)v72, 0x3Eu);
      uint64_t v90 = (uint64_t)v114;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v90, -1, -1);
      MEMORY[0x1C875D230](v72, -1, -1);
    }
    else
    {
      sub_1C26D2ECC(v122);
      sub_1C26D2FD8((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      sub_1C26D2FD8((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      sub_1C26D2FD8((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
      sub_1C26D2FD8((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    }
    uint64_t v114 = (void *)type metadata accessor for FeedItem();
    uint64_t v91 = v118;
    uint64_t v92 = (void *)*v118;
    uint64_t v93 = v66[1];
    uint64_t v112 = *v66;
    uint64_t v108 = v93;
    uint64_t v94 = v66[2];
    uint64_t v95 = v66[3];
    uint64_t v96 = v118[7];
    unint64_t v113 = (char *)v118[6];
    os_log_t v110 = v96;
    uint64_t v98 = v66[11];
    unint64_t v97 = v66[12];
    int v99 = *((unsigned __int8 *)v66 + 32);
    v109 = v92;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C263D4D4(v94, v95, v99);
    sub_1C2641B44(v98, v97);
    uint64_t v100 = v115;
    sub_1C277A830();
    uint64_t v101 = sub_1C277A520();
    os_log_t v102 = v111;
    (*(void (**)(os_log_t, uint64_t, uint64_t, uint64_t))(*(void *)(v101 - 8) + 56))(v111, 1, 1, v101);
    uint64_t v103 = v66;
    uint64_t v104 = v117;
    LOBYTE(v122[0]) = *((unsigned char *)v103 + v117[12]);
    uint64_t v64 = (void *)FeedItem.__allocating_init(context:uniqueIdentifier:userInterface:pluginPackage:userData:dateSubmitted:relevantDateRange:contentKind:searchSectionHint:)(v109, v112, v108, v94, v95, v99, v113, (uint64_t)v110, v98, v97, v100, (uint64_t)v102, (unsigned __int8 *)v122, *((unsigned char *)v103 + v117[23]));
    uint64_t v105 = v116;
    sub_1C26D30BC((uint64_t)v103 + v104[11], v116);
    FeedItem.relevantDateInterval.setter(v105);
    if (v91[10]) {
      uint64_t v106 = (void *)sub_1C277B820();
    }
    else {
      uint64_t v106 = 0;
    }
    objc_msgSend(v64, sel_setExecutorIdentifier_, v106);
  }
  return v64;
}

void FeedItem.update(with:)(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  sub_1C26D2DC8(0, (unint64_t *)&unk_1EBB85F50, (uint64_t (*)(uint64_t))type metadata accessor for RelevantDateInterval, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v65 - v7;
  id v9 = objc_msgSend(v1, sel_managedObjectContext);
  if (!v9)
  {
    v68[0] = 0;
    v68[1] = 0xE000000000000000;
    sub_1C277C2D0();
    sub_1C277B8D0();
    id v64 = objc_msgSend(v1, sel_description);
    sub_1C277B850();

    sub_1C277B8D0();
    swift_bridgeObjectRelease();
LABEL_43:
    sub_1C277C560();
    __break(1u);
    return;
  }
  uint64_t v10 = v9;
  uint64_t v66 = v8;
  uint64_t v67 = type metadata accessor for PluginFeedItem();
  uint64_t v11 = *(void **)(a1 + *(int *)(v67 + 72));
  if (v11)
  {
    sub_1C26D2DC8(0, &qword_1EBB85210, (uint64_t (*)(uint64_t))type metadata accessor for UserProfile, MEMORY[0x1E4FBBE00]);
    uint64_t v12 = type metadata accessor for UserProfile();
    uint64_t v13 = *(unsigned __int8 *)(*(void *)(v12 - 8) + 80);
    id v65 = v4;
    uint64_t v14 = (v13 + 32) & ~v13;
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1C277E480;
    id v16 = v11;
    id v17 = objc_msgSend(v16, sel_identifier);
    sub_1C277A880();

    *(void *)(v15 + v14 + *(int *)(v12 + 20)) = v16;
    uint64_t v18 = sub_1C2643840(v15);
    swift_setDeallocating();
    uint64_t v3 = v2;
    uint64_t v4 = v65;
    swift_arrayDestroy();
    swift_deallocClassInstance();
  }
  else
  {
    uint64_t v18 = MEMORY[0x1E4FBC870];
  }
  id v19 = v11;
  id v20 = v10;
  unint64_t v21 = sub_1C26D27C0(v18, v20, v11);
  swift_bridgeObjectRelease();

  if (v3)
  {

    return;
  }
  id v65 = v20;

  sub_1C265C4C4(v21);
  swift_bridgeObjectRelease();
  type metadata accessor for Profile();
  sub_1C26D3068(&qword_1EBB85088, (void (*)(uint64_t))type metadata accessor for Profile);
  uint64_t v22 = (void *)sub_1C277BBB0();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setProfiles_, v22);

  objc_msgSend(v4, sel_setUsesPlatformView_, *(unsigned __int8 *)(a1 + 33));
  if (*(void *)(a1 + 48)) {
    uint64_t v23 = (void *)sub_1C277B820();
  }
  else {
    uint64_t v23 = 0;
  }
  uint64_t v24 = (int *)v67;
  objc_msgSend(v4, sel_setActionHandlerClassName_, v23);

  if (*(void *)(a1 + 64) >> 60 == 15) {
    uint64_t v25 = 0;
  }
  else {
    uint64_t v25 = (void *)sub_1C277A770();
  }
  objc_msgSend(v4, sel_setActionHandlerUserData_, v25);

  uint64_t v26 = *(void *)(a1 + 16);
  uint64_t v27 = *(void *)(a1 + 24);
  unsigned __int8 v28 = *(unsigned char *)(a1 + 32);
  sub_1C263D4D4(v26, v27, v28);
  FeedItem.userInterface.setter(v26, v27, v28);
  if (*(void *)(a1 + 96) >> 60 == 15) {
    uint64_t v29 = 0;
  }
  else {
    uint64_t v29 = (void *)sub_1C277A770();
  }
  uint64_t v30 = (uint64_t)v66;
  objc_msgSend(v4, sel_setUserData_, v29);

  sub_1C26D30BC(a1 + v24[11], v30);
  FeedItem.relevantDateInterval.setter(v30);
  char v31 = *(unsigned char *)(a1 + v24[12]);
  LOBYTE(v68[0]) = v31;
  ContentKind.rawValue.getter();
  uint64_t v32 = (void *)sub_1C277B820();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setContentKindRawValue_, v32);

  sub_1C2653980();
  if (*(void *)(a1 + v24[15] + 8)) {
    unint64_t v33 = (void *)sub_1C277B820();
  }
  else {
    unint64_t v33 = 0;
  }
  objc_msgSend(v4, sel_setCategoryIdentifier_, v33);

  LOBYTE(v68[0]) = v31;
  uint64_t v34 = *(void *)(a1 + v24[17]);
  objc_msgSend(v4, sel_setSearchSectionRawValue_, sub_1C27746A0(v68, v34));
  FeedItem.associatedKeywords.getter();
  swift_bridgeObjectRelease();
  id v35 = objc_msgSend(v4, sel_managedObjectContext);
  if (!v35) {
    goto LABEL_43;
  }
  id v36 = v35;
  unint64_t v37 = sub_1C265CA98(MEMORY[0x1E4FBC870], v36);

  sub_1C265BF2C(v37);
  swift_bridgeObjectRelease();
  type metadata accessor for Keyword();
  sub_1C26D3068(&qword_1EBB853D0, (void (*)(uint64_t))type metadata accessor for Keyword);
  uint64_t v38 = (void *)sub_1C277BBB0();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setKeywords_, v38);

  sub_1C2653980();
  swift_bridgeObjectRetain();
  id v39 = objc_msgSend(v4, sel_managedObjectContext);
  if (!v39) {
    goto LABEL_43;
  }
  id v40 = v39;
  unint64_t v41 = sub_1C265CA98(v34, v40);
  swift_bridgeObjectRelease();

  sub_1C265BF2C(v41);
  swift_bridgeObjectRelease();
  os_log_type_t v42 = (void *)sub_1C277BBB0();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setKeywords_, v42);

  sub_1C2653980();
  int v43 = (int *)v67;
  uint64_t v44 = *(void *)(a1 + *(int *)(v67 + 76) + 8) ? (void *)sub_1C277B820() : 0;
  objc_msgSend(v4, sel_setLocalizedCategoryName_, v44);

  uint64_t v45 = *(void *)(a1 + v43[20] + 8) ? (void *)sub_1C277B820() : 0;
  objc_msgSend(v4, sel_setLocalizedTitle_, v45);

  uint64_t v46 = *(void *)(a1 + v43[21] + 8) ? (void *)sub_1C277B820() : 0;
  objc_msgSend(v4, sel_setLocalizedDescription_, v46);

  uint64_t v47 = *(void *)(a1 + v43[13]);
  swift_bridgeObjectRetain();
  id v48 = objc_msgSend(v4, sel_managedObjectContext);
  if (!v48) {
    goto LABEL_43;
  }
  id v49 = v48;
  unint64_t v50 = sub_1C265B8E8(v47, v49);
  swift_bridgeObjectRelease();

  sub_1C265BD84(v50);
  swift_bridgeObjectRelease();
  type metadata accessor for DataType();
  sub_1C26D3068((unint64_t *)&unk_1EBB85090, (void (*)(uint64_t))type metadata accessor for DataType);
  unint64_t v51 = (void *)sub_1C277BBB0();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setDataTypes_, v51);

  sub_1C26E6E64(a1);
  uint64_t v52 = *(void *)(a1 + v43[14]);
  swift_bridgeObjectRetain();
  id v53 = objc_msgSend(v4, sel_managedObjectContext);
  if (!v53) {
    goto LABEL_43;
  }
  id v54 = v53;
  id v55 = v4;
  unint64_t v56 = sub_1C265CEE0(v52, (uint64_t)v54, v55);

  sub_1C265C59C(v56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for SharableModelReference();
  sub_1C26D3068(&qword_1EBB853C8, (void (*)(uint64_t))type metadata accessor for SharableModelReference);
  uint64_t v57 = (void *)sub_1C277BBB0();
  swift_bridgeObjectRelease();
  objc_msgSend(v55, sel_setSharableModelReferences_, v57);

  objc_msgSend(v55, sel_setSortHint_, *(void *)(a1 + v43[22]));
  objc_msgSend(v55, sel_setIndexForSearch_, *(unsigned __int8 *)(a1 + v43[24]));
  int v58 = *(unsigned __int8 *)(a1 + v43[25]);
  if (v58 == 2) {
    id v59 = objc_msgSend(v55, sel_hideInDiscover);
  }
  else {
    id v59 = (id)(v58 & 1);
  }
  unint64_t v60 = v65;
  objc_msgSend(v55, sel_setHideInDiscover_, v59);
  if (*(void *)(a1 + v43[26] + 8)) {
    unint64_t v61 = (void *)sub_1C277B820();
  }
  else {
    unint64_t v61 = 0;
  }
  objc_msgSend(v55, sel_setPinnedContentIdentifier_, v61);

  os_log_t v62 = (void *)sub_1C277B820();
  swift_bridgeObjectRelease();
  objc_msgSend(v55, sel_setHostViewStyleRawValue_, v62);

  if (*(void *)(a1 + 80)) {
    unint64_t v63 = (void *)sub_1C277B820();
  }
  else {
    unint64_t v63 = 0;
  }
  objc_msgSend(v55, sel_setBaseAutomationIdentifier_, v63);
}

uint64_t sub_1C26D140C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  BOOL v7 = a3[4] == a1 && a3[5] == a2;
  if (v7 || (sub_1C277C7E0() & 1) != 0) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v10 = a3 + 7;
  uint64_t v11 = 1;
  while (1)
  {
    if (v3 == v11) {
      return 0;
    }
    ++v9;
    if (*(v10 - 1) == a1 && *v10 == a2) {
      break;
    }
    char v13 = sub_1C277C7E0();
    uint64_t result = v11++;
    v10 += 2;
    if (v13) {
      return result;
    }
  }
  return v9;
}

uint64_t sub_1C26D14F4(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v60 = sub_1C277A840();
  uint64_t v6 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  uint64_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = sub_1C26D1D80(a1, a2);
  sub_1C2632318(0, (unint64_t *)&qword_1EBB85220, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C277E590;
  id v11 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  uint64_t v12 = (void *)sub_1C277B820();
  id v13 = objc_msgSend(v11, sel_initWithKey_ascending_, v12, 0);

  *(void *)(v10 + 32) = v13;
  v63[0] = (id)v10;
  sub_1C277BA60();
  sub_1C2644ED8(0, (unint64_t *)&unk_1EBB85138);
  uint64_t v14 = (void *)sub_1C277BA30();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setSortDescriptors_, v14);

  type metadata accessor for FeedItem();
  unint64_t v15 = sub_1C277C000();
  unint64_t v16 = v15;
  id v17 = (ValueMetadata *)(v15 >> 62);
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1C277C5A0();
    swift_bridgeObjectRelease();
    if (v18 >= 2)
    {
LABEL_3:
      int64_t v59 = v18;
      if (qword_1EBB85FE8 != -1) {
        swift_once();
      }
      uint64_t v19 = sub_1C277B130();
      __swift_project_value_buffer(v19, (uint64_t)qword_1EBB85FD0);
      sub_1C26D2E2C((uint64_t)v3, (uint64_t)v63);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      id v20 = sub_1C277B100();
      int v21 = sub_1C277BD30();
      if (os_log_type_enabled(v20, (os_log_type_t)v21))
      {
        int v53 = v21;
        os_log_t v55 = v20;
        unint64_t v56 = v17;
        uint64_t v57 = v3;
        id v58 = v9;
        uint64_t v22 = swift_slowAlloc();
        id v54 = (uint8_t *)a1;
        uint64_t v23 = v22;
        uint64_t v24 = swift_slowAlloc();
        uint64_t v52 = v24;
        *(_DWORD *)uint64_t v23 = 136446978;
        unint64_t v61 = &type metadata for PluginFeedItemStorage;
        v62[0] = v24;
        sub_1C26D2F10();
        uint64_t v25 = sub_1C277B860();
        unint64_t v61 = (ValueMetadata *)sub_1C263FDFC(v25, v26, v62);
        sub_1C277C0D0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v23 + 12) = 2082;
        id v27 = v63[6];
        id v28 = v63[7];
        swift_bridgeObjectRetain();
        unint64_t v61 = (ValueMetadata *)sub_1C263FDFC((uint64_t)v27, (unint64_t)v28, v62);
        sub_1C277C0D0();
        swift_bridgeObjectRelease();
        sub_1C26D2ECC(v63);
        *(_WORD *)(v23 + 22) = 2080;
        swift_bridgeObjectRetain();
        unint64_t v61 = (ValueMetadata *)sub_1C263FDFC((uint64_t)v54, a2, v62);
        sub_1C277C0D0();
        swift_bridgeObjectRelease_n();
        id v54 = (uint8_t *)v23;
        *(_WORD *)(v23 + 32) = 2080;
        unint64_t v61 = (ValueMetadata *)MEMORY[0x1E4FBC860];
        sub_1C2659F80(0, v59, 0);
        uint64_t v29 = 0;
        uint64_t v30 = v61;
        do
        {
          if ((v16 & 0xC000000000000001) != 0) {
            id v31 = (id)MEMORY[0x1C875C230](v29, v16);
          }
          else {
            id v31 = *(id *)(v16 + 8 * v29 + 32);
          }
          uint64_t v32 = v31;
          id v33 = objc_msgSend(v31, sel_dateSubmitted);
          sub_1C277A810();

          unint64_t v61 = v30;
          unint64_t Kind = v30[1].Kind;
          unint64_t Description = (unint64_t)v30[1].Description;
          if (Kind >= Description >> 1)
          {
            sub_1C2659F80(Description > 1, Kind + 1, 1);
            uint64_t v30 = v61;
          }
          ++v29;
          v30[1].unint64_t Kind = Kind + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))((unint64_t)v30+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * Kind, v8, v60);
        }
        while (v59 != v29);
        uint64_t v38 = v54;
        uint64_t v39 = MEMORY[0x1C875B960](v30, v60);
        unint64_t v41 = v40;
        swift_bridgeObjectRelease();
        unint64_t v61 = (ValueMetadata *)sub_1C263FDFC(v39, v41, v62);
        sub_1C277C0D0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        os_log_t v42 = v55;
        _os_log_impl(&dword_1C2601000, v55, (os_log_type_t)v53, "[%{public}s][%{public}s] One or more feedItems with unique identifier %s, submitted on %s, attempting cleanup to prevent Health App crashes", v38, 0x2Au);
        uint64_t v43 = v52;
        swift_arrayDestroy();
        MEMORY[0x1C875D230](v43, -1, -1);
        MEMORY[0x1C875D230](v38, -1, -1);

        uint64_t v3 = v57;
        id v9 = v58;
        uint64_t v36 = v16 & 0xFFFFFFFFFFFFFF8;
        if (!v56)
        {
LABEL_18:
          uint64_t v37 = *(void *)(v36 + 16);
          if (v37) {
            goto LABEL_19;
          }
          goto LABEL_25;
        }
      }
      else
      {
        sub_1C26D2ECC(v63);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();

        swift_bridgeObjectRelease();
        uint64_t v36 = v16 & 0xFFFFFFFFFFFFFF8;
        if (!v17) {
          goto LABEL_18;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_1C277C5A0();
      swift_bridgeObjectRelease();
      if (v37)
      {
LABEL_19:
        if (v37 >= 1)
        {
          uint64_t v44 = 0;
          uint64_t v45 = *v3;
          do
          {
            if ((v16 & 0xC000000000000001) != 0) {
              id v46 = (id)MEMORY[0x1C875C230](v44, v16);
            }
            else {
              id v46 = *(id *)(v16 + 8 * v44 + 32);
            }
            uint64_t v47 = v46;
            ++v44;
            objc_msgSend(v45, sel_deleteObject_, v46);
          }
          while (v37 != v44);
          goto LABEL_25;
        }
        __break(1u);
        goto LABEL_37;
      }
LABEL_25:

      swift_bridgeObjectRelease();
      return 0;
    }
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1C277C5A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if ((unint64_t)v18 > 1) {
      goto LABEL_3;
    }
  }
  if (!v18)
  {
    swift_bridgeObjectRelease();

    return 0;
  }
  if ((v16 & 0xC000000000000001) != 0)
  {
LABEL_37:
    id v48 = (id)MEMORY[0x1C875C230](0, v16);
    goto LABEL_32;
  }
  if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v48 = *(id *)(v16 + 32);
LABEL_32:
    id v49 = v48;
    swift_bridgeObjectRelease();

    return (uint64_t)v49;
  }
  __break(1u);
  sub_1C26D2E2C((uint64_t)v3, (uint64_t)v63);
  v62[0] = 0;
  v62[1] = 0xE000000000000000;
  sub_1C277C2D0();
  sub_1C277B8D0();
  unint64_t v61 = &type metadata for PluginFeedItemStorage;
  sub_1C26D2F10();
  sub_1C277B860();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  sub_1C277B8D0();
  swift_bridgeObjectRetain();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  sub_1C277B8D0();
  sub_1C277B8D0();
  sub_1C277B8D0();
  unint64_t v61 = v17;
  sub_1C262B07C(0, (unint64_t *)&qword_1EBB831D0);
  sub_1C277C450();
  uint64_t result = sub_1C277C560();
  __break(1u);
  return result;
}

id sub_1C26D1D80(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v6 = _s14HealthPlatform8FeedItemC12fetchRequestSo07NSFetchF0CyACGyFZ_0();
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85100);
  sub_1C26322C0();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C277E480;
  *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v7 + 64) = sub_1C263226C();
  *(void *)(v7 + 32) = a1;
  *(void *)(v7 + 40) = a2;
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)sub_1C277BCC0();
  sub_1C2632318(0, (unint64_t *)&qword_1EBB85220, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C27814A0;
  uint64_t v10 = *(void **)(v3 + 64);
  *(void *)(v9 + 32) = v10;
  *(void *)(v9 + 40) = v8;
  sub_1C277BA60();
  id v11 = v10;
  id v12 = v8;
  id v13 = (void *)sub_1C277BA30();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v13);

  objc_msgSend(v6, sel_setPredicate_, v14);
  return v6;
}

uint64_t sub_1C26D1F20(uint64_t a1)
{
  sub_1C26D2DC8(0, qword_1EBB84FE0, (uint64_t (*)(uint64_t))type metadata accessor for UserProfile, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v8 - v3;
  if (*(void *)(a1 + 16) > 1uLL)
  {
    uint64_t result = sub_1C277C560();
    __break(1u);
  }
  else
  {
    sub_1C2657AB8(a1, (uint64_t)v4);
    uint64_t v5 = type metadata accessor for UserProfile();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5) == 1)
    {
      sub_1C26D2F4C((uint64_t)v4);
      return 0;
    }
    else
    {
      id v6 = *(id *)&v4[*(int *)(v5 + 20)];
      sub_1C26D2FD8((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for UserProfile);
    }
    return (uint64_t)v6;
  }
  return result;
}

void sub_1C26D20A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v4;
  sub_1C26D2E2C((uint64_t)v4, (uint64_t)v15);
  uint64_t v9 = swift_allocObject();
  long long v10 = v15[3];
  *(_OWORD *)(v9 + 48) = v15[2];
  *(_OWORD *)(v9 + 64) = v10;
  *(_OWORD *)(v9 + 80) = v15[4];
  uint64_t v11 = v16;
  long long v12 = v15[1];
  *(_OWORD *)(v9 + 16) = v15[0];
  *(_OWORD *)(v9 + 32) = v12;
  *(void *)(v9 + 96) = v11;
  *(void *)(v9 + 104) = a1;
  *(void *)(v9 + 112) = a2;
  *(void *)(v9 + 120) = a3;
  aBlock[4] = sub_1C26D3E08;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1C26254FC;
  aBlock[3] = &block_descriptor_58;
  id v13 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_performBlock_, v13);
  _Block_release(v13);
}

void sub_1C26D21D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

void sub_1C26D2200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

void sub_1C26D2228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = v8;
  unint64_t v15 = *v11;
  sub_1C26D2E2C((uint64_t)v11, (uint64_t)v22);
  uint64_t v16 = swift_allocObject();
  long long v17 = v22[3];
  *(_OWORD *)(v16 + 56) = v22[2];
  *(_OWORD *)(v16 + 72) = v17;
  *(_OWORD *)(v16 + 88) = v22[4];
  long long v18 = v22[1];
  *(_OWORD *)(v16 + 24) = v22[0];
  *(void *)(v16 + 16) = a1;
  uint64_t v19 = v23;
  *(_OWORD *)(v16 + 40) = v18;
  *(void *)(v16 + 104) = v19;
  *(void *)(v16 + 112) = a2;
  *(void *)(v16 + 120) = a3;
  aBlock[4] = a7;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1C26254FC;
  aBlock[3] = a8;
  id v20 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v15, sel_performBlock_, v20);
  _Block_release(v20);
}

void sub_1C26D235C(void *a1, void *a2, void *a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  id v14 = *v7;
  sub_1C26D2E2C((uint64_t)v7, (uint64_t)v21);
  uint64_t v15 = swift_allocObject();
  long long v16 = v21[3];
  *(_OWORD *)(v15 + 48) = v21[2];
  *(_OWORD *)(v15 + 64) = v16;
  *(_OWORD *)(v15 + 80) = v21[4];
  uint64_t v17 = v22;
  long long v18 = v21[1];
  *(_OWORD *)(v15 + 16) = v21[0];
  *(_OWORD *)(v15 + 32) = v18;
  *(void *)(v15 + 96) = v17;
  *(void *)(v15 + 104) = a1;
  *(void *)(v15 + 112) = a2;
  *(void *)(v15 + 120) = a3;
  *(unsigned char *)(v15 + 128) = a4;
  *(void *)(v15 + 136) = a5;
  *(void *)(v15 + 144) = a6;
  aBlock[4] = sub_1C26D3050;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1C26254FC;
  aBlock[3] = &block_descriptor_37;
  uint64_t v19 = _Block_copy(aBlock);
  sub_1C26D3054(a1, a2, a3, a4);
  swift_retain();
  swift_release();
  objc_msgSend(v14, sel_performBlock_, v19);
  _Block_release(v19);
}

void (*sub_1C26D24B4(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(void *)
{
  id v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1C26D2638(v6, a2, a3);
  return sub_1C26D251C;
}

void (*sub_1C26D2520(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(void *)
{
  id v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1C26D26B8(v6, a2, a3);
  return sub_1C26D251C;
}

void (*sub_1C26D2588(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(void *)
{
  id v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1C26D2738(v6, a2, a3);
  return sub_1C26D251C;
}

void sub_1C26D25F0(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_1C26D2638(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1C875C230](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return destroy for SourceProfile;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1C26D26B8(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1C875C230](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return j__s14HealthPlatform13SourceProfileOwxx;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1C26D2738(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x1C875C230](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    *uint64_t v3 = v4;
    return sub_1C26D27B8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C26D27B8()
{
  return swift_release();
}

uint64_t sub_1C26D27C0(uint64_t a1, void *a2, void *a3)
{
  id v31 = a2;
  uint64_t v6 = type metadata accessor for UserProfile();
  uint64_t v29 = *(void *)(v6 - 8);
  uint64_t v30 = v6;
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v28 = (uint64_t)&v24 - v10;
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v11)
  {
    uint64_t v24 = v3;
    uint64_t v25 = a3;
    uint64_t v32 = MEMORY[0x1E4FBC860];
    sub_1C277C3C0();
    int64_t v13 = sub_1C2643C24(a1);
    int v15 = v14;
    char v17 = v16 & 1;
    uint64_t v27 = a1 + 56;
    uint64_t result = type metadata accessor for Profile();
    uint64_t v26 = result;
    while ((v13 & 0x8000000000000000) == 0 && v13 < 1 << *(unsigned char *)(a1 + 32))
    {
      if (((*(void *)(v27 + (((unint64_t)v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
        goto LABEL_13;
      }
      if (*(_DWORD *)(a1 + 36) != v15) {
        goto LABEL_14;
      }
      uint64_t v18 = v28;
      sub_1C26D3658(*(void *)(a1 + 48) + *(void *)(v29 + 72) * v13, v28, (uint64_t (*)(void))type metadata accessor for UserProfile);
      sub_1C2644970(v18, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for UserProfile);
      if (!static Profile.find(_:in:)(*(void **)&v9[*(int *)(v30 + 20)], v31))
      {
        sub_1C26D36C0();
        swift_allocError();
        int v21 = v25;
        *(void *)uint64_t v22 = v25;
        *(unsigned char *)(v22 + 8) = 1;
        id v23 = v21;
        swift_willThrow();
        sub_1C26D2FD8((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for UserProfile);
        return swift_release();
      }
      sub_1C26D2FD8((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for UserProfile);
      sub_1C277C390();
      sub_1C277C3D0();
      sub_1C277C3E0();
      sub_1C277C3A0();
      uint64_t result = sub_1C265B4D0(v13, v15, v17 & 1, a1);
      int64_t v13 = result;
      int v15 = v19;
      char v17 = v20 & 1;
      if (!--v11)
      {
        sub_1C26431E8(result, v19, v20 & 1);
        return v32;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  return result;
}

id _sSo11NSPredicateC14HealthPlatformE24feedItemStoragePredicate3for17profileIdentifierAB0B13Orchestration8Executor_p_So09HKProfileJ0CtFZ_0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = sub_1C277ADF0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85100);
  sub_1C26322C0();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C277E480;
  swift_getObjectType();
  sub_1C277B090();
  uint64_t v9 = sub_1C277ADE0();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v12 = MEMORY[0x1E4FBB1A0];
  *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v13 = sub_1C263226C();
  *(void *)(v8 + 64) = v13;
  *(void *)(v8 + 32) = v9;
  *(void *)(v8 + 40) = v11;
  int v14 = (void *)sub_1C277BCC0();
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1C277E470;
  *(void *)(v15 + 56) = v12;
  *(void *)(v15 + 64) = v13;
  *(void *)(v15 + 32) = 0x73656C69666F7270;
  *(void *)(v15 + 40) = 0xE800000000000000;
  id result = objc_msgSend(a3, sel_identifier);
  if (result)
  {
    id v17 = result;
    *(void *)(v15 + 96) = sub_1C2644ED8(0, &qword_1EBB851A8);
    *(void *)(v15 + 104) = sub_1C26323B0();
    *(void *)(v15 + 72) = v17;
    uint64_t v18 = (void *)sub_1C277BCC0();
    sub_1C2632318(0, (unint64_t *)&qword_1EBB85220, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1C27814A0;
    *(void *)(v19 + 32) = v14;
    *(void *)(v19 + 40) = v18;
    v24[1] = v19;
    sub_1C277BA60();
    id v20 = v14;
    id v21 = v18;
    uint64_t v22 = (void *)sub_1C277BA30();
    swift_bridgeObjectRelease();
    id v23 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v22);

    return v23;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C26D2D90(uint64_t a1)
{
  return sub_1C26CC494(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t sub_1C26D2D9C(uint64_t a1)
{
  return sub_1C26CC840(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t sub_1C26D2DA8(uint64_t a1)
{
  return sub_1C26CCAD0(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t sub_1C26D2DB4(uint64_t a1)
{
  return sub_1C26CCFB8(a1, *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(unsigned __int8 *)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1C26D2DC8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C26D2E2C(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1C26D2E68()
{
  sub_1C26CD2F4((void **)(v0 + 16), *(void *)(v0 + 104), *(void (**)(void *))(v0 + 112));
}

unint64_t sub_1C26D2E78()
{
  unint64_t result = qword_1EA304A18;
  if (!qword_1EA304A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304A18);
  }
  return result;
}

id *sub_1C26D2ECC(id *a1)
{
  return a1;
}

void sub_1C26D2F00()
{
  sub_1C26CE0D8(*(void *)(v0 + 16), (void **)(v0 + 24), *(void (**)(void))(v0 + 112), *(void *)(v0 + 120));
}

unint64_t sub_1C26D2F10()
{
  unint64_t result = qword_1EBB82810;
  if (!qword_1EBB82810)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB82810);
  }
  return result;
}

uint64_t sub_1C26D2F4C(uint64_t a1)
{
  sub_1C26D2DC8(0, qword_1EBB84FE0, (uint64_t (*)(uint64_t))type metadata accessor for UserProfile, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C26D2FD8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C26D303C()
{
  sub_1C26CEEA0(*(void *)(v0 + 16), (void **)(v0 + 24), *(void (**)(void *))(v0 + 112));
}

id sub_1C26D3054(id result, void *a2, void *a3, char a4)
{
  if (a4 != -1) {
    return sub_1C2646704(result, a2, a3, a4);
  }
  return result;
}

uint64_t sub_1C26D3068(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C26D30BC(uint64_t a1, uint64_t a2)
{
  sub_1C26D2DC8(0, (unint64_t *)&unk_1EBB85F50, (uint64_t (*)(uint64_t))type metadata accessor for RelevantDateInterval, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C26D3154()
{
  unint64_t result = qword_1EA304A20;
  if (!qword_1EA304A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304A20);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FeedItemStorageErrors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C26D3244);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedItemStorageErrors()
{
  return &type metadata for FeedItemStorageErrors;
}

uint64_t dispatch thunk of FeedItemStorage.updateOrCreate(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of FeedItemStorage.replaceExisting(with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of FeedItemStorage.delete(feedItemIdentifiers:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of FeedItemStorage.fetch(matching:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 32))();
}

uint64_t initializeWithCopy for PluginFeedItemStorage(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  uint64_t v5 = a1 + 8;
  uint64_t v6 = a2 + 8;
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v8 = v7;
  uint64_t v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  id v10 = v4;
  v9(v5, v6, v8);
  uint64_t v11 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v11;
  unint64_t v13 = *(void **)(a2 + 64);
  uint64_t v12 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = v13;
  *(void *)(a1 + 72) = v12;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  id v14 = v13;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PluginFeedItemStorage(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v7 = *(void **)(a2 + 64);
  uint64_t v8 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = v7;
  id v9 = v7;

  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PluginFeedItemStorage(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  __swift_destroy_boxed_opaque_existential_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);

  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PluginFeedItemStorage(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PluginFeedItemStorage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t objectdestroy_22Tm()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  int v1 = *(unsigned __int8 *)(v0 + 128);
  if (v1 != 255) {
    sub_1C2645714(*(void **)(v0 + 104), *(void **)(v0 + 112), *(void **)(v0 + 120), v1);
  }
  swift_release();

  return MEMORY[0x1F4186498](v0, 152, 7);
}

uint64_t sub_1C26D35CC()
{
  return sub_1C26CF1D4(v0 + 16, *(void **)(v0 + 104), *(void **)(v0 + 112), *(void **)(v0 + 120), *(unsigned char *)(v0 + 128), *(void (**)(uint64_t, void))(v0 + 136), *(void *)(v0 + 144));
}

uint64_t objectdestroy_10Tm()
{
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 128, 7);
}

uint64_t sub_1C26D3658(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1C26D36C0()
{
  unint64_t result = qword_1EA304A28;
  if (!qword_1EA304A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304A28);
  }
  return result;
}

void sub_1C26D3714(void *a1, void *a2, void *a3, char a4)
{
  if (a4 != -1) {
    sub_1C2645714(a1, a2, a3, a4);
  }
}

uint64_t sub_1C26D3728(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2632318(255, (unint64_t *)&qword_1EBB85E70, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C26D3790()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C26D37C8()
{
  return sub_1C26CE020(*(void *)(v0 + 16));
}

uint64_t sub_1C26D37D0()
{
  int v1 = (int *)type metadata accessor for PluginFeedItem();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();
  sub_1C263CCDC(*(void *)(v5 + 16), *(void *)(v5 + 24), *(unsigned char *)(v5 + 32));
  swift_bridgeObjectRelease();
  unint64_t v6 = *(void *)(v0 + v3 + 64);
  if (v6 >> 60 != 15) {
    sub_1C263CC84(*(void *)(v5 + 56), v6);
  }
  swift_bridgeObjectRelease();
  unint64_t v7 = *(void *)(v5 + 96);
  if (v7 >> 60 != 15) {
    sub_1C263CC84(*(void *)(v5 + 88), v7);
  }
  uint64_t v8 = v5 + v1[11];
  uint64_t v9 = type metadata accessor for RelevantDateInterval();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    uint64_t v10 = sub_1C277A520();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v8, v10);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v5 + v1[27])) {
    swift_release();
  }
  swift_release();

  return MEMORY[0x1F4186498](v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_1C26D3A18()
{
  uint64_t v1 = *(void *)(type metadata accessor for PluginFeedItem() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_1C26CDDC4(v0 + v2, v3);
}

uint64_t sub_1C26D3AA8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C26D3AE0()
{
  if (!qword_1EBB839F0)
  {
    sub_1C26D2DC8(255, &qword_1EBB83740, (uint64_t (*)(uint64_t))type metadata accessor for PluginFeedItem, MEMORY[0x1E4FBB320]);
    sub_1C262B07C(255, (unint64_t *)&qword_1EBB831D0);
    unint64_t v0 = sub_1C277BB70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB839F0);
    }
  }
}

uint64_t sub_1C26D3B90()
{
  return objectdestroy_69Tm((uint64_t (*)(void))sub_1C26D3AE0);
}

uint64_t sub_1C26D3BA8(void *a1, char a2)
{
  char v3 = a2 & 1;
  sub_1C26D3AE0();

  return sub_1C26CD144(a1, v3);
}

void sub_1C26D3C28()
{
  if (!qword_1EBB82E60)
  {
    sub_1C262B07C(255, (unint64_t *)&qword_1EBB831D0);
    unint64_t v0 = sub_1C277BB70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB82E60);
    }
  }
}

uint64_t sub_1C26D3CA4()
{
  return objectdestroy_69Tm((uint64_t (*)(void))sub_1C26D3C28);
}

uint64_t sub_1C26D3CC0()
{
  return objectdestroy_69Tm((uint64_t (*)(void))sub_1C26D3C28);
}

uint64_t sub_1C26D3CD8(void *a1)
{
  return sub_1C26CCC3C(a1);
}

uint64_t sub_1C26D3D3C()
{
  return objectdestroy_69Tm((uint64_t (*)(void))sub_1C26D3C28);
}

uint64_t objectdestroy_69Tm(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return MEMORY[0x1F4186498](v1, v6, v7);
}

uint64_t *sub_1C26D3E38(int a1, void *a2)
{
  id v19 = a2;
  int v17 = a1;
  uint64_t v3 = *v2;
  uint64_t v18 = sub_1C277B630();
  uint64_t v4 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_1C277B660();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C26D45E8();
  v2[2] = sub_1C277BF30();
  swift_getObjectType();
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(void *)(v12 + 24) = v3;
  aBlock[4] = sub_1C26D4698;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1C26254FC;
  aBlock[3] = &block_descriptor_12;
  unint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  sub_1C26D99EC();
  sub_1C26D99F0();
  sub_1C277BF50();
  _Block_release(v13);
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v18);
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_release();
  id v14 = (void (__cdecl *)(int))sub_1C277B150();
  signal(v17, v14);
  swift_getObjectType();
  swift_unknownObjectRetain();
  sub_1C277BFA0();
  swift_unknownObjectRelease();

  return v2;
}

void sub_1C26D4134(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    (*(void (**)(uint64_t))(*(void *)Strong + 96))(Strong);
    swift_release();
  }
  else
  {
    if (qword_1EBB85EA8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1C277B130();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EBB85ED8);
    uint64_t v5 = sub_1C277B100();
    os_log_type_t v6 = sub_1C277BD40();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v11 = v8;
      *(_DWORD *)uint64_t v7 = 136315138;
      uint64_t v12 = a2;
      swift_getMetatypeMetadata();
      uint64_t v9 = sub_1C277B860();
      uint64_t v12 = sub_1C263FDFC(v9, v10, &v11);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v5, v6, "[%s]: init()", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v8, -1, -1);
      MEMORY[0x1C875D230](v7, -1, -1);
    }
  }
}

void sub_1C26D4318()
{
  uint64_t v1 = *v0;
  if (qword_1EBB85EA8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C277B130();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBB85ED8);
  oslog = sub_1C277B100();
  os_log_type_t v3 = sub_1C277BD40();
  if (os_log_type_enabled(oslog, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v9 = v5;
    uint64_t v10 = v1;
    *(_DWORD *)uint64_t v4 = 136315138;
    swift_getMetatypeMetadata();
    uint64_t v6 = sub_1C277B860();
    uint64_t v10 = sub_1C263FDFC(v6, v7, &v9);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, oslog, v3, "[%s]: sourceNotification() default implementation :(", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v5, -1, -1);
    MEMORY[0x1C875D230](v4, -1, -1);
  }
  else
  {
  }
}

uint64_t SignalListener.deinit()
{
  swift_getObjectType();
  sub_1C277BF80();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t SignalListener.__deallocating_deinit()
{
  swift_getObjectType();
  sub_1C277BF80();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SignalListener()
{
  return self;
}

uint64_t method lookup function for SignalListener(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SignalListener);
}

uint64_t dispatch thunk of SignalListener.sourceNotification()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

unint64_t sub_1C26D45E8()
{
  unint64_t result = qword_1EBB85188;
  if (!qword_1EBB85188)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB85188);
  }
  return result;
}

uint64_t sub_1C26D4628()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C26D4660()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C26D4698()
{
  sub_1C26D4134(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

id HealthAppNotificationManager.notificationCenter.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t HealthAppNotificationManager.__allocating_init(notificationCenter:notificationManagerStore:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = *(void *)(a2 + 32);
  type metadata accessor for UnfairLock();
  uint64_t v6 = swift_allocObject();
  unint64_t v7 = (_DWORD *)swift_slowAlloc();
  *(void *)(v6 + 16) = v7;
  *unint64_t v7 = 0;
  *(void *)(v4 + 64) = v6;
  *(void *)(v4 + 72) = sub_1C2619FE4(MEMORY[0x1E4FBC860]);
  *(void *)(v4 + 16) = a1;
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 40) = v8;
  *(void *)(v4 + 56) = v5;
  return v4;
}

uint64_t HealthAppNotificationManager.init(notificationCenter:notificationManagerStore:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 32);
  type metadata accessor for UnfairLock();
  uint64_t v6 = swift_allocObject();
  unint64_t v7 = (_DWORD *)swift_slowAlloc();
  *(void *)(v6 + 16) = v7;
  *unint64_t v7 = 0;
  *(void *)(v2 + 64) = v6;
  *(void *)(v2 + 72) = sub_1C2619FE4(MEMORY[0x1E4FBC860]);
  *(void *)(v2 + 16) = a1;
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v2 + 24) = *(_OWORD *)a2;
  *(_OWORD *)(v2 + 40) = v8;
  *(void *)(v2 + 56) = v5;
  return v2;
}

void sub_1C26D47E0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  long long v8 = &qword_1EBB85FF0[2];
  if (a1)
  {
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1C277B130();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EBB86280);
    uint64_t v10 = sub_1C277B100();
    os_log_type_t v11 = sub_1C277BD40();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      aBlock[0] = v13;
      *(_DWORD *)uint64_t v12 = 136315138;
      uint64_t v14 = sub_1C277C9E0();
      sub_1C263FDFC(v14, v15, aBlock);
      sub_1C277C0D0();
      long long v8 = qword_1EBB85FF0 + 16;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v10, v11, "%s [TCC] requestAuthorization adding .criticalAlert as an authorization option.", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v13, -1, -1);
      MEMORY[0x1C875D230](v12, -1, -1);
    }

    uint64_t v16 = 55;
  }
  else
  {
    uint64_t v16 = 39;
  }
  if (v8[76] != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1C277B130();
  __swift_project_value_buffer(v17, (uint64_t)qword_1EBB86280);
  uint64_t v18 = sub_1C277B100();
  os_log_type_t v19 = sub_1C277BD40();
  if (os_log_type_enabled(v18, v19))
  {
    id v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = a3;
    uint64_t v21 = swift_slowAlloc();
    aBlock[0] = v21;
    *(_DWORD *)id v20 = 136315138;
    uint64_t v22 = sub_1C277C9E0();
    sub_1C263FDFC(v22, v23, aBlock);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v18, v19, "%s [TCC] requestAuthorization initiating", v20, 0xCu);
    swift_arrayDestroy();
    uint64_t v24 = v21;
    a3 = v28;
    MEMORY[0x1C875D230](v24, -1, -1);
    MEMORY[0x1C875D230](v20, -1, -1);
  }

  uint64_t v25 = (void *)v4[2];
  uint64_t v26 = (void *)swift_allocObject();
  v26[2] = a2;
  v26[3] = a3;
  v26[4] = v7;
  aBlock[4] = (uint64_t)sub_1C26D8434;
  aBlock[5] = (uint64_t)v26;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = (uint64_t)sub_1C264ABF4;
  aBlock[3] = (uint64_t)&block_descriptor_13;
  uint64_t v27 = _Block_copy(aBlock);
  sub_1C26121B4(a2);
  swift_release();
  objc_msgSend(v25, sel_requestAuthorizationWithOptions_completionHandler_, v16, v27);
  _Block_release(v27);
}

void sub_1C26D4BD4(char a1, id a2, void (*a3)(void, id))
{
  if (a2)
  {
    id v6 = a2;
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1C277B130();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EBB86280);
    id v8 = a2;
    id v9 = a2;
    uint64_t v10 = sub_1C277B100();
    os_log_type_t v11 = sub_1C277BD20();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v26 = v13;
      *(_DWORD *)uint64_t v12 = 136315394;
      uint64_t v14 = sub_1C277C9E0();
      sub_1C263FDFC(v14, v15, &v26);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2080;
      id v16 = a2;
      sub_1C262B07C(0, (unint64_t *)&qword_1EBB831D0);
      uint64_t v17 = sub_1C277B870();
      sub_1C263FDFC(v17, v18, &v26);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C2601000, v10, v11, "%s [TCC] requestAuthorization error: %s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v13, -1, -1);
      MEMORY[0x1C875D230](v12, -1, -1);
    }
    else
    {
    }
  }
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1C277B130();
  __swift_project_value_buffer(v19, (uint64_t)qword_1EBB86280);
  id v20 = sub_1C277B100();
  os_log_type_t v21 = sub_1C277BD40();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v26 = v23;
    *(_DWORD *)uint64_t v22 = 136315394;
    uint64_t v24 = sub_1C277C9E0();
    sub_1C263FDFC(v24, v25, &v26);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 1024;
    sub_1C277C0D0();
    _os_log_impl(&dword_1C2601000, v20, v21, "%s [TCC] requestAuthorization success: %{BOOL}d", (uint8_t *)v22, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v23, -1, -1);
    MEMORY[0x1C875D230](v22, -1, -1);
  }

  if (a3) {
    a3(a1 & 1, a2);
  }
}

void sub_1C26D4FBC(uint64_t a1, uint64_t a2)
{
  os_log_type_t v3 = *(void **)(v2 + 16);
  v5[4] = a1;
  v5[5] = a2;
  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 1107296256;
  v5[2] = sub_1C260836C;
  v5[3] = &block_descriptor_3;
  uint64_t v4 = _Block_copy(v5);
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel_getNotificationSettingsWithCompletionHandler_, v4);
  _Block_release(v4);
}

uint64_t sub_1C26D5074(void *a1)
{
  return UNUserNotificationCenter.scheduleNotification(_:)(a1);
}

BOOL sub_1C26D5098(NSObject *a1, int a2, NSObject *a3)
{
  Class isa = a3[-1].isa;
  uint64_t v8 = MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v30 - v12;
  if (v14)
  {
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_1C277B130();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EBB86280);
    uint64_t v17 = (void (*)(char *, NSObject *, NSObject *))*((void *)isa + 2);
    v17(v13, a1, a3);
    unint64_t v18 = sub_1C277B100();
    os_log_type_t v19 = sub_1C277BD40();
    int v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v21 = swift_slowAlloc();
      int v31 = v20;
      uint64_t v22 = v21;
      uint64_t v32 = swift_slowAlloc();
      uint64_t v35 = v32;
      *(_DWORD *)uint64_t v22 = 136315394;
      os_log_t v30 = v18;
      uint64_t v23 = sub_1C277C9E0();
      uint64_t v34 = sub_1C263FDFC(v23, v24, &v35);
      int v33 = a2;
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2080;
      v17(v10, v13, a3);
      uint64_t v25 = sub_1C277B860();
      uint64_t v34 = sub_1C263FDFC(v25, v26, &v35);
      LOBYTE(a2) = v33;
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      (*((void (**)(char *, NSObject *))isa + 1))(v13, a3);
      os_log_t v27 = v30;
      _os_log_impl(&dword_1C2601000, v30, (os_log_type_t)v31, "%s Preventing notification coalescing in non-background mode for %s", (uint8_t *)v22, 0x16u);
      uint64_t v28 = v32;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v28, -1, -1);
      MEMORY[0x1C875D230](v22, -1, -1);
    }
    else
    {
      (*((void (**)(char *, NSObject *))isa + 1))(v13, a3);
    }
  }
  else
  {
    uint64_t v35 = (uint64_t)v3[8].isa;
    MEMORY[0x1F4188790](v11);
    *(&v30 - 4) = a3;
    *(&v30 - 3) = v15;
    *(&v30 - 2) = v3;
    *(&v30 - 1) = a1;
    type metadata accessor for UnfairLock();
    sub_1C262AF6C((unint64_t *)&qword_1EBB85390, (void (*)(uint64_t))type metadata accessor for UnfairLock);
    swift_retain();
    sub_1C277AA60();
    swift_release();
  }
  return (a2 & 1) == 0;
}

uint64_t sub_1C26D5468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C277C0B0();
  uint64_t v44 = *(void *)(v11 - 8);
  uint64_t v45 = v11;
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  char v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v40 - v15;
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 16);
  uint64_t v46 = a2;
  uint64_t v43 = a4;
  uint64_t v42 = a4 + 16;
  unint64_t v41 = v17;
  uint64_t v18 = v17(a3, a4);
  uint64_t v20 = v19;
  uint64_t v21 = a1 + 72;
  swift_beginAccess();
  uint64_t v22 = *(void *)(a1 + 72);
  if (*(void *)(v22 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1C2629588(v18, v20);
    if (v24)
    {
      sub_1C26482E4(*(void *)(v22 + 56) + 40 * v23, (uint64_t)&v50);
    }
    else
    {
      uint64_t v52 = 0;
      long long v50 = 0u;
      long long v51 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v52 = 0;
    long long v50 = 0u;
    long long v51 = 0u;
  }
  swift_bridgeObjectRelease();
  uint64_t v26 = v44;
  uint64_t v25 = v45;
  sub_1C26D9748();
  int v27 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v16, v27 ^ 1u, 1, a3);
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v14, v16, v25);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v14, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v25);
    uint64_t v49 = 0;
    long long v47 = 0u;
    long long v48 = 0u;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v46, a3);
LABEL_11:
    uint64_t v34 = v43;
    *((void *)&v51 + 1) = a3;
    uint64_t v52 = v43;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v50);
    (*(void (**)(uint64_t *, char *, uint64_t))(v8 + 32))(boxed_opaque_existential_1, v10, a3);
    sub_1C26D97B0((uint64_t)&v47, (uint64_t (*)(void))sub_1C26D9748);
    goto LABEL_12;
  }
  uint64_t v28 = v43;
  *((void *)&v51 + 1) = a3;
  uint64_t v52 = v43;
  uint64_t v29 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v50);
  os_log_t v30 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v40 = v21;
  uint64_t v31 = v46;
  v30(v29, v46, a3);
  (*(void (**)(long long *__return_ptr, long long *, uint64_t, uint64_t))(v28 + 32))(&v47, &v50, a3, v28);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v50);
  uint64_t v32 = *(void (**)(char *, uint64_t))(v8 + 8);
  v32(v14, a3);
  uint64_t v33 = *((void *)&v48 + 1);
  v30((uint64_t *)v10, v31, a3);
  uint64_t v26 = v44;
  uint64_t v25 = v45;
  if (!v33) {
    goto LABEL_11;
  }
  v32(v10, a3);
  sub_1C261F308(&v47, (uint64_t)&v50);
  uint64_t v34 = v43;
LABEL_12:
  uint64_t v36 = v41(a3, v34);
  uint64_t v38 = v37;
  sub_1C26482E4((uint64_t)&v50, (uint64_t)&v47);
  swift_beginAccess();
  sub_1C267D9C8((uint64_t)&v47, v36, v38);
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v50);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v16, v25);
}

uint64_t sub_1C26D5918(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1C262AFFC(0, &qword_1EA304A48, (uint64_t (*)(uint64_t))sub_1C26D851C, sub_1C26D86BC, MEMORY[0x1E4F1AC50]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = sub_1C26D86F0;
  id v10[3] = v2;
  v10[4] = sub_1C26D86F8;
  v10[5] = v9;
  sub_1C26D851C();
  sub_1C26D86BC();
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C277B4A0();
  sub_1C26D8738();
  uint64_t v11 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
  swift_release();
  return v11;
}

void sub_1C26D5B10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_log_type_t v3 = *(void **)(a3 + 16);
  v5[4] = a1;
  v5[5] = a2;
  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 1107296256;
  v5[2] = sub_1C26D5BC8;
  v5[3] = &block_descriptor_105_0;
  uint64_t v4 = _Block_copy(v5);
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel_getPendingNotificationRequestsWithCompletionHandler_, v4);
  _Block_release(v4);
}

uint64_t sub_1C26D5BC8(uint64_t a1, uint64_t a2)
{
  return sub_1C26D5EB8(a1, a2, (unint64_t *)&qword_1EBB82FC0);
}

uint64_t sub_1C26D5BDC(uint64_t a1, uint64_t a2)
{
  return sub_1C26D5F4C(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C26D7F84);
}

uint64_t sub_1C26D5BF4(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1C262AFFC(0, &qword_1EA304A80, (uint64_t (*)(uint64_t))sub_1C26D87D4, sub_1C26D8960, MEMORY[0x1E4F1AC50]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = sub_1C26D8994;
  id v10[3] = v2;
  v10[4] = sub_1C26D89D4;
  v10[5] = v9;
  sub_1C26D87D4();
  sub_1C26D8960();
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C277B4A0();
  sub_1C26D8A14();
  uint64_t v11 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
  swift_release();
  return v11;
}

void sub_1C26D5DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_log_type_t v3 = *(void **)(a3 + 16);
  v5[4] = a1;
  v5[5] = a2;
  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 1107296256;
  v5[2] = sub_1C26D5EA4;
  v5[3] = &block_descriptor_90;
  uint64_t v4 = _Block_copy(v5);
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel_getDeliveredNotificationsWithCompletionHandler_, v4);
  _Block_release(v4);
}

uint64_t sub_1C26D5EA4(uint64_t a1, uint64_t a2)
{
  return sub_1C26D5EB8(a1, a2, &qword_1EA304850);
}

uint64_t sub_1C26D5EB8(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  os_log_type_t v3 = *(void (**)(uint64_t))(a1 + 32);
  sub_1C2644ED8(0, a3);
  uint64_t v4 = sub_1C277BA40();
  swift_retain();
  v3(v4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C26D5F34(uint64_t a1, uint64_t a2)
{
  return sub_1C26D5F4C(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C26D81AC);
}

uint64_t sub_1C26D5F4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (*(void *)(a2 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = swift_bridgeObjectRetain();
    uint64_t v7 = a3(v6, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v7;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1C26D5FD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  sub_1C26D85D8(0, &qword_1EA304A58, &qword_1EA304A60, (unint64_t *)&qword_1EBB82FC0);
  swift_allocObject();
  swift_retain();
  sub_1C277B480();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a3;
  *(void *)(v9 + 24) = a4;
  sub_1C26D8890(0, &qword_1EA304A60, (unint64_t *)&qword_1EBB82FC0);
  sub_1C26D8644();
  swift_retain();
  sub_1C277B500();
  swift_release();
  return swift_release();
}

uint64_t sub_1C26D6140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  sub_1C26D85D8(0, &qword_1EA304A90, &qword_1EA304A98, &qword_1EA304850);
  swift_allocObject();
  swift_retain();
  sub_1C277B480();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a3;
  *(void *)(v9 + 24) = a4;
  sub_1C26D8890(0, &qword_1EA304A98, &qword_1EA304850);
  sub_1C26D88E8();
  swift_retain();
  sub_1C277B500();
  swift_release();
  return swift_release();
}

uint64_t sub_1C26D62AC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t (*)(uint64_t), uint64_t))
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1C2625618;
  *(void *)(v7 + 24) = v6;
  swift_retain();
  a3(sub_1C26D987C, v7);

  return swift_release();
}

uint64_t sub_1C26D636C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t (*)(uint64_t), uint64_t))
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1C2625618;
  *(void *)(v7 + 24) = v6;
  swift_retain();
  a3(sub_1C26D987C, v7);

  return swift_release();
}

void sub_1C26D642C(uint64_t a1)
{
}

void sub_1C26D6438(uint64_t a1)
{
}

void sub_1C26D6444(uint64_t a1, SEL *a2)
{
  uint64_t v4 = *(void **)(v2 + 16);
  id v5 = (id)sub_1C277BA30();
  objc_msgSend(v4, *a2, v5);
}

uint64_t sub_1C26D64A4()
{
  sub_1C264F668(0, &qword_1EBB82B10, (uint64_t (*)(uint64_t))sub_1C264EC54, sub_1C264ECD4, MEMORY[0x1E4F1AA18]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  id v5 = (char *)&v17 - v4;
  sub_1C264F318();
  uint64_t v17 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v10 = *(_OWORD *)(v0 + 40);
  long long v19 = *(_OWORD *)(v0 + 24);
  long long v20 = v10;
  uint64_t v21 = *(void *)(v0 + 56);
  sub_1C2629B64((uint64_t)&v19);
  uint64_t v18 = sub_1C277BD70();
  uint64_t v11 = swift_allocObject();
  long long v12 = v20;
  *(_OWORD *)(v11 + 16) = v19;
  *(_OWORD *)(v11 + 32) = v12;
  *(void *)(v11 + 48) = v21;
  sub_1C2629B64((uint64_t)&v19);
  sub_1C264EC54();
  sub_1C263E750(0, (unint64_t *)&qword_1EBB82E00, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier, MEMORY[0x1E4FBB320]);
  sub_1C264ECD4();
  sub_1C277B580();
  swift_release();
  swift_release();
  sub_1C264F504();
  uint64_t v13 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1C2606C84((uint64_t)&v19);
  uint64_t v18 = v13;
  swift_retain();
  sub_1C277B330();
  sub_1C264F0F8();
  sub_1C264F19C();
  sub_1C277B5A0();
  swift_release();
  swift_release();
  sub_1C262AF6C(&qword_1EBB82B78, (void (*)(uint64_t))sub_1C264F318);
  uint64_t v14 = v17;
  uint64_t v15 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v14);
  return v15;
}

uint64_t sub_1C26D6800@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = MEMORY[0x1E4FBC868];
  uint64_t v21 = MEMORY[0x1E4FBC868];
  uint64_t v5 = *(void *)(v3 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = (void *)(v3 + 80);
    do
    {
      uint64_t v7 = *(v6 - 1);
      uint64_t v8 = *v6;
      uint64_t v9 = *(v6 - 3);
      uint64_t v10 = *(v6 - 2);
      uint64_t v11 = *(v6 - 4);
      long long v15 = *((_OWORD *)v6 - 3);
      uint64_t v16 = v11;
      uint64_t v17 = v9;
      uint64_t v18 = v10;
      uint64_t v19 = v7;
      uint64_t v20 = v8;
      id v12 = (id)v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C26D9378(&v21, &v15);
      v6 += 7;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    uint64_t v4 = v21;
  }
  uint64_t v13 = sub_1C2629BC0(v4, 0);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v13;
  return result;
}

void sub_1C26D694C(uint64_t a1)
{
  uint64_t v2 = v1;
  int64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1C264872C(0, v3, 0);
    uint64_t v5 = (uint64_t *)(a1 + 80);
    do
    {
      uint64_t v7 = *(v5 - 1);
      uint64_t v6 = *v5;
      unint64_t v9 = *(void *)(v14 + 16);
      unint64_t v8 = *(void *)(v14 + 24);
      swift_bridgeObjectRetain();
      if (v9 >= v8 >> 1) {
        sub_1C264872C(v8 > 1, v9 + 1, 1);
      }
      *(void *)(v14 + 16) = v9 + 1;
      uint64_t v10 = v14 + 16 * v9;
      *(void *)(v10 + 32) = v7;
      *(void *)(v10 + 40) = v6;
      v5 += 7;
      --v3;
    }
    while (v3);
  }
  uint64_t v11 = *(void **)(v2 + 16);
  id v12 = (void *)sub_1C277BA30();
  objc_msgSend(v11, sel_removePendingNotificationRequestsWithIdentifiers_, v12);

  id v13 = (id)sub_1C277BA30();
  objc_msgSend(v11, sel_removeDeliveredNotificationsWithIdentifiers_, v13);
  swift_bridgeObjectRelease();
}

uint64_t sub_1C26D6A98(uint64_t a1, uint64_t (*a2)(_OWORD *))
{
  if (a2)
  {
    uint64_t v2 = *(void *)(a1 + 48);
    long long v4 = *(_OWORD *)(a1 + 16);
    long long v3 = *(_OWORD *)(a1 + 32);
    v7[0] = *(_OWORD *)a1;
    v7[1] = v4;
    v7[2] = v3;
    uint64_t v8 = v2;
    char v5 = a2(v7);
  }
  else
  {
    char v5 = 1;
  }
  return v5 & 1;
}

uint64_t sub_1C26D6AFC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v33 = a2;
  uint64_t v34 = a5;
  uint64_t v32 = a3;
  sub_1C264EDE4();
  uint64_t v35 = v10;
  uint64_t v38 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  id v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C264F388();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v36 = v13;
  uint64_t v37 = v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C262AFFC(0, &qword_1EBB82B30, (uint64_t (*)(uint64_t))sub_1C264F388, sub_1C26D8D58, MEMORY[0x1E4F1AA28]);
  uint64_t v31 = v17;
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v30 - v19;
  sub_1C26D694C(a1);
  uint64_t v39 = a1;
  sub_1C263E750(0, (unint64_t *)&qword_1EBB82E00, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier, MEMORY[0x1E4FBB320]);
  swift_bridgeObjectRetain();
  sub_1C277B440();
  uint64_t v21 = (void *)swift_allocObject();
  uint64_t v22 = v33;
  v21[2] = v32;
  v21[3] = a4;
  uint64_t v23 = v34;
  v21[4] = v22;
  _OWORD v21[5] = v23;
  v21[6] = a6;
  v21[7] = v6;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  id v24 = v22;
  sub_1C277B330();
  sub_1C26D8FE8(0, (unint64_t *)&qword_1EBB82C38, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier, MEMORY[0x1E4F1AAE0]);
  sub_1C262AF6C(&qword_1EBB82CE0, (void (*)(uint64_t))sub_1C264EDE4);
  sub_1C26D91F4(&qword_1EBB82C30, (unint64_t *)&qword_1EBB82C38, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier);
  uint64_t v25 = v35;
  sub_1C277B610();
  swift_release();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v25);
  sub_1C26D8D58();
  uint64_t v26 = v36;
  sub_1C277B590();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v16, v26);
  sub_1C26D8D94();
  uint64_t v27 = v31;
  uint64_t v28 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v27);
  return v28;
}

uint64_t sub_1C26D6EEC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v43 = a7;
  uint64_t v44 = a5;
  sub_1C26D8E30();
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *a1;
  uint64_t v46 = MEMORY[0x1E4FBC860];
  if (a3)
  {
    type metadata accessor for PluginContentStateManager();
    uint64_t inited = swift_initStackObject();
    uint64_t v42 = v15;
    uint64_t v21 = inited;
    *(void *)(inited + 16) = a2;
    *(void *)(inited + 24) = a3;
    id v22 = objc_allocWithZone(MEMORY[0x1E4F2B138]);
    uint64_t v41 = 0;
    uint64_t v23 = v18;
    uint64_t v24 = a6;
    uint64_t v25 = v16;
    uint64_t v26 = v19;
    uint64_t v27 = a8;
    id v28 = v22;
    swift_bridgeObjectRetain();
    id v29 = a4;
    uint64_t v30 = (void *)sub_1C277B820();
    uint64_t v31 = v28;
    a8 = v27;
    uint64_t v19 = v26;
    uint64_t v16 = v25;
    a6 = v24;
    uint64_t v18 = v23;
    id v32 = objc_msgSend(v31, sel_initWithCategory_domainName_healthStore_, 1, v30, v29);

    *(void *)(v21 + 32) = v32;
    swift_retain();
    uint64_t v33 = sub_1C26D7718(v19, v21);
    swift_release();
    sub_1C2768C50(v33);
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    uint64_t v34 = *(void **)(v21 + 32);
    uint64_t v15 = v42;
  }
  if (a6)
  {
    type metadata accessor for HealthAppNotificationContentStateManager();
    uint64_t v35 = *(void **)(v43 + 48);
    swift_bridgeObjectRetain();
    id v36 = v35;
    uint64_t v37 = HealthAppNotificationContentStateManager.__allocating_init(healthStore:domain:)(v36, v44, a6);
    uint64_t v38 = sub_1C26D7A5C(v19, v37);
    sub_1C2768C50(v38);
    swift_release();
  }
  uint64_t v45 = v46;
  sub_1C26D8FE8(0, (unint64_t *)&qword_1EBB82C38, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier, MEMORY[0x1E4F1AAE0]);
  sub_1C26D8ED8();
  sub_1C26D91F4(&qword_1EBB82C30, (unint64_t *)&qword_1EBB82C38, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier);
  sub_1C262AF6C(&qword_1EBB82E30, (void (*)(uint64_t))sub_1C26D8ED8);
  sub_1C277B2A0();
  sub_1C262AF6C(&qword_1EBB82BB8, (void (*)(uint64_t))sub_1C26D8E30);
  uint64_t v39 = sub_1C277B4E0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  *a8 = v39;
  return result;
}

uint64_t HealthAppNotificationManager.deinit()
{
  uint64_t v1 = *(void **)(v0 + 48);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C26D72B0(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1C262AFFC(0, &qword_1EA304A48, (uint64_t (*)(uint64_t))sub_1C26D851C, sub_1C26D86BC, MEMORY[0x1E4F1AC50]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = sub_1C26D86F0;
  id v10[3] = v2;
  v10[4] = sub_1C26D9818;
  v10[5] = v9;
  sub_1C26D851C();
  sub_1C26D86BC();
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C277B4A0();
  sub_1C26D8738();
  uint64_t v11 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
  swift_release();
  return v11;
}

uint64_t sub_1C26D74A8(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1C262AFFC(0, &qword_1EA304A80, (uint64_t (*)(uint64_t))sub_1C26D87D4, sub_1C26D8960, MEMORY[0x1E4F1AC50]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = sub_1C26D8994;
  id v10[3] = v2;
  v10[4] = sub_1C26D9814;
  v10[5] = v9;
  sub_1C26D87D4();
  sub_1C26D8960();
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C277B4A0();
  sub_1C26D8A14();
  uint64_t v11 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
  swift_release();
  return v11;
}

void sub_1C26D76A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1C26D76AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1C26D76B8(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v6 = *(void **)(v4 + 16);
  id v7 = (id)sub_1C277BA30();
  objc_msgSend(v6, *a4, v7);
}

uint64_t sub_1C26D7718(uint64_t a1, uint64_t a2)
{
  sub_1C26D8F54();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v10)
  {
    uint64_t v26 = v2;
    uint64_t v36 = MEMORY[0x1E4FBC860];
    uint64_t v30 = v7;
    sub_1C277C3C0();
    id v12 = (long long *)(a1 + 32);
    sub_1C263E750(0, (unint64_t *)&qword_1EBB85EA0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v29 = v13;
    uint64_t v14 = (void (**)(char *, uint64_t))(v6 + 8);
    long long v28 = xmmword_1C277E480;
    uint64_t v27 = MEMORY[0x1E4FBC848] + 8;
    do
    {
      long long v15 = v12[2];
      long long v33 = v12[1];
      *(_OWORD *)uint64_t v34 = v15;
      *(void *)&v34[16] = *((void *)v12 + 6);
      long long v16 = *v12;
      id v12 = (long long *)((char *)v12 + 56);
      long long v32 = v16;
      long long v35 = *(_OWORD *)&v34[8];
      uint64_t v17 = *(void **)(a2 + 32);
      uint64_t v18 = swift_allocObject();
      long long v19 = *(_OWORD *)&v34[8];
      *(_OWORD *)(v18 + 16) = v28;
      *(_OWORD *)(v18 + 32) = v19;
      sub_1C265D7F0((id *)&v32);
      id v20 = v17;
      sub_1C26D90E8((uint64_t)&v35);
      uint64_t v21 = sub_1C277BD80();

      swift_bridgeObjectRelease();
      uint64_t v31 = v21;
      uint64_t v22 = swift_allocObject();
      long long v23 = v33;
      *(_OWORD *)(v22 + 16) = v32;
      *(_OWORD *)(v22 + 32) = v23;
      *(_OWORD *)(v22 + 48) = *(_OWORD *)v34;
      *(void *)(v22 + 64) = *(void *)&v34[16];
      uint64_t v24 = swift_allocObject();
      *(void *)(v24 + 16) = sub_1C26D9874;
      *(void *)(v24 + 24) = v22;
      sub_1C265D7F0((id *)&v32);
      sub_1C26D8FE8(0, (unint64_t *)&qword_1EBB82D88, v27, MEMORY[0x1E4F1AC28]);
      sub_1C26D9068();
      sub_1C277B500();
      swift_release();
      swift_release();
      sub_1C262AF6C(&qword_1EA304AB8, (void (*)(uint64_t))sub_1C26D8F54);
      uint64_t v25 = v30;
      sub_1C277B4E0();
      (*v14)(v9, v25);
      sub_1C269B13C((void **)&v32);
      sub_1C277C390();
      sub_1C277C3D0();
      sub_1C277C3E0();
      sub_1C277C3A0();
      --v10;
    }
    while (v10);
    return v36;
  }
  return result;
}

uint64_t sub_1C26D7A5C(uint64_t a1, uint64_t a2)
{
  sub_1C26D9140();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v10)
  {
    v20[1] = v2;
    uint64_t v25 = MEMORY[0x1E4FBC860];
    sub_1C277C3C0();
    void v20[2] = a2;
    id v12 = (long long *)(a1 + 32);
    uint64_t v13 = MEMORY[0x1E4FBC848] + 8;
    do
    {
      long long v14 = v12[2];
      long long v22 = v12[1];
      long long v23 = v14;
      long long v21 = *v12;
      uint64_t v24 = *((void *)v12 + 6);
      uint64_t v15 = v24;
      uint64_t v16 = *((void *)&v14 + 1);
      sub_1C265D7F0((id *)&v21);
      v20[3] = sub_1C26C3E14(v16, v15);
      uint64_t v17 = swift_allocObject();
      long long v18 = v22;
      *(_OWORD *)(v17 + 16) = v21;
      *(_OWORD *)(v17 + 32) = v18;
      *(_OWORD *)(v17 + 48) = v23;
      *(void *)(v17 + 64) = v24;
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = sub_1C26D92AC;
      *(void *)(v19 + 24) = v17;
      sub_1C265D7F0((id *)&v21);
      sub_1C26D8FE8(0, &qword_1EBB82CD0, v13, MEMORY[0x1E4F1AAE0]);
      sub_1C26D91F4(&qword_1EBB82CC8, &qword_1EBB82CD0, v13);
      sub_1C277B500();
      swift_release();
      swift_release();
      sub_1C262AF6C(&qword_1EA304AC0, (void (*)(uint64_t))sub_1C26D9140);
      sub_1C277B4E0();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      sub_1C269B13C((void **)&v21);
      sub_1C277C390();
      sub_1C277C3D0();
      sub_1C277C3E0();
      sub_1C277C3A0();
      id v12 = (long long *)((char *)v12 + 56);
      --v10;
    }
    while (v10);
    return v25;
  }
  return result;
}

void sub_1C26D7D2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v18 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t i = 0;
  if (v6) {
    goto LABEL_24;
  }
LABEL_6:
  int64_t v8 = i + 1;
  if (!__OFADD__(i, 1))
  {
    if (v8 < v18)
    {
      unint64_t v9 = *(void *)(v17 + 8 * v8);
      ++i;
      if (v9) {
        goto LABEL_20;
      }
      int64_t i = v8 + 1;
      if (v8 + 1 < v18)
      {
        unint64_t v9 = *(void *)(v17 + 8 * i);
        if (v9) {
          goto LABEL_20;
        }
        int64_t i = v8 + 2;
        if (v8 + 2 < v18)
        {
          unint64_t v9 = *(void *)(v17 + 8 * i);
          if (v9) {
            goto LABEL_20;
          }
          int64_t i = v8 + 3;
          if (v8 + 3 < v18)
          {
            unint64_t v9 = *(void *)(v17 + 8 * i);
            if (v9) {
              goto LABEL_20;
            }
            int64_t v10 = v8 + 4;
            if (v10 < v18)
            {
              unint64_t v9 = *(void *)(v17 + 8 * v10);
              for (int64_t i = v10; !v9; ++v10)
              {
                int64_t i = v10 + 1;
                if (__OFADD__(v10, 1)) {
                  goto LABEL_27;
                }
                if (i >= v18) {
                  goto LABEL_25;
                }
                unint64_t v9 = *(void *)(v17 + 8 * i);
              }
LABEL_20:
              unint64_t v6 = (v9 - 1) & v9;
              for (unint64_t j = __clz(__rbit64(v9)) + (i << 6); ; unint64_t j = v16 | (i << 6))
              {
                id v12 = *(id *)(*(void *)(a1 + 48) + 8 * j);
                id v13 = objc_msgSend(v12, sel_profileIdentifier);
                sub_1C269B088(a2, (uint64_t)&v19);
                sub_1C269B088((uint64_t)&v19, (uint64_t)&v20);
                if (v20)
                {
                  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85F30);
                  id v14 = v13;
                  sub_1C269B0E4(&v19);
                  char v15 = sub_1C277C030();
                  sub_1C269B110(&v19);

                  if (v15) {
                    break;
                  }

                  if (!v6) {
                    goto LABEL_6;
                  }
                }
                else
                {

                  if (!v6) {
                    goto LABEL_6;
                  }
                }
LABEL_24:
                unint64_t v16 = __clz(__rbit64(v6));
                v6 &= v6 - 1;
              }
            }
          }
        }
      }
    }
LABEL_25:
    swift_release();
    return;
  }
  __break(1u);
LABEL_27:
  __break(1u);
}

uint64_t sub_1C26D7F84(unint64_t a1, void *a2)
{
  unint64_t v3 = a1;
  uint64_t v25 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_33;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      unint64_t v19 = v3;
      unint64_t v5 = 0;
      uint64_t v23 = v3 & 0xFFFFFFFFFFFFFF8;
      unint64_t v24 = v3 & 0xC000000000000001;
      uint64_t v21 = v4;
      long long v22 = (void *)(v3 + 32);
      uint64_t v20 = a2 + 7;
      while (1)
      {
        if (v24)
        {
          id v6 = (id)MEMORY[0x1C875C230](v5, v19);
        }
        else
        {
          if (v5 >= *(void *)(v23 + 16))
          {
            __break(1u);
LABEL_31:
            __break(1u);
            goto LABEL_32;
          }
          id v6 = (id)v22[v5];
        }
        uint64_t v7 = v6;
        if (__OFADD__(v5++, 1)) {
          goto LABEL_31;
        }
        id v9 = objc_msgSend(v6, sel_identifier);
        uint64_t v10 = sub_1C277B850();
        unint64_t v3 = (unint64_t)v11;

        id v12 = (void *)a2[2];
        if (v12) {
          break;
        }

        swift_bridgeObjectRelease();
LABEL_5:
        if (v5 == v4) {
          return v25;
        }
      }
      id v13 = a2;
      BOOL v14 = a2[4] == v10 && a2[5] == v3;
      if (v14 || (sub_1C277C7E0() & 1) != 0) {
        break;
      }
      if (v12 == (void *)1)
      {
LABEL_27:

        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
      char v15 = v20;
      uint64_t v16 = 1;
      while (1)
      {
        a2 = (void *)(v16 + 1);
        if (__OFADD__(v16, 1)) {
          break;
        }
        BOOL v17 = *(v15 - 1) == v10 && *v15 == v3;
        if (v17 || (sub_1C277C7E0() & 1) != 0) {
          goto LABEL_16;
        }
        v15 += 2;
        ++v16;
        if (a2 == v12) {
          goto LABEL_27;
        }
      }
LABEL_32:
      __break(1u);
LABEL_33:
      uint64_t v4 = sub_1C277C5A0();
      if (!v4) {
        return MEMORY[0x1E4FBC860];
      }
    }
LABEL_16:
    swift_bridgeObjectRelease();
    sub_1C277C390();
    sub_1C277C3D0();
    sub_1C277C3E0();
    unint64_t v3 = (unint64_t)&v25;
    sub_1C277C3A0();
LABEL_17:
    uint64_t v4 = v21;
    a2 = v13;
    goto LABEL_5;
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C26D81AC(unint64_t a1, void *a2)
{
  unint64_t v3 = a1;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_33;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      unint64_t v20 = v3;
      unint64_t v5 = 0;
      uint64_t v24 = v3 & 0xFFFFFFFFFFFFFF8;
      unint64_t v25 = v3 & 0xC000000000000001;
      uint64_t v22 = v4;
      uint64_t v23 = (void *)(v3 + 32);
      uint64_t v21 = a2 + 7;
      while (1)
      {
        if (v25)
        {
          id v6 = (id)MEMORY[0x1C875C230](v5, v20);
        }
        else
        {
          if (v5 >= *(void *)(v24 + 16))
          {
            __break(1u);
LABEL_31:
            __break(1u);
            goto LABEL_32;
          }
          id v6 = (id)v23[v5];
        }
        uint64_t v7 = v6;
        if (__OFADD__(v5++, 1)) {
          goto LABEL_31;
        }
        id v9 = objc_msgSend(v6, sel_request);
        id v10 = objc_msgSend(v9, sel_identifier);

        uint64_t v11 = sub_1C277B850();
        unint64_t v3 = (unint64_t)v12;

        id v13 = (void *)a2[2];
        if (v13) {
          break;
        }

        swift_bridgeObjectRelease();
LABEL_5:
        if (v5 == v4) {
          return v26;
        }
      }
      BOOL v14 = a2;
      BOOL v15 = a2[4] == v11 && a2[5] == v3;
      if (v15 || (sub_1C277C7E0() & 1) != 0) {
        break;
      }
      if (v13 == (void *)1)
      {
LABEL_27:

        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
      uint64_t v16 = v21;
      uint64_t v17 = 1;
      while (1)
      {
        a2 = (void *)(v17 + 1);
        if (__OFADD__(v17, 1)) {
          break;
        }
        BOOL v18 = *(v16 - 1) == v11 && *v16 == v3;
        if (v18 || (sub_1C277C7E0() & 1) != 0) {
          goto LABEL_16;
        }
        v16 += 2;
        ++v17;
        if (a2 == v13) {
          goto LABEL_27;
        }
      }
LABEL_32:
      __break(1u);
LABEL_33:
      uint64_t v4 = sub_1C277C5A0();
      if (!v4) {
        return MEMORY[0x1E4FBC860];
      }
    }
LABEL_16:
    swift_bridgeObjectRelease();
    sub_1C277C390();
    sub_1C277C3D0();
    sub_1C277C3E0();
    unint64_t v3 = (unint64_t)&v26;
    sub_1C277C3A0();
LABEL_17:
    uint64_t v4 = v22;
    a2 = v14;
    goto LABEL_5;
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C26D83F4()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1C26D8434(char a1, void *a2)
{
  sub_1C26D4BD4(a1, a2, *(void (**)(void, id))(v2 + 16));
}

uint64_t sub_1C26D8440()
{
  return sub_1C26D5468(v0[4], v0[5], v0[2], v0[3]);
}

uint64_t sub_1C26D844C()
{
  return sub_1C262AF6C(&qword_1EBB82CB8, (void (*)(uint64_t))sub_1C264F068);
}

unint64_t sub_1C26D8480()
{
  unint64_t result = qword_1EA304A40;
  if (!qword_1EA304A40)
  {
    sub_1C262AFFC(255, &qword_1EBB82BD8, (uint64_t (*)(uint64_t))sub_1C264F068, sub_1C26D844C, MEMORY[0x1E4F1AA98]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304A40);
  }
  return result;
}

void sub_1C26D851C()
{
  if (!qword_1EA304A50)
  {
    sub_1C26D85D8(255, &qword_1EA304A58, &qword_1EA304A60, (unint64_t *)&qword_1EBB82FC0);
    sub_1C26D8890(255, &qword_1EA304A60, (unint64_t *)&qword_1EBB82FC0);
    sub_1C26D8644();
    unint64_t v0 = sub_1C277B1E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA304A50);
    }
  }
}

void sub_1C26D85D8(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  if (!*a2)
  {
    sub_1C26D8890(255, a3, a4);
    unint64_t v5 = sub_1C277B470();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1C26D8644()
{
  unint64_t result = qword_1EA304A68;
  if (!qword_1EA304A68)
  {
    sub_1C26D85D8(255, &qword_1EA304A58, &qword_1EA304A60, (unint64_t *)&qword_1EBB82FC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304A68);
  }
  return result;
}

uint64_t sub_1C26D86BC()
{
  return sub_1C262AF6C(&qword_1EA304A70, (void (*)(uint64_t))sub_1C26D851C);
}

void sub_1C26D86F0(uint64_t a1, uint64_t a2)
{
  sub_1C26D5B10(a1, a2, v2);
}

uint64_t sub_1C26D86F8(uint64_t a1)
{
  return sub_1C26D5F4C(a1, *(void *)(v1 + 16), (uint64_t (*)(uint64_t, uint64_t))sub_1C26D7F84);
}

uint64_t sub_1C26D872C()
{
  return sub_1C26D5FD4(v0[2], v0[3], v0[4], v0[5]);
}

unint64_t sub_1C26D8738()
{
  unint64_t result = qword_1EA304A78;
  if (!qword_1EA304A78)
  {
    sub_1C262AFFC(255, &qword_1EA304A48, (uint64_t (*)(uint64_t))sub_1C26D851C, sub_1C26D86BC, MEMORY[0x1E4F1AC50]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304A78);
  }
  return result;
}

void sub_1C26D87D4()
{
  if (!qword_1EA304A88)
  {
    sub_1C26D85D8(255, &qword_1EA304A90, &qword_1EA304A98, &qword_1EA304850);
    sub_1C26D8890(255, &qword_1EA304A98, &qword_1EA304850);
    sub_1C26D88E8();
    unint64_t v0 = sub_1C277B1E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA304A88);
    }
  }
}

void sub_1C26D8890(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C2644ED8(255, a3);
    unint64_t v4 = sub_1C277BB20();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1C26D88E8()
{
  unint64_t result = qword_1EA304AA0;
  if (!qword_1EA304AA0)
  {
    sub_1C26D85D8(255, &qword_1EA304A90, &qword_1EA304A98, &qword_1EA304850);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304AA0);
  }
  return result;
}

uint64_t sub_1C26D8960()
{
  return sub_1C262AF6C(&qword_1EA304AA8, (void (*)(uint64_t))sub_1C26D87D4);
}

void sub_1C26D8994(uint64_t a1, uint64_t a2)
{
  sub_1C26D5DEC(a1, a2, v2);
}

uint64_t sub_1C26D899C()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C26D89D4(uint64_t a1)
{
  return sub_1C26D5F4C(a1, *(void *)(v1 + 16), (uint64_t (*)(uint64_t, uint64_t))sub_1C26D81AC);
}

uint64_t sub_1C26D8A08()
{
  return sub_1C26D6140(v0[2], v0[3], v0[4], v0[5]);
}

unint64_t sub_1C26D8A14()
{
  unint64_t result = qword_1EA304AB0;
  if (!qword_1EA304AB0)
  {
    sub_1C262AFFC(255, &qword_1EA304A80, (uint64_t (*)(uint64_t))sub_1C26D87D4, sub_1C26D8960, MEMORY[0x1E4F1AC50]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304AB0);
  }
  return result;
}

uint64_t sub_1C26D8AB4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C26D6800(a1, a2);
}

uint64_t sub_1C26D8AC0()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t method lookup function for HealthAppNotificationManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HealthAppNotificationManager);
}

uint64_t dispatch thunk of HealthAppNotificationManager.__allocating_init(notificationCenter:notificationManagerStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of HealthAppNotificationManager.requestAuthorization(addCriticalAlerts:completionHandler:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of HealthAppNotificationManager.getNotificationSettings(completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of HealthAppNotificationManager.scheduleUserNotification(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of HealthAppNotificationManager.scheduleCoalescingNotification<A>(for:environment:)(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 216))(a1, a2 & 1);
}

uint64_t dispatch thunk of HealthAppNotificationManager.getPendingNotifications(with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of HealthAppNotificationManager.getDeliveredNotifications(with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of HealthAppNotificationManager.removePendingNotifications(with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of HealthAppNotificationManager.removeDeliveredNotifications(with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of HealthAppNotificationManager.removeAllPluginFeedItemNotifications()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

void sub_1C26D8C8C()
{
  if (!qword_1EBB82A80)
  {
    sub_1C264EDE4();
    sub_1C262B07C(255, (unint64_t *)&qword_1EBB831D0);
    sub_1C262AF6C(&qword_1EBB82CE0, (void (*)(uint64_t))sub_1C264EDE4);
    unint64_t v0 = sub_1C277B1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB82A80);
    }
  }
}

uint64_t sub_1C26D8D58()
{
  return sub_1C262AF6C(&qword_1EBB82B58, (void (*)(uint64_t))sub_1C264F388);
}

unint64_t sub_1C26D8D94()
{
  unint64_t result = qword_1EBB82B28;
  if (!qword_1EBB82B28)
  {
    sub_1C262AFFC(255, &qword_1EBB82B30, (uint64_t (*)(uint64_t))sub_1C264F388, sub_1C26D8D58, MEMORY[0x1E4F1AA28]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB82B28);
  }
  return result;
}

void sub_1C26D8E30()
{
  if (!qword_1EBB82BC0)
  {
    sub_1C26D8FE8(255, (unint64_t *)&qword_1EBB82C38, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier, MEMORY[0x1E4F1AAE0]);
    sub_1C26D91F4(&qword_1EBB82C30, (unint64_t *)&qword_1EBB82C38, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier);
    unint64_t v0 = sub_1C277B290();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB82BC0);
    }
  }
}

void sub_1C26D8ED8()
{
  if (!qword_1EBB82E28)
  {
    sub_1C26D8FE8(255, (unint64_t *)&qword_1EBB82C38, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier, MEMORY[0x1E4F1AAE0]);
    unint64_t v0 = sub_1C277BB20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB82E28);
    }
  }
}

void sub_1C26D8F54()
{
  if (!qword_1EBB82AD0)
  {
    sub_1C26D8FE8(255, (unint64_t *)&qword_1EBB82D88, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4F1AC28]);
    sub_1C26D9068();
    unint64_t v0 = sub_1C277B1E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB82AD0);
    }
  }
}

void sub_1C26D8FE8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C262B07C(255, (unint64_t *)&qword_1EBB831D0);
    unint64_t v9 = a4(a1, a3, v8, MEMORY[0x1E4FBC0F0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_1C26D9068()
{
  unint64_t result = qword_1EBB82D80;
  if (!qword_1EBB82D80)
  {
    sub_1C26D8FE8(255, (unint64_t *)&qword_1EBB82D88, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4F1AC28]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB82D80);
  }
  return result;
}

uint64_t sub_1C26D90E8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C26D9118()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_1C26D9140()
{
  if (!qword_1EBB82AB8)
  {
    uint64_t v0 = MEMORY[0x1E4FBC848] + 8;
    sub_1C26D8FE8(255, &qword_1EBB82CD0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4F1AAE0]);
    sub_1C26D91F4(&qword_1EBB82CC8, &qword_1EBB82CD0, v0);
    unint64_t v1 = sub_1C277B1E0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBB82AB8);
    }
  }
}

uint64_t sub_1C26D91F4(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C26D8FE8(255, a2, a3, MEMORY[0x1E4F1AAE0]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroy_42Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 72, 7);
}

id *sub_1C26D92AC@<X0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 48);
  *(void *)(a1 + 48) = *(void *)(v1 + 64);
  return sub_1C265D7F0((id *)(v1 + 16));
}

uint64_t objectdestroy_8Tm()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t objectdestroy_39Tm_0()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1C26D9368@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C26D6EEC(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), a2);
}

uint64_t sub_1C26D9378(uint64_t *a1, long long *a2)
{
  long long v3 = a2[1];
  long long v32 = *a2;
  long long v33 = v3;
  long long v34 = a2[2];
  uint64_t v35 = *((void *)a2 + 6);
  uint64_t v4 = *a1;
  swift_bridgeObjectRetain();
  sub_1C265D7F0((id *)&v32);
  sub_1C26D7D2C(v4, (uint64_t)&v32);
  uint64_t v6 = v5;
  sub_1C269B13C((void **)&v32);
  uint64_t result = swift_bridgeObjectRelease();
  if (v6)
  {
    uint64_t v8 = *a1;
    if (*(void *)(*a1 + 16))
    {
      id v9 = v6;
      unint64_t v10 = sub_1C2673384((uint64_t)v9);
      if (v11)
      {
        id v12 = *(void **)(*(void *)(v8 + 56) + 8 * v10);
        swift_bridgeObjectRetain();
      }
      else
      {
        id v12 = (void *)MEMORY[0x1E4FBC860];
      }
    }
    else
    {
      id v12 = (void *)MEMORY[0x1E4FBC860];
    }
    sub_1C265D7F0((id *)&v32);
    swift_bridgeObjectRetain();
    uint64_t v23 = v12;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v23 = sub_1C26907BC(0, v12[2] + 1, 1, v12);
    }
    unint64_t v25 = v23[2];
    unint64_t v24 = v23[3];
    if (v25 >= v24 >> 1) {
      uint64_t v23 = sub_1C26907BC((void *)(v24 > 1), v25 + 1, 1, v23);
    }
    v23[2] = v25 + 1;
    uint64_t v26 = &v23[7 * v25];
    long long v27 = v32;
    long long v28 = v33;
    long long v29 = v34;
    v26[10] = v35;
    *((_OWORD *)v26 + 3) = v28;
    *((_OWORD *)v26 + 4) = v29;
    *((_OWORD *)v26 + 2) = v27;
    swift_bridgeObjectRelease();
    id v30 = v6;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v36 = *a1;
    *a1 = 0x8000000000000000;
    sub_1C268BCF8((uint64_t)v23, v30, isUniquelyReferenced_nonNull_native);
    *a1 = v36;
  }
  else
  {
    id v13 = (void *)v32;
    if (!(void)v32) {
      return result;
    }
    id v14 = objc_allocWithZone(MEMORY[0x1E4F2B0B8]);
    id v15 = v13;
    id v16 = objc_msgSend(v14, sel_init);
    objc_msgSend(v16, sel_setProfileIdentifier_, v15);
    objc_msgSend(v16, sel_resume);

    sub_1C263E750(0, &qword_1EA304270, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier, MEMORY[0x1E4FBBE00]);
    uint64_t v17 = swift_allocObject();
    long long v18 = v32;
    long long v19 = v33;
    *(_OWORD *)(v17 + 16) = xmmword_1C277E480;
    *(_OWORD *)(v17 + 32) = v18;
    long long v20 = v34;
    *(_OWORD *)(v17 + 48) = v19;
    *(_OWORD *)(v17 + 64) = v20;
    *(void *)(v17 + 80) = v35;
    sub_1C265D7F0((id *)&v32);
    id v21 = v16;
    char v22 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v36 = *a1;
    *a1 = 0x8000000000000000;
    sub_1C268BCF8(v17, v21, v22);
    *a1 = v36;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C26D9650(uint64_t a1, uint64_t a2)
{
  return sub_1C26D636C(a1, a2, *(void (**)(uint64_t (*)(uint64_t), uint64_t))(v2 + 16));
}

uint64_t sub_1C26D9658@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 16))(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1C26D968C(uint64_t a1, uint64_t a2)
{
  return sub_1C26D62AC(a1, a2, *(void (**)(uint64_t (*)(uint64_t), uint64_t))(v2 + 16));
}

uint64_t sub_1C26D9694()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C26D96CC()
{
  if (!qword_1EA304AC8)
  {
    sub_1C262B07C(255, (unint64_t *)&qword_1EA3044C0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA304AC8);
    }
  }
}

void sub_1C26D9748()
{
  if (!qword_1EA3044B8)
  {
    sub_1C262B07C(255, (unint64_t *)&qword_1EA3044C0);
    unint64_t v0 = sub_1C277C0B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA3044B8);
    }
  }
}

uint64_t sub_1C26D97B0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id EncodedFeatureTag.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id EncodedFeatureTag.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for EncodedFeatureTag();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for EncodedFeatureTag()
{
  return self;
}

id EncodedFeatureTag.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EncodedFeatureTag();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t FileMonitorPublisher.init(url:event:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_DWORD *)a3 = -1;
  *(void *)(a3 + 8) = 0;
  uint64_t v6 = type metadata accessor for FileMonitorPublisher();
  uint64_t v7 = a3 + *(int *)(v6 + 24);
  uint64_t v8 = sub_1C277A750();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7, a1, v8);
  uint64_t v9 = a3 + *(int *)(v6 + 28);
  uint64_t v10 = sub_1C277BF20();
  char v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);

  return v11(v9, a2, v10);
}

uint64_t FileMonitorPublisher.receive<A>(subscriber:)(uint64_t a1, uint64_t a2)
{
  v15[1] = a2;
  uint64_t v16 = a1;
  uint64_t v3 = sub_1C277BF20();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C277A750();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FileMonitorPublisher.Inner();
  uint64_t v12 = type metadata accessor for FileMonitorPublisher();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v2 + *(int *)(v12 + 24), v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2 + *(int *)(v12 + 28), v3);
  id v13 = sub_1C26DBB14(v16, (uint64_t)v10, (uint64_t)v6);
  void v17[3] = v11;
  id v17[4] = swift_getWitnessTable();
  v17[0] = v13;
  sub_1C277B2D0();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
}

uint64_t type metadata accessor for FileMonitorPublisher.Inner()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C26D9CF4@<X0>(uint64_t a1@<X8>)
{
  return sub_1C26482E4((uint64_t)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x60), a1);
}

uint64_t sub_1C26D9D24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x68);
  swift_beginAccess();
  uint64_t v4 = sub_1C277ABA0();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1C26D9DF8(uint64_t a1)
{
  uint64_t v3 = (char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x68);
  swift_beginAccess();
  uint64_t v4 = sub_1C277ABA0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_1C26D9ED4())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C26D9F4C()
{
  return *(unsigned int *)((char *)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88));
}

uint64_t sub_1C26D9F78(uint64_t result)
{
  *(_DWORD *)((char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x88)) = result;
  return result;
}

uint64_t sub_1C26D9FA4(uint64_t a1)
{
  *(void *)((char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x90)) = a1;
  return swift_unknownObjectRelease();
}

uint64_t sub_1C26D9FD8()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)(*MEMORY[0x1E4FBC8C8] & *v0);
  uint64_t v3 = sub_1C277B630();
  uint64_t v40 = *(void (***)(char *, uint64_t))(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C277B660();
  uint64_t v39 = *(uint8_t **)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v2[11];
  uint64_t v41 = v2[10];
  sub_1C277AB80();
  swift_getWitnessTable();
  uint64_t v10 = sub_1C277C990();
  uint64_t result = MEMORY[0x1F4188790](v10);
  id v14 = (char *)&v37 - v13;
  if (!*(void *)((char *)v1 + v2[18]) && *(_DWORD *)((char *)v1 + v2[17]) == -1)
  {
    uint64_t v37 = v12;
    uint64_t v38 = v9;
    id v15 = (void (**)(char *, uint64_t))((char *)v1 + v2[14]);
    uint64_t v16 = (void *)sub_1C277A6A0();
    objc_msgSend(v16, sel_fileSystemRepresentation);
    id v17 = v16;
    int v18 = sub_1C277B140();
    long long v19 = (void *)MEMORY[0x1E4FBC8C8];
    *(_DWORD *)((char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x88)) = v18;
    if (*(_DWORD *)((char *)v1 + *(void *)((*v19 & *v1) + 0x88)) == -1)
    {
      uint64_t v40 = v15;
      if (qword_1EBB86260 != -1) {
        swift_once();
      }
      uint64_t v26 = sub_1C277B130();
      __swift_project_value_buffer(v26, (uint64_t)qword_1EBB86280);
      long long v27 = v1;
      long long v28 = sub_1C277B100();
      os_log_type_t v29 = sub_1C277BD20();
      if (os_log_type_enabled(v28, v29))
      {
        id v30 = (uint8_t *)swift_slowAlloc();
        uint64_t v31 = swift_slowAlloc();
        uint64_t aBlock = v31;
        *(_DWORD *)id v30 = 136380675;
        uint64_t v39 = v30 + 4;
        sub_1C277A750();
        sub_1C26DC5C8((unint64_t *)&qword_1EA304AD0, MEMORY[0x1E4F276F0]);
        uint64_t v32 = sub_1C277C7B0();
        uint64_t v42 = sub_1C263FDFC(v32, v33, &aBlock);
        sub_1C277C0D0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2601000, v28, v29, "Failed to open file descriptor: %{private}s", v30, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C875D230](v31, -1, -1);
        MEMORY[0x1C875D230](v30, -1, -1);
      }
      else
      {
      }
      LOBYTE(aBlock) = 1;
      type metadata accessor for FileMonitorPublisher.Inner();
      swift_getWitnessTable();
      sub_1C277AAD0();
      return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v14, v10);
    }
    else
    {
      long long v20 = v19;
      sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85188);
      *(void *)((char *)v1 + *(void *)((*v20 & *v1) + 0x90)) = sub_1C277BF40();
      uint64_t result = swift_unknownObjectRelease();
      uint64_t v21 = *v20 & *v1;
      if (*(void *)((char *)v1 + *(void *)(v21 + 0x90)))
      {
        swift_getObjectType();
        uint64_t v22 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v23 = (void *)swift_allocObject();
        uint64_t v24 = v38;
        v23[2] = v41;
        _OWORD v23[3] = v24;
        v23[4] = v22;
        long long v47 = sub_1C26DC5B0;
        long long v48 = v23;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v44 = 1107296256;
        uint64_t v45 = sub_1C26254FC;
        uint64_t v46 = &block_descriptor_14;
        unint64_t v25 = _Block_copy(&aBlock);
        swift_unknownObjectRetain();
        swift_retain();
        sub_1C277B650();
        sub_1C26DADDC();
        sub_1C277BF50();
        long long v20 = (void *)MEMORY[0x1E4FBC8C8];
        _Block_release(v25);
        swift_unknownObjectRelease();
        v40[1](v5, v3);
        (*((void (**)(char *, uint64_t))v39 + 1))(v8, v6);
        swift_release();
        uint64_t result = swift_release();
        uint64_t v21 = *v20 & *v1;
      }
      else
      {
        uint64_t v24 = v38;
      }
      if (*(void *)((char *)v1 + *(void *)(v21 + 144)))
      {
        swift_getObjectType();
        uint64_t v34 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v35 = (void *)swift_allocObject();
        v35[2] = v41;
        _OWORD v35[3] = v24;
        v35[4] = v34;
        long long v47 = sub_1C26DC5BC;
        long long v48 = v35;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v44 = 1107296256;
        uint64_t v45 = sub_1C26254FC;
        uint64_t v46 = &block_descriptor_11_0;
        uint64_t v36 = _Block_copy(&aBlock);
        swift_unknownObjectRetain();
        swift_retain();
        sub_1C277B650();
        sub_1C26DADDC();
        sub_1C277BF60();
        _Block_release(v36);
        swift_unknownObjectRelease();
        v40[1](v5, v3);
        (*((void (**)(char *, uint64_t))v39 + 1))(v8, v6);
        swift_release();
        uint64_t result = swift_release();
        uint64_t v21 = *v20 & *v1;
      }
      if (*(void *)((char *)v1 + *(void *)(v21 + 144)))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        sub_1C277BF90();
        return swift_unknownObjectRelease();
      }
    }
  }
  return result;
}

void sub_1C26DA8E4(uint64_t a1)
{
  sub_1C277AB80();
  swift_getWitnessTable();
  uint64_t v2 = sub_1C277C990();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - v4;
  uint64_t v6 = sub_1C277BF20();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v10 = (void *)MEMORY[0x1C875D340](a1 + 16);
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = v3;
    if (*(void *)((char *)v10 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v10) + 0x90)))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_1C277BF70();
      sub_1C277BF10();
      type metadata accessor for FileMonitorPublisher.Inner();
      swift_getWitnessTable();
      sub_1C277AAC0();
      swift_unknownObjectRelease();

      (*(void (**)(char *, uint64_t))(v12 + 8))(v5, v2);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    else
    {
    }
  }
}

void *sub_1C26DAB6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C277AB80();
  swift_getWitnessTable();
  uint64_t v5 = sub_1C277C990();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v14 - v7;
  swift_beginAccess();
  uint64_t result = (void *)MEMORY[0x1C875D340](a1 + 16);
  if (result)
  {
    uint64_t v10 = result;
    uint64_t v11 = *result;
    v14[1] = a3;
    uint64_t v12 = (void *)MEMORY[0x1E4FBC8C8];
    uint64_t v13 = (void *)((char *)result + *(void *)((*MEMORY[0x1E4FBC8C8] & v11) + 0x60));
    __swift_project_boxed_opaque_existential_1(v13, v13[3]);
    sub_1C277AA30();
    close(*(_DWORD *)((char *)v10 + *(void *)((*v12 & *v10) + 0x88)));
    *(_DWORD *)((char *)v10 + *(void *)((*v12 & *v10) + 0x88)) = -1;
    *(void *)((char *)v10 + *(void *)((*v12 & *v10) + 0x90)) = 0;
    swift_unknownObjectRelease();
    __swift_project_boxed_opaque_existential_1(v13, v13[3]);
    sub_1C277AA40();
    char v15 = 1;
    type metadata accessor for FileMonitorPublisher.Inner();
    swift_getWitnessTable();
    sub_1C277AAD0();

    return (void *)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return result;
}

uint64_t sub_1C26DADDC()
{
  sub_1C277B630();
  sub_1C26DC5C8((unint64_t *)&qword_1EBB84A60, MEMORY[0x1E4FBCB00]);
  unint64_t v0 = (void (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1C26314A0(0, (unint64_t *)&unk_1EBB85470, MEMORY[0x1E4FBCB00]);
  sub_1C26340B4((unint64_t *)&qword_1EBB85480, (unint64_t *)&unk_1EBB85470, v0);
  return sub_1C277C120();
}

uint64_t sub_1C26DAEC4()
{
  if (*(void *)((char *)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90)))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1C277BF80();
    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_1C26DAF48(void *a1)
{
  id v1 = a1;
  sub_1C26DAFB0();

  uint64_t v2 = (void *)sub_1C277B820();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t sub_1C26DAFB0()
{
  return 0;
}

void sub_1C26DB070()
{
}

id sub_1C26DB0B4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FileMonitorPublisher.Inner();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C26DB128(void *a1)
{
  objc_super v2 = (void *)MEMORY[0x1E4FBC8C8];
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *a1) + 0x60));
  uint64_t v3 = (char *)a1 + *(void *)((*v2 & *a1) + 0x68);
  uint64_t v4 = sub_1C277ABA0();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = (char *)a1 + *(void *)((*v2 & *a1) + 0x70);
  uint64_t v6 = sub_1C277A750();
  (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = (char *)a1 + *(void *)((*v2 & *a1) + 0x78);
  uint64_t v8 = sub_1C277BF20();
  (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  return swift_unknownObjectRelease();
}

void (*sub_1C26DB310(void *a1))(void *a1)
{
  objc_super v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1C26D9ED4();
  return sub_1C26DB368;
}

void sub_1C26DB368(void *a1)
{
  id v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t sub_1C26DB3B0()
{
  type metadata accessor for FileMonitorPublisher.Inner();

  return sub_1C277AAC0();
}

uint64_t sub_1C26DB410()
{
  type metadata accessor for FileMonitorPublisher.Inner();

  return sub_1C277AAD0();
}

uint64_t sub_1C26DB478()
{
  return sub_1C277AAF0();
}

uint64_t sub_1C26DB4D0()
{
  return sub_1C277AAE0();
}

id sub_1C26DB520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v43 = a3;
  uint64_t v34 = a2;
  uint64_t v36 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = (void *)(*MEMORY[0x1E4FBC8C8] & *v3);
  uint64_t v6 = sub_1C277BEA0();
  uint64_t v41 = *(void *)(v6 - 8);
  uint64_t v42 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v40 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_1C277BE40();
  MEMORY[0x1F4188790](v39);
  uint64_t v38 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C277B660();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v35 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v5[10];
  v30[0] = v5[11];
  v30[1] = v11;
  uint64_t v32 = sub_1C277ABA0();
  uint64_t v12 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  id v14 = (char *)v30 - v13;
  char v15 = (void *)((char *)v3 + v5[12]);
  uint64_t v16 = type metadata accessor for UnfairLock();
  uint64_t v17 = swift_allocObject();
  int v18 = v3;
  long long v19 = (_DWORD *)swift_slowAlloc();
  *(void *)(v17 + 16) = v19;
  _DWORD *v19 = 0;
  double v15[3] = v16;
  v15[4] = sub_1C26DC5C8((unint64_t *)&qword_1EBB85390, (void (*)(uint64_t))type metadata accessor for UnfairLock);
  *char v15 = v17;
  long long v20 = (void *)MEMORY[0x1E4FBC8C8];
  *(_DWORD *)&v18[*(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)v18) + 0x88)] = -1;
  *(void *)&v18[*(void *)((*v20 & *(void *)v18) + 0x90)] = 0;
  uint64_t v21 = v20;
  uint64_t v22 = &v18[*(void *)((*v20 & *(void *)v18) + 0x70)];
  uint64_t v33 = sub_1C277A750();
  uint64_t v23 = *(void *)(v33 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v22, a2, v33);
  uint64_t v24 = &v18[*(void *)((*v21 & *(void *)v18) + 0x78)];
  uint64_t v31 = sub_1C277BF20();
  uint64_t v25 = *(void *)(v31 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v24, v43, v31);
  sub_1C277AB90();
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v18[*(void *)((*v21 & *(void *)v18) + 0x68)], v14, v32);
  uint64_t v36 = sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85180);
  uint64_t ObjectType = sub_1C277C9E0();
  sub_1C277B650();
  uint64_t v45 = MEMORY[0x1E4FBC860];
  sub_1C26DC5C8((unint64_t *)&unk_1EBB85160, MEMORY[0x1E4FBCC10]);
  uint64_t v26 = (void (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1C26314A0(0, (unint64_t *)&qword_1EBB850C0, MEMORY[0x1E4FBCC10]);
  sub_1C26340B4(qword_1EBB850D0, (unint64_t *)&qword_1EBB850C0, v26);
  sub_1C277C120();
  (*(void (**)(char *, void, uint64_t))(v41 + 104))(v40, *MEMORY[0x1E4FBCC58], v42);
  *(void *)&v18[*(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)v18) + 0x80)] = sub_1C277BED0();

  long long v27 = (objc_class *)type metadata accessor for FileMonitorPublisher.Inner();
  v44.receiver = v18;
  v44.super_class = v27;
  id v28 = objc_msgSendSuper2(&v44, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v43, v31);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v34, v33);
  return v28;
}

id sub_1C26DBB14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = objc_allocWithZone((Class)type metadata accessor for FileMonitorPublisher.Inner());
  return sub_1C26DB520(a1, a2, a3);
}

uint64_t sub_1C26DBB68()
{
  return MEMORY[0x1E4FBC278];
}

uint64_t *initializeBufferWithCopyOfBuffer for FileMonitorPublisher(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    a1[1] = a2[1];
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1C277A750();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_unknownObjectRetain();
    v11(v8, v9, v10);
    uint64_t v12 = *(int *)(a3 + 28);
    uint64_t v13 = (char *)v4 + v12;
    id v14 = (char *)a2 + v12;
    uint64_t v15 = sub_1C277BF20();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return v4;
}

uint64_t destroy for FileMonitorPublisher(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1C277A750();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = sub_1C277BF20();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t initializeWithCopy for FileMonitorPublisher(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C277A750();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_unknownObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1C277BF20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for FileMonitorPublisher(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C277A750();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1C277BF20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t initializeWithTake for FileMonitorPublisher(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C277A750();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1C277BF20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

uint64_t assignWithTake for FileMonitorPublisher(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_unknownObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C277A750();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1C277BF20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for FileMonitorPublisher(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C26DC134);
}

uint64_t sub_1C26DC134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_1C277A750();
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = a1 + *(int *)(a3 + 24);
      uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      uint64_t v14 = sub_1C277BF20();
      uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      uint64_t v16 = v14;
      uint64_t v17 = a1 + *(int *)(a3 + 28);
      return v15(v17, a2, v16);
    }
  }
}

uint64_t storeEnumTagSinglePayload for FileMonitorPublisher(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C26DC280);
}

uint64_t sub_1C26DC280(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v8 = sub_1C277A750();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1C277BF20();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_1C26DC3AC()
{
  uint64_t result = sub_1C277ABA0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C277A750();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_1C277BF20();
      if (v3 <= 0x3F) {
        return swift_initClassMetadata2();
      }
    }
  }
  return result;
}

uint64_t sub_1C26DC4E4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C26DC500(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 88);
}

uint64_t sub_1C26DC508()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C26DC524()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C26DC540()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C26DC578()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1C26DC5B0()
{
  sub_1C26DA8E4(*(void *)(v0 + 32));
}

void *sub_1C26DC5BC()
{
  return sub_1C26DAB6C(v0[4], v0[2], v0[3]);
}

uint64_t sub_1C26DC5C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C26DC610()
{
}

uint64_t static EnvironmentalStateDescription.pinned(identifier:)(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1C26DE690(0, &qword_1EBB843A0, (uint64_t (*)(uint64_t))sub_1C26DC790, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C277E480;
  *(void *)(inited + 32) = 0xD000000000000027;
  *(void *)(inited + 40) = 0x80000001C278CC10;
  sub_1C26DE690(0, &qword_1EBB843A8, (uint64_t (*)(uint64_t))sub_1C26DC85C, v4);
  uint64_t v6 = swift_initStackObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C277E480;
  *(void *)(v6 + 32) = a1;
  *(void *)(v6 + 40) = a2;
  *(void *)(v6 + 48) = 0x64656E6E6970;
  *(void *)(v6 + 56) = 0xE600000000000000;
  swift_bridgeObjectRetain();
  *(void *)(inited + 48) = sub_1C267CE00(v6);
  sub_1C267CF44(inited);
  sub_1C267CF5C(MEMORY[0x1E4FBC860]);
  return sub_1C277B030();
}

void sub_1C26DC790()
{
  if (!qword_1EBB84240)
  {
    sub_1C26DC7F8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBB84240);
    }
  }
}

void sub_1C26DC7F8()
{
  if (!qword_1EBB84238)
  {
    unint64_t v0 = sub_1C277B7A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB84238);
    }
  }
}

void sub_1C26DC85C()
{
  if (!qword_1EBB84248)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBB84248);
    }
  }
}

uint64_t SummaryPinnedContentStateComponent.StateValues.rawValue.getter()
{
  return 0x64656E6E6970;
}

uint64_t SummaryPinnedContentStateComponent.StateValues.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C277C650();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1C26DC92C()
{
  return sub_1C277C910();
}

uint64_t sub_1C26DC97C()
{
  return sub_1C277B8B0();
}

uint64_t sub_1C26DC990()
{
  return sub_1C277C910();
}

uint64_t sub_1C26DC9DC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C277C650();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1C26DCA30(void *a1@<X8>)
{
  *a1 = 0x64656E6E6970;
  a1[1] = 0xE600000000000000;
}

unint64_t SummaryPinnedContentStateComponent.identifier.getter()
{
  return 0xD000000000000027;
}

uint64_t SummaryPinnedContentStateComponent.currentState.getter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = v1 + 4;
  unint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1C2607FD4(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t SummaryPinnedContentStateComponent.__allocating_init(observer:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C277B620();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (uint64_t *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v6 = 1;
  (*(void (**)(void *, void))(v7 + 104))(v6, *MEMORY[0x1E4FBCAE8]);
  uint64_t v8 = swift_allocObject();
  sub_1C26DCC78(a1, a2, (void *(*)(void *__return_ptr, uint64_t))sub_1C26DCBEC, 0, (uint64_t (*)(void *))sub_1C26DCC74, 0, (uint64_t)v6);
  return v8;
}

void sub_1C26DCBEC(uint64_t *a1@<X8>)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B0B8]), sel_init);
  unint64_t v3 = (objc_class *)sub_1C277A3F0();
  id v4 = objc_allocWithZone(v3);
  id v5 = v2;
  uint64_t v6 = sub_1C277A3E0();
  uint64_t v7 = MEMORY[0x1E4F65660];
  a1[3] = (uint64_t)v3;
  a1[4] = v7;

  *a1 = v6;
}

void *sub_1C26DCC78(uint64_t a1, uint64_t a2, void *(*a3)(void *__return_ptr, uint64_t), uint64_t a4, uint64_t (*a5)(void *), uint64_t a6, uint64_t a7)
{
  void *(*v32)(void *__return_ptr, uint64_t);
  uint64_t (*v33)(void *);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void v38[4];

  uint64_t v8 = v7;
  uint64_t v33 = a5;
  uint64_t v34 = a7;
  uint64_t v36 = a4;
  uint64_t v37 = a6;
  uint64_t v31 = a2;
  uint64_t v32 = a3;
  uint64_t v35 = a1;
  v29[0] = *v7;
  uint64_t v30 = sub_1C277BEA0();
  uint64_t v9 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C277BE40();
  MEMORY[0x1F4188790](v12);
  uint64_t v13 = sub_1C277B660();
  MEMORY[0x1F4188790](v13 - 8);
  v7[10] = 0;
  v29[1] = sub_1C264E740();
  sub_1C277B650();
  v38[0] = MEMORY[0x1E4FBC860];
  sub_1C2633B30((unint64_t *)&unk_1EBB85160, MEMORY[0x1E4FBCC10]);
  uint64_t v14 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1C26DE690(0, (unint64_t *)&qword_1EBB850C0, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1C264C274(qword_1EBB850D0, (unint64_t *)&qword_1EBB850C0, v14);
  sub_1C277C120();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FBCC58], v30);
  v7[11] = sub_1C277BED0();
  uint64_t v15 = v31;
  v7[8] = v35;
  v7[9] = v15;
  uint64_t v16 = swift_unknownObjectRetain();
  uint64_t v17 = v32(v38, v16);
  uint64_t v33 = (uint64_t (*)(void *))v33(v17);
  __swift_project_boxed_opaque_existential_1(v38, v38[3]);
  int v18 = (void *)sub_1C277A430();
  uint64_t v19 = sub_1C26DE49C();

  uint64_t v20 = v34;
  sub_1C26DE3FC();
  uint64_t v21 = swift_allocObject();
  *(_DWORD *)(v21 + 24) = 0;
  *(void *)(v21 + 16) = v19;
  _OWORD v8[2] = v21;
  sub_1C26482E4((uint64_t)v38, (uint64_t)(v8 + 3));
  uint64_t v22 = (char *)v8 + OBJC_IVAR____TtC14HealthPlatform34SummaryPinnedContentStateComponent_onErrorRetryInterval;
  uint64_t v23 = sub_1C277B620();
  uint64_t v24 = *(void *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v22, v20, v23);
  sub_1C277AB40();
  uint64_t v25 = (void *)v8[11];
  swift_allocObject();
  swift_weakInit();
  sub_1C277B880();
  id v26 = v25;
  swift_retain();
  swift_bridgeObjectRelease();
  uint64_t v27 = sub_1C277AB10();
  swift_release();
  swift_release();
  v8[10] = v27;
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v20, v23);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
  return v8;
}

uint64_t sub_1C26DD334()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C26DD38C();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C26DD38C()
{
  if (qword_1EBB82A50 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1C277B130();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBB82A38);
  uint64_t v1 = sub_1C277B100();
  os_log_type_t v2 = sub_1C277BD40();
  if (os_log_type_enabled(v1, v2))
  {
    unint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v8 = v4;
    *(_DWORD *)unint64_t v3 = 136446210;
    uint64_t v5 = sub_1C277C9E0();
    sub_1C263FDFC(v5, v6, &v8);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v1, v2, "[%{public}s] Pinned content did update notification received, refetching", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v4, -1, -1);
    MEMORY[0x1C875D230](v3, -1, -1);
  }

  return sub_1C26DDB50();
}

void sub_1C26DD540(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v32 = *(void (**)(char *, uint64_t))v3;
  uint64_t v33 = sub_1C277B630();
  uint64_t v36 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  unint64_t v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C277B660();
  uint64_t v34 = *(void *)(v7 - 8);
  uint64_t v35 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C277B680();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)v31 - v15;
  uint64_t v17 = (void *)sub_1C277A610();
  unsigned int v18 = objc_msgSend(v17, sel_hk_isDatabaseAccessibilityError);

  if (v18)
  {
    if (qword_1EBB82A50 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1C277B130();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EBB82A38);
    uint64_t v20 = sub_1C277B100();
    os_log_type_t v21 = sub_1C277BD20();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      aBlock[0] = v23;
      *(_DWORD *)uint64_t v22 = 136446210;
      uint64_t v24 = sub_1C277C9E0();
      uint64_t v37 = sub_1C263FDFC(v24, v25, aBlock);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v20, v21, "[%{public}s] Failed to get state due to database inaccessible, scheduling retry when unlocked", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v23, -1, -1);
      MEMORY[0x1C875D230](v22, -1, -1);
    }

    if (qword_1EA303F18 != -1) {
      swift_once();
    }
    uint64_t v26 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_1C2721A14((uint64_t)sub_1C26DE6F4, v26);
    swift_release_n();
  }
  else if (a2)
  {
    v31[1] = *(void *)(v3 + 88);
    sub_1C277B670();
    MEMORY[0x1C875B5E0](v14, v3 + OBJC_IVAR____TtC14HealthPlatform34SummaryPinnedContentStateComponent_onErrorRetryInterval);
    uint64_t v32 = *(void (**)(char *, uint64_t))(v11 + 8);
    v32(v14, v10);
    uint64_t v27 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = (uint64_t)sub_1C26DE670;
    aBlock[5] = v27;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    void aBlock[2] = (uint64_t)sub_1C26254FC;
    aBlock[3] = (uint64_t)&block_descriptor_15;
    v31[0] = _Block_copy(aBlock);
    swift_retain();
    sub_1C277B650();
    uint64_t v37 = MEMORY[0x1E4FBC860];
    sub_1C2633B30((unint64_t *)&qword_1EBB84A60, MEMORY[0x1E4FBCB00]);
    id v28 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
    sub_1C26DE690(0, (unint64_t *)&unk_1EBB85470, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    sub_1C264C274((unint64_t *)&qword_1EBB85480, (unint64_t *)&unk_1EBB85470, v28);
    uint64_t v29 = v33;
    sub_1C277C120();
    uint64_t v30 = (const void *)v31[0];
    MEMORY[0x1C875BD60](v16, v9, v6, v31[0]);
    _Block_release(v30);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v6, v29);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v35);
    v32(v16, v10);
    swift_release();
    swift_release();
  }
}

uint64_t sub_1C26DDB50()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 24), *(void *)(v0 + 48));
  uint64_t v1 = (void *)sub_1C277A430();
  uint64_t v2 = sub_1C26DE49C();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = v3 + 4;
  uint64_t v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_1C26DE714(v4);
  os_unfair_lock_unlock(v5);
  swift_getObjectType();
  sub_1C2633B30((unint64_t *)&unk_1EBB82980, (void (*)(uint64_t))type metadata accessor for SummaryPinnedContentStateComponent);
  sub_1C277B070();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C26DDEB8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C26DDB50();
    return swift_release();
  }
  return result;
}

Swift::Void __swiftcall SummaryPinnedContentStateComponent.stopObserving()()
{
  if (*(void *)(v0 + 80))
  {
    swift_retain();
    sub_1C277AB30();
    swift_release();
  }
}

uint64_t SummaryPinnedContentStateComponent.deinit()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  swift_unknownObjectRelease();
  swift_release();

  uint64_t v1 = v0 + OBJC_IVAR____TtC14HealthPlatform34SummaryPinnedContentStateComponent_onErrorRetryInterval;
  uint64_t v2 = sub_1C277B620();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t SummaryPinnedContentStateComponent.__deallocating_deinit()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  swift_unknownObjectRelease();
  swift_release();

  uint64_t v1 = v0 + OBJC_IVAR____TtC14HealthPlatform34SummaryPinnedContentStateComponent_onErrorRetryInterval;
  uint64_t v2 = sub_1C277B620();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

unint64_t sub_1C26DE0C0()
{
  unint64_t result = qword_1EA304AD8;
  if (!qword_1EA304AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304AD8);
  }
  return result;
}

unint64_t sub_1C26DE114()
{
  return 0xD000000000000027;
}

uint64_t sub_1C26DE130()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1C2607FD4(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_1C26DE190()
{
  if (*(void *)(v0 + 80))
  {
    swift_retain();
    sub_1C277AB30();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C26DE1E0()
{
  return type metadata accessor for SummaryPinnedContentStateComponent();
}

uint64_t type metadata accessor for SummaryPinnedContentStateComponent()
{
  uint64_t result = qword_1EBB83F50;
  if (!qword_1EBB83F50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C26DE234()
{
  uint64_t result = sub_1C277B620();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for SummaryPinnedContentStateComponent(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SummaryPinnedContentStateComponent);
}

unsigned char *storeEnumTagSinglePayload for SummaryPinnedContentStateComponent.StateValues(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C26DE3B4);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SummaryPinnedContentStateComponent.StateValues()
{
  return &type metadata for SummaryPinnedContentStateComponent.StateValues;
}

ValueMetadata *type metadata accessor for SummaryPinnedContentStateComponent.InnerState()
{
  return &type metadata for SummaryPinnedContentStateComponent.InnerState;
}

void sub_1C26DE3FC()
{
  if (!qword_1EBB830A8)
  {
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_1C277C370();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB830A8);
    }
  }
}

uint64_t sub_1C26DE45C()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C26DE494()
{
  return sub_1C26DD334();
}

uint64_t sub_1C26DE49C()
{
  uint64_t v0 = sub_1C277A3C0();
  uint64_t v1 = *(void *)(v0 + 16);
  if (!v1)
  {
    int v3 = (void *)MEMORY[0x1E4FBC868];
LABEL_17:
    swift_bridgeObjectRelease();
    return (uint64_t)v3;
  }
  uint64_t v2 = (uint64_t *)(v0 + 40);
  int v3 = (void *)MEMORY[0x1E4FBC868];
  while (1)
  {
    uint64_t v6 = *(v2 - 1);
    uint64_t v5 = *v2;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v9 = sub_1C2629588(v6, v5);
    uint64_t v10 = v3[2];
    BOOL v11 = (v8 & 1) == 0;
    uint64_t v12 = v10 + v11;
    if (__OFADD__(v10, v11)) {
      break;
    }
    char v13 = v8;
    if (v3[3] >= v12)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v8) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_1C26788B4();
        if (v13) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_1C2675A98(v12, isUniquelyReferenced_nonNull_native);
      unint64_t v14 = sub_1C2629588(v6, v5);
      if ((v13 & 1) != (v15 & 1)) {
        goto LABEL_20;
      }
      unint64_t v9 = v14;
      if (v13)
      {
LABEL_3:
        unsigned int v4 = (void *)(v3[7] + 16 * v9);
        swift_bridgeObjectRelease();
        *unsigned int v4 = 0x64656E6E6970;
        v4[1] = 0xE600000000000000;
        goto LABEL_4;
      }
    }
    v3[(v9 >> 6) + 8] |= 1 << v9;
    uint64_t v16 = (uint64_t *)(v3[6] + 16 * v9);
    *uint64_t v16 = v6;
    v16[1] = v5;
    uint64_t v17 = (void *)(v3[7] + 16 * v9);
    *uint64_t v17 = 0x64656E6E6970;
    v17[1] = 0xE600000000000000;
    uint64_t v18 = v3[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19) {
      goto LABEL_19;
    }
    v3[2] = v20;
    swift_bridgeObjectRetain();
LABEL_4:
    v2 += 2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v1) {
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_1C277C850();
  __break(1u);
  return result;
}

uint64_t sub_1C26DE670()
{
  return sub_1C26DDEB8();
}

void sub_1C26DE690(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C26DE6F4()
{
  return sub_1C26DDEB8();
}

uint64_t sub_1C26DE714(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t UserProfile.uniqueIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C277A8A0();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t UserProfile.uniqueIdentifier.setter(uint64_t a1)
{
  uint64_t v3 = sub_1C277A8A0();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*UserProfile.uniqueIdentifier.modify())()
{
  return nullsub_1;
}

id UserProfile.profileIdentifier.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for UserProfile() + 20));

  return v1;
}

void UserProfile.profileIdentifier.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for UserProfile() + 20);

  *(void *)(v1 + v3) = a1;
}

uint64_t (*UserProfile.profileIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t UserProfile.init(profileIdentifier:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_identifier);
  sub_1C277A880();

  uint64_t result = type metadata accessor for UserProfile();
  *(void *)(a2 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t UserProfile.hash(into:)()
{
  sub_1C277A8A0();
  sub_1C26DECB8(&qword_1EBB84F38, MEMORY[0x1E4F27990]);

  return sub_1C277B7C0();
}

uint64_t static UserProfile.== infix(_:_:)()
{
  if ((sub_1C277A870() & 1) == 0) {
    return 0;
  }
  sub_1C2652E20();
  type metadata accessor for UserProfile();
  return sub_1C277C030() & 1;
}

uint64_t UserProfile.hashValue.getter()
{
  return sub_1C277C910();
}

uint64_t sub_1C26DEAE0()
{
  return sub_1C277C910();
}

uint64_t sub_1C26DEB68()
{
  sub_1C277A8A0();
  sub_1C26DECB8(&qword_1EBB84F38, MEMORY[0x1E4F27990]);

  return sub_1C277B7C0();
}

uint64_t sub_1C26DEBEC()
{
  return sub_1C277C910();
}

uint64_t sub_1C26DEC70()
{
  return sub_1C26DECB8(&qword_1EBB84FC8, (void (*)(uint64_t))type metadata accessor for UserProfile);
}

uint64_t sub_1C26DECB8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C26DED00()
{
  if ((sub_1C277A870() & 1) == 0) {
    return 0;
  }
  sub_1C2652E20();
  return sub_1C277C030() & 1;
}

uint64_t *initializeBufferWithCopyOfBuffer for UserProfile(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C277A8A0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
    id v10 = v9;
  }
  return a1;
}

uint64_t assignWithCopy for UserProfile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C277A8A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a2 + v7);
  uint64_t v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  return a1;
}

uint64_t initializeWithTake for UserProfile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C277A8A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for UserProfile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C277A8A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  return a1;
}

uint64_t getEnumTagSinglePayload for UserProfile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C26DEFD0);
}

uint64_t sub_1C26DEFD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C277A8A0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for UserProfile(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C26DF0A4);
}

uint64_t sub_1C26DF0A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C277A8A0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1C26DF160()
{
  uint64_t result = sub_1C277A8A0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t static SourceProfile.availableSourceProfiles(from:)(void *a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B360]), sel_initWithHealthStore_, a1);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = a1;
  sub_1C26DF400();
  swift_allocObject();
  id v4 = a1;
  return sub_1C277B480();
}

void sub_1C26DF294(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = a4;
  v9[3] = sub_1C263B0B8;
  v9[4] = v8;
  v12[4] = sub_1C26DF958;
  v12[5] = v9;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  id v12[2] = sub_1C2748F3C;
  _OWORD v12[3] = &block_descriptor_16;
  unint64_t v10 = _Block_copy(v12);
  swift_retain();
  id v11 = a4;
  swift_release();
  objc_msgSend(a3, sel_fetchAllProfilesWithCompletion_, v10);
  _Block_release(v10);
}

uint64_t sub_1C26DF3B8()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C26DF3F8(uint64_t a1, uint64_t a2)
{
  sub_1C26DF294(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24));
}

void sub_1C26DF400()
{
  if (!qword_1EA304AE0)
  {
    sub_1C26DF964(255, &qword_1EA304AE8, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1C277B470();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA304AE0);
    }
  }
}

uint64_t sub_1C26DF484()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C26DF4BC(unint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, void))
{
  if (!a1)
  {
    uint64_t v6 = a3;
    uint64_t v7 = a2;
    if (qword_1EBB85FE8 == -1)
    {
LABEL_13:
      uint64_t v12 = sub_1C277B130();
      __swift_project_value_buffer(v12, (uint64_t)qword_1EBB85FD0);
      id v13 = (id)v7;
      id v14 = (id)v7;
      char v15 = sub_1C277B100();
      os_log_type_t v16 = sub_1C277BD20();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = swift_slowAlloc();
        uint64_t v18 = swift_slowAlloc();
        uint64_t v32 = v18;
        *(_DWORD *)uint64_t v17 = 136446466;
        sub_1C26DF9B4();
        uint64_t v19 = sub_1C277B860();
        sub_1C263FDFC(v19, v20, &v32);
        sub_1C277C0D0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v17 + 12) = 2082;
        id v21 = (id)v7;
        sub_1C26DF9F0();
        uint64_t v22 = sub_1C277B860();
        sub_1C263FDFC(v22, v23, &v32);
        sub_1C277C0D0();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1C2601000, v15, v16, "[%{public}s]: Unable to fetch additional profiles. Proceeding with just primary profile: %{public}s", (uint8_t *)v17, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C875D230](v18, -1, -1);
        MEMORY[0x1C875D230](v17, -1, -1);
      }
      else
      {
      }
      sub_1C26DF964(0, &qword_1EA304290, MEMORY[0x1E4FBBE00]);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1C277E480;
      *(void *)(v7 + 32) = objc_msgSend((id)v6, sel_profileIdentifier);
      goto LABEL_17;
    }
LABEL_29:
    swift_once();
    goto LABEL_13;
  }
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C277C5A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (!v6) {
    goto LABEL_17;
  }
  uint64_t v32 = MEMORY[0x1E4FBC860];
  sub_1C265A050(0, v6 & ~(v6 >> 63), 0);
  if (v6 < 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v7 = v32;
  if ((a1 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      uint64_t v9 = MEMORY[0x1C875C230](i, a1);
      uint64_t v32 = v7;
      unint64_t v11 = *(void *)(v7 + 16);
      unint64_t v10 = *(void *)(v7 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1C265A050(v10 > 1, v11 + 1, 1);
        uint64_t v7 = v32;
      }
      *(void *)(v7 + 16) = v11 + 1;
      *(void *)(v7 + 8 * v11 + 32) = v9;
    }
  }
  else
  {
    uint64_t v27 = (void **)(a1 + 32);
    do
    {
      id v28 = *v27;
      uint64_t v32 = v7;
      unint64_t v30 = *(void *)(v7 + 16);
      unint64_t v29 = *(void *)(v7 + 24);
      id v31 = v28;
      if (v30 >= v29 >> 1)
      {
        sub_1C265A050(v29 > 1, v30 + 1, 1);
        uint64_t v7 = v32;
      }
      *(void *)(v7 + 16) = v30 + 1;
      *(void *)(v7 + 8 * v30 + 32) = v31;
      ++v27;
      --v6;
    }
    while (v6);
  }
LABEL_17:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v7 = (uint64_t)sub_1C26909A4(0, *(void *)(v7 + 16) + 1, 1, (void *)v7);
  }
  unint64_t v25 = *(void *)(v7 + 16);
  unint64_t v24 = *(void *)(v7 + 24);
  if (v25 >= v24 >> 1) {
    uint64_t v7 = (uint64_t)sub_1C26909A4((void *)(v24 > 1), v25 + 1, 1, (void *)v7);
  }
  *(void *)(v7 + 16) = v25 + 1;
  *(void *)(v7 + 8 * v25 + 32) = 0;
  a4(v7, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C26DF918()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C26DF958(unint64_t a1, uint64_t a2)
{
  return sub_1C26DF4BC(a1, a2, *(void *)(v2 + 16), *(void (**)(uint64_t, void))(v2 + 24));
}

void sub_1C26DF964(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, ValueMetadata *))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, &type metadata for SourceProfile);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1C26DF9B4()
{
  unint64_t result = qword_1EA304AF0;
  if (!qword_1EA304AF0)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA304AF0);
  }
  return result;
}

void sub_1C26DF9F0()
{
  if (!qword_1EA305660)
  {
    sub_1C26532A4();
    unint64_t v0 = sub_1C277C0B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA305660);
    }
  }
}

uint64_t dispatch thunk of PluginInfo.bundle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

BOOL static PluginSharableModelDataError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PluginSharableModelDataError.hash(into:)()
{
  return sub_1C277C8D0();
}

uint64_t PluginSharableModelDataError.hashValue.getter()
{
  return sub_1C277C910();
}

uint64_t static HKSharedSummary.versionString(for:)()
{
  return sub_1C277C7B0();
}

uint64_t sub_1C26DFB24(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_1C277B930();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x1C875B810](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

unsigned __int8 *sub_1C26DFBA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1C277B950();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_1C26DFF04();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    unint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v7 = (unsigned __int8 *)sub_1C277C380();
  }
LABEL_7:
  uint64_t v11 = sub_1C26DFC88(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_1C26DFC88(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1C26DFF04()
{
  unint64_t v0 = sub_1C277B960();
  uint64_t v4 = sub_1C26DFF84(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1C26DFF84(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_1C26E00DC(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unsigned int v11 = sub_1C264043C(v9, 0);
      unint64_t v12 = sub_1C26E01DC((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_1C277C380();
LABEL_4:
        JUMPOUT(0x1C875B7B0);
      }
    }
    else
    {
      unsigned int v11 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v13 = MEMORY[0x1C875B7B0](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1C875B7B0]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_1C26E00DC(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_1C26DFB24(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_1C26DFB24(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x1F4183AA8](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x1F4183AA8](a1, a2, a3, a4);
}

unint64_t sub_1C26E01DC(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    void v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    unint64_t result = v12;
    if (v17 == v15) {
      unint64_t result = sub_1C26DFB24(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      unint64_t result = sub_1C277B920();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        unint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          unint64_t result = sub_1C277C380();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    unint64_t result = sub_1C26DFB24(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_1C277B8F0();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_1C26E03F0()
{
  unint64_t result = qword_1EA304AF8;
  if (!qword_1EA304AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304AF8);
  }
  return result;
}

unint64_t sub_1C26E0444()
{
  unint64_t result = qword_1EA304B00;
  if (!qword_1EA304B00)
  {
    type metadata accessor for PluginSharableModel();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA304B00);
  }
  return result;
}

unint64_t sub_1C26E0484()
{
  unint64_t result = qword_1EA304B08;
  if (!qword_1EA304B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304B08);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PluginSharableModelDataError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C26E05A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PluginSharableModelDataError()
{
  return &type metadata for PluginSharableModelDataError;
}

uint64_t sub_1C26E05DC()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_1C26E0610(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 16) = a1;
  return result;
}

uint64_t (*sub_1C26E0650())()
{
  return j_j__swift_endAccess;
}

uint64_t MockNotificationContentStateManager.__allocating_init()()
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = 0;
  return result;
}

uint64_t MockNotificationContentStateManager.init()()
{
  uint64_t result = v0;
  *(unsigned char *)(v0 + 16) = 0;
  return result;
}

uint64_t sub_1C26E06D8()
{
  sub_1C26E097C(0);
  MEMORY[0x1F4188790](v0);
  unint64_t v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C26E09B0(0, &qword_1EA304B10, (uint64_t (*)(uint64_t))sub_1C26E097C, MEMORY[0x1E4F1AC08]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v7 = (char *)&v16 - v6;
  sub_1C26E0A14();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for NotificationContentState(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v2, 1, 1, v13);
  sub_1C277B440();
  sub_1C262B07C(0, (unint64_t *)&qword_1EBB831D0);
  sub_1C277B410();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1C26E117C(&qword_1EA304B20, 255, (void (*)(uint64_t))sub_1C26E0A14);
  uint64_t v14 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v14;
}

void sub_1C26E097C(uint64_t a1)
{
}

void sub_1C26E09B0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C26E0A14()
{
  if (!qword_1EA304B18)
  {
    sub_1C26E097C(255);
    sub_1C262B07C(255, (unint64_t *)&qword_1EBB831D0);
    unint64_t v0 = sub_1C277C980();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA304B18);
    }
  }
}

uint64_t sub_1C26E0A98()
{
  sub_1C26E1A64(0, (unint64_t *)&qword_1EBB82D00);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v12 - v3;
  sub_1C26E1AAC(0, (unint64_t *)&unk_1EBB831E0);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v12 - v8;
  sub_1C277B440();
  sub_1C262B07C(0, (unint64_t *)&qword_1EBB831D0);
  sub_1C277B410();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1C26E1C3C((unint64_t *)&qword_1EBB831D8, (unint64_t *)&unk_1EBB831E0);
  uint64_t v10 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v10;
}

uint64_t MockNotificationContentStateManager.deinit()
{
  return v0;
}

uint64_t MockNotificationContentStateManager.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1C26E0C90()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  return *(unsigned __int8 *)(v1 + 16);
}

uint64_t sub_1C26E0CD0(char a1)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 16) = a1;
  return result;
}

uint64_t (*sub_1C26E0D14())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C26E0D6C(uint64_t a1, void *a2)
{
  sub_1C26482E4(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + 24;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_0(v3);
  sub_1C261F308(v5, v3);
  return swift_endAccess();
}

uint64_t sub_1C26E0DD4@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  return sub_1C26482E4(v1 + 24, a1);
}

uint64_t sub_1C26E0E20(long long *a1)
{
  uint64_t v3 = v1 + 24;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_0(v3);
  sub_1C261F308(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1C26E0E7C())()
{
  return j__swift_endAccess;
}

uint64_t MockPluginNotificationManager.__allocating_init(contentStateManager:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  MockPluginNotificationManager.init(contentStateManager:)(a1);
  return v2;
}

uint64_t MockPluginNotificationManager.init(contentStateManager:)(uint64_t a1)
{
  uint64_t v3 = (objc_class *)type metadata accessor for MockUNUserNotificationCenter();
  uint64_t v4 = (char *)objc_allocWithZone(v3);
  *(void *)&v4[OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_customNotificationSettings] = 0;
  uint64_t v5 = OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_mockNotificationState;
  uint64_t v6 = v4;
  uint64_t v7 = MEMORY[0x1E4FBC860];
  unint64_t v8 = sub_1C267C8B0(MEMORY[0x1E4FBC860]);
  sub_1C26B5E78();
  uint64_t v9 = swift_allocObject();
  *(_DWORD *)(v9 + 40) = 0;
  *(void *)(v9 + 16) = v7;
  *(void *)(v9 + 24) = v7;
  *(void *)(v9 + 32) = v8;
  *(void *)&v4[v5] = v9;

  uint64_t v10 = *MEMORY[0x1E4F2BDC0];
  v20.receiver = v6;
  v20.super_class = v3;
  *(void *)(v1 + 16) = objc_msgSendSuper2(&v20, sel_initWithBundleIdentifier_, v10);
  sub_1C26E108C(a1, (uint64_t)&v15);
  if (v16)
  {
    sub_1C26E11C4(a1);
    sub_1C261F308(&v15, (uint64_t)&v17);
  }
  else
  {
    uint64_t v11 = type metadata accessor for MockNotificationContentStateManager();
    uint64_t v12 = swift_allocObject();
    *(unsigned char *)(v12 + 16) = 0;
    uint64_t v18 = v11;
    uint64_t v19 = sub_1C26E117C(&qword_1EA304B38, v13, (void (*)(uint64_t))type metadata accessor for MockNotificationContentStateManager);
    *(void *)&long long v17 = v12;
    sub_1C26E11C4(a1);
    sub_1C26E11C4((uint64_t)&v15);
  }
  sub_1C261F308(&v17, v1 + 24);
  return v1;
}

uint64_t sub_1C26E108C(uint64_t a1, uint64_t a2)
{
  sub_1C26E10F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C26E10F0()
{
  if (!qword_1EA304B28)
  {
    sub_1C262B07C(255, &qword_1EA304B30);
    unint64_t v0 = sub_1C277C0B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA304B28);
    }
  }
}

uint64_t type metadata accessor for MockNotificationContentStateManager()
{
  return self;
}

uint64_t sub_1C26E117C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C26E11C4(uint64_t a1)
{
  sub_1C26E10F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C26E1220(void *a1)
{
  id v3 = *(id *)(v1 + 16);
  uint64_t v4 = UNUserNotificationCenter.scheduleNotification(_:)(a1);

  return v4;
}

uint64_t sub_1C26E1264(_OWORD *a1)
{
  sub_1C26E1A64(0, &qword_1EA304B40);
  uint64_t v3 = v2;
  uint64_t v31 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v29 - v4;
  sub_1C26E1AAC(0, &qword_1EA304B48);
  uint64_t v7 = v6;
  uint64_t v30 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v29 - v8;
  sub_1C26E1B24();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  long long v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v16 = a1[1];
  v37[0] = *a1;
  v37[1] = v16;
  long long v17 = a1[3];
  long long v38 = a1[2];
  long long v39 = v17;
  uint64_t v18 = ((uint64_t (*)(uint64_t))v38)(v13);
  if (v18)
  {
    uint64_t v19 = (void *)v18;
    id v20 = *(id *)(v32 + 16);
    uint64_t v21 = UNUserNotificationCenter.scheduleNotification(_:)(v19);

    *(void *)&long long v33 = v21;
    uint64_t v22 = (_OWORD *)swift_allocObject();
    long long v23 = a1[1];
    v22[1] = *a1;
    v22[2] = v23;
    long long v24 = a1[3];
    v22[3] = a1[2];
    v22[4] = v24;
    sub_1C26E1BC4((uint64_t)v37);
    sub_1C264F068();
    sub_1C26E117C(&qword_1EBB82CB8, 255, (void (*)(uint64_t))sub_1C264F068);
    sub_1C277B500();
    swift_release();
    swift_release();
    sub_1C26E117C(&qword_1EA304B60, 255, (void (*)(uint64_t))sub_1C26E1B24);
    uint64_t v25 = sub_1C277B4E0();

    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  }
  else
  {
    long long v26 = a1[1];
    long long v33 = *a1;
    long long v34 = v26;
    long long v27 = a1[3];
    long long v35 = a1[2];
    long long v36 = v27;
    sub_1C26E1BC4((uint64_t)v37);
    sub_1C277B440();
    sub_1C262B07C(0, (unint64_t *)&qword_1EBB831D0);
    sub_1C277B410();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v5, v3);
    sub_1C26E1C3C((unint64_t *)&qword_1EA304B58, &qword_1EA304B48);
    uint64_t v25 = sub_1C277B4E0();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v7);
  }
  return v25;
}

void sub_1C26E1670(uint64_t a1)
{
}

void sub_1C26E167C(uint64_t a1)
{
}

void sub_1C26E1688(uint64_t a1, SEL *a2)
{
  id v4 = *(id *)(v2 + 16);
  id v5 = (id)sub_1C277BA30();
  objc_msgSend(v4, *a2, v5);
}

void sub_1C26E1704()
{
}

void sub_1C26E1760()
{
}

uint64_t MockPluginNotificationManager.deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  return v0;
}

uint64_t MockPluginNotificationManager.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);

  return swift_deallocClassInstance();
}

void sub_1C26E1828(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1C26E1834(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1C26E1840(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  id v6 = *(id *)(v4 + 16);
  id v7 = (id)sub_1C277BA30();
  objc_msgSend(v6, *a4, v7);
}

uint64_t sub_1C26E18BC()
{
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1C277B130();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBB86280);
  uint64_t v1 = sub_1C277B100();
  os_log_type_t v2 = sub_1C277BD20();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v8 = v4;
    *(_DWORD *)uint64_t v3 = 136315138;
    uint64_t v5 = sub_1C277C9E0();
    sub_1C263FDFC(v5, v6, &v8);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v1, v2, "%s This method is not supported!", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v4, -1, -1);
    MEMORY[0x1C875D230](v3, -1, -1);
  }

  return 0;
}

void sub_1C26E1A64(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1C277B430();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_1C26E1AAC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    sub_1C262B07C(255, (unint64_t *)&qword_1EBB831D0);
    unint64_t v3 = sub_1C277C980();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_1C26E1B24()
{
  if (!qword_1EA304B50)
  {
    sub_1C264F068();
    sub_1C26E117C(&qword_1EBB82CB8, 255, (void (*)(uint64_t))sub_1C264F068);
    unint64_t v0 = sub_1C277B1E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA304B50);
    }
  }
}

uint64_t sub_1C26E1BC4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  unint64_t v3 = *(void *)(a1 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C26E1C28(v2, v3);
  return a1;
}

uint64_t sub_1C26E1C28(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C26E1C3C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C26E1AAC(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C26E1C8C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(void *)(v0 + 72) >= 2uLL) {
    swift_bridgeObjectRelease();
  }

  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_1C26E1CE4@<X0>(_OWORD *a1@<X8>)
{
  long long v2 = v1[2];
  *a1 = v1[1];
  a1[1] = v2;
  long long v3 = v1[4];
  a1[2] = v1[3];
  a1[3] = v3;
  return sub_1C26E1BC4((uint64_t)(v1 + 1));
}

uint64_t sub_1C26E1CFC()
{
  sub_1C26E25D0(0, &qword_1EA304B80, &qword_1EA304A60, (unint64_t *)&qword_1EBB82FC0);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v14 - v4;
  unint64_t v6 = *(char **)(v0 + 16);
  uint64_t v7 = *(void *)&v6[OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_mockNotificationState];
  uint64_t v8 = (void *)(v7 + 16);
  uint64_t v9 = (os_unfair_lock_s *)(v7 + 40);
  uint64_t v10 = v6;
  os_unfair_lock_lock(v9);
  sub_1C26BA6F4(v8, &v15);
  os_unfair_lock_unlock(v9);
  uint64_t v11 = v15;

  uint64_t v15 = v11;
  sub_1C26D8890(0, &qword_1EA304A60, (unint64_t *)&qword_1EBB82FC0);
  sub_1C277B440();
  sub_1C26E262C();
  uint64_t v12 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v12;
}

uint64_t sub_1C26E1E88()
{
  sub_1C26E25D0(0, &qword_1EA304B70, &qword_1EA304A98, &qword_1EA304850);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v14 - v4;
  unint64_t v6 = *(char **)(v0 + 16);
  uint64_t v7 = *(os_unfair_lock_s **)&v6[OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_mockNotificationState];
  uint64_t v8 = (uint64_t)&v7[4];
  uint64_t v9 = v7 + 10;
  uint64_t v10 = v6;
  os_unfair_lock_lock(v9);
  sub_1C26BA6B4(v8, &v15);
  os_unfair_lock_unlock(v9);
  uint64_t v11 = v15;

  uint64_t v15 = v11;
  sub_1C26D8890(0, &qword_1EA304A98, &qword_1EA304850);
  sub_1C277B440();
  sub_1C26E2558();
  uint64_t v12 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v12;
}

uint64_t sub_1C26E2014(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C26E117C(&qword_1EA304B68, a2, (void (*)(uint64_t))type metadata accessor for MockNotificationContentStateManager);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C26E206C()
{
  return sub_1C26E117C(&qword_1EA304958, 255, (void (*)(uint64_t))type metadata accessor for NotificationContentState);
}

uint64_t sub_1C26E20B8()
{
  return sub_1C26E117C(&qword_1EA304960, 255, (void (*)(uint64_t))type metadata accessor for NotificationContentState);
}

uint64_t sub_1C26E2104@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 16);
  return result;
}

uint64_t sub_1C26E214C(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 16) = v2;
  return result;
}

uint64_t sub_1C26E2190@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + 24;
  swift_beginAccess();
  return sub_1C26482E4(v3, a2);
}

uint64_t method lookup function for MockNotificationContentStateManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MockNotificationContentStateManager);
}

uint64_t dispatch thunk of MockNotificationContentStateManager.requestSyncOnUpdate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t dispatch thunk of MockNotificationContentStateManager.requestSyncOnUpdate.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of MockNotificationContentStateManager.requestSyncOnUpdate.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of MockNotificationContentStateManager.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of MockNotificationContentStateManager.getContentState(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of MockNotificationContentStateManager.setContentState(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of MockNotificationContentStateManager.setProtectedContentState(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of MockNotificationContentStateManager.setUnprotectedContentState(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of MockNotificationContentStateManager.removeContentState(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of MockNotificationContentStateManager.migrateContentStateIfNecessary(with:notificationIdentifier:keyValueDomain:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t type metadata accessor for MockPluginNotificationManager()
{
  return self;
}

uint64_t method lookup function for MockPluginNotificationManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MockPluginNotificationManager);
}

uint64_t dispatch thunk of MockPluginNotificationManager.contentStateManager.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of MockPluginNotificationManager.contentStateManager.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of MockPluginNotificationManager.contentStateManager.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of MockPluginNotificationManager.__allocating_init(contentStateManager:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of MockPluginNotificationManager.scheduleUserNotification(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of MockPluginNotificationManager.scheduleCoalescingNotification<A>(for:environment:)(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 160))(a1, a2 & 1);
}

uint64_t dispatch thunk of MockPluginNotificationManager.schedulePluginFeedItemNotification(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of MockPluginNotificationManager.getPendingNotifications(with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of MockPluginNotificationManager.getDeliveredNotifications(with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of MockPluginNotificationManager.removePendingNotifications(with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of MockPluginNotificationManager.removeDeliveredNotifications(with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of MockPluginNotificationManager.removeAllPluginFeedItemNotifications()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of MockPluginNotificationManager.removePluginFeedItemNotifications(feedItemIdentifiers:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

unint64_t sub_1C26E2558()
{
  unint64_t result = qword_1EA304B78;
  if (!qword_1EA304B78)
  {
    sub_1C26E25D0(255, &qword_1EA304B70, &qword_1EA304A98, &qword_1EA304850);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304B78);
  }
  return result;
}

void sub_1C26E25D0(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  if (!*a2)
  {
    sub_1C26D8890(255, a3, a4);
    unint64_t v5 = sub_1C277B430();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1C26E262C()
{
  unint64_t result = qword_1EA304B88;
  if (!qword_1EA304B88)
  {
    sub_1C26E25D0(255, &qword_1EA304B80, &qword_1EA304A60, (unint64_t *)&qword_1EBB82FC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304B88);
  }
  return result;
}

uint64_t OrchestrationRetryManager.__allocating_init(director:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  OrchestrationRetryManager.init(director:)(a1);
  return v2;
}

uint64_t OrchestrationRetryManager.init(director:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C277B040();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + 16) = a1;
  sub_1C277B850();
  swift_retain();
  sub_1C277B000();
  swift_bridgeObjectRelease();
  uint64_t v8 = v1 + OBJC_IVAR____TtC14HealthPlatform25OrchestrationRetryManager_foregroundDescription;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v8, v7, v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  sub_1C277ABB0();
  sub_1C277AF90();
  swift_release();
  LOBYTE(v8) = sub_1C277B020();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1C26E28D4();
  uint64_t v9 = swift_allocObject();
  *(_DWORD *)(v9 + 20) = 0;
  *(unsigned char *)(v9 + 16) = v8 & 1;
  *(void *)(v2 + 24) = v9;
  sub_1C277ABB0();
  sub_1C26E2934();
  swift_retain();
  sub_1C277AFA0();
  swift_release();
  swift_release();
  swift_release();
  return v2;
}

void sub_1C26E28D4()
{
  if (!qword_1EBB83070)
  {
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_1C277C370();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB83070);
    }
  }
}

unint64_t sub_1C26E2934()
{
  unint64_t result = qword_1EBB82848;
  if (!qword_1EBB82848)
  {
    type metadata accessor for OrchestrationRetryManager();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB82848);
  }
  return result;
}

uint64_t type metadata accessor for OrchestrationRetryManager()
{
  uint64_t result = qword_1EBB82850;
  if (!qword_1EBB82850) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t OrchestrationRetryManager.deinit()
{
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC14HealthPlatform25OrchestrationRetryManager_foregroundDescription;
  uint64_t v2 = sub_1C277B040();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t OrchestrationRetryManager.__deallocating_deinit()
{
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC14HealthPlatform25OrchestrationRetryManager_foregroundDescription;
  uint64_t v2 = sub_1C277B040();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1C26E2AFC()
{
  return type metadata accessor for OrchestrationRetryManager();
}

uint64_t sub_1C26E2B04()
{
  uint64_t result = sub_1C277B040();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for OrchestrationRetryManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for OrchestrationRetryManager);
}

uint64_t dispatch thunk of OrchestrationRetryManager.__allocating_init(director:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t getEnumTagSinglePayload for OrchestrationRetryManager.State(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for OrchestrationRetryManager.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C26E2D3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OrchestrationRetryManager.State()
{
  return &type metadata for OrchestrationRetryManager.State;
}

id static Profile.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  unint64_t v1 = (void *)sub_1C277B820();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

char *keypath_get_selector_allPluginData()
{
  return sel_allPluginData;
}

void sub_1C26E2DE8(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1C26E2E38(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_encodedHKProfileIdentifier()
{
  return sel_encodedHKProfileIdentifier;
}

void sub_1C26E2E94(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_encodedHKProfileIdentifier);
  uint64_t v4 = sub_1C277A780();
  uint64_t v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

void sub_1C26E2EF0(uint64_t a1, void **a2)
{
  id v2 = *a2;
  id v3 = (id)sub_1C277A770();
  objc_msgSend(v2, sel_setEncodedHKProfileIdentifier_, v3);
}

void sub_1C26E2F54(id *a1@<X0>, SEL *a2@<X3>, void (*a3)(void)@<X4>, unint64_t *a4@<X5>, void (*a5)(uint64_t)@<X6>, uint64_t *a6@<X8>)
{
  id v10 = [*a1 *a2];
  a3(0);
  sub_1C26E31DC(a4, a5);
  uint64_t v11 = sub_1C277BBC0();

  *a6 = v11;
}

void sub_1C26E2FE0(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1C26E3030(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, void (*a5)(void), unint64_t *a6, void (*a7)(uint64_t), SEL *a8)
{
  uint64_t v11 = *a2;
  a5(0);
  sub_1C26E31DC(a6, a7);
  id v12 = (id)sub_1C277BBB0();
  objc_msgSend(v11, *a8, v12);
}

void sub_1C26E30CC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1C26E311C(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_uniqueIdentifier);
  sub_1C277A880();
}

void sub_1C26E3180(uint64_t a1, void **a2)
{
  id v2 = *a2;
  id v3 = (id)sub_1C277A860();
  objc_msgSend(v2, sel_setUniqueIdentifier_, v3);
}

uint64_t sub_1C26E31DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C26E3230(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 16) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C26E3290()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C26E32C8(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C26E3310@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)(uint64_t *a1, uint64_t *a2, uint64_t *a3)@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v3 + 24);
  uint64_t v4 = *(void *)(v3 + 32);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = v4;
  *a2 = sub_1C26E4520;
  a2[1] = (uint64_t (*)(uint64_t *, uint64_t *, uint64_t *))v6;
  return swift_retain();
}

uint64_t sub_1C26E3390(uint64_t *a1, uint64_t *a2, uint64_t *a3, void (*a4)(uint64_t, uint64_t, uint64_t (*)(uint64_t a1), uint64_t))
{
  uint64_t v5 = *a1;
  uint64_t v6 = *a2;
  uint64_t v8 = *a3;
  uint64_t v7 = a3[1];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = v7;
  swift_retain();
  a4(v5, v6, sub_1C26E4528, v9);

  return swift_release();
}

uint64_t sub_1C26E3438(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  uint64_t v6 = *a2;
  swift_beginAccess();
  *(void *)(v6 + 24) = sub_1C26E4510;
  *(void *)(v6 + 32) = v5;
  swift_retain();
  return swift_release();
}

uint64_t sub_1C26E34C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *, uint64_t *, void *))
{
  uint64_t v11 = a2;
  uint64_t v12 = a1;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a3;
  *(void *)(v8 + 24) = a4;
  v10[0] = sub_1C26E4518;
  v10[1] = v8;
  swift_retain();
  a5(&v12, &v11, v10);

  return swift_release();
}

uint64_t sub_1C26E3570()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 24);
  swift_retain();
  return v1;
}

uint64_t sub_1C26E35BC(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return swift_release();
}

uint64_t sub_1C26E3610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 24);
  swift_retain();
  v9(a1, a2, a3, a4);
  return swift_release();
}

uint64_t sub_1C26E3694@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)(uint64_t a1, uint64_t *a2)@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v3 + 40);
  uint64_t v4 = *(void *)(v3 + 48);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = v4;
  *a2 = sub_1C26E44C8;
  a2[1] = (uint64_t (*)(uint64_t, uint64_t *))v6;
  return swift_retain();
}

uint64_t sub_1C26E3714(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t (*)(uint64_t a1, char a2), uint64_t))
{
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v5;
  swift_retain();
  a3(a1, sub_1C26E44D0, v7);

  return swift_release();
}

uint64_t sub_1C26E37AC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  uint64_t v6 = *a2;
  swift_beginAccess();
  *(void *)(v6 + 40) = sub_1C26E44C0;
  *(void *)(v6 + 48) = v5;
  swift_retain();
  return swift_release();
}

uint64_t sub_1C26E383C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, void *))
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  v10[0] = sub_1C26B33A0;
  v10[1] = v8;
  swift_retain();
  a4(a1, v10);

  return swift_release();
}

uint64_t sub_1C26E38E0()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 40);
  swift_retain();
  return v1;
}

uint64_t sub_1C26E392C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return swift_release();
}

uint64_t (*sub_1C26E3980())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C26E39D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 40);
  swift_retain();
  v7(a1, a2, a3);
  return swift_release();
}

void *MockAnchorStorage.__allocating_init()()
{
  uint64_t v0 = (void *)swift_allocObject();
  v0[2] = sub_1C267D090(MEMORY[0x1E4FBC860]);
  v0[3] = nullsub_1;
  v0[4] = 0;
  v0[5] = nullsub_1;
  v0[6] = 0;
  uint64_t v1 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  v0[3] = sub_1C26E4004;
  v0[4] = v1;
  swift_release();
  uint64_t v2 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  v0[5] = sub_1C26E40C4;
  v0[6] = v2;
  swift_release();
  return v0;
}

void *MockAnchorStorage.init()()
{
  v0[2] = sub_1C267D090(MEMORY[0x1E4FBC860]);
  v0[3] = nullsub_1;
  v0[4] = 0;
  v0[5] = nullsub_1;
  v0[6] = 0;
  uint64_t v1 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  v0[3] = sub_1C26E4004;
  v0[4] = v1;
  swift_release();
  uint64_t v2 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  v0[5] = sub_1C26E40C4;
  v0[6] = v2;
  swift_release();
  return v0;
}

uint64_t sub_1C26E3CC4()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C26E3CFC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = sub_1C277AC50();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return a3();
  }
  uint64_t v11 = *(void *)(a2 + 16);
  if (!v11) {
    return swift_release();
  }
  v33[1] = Strong;
  _OWORD v33[2] = a2;
  uint64_t v12 = (void *)(Strong + 16);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v13 = v7 + 16;
  uint64_t v15 = a2 + ((*(unsigned __int8 *)(v13 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 64));
  uint64_t v35 = *(void *)(v13 + 56);
  long long v36 = v14;
  uint64_t v37 = v13;
  long long v34 = (void (**)(char *, uint64_t))(v13 - 8);
  swift_bridgeObjectRetain();
  while (1)
  {
    v36(v9, v15, v6);
    swift_beginAccess();
    uint64_t v17 = a1;
    swift_retain();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    long long v38 = (void *)*v12;
    uint64_t v19 = v38;
    *uint64_t v12 = 0x8000000000000000;
    unint64_t v21 = sub_1C26733D4((uint64_t)v9);
    uint64_t v22 = v19[2];
    BOOL v23 = (v20 & 1) == 0;
    uint64_t v24 = v22 + v23;
    if (__OFADD__(v22, v23)) {
      break;
    }
    char v25 = v20;
    if (v19[3] >= v24)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v28 = v38;
        if (v20) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_1C2678A6C();
        uint64_t v28 = v38;
        if (v25) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_1C2675DBC(v24, isUniquelyReferenced_nonNull_native);
      unint64_t v26 = sub_1C26733D4((uint64_t)v9);
      if ((v25 & 1) != (v27 & 1)) {
        goto LABEL_23;
      }
      unint64_t v21 = v26;
      uint64_t v28 = v38;
      if (v25)
      {
LABEL_4:
        uint64_t v16 = v28[7];
        swift_release();
        a1 = v17;
        *(void *)(v16 + 8 * v21) = v17;
        goto LABEL_5;
      }
    }
    v28[(v21 >> 6) + 8] |= 1 << v21;
    v36((char *)(v28[6] + v21 * v35), (uint64_t)v9, v6);
    *(void *)(v28[7] + 8 * v21) = v17;
    uint64_t v29 = v28[2];
    BOOL v30 = __OFADD__(v29, 1);
    uint64_t v31 = v29 + 1;
    if (v30) {
      goto LABEL_22;
    }
    a1 = v17;
    void v28[2] = v31;
LABEL_5:
    *uint64_t v12 = v28;
    swift_bridgeObjectRelease();
    (*v34)(v9, v6);
    swift_endAccess();
    v15 += v35;
    if (!--v11)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  uint64_t result = sub_1C277C850();
  __break(1u);
  return result;
}

uint64_t sub_1C26E4004(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return sub_1C26E3CFC(a1, a2, a3);
}

uint64_t sub_1C26E400C(uint64_t a1, void (*a2)(void))
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_beginAccess();
    uint64_t v3 = swift_bridgeObjectRetain();
    ((void (*)(uint64_t, void))a2)(v3, 0);
    swift_release();
  }
  else
  {
    sub_1C267D090(MEMORY[0x1E4FBC860]);
    a2();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C26E40C4(uint64_t a1, void (*a2)(void))
{
  return sub_1C26E400C(a1, a2);
}

uint64_t MockAnchorStorage.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t MockAnchorStorage.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1C26E4144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  swift_beginAccess();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  swift_retain();
  v8(a1, a2, a3);
  return swift_release();
}

uint64_t sub_1C26E41C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *v4;
  swift_beginAccess();
  id v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 24);
  swift_retain();
  v10(a1, a2, a3, a4);
  return swift_release();
}

uint64_t sub_1C26E424C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for MockAnchorStorage()
{
  return self;
}

uint64_t method lookup function for MockAnchorStorage(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MockAnchorStorage);
}

uint64_t dispatch thunk of MockAnchorStorage.storage.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of MockAnchorStorage.storage.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of MockAnchorStorage.storage.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of MockAnchorStorage.storeHandler.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of MockAnchorStorage.storeHandler.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of MockAnchorStorage.storeHandler.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of MockAnchorStorage.store(anchor:for:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of MockAnchorStorage.allStoredAnchorsHandler.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of MockAnchorStorage.allStoredAnchorsHandler.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of MockAnchorStorage.allStoredAnchorsHandler.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of MockAnchorStorage.allStoredAnchors(availableSignals:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of MockAnchorStorage.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t sub_1C26E4488()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C26E44C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C26E383C(a1, a2, a3, *(void (**)(uint64_t, void *))(v3 + 16));
}

uint64_t sub_1C26E44C8(uint64_t a1, uint64_t *a2)
{
  return sub_1C26E3714(a1, a2, *(void (**)(uint64_t, uint64_t (*)(uint64_t, char), uint64_t))(v2 + 16));
}

uint64_t sub_1C26E44D0(uint64_t a1, char a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  uint64_t v5 = a1;
  char v6 = a2 & 1;
  return v3(&v5);
}

uint64_t sub_1C26E4510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C26E34C8(a1, a2, a3, a4, *(void (**)(uint64_t *, uint64_t *, void *))(v4 + 16));
}

uint64_t sub_1C26E4518(void *a1)
{
  return sub_1C2736688(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1C26E4520(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  return sub_1C26E3390(a1, a2, a3, *(void (**)(uint64_t, uint64_t, uint64_t (*)(uint64_t), uint64_t))(v3 + 16));
}

uint64_t sub_1C26E4528(uint64_t a1)
{
  return sub_1C2736650(a1, *(uint64_t (**)(uint64_t *))(v1 + 16));
}

uint64_t FeedItem.FavoriteStatus.isFavorite.getter(char a1)
{
  if (a1) {
    char v1 = sub_1C277C7E0();
  }
  else {
    char v1 = 1;
  }
  swift_bridgeObjectRelease();
  return v1 & 1;
}

BOOL FeedItem.FavoriteStatus.init(_:)(char a1)
{
  return (a1 & 1) == 0;
}

uint64_t sub_1C26E4604(unsigned char *a1, unsigned char *a2)
{
  int v2 = *a1;
  uint64_t v3 = 0x726F766146746F6ELL;
  unint64_t v4 = 0xEC00000064657469;
  if (v2 != 1)
  {
    uint64_t v3 = 0x626967696C656E69;
    unint64_t v4 = 0xEA0000000000656CLL;
  }
  if (*a1) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = 0x657469726F766166;
  }
  if (v2) {
    unint64_t v6 = v4;
  }
  else {
    unint64_t v6 = 0xE900000000000064;
  }
  uint64_t v7 = 0x726F766146746F6ELL;
  unint64_t v8 = 0xEC00000064657469;
  if (*a2 != 1)
  {
    uint64_t v7 = 0x626967696C656E69;
    unint64_t v8 = 0xEA0000000000656CLL;
  }
  if (*a2) {
    uint64_t v9 = v7;
  }
  else {
    uint64_t v9 = 0x657469726F766166;
  }
  if (*a2) {
    unint64_t v10 = v8;
  }
  else {
    unint64_t v10 = 0xE900000000000064;
  }
  if (v5 == v9 && v6 == v10) {
    char v11 = 1;
  }
  else {
    char v11 = sub_1C277C7E0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t sub_1C26E4724@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s14HealthPlatform8FeedItemC14FavoriteStatusO8rawValueAESgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_1C26E4754(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE900000000000064;
  unint64_t v4 = 0xEC00000064657469;
  uint64_t v5 = 0x726F766146746F6ELL;
  if (v2 != 1)
  {
    uint64_t v5 = 0x626967696C656E69;
    unint64_t v4 = 0xEA0000000000656CLL;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x657469726F766166;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1C26E47C4()
{
  return sub_1C277C910();
}

uint64_t sub_1C26E4878()
{
  sub_1C277B8B0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C26E4918()
{
  return sub_1C277C910();
}

uint64_t _s14HealthPlatform8FeedItemC14FavoriteStatusO8rawValueAESgSS_tcfC_0()
{
  unint64_t v0 = sub_1C277C650();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

unint64_t sub_1C26E4A18()
{
  unint64_t result = qword_1EA304B98;
  if (!qword_1EA304B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304B98);
  }
  return result;
}

unsigned char *_s14FavoriteStatusOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C26E4B38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedItem.FavoriteStatus()
{
  return &type metadata for FeedItem.FavoriteStatus;
}

uint64_t (*BasicSharableModelGeneratorPipeline.domain.modify())()
{
  return nullsub_1;
}

double BasicSharableModelGeneratorPipeline.init(generator:domain:)@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C26E4FAC(0, &qword_1EA304BA0, (void (*)(uint64_t))sub_1C26E4D0C);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v10 = (char *)v15 - v9;
  uint64_t v11 = *a2;
  char v12 = *((unsigned char *)a2 + 24);
  sub_1C26482E4(a1, (uint64_t)v16);
  sub_1C26E4D0C();
  *(_OWORD *)uint64_t v15 = *(_OWORD *)(a2 + 1);
  sub_1C277B440();
  sub_1C26E5058(&qword_1EA304BB0, &qword_1EA304BA0, (void (*)(uint64_t))sub_1C26E4D0C);
  uint64_t v13 = sub_1C277B4E0();
  __swift_destroy_boxed_opaque_existential_0(a1);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *(void *)a3 = v13;
  *(void *)(a3 + 8) = v11;
  double result = v15[0];
  *(_OWORD *)(a3 + 16) = *(_OWORD *)v15;
  *(unsigned char *)(a3 + 32) = v12;
  return result;
}

unint64_t sub_1C26E4D0C()
{
  unint64_t result = qword_1EA304BA8;
  if (!qword_1EA304BA8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA304BA8);
  }
  return result;
}

uint64_t BasicSharableModelGenerator.publisher.getter()
{
  return swift_retain();
}

uint64_t BasicSharableModelGenerator.publisher.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  void *v1 = a1;
  return result;
}

uint64_t (*BasicSharableModelGenerator.publisher.modify())()
{
  return nullsub_1;
}

__n128 _s14HealthPlatform35BasicSharableModelGeneratorPipelineV6domainAA0F6DomainVvs_0(uint64_t a1)
{
  unint64_t v3 = *(void *)a1;
  unsigned __int8 v4 = *(unsigned char *)(a1 + 24);
  uint64_t v5 = (void *)v1->n128_u64[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v1->n128_u64[1] = v3;
  __n128 result = *(__n128 *)(a1 + 8);
  v1[1] = result;
  v1[2].n128_u8[0] = v4;
  return result;
}

uint64_t (*BasicSharableModelGenerator.domain.modify())()
{
  return nullsub_1;
}

double BasicSharableModelGenerator.init(changes:domain:)@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C26E4FAC(0, &qword_1EBB82CF8, (void (*)(uint64_t))sub_1C26E5000);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v10 = (char *)v15 - v9;
  uint64_t v11 = *a2;
  char v12 = *((unsigned char *)a2 + 24);
  uint64_t v16 = a1;
  sub_1C26E5000();
  *(_OWORD *)uint64_t v15 = *(_OWORD *)(a2 + 1);
  sub_1C277B440();
  sub_1C26E5058(&qword_1EBB82CF0, &qword_1EBB82CF8, (void (*)(uint64_t))sub_1C26E5000);
  uint64_t v13 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *(void *)a3 = v13;
  *(void *)(a3 + 8) = v11;
  double result = v15[0];
  *(_OWORD *)(a3 + 16) = *(_OWORD *)v15;
  *(unsigned char *)(a3 + 32) = v12;
  return result;
}

void sub_1C26E4FAC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C277B430();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C26E5000()
{
  if (!qword_1EBB82E10)
  {
    unint64_t v0 = sub_1C277BB20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB82E10);
    }
  }
}

uint64_t sub_1C26E5058(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C26E4FAC(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for BasicSharableModelGeneratorPipeline()
{
  return &type metadata for BasicSharableModelGeneratorPipeline;
}

ValueMetadata *type metadata accessor for BasicSharableModelGenerator()
{
  return &type metadata for BasicSharableModelGenerator;
}

uint64_t EncodedFeatureTag.__allocating_init(context:name:data:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v6 = v5;
  unint64_t v10 = self;
  uint64_t v11 = (void *)sub_1C277B820();
  id v12 = objc_msgSend(v10, sel_entityForName_inManagedObjectContext_, v11, a1);

  if (v12)
  {
    id v13 = objc_msgSend(objc_allocWithZone(v6), sel_initWithEntity_insertIntoManagedObjectContext_, v12, a1);
    uint64_t v14 = (void *)sub_1C277B820();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_setName_, v14);

    uint64_t v15 = (void *)sub_1C277A770();
    objc_msgSend(v13, sel_setData_, v15);
    sub_1C263CC84(a4, a5);

    return (uint64_t)v13;
  }
  else
  {
    uint64_t result = sub_1C277C560();
    __break(1u);
  }
  return result;
}

HealthPlatform::DailyRoutineKind_optional __swiftcall DailyRoutineKind.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 10) {
    v1.value = HealthPlatform_DailyRoutineKind_evening;
  }
  else {
    v1.value = HealthPlatform_DailyRoutineKind_unknownDefault;
  }
  if (rawValue) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t DailyRoutineKind.rawValue.getter(char a1)
{
  if (a1) {
    return 10;
  }
  else {
    return 0;
  }
}

uint64_t sub_1C26E5294()
{
  return sub_1C277C910();
}

uint64_t sub_1C26E52E4()
{
  return sub_1C277C8D0();
}

uint64_t sub_1C26E531C()
{
  return sub_1C277C910();
}

void *sub_1C26E5368@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 10) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

void sub_1C26E5388(uint64_t *a1@<X8>)
{
  uint64_t v2 = 10;
  if (!*v1) {
    uint64_t v2 = 0;
  }
  *a1 = v2;
}

uint64_t sub_1C26E53A0()
{
  return sub_1C277BA10();
}

uint64_t sub_1C26E5400()
{
  return sub_1C277B9F0();
}

uint64_t DailyRoutineFeatureTag.value.getter()
{
  return *v0;
}

HealthPlatform::DailyRoutineFeatureTag __swiftcall DailyRoutineFeatureTag.init(_:)(HealthPlatform::DailyRoutineFeatureTag result)
{
  unsigned char *v1 = result.value & 1;
  return result;
}

unint64_t sub_1C26E5468()
{
  unint64_t result = qword_1EA304BB8;
  if (!qword_1EA304BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304BB8);
  }
  return result;
}

ValueMetadata *type metadata accessor for DailyRoutineKind()
{
  return &type metadata for DailyRoutineKind;
}

unsigned char *_s14HealthPlatform16DailyRoutineKindOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C26E55A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DailyRoutineFeatureTag()
{
  return &type metadata for DailyRoutineFeatureTag;
}

unint64_t sub_1C26E55D8()
{
  unint64_t result = qword_1EA304BC0;
  if (!qword_1EA304BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304BC0);
  }
  return result;
}

uint64_t Publisher.tupleWithPrevious()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v35 = a3;
  uint64_t v29 = a2;
  uint64_t v30 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_1C277C0B0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v33 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v8 = (char *)&v29 - v7;
  uint64_t v9 = *(void *)(v4 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v6);
  id v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v29 - v13;
  uint64_t v32 = sub_1C277B1F0();
  uint64_t v34 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  uint64_t v16 = (char *)&v29 - v15;
  uint64_t v17 = AssociatedTypeWitness;
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56);
  uint64_t v31 = v17;
  v18(v14, 1, 1, v17);
  v18(v12, 1, 1, v17);
  uint64_t v19 = &v8[*(int *)(TupleTypeMetadata2 + 48)];
  char v20 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v20(v8, v14, v4);
  v20(v19, v12, v4);
  uint64_t v21 = swift_allocObject();
  uint64_t v23 = v29;
  uint64_t v22 = v30;
  *(void *)(v21 + 16) = v30;
  *(void *)(v21 + 24) = v23;
  uint64_t v24 = v22;
  uint64_t v25 = v23;
  sub_1C277B510();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v8, TupleTypeMetadata2);
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v24;
  *(void *)(v26 + 24) = v25;
  swift_getTupleTypeMetadata2();
  uint64_t v27 = v32;
  swift_getWitnessTable();
  sub_1C277B4F0();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v16, v27);
}

uint64_t sub_1C26E5A04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v21 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_1C277C0B0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v8 = MEMORY[0x1F4188790](TupleTypeMetadata2 - 8);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t v11 = *(int *)(v8 + 56);
  uint64_t v12 = a3 + v11;
  uint64_t v13 = &v10[v11];
  uint64_t v14 = a1;
  uint64_t v15 = a1 + v11;
  uint64_t v16 = *(void *)(v6 - 8);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v17(v10, v14, v6);
  v17(v13, v15, v6);
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(a3, v13, v6);
  uint64_t v18 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v12, v21, AssociatedTypeWitness);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v12, 0, 1, AssociatedTypeWitness);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v10, v6);
}

uint64_t sub_1C26E5BF4()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C26E5C04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C26E5A04(a1, a2, a3);
}

uint64_t sub_1C26E5C0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_1C277C0B0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v6 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v33 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v27 - v9;
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v8);
  uint64_t v34 = (char *)v27 - v13;
  uint64_t v30 = v12;
  uint64_t v31 = a1;
  uint64_t v14 = *(int *)(v12 + 48);
  uint64_t v15 = &v10[v14];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = *(void *)(v4 - 8);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v18(v10, a1, v4);
  uint64_t v32 = v16;
  v18(v15, v16, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v15, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v19 = *(void (**)(char *, uint64_t))(v17 + 8);
    v19(v15, v4);
    v19(v10, v4);
    uint64_t v20 = swift_getTupleTypeMetadata2();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v35, 1, 1, v20);
  }
  else
  {
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v28(v34, v15, AssociatedTypeWitness);
    uint64_t v22 = *(uint64_t (**)(char *, uint64_t))(v17 + 8);
    v27[1] = v17 + 8;
    uint64_t v29 = v22;
    v22(v10, v4);
    uint64_t v23 = swift_getTupleTypeMetadata2();
    uint64_t v24 = v35;
    v27[0] = v35 + *(int *)(v23 + 48);
    uint64_t v25 = v33;
    uint64_t v26 = &v33[*(int *)(v30 + 48)];
    v18(v33, v31, v4);
    v18(v26, v32, v4);
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v24, v25, v4);
    v28((char *)v27[0], v34, AssociatedTypeWitness);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v24, 0, 1, v23);
    return v29(v26, v4);
  }
}

uint64_t sub_1C26E5FDC()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C26E5FEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C26E5C0C(a1, a2);
}

uint64_t sub_1C26E5FF4()
{
  HealthPlatform::DailyRoutineKind_optional v1 = v0;
  sub_1C2627398();
  uint64_t v2 = sub_1C277B860();
  uint64_t v4 = v3;
  uint64_t v5 = sub_1C262722C();
  unint64_t v7 = v6;
  id v8 = objc_msgSend(v0, sel_managedObjectContext);
  if (v8)
  {
    uint64_t v9 = v8;
    _s14HealthPlatform8FeedItemC9removeTag4nameySS_tF_0(v2, v4);
    type metadata accessor for EncodedFeatureTag();
    id v10 = v9;
    swift_bridgeObjectRetain();
    sub_1C263D360(v5, v7);
    uint64_t v11 = (void *)EncodedFeatureTag.__allocating_init(context:name:data:)(v10, v2, v4, v5, v7);
    objc_msgSend(v1, sel_addFeatureTagsObject_, v11);

    sub_1C263CC84(v5, v7);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = sub_1C277C560();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C26E6160()
{
  HealthPlatform::DailyRoutineKind_optional v1 = v0;
  sub_1C269EAD0();
  uint64_t v2 = sub_1C277B860();
  uint64_t v4 = v3;
  sub_1C277A4D0();
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_1C277A4C0();
  sub_1C26E7F38();
  sub_1C2642C64((unint64_t *)&qword_1EBB857B0, (void (*)(uint64_t))sub_1C26E7F38);
  uint64_t v5 = sub_1C277A4B0();
  unint64_t v7 = v6;
  swift_release();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v0, sel_managedObjectContext);
  if (v8)
  {
    uint64_t v9 = v8;
    _s14HealthPlatform8FeedItemC9removeTag4nameySS_tF_0(v2, v4);
    type metadata accessor for EncodedFeatureTag();
    id v10 = v9;
    swift_bridgeObjectRetain();
    sub_1C263D360(v5, v7);
    uint64_t v11 = (void *)EncodedFeatureTag.__allocating_init(context:name:data:)(v10, v2, v4, v5, v7);
    objc_msgSend(v1, sel_addFeatureTagsObject_, v11);

    sub_1C263CC84(v5, v7);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = sub_1C277C560();
    __break(1u);
  }
  return result;
}

void PluginFeedItem.init(feedItem:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v146 = a2;
  sub_1C263D4EC(0);
  MEMORY[0x1F4188790](v3 - 8);
  v149 = (char *)v138 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = (int *)type metadata accessor for PluginFeedItem();
  MEMORY[0x1F4188790](v147);
  unint64_t v6 = (char *)v138 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(a1, sel_uniqueIdentifier);
  uint64_t v8 = sub_1C277B850();
  uint64_t v10 = v9;

  uint64_t v11 = FeedItem.userInterface.getter();
  uint64_t v13 = v12;
  int v15 = v14;
  uint64_t v139 = a1;
  id v16 = objc_msgSend(a1, sel_userData);
  LODWORD(v148) = v15;
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = sub_1C277A780();
    uint64_t v20 = v19;
  }
  else
  {
    uint64_t v18 = 0;
    uint64_t v20 = 0xF000000000000000;
  }
  uint64_t v21 = v139;
  FeedItem.contentKind.getter((char *)v152);
  uint64_t v22 = FeedItem.associatedProfiles.getter();
  uint64_t v23 = sub_1C26D1F20(v22);
  swift_bridgeObjectRelease();
  uint64_t v24 = v8;
  uint64_t v25 = v21;
  PluginFeedItem.init(uniqueIdentifier:userInterface:userData:contentKind:sourceProfile:)(v24, v10, v11, v13, v148, v18, v20, (char *)v152, (uint64_t)v6, v23);
  uint64_t v26 = v146;
  sub_1C267BC50((uint64_t)v6, v146);
  *(unsigned char *)(v26 + 33) = objc_msgSend(v21, sel_usesPlatformView);
  id v27 = objc_msgSend(v21, sel_actionHandlerClassName);
  if (v27)
  {
    uint64_t v28 = v27;
    uint64_t v29 = sub_1C277B850();
    uint64_t v31 = v30;
  }
  else
  {
    uint64_t v29 = 0;
    uint64_t v31 = 0;
  }
  uint64_t v32 = (uint64_t)v149;
  swift_bridgeObjectRelease();
  *(void *)(v26 + 40) = v29;
  *(void *)(v26 + 48) = v31;
  id v33 = objc_msgSend(v25, sel_actionHandlerUserData);
  if (v33)
  {
    uint64_t v34 = v33;
    uint64_t v35 = sub_1C277A780();
    unint64_t v37 = v36;
  }
  else
  {
    uint64_t v35 = 0;
    unint64_t v37 = 0xF000000000000000;
  }
  sub_1C2641B58(*(void *)(v26 + 56), *(void *)(v26 + 64));
  *(void *)(v26 + 56) = v35;
  *(void *)(v26 + 64) = v37;
  id v38 = objc_msgSend(v25, sel_baseAutomationIdentifier);
  if (v38)
  {
    long long v39 = v38;
    uint64_t v40 = sub_1C277B850();
    uint64_t v42 = v41;
  }
  else
  {
    uint64_t v40 = 0;
    uint64_t v42 = 0;
  }
  swift_bridgeObjectRelease();
  *(void *)(v26 + 72) = v40;
  *(void *)(v26 + 80) = v42;
  FeedItem.relevantDateInterval.getter(v32);
  uint64_t v43 = v147;
  sub_1C2687E88(v32, v26 + v147[11]);
  id v44 = objc_msgSend(v25, sel_dataTypes);
  type metadata accessor for DataType();
  sub_1C2642C64((unint64_t *)&unk_1EBB85090, (void (*)(uint64_t))type metadata accessor for DataType);
  uint64_t v45 = sub_1C277BBC0();

  sub_1C2654BD8(v45);
  unint64_t v47 = v46;
  swift_bridgeObjectRelease();
  uint64_t v48 = sub_1C2649500(v47);
  swift_bridgeObjectRelease();
  uint64_t v49 = v43[13];
  swift_bridgeObjectRelease();
  *(void *)(v26 + v49) = v48;
  uint64_t v50 = FeedItem.associatedSharableModelReferences.getter();
  uint64_t v51 = v43[14];
  swift_bridgeObjectRelease();
  *(void *)(v26 + v51) = v50;
  id v52 = objc_msgSend(v25, sel_categoryIdentifier);
  if (v52)
  {
    int v53 = v52;
    uint64_t v54 = sub_1C277B850();
    uint64_t v56 = v55;
  }
  else
  {
    uint64_t v54 = 0;
    uint64_t v56 = 0;
  }
  uint64_t v57 = (uint64_t *)(v26 + v147[15]);
  swift_bridgeObjectRelease();
  *uint64_t v57 = v54;
  v57[1] = v56;
  id v58 = objc_msgSend(v25, sel_featureTags);
  uint64_t v59 = type metadata accessor for EncodedFeatureTag();
  sub_1C2642C64(&qword_1EBB853A8, (void (*)(uint64_t))type metadata accessor for EncodedFeatureTag);
  uint64_t v60 = sub_1C277BBC0();

  uint64_t v141 = v59;
  if ((v60 & 0xC000000000000001) != 0)
  {
    sub_1C277C170();
    sub_1C277BC10();
    uint64_t v60 = v152[0];
    uint64_t v144 = v152[1];
    uint64_t v61 = v152[2];
    os_log_t v62 = (char *)v152[3];
    unint64_t v63 = v152[4];
  }
  else
  {
    os_log_t v62 = 0;
    uint64_t v64 = -1 << *(unsigned char *)(v60 + 32);
    uint64_t v65 = *(void *)(v60 + 56);
    uint64_t v144 = v60 + 56;
    uint64_t v66 = ~v64;
    uint64_t v67 = -v64;
    if (v67 < 64) {
      uint64_t v68 = ~(-1 << v67);
    }
    else {
      uint64_t v68 = -1;
    }
    unint64_t v63 = v68 & v65;
    uint64_t v61 = v66;
  }
  v138[1] = v61;
  uint64_t v142 = v60 & 0x7FFFFFFFFFFFFFFFLL;
  int64_t v143 = (unint64_t)(v61 + 64) >> 6;
  uint64_t v140 = MEMORY[0x1E4FBC838] + 8;
  uint64_t v145 = v60;
  while (v60 < 0)
  {
    uint64_t v73 = sub_1C277C200();
    if (!v73) {
      goto LABEL_57;
    }
    uint64_t v150 = v73;
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v74 = v151;
    swift_unknownObjectRelease();
    uint64_t v72 = v62;
    uint64_t v70 = v63;
    if (!v74) {
      goto LABEL_57;
    }
LABEL_46:
    uint64_t v148 = v70;
    v149 = v72;
    id v78 = objc_msgSend(v74, sel_name);
    uint64_t v79 = sub_1C277B850();
    uint64_t v81 = v80;

    id v82 = objc_msgSend(v74, sel_data);
    uint64_t v83 = sub_1C277A780();
    uint64_t v85 = v84;

    uint64_t v86 = v147[16];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v151 = *(void **)(v26 + v86);
    unint64_t v88 = v151;
    *(void *)(v26 + v86) = 0x8000000000000000;
    unint64_t v90 = sub_1C2629588(v79, v81);
    uint64_t v91 = v88[2];
    BOOL v92 = (v89 & 1) == 0;
    uint64_t v93 = v91 + v92;
    if (__OFADD__(v91, v92))
    {
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      sub_1C277C850();
      __break(1u);
      return;
    }
    char v94 = v89;
    if (v88[3] >= v93)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        unint64_t v97 = v151;
        if (v89) {
          goto LABEL_23;
        }
      }
      else
      {
        sub_1C2677A30();
        unint64_t v97 = v151;
        if (v94) {
          goto LABEL_23;
        }
      }
    }
    else
    {
      sub_1C2626EB8(v93, isUniquelyReferenced_nonNull_native);
      unint64_t v95 = sub_1C2629588(v79, v81);
      if ((v94 & 1) != (v96 & 1)) {
        goto LABEL_76;
      }
      unint64_t v90 = v95;
      unint64_t v97 = v151;
      if (v94)
      {
LABEL_23:
        uint64_t v69 = v97[7] + 16 * v90;
        sub_1C263CC84(*(void *)v69, *(void *)(v69 + 8));
        *(void *)uint64_t v69 = v83;
        *(void *)(v69 + 8) = v85;
        goto LABEL_24;
      }
    }
    v97[(v90 >> 6) + 8] |= 1 << v90;
    uint64_t v98 = (uint64_t *)(v97[6] + 16 * v90);
    uint64_t *v98 = v79;
    v98[1] = v81;
    int v99 = (uint64_t *)(v97[7] + 16 * v90);
    *int v99 = v83;
    v99[1] = v85;
    uint64_t v100 = v97[2];
    BOOL v101 = __OFADD__(v100, 1);
    uint64_t v102 = v100 + 1;
    if (v101) {
      goto LABEL_74;
    }
    v97[2] = v102;
    swift_bridgeObjectRetain();
LABEL_24:
    uint64_t v26 = v146;
    *(void *)(v146 + v86) = v97;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v63 = v148;
    os_log_t v62 = v149;
    uint64_t v60 = v145;
  }
  if (v63)
  {
    uint64_t v70 = (v63 - 1) & v63;
    unint64_t v71 = __clz(__rbit64(v63)) | ((void)v62 << 6);
    uint64_t v72 = v62;
    goto LABEL_45;
  }
  int64_t v75 = (int64_t)(v62 + 1);
  if (__OFADD__(v62, 1)) {
    goto LABEL_75;
  }
  if (v75 >= v143) {
    goto LABEL_57;
  }
  unint64_t v76 = *(void *)(v144 + 8 * v75);
  uint64_t v72 = v62 + 1;
  if (v76) {
    goto LABEL_44;
  }
  uint64_t v72 = v62 + 2;
  if ((uint64_t)(v62 + 2) >= v143) {
    goto LABEL_57;
  }
  unint64_t v76 = *(void *)(v144 + 8 * (void)v72);
  if (v76) {
    goto LABEL_44;
  }
  uint64_t v72 = v62 + 3;
  if ((uint64_t)(v62 + 3) >= v143) {
    goto LABEL_57;
  }
  unint64_t v76 = *(void *)(v144 + 8 * (void)v72);
  if (v76) {
    goto LABEL_44;
  }
  uint64_t v72 = v62 + 4;
  if ((uint64_t)(v62 + 4) >= v143) {
    goto LABEL_57;
  }
  unint64_t v76 = *(void *)(v144 + 8 * (void)v72);
  if (v76)
  {
LABEL_44:
    uint64_t v70 = (v76 - 1) & v76;
    unint64_t v71 = __clz(__rbit64(v76)) + ((void)v72 << 6);
LABEL_45:
    id v74 = *(id *)(*(void *)(v60 + 48) + 8 * v71);
    if (!v74) {
      goto LABEL_57;
    }
    goto LABEL_46;
  }
  uint64_t v77 = v62 + 5;
  while ((char *)v143 != v77)
  {
    unint64_t v76 = *(void *)(v144 + 8 * (void)v77++);
    if (v76)
    {
      uint64_t v72 = v77 - 1;
      goto LABEL_44;
    }
  }
LABEL_57:
  sub_1C2648F6C();
  uint64_t v103 = v139;
  uint64_t v104 = FeedItem.associatedKeywords.getter();
  uint64_t v105 = v147;
  uint64_t v106 = v147[17];
  swift_bridgeObjectRelease();
  *(void *)(v26 + v106) = v104;
  uint64_t v107 = FeedItem.associatedProfiles.getter();
  uint64_t v108 = sub_1C26D1F20(v107);
  swift_bridgeObjectRelease();
  uint64_t v109 = v105[18];

  *(void *)(v26 + v109) = v108;
  id v110 = objc_msgSend(v103, sel_localizedCategoryName);
  if (v110)
  {
    os_log_t v111 = v110;
    uint64_t v112 = sub_1C277B850();
    uint64_t v114 = v113;
  }
  else
  {
    uint64_t v112 = 0;
    uint64_t v114 = 0;
  }
  uint64_t v115 = (uint64_t *)(v26 + v147[19]);
  swift_bridgeObjectRelease();
  *uint64_t v115 = v112;
  v115[1] = v114;
  id v116 = objc_msgSend(v103, sel_localizedTitle);
  if (v116)
  {
    uint64_t v117 = v116;
    uint64_t v118 = sub_1C277B850();
    uint64_t v120 = v119;
  }
  else
  {
    uint64_t v118 = 0;
    uint64_t v120 = 0;
  }
  os_log_t v121 = (uint64_t *)(v26 + v147[20]);
  swift_bridgeObjectRelease();
  *os_log_t v121 = v118;
  v121[1] = v120;
  id v122 = objc_msgSend(v103, sel_localizedDescription);
  if (v122)
  {
    uint64_t v123 = v122;
    uint64_t v124 = sub_1C277B850();
    uint64_t v126 = v125;
  }
  else
  {
    uint64_t v124 = 0;
    uint64_t v126 = 0;
  }
  uint64_t v127 = v147;
  v128 = (uint64_t *)(v26 + v147[21]);
  swift_bridgeObjectRelease();
  uint64_t *v128 = v124;
  v128[1] = v126;
  *(void *)(v26 + v127[22]) = objc_msgSend(v103, sel_sortHint);
  if ((objc_msgSend(v103, sel_searchSectionHintRawValue) & 0x80000000) != 0) {
    char v129 = 13;
  }
  else {
    char v129 = _s14HealthPlatform13SearchSectionO8rawValueACSgs5Int16V_tcfC_0((uint64_t)objc_msgSend(v103, sel_searchSectionHintRawValue));
  }
  v130 = v147;
  *(unsigned char *)(v26 + v147[23]) = v129;
  *(unsigned char *)(v26 + v130[24]) = objc_msgSend(v103, sel_indexForSearch);
  *(unsigned char *)(v26 + v130[25]) = objc_msgSend(v103, sel_hideInDiscover);
  id v131 = objc_msgSend(v103, sel_pinnedContentIdentifier);
  if (v131)
  {
    uint64_t v132 = v131;
    uint64_t v133 = sub_1C277B850();
    uint64_t v135 = v134;
  }
  else
  {
    uint64_t v133 = 0;
    uint64_t v135 = 0;
  }
  v136 = v147;
  uint64_t v137 = (uint64_t *)(v26 + v147[26]);
  swift_bridgeObjectRelease();
  *uint64_t v137 = v133;
  v137[1] = v135;
  FeedItem.hostViewStyle.getter((char *)&v151);

  *(unsigned char *)(v26 + v136[28]) = (_BYTE)v151;
}

uint64_t sub_1C26E6E64(uint64_t a1)
{
  uint64_t v3 = &selRef_relevantEndDate;
  id v4 = objc_msgSend(v1, sel_featureTags);
  uint64_t v5 = (objc_class *)type metadata accessor for EncodedFeatureTag();
  sub_1C2642C64(&qword_1EBB853A8, (void (*)(uint64_t))type metadata accessor for EncodedFeatureTag);
  uint64_t v6 = sub_1C277BBC0();

  id v7 = v1;
  sub_1C26E7C28(v6, v7);
  swift_bridgeObjectRelease();

  uint64_t v8 = (void *)sub_1C277BBB0();
  objc_msgSend(v7, sel_setFeatureTags_, v8);

  sub_1C26E5FF4();
  uint64_t v9 = sub_1C2649760((uint64_t)&unk_1F1DC53C0);
  id v54 = v7;
  FeedItem.contentKind.getter((char *)&v59);
  LOBYTE(v7) = sub_1C27285B4(v59, v9);
  swift_bridgeObjectRelease();
  if (v7)
  {
    id v10 = v54;
    id v11 = objc_msgSend(v10, sel_uniqueIdentifier);
    sub_1C277B850();

    sub_1C26E6160();
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = *(void *)(a1 + *(int *)(type metadata accessor for PluginFeedItem() + 64));
  uint64_t v51 = v12 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(v12 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v12 + 64);
  int64_t v52 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v53 = v12;
  swift_bridgeObjectRetain();
  int64_t v16 = 0;
  uint64_t v17 = &off_1E6454000;
  uint64_t v18 = v54;
  if (!v15) {
    goto LABEL_7;
  }
LABEL_6:
  uint64_t v55 = (v15 - 1) & v15;
  for (unint64_t i = __clz(__rbit64(v15)) | (v16 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v16 << 6))
  {
    uint64_t v23 = 16 * i;
    uint64_t v24 = (uint64_t *)(*(void *)(v53 + 48) + v23);
    uint64_t v25 = v24[1];
    uint64_t v58 = *v24;
    uint64_t v26 = (uint64_t *)(*(void *)(v53 + 56) + v23);
    uint64_t v28 = *v26;
    unint64_t v27 = v26[1];
    swift_bridgeObjectRetain();
    uint64_t v56 = v28;
    unint64_t v57 = v27;
    sub_1C263D360(v28, v27);
    id v29 = [v18 (SEL)v17[504]];
    if (!v29) {
      goto LABEL_34;
    }
    uint64_t v30 = v29;
    id v31 = [v18 (SEL)v17[504]];
    if (!v31) {
      goto LABEL_34;
    }
    uint64_t v32 = v31;
    id v33 = v18;
    id v34 = [v18 v3[35]];
    uint64_t v35 = sub_1C277BBC0();

    swift_bridgeObjectRetain();
    sub_1C26E78A4(v35, v58, v25);
    unint64_t v37 = v36;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v37)
    {
      id v38 = v3[35];
      long long v39 = v33;
      id v40 = [v33 v38];
      uint64_t v41 = sub_1C277BBC0();

      uint64_t v59 = v41;
      uint64_t v42 = (void *)sub_1C277BBB0();
      swift_bridgeObjectRelease();
      objc_msgSend(v39, sel_setFeatureTags_, v42);

      objc_msgSend(v32, sel_deleteObject_, v37);
    }

    uint64_t v43 = self;
    swift_bridgeObjectRetain();
    sub_1C263D360(v56, v57);
    id v44 = v30;
    uint64_t v45 = (void *)sub_1C277B820();
    id v46 = objc_msgSend(v43, sel_entityForName_inManagedObjectContext_, v45, v44);

    if (!v46) {
      goto LABEL_34;
    }
    id v47 = objc_msgSend(objc_allocWithZone(v5), sel_initWithEntity_insertIntoManagedObjectContext_, v46, v44);
    uint64_t v48 = (void *)sub_1C277B820();
    swift_bridgeObjectRelease();
    objc_msgSend(v47, sel_setName_, v48);

    uint64_t v49 = (void *)sub_1C277A770();
    objc_msgSend(v47, sel_setData_, v49);
    sub_1C263CC84(v56, v57);

    uint64_t v18 = v54;
    objc_msgSend(v54, sel_addFeatureTagsObject_, v47);

    sub_1C263CC84(v56, v57);
    swift_bridgeObjectRelease();
    uint64_t v3 = &selRef_relevantEndDate;
    uint64_t v17 = &off_1E6454000;
    unint64_t v15 = v55;
    if (v55) {
      goto LABEL_6;
    }
LABEL_7:
    if (__OFADD__(v16++, 1))
    {
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      uint64_t result = sub_1C277C560();
      __break(1u);
      return result;
    }
    if (v16 >= v52) {
      goto LABEL_29;
    }
    unint64_t v21 = *(void *)(v51 + 8 * v16);
    if (!v21) {
      break;
    }
LABEL_17:
    uint64_t v55 = (v21 - 1) & v21;
  }
  int64_t v22 = v16 + 1;
  if (v16 + 1 >= v52) {
    goto LABEL_29;
  }
  unint64_t v21 = *(void *)(v51 + 8 * v22);
  if (v21) {
    goto LABEL_16;
  }
  int64_t v22 = v16 + 2;
  if (v16 + 2 >= v52) {
    goto LABEL_29;
  }
  unint64_t v21 = *(void *)(v51 + 8 * v22);
  if (v21)
  {
LABEL_16:
    int64_t v16 = v22;
    goto LABEL_17;
  }
  int64_t v22 = v16 + 3;
  if (v16 + 3 < v52)
  {
    unint64_t v21 = *(void *)(v51 + 8 * v22);
    if (!v21)
    {
      while (1)
      {
        int64_t v16 = v22 + 1;
        if (__OFADD__(v22, 1)) {
          goto LABEL_33;
        }
        if (v16 >= v52) {
          goto LABEL_29;
        }
        unint64_t v21 = *(void *)(v51 + 8 * v16);
        ++v22;
        if (v21) {
          goto LABEL_17;
        }
      }
    }
    goto LABEL_16;
  }
LABEL_29:

  return swift_release();
}

_OWORD *sub_1C26E7504(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_1C262FD34(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_1C26E7570(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = sub_1C277AA10();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1, a3, v8);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

unint64_t sub_1C26E761C(unint64_t result, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  *(void *)(a5[6] + 8 * result) = a2;
  uint64_t v5 = a5[7] + 16 * result;
  *(void *)uint64_t v5 = a3;
  *(unsigned char *)(v5 + 8) = a4 & 1;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

unint64_t sub_1C26E766C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

unint64_t sub_1C26E76B4(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  uint64_t v4 = 8 * result;
  *(void *)(a4[6] + v4) = a2;
  *(void *)(a4[7] + v4) = a3;
  uint64_t v5 = a4[2];
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6) {
    __break(1u);
  }
  else {
    a4[2] = v7;
  }
  return result;
}

uint64_t sub_1C26E7700(unint64_t a1, uint64_t a2, uint64_t a3, long long *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  BOOL v6 = (void *)(a5[6] + 16 * a1);
  *BOOL v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_1C261F308(a4, a5[7] + 40 * a1);
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_1C26E7770(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1C277AC50();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

_OWORD *sub_1C26E7828(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = a4[6] + 40 * a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(a2 + 32);
  uint64_t result = sub_1C262FD34(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

void sub_1C26E78A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C277C170();
    type metadata accessor for EncodedFeatureTag();
    sub_1C2642C64(&qword_1EBB853A8, (void (*)(uint64_t))type metadata accessor for EncodedFeatureTag);
    sub_1C277BC10();
    uint64_t v5 = v30;
    uint64_t v27 = v31;
    uint64_t v6 = v32;
    int64_t v7 = v33;
    unint64_t v8 = v34;
  }
  else
  {
    uint64_t v9 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v27 = a1 + 56;
    uint64_t v10 = ~v9;
    uint64_t v11 = -v9;
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v8 = v12 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v6 = v10;
    int64_t v7 = 0;
  }
  uint64_t v25 = v6;
  int64_t v26 = (unint64_t)(v6 + 64) >> 6;
  int64_t v28 = v7;
  unint64_t v29 = v8;
  if (v5 < 0) {
    goto LABEL_10;
  }
LABEL_8:
  if (v8)
  {
    unint64_t v13 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v14 = v13 | (v7 << 6);
    goto LABEL_29;
  }
  int64_t v16 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v16 < v26)
    {
      unint64_t v17 = *(void *)(v27 + 8 * v16);
      ++v7;
      if (v17) {
        goto LABEL_28;
      }
      int64_t v7 = v16 + 1;
      if (v16 + 1 >= v26) {
        goto LABEL_36;
      }
      unint64_t v17 = *(void *)(v27 + 8 * v7);
      if (v17) {
        goto LABEL_28;
      }
      int64_t v7 = v16 + 2;
      if (v16 + 2 >= v26) {
        goto LABEL_36;
      }
      unint64_t v17 = *(void *)(v27 + 8 * v7);
      if (v17) {
        goto LABEL_28;
      }
      int64_t v7 = v16 + 3;
      if (v16 + 3 >= v26) {
        goto LABEL_36;
      }
      unint64_t v17 = *(void *)(v27 + 8 * v7);
      if (v17)
      {
LABEL_28:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v14 = __clz(__rbit64(v17)) + (v7 << 6);
LABEL_29:
        id v15 = *(id *)(*(void *)(v5 + 48) + 8 * v14);
        if (v15)
        {
          while (1)
          {
            uint64_t v19 = a3;
            id v20 = objc_msgSend(v15, sel_name, v25);
            uint64_t v21 = sub_1C277B850();
            uint64_t v23 = v22;

            a3 = v19;
            if (v21 == a2 && v23 == v19) {
              break;
            }
            char v24 = sub_1C277C7E0();
            swift_bridgeObjectRelease();
            if (v24) {
              goto LABEL_36;
            }

            int64_t v28 = v7;
            unint64_t v29 = v8;
            if ((v5 & 0x8000000000000000) == 0) {
              goto LABEL_8;
            }
LABEL_10:
            if (sub_1C277C200())
            {
              type metadata accessor for EncodedFeatureTag();
              swift_unknownObjectRetain();
              swift_dynamicCast();
              id v15 = v35;
              swift_unknownObjectRelease();
              unint64_t v8 = v29;
              if (v35) {
                continue;
              }
            }
            goto LABEL_36;
          }
          swift_bridgeObjectRelease();
        }
        goto LABEL_36;
      }
      int64_t v7 = v16 + 4;
      if (v16 + 4 < v26)
      {
        unint64_t v17 = *(void *)(v27 + 8 * v7);
        if (!v17)
        {
          uint64_t v18 = v28 + 6;
          while (v26 != v18)
          {
            unint64_t v17 = *(void *)(v27 + 8 * v18++);
            if (v17)
            {
              int64_t v7 = v18 - 1;
              goto LABEL_28;
            }
          }
          goto LABEL_36;
        }
        goto LABEL_28;
      }
    }
LABEL_36:
    sub_1C2648F6C();
    return;
  }
  __break(1u);
}

void sub_1C26E7C28(uint64_t a1, void *a2)
{
  uint64_t v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C277C170();
    type metadata accessor for EncodedFeatureTag();
    sub_1C2642C64(&qword_1EBB853A8, (void (*)(uint64_t))type metadata accessor for EncodedFeatureTag);
    sub_1C277BC10();
    uint64_t v3 = v22;
    uint64_t v21 = v23;
    uint64_t v4 = v24;
    uint64_t v5 = v25;
    unint64_t v6 = v26;
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v21 = a1 + 56;
    uint64_t v8 = ~v7;
    uint64_t v9 = -v7;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v6 = v10 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v4 = v8;
    uint64_t v5 = 0;
  }
  int64_t v20 = (unint64_t)(v4 + 64) >> 6;
  while (v3 < 0)
  {
    if (!sub_1C277C200()) {
      goto LABEL_34;
    }
    type metadata accessor for EncodedFeatureTag();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v14 = v27;
    swift_unknownObjectRelease();
    uint64_t v13 = v5;
    uint64_t v11 = v6;
    if (!v27) {
      goto LABEL_34;
    }
LABEL_32:
    id v18 = objc_msgSend(a2, sel_managedObjectContext);
    if (v18)
    {
      id v19 = v18;
      objc_msgSend(v18, sel_deleteObject_, v14);

      id v14 = v19;
    }

    uint64_t v5 = v13;
    unint64_t v6 = v11;
  }
  if (v6)
  {
    uint64_t v11 = (v6 - 1) & v6;
    unint64_t v12 = __clz(__rbit64(v6)) | (v5 << 6);
    uint64_t v13 = v5;
LABEL_31:
    id v14 = *(id *)(*(void *)(v3 + 48) + 8 * v12);
    if (!v14) {
      goto LABEL_34;
    }
    goto LABEL_32;
  }
  int64_t v15 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    if (v15 >= v20) {
      goto LABEL_34;
    }
    unint64_t v16 = *(void *)(v21 + 8 * v15);
    uint64_t v13 = v5 + 1;
    if (!v16)
    {
      uint64_t v13 = v5 + 2;
      if (v5 + 2 >= v20) {
        goto LABEL_34;
      }
      unint64_t v16 = *(void *)(v21 + 8 * v13);
      if (!v16)
      {
        uint64_t v13 = v5 + 3;
        if (v5 + 3 >= v20) {
          goto LABEL_34;
        }
        unint64_t v16 = *(void *)(v21 + 8 * v13);
        if (!v16)
        {
          uint64_t v13 = v5 + 4;
          if (v5 + 4 >= v20) {
            goto LABEL_34;
          }
          unint64_t v16 = *(void *)(v21 + 8 * v13);
          if (!v16)
          {
            uint64_t v13 = v5 + 5;
            if (v5 + 5 >= v20) {
              goto LABEL_34;
            }
            unint64_t v16 = *(void *)(v21 + 8 * v13);
            if (!v16)
            {
              uint64_t v17 = v5 + 6;
              while (v20 != v17)
              {
                unint64_t v16 = *(void *)(v21 + 8 * v17++);
                if (v16)
                {
                  uint64_t v13 = v17 - 1;
                  goto LABEL_30;
                }
              }
LABEL_34:
              sub_1C2648F6C();
              return;
            }
          }
        }
      }
    }
LABEL_30:
    uint64_t v11 = (v16 - 1) & v16;
    unint64_t v12 = __clz(__rbit64(v16)) + (v13 << 6);
    goto LABEL_31;
  }
  __break(1u);
}

void sub_1C26E7F38()
{
  if (!qword_1EBB857B8)
  {
    unint64_t v0 = type metadata accessor for ValueJSONWrapper();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB857B8);
    }
  }
}

uint64_t static InputSignalIdentifier.healthKitUnitPreferences.getter()
{
  return sub_1C277AED0();
}

uint64_t static InputSignalSet.LookupKey.healthKitUnitPreferences.getter()
{
  uint64_t v0 = sub_1C277AEE0();
  MEMORY[0x1F4188790](v0 - 8);
  sub_1C277AED0();
  type metadata accessor for HealthKitUnitPreferencesInputSignal();
  return sub_1C277ACD0();
}

uint64_t type metadata accessor for HealthKitUnitPreferencesInputSignal()
{
  return self;
}

void *HealthKitUnitPreferencesInputSignal.__allocating_init(context:observer:healthStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();

  return sub_1C26EA2D0(a1, a3, a4, a5, v5, ObjectType, a2);
}

void *HealthKitUnitPreferencesInputSignal.__allocating_init(context:observer:provider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = *(void *)(a5 + 24);
  uint64_t v12 = *(void *)(a5 + 32);
  uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1(a5, v11);
  id v14 = sub_1C26EA380(a1, a2, a3, a4, v13, v5, v11, v12);
  __swift_destroy_boxed_opaque_existential_0(a5);
  return v14;
}

void *HealthKitUnitPreferencesInputSignal.init(context:observer:provider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = *(void *)(a5 + 24);
  uint64_t v12 = *(void *)(a5 + 32);
  uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1(a5, v11);
  MEMORY[0x1F4188790](v13);
  int64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v16 + 16))(v15);
  uint64_t v17 = sub_1C26EA210(a1, a2, a3, a4, (uint64_t)v15, v5, v11, v12);
  __swift_destroy_boxed_opaque_existential_0(a5);
  return v17;
}

uint64_t (*HealthKitUnitPreferencesInputSignal.Anchor.preferences.modify())()
{
  return nullsub_1;
}

void static HealthKitUnitPreferencesInputSignal.Anchor.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
}

void HealthKitUnitPreferencesInputSignal.Anchor.hasDifference(from:for:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  uint64_t v5 = *v2;
  if ((*a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C277C170();
    sub_1C2644ED8(0, &qword_1EBB84260);
    sub_1C26EA49C();
    sub_1C277BC10();
    uint64_t v4 = v40;
    uint64_t v35 = v41;
    uint64_t v6 = v42;
    uint64_t v7 = v43;
    unint64_t v8 = v44;
  }
  else
  {
    uint64_t v9 = -1 << *(unsigned char *)(v4 + 32);
    uint64_t v35 = v4 + 56;
    uint64_t v6 = ~v9;
    uint64_t v10 = -v9;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v8 = v11 & *(void *)(v4 + 56);
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
  }
  int64_t v34 = (unint64_t)(v6 + 64) >> 6;
  uint64_t v33 = v5;
  unint64_t v37 = v5 & 0xC000000000000001;
  unint64_t v36 = v3 & 0xC000000000000001;
  uint64_t v38 = v3;
  while (1)
  {
    uint64_t v12 = v7;
    if ((v4 & 0x8000000000000000) == 0) {
      break;
    }
    if (!sub_1C277C200()) {
      goto LABEL_56;
    }
    sub_1C2644ED8(0, &qword_1EBB84260);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v15 = v39;
    swift_unknownObjectRelease();
    if (!v39) {
      goto LABEL_56;
    }
LABEL_30:
    if (v37)
    {
      id v19 = v15;
      if (sub_1C277C500())
      {
        sub_1C2644ED8(0, &qword_1EBB842E0);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        int64_t v20 = v39;
        swift_unknownObjectRelease();

        if (!v38) {
          goto LABEL_49;
        }
        goto LABEL_41;
      }
    }
    else if (*(void *)(v33 + 16))
    {
      id v21 = v15;
      unint64_t v22 = sub_1C26731B4((uint64_t)v21);
      if (v23)
      {
        int64_t v20 = *(void **)(*(void *)(v33 + 56) + 8 * v22);
        id v24 = v20;

        if (!v38) {
          goto LABEL_49;
        }
        goto LABEL_41;
      }
    }
    int64_t v20 = 0;
    if (!v38) {
      goto LABEL_49;
    }
LABEL_41:
    if (v36)
    {
      id v25 = v15;
      if (!sub_1C277C500())
      {

LABEL_49:
        unint64_t v26 = 0;
        goto LABEL_50;
      }
      sub_1C2644ED8(0, &qword_1EBB842E0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      unint64_t v26 = v39;
      swift_unknownObjectRelease();
    }
    else
    {
      if (!*(void *)(v38 + 16)) {
        goto LABEL_49;
      }
      id v27 = v15;
      unint64_t v28 = sub_1C26731B4((uint64_t)v27);
      if ((v29 & 1) == 0)
      {

        goto LABEL_49;
      }
      unint64_t v26 = *(void **)(*(void *)(v38 + 56) + 8 * v28);
      id v30 = v26;
    }
LABEL_50:
    if (v20)
    {
      if (!v26)
      {

        unint64_t v26 = v20;
LABEL_55:

LABEL_56:
        sub_1C2648F6C();
        return;
      }
      sub_1C2644ED8(0, &qword_1EBB842E0);
      id v31 = v20;
      char v32 = sub_1C277C030();

      if ((v32 & 1) == 0) {
        goto LABEL_56;
      }
    }
    else
    {

      if (v26) {
        goto LABEL_55;
      }
    }
  }
  if (v8)
  {
    unint64_t v13 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v14 = v13 | (v7 << 6);
LABEL_29:
    id v15 = *(id *)(*(void *)(v4 + 48) + 8 * v14);
    if (!v15) {
      goto LABEL_56;
    }
    goto LABEL_30;
  }
  int64_t v16 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v16 >= v34) {
      goto LABEL_56;
    }
    unint64_t v17 = *(void *)(v35 + 8 * v16);
    ++v7;
    if (!v17)
    {
      uint64_t v7 = v12 + 2;
      if (v12 + 2 >= v34) {
        goto LABEL_56;
      }
      unint64_t v17 = *(void *)(v35 + 8 * v7);
      if (!v17)
      {
        uint64_t v7 = v12 + 3;
        if (v12 + 3 >= v34) {
          goto LABEL_56;
        }
        unint64_t v17 = *(void *)(v35 + 8 * v7);
        if (!v17)
        {
          uint64_t v7 = v12 + 4;
          if (v12 + 4 >= v34) {
            goto LABEL_56;
          }
          unint64_t v17 = *(void *)(v35 + 8 * v7);
          if (!v17)
          {
            uint64_t v18 = v12 + 5;
            while (v34 != v18)
            {
              unint64_t v17 = *(void *)(v35 + 8 * v18++);
              if (v17)
              {
                uint64_t v7 = v18 - 1;
                goto LABEL_28;
              }
            }
            goto LABEL_56;
          }
        }
      }
    }
LABEL_28:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v14 = __clz(__rbit64(v17)) + (v7 << 6);
    goto LABEL_29;
  }
  __break(1u);
}

HealthPlatform::HealthKitUnitPreferencesInputSignal::Anchor __swiftcall HealthKitUnitPreferencesInputSignal.Anchor.merged(with:)(HealthPlatform::HealthKitUnitPreferencesInputSignal::Anchor with)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)with.preferences._rawValue;
  swift_bridgeObjectRetain();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_1C26EA9B0(v4, v3);
  result.preferences._rawValue = (void *)swift_bridgeObjectRelease();
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1C26E8800()
{
  return 0x6E65726566657270;
}

uint64_t sub_1C26E8820@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6E65726566657270 && a2 == 0xEB00000000736563)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C277C7E0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C26E88D0(uint64_t a1)
{
  unint64_t v2 = sub_1C26EAD68();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C26E890C(uint64_t a1)
{
  unint64_t v2 = sub_1C26EAD68();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t HealthKitUnitPreferencesInputSignal.Anchor.init(from:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  sub_1C26EADBC(0, &qword_1EBB84378, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C26EAD68();
  sub_1C277C9A0();
  if (!v2)
  {
    sub_1C267AC18();
    sub_1C277C6D0();
    int64_t v16 = a2;
    uint64_t v11 = v15[0];
    unint64_t v10 = v15[1];
    sub_1C2644ED8(0, &qword_1EBB86050);
    sub_1C2644ED8(0, &qword_1EBB84260);
    sub_1C2644ED8(0, &qword_1EBB842E0);
    unint64_t v12 = sub_1C277BE20();
    unint64_t v13 = v16;
    if (!v12) {
      unint64_t v12 = sub_1C267D2D4(MEMORY[0x1E4FBC860]);
    }
    sub_1C263CC84(v11, v10);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    unint64_t *v13 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t HealthKitUnitPreferencesInputSignal.Anchor.encode(to:)(void *a1)
{
  void v17[2] = *(id *)MEMORY[0x1E4F143B8];
  sub_1C26EADBC(0, (unint64_t *)&unk_1EBB84388, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v17[-1] - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C26EAD68();
  sub_1C277C9B0();
  uint64_t v7 = self;
  sub_1C2644ED8(0, &qword_1EBB84260);
  sub_1C2644ED8(0, &qword_1EBB842E0);
  sub_1C26EA49C();
  uint64_t v8 = (void *)sub_1C277B750();
  v17[0] = 0;
  id v9 = objc_msgSend(v7, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v8, 1, v17);

  id v10 = v17[0];
  if (v9)
  {
    uint64_t v11 = (void *)sub_1C277A780();
    unint64_t v13 = v12;

    v17[0] = v11;
    v17[1] = v13;
    sub_1C267AD9C();
    sub_1C277C760();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return sub_1C263CC84((uint64_t)v11, (unint64_t)v13);
  }
  else
  {
    id v15 = v10;
    sub_1C277A620();

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_1C26E8E30@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_1C26EA9B0(v4, v3);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5;
  return result;
}

uint64_t sub_1C26E8E98@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return HealthKitUnitPreferencesInputSignal.Anchor.init(from:)(a1, a2);
}

uint64_t sub_1C26E8EB0(void *a1)
{
  return HealthKitUnitPreferencesInputSignal.Anchor.encode(to:)(a1);
}

uint64_t HealthKitUnitPreferencesInputSignal.Configuration.identifier.getter()
{
  return sub_1C277AED0();
}

uint64_t HealthKitUnitPreferencesInputSignal.Configuration.quantityTypes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t HealthKitUnitPreferencesInputSignal.Configuration.quantityTypes.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*HealthKitUnitPreferencesInputSignal.Configuration.quantityTypes.modify())()
{
  return nullsub_1;
}

uint64_t HealthKitUnitPreferencesInputSignal.Configuration.init(quantityTypes:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t static HealthKitUnitPreferencesInputSignal.Configuration.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1C2671ADC(*a1, *a2);
}

uint64_t HealthKitUnitPreferencesInputSignal.Configuration.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  sub_1C2679A18(a1, v3);

  return swift_bridgeObjectRelease();
}

uint64_t HealthKitUnitPreferencesInputSignal.Configuration.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_1C277C8C0();
  sub_1C2679A18((uint64_t)v3, v1);
  return sub_1C277C910();
}

uint64_t sub_1C26E8FE0(uint64_t *a1, uint64_t *a2)
{
  return sub_1C2671ADC(*a1, *a2);
}

uint64_t sub_1C26E8FEC()
{
  uint64_t v1 = *v0;
  sub_1C277C8C0();
  sub_1C2679A18((uint64_t)v3, v1);
  return sub_1C277C910();
}

void sub_1C26E9034(uint64_t a1)
{
  sub_1C2679A18(a1, *v1);
}

uint64_t sub_1C26E903C()
{
  uint64_t v1 = *v0;
  sub_1C277C8C0();
  sub_1C2679A18((uint64_t)v3, v1);
  return sub_1C277C910();
}

uint64_t HealthKitUnitPreferencesInputSignal.identifier.getter()
{
  return sub_1C277AED0();
}

uint64_t HealthKitUnitPreferencesInputSignal.observer.getter()
{
  return swift_unknownObjectRetain();
}

Swift::Void __swiftcall HealthKitUnitPreferencesInputSignal.beginObservation(from:configurations:)(HealthPlatform::HealthKitUnitPreferencesInputSignal::Anchor_optional from, Swift::OpaquePointer configurations)
{
  uint64_t v2 = *(void *)(*(void *)&from.is_nil + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v2; ++i)
    {
      unint64_t v4 = swift_bridgeObjectRetain();
      sub_1C2672214(v4);
    }
    from.value.preferences._rawValue = (void *)swift_bridgeObjectRelease();
  }
  MEMORY[0x1F4188790](from.value.preferences._rawValue);
  uint64_t v6 = (uint64_t *)&v5[4];
  uint64_t v7 = v5 + 8;
  os_unfair_lock_lock(v5 + 8);
  sub_1C26EAE20(v6);
  os_unfair_lock_unlock(v7);
  swift_bridgeObjectRelease();
}

uint64_t sub_1C26E91A0(uint64_t *a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  a1[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *v5;
  uint64_t v7 = &selRef_relevantEndDate;
  if (*v5)
  {
    uint64_t v8 = self;
    swift_unknownObjectRetain();
    id v9 = objc_msgSend(v8, sel_defaultCenter);
    char v29 = v5;
    uint64_t v10 = v4;
    uint64_t v11 = *MEMORY[0x1E4F2AAA0];
    uint64_t v13 = a3[8];
    uint64_t v12 = a3[9];
    __swift_project_boxed_opaque_existential_1(a3 + 5, v13);
    unint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 16);
    swift_unknownObjectRetain();
    uint64_t v15 = v14(v13, v12);
    uint64_t v16 = v11;
    uint64_t v4 = v10;
    uint64_t v5 = v29;
    objc_msgSend(v9, sel_removeObserver_name_object_, v6, v16, v15);

    swift_unknownObjectRelease_n();
    uint64_t v7 = &selRef_relevantEndDate;
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v16 = *MEMORY[0x1E4F2AAA0];
  }
  id v17 = [self v7[71]];
  uint64_t v18 = a3[8];
  uint64_t v19 = a3[9];
  __swift_project_boxed_opaque_existential_1(a3 + 5, v18);
  uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 16))(v18, v19);
  uint64_t v21 = swift_allocObject();
  swift_weakInit();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v21;
  *(void *)(v22 + 24) = v4;
  aBlock[4] = sub_1C26EB524;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1C26E9844;
  aBlock[3] = &block_descriptor_17_0;
  char v23 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_release();
  id v24 = objc_msgSend(v17, sel_addObserverForName_object_queue_usingBlock_, v16, v20, 0, v23);
  _Block_release(v23);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *uint64_t v5 = (uint64_t)v24;
  uint64_t v25 = a3[8];
  uint64_t v26 = a3[9];
  __swift_project_boxed_opaque_existential_1(a3 + 5, v25);
  id v27 = *(void (**)(uint64_t, uint64_t (*)(uint64_t, void *), void *, uint64_t, uint64_t))(v26 + 8);
  swift_retain();
  v27(v4, sub_1C26EB52C, a3, v25, v26);
  return swift_release();
}

void *sub_1C26E949C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t result = (void *)swift_weakLoadStrong();
  if (result)
  {
    uint64_t v5 = result;
    uint64_t v6 = result[8];
    uint64_t v7 = result[9];
    __swift_project_boxed_opaque_existential_1(result + 5, v6);
    uint64_t v8 = *(void (**)(uint64_t, uint64_t (*)(uint64_t, void *), void *, uint64_t, uint64_t))(v7 + 8);
    swift_retain();
    v8(a3, sub_1C26EB534, v5, v6, v7);
    return (void *)swift_release_n();
  }
  return result;
}

uint64_t sub_1C26E9564(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C277B130();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_getObjectType();
    id v10 = a2;
    sub_1C277AC30();
    id v11 = a2;
    id v12 = a2;
    uint64_t v13 = sub_1C277B100();
    os_log_type_t v14 = sub_1C277BD20();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v23 = v6;
      id v17 = (void *)v16;
      *(_DWORD *)uint64_t v15 = 138412290;
      id v18 = a2;
      uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v25 = v19;
      sub_1C277C0D0();
      *id v17 = v19;

      _os_log_impl(&dword_1C2601000, v13, v14, "Failed to fetch updated unit preferences: %@", v15, 0xCu);
      sub_1C264E608();
      swift_arrayDestroy();
      uint64_t v20 = v17;
      uint64_t v6 = v23;
      MEMORY[0x1C875D230](v20, -1, -1);
      MEMORY[0x1C875D230](v15, -1, -1);
    }
    else
    {
    }
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    swift_getObjectType();
    uint64_t v24 = a3;
    uint64_t v25 = a1;
    sub_1C26EB09C(&qword_1EBB826E8);
    swift_bridgeObjectRetain();
    sub_1C277AE40();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C26E9844(uint64_t a1)
{
  uint64_t v2 = sub_1C277A580();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  sub_1C277A530();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1C26E9938(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C277B130();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_getObjectType();
    id v10 = a2;
    sub_1C277AC30();
    id v11 = a2;
    id v12 = a2;
    uint64_t v13 = sub_1C277B100();
    os_log_type_t v14 = sub_1C277BD20();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v26 = v7;
      uint64_t v15 = swift_slowAlloc();
      uint64_t v27 = v6;
      uint64_t v16 = (uint8_t *)v15;
      uint64_t v25 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 138412290;
      id v17 = a2;
      uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
      os_log_t v24 = v13;
      uint64_t v19 = v18;
      uint64_t v29 = v18;
      uint64_t v7 = v26;
      sub_1C277C0D0();
      uint64_t v20 = v25;
      *uint64_t v25 = v19;

      os_log_t v21 = v24;
      _os_log_impl(&dword_1C2601000, v24, v14, "Failed to fetch initial unit preferences; returning no values to avoid blocking observation: %@",
        v16,
        0xCu);
      sub_1C264E608();
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v20, -1, -1);
      uint64_t v22 = v16;
      uint64_t v6 = v27;
      MEMORY[0x1C875D230](v22, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  swift_getObjectType();
  uint64_t v28 = a3;
  uint64_t v29 = a1;
  sub_1C26EB09C(&qword_1EBB826E8);
  swift_bridgeObjectRetain();
  sub_1C277AE40();
  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall HealthKitUnitPreferencesInputSignal.stopObservation()()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 32);
  uint64_t v2 = (uint64_t *)&v1[4];
  uint64_t v3 = v1 + 8;
  os_unfair_lock_lock(v1 + 8);
  sub_1C26EAE3C(v2);

  os_unfair_lock_unlock(v3);
}

uint64_t *sub_1C26E9C94(uint64_t *result, void *a2)
{
  uint64_t v2 = *result;
  if (*result)
  {
    uint64_t v4 = self;
    swift_unknownObjectRetain();
    id v5 = objc_msgSend(v4, sel_defaultCenter);
    uint64_t v6 = *MEMORY[0x1E4F2AAA0];
    uint64_t v7 = a2[8];
    uint64_t v8 = a2[9];
    __swift_project_boxed_opaque_existential_1(a2 + 5, v7);
    id v9 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 16);
    swift_unknownObjectRetain();
    objc_msgSend(v5, sel_removeObserver_name_object_, v2, v6, v9(v7, v8));

    swift_unknownObjectRelease_n();
    return (uint64_t *)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t HealthKitUnitPreferencesInputSignal.deinit()
{
  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 40);
  swift_unknownObjectRelease();
  return v0;
}

uint64_t HealthKitUnitPreferencesInputSignal.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 40);
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1C26E9E14()
{
  return swift_unknownObjectRetain();
}

void sub_1C26E9E40(HealthPlatform::HealthKitUnitPreferencesInputSignal::Anchor_optional a1, Swift::OpaquePointer a2)
{
}

void sub_1C26E9E64()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)v0 + 32);
  uint64_t v2 = (uint64_t *)&v1[4];
  uint64_t v3 = v1 + 8;
  os_unfair_lock_lock(v1 + 8);
  sub_1C26EAE3C(v2);

  os_unfair_lock_unlock(v3);
}

uint64_t sub_1C26E9EC8(uint64_t a1)
{
  uint64_t v2 = sub_1C26EB09C(&qword_1EBB826E8);

  return MEMORY[0x1F411FB20](a1, v2);
}

void HKHealthStore.fetchUnitPreferences(for:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C2644ED8(0, &qword_1EBB84260);
  sub_1C26EA49C();
  uint64_t v6 = (void *)sub_1C277BBB0();
  v8[4] = a2;
  v8[5] = a3;
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 1107296256;
  _OWORD v8[2] = sub_1C26EA020;
  v8[3] = &block_descriptor_17;
  uint64_t v7 = _Block_copy(v8);
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel_preferredUnitsForQuantityTypes_completion_, v6, v7);
  _Block_release(v7);
}

void sub_1C26EA020(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  sub_1C2644ED8(0, &qword_1EBB84260);
  sub_1C2644ED8(0, &qword_1EBB842E0);
  sub_1C26EA49C();
  uint64_t v5 = sub_1C277B760();
  swift_retain();
  id v6 = a3;
  v4(v5, a3);
  swift_release();
  swift_bridgeObjectRelease();
}

uint64_t HKHealthStore.notificationObject.getter()
{
  return swift_unknownObjectRetain();
}

void sub_1C26EA104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = *v3;
  sub_1C2644ED8(0, &qword_1EBB84260);
  sub_1C26EA49C();
  uint64_t v7 = (void *)sub_1C277BBB0();
  v9[4] = a2;
  v9[5] = a3;
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 1107296256;
  void v9[2] = sub_1C26EA020;
  v9[3] = &block_descriptor_10_0;
  uint64_t v8 = _Block_copy(v9);
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_preferredUnitsForQuantityTypes_completion_, v7, v8);
  _Block_release(v8);
}

uint64_t sub_1C26EA208()
{
  return swift_unknownObjectRetain();
}

void *sub_1C26EA210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  a6[8] = a7;
  a6[9] = a8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a6 + 5);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(boxed_opaque_existential_1, a5, a7);
  sub_1C26EB53C();
  uint64_t v16 = swift_allocObject();
  *(_DWORD *)(v16 + 32) = 0;
  uint64_t v17 = MEMORY[0x1E4FBC870];
  *(void *)(v16 + 16) = 0;
  *(void *)(v16 + 24) = v17;
  a6[3] = a2;
  a6[4] = v16;
  a6[2] = a1;
  a6[10] = a3;
  a6[11] = a4;
  return a6;
}

void *sub_1C26EA2D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v12 = (void *)swift_allocObject();
  v12[8] = sub_1C2644ED8(0, &qword_1EBB82ED0);
  v12[9] = &protocol witness table for HKHealthStore;
  v12[5] = a4;
  sub_1C26EB53C();
  uint64_t v13 = swift_allocObject();
  *(_DWORD *)(v13 + 32) = 0;
  uint64_t v14 = MEMORY[0x1E4FBC870];
  *(void *)(v13 + 16) = 0;
  *(void *)(v13 + 24) = v14;
  _OWORD v12[3] = a7;
  v12[4] = v13;
  id v12[2] = a1;
  v12[10] = a2;
  v12[11] = a3;
  return v12;
}

void *sub_1C26EA380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = *(void *)(a7 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (void *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a5, a7);
  return sub_1C26EA210(a1, a2, a3, a4, (uint64_t)v17, v18, a7, a8);
}

unint64_t sub_1C26EA49C()
{
  unint64_t result = qword_1EBB84268;
  if (!qword_1EBB84268)
  {
    sub_1C2644ED8(255, &qword_1EBB84260);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB84268);
  }
  return result;
}

void sub_1C26EA504(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v29 = 0;
  int64_t v5 = 0;
  uint64_t v30 = a3 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a3 + 64);
  int64_t v31 = (unint64_t)(v6 + 63) >> 6;
  unint64_t v9 = a4 & 0xC000000000000001;
  while (v8)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v5 << 6);
LABEL_18:
    uint64_t v15 = *(void **)(*(void *)(a3 + 48) + 8 * v11);
    uint64_t v16 = *(void **)(*(void *)(a3 + 56) + 8 * v11);
    if (v9)
    {
      id v17 = v15;
      id v18 = v16;
      if (!sub_1C277C500()) {
        goto LABEL_4;
      }
      sub_1C2644ED8(0, &qword_1EBB842E0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v19 = v33;
      swift_unknownObjectRelease();
      if (!v33) {
        goto LABEL_4;
      }
LABEL_25:
      sub_1C2644ED8(0, &qword_1EBB842E0);
      id v25 = v16;
      char v26 = sub_1C277C030();

      if (v26)
      {
        *(unint64_t *)((char *)a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
        BOOL v12 = __OFADD__(v29++, 1);
        if (v12) {
          goto LABEL_36;
        }
      }
    }
    else
    {
      uint64_t v20 = *(void *)(a4 + 16);
      id v21 = v15;
      id v22 = v16;
      if (v20)
      {
        unint64_t v23 = sub_1C26731B4((uint64_t)v21);
        if (v24)
        {
          id v19 = *(id *)(*(void *)(a4 + 56) + 8 * v23);
          if (v19) {
            goto LABEL_25;
          }
        }
      }
LABEL_4:
    }
  }
  BOOL v12 = __OFADD__(v5++, 1);
  if (v12)
  {
    __break(1u);
    goto LABEL_35;
  }
  if (v5 >= v31) {
    goto LABEL_33;
  }
  unint64_t v13 = *(void *)(v30 + 8 * v5);
  if (v13)
  {
LABEL_17:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v5 << 6);
    goto LABEL_18;
  }
  int64_t v14 = v5 + 1;
  if (v5 + 1 >= v31) {
    goto LABEL_33;
  }
  unint64_t v13 = *(void *)(v30 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v5 + 2;
  if (v5 + 2 >= v31) {
    goto LABEL_33;
  }
  unint64_t v13 = *(void *)(v30 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v5 + 3;
  if (v5 + 3 >= v31)
  {
LABEL_33:
    sub_1C2741BB0(a1, a2, v29, a3);
    return;
  }
  unint64_t v13 = *(void *)(v30 + 8 * v14);
  if (v13)
  {
LABEL_16:
    int64_t v5 = v14;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v5 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v5 >= v31) {
      goto LABEL_33;
    }
    unint64_t v13 = *(void *)(v30 + 8 * v5);
    ++v14;
    if (v13) {
      goto LABEL_17;
    }
  }
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

uint64_t sub_1C26EA7F4(uint64_t a1, uint64_t a2)
{
  v15[1] = *MEMORY[0x1E4F143B8];
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v8 = 8 * v7;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v15 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    sub_1C26EA504((void *)((char *)v15 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    if (v2) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    BOOL v12 = (void *)swift_slowAlloc();
    bzero(v12, v8);
    swift_bridgeObjectRetain();
    sub_1C26EA504((unint64_t *)v12, v7, a1, a2);
    uint64_t v11 = v13;
    swift_bridgeObjectRelease();
    MEMORY[0x1C875D230](v12, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v11;
}

uint64_t sub_1C26EA9B0(uint64_t a1, uint64_t a2)
{
  if ((a1 & 0xC000000000000001) == 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C26EA7F4(a1, a2);
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  uint64_t v4 = MEMORY[0x1E4FBC868];
  uint64_t v40 = MEMORY[0x1E4FBC868];
  sub_1C277C470();
  swift_bridgeObjectRetain();
  if (!sub_1C277C520()) {
    goto LABEL_29;
  }
  unsigned int v6 = v5;
  sub_1C2644ED8(0, &qword_1EBB84260);
  do
  {
    swift_dynamicCast();
    sub_1C2644ED8(0, &qword_1EBB842E0);
    swift_dynamicCast();
    unint64_t v7 = v38;
    if ((a2 & 0xC000000000000001) != 0)
    {
      id v10 = v38;
      id v11 = v39;
      if (!sub_1C277C500()) {
        goto LABEL_4;
      }
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v12 = v6;
      swift_unknownObjectRelease();
      if (!v6) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v13 = *(void *)(a2 + 16);
      id v14 = v38;
      id v15 = v39;
      if (!v13
        || (unint64_t v16 = sub_1C26731B4((uint64_t)v14), (v17 & 1) == 0)
        || (id v12 = *(id *)(*(void *)(a2 + 56) + 8 * v16)) == 0)
      {
LABEL_4:

        unint64_t v7 = v39;
        goto LABEL_5;
      }
    }
    id v18 = v39;
    char v19 = sub_1C277C030();

    if (v19)
    {
      uint64_t v20 = v40;
      unint64_t v21 = *(void *)(v40 + 16);
      if (*(void *)(v40 + 24) <= v21)
      {
        uint64_t v24 = v21 + 1;
        id v25 = v38;
        id v26 = v18;
        sub_1C26761E0(v24, 1);
        uint64_t v20 = v40;
      }
      else
      {
        id v22 = v38;
        id v23 = v18;
      }
      uint64_t result = sub_1C277C020();
      uint64_t v28 = v20 + 64;
      uint64_t v29 = -1 << *(unsigned char *)(v20 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v20 + 64 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v32 = __clz(__rbit64((-1 << v30) & ~*(void *)(v20 + 64 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v33 = 0;
        unint64_t v34 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v34 && (v33 & 1) != 0)
          {
            __break(1u);
            return result;
          }
          BOOL v35 = v31 == v34;
          if (v31 == v34) {
            unint64_t v31 = 0;
          }
          v33 |= v35;
          uint64_t v36 = *(void *)(v28 + 8 * v31);
        }
        while (v36 == -1);
        unint64_t v32 = __clz(__rbit64(~v36)) + (v31 << 6);
      }
      *(void *)(v28 + ((v32 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v32;
      uint64_t v37 = 8 * v32;
      *(void *)(*(void *)(v20 + 48) + v37) = v38;
      *(void *)(*(void *)(v20 + 56) + v37) = v18;
      ++*(void *)(v20 + 16);
    }
LABEL_5:

    uint64_t v8 = sub_1C277C520();
    unsigned int v6 = v9;
  }
  while (v8);
  uint64_t v4 = v40;
LABEL_29:
  sub_1C2648F6C();
LABEL_31:
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t sub_1C26EAD68()
{
  unint64_t result = qword_1EBB83A58;
  if (!qword_1EBB83A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB83A58);
  }
  return result;
}

void sub_1C26EADBC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C26EAD68();
    unint64_t v7 = a3(a1, &type metadata for HealthKitUnitPreferencesInputSignal.Anchor.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C26EAE20(uint64_t *a1)
{
  return sub_1C26E91A0(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t *sub_1C26EAE3C(uint64_t *a1)
{
  return sub_1C26E9C94(a1, v1);
}

unint64_t sub_1C26EAE5C()
{
  unint64_t result = qword_1EBB83A88;
  if (!qword_1EBB83A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB83A88);
  }
  return result;
}

unint64_t sub_1C26EAEB4()
{
  unint64_t result = qword_1EBB83A78;
  if (!qword_1EBB83A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB83A78);
  }
  return result;
}

unint64_t sub_1C26EAF0C()
{
  unint64_t result = qword_1EBB83A80;
  if (!qword_1EBB83A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB83A80);
  }
  return result;
}

unint64_t sub_1C26EAF64()
{
  unint64_t result = qword_1EA304BC8;
  if (!qword_1EA304BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304BC8);
  }
  return result;
}

unint64_t sub_1C26EAFBC()
{
  unint64_t result = qword_1EBB83A48;
  if (!qword_1EBB83A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB83A48);
  }
  return result;
}

unint64_t sub_1C26EB014()
{
  unint64_t result = qword_1EBB83A50;
  if (!qword_1EBB83A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB83A50);
  }
  return result;
}

uint64_t sub_1C26EB068()
{
  return sub_1C26EB09C(&qword_1EBB83A90);
}

uint64_t sub_1C26EB09C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for HealthKitUnitPreferencesInputSignal();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C26EB0E0()
{
  unint64_t result = qword_1EBB83A70;
  if (!qword_1EBB83A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB83A70);
  }
  return result;
}

uint64_t dispatch thunk of HealthKitUnitPreferencesProvider.fetchUnitPreferences(for:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of HealthKitUnitPreferencesProvider.notificationObject.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t method lookup function for HealthKitUnitPreferencesInputSignal(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HealthKitUnitPreferencesInputSignal);
}

uint64_t dispatch thunk of HealthKitUnitPreferencesInputSignal.__allocating_init(context:observer:provider:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

ValueMetadata *type metadata accessor for HealthKitUnitPreferencesInputSignal.Anchor()
{
  return &type metadata for HealthKitUnitPreferencesInputSignal.Anchor;
}

ValueMetadata *type metadata accessor for HealthKitUnitPreferencesInputSignal.Configuration()
{
  return &type metadata for HealthKitUnitPreferencesInputSignal.Configuration;
}

uint64_t destroy for HealthKitUnitPreferencesInputSignal.State()
{
  swift_unknownObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s14HealthPlatform35HealthKitUnitPreferencesInputSignalC5StateVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for HealthKitUnitPreferencesInputSignal.State(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for HealthKitUnitPreferencesInputSignal.State(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for HealthKitUnitPreferencesInputSignal.State()
{
  return &type metadata for HealthKitUnitPreferencesInputSignal.State;
}

unsigned char *storeEnumTagSinglePayload for HealthKitUnitPreferencesInputSignal.Anchor.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C26EB36CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for HealthKitUnitPreferencesInputSignal.Anchor.CodingKeys()
{
  return &type metadata for HealthKitUnitPreferencesInputSignal.Anchor.CodingKeys;
}

unint64_t sub_1C26EB3A8()
{
  unint64_t result = qword_1EA304BD0;
  if (!qword_1EA304BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304BD0);
  }
  return result;
}

unint64_t sub_1C26EB400()
{
  unint64_t result = qword_1EBB83A68;
  if (!qword_1EBB83A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB83A68);
  }
  return result;
}

unint64_t sub_1C26EB458()
{
  unint64_t result = qword_1EBB83A60;
  if (!qword_1EBB83A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB83A60);
  }
  return result;
}

uint64_t sub_1C26EB4AC()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C26EB4E4()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void *sub_1C26EB524(uint64_t a1)
{
  return sub_1C26E949C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C26EB52C(uint64_t a1, void *a2)
{
  return sub_1C26E9938(a1, a2, v2);
}

uint64_t sub_1C26EB534(uint64_t a1, void *a2)
{
  return sub_1C26E9564(a1, a2, v2);
}

void sub_1C26EB53C()
{
  if (!qword_1EBB83040)
  {
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_1C277C370();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB83040);
    }
  }
}

Swift::Void __swiftcall PinnedContentManaging.pin(objectType:at:)(HKObjectType objectType, Swift::Int at)
{
  uint64_t v3 = v2;
  uint64_t v4 = _sSo12HKObjectTypeC14HealthPlatformE23pinnedContentIdentifierSSvg_0();
  (*(void (**)(uint64_t))(v3 + 32))(v4);

  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall PinnedContentManaging.pin(objectType:)(HKObjectType objectType)
{
  uint64_t v2 = v1;
  uint64_t v3 = _sSo12HKObjectTypeC14HealthPlatformE23pinnedContentIdentifierSSvg_0();
  (*(void (**)(uint64_t))(v2 + 40))(v3);

  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall PinnedContentManaging.unpin(objectType:)(HKObjectType objectType)
{
  uint64_t v2 = v1;
  uint64_t v3 = _sSo12HKObjectTypeC14HealthPlatformE23pinnedContentIdentifierSSvg_0();
  (*(void (**)(uint64_t))(v2 + 48))(v3);

  swift_bridgeObjectRelease();
}

uint64_t HKDisplayType.pinnedContentIdentifier.getter()
{
  id v1 = objc_msgSend(v0, sel_objectType);
  uint64_t v2 = _sSo12HKObjectTypeC14HealthPlatformE23pinnedContentIdentifierSSvg_0();

  return v2;
}

uint64_t dispatch thunk of PinnedContentManaging.state.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PinnedContentManaging.publisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PinnedContentManaging.latestState()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of PinnedContentManaging.pin(identifier:at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of PinnedContentManaging.pin(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of PinnedContentManaging.unpin(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of PinnedContentManaging.unpinAll()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of PinnedContentManaging.apply(differences:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

Swift::Void __swiftcall UserNotificationManager.removePendingOrDeliveredNotifications(with:)(Swift::OpaquePointer with)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  (*(void (**)(void))(v2 + 32))();
  unint64_t v6 = *(void (**)(void *, uint64_t, uint64_t))(v3 + 40);

  v6(with._rawValue, v4, v3);
}

uint64_t UNNotificationRequest.notificationIdentifier.getter()
{
  id v1 = objc_msgSend(v0, sel_identifier);
  uint64_t v2 = sub_1C277B850();

  return v2;
}

uint64_t sub_1C26EB8FC()
{
  id v1 = objc_msgSend(*v0, sel_identifier);
  uint64_t v2 = sub_1C277B850();

  return v2;
}

uint64_t CoalescingNotification.notificationIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t PluginFeedItem.NotificationRequest.feedItemIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PluginFeedItem.NotificationRequest.feedItemIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PluginFeedItem.NotificationRequest.feedItemIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t PluginFeedItem.NotificationRequest.notificationIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PluginFeedItem.NotificationRequest.notificationIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*PluginFeedItem.NotificationRequest.notificationIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t sub_1C26EBA78(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  swift_retain();
  uint64_t result = swift_release();
  *(void *)(a2 + 32) = sub_1C26EC554;
  *(void *)(a2 + 40) = v5;
  return result;
}

uint64_t PluginFeedItem.NotificationRequest.makeNotificationRequest.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_retain();
  return v1;
}

uint64_t PluginFeedItem.NotificationRequest.makeNotificationRequest.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_release();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*PluginFeedItem.NotificationRequest.makeNotificationRequest.modify())()
{
  return nullsub_1;
}

uint64_t PluginFeedItem.NotificationRequest.ContentState.stringRawValue.getter()
{
  unint64_t v1 = v0[1];
  uint64_t v2 = 0x4F656D6954656E6FLL;
  if (v1 != 1) {
    uint64_t v2 = *v0;
  }
  if (v1) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 1701736302;
  }
  sub_1C26E1C28(*v0, v1);
  return v3;
}

uint64_t PluginFeedItem.NotificationRequest.notificationStateValue.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 48);
  unint64_t v3 = *(void *)(v1 + 56);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C26E1C28(v2, v3);
}

uint64_t PluginFeedItem.NotificationRequest.notificationStateValue.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C26EBD64(*(void *)(v1 + 48), *(void *)(v1 + 56));
  *(void *)(v1 + 48) = v2;
  *(void *)(v1 + 56) = v3;
  return result;
}

uint64_t (*PluginFeedItem.NotificationRequest.notificationStateValue.modify())()
{
  return nullsub_1;
}

__n128 PluginFeedItem.NotificationRequest.init(feedItemIdentifier:notificationIdentifier:notificationRequest:notificationStateValue:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, unint64_t a6@<X5>, __n128 *a7@<X6>, __n128 *a8@<X8>)
{
  a8->n128_u64[0] = a1;
  a8->n128_u64[1] = a2;
  a8[1].n128_u64[0] = a3;
  a8[1].n128_u64[1] = a4;
  a8[2].n128_u64[0] = a5;
  a8[2].n128_u64[1] = a6;
  __n128 result = *a7;
  a8[3] = *a7;
  return result;
}

uint64_t sub_1C26EBC5C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t _s14HealthPlatform14PluginFeedItemV19NotificationRequestV12ContentStateO2eeoiySbAG_AGtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  if (!v3)
  {
    if (!v5)
    {
      unint64_t v3 = 0;
      char v6 = 1;
      goto LABEL_10;
    }
    goto LABEL_8;
  }
  if (v3 != 1)
  {
    if (v5 >= 2)
    {
      if (v2 == v4 && v3 == v5) {
        char v6 = 1;
      }
      else {
        char v6 = sub_1C277C7E0();
      }
      goto LABEL_9;
    }
LABEL_8:
    char v6 = 0;
LABEL_9:
    sub_1C26E1C28(v4, v5);
    sub_1C26E1C28(v2, v3);
    goto LABEL_10;
  }
  if (v5 != 1) {
    goto LABEL_8;
  }
  unint64_t v3 = 1;
  char v6 = 1;
LABEL_10:
  sub_1C26EBD64(v2, v3);
  sub_1C26EBD64(v4, v5);
  return v6 & 1;
}

uint64_t sub_1C26EBD64(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C26EBD78@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t *a1@<X8>)@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  *a2 = sub_1C26EC58C;
  a2[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v5;

  return swift_retain();
}

uint64_t dispatch thunk of NotifiableContent.notificationIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CoalescingNotification.coalesceIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of CoalescingNotification.makeNotificationRequest()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CoalescingNotification.coalesced(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

unint64_t _s14descr1F1DC3F91C19NotificationRequestVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  unint64_t result = *(void *)(a1 + 56);
  if (result >= 2)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s14descr1F1DC3F91C19NotificationRequestVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = (void *)(a2 + 48);
  unint64_t v6 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v6 >= 2)
  {
    *(void *)(a1 + 48) = *v5;
    *(void *)(a1 + 56) = v6;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)v5;
  }
  return a1;
}

void *_s14descr1F1DC3F91C19NotificationRequestVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[5];
  a1[4] = a2[4];
  a1[5] = v4;
  swift_retain();
  swift_release();
  unint64_t v5 = a2[7];
  if (a1[7] >= 2uLL)
  {
    if (v5 >= 2)
    {
      a1[6] = a2[6];
      a1[7] = a2[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1C26EC038((uint64_t)(a1 + 6));
    goto LABEL_6;
  }
  if (v5 < 2)
  {
LABEL_6:
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    return a1;
  }
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C26EC038(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s14descr1F1DC3F91C19NotificationRequestVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  unint64_t v6 = (void *)(a2 + 48);
  if (*(void *)(a1 + 56) >= 2uLL)
  {
    unint64_t v7 = *(void *)(a2 + 56);
    if (v7 >= 2)
    {
      *(void *)(a1 + 48) = *v6;
      *(void *)(a1 + 56) = v7;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1C26EC038(a1 + 48);
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)v6;
  return a1;
}

uint64_t _s14descr1F1DC3F91C19NotificationRequestVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s14descr1F1DC3F91C19NotificationRequestVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PluginFeedItem.NotificationRequest()
{
  return &type metadata for PluginFeedItem.NotificationRequest;
}

unint64_t _s14descr1F1DC3F91C19NotificationRequestV12ContentStateOwxx(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s14descr1F1DC3F91C19NotificationRequestV12ContentStateOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *_s14descr1F1DC3F91C19NotificationRequestV12ContentStateOwca(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14descr1F1DC3F91C19NotificationRequestV12ContentStateOwta(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14descr1F1DC3F91C19NotificationRequestV12ContentStateOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t _s14descr1F1DC3F91C19NotificationRequestV12ContentStateOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_1C26EC408(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1C26EC420(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for PluginFeedItem.NotificationRequest.ContentState()
{
  return &type metadata for PluginFeedItem.NotificationRequest.ContentState;
}

uint64_t dispatch thunk of UserNotificationManager.scheduleUserNotification(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of UserNotificationManager.getPendingNotifications(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of UserNotificationManager.getDeliveredNotifications(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of UserNotificationManager.removePendingNotifications(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of UserNotificationManager.removeDeliveredNotifications(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of PluginNotificationManager.contentStateManager.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PluginNotificationManager.schedulePluginFeedItemNotification(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of PluginNotificationManager.scheduleCoalescingNotification<A>(for:environment:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, void))(a6 + 32))(a1, a2 & 1);
}

uint64_t dispatch thunk of PluginNotificationManager.removeAllPluginFeedItemNotifications()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of PluginNotificationManager.removePluginFeedItemNotifications(feedItemIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t sub_1C26EC51C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C26EC554()
{
  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v2);
  return v2;
}

uint64_t sub_1C26EC58C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

void *PluginContentStateManager.__allocating_init(domain:healthStore:category:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  _OWORD v8[2] = a1;
  v8[3] = a2;
  id v9 = objc_allocWithZone(MEMORY[0x1E4F2B138]);
  swift_bridgeObjectRetain();
  id v10 = (void *)sub_1C277B820();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v9, sel_initWithCategory_domainName_healthStore_, a4, v10, a3);

  v8[4] = v11;
  return v8;
}

uint64_t sub_1C26EC674()
{
  id v1 = *(id *)(v0 + 32);
  uint64_t v2 = sub_1C277BDA0();

  return v2;
}

uint64_t sub_1C26EC6C4()
{
  id v1 = *(id *)(v0 + 32);
  uint64_t v2 = sub_1C277BDE0();

  return v2;
}

uint64_t sub_1C26EC714()
{
  id v1 = *(id *)(v0 + 32);
  uint64_t v2 = sub_1C277BDC0();

  return v2;
}

uint64_t sub_1C26EC76C()
{
  id v1 = *(id *)(v0 + 32);
  uint64_t v2 = sub_1C277BDD0();

  return v2;
}

uint64_t sub_1C26EC7C4()
{
  id v1 = *(id *)(v0 + 32);
  uint64_t v2 = sub_1C277BD60();

  return v2;
}

uint64_t sub_1C26EC82C()
{
  id v1 = *(id *)(v0 + 32);
  uint64_t v2 = sub_1C277BDF0();

  return v2;
}

uint64_t sub_1C26EC894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v58 = a2;
  uint64_t v59 = a3;
  sub_1C26ED038(0, &qword_1EA304BD8, MEMORY[0x1E4F1ABF8]);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v53 = v6;
  uint64_t v54 = v7;
  MEMORY[0x1F4188790](v6);
  int64_t v52 = (char *)&v50 - v8;
  sub_1C26513A4(0);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v51 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v55 = (char *)&v50 - v12;
  uint64_t v13 = sub_1C277A840();
  uint64_t v56 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  unint64_t v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a4 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v14);
  uint64_t v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v18);
  id v23 = (char *)&v50 - v22;
  uint64_t v24 = MEMORY[0x1F4188790](v21);
  id v26 = (char *)&v50 - v25;
  MEMORY[0x1F4188790](v24);
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v27((char *)&v50 - v28, a1, a4);
  if (swift_dynamicCast())
  {
    id v29 = *(id *)(v57 + 32);
    uint64_t v30 = sub_1C277BDF0();
    swift_bridgeObjectRelease();

    uint64_t v60 = v30;
    unint64_t v31 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AC28];
    sub_1C26ED038(0, (unint64_t *)&qword_1EBB82D88, MEMORY[0x1E4F1AC28]);
    sub_1C26ED0AC((unint64_t *)&qword_1EBB82D80, (unint64_t *)&qword_1EBB82D88, v31);
    uint64_t v32 = sub_1C277B4E0();
  }
  else
  {
    uint64_t v50 = v16;
    uint64_t v33 = v56;
    v27(v26, a1, a4);
    if (swift_dynamicCast())
    {
      id v34 = *(id *)(v57 + 32);
      uint64_t v35 = sub_1C277BD60();
    }
    else
    {
      v27(v23, a1, a4);
      if (!swift_dynamicCast())
      {
        v27(v20, a1, a4);
        uint64_t v39 = (uint64_t)v55;
        uint64_t v40 = v13;
        int v41 = swift_dynamicCast();
        uint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56);
        if (v41)
        {
          v42(v39, 0, 1, v13);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v39, 1, v13) != 1)
          {
            uint64_t v43 = v50;
            (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v50, v39, v13);
            uint64_t v44 = (uint64_t)v51;
            (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v51, v43, v13);
            v42(v44, 0, 1, v13);
            id v45 = *(id *)(v57 + 32);
            uint64_t v46 = sub_1C277BDD0();

            sub_1C2652EB4(v44);
            uint64_t v60 = v46;
            id v47 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AC28];
            sub_1C26ED038(0, (unint64_t *)&qword_1EBB82D88, MEMORY[0x1E4F1AC28]);
            sub_1C26ED0AC((unint64_t *)&qword_1EBB82D80, (unint64_t *)&qword_1EBB82D88, v47);
            uint64_t v32 = sub_1C277B4E0();
            swift_release();
            (*(void (**)(char *, uint64_t))(v33 + 8))(v43, v40);
            return v32;
          }
        }
        else
        {
          v42(v39, 1, 1, v13);
        }
        sub_1C2652EB4(v39);
        sub_1C26ECFE4();
        uint64_t v60 = swift_allocError();
        sub_1C26532A4();
        uint64_t v48 = v52;
        sub_1C277B3F0();
        sub_1C26ED0AC(&qword_1EA304BE8, &qword_1EA304BD8, MEMORY[0x1E4F1ABF8]);
        uint64_t v49 = v53;
        uint64_t v32 = sub_1C277B4E0();
        (*(void (**)(char *, uint64_t))(v54 + 8))(v48, v49);
        return v32;
      }
      id v34 = *(id *)(v57 + 32);
      uint64_t v35 = sub_1C277BDC0();
    }
    uint64_t v36 = v35;

    uint64_t v60 = v36;
    uint64_t v37 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AC28];
    sub_1C26ED038(0, (unint64_t *)&qword_1EBB82D88, MEMORY[0x1E4F1AC28]);
    sub_1C26ED0AC((unint64_t *)&qword_1EBB82D80, (unint64_t *)&qword_1EBB82D88, v37);
    uint64_t v32 = sub_1C277B4E0();
  }
  swift_release();
  return v32;
}

unint64_t sub_1C26ECFE4()
{
  unint64_t result = qword_1EA304BE0;
  if (!qword_1EA304BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304BE0);
  }
  return result;
}

void sub_1C26ED038(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C26532A4();
    unint64_t v7 = a3(a1, MEMORY[0x1E4FBC848] + 8, v6, MEMORY[0x1E4FBC0F0]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C26ED0AC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C26ED038(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C26ED0F0(uint64_t a1, uint64_t a2)
{
  unsigned int v5 = *(void **)(v2 + 32);
  sub_1C26EE048(0, (unint64_t *)&qword_1EBB85EA0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C277E480;
  *(void *)(v6 + 32) = a1;
  *(void *)(v6 + 40) = a2;
  id v7 = v5;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1C277BD80();

  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1C26ED198()
{
  id v1 = *(id *)(v0 + 32);
  uint64_t v2 = sub_1C277BD90();

  return v2;
}

uint64_t sub_1C26ED1D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void *)(a4 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v13);
  unint64_t v14 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a4;
  *(void *)(v15 + 24) = a5;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v15 + v14, v11, a4);
  uint64_t v16 = sub_1C26ED418(a1, a2, (uint64_t)sub_1C26ED3B0, v15);
  swift_release();
  return v16;
}

uint64_t sub_1C26ED328()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);

  return MEMORY[0x1F4186498](v0, v4, v5);
}

BOOL sub_1C26ED3B0()
{
  return (sub_1C277B810() & 1) == 0;
}

uint64_t sub_1C26ED418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v87 = a1;
  uint64_t v82 = a3;
  uint64_t v83 = a4;
  uint64_t v88 = a2;
  sub_1C277C0B0();
  unint64_t v4 = sub_1C26532A4();
  uint64_t v95 = sub_1C277B340();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = sub_1C277B230();
  uint64_t v84 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v89 = (char *)v67 - v6;
  uint64_t v7 = swift_getWitnessTable();
  uint64_t v8 = MEMORY[0x1E4FBB390];
  uint64_t v85 = v5;
  uint64_t v92 = v7;
  uint64_t v9 = sub_1C277B1E0();
  uint64_t v90 = *(void *)(v9 - 8);
  uint64_t v91 = v9;
  MEMORY[0x1F4188790](v9);
  char v94 = (char *)v67 - v10;
  unint64_t v78 = v4;
  uint64_t v11 = sub_1C277B400();
  uint64_t v77 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v76 = (char *)v67 - v12;
  sub_1C26C9F30();
  uint64_t v14 = v13;
  uint64_t v15 = sub_1C26C9FD0();
  v67[1] = v14;
  v67[0] = v15;
  uint64_t v70 = sub_1C277B1E0();
  uint64_t v69 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70);
  uint64_t v68 = (char *)v67 - v16;
  sub_1C26EDF6C(255, &qword_1EA304BF0, &qword_1EA304BF8, v8);
  uint64_t v18 = v17;
  uint64_t v19 = sub_1C26EDFF8(&qword_1EA304C00, &qword_1EA304BF0, &qword_1EA304BF8, v8);
  uint64_t v73 = v18;
  uint64_t v71 = v19;
  uint64_t v75 = sub_1C277B1E0();
  uint64_t v74 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  uint64_t v72 = (char *)v67 - v20;
  uint64_t v21 = MEMORY[0x1E4FBB550];
  sub_1C26EDF6C(255, &qword_1EA304C08, &qword_1EA304C10, MEMORY[0x1E4FBB550]);
  uint64_t v23 = v22;
  sub_1C26EDFF8(&qword_1EA304C18, &qword_1EA304C08, &qword_1EA304C10, v21);
  uint64_t v79 = v23;
  uint64_t v24 = sub_1C277B1E0();
  uint64_t v80 = *(void *)(v24 - 8);
  uint64_t v81 = v24;
  MEMORY[0x1F4188790](v24);
  id v26 = (char *)v67 - v25;
  uint64_t v27 = MEMORY[0x1E4FBB1A0];
  sub_1C26EDF6C(255, &qword_1EBB82D60, (unint64_t *)&qword_1EBB85920, MEMORY[0x1E4FBB1A0]);
  sub_1C26EDFF8(&qword_1EBB82D58, &qword_1EBB82D60, (unint64_t *)&qword_1EBB85920, v27);
  uint64_t v28 = sub_1C277B1E0();
  uint64_t v29 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v32 = (char *)v67 - v31;
  if (v30 == v27)
  {
    uint64_t v50 = v30;
    id v51 = *(id *)(v86 + 32);
    uint64_t v52 = sub_1C277BDE0();

    uint64_t v96 = v52;
    *(void *)(swift_allocObject() + 16) = v27;
    sub_1C277B500();
    swift_release();
    swift_release();
    swift_getWitnessTable();
    uint64_t v45 = sub_1C277B4E0();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v32, v28);
    uint64_t v49 = v50;
LABEL_8:
    uint64_t v47 = v84;
    uint64_t v46 = v85;
    uint64_t v39 = v90;
    uint64_t v38 = v91;
    uint64_t v48 = v83;
    uint64_t v40 = v89;
    goto LABEL_12;
  }
  uint64_t v33 = v11;
  uint64_t v34 = v86;
  uint64_t v35 = v87;
  uint64_t v36 = MEMORY[0x1E4FBB550];
  if (v30 == MEMORY[0x1E4FBB550])
  {
    uint64_t v49 = v30;
    id v53 = *(id *)(v86 + 32);
    uint64_t v54 = sub_1C277BD50();

    uint64_t v96 = v54;
    *(void *)(swift_allocObject() + 16) = v36;
    sub_1C277B500();
    swift_release();
    swift_release();
    uint64_t v55 = v81;
    swift_getWitnessTable();
    uint64_t v45 = sub_1C277B4E0();
    (*(void (**)(char *, uint64_t))(v80 + 8))(v26, v55);
    goto LABEL_8;
  }
  uint64_t v37 = MEMORY[0x1E4FBB390];
  uint64_t v39 = v90;
  uint64_t v38 = v91;
  uint64_t v40 = v89;
  uint64_t v41 = v88;
  if (v30 == MEMORY[0x1E4FBB390])
  {
    uint64_t v49 = v30;
    id v56 = *(id *)(v86 + 32);
    uint64_t v57 = sub_1C277BDA0();

    uint64_t v96 = v57;
    *(void *)(swift_allocObject() + 16) = v37;
    uint64_t v58 = v72;
    sub_1C277B500();
    swift_release();
    swift_release();
    uint64_t v59 = v75;
    swift_getWitnessTable();
    uint64_t v45 = sub_1C277B4E0();
    uint64_t v60 = &v98;
LABEL_11:
    (*(void (**)(char *, uint64_t))(*(v60 - 32) + 8))(v58, v59);
    uint64_t v47 = v84;
    uint64_t v46 = v85;
    uint64_t v48 = v83;
    goto LABEL_12;
  }
  uint64_t v42 = v30;
  uint64_t v43 = sub_1C277A840();
  uint64_t v81 = v42;
  if (v43 == v42)
  {
    uint64_t v96 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v34 + 144))(v35, v41);
    uint64_t v61 = swift_allocObject();
    uint64_t v49 = v81;
    *(void *)(v61 + 16) = v81;
    uint64_t v58 = v68;
    sub_1C277B500();
    swift_release();
    swift_release();
    uint64_t v59 = v70;
    swift_getWitnessTable();
    uint64_t v45 = sub_1C277B4E0();
    uint64_t v60 = &v97;
    goto LABEL_11;
  }
  sub_1C26ECFE4();
  uint64_t v96 = swift_allocError();
  uint64_t v44 = v76;
  sub_1C277B3E0();
  swift_getWitnessTable();
  uint64_t v45 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v44, v33);
  uint64_t v47 = v84;
  uint64_t v46 = v85;
  uint64_t v48 = v83;
  uint64_t v49 = v81;
LABEL_12:
  uint64_t v62 = v82;
  uint64_t v96 = v45;
  unint64_t v63 = (void *)swift_allocObject();
  v63[2] = v49;
  v63[3] = v62;
  v63[4] = v48;
  swift_retain();
  swift_retain();
  sub_1C277B570();
  swift_release();
  swift_release();
  *(void *)(swift_allocObject() + 16) = v49;
  uint64_t v64 = v94;
  sub_1C277B500();
  swift_release();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v40, v46);
  swift_getWitnessTable();
  uint64_t v65 = sub_1C277B4E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v64, v38);
  return v65;
}

void sub_1C26EDF6C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_1C26EE048(255, a3, a4, MEMORY[0x1E4FBB718]);
    sub_1C26532A4();
    unint64_t v5 = sub_1C277B470();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C26EDFF8(unint64_t *a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C26EDF6C(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C26EE048(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C26EE094@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  sub_1C26EE048(0, (unint64_t *)&qword_1EBB85920, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
  swift_bridgeObjectRetain();
  int v4 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, v4 ^ 1u, 1, a1);
}

uint64_t sub_1C26EE158@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  sub_1C26EE048(0, &qword_1EA304C10, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB718]);
  int v4 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, v4 ^ 1u, 1, a1);
}

uint64_t sub_1C26EE210@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  sub_1C26EE048(0, &qword_1EA304BF8, MEMORY[0x1E4FBB390], MEMORY[0x1E4FBB718]);
  int v4 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, v4 ^ 1u, 1, a1);
}

uint64_t sub_1C26EE2C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C26513A4(0);
  MEMORY[0x1F4188790](v6);
  sub_1C26663F8(a1, (uint64_t)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v8 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(a3, v8 ^ 1u, 1, a2);
}

uint64_t sub_1C26EE3A4(uint64_t a1, uint64_t (*a2)(char *), uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1C277C0B0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v17 - v10;
  uint64_t v12 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, a4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    char v15 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v11, a4);
    char v15 = a2(v14);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, a4);
  }
  return v15 & 1;
}

uint64_t sub_1C26EE58C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C26EE5C4(uint64_t a1)
{
  return sub_1C26EE3A4(a1, *(uint64_t (**)(char *))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 16));
}

uint64_t sub_1C26EE5D0()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C26EE5E0()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C26EE5F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C26EE2C0(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1C26EE5F8()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C26EE608@<X0>(uint64_t a1@<X8>)
{
  return sub_1C26EE210(*(void *)(v1 + 16), a1);
}

uint64_t sub_1C26EE610()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C26EE620@<X0>(uint64_t a1@<X8>)
{
  return sub_1C26EE158(*(void *)(v1 + 16), a1);
}

uint64_t sub_1C26EE628()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C26EE638@<X0>(uint64_t a1@<X8>)
{
  return sub_1C26EE094(*(void *)(v1 + 16), a1);
}

uint64_t PluginContentStateManager.deinit()
{
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t method lookup function for PluginContentStateManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PluginContentStateManager);
}

uint64_t dispatch thunk of PluginContentStateManager.__allocating_init(domain:healthStore:category:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of PluginContentStateManager.getBool(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of PluginContentStateManager.getString(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of PluginContentStateManager.setBool(_:for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of PluginContentStateManager.setDate(_:for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of PluginContentStateManager.setInteger(_:for:)(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 184))(a1, a2 & 1);
}

uint64_t dispatch thunk of PluginContentStateManager.setString(_:for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of PluginContentStateManager.setValue<A>(_:identifier:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of PluginContentStateManager.removeValue(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of PluginContentStateManager.removeAllValues()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of PluginContentStateManager.publisher<A>(with:currentValue:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of PluginContentStateManager.publisher<A>(with:filterPreviousState:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

unsigned char *storeEnumTagSinglePayload for PluginContentStateManagerError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C26EE8C0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PluginContentStateManagerError()
{
  return &type metadata for PluginContentStateManagerError;
}

unint64_t sub_1C26EE8FC()
{
  unint64_t result = qword_1EA304C20;
  if (!qword_1EA304C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304C20);
  }
  return result;
}

uint64_t NotificationContentState.init(identifier:uuid:contentState:hasGeneratedLocally:isAcknowledged:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, char a7@<W6>, void *a8@<X8>)
{
  *a8 = a1;
  a8[1] = a2;
  uint64_t v14 = (int *)type metadata accessor for NotificationContentState(0);
  char v15 = (char *)a8 + v14[5];
  uint64_t v16 = sub_1C277A8A0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v15, a3, v16);
  uint64_t v18 = (void *)((char *)a8 + v14[6]);
  *uint64_t v18 = a4;
  v18[1] = a5;
  *((unsigned char *)a8 + v14[7]) = a6;
  *((unsigned char *)a8 + v14[8]) = a7;
  return result;
}

uint64_t type metadata accessor for NotificationContentState(uint64_t a1)
{
  return sub_1C2635628(a1, qword_1EBB83248);
}

uint64_t NotificationContentState.protectedData()@<X0>(void *a1@<X8>)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v5 = type metadata accessor for NotificationContentState(0);
  uint64_t v6 = (char *)v1 + *(int *)(v5 + 20);
  uint64_t v7 = type metadata accessor for ProtectedNotificationContentState(0);
  uint64_t v8 = (char *)a1 + *(int *)(v7 + 20);
  uint64_t v9 = sub_1C277A8A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v8, v6, v9);
  uint64_t v10 = (uint64_t *)((char *)v1 + *(int *)(v5 + 24));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  *a1 = v4;
  a1[1] = v3;
  uint64_t v13 = (void *)((char *)a1 + *(int *)(v7 + 24));
  void *v13 = v11;
  v13[1] = v12;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t NotificationContentState.unprotectedData()@<X0>(void *a1@<X8>)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v5 = (int *)type metadata accessor for NotificationContentState(0);
  uint64_t v6 = (char *)v1 + v5[5];
  uint64_t v7 = (int *)type metadata accessor for UnprotectedNotificationContentState(0);
  uint64_t v8 = (char *)a1 + v7[5];
  uint64_t v9 = sub_1C277A8A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v8, v6, v9);
  char v10 = *((unsigned char *)v1 + v5[7]);
  char v11 = *((unsigned char *)v1 + v5[8]);
  *a1 = v4;
  a1[1] = v3;
  *((unsigned char *)a1 + v7[6]) = v10;
  *((unsigned char *)a1 + v7[7]) = v11;

  return swift_bridgeObjectRetain();
}

uint64_t NotificationContentState.description.getter()
{
  sub_1C277C2D0();
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1C277B8D0();
  type metadata accessor for NotificationContentState(0);
  sub_1C277A8A0();
  sub_1C2638EA8(&qword_1EBB82658);
  sub_1C277C7B0();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  sub_1C277B8D0();
  swift_bridgeObjectRetain();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  sub_1C277B8D0();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  sub_1C277B8D0();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t ProtectedNotificationContentState.description.getter()
{
  uint64_t v2 = *v0;
  swift_bridgeObjectRetain();
  sub_1C277B8D0();
  type metadata accessor for ProtectedNotificationContentState(0);
  sub_1C277A8A0();
  sub_1C2638EA8(&qword_1EBB82658);
  sub_1C277C7B0();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  sub_1C277B8D0();
  swift_bridgeObjectRetain();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t UnprotectedNotificationContentState.description.getter()
{
  sub_1C277C2D0();
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1C277B8D0();
  type metadata accessor for UnprotectedNotificationContentState(0);
  sub_1C277A8A0();
  sub_1C2638EA8(&qword_1EBB82658);
  sub_1C277C7B0();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  sub_1C277B8D0();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  sub_1C277B8D0();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  return v1;
}

BOOL static NotificationContentState.DataError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t NotificationContentState.DataError.hash(into:)()
{
  return sub_1C277C8D0();
}

uint64_t NotificationContentState.DataError.hashValue.getter()
{
  return sub_1C277C910();
}

uint64_t NotificationContentState.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NotificationContentState.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C26EF9F4(type metadata accessor for NotificationContentState, a1);
}

uint64_t NotificationContentState.contentState.getter()
{
  return sub_1C26EFA8C(type metadata accessor for NotificationContentState);
}

uint64_t NotificationContentState.hasGeneratedLocally.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for NotificationContentState(0) + 28));
}

uint64_t NotificationContentState.isAcknowledged.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for NotificationContentState(0) + 32));
}

unint64_t sub_1C26EF18C()
{
  unint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      unint64_t result = 1684632949;
      break;
    case 2:
      unint64_t result = 0x53746E65746E6F63;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0x776F6E6B63417369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C26EF24C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C26F36E8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C26EF274(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1C26EF280(uint64_t a1)
{
  unint64_t v2 = sub_1C26F18C4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C26EF2BC(uint64_t a1)
{
  unint64_t v2 = sub_1C26F18C4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t NotificationContentState.encode(to:)(void *a1)
{
  sub_1C26F1C00(0, &qword_1EA304C28, (uint64_t (*)(void))sub_1C26F18C4, (uint64_t)&type metadata for NotificationContentState.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C26F18C4();
  sub_1C277C9B0();
  char v14 = 0;
  sub_1C277C720();
  if (!v1)
  {
    type metadata accessor for NotificationContentState(0);
    char v13 = 1;
    sub_1C277A8A0();
    sub_1C2638EA8(&qword_1EA304C38);
    sub_1C277C760();
    char v12 = 2;
    sub_1C277C720();
    char v11 = 3;
    sub_1C277C730();
    char v10 = 4;
    sub_1C277C730();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t NotificationContentState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v3 = sub_1C277A8A0();
  uint64_t v26 = *(void *)(v3 - 8);
  uint64_t v27 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C26F1C00(0, &qword_1EA304C40, (uint64_t (*)(void))sub_1C26F18C4, (uint64_t)&type metadata for NotificationContentState.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v29 = v6;
  uint64_t v25 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v23 - v7;
  uint64_t v9 = (int *)type metadata accessor for NotificationContentState(0);
  MEMORY[0x1F4188790](v9);
  char v11 = (uint64_t *)((char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C26F18C4();
  uint64_t v28 = v8;
  uint64_t v12 = (uint64_t)v30;
  sub_1C277C9A0();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v13 = v5;
  uint64_t v14 = v25;
  uint64_t v15 = v26;
  uint64_t v30 = a1;
  uint64_t v16 = v27;
  char v35 = 0;
  *char v11 = sub_1C277C690();
  v11[1] = v17;
  char v34 = 1;
  sub_1C2638EA8(&qword_1EA304C48);
  sub_1C277C6D0();
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))((char *)v11 + v9[5], v13, v16);
  char v33 = 2;
  uint64_t v18 = sub_1C277C690();
  uint64_t v19 = (uint64_t *)((char *)v11 + v9[6]);
  uint64_t *v19 = v18;
  v19[1] = v20;
  char v32 = 3;
  *((unsigned char *)v11 + v9[7]) = sub_1C277C6A0() & 1;
  char v31 = 4;
  char v21 = sub_1C277C6A0();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v28, v29);
  *((unsigned char *)v11 + v9[8]) = v21 & 1;
  sub_1C26F1A34((uint64_t)v11, v24, type metadata accessor for NotificationContentState);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);
  return sub_1C26F1A9C((uint64_t)v11, type metadata accessor for NotificationContentState);
}

uint64_t sub_1C26EF9A4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return NotificationContentState.init(from:)(a1, a2);
}

uint64_t sub_1C26EF9BC(void *a1)
{
  return NotificationContentState.encode(to:)(a1);
}

uint64_t ProtectedNotificationContentState.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C26EF9F4(type metadata accessor for ProtectedNotificationContentState, a1);
}

uint64_t sub_1C26EF9F4@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 20);
  uint64_t v5 = sub_1C277A8A0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t ProtectedNotificationContentState.contentState.getter()
{
  return sub_1C26EFA8C(type metadata accessor for ProtectedNotificationContentState);
}

uint64_t sub_1C26EFA8C(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 24));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t ProtectedNotificationContentState.init(identifier:uuid:contentState:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = a1;
  a6[1] = a2;
  uint64_t v10 = type metadata accessor for ProtectedNotificationContentState(0);
  char v11 = (char *)a6 + *(int *)(v10 + 20);
  uint64_t v12 = sub_1C277A8A0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v11, a3, v12);
  uint64_t v14 = (void *)((char *)a6 + *(int *)(v10 + 24));
  *uint64_t v14 = a4;
  v14[1] = a5;
  return result;
}

uint64_t type metadata accessor for ProtectedNotificationContentState(uint64_t a1)
{
  return sub_1C2635628(a1, qword_1EBB832F0);
}

uint64_t sub_1C26EFB94()
{
  uint64_t v1 = 1684632949;
  if (*v0 != 1) {
    uint64_t v1 = 0x53746E65746E6F63;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_1C26EFBF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C26F3938(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C26EFC1C(uint64_t a1)
{
  unint64_t v2 = sub_1C26F19E0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C26EFC58(uint64_t a1)
{
  unint64_t v2 = sub_1C26F19E0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ProtectedNotificationContentState.encode(to:)(void *a1)
{
  sub_1C26F1C00(0, &qword_1EA304C50, (uint64_t (*)(void))sub_1C26F19E0, (uint64_t)&type metadata for ProtectedNotificationContentState.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C26F19E0();
  sub_1C277C9B0();
  char v12 = 0;
  sub_1C277C720();
  if (!v1)
  {
    type metadata accessor for ProtectedNotificationContentState(0);
    char v11 = 1;
    sub_1C277A8A0();
    sub_1C2638EA8(&qword_1EA304C38);
    sub_1C277C760();
    char v10 = 2;
    sub_1C277C720();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ProtectedNotificationContentState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = sub_1C277A8A0();
  uint64_t v30 = *(void *)(v3 - 8);
  uint64_t v31 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C26F1C00(0, &qword_1EA304C60, (uint64_t (*)(void))sub_1C26F19E0, (uint64_t)&type metadata for ProtectedNotificationContentState.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v32 = v6;
  uint64_t v29 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v27 - v7;
  uint64_t v9 = type metadata accessor for ProtectedNotificationContentState(0);
  MEMORY[0x1F4188790](v9);
  char v11 = (uint64_t *)((char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C26F19E0();
  char v33 = v8;
  uint64_t v12 = (uint64_t)v34;
  sub_1C277C9A0();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v34 = a1;
  uint64_t v14 = v29;
  uint64_t v13 = v30;
  uint64_t v27 = v11;
  uint64_t v15 = v31;
  uint64_t v16 = v32;
  char v37 = 0;
  uint64_t v17 = sub_1C277C690();
  uint64_t v18 = v27;
  *uint64_t v27 = v17;
  v18[1] = v19;
  char v36 = 1;
  sub_1C2638EA8(&qword_1EA304C48);
  uint64_t v20 = v5;
  sub_1C277C6D0();
  uint64_t v21 = (uint64_t)v27;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))((char *)v27 + *(int *)(v9 + 20), v20, v15);
  char v35 = 2;
  uint64_t v22 = sub_1C277C690();
  uint64_t v24 = v23;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v33, v16);
  uint64_t v25 = (uint64_t *)(v21 + *(int *)(v9 + 24));
  *uint64_t v25 = v22;
  v25[1] = v24;
  sub_1C26F1A34(v21, v28, type metadata accessor for ProtectedNotificationContentState);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
  return sub_1C26F1A9C(v21, type metadata accessor for ProtectedNotificationContentState);
}

uint64_t sub_1C26F0294@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ProtectedNotificationContentState.init(from:)(a1, a2);
}

uint64_t sub_1C26F02AC(void *a1)
{
  return ProtectedNotificationContentState.encode(to:)(a1);
}

uint64_t sub_1C26F02C8()
{
  uint64_t v2 = *v0;
  swift_bridgeObjectRetain();
  sub_1C277B8D0();
  sub_1C277A8A0();
  sub_1C2638EA8(&qword_1EBB82658);
  sub_1C277C7B0();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  sub_1C277B8D0();
  swift_bridgeObjectRetain();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t UnprotectedNotificationContentState.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C26EF9F4(type metadata accessor for UnprotectedNotificationContentState, a1);
}

uint64_t UnprotectedNotificationContentState.hasGeneratedLocally.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for UnprotectedNotificationContentState(0) + 24));
}

uint64_t UnprotectedNotificationContentState.isAcknowledged.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for UnprotectedNotificationContentState(0) + 28));
}

uint64_t UnprotectedNotificationContentState.init(identifier:uuid:hasGeneratedLocally:isAcknowledged:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, void *a6@<X8>)
{
  *a6 = a1;
  a6[1] = a2;
  uint64_t v10 = (int *)type metadata accessor for UnprotectedNotificationContentState(0);
  char v11 = (char *)a6 + v10[5];
  uint64_t v12 = sub_1C277A8A0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v11, a3, v12);
  *((unsigned char *)a6 + v10[6]) = a4;
  *((unsigned char *)a6 + v10[7]) = a5;
  return result;
}

uint64_t type metadata accessor for UnprotectedNotificationContentState(uint64_t a1)
{
  return sub_1C2635628(a1, qword_1EBB83388);
}

unint64_t sub_1C26F04DC()
{
  unint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      unint64_t result = 1684632949;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0x776F6E6B63417369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C26F0578@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C26F3AA4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C26F05A0(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1C26F05AC(uint64_t a1)
{
  unint64_t v2 = sub_1C26F1BAC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C26F05E8(uint64_t a1)
{
  unint64_t v2 = sub_1C26F1BAC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t UnprotectedNotificationContentState.encode(to:)(void *a1)
{
  sub_1C26F1C00(0, &qword_1EA304C68, (uint64_t (*)(void))sub_1C26F1BAC, (uint64_t)&type metadata for UnprotectedNotificationContentState.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C26F1BAC();
  sub_1C277C9B0();
  char v13 = 0;
  sub_1C277C720();
  if (!v1)
  {
    type metadata accessor for UnprotectedNotificationContentState(0);
    char v12 = 1;
    sub_1C277A8A0();
    sub_1C2638EA8(&qword_1EA304C38);
    sub_1C277C760();
    char v11 = 2;
    sub_1C277C730();
    char v10 = 3;
    sub_1C277C730();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t UnprotectedNotificationContentState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v3 = sub_1C277A8A0();
  uint64_t v23 = *(void *)(v3 - 8);
  uint64_t v24 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C26F1C00(0, &qword_1EA304C78, (uint64_t (*)(void))sub_1C26F1BAC, (uint64_t)&type metadata for UnprotectedNotificationContentState.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v26 = v6;
  uint64_t v22 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v20 - v7;
  uint64_t v9 = (int *)type metadata accessor for UnprotectedNotificationContentState(0);
  MEMORY[0x1F4188790](v9);
  char v11 = (uint64_t *)((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C26F1BAC();
  uint64_t v25 = v8;
  uint64_t v12 = (uint64_t)v27;
  sub_1C277C9A0();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v13 = v5;
  uint64_t v27 = a1;
  uint64_t v14 = v22;
  uint64_t v15 = v23;
  uint64_t v16 = v24;
  char v31 = 0;
  *char v11 = sub_1C277C690();
  v11[1] = v17;
  char v30 = 1;
  sub_1C2638EA8(&qword_1EA304C48);
  sub_1C277C6D0();
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))((char *)v11 + v9[5], v13, v16);
  char v29 = 2;
  *((unsigned char *)v11 + v9[6]) = sub_1C277C6A0() & 1;
  char v28 = 3;
  uint64_t v18 = sub_1C277C6A0();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v25, v26);
  *((unsigned char *)v11 + v9[7]) = v18 & 1;
  sub_1C26F1A34((uint64_t)v11, v21, type metadata accessor for UnprotectedNotificationContentState);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
  return sub_1C26F1A9C((uint64_t)v11, type metadata accessor for UnprotectedNotificationContentState);
}

uint64_t sub_1C26F0C44@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return UnprotectedNotificationContentState.init(from:)(a1, a2);
}

uint64_t sub_1C26F0C5C(void *a1)
{
  return UnprotectedNotificationContentState.encode(to:)(a1);
}

uint64_t NotificationContentState.init(protected:unprotected:)@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for ProtectedNotificationContentState(0);
  uint64_t v7 = (char *)a1 + *(int *)(v6 + 20);
  uint64_t v8 = type metadata accessor for UnprotectedNotificationContentState(0);
  if (sub_1C277A870())
  {
    uint64_t v9 = (int *)type metadata accessor for NotificationContentState(0);
    uint64_t v10 = (char *)a3 + v9[5];
    uint64_t v11 = sub_1C277A8A0();
    uint64_t v22 = *(void *)(v11 - 8);
    uint64_t v23 = v11;
    uint64_t v24 = v10;
    (*(void (**)(char *, char *))(v22 + 16))(v10, v7);
    uint64_t v13 = *a1;
    uint64_t v12 = a1[1];
    if (*a1 == *a2 && v12 == a2[1] || (sub_1C277C7E0() & 1) != 0)
    {
      *a3 = v13;
      a3[1] = v12;
      uint64_t v14 = (uint64_t *)((char *)a1 + *(int *)(v6 + 24));
      uint64_t v16 = *v14;
      uint64_t v15 = v14[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C26F1A9C((uint64_t)a1, type metadata accessor for ProtectedNotificationContentState);
      uint64_t v17 = (void *)((char *)a3 + v9[6]);
      *uint64_t v17 = v16;
      v17[1] = v15;
      *((unsigned char *)a3 + v9[7]) = *((unsigned char *)a2 + *(int *)(v8 + 24));
      char v18 = *((unsigned char *)a2 + *(int *)(v8 + 28));
      uint64_t result = sub_1C26F1A9C((uint64_t)a2, type metadata accessor for UnprotectedNotificationContentState);
      *((unsigned char *)a3 + v9[8]) = v18;
    }
    else
    {
      sub_1C26F1C68();
      swift_allocError();
      *uint64_t v21 = 1;
      swift_willThrow();
      sub_1C26F1A9C((uint64_t)a2, type metadata accessor for UnprotectedNotificationContentState);
      sub_1C26F1A9C((uint64_t)a1, type metadata accessor for ProtectedNotificationContentState);
      return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v24, v23);
    }
  }
  else
  {
    sub_1C26F1C68();
    swift_allocError();
    *uint64_t v20 = 0;
    swift_willThrow();
    sub_1C26F1A9C((uint64_t)a2, type metadata accessor for UnprotectedNotificationContentState);
    return sub_1C26F1A9C((uint64_t)a1, type metadata accessor for ProtectedNotificationContentState);
  }
  return result;
}

uint64_t NotificationContentState.init(protected:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v3 = type metadata accessor for ProtectedNotificationContentState(0);
  uint64_t v4 = v3 - 8;
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (uint64_t *)((char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for UnprotectedNotificationContentState(0);
  uint64_t v8 = (int *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (uint64_t *)((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (uint64_t *)((char *)&v20 - v12);
  uint64_t v14 = *a1;
  uint64_t v15 = a1[1];
  uint64_t v16 = (char *)a1 + *(int *)(v4 + 28);
  uint64_t v17 = (char *)&v20 + v8[7] - v12;
  uint64_t v18 = sub_1C277A8A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v17, v16, v18);
  void *v13 = v14;
  v13[1] = v15;
  *((unsigned char *)v13 + v8[8]) = 1;
  *((unsigned char *)v13 + v8[9]) = 0;
  sub_1C26F1A34((uint64_t)a1, (uint64_t)v6, type metadata accessor for ProtectedNotificationContentState);
  sub_1C26F1A34((uint64_t)v13, (uint64_t)v11, type metadata accessor for UnprotectedNotificationContentState);
  swift_bridgeObjectRetain();
  NotificationContentState.init(protected:unprotected:)(v6, v11, v21);
  sub_1C26F1A9C((uint64_t)a1, type metadata accessor for ProtectedNotificationContentState);
  return sub_1C26F1A9C((uint64_t)v13, type metadata accessor for UnprotectedNotificationContentState);
}

uint64_t NotificationContentState.dateFromContentState()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for NotificationContentState(0);
  uint64_t v4 = (uint64_t *)(v1 + *(int *)(v3 + 24));
  uint64_t v6 = *v4;
  uint64_t v5 = v4[1];
  if ((v5 & 0x1000000000000000) != 0 || !(v5 & 0x2000000000000000 | v6 & 0x1000000000000000))
  {
    swift_bridgeObjectRetain();
    sub_1C277C2C0();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0) {
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  MEMORY[0x1F4188790](v3);
  if ((v5 & 0x2000000000000000) != 0)
  {
    if (v6 <= 0x20u && ((1 << v6) & 0x100003E01) != 0)
    {
      swift_bridgeObjectRetain();
LABEL_13:
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
    swift_bridgeObjectRetain();
    uint64_t v14 = (unsigned __int8 *)_swift_stdlib_strtod_clocale();
    if (!v14) {
      goto LABEL_13;
    }
    int v15 = *v14;
    swift_bridgeObjectRelease();
    if (v15) {
      goto LABEL_14;
    }
LABEL_7:
    sub_1C277A7A0();
    uint64_t v10 = sub_1C277A840();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a1, 0, 1, v10);
  }
  if ((v6 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (v5 & 0xFFFFFFFFFFFFFFFLL) + 32;
    uint64_t v8 = v6 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = sub_1C277C380();
    uint64_t v8 = v16;
  }
  swift_bridgeObjectRetain();
  char v9 = sub_1C26F1784(v7, v8, (void (*)(uint64_t *__return_ptr))sub_1C26F1D2C);
  swift_bridgeObjectRelease();
  if (v9) {
    goto LABEL_7;
  }
LABEL_14:
  uint64_t v13 = sub_1C277A840();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 1, 1, v13);
}

Swift::Bool __swiftcall NotificationContentState.shouldGenerateNotification(with:)(Swift::String_optional with)
{
  object = with.value._object;
  uint64_t countAndFlagsBits = with.value._countAndFlagsBits;
  uint64_t v4 = type metadata accessor for NotificationContentState(0);
  if (object
    && ((uint64_t v5 = v4, v6 = (void *)(v1 + *(int *)(v4 + 24)), *v6 == countAndFlagsBits)
      ? (BOOL v7 = v6[1] == (void)object)
      : (BOOL v7 = 0),
        v7 || (sub_1C277C7E0() & 1) != 0))
  {
    if (*(unsigned char *)(v1 + *(int *)(v5 + 32))) {
      char v8 = 0;
    }
    else {
      char v8 = *(unsigned char *)(v1 + *(int *)(v5 + 28)) ^ 1;
    }
  }
  else
  {
    char v8 = 1;
  }
  return v8 & 1;
}

Swift::Bool __swiftcall NotificationContentState.shouldRemoveNotification(with:)(Swift::String_optional with)
{
  object = with.value._object;
  uint64_t countAndFlagsBits = with.value._countAndFlagsBits;
  uint64_t v4 = type metadata accessor for NotificationContentState(0);
  if (!object) {
    return 0;
  }
  uint64_t v5 = v4;
  uint64_t v6 = (void *)(v1 + *(int *)(v4 + 24));
  if (*v6 == countAndFlagsBits && v6[1] == (void)object) {
    return *(unsigned char *)(v1 + *(int *)(v5 + 32));
  }
  char v8 = sub_1C277C7E0();
  Swift::Bool result = 0;
  if (v8) {
    return *(unsigned char *)(v1 + *(int *)(v5 + 32));
  }
  return result;
}

uint64_t Optional<A>.shouldGenerateNotification(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_1C26E097C(0);
  MEMORY[0x1F4188790](v6 - 8);
  char v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v9 = (uint64_t (*)(void))sub_1C26E097C;
  sub_1C26F1A34(v3, (uint64_t)v8, (uint64_t (*)(void))sub_1C26E097C);
  uint64_t v10 = (int *)type metadata accessor for NotificationContentState(0);
  char v11 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v10 - 1) + 48))(v8, 1, v10) != 1)
  {
    if (a2)
    {
      uint64_t v12 = &v8[v10[6]];
      BOOL v13 = *(void *)v12 == a1 && *((void *)v12 + 1) == a2;
      if (v13 || (sub_1C277C7E0() & 1) != 0)
      {
        if (v8[v10[8]])
        {
          char v9 = type metadata accessor for NotificationContentState;
          char v11 = 0;
          goto LABEL_12;
        }
        char v11 = v8[v10[7]] ^ 1;
      }
    }
    char v9 = type metadata accessor for NotificationContentState;
  }
LABEL_12:
  sub_1C26F1A9C((uint64_t)v8, v9);
  return v11 & 1;
}

uint64_t Optional<A>.shouldRemoveNotification(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_1C26E097C(0);
  MEMORY[0x1F4188790](v6 - 8);
  char v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v9 = (uint64_t (*)(void))sub_1C26E097C;
  sub_1C26F1A34(v3, (uint64_t)v8, (uint64_t (*)(void))sub_1C26E097C);
  uint64_t v10 = type metadata accessor for NotificationContentState(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v8, 1, v10) == 1)
  {
    a2 = 0;
  }
  else
  {
    if (a2)
    {
      char v11 = &v8[*(int *)(v10 + 24)];
      BOOL v12 = *(void *)v11 == a1 && *((void *)v11 + 1) == a2;
      if (!v12 && (sub_1C277C7E0() & 1) == 0)
      {
        char v9 = type metadata accessor for NotificationContentState;
        a2 = 0;
        goto LABEL_11;
      }
      a2 = v8[*(int *)(v10 + 32)];
    }
    char v9 = type metadata accessor for NotificationContentState;
  }
LABEL_11:
  sub_1C26F1A9C((uint64_t)v8, v9);
  return a2;
}

uint64_t sub_1C26F1784(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    a3(&var2);
    if (!v3) {
      char v4 = var2;
    }
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3) {
      char v4 = BYTE1(var2);
    }
  }
  return v4 & 1;
}

uint64_t _s14HealthPlatform24NotificationContentStateV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (char v5 = sub_1C277C7E0(), v6 = 0, (v5 & 1) != 0))
  {
    uint64_t v7 = (int *)type metadata accessor for NotificationContentState(0);
    if ((sub_1C277A870() & 1) == 0)
    {
LABEL_13:
      char v6 = 0;
      return v6 & 1;
    }
    uint64_t v8 = v7[6];
    uint64_t v9 = *(void *)((char *)a1 + v8);
    uint64_t v10 = *(void *)((char *)a1 + v8 + 8);
    char v11 = (void *)((char *)a2 + v8);
    BOOL v12 = v9 == *v11 && v10 == v11[1];
    if (v12 || (v13 = sub_1C277C7E0(), char v6 = 0, (v13 & 1) != 0))
    {
      if (*((unsigned __int8 *)a1 + v7[7]) == *((unsigned __int8 *)a2 + v7[7]))
      {
        char v6 = *((unsigned char *)a1 + v7[8]) ^ *((unsigned char *)a2 + v7[8]) ^ 1;
        return v6 & 1;
      }
      goto LABEL_13;
    }
  }
  return v6 & 1;
}

unint64_t sub_1C26F18C4()
{
  unint64_t result = qword_1EA304C30;
  if (!qword_1EA304C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304C30);
  }
  return result;
}

uint64_t _s14HealthPlatform33ProtectedNotificationContentStateV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (char v5 = sub_1C277C7E0(), result = 0, (v5 & 1) != 0))
  {
    uint64_t v7 = type metadata accessor for ProtectedNotificationContentState(0);
    if (sub_1C277A870())
    {
      uint64_t v8 = *(int *)(v7 + 24);
      uint64_t v9 = *(void *)((char *)a1 + v8);
      uint64_t v10 = *(void *)((char *)a1 + v8 + 8);
      char v11 = (void *)((char *)a2 + v8);
      if (v9 == *v11 && v10 == v11[1])
      {
        return 1;
      }
      else
      {
        return sub_1C277C7E0();
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

unint64_t sub_1C26F19E0()
{
  unint64_t result = qword_1EA304C58;
  if (!qword_1EA304C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304C58);
  }
  return result;
}

uint64_t sub_1C26F1A34(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C26F1A9C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t _s14HealthPlatform35UnprotectedNotificationContentStateV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (char v5 = sub_1C277C7E0(), v6 = 0, (v5 & 1) != 0))
  {
    uint64_t v7 = type metadata accessor for UnprotectedNotificationContentState(0);
    if ((sub_1C277A870() & 1) != 0
      && *((unsigned __int8 *)a1 + *(int *)(v7 + 24)) == *((unsigned __int8 *)a2 + *(int *)(v7 + 24)))
    {
      char v6 = *((unsigned char *)a1 + *(int *)(v7 + 28)) ^ *((unsigned char *)a2 + *(int *)(v7 + 28)) ^ 1;
    }
    else
    {
      char v6 = 0;
    }
  }
  return v6 & 1;
}

unint64_t sub_1C26F1BAC()
{
  unint64_t result = qword_1EA304C70;
  if (!qword_1EA304C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304C70);
  }
  return result;
}

void sub_1C26F1C00(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1C26F1C68()
{
  unint64_t result = qword_1EA304C80;
  if (!qword_1EA304C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304C80);
  }
  return result;
}

unsigned char *sub_1C26F1CBC@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3 = *result;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  BOOL v7 = v6 && (result = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

void *sub_1C26F1D2C@<X0>(unsigned char *a1@<X8>)
{
  unint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

unint64_t sub_1C26F1D74()
{
  unint64_t result = qword_1EA304C88;
  if (!qword_1EA304C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304C88);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for NotificationContentState(void *a1, void *a2, int *a3)
{
  BOOL v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *BOOL v4 = *a2;
    BOOL v4 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C277A8A0();
    BOOL v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (void *)((char *)v4 + v13);
    uint64_t v16 = (void *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    *((unsigned char *)v4 + v14) = *((unsigned char *)a2 + v14);
    *((unsigned char *)v4 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

void *initializeWithCopy for NotificationContentState(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C277A8A0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v12);
  uint64_t v15 = (void *)((char *)a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  *((unsigned char *)a1 + v13) = *((unsigned char *)a2 + v13);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for NotificationContentState(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C277A8A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

_OWORD *initializeWithTake for NotificationContentState(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C277A8A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

void *assignWithTake for NotificationContentState(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C277A8A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + v16) = *((unsigned char *)a2 + v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationContentState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm);
}

uint64_t storeEnumTagSinglePayload for NotificationContentState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm);
}

uint64_t sub_1C26F224C()
{
  uint64_t result = sub_1C277A8A0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NotificationContentState.DataError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C26F23BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationContentState.DataError()
{
  return &type metadata for NotificationContentState.DataError;
}

uint64_t *initializeBufferWithCopyOfBuffer for ProtectedNotificationContentState(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C277A8A0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (uint64_t *)((char *)v4 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t _s14HealthPlatform24NotificationContentStateVwxx_0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1C277A8A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ProtectedNotificationContentState(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C277A8A0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = v14[1];
  void *v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ProtectedNotificationContentState(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C277A8A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for ProtectedNotificationContentState(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C277A8A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *assignWithTake for ProtectedNotificationContentState(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C277A8A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ProtectedNotificationContentState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm_0);
}

uint64_t storeEnumTagSinglePayload for ProtectedNotificationContentState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm_0);
}

uint64_t sub_1C26F289C()
{
  uint64_t result = sub_1C277A8A0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for UnprotectedNotificationContentState(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C277A8A0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    *((unsigned char *)v4 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    *((unsigned char *)v4 + v13) = *((unsigned char *)a2 + v13);
  }
  return v4;
}

uint64_t destroy for UnprotectedNotificationContentState(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1C277A8A0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *initializeWithCopy for UnprotectedNotificationContentState(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C277A8A0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
  return a1;
}

void *assignWithCopy for UnprotectedNotificationContentState(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C277A8A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

_OWORD *initializeWithTake for UnprotectedNotificationContentState(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C277A8A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
  return a1;
}

void *assignWithTake for UnprotectedNotificationContentState(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C277A8A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *((unsigned char *)a1 + v11) = *((unsigned char *)a2 + v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for UnprotectedNotificationContentState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C26F2D8C);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C277A8A0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for UnprotectedNotificationContentState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C26F2E54);
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C277A8A0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C26F2F00()
{
  uint64_t result = sub_1C277A8A0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for UnprotectedNotificationContentState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for UnprotectedNotificationContentState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C26F3100);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UnprotectedNotificationContentState.CodingKeys()
{
  return &type metadata for UnprotectedNotificationContentState.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ProtectedNotificationContentState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C26F3204);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ProtectedNotificationContentState.CodingKeys()
{
  return &type metadata for ProtectedNotificationContentState.CodingKeys;
}

uint64_t getEnumTagSinglePayload for NotificationContentState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for NotificationContentState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C26F3398);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationContentState.CodingKeys()
{
  return &type metadata for NotificationContentState.CodingKeys;
}

unint64_t sub_1C26F33D4()
{
  unint64_t result = qword_1EA304C90;
  if (!qword_1EA304C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304C90);
  }
  return result;
}

unint64_t sub_1C26F342C()
{
  unint64_t result = qword_1EA304C98;
  if (!qword_1EA304C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304C98);
  }
  return result;
}

unint64_t sub_1C26F3484()
{
  unint64_t result = qword_1EA304CA0;
  if (!qword_1EA304CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304CA0);
  }
  return result;
}

unint64_t sub_1C26F34DC()
{
  unint64_t result = qword_1EA304CA8;
  if (!qword_1EA304CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304CA8);
  }
  return result;
}

unint64_t sub_1C26F3534()
{
  unint64_t result = qword_1EA304CB0;
  if (!qword_1EA304CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304CB0);
  }
  return result;
}

unint64_t sub_1C26F358C()
{
  unint64_t result = qword_1EA304CB8;
  if (!qword_1EA304CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304CB8);
  }
  return result;
}

unint64_t sub_1C26F35E4()
{
  unint64_t result = qword_1EA304CC0;
  if (!qword_1EA304CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304CC0);
  }
  return result;
}

unint64_t sub_1C26F363C()
{
  unint64_t result = qword_1EA304CC8;
  if (!qword_1EA304CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304CC8);
  }
  return result;
}

unint64_t sub_1C26F3694()
{
  unint64_t result = qword_1EA304CD0;
  if (!qword_1EA304CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304CD0);
  }
  return result;
}

uint64_t sub_1C26F36E8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C277C7E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684632949 && a2 == 0xE400000000000000 || (sub_1C277C7E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x53746E65746E6F63 && a2 == 0xEC00000065746174 || (sub_1C277C7E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001C278D1A0 || (sub_1C277C7E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x776F6E6B63417369 && a2 == 0xEE0064656764656CLL)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1C277C7E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1C26F3938(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C277C7E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684632949 && a2 == 0xE400000000000000 || (sub_1C277C7E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x53746E65746E6F63 && a2 == 0xEC00000065746174)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C277C7E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1C26F3AA4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C277C7E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684632949 && a2 == 0xE400000000000000 || (sub_1C277C7E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001C278D1A0 || (sub_1C277C7E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x776F6E6B63417369 && a2 == 0xEE0064656764656CLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1C277C7E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

__n128 PluginSharableModel.version.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = v1[1];
  *a1 = result;
  return result;
}

__n128 PluginSharableModel.version.setter(__n128 *a1)
{
  __n128 result = *a1;
  v1[1] = *a1;
  return result;
}

uint64_t (*PluginSharableModel.version.modify())()
{
  return nullsub_1;
}

uint64_t PluginSharableModel.authorizationIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PluginSharableModel.authorizationIdentifiers.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t (*PluginSharableModel.authorizationIdentifiers.modify())()
{
  return nullsub_1;
}

uint64_t PluginSharableModel.objectTypes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PluginSharableModel.objectTypes.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = a1;
  return result;
}

uint64_t (*PluginSharableModel.objectTypes.modify())()
{
  return nullsub_1;
}

uint64_t PluginSharableModel.data.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  sub_1C263D360(v1, *(void *)(v0 + 56));
  return v1;
}

uint64_t PluginSharableModel.data.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C263CC84(*(void *)(v2 + 48), *(void *)(v2 + 56));
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*PluginSharableModel.data.modify())()
{
  return nullsub_1;
}

void *PluginSharableModel.sharedSummary.getter()
{
  uint64_t v1 = *(void **)(v0 + 64);
  id v2 = v1;
  return v1;
}

void PluginSharableModel.sharedSummary.setter(uint64_t a1)
{
  *(void *)(v1 + 64) = a1;
}

uint64_t (*PluginSharableModel.sharedSummary.modify())()
{
  return nullsub_1;
}

uint64_t PluginSharableModel.sourceTimeZone.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for PluginSharableModel();
  return sub_1C263D60C(v1 + *(int *)(v3 + 40), a1, &qword_1EBB859A8, MEMORY[0x1E4F27D68]);
}

uint64_t PluginSharableModel.sourceTimeZone.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for PluginSharableModel();
  return sub_1C263D5A0(a1, v1 + *(int *)(v3 + 40), &qword_1EBB859A8, MEMORY[0x1E4F27D68]);
}

uint64_t (*PluginSharableModel.sourceTimeZone.modify())()
{
  return nullsub_1;
}

uint64_t PluginSharableModel.sourceLocale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for PluginSharableModel();
  return sub_1C263D60C(v1 + *(int *)(v3 + 44), a1, &qword_1EBB806C8, MEMORY[0x1E4F27A78]);
}

uint64_t PluginSharableModel.sourceLocale.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for PluginSharableModel();
  return sub_1C263D5A0(a1, v1 + *(int *)(v3 + 44), &qword_1EBB806C8, MEMORY[0x1E4F27A78]);
}

uint64_t (*PluginSharableModel.sourceLocale.modify())()
{
  return nullsub_1;
}

BOOL static SharableModelVersion.== infix(_:_:)(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t PluginSharableModel.hash(into:)(uint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = sub_1C277A960();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v33 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C263E4CC(0, &qword_1EBB806C8, MEMORY[0x1E4F27A78]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v34 = (uint64_t)&v30 - v8;
  uint64_t v9 = sub_1C277A9E0();
  uint64_t v35 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v32 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C263E4CC(0, &qword_1EBB859A8, MEMORY[0x1E4F27D68]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v30 - v12;
  swift_bridgeObjectRetain();
  sub_1C277B8B0();
  swift_bridgeObjectRelease();
  sub_1C277C8D0();
  sub_1C277C8D0();
  uint64_t v14 = v1[4];
  uint64_t v15 = *(void *)(v14 + 16);
  sub_1C277C8D0();
  if (v15)
  {
    uint64_t v30 = v5;
    uint64_t v31 = v4;
    uint64_t v16 = *(void *)(sub_1C277AB60() - 8);
    uint64_t v17 = v14 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    uint64_t v18 = *(void *)(v16 + 72);
    sub_1C26F72CC(&qword_1EBB834C8, MEMORY[0x1E4F66840]);
    swift_bridgeObjectRetain();
    do
    {
      sub_1C277B7C0();
      v17 += v18;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
    uint64_t v5 = v30;
    uint64_t v4 = v31;
  }
  unint64_t v19 = v2[5];
  swift_bridgeObjectRetain();
  sub_1C26F4ED0(a1, v19);
  swift_bridgeObjectRelease();
  uint64_t v20 = v2[6];
  unint64_t v21 = v2[7];
  sub_1C263D360(v20, v21);
  sub_1C277A790();
  sub_1C263CC84(v20, v21);
  uint64_t v22 = (void *)v2[8];
  sub_1C277C8E0();
  if (v22)
  {
    id v23 = v22;
    sub_1C277C040();
  }
  uint64_t v24 = type metadata accessor for PluginSharableModel();
  sub_1C263D60C((uint64_t)v2 + *(int *)(v24 + 40), (uint64_t)v13, &qword_1EBB859A8, MEMORY[0x1E4F27D68]);
  uint64_t v25 = v35;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v13, 1, v9) == 1)
  {
    sub_1C277C8E0();
  }
  else
  {
    uint64_t v26 = v32;
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v32, v13, v9);
    sub_1C277C8E0();
    sub_1C26F72CC(&qword_1EBB83218, MEMORY[0x1E4F27D68]);
    sub_1C277B7C0();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v9);
  }
  uint64_t v27 = v34;
  sub_1C263D60C((uint64_t)v2 + *(int *)(v24 + 44), v34, &qword_1EBB806C8, MEMORY[0x1E4F27A78]);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v27, 1, v4) == 1) {
    return sub_1C277C8E0();
  }
  char v29 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v33, v27, v4);
  sub_1C277C8E0();
  sub_1C26F72CC(&qword_1EBB83208, MEMORY[0x1E4F27A78]);
  sub_1C277B7C0();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v29, v4);
}

uint64_t PluginSharableModel.hashValue.getter()
{
  sub_1C277C8C0();
  PluginSharableModel.hash(into:)((uint64_t)v1);
  return sub_1C277C910();
}

uint64_t sub_1C26F4648()
{
  sub_1C277C8C0();
  PluginSharableModel.hash(into:)((uint64_t)v1);
  return sub_1C277C910();
}

uint64_t sub_1C26F468C()
{
  sub_1C277C8C0();
  PluginSharableModel.hash(into:)((uint64_t)v1);
  return sub_1C277C910();
}

uint64_t SharableModelVersion.latestSupported.setter(uint64_t result)
{
  void *v1 = result;
  return result;
}

uint64_t (*SharableModelVersion.latestSupported.modify())()
{
  return nullsub_1;
}

uint64_t SharableModelVersion.minimumSupported.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*SharableModelVersion.minimumSupported.modify())()
{
  return nullsub_1;
}

Swift::Bool __swiftcall SharableModelVersion.isCompatible(with:)(HealthPlatform::SharableModelVersion_optional with)
{
  if (*(unsigned char *)(with.value.latestSupported + 16)) {
    return 0;
  }
  uint64_t v3 = *(void *)(with.value.latestSupported + 8);
  return v3 >= v1[1] && *v1 >= v3;
}

unint64_t SharableModelVersion.description.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t SharableModelVersion.hash(into:)()
{
  return sub_1C277C8D0();
}

uint64_t sub_1C26F4884()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 0x755374736574616CLL;
  }
}

uint64_t sub_1C26F48D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C26F70F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C26F48F8(uint64_t a1)
{
  unint64_t v2 = sub_1C26F5C70();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C26F4934(uint64_t a1)
{
  unint64_t v2 = sub_1C26F5C70();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SharableModelVersion.encode(to:)(void *a1)
{
  sub_1C26F5CC4(0, &qword_1EBB83770, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v10 - v7;
  v10[1] = *(void *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C26F5C70();
  sub_1C277C9B0();
  char v12 = 0;
  sub_1C277C750();
  if (!v2)
  {
    char v11 = 1;
    sub_1C277C750();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t SharableModelVersion.hashValue.getter()
{
  return sub_1C277C910();
}

uint64_t SharableModelVersion.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C26F5CC4(0, &qword_1EA304CE0, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C26F5C70();
  sub_1C277C9A0();
  if (!v2)
  {
    char v15 = 0;
    uint64_t v10 = sub_1C277C6C0();
    char v14 = 1;
    uint64_t v12 = sub_1C277C6C0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

BOOL sub_1C26F4CFC(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t sub_1C26F4D14()
{
  return sub_1C277C910();
}

uint64_t sub_1C26F4D70()
{
  return sub_1C277C8D0();
}

uint64_t sub_1C26F4DAC()
{
  return sub_1C277C910();
}

uint64_t sub_1C26F4E08@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return SharableModelVersion.init(from:)(a1, a2);
}

uint64_t sub_1C26F4E20(void *a1)
{
  return SharableModelVersion.encode(to:)(a1);
}

unint64_t sub_1C26F4E94()
{
  unint64_t result = qword_1EA304CD8;
  if (!qword_1EA304CD8)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA304CD8);
  }
  return result;
}

void sub_1C26F4ED0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1C277C5A0();
    swift_bridgeObjectRelease();
    sub_1C277C8D0();
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C277C5A0();
    swift_bridgeObjectRelease();
    if (!v3) {
      return;
    }
  }
  else
  {
    sub_1C277C8D0();
    uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3) {
      return;
    }
  }
  if (v3 < 1)
  {
    __break(1u);
  }
  else if ((a2 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      MEMORY[0x1C875C230](i, a2);
      sub_1C277C040();
      swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v5 = (void **)(a2 + 32);
    do
    {
      uint64_t v6 = *v5++;
      id v7 = v6;
      sub_1C277C040();

      --v3;
    }
    while (v3);
  }
}

uint64_t _s14HealthPlatform25PluginSharableModelChangeO2eeoiySbAC_ACtFZ_0(uint64_t *a1, void **a2)
{
  uint64_t v2 = *a1;
  unsigned __int8 v3 = *((unsigned char *)a1 + 8);
  uint64_t v4 = (uint64_t)*a2;
  int v5 = *((unsigned __int8 *)a2 + 8);
  switch(v3)
  {
    case 1u:
      if (v5 != 1) {
        goto LABEL_17;
      }
      sub_1C26051DC((uint64_t)*a2, 1u);
      sub_1C26051DC(v2, 1u);
      char v6 = sub_1C272A1DC(v2, v4);
      sub_1C264CFA0(v2, 1u);
      uint64_t v7 = v4;
      unsigned __int8 v8 = 1;
      goto LABEL_12;
    case 2u:
      if (v5 != 2) {
        goto LABEL_17;
      }
      char v6 = sub_1C272A33C((void *)*a1, *a2);
      sub_1C26051DC(v4, 2u);
      sub_1C26051DC(v2, 2u);
      sub_1C264CFA0(v2, 2u);
      uint64_t v7 = v4;
      unsigned __int8 v8 = 2;
      goto LABEL_12;
    case 3u:
      if (v5 != 3) {
        goto LABEL_17;
      }
      sub_1C26051DC((uint64_t)*a2, 3u);
      sub_1C26051DC(v2, 3u);
      char v6 = sub_1C272A404(v2, v4);
      sub_1C264CFA0(v2, 3u);
      uint64_t v7 = v4;
      unsigned __int8 v8 = 3;
      goto LABEL_12;
    case 4u:
      if (v5 != 4) {
        goto LABEL_17;
      }
      sub_1C26051DC((uint64_t)*a2, 4u);
      sub_1C26051DC(v2, 4u);
      char v6 = sub_1C272A1DC(v2, v4);
      sub_1C264CFA0(v2, 4u);
      uint64_t v7 = v4;
      unsigned __int8 v8 = 4;
      goto LABEL_12;
    case 5u:
      if (v5 != 5 || v4 != 0) {
        goto LABEL_17;
      }
      sub_1C264CFA0(*a1, 5u);
      sub_1C264CFA0(0, 5u);
      return 1;
    default:
      if (*((unsigned char *)a2 + 8))
      {
LABEL_17:
        sub_1C26051DC((uint64_t)*a2, *((unsigned char *)a2 + 8));
        sub_1C26051DC(v2, v3);
        sub_1C264CFA0(v2, v3);
        sub_1C264CFA0(v4, v5);
        return 0;
      }
      else
      {
        sub_1C26051DC((uint64_t)*a2, 0);
        sub_1C26051DC(v2, 0);
        char v6 = sub_1C272A1DC(v2, v4);
        sub_1C264CFA0(v2, 0);
        uint64_t v7 = v4;
        unsigned __int8 v8 = 0;
LABEL_12:
        sub_1C264CFA0(v7, v8);
        return v6 & 1;
      }
  }
}

BOOL _s14HealthPlatform19PluginSharableModelV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v75 = sub_1C277A960();
  uint64_t v73 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  uint64_t v69 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v5 = (void (*)(uint64_t))MEMORY[0x1E4F27A78];
  sub_1C26F720C(0, &qword_1EBB83210, &qword_1EBB806C8, MEMORY[0x1E4F27A78]);
  uint64_t v71 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v74 = (uint64_t)&v66 - v7;
  sub_1C263E4CC(0, &qword_1EBB806C8, v5);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v70 = (uint64_t)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v76 = (uint64_t)&v66 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v72 = (uint64_t)&v66 - v13;
  uint64_t v14 = sub_1C277A9E0();
  uint64_t v77 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (void (*)(uint64_t))MEMORY[0x1E4F27D68];
  sub_1C26F720C(0, &qword_1EBB83220, &qword_1EBB859A8, MEMORY[0x1E4F27D68]);
  uint64_t v19 = v18;
  MEMORY[0x1F4188790](v18);
  unint64_t v21 = (char *)&v66 - v20;
  sub_1C263E4CC(0, &qword_1EBB859A8, v17);
  uint64_t v23 = MEMORY[0x1F4188790](v22 - 8);
  uint64_t v25 = (char *)&v66 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x1F4188790](v23);
  char v28 = (char *)&v66 - v27;
  MEMORY[0x1F4188790](v26);
  uint64_t v30 = (char *)&v66 - v29;
  if (*a1 == *a2 && a1[1] == a2[1] || (v31 = sub_1C277C7E0(), BOOL result = 0, (v31 & 1) != 0))
  {
    BOOL result = 0;
    if (a1[2] == a2[2] && a1[3] == a2[3])
    {
      if ((sub_1C272A418(a1[4], a2[4]) & 1) == 0
        || (sub_1C272A460(a1[5], a2[5]) & 1) == 0
        || (sub_1C268C48C(a1[6], a1[7], a2[6], a2[7]) & 1) == 0)
      {
        return 0;
      }
      char v33 = (void *)a2[8];
      if (a1[8])
      {
        if (!v33) {
          return 0;
        }
        uint64_t v67 = (void (*)(uint64_t))a1[8];
        unint64_t v68 = sub_1C26F7314();
        uint64_t v66 = v33;
        uint64_t v67 = v67;
        char v34 = sub_1C277C030();

        if ((v34 & 1) == 0) {
          return 0;
        }
      }
      else if (v33)
      {
        return 0;
      }
      uint64_t v35 = (int *)type metadata accessor for PluginSharableModel();
      uint64_t v36 = (uint64_t)a1 + v35[10];
      uint64_t v67 = (void (*)(uint64_t))MEMORY[0x1E4F27D68];
      sub_1C263D60C(v36, (uint64_t)v30, &qword_1EBB859A8, MEMORY[0x1E4F27D68]);
      uint64_t v66 = v35;
      uint64_t v37 = (uint64_t)a2 + v35[10];
      uint64_t v38 = v67;
      sub_1C263D60C(v37, (uint64_t)v28, &qword_1EBB859A8, v67);
      uint64_t v39 = (uint64_t)&v21[*(int *)(v19 + 48)];
      sub_1C263D60C((uint64_t)v30, (uint64_t)v21, &qword_1EBB859A8, v38);
      unint64_t v68 = v39;
      sub_1C263D60C((uint64_t)v28, v39, &qword_1EBB859A8, v38);
      uint64_t v40 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v77 + 48);
      if (v40((unint64_t)v21, 1, v14) == 1)
      {
        uint64_t v41 = (void (*)(uint64_t))MEMORY[0x1E4F27D68];
        sub_1C263C8D0((uint64_t)v28, &qword_1EBB859A8, MEMORY[0x1E4F27D68]);
        sub_1C263C8D0((uint64_t)v30, &qword_1EBB859A8, v41);
        if (v40(v68, 1, v14) == 1)
        {
          sub_1C263C8D0((uint64_t)v21, &qword_1EBB859A8, MEMORY[0x1E4F27D68]);
LABEL_21:
          uint64_t v50 = v66;
          id v51 = (void (*)(uint64_t))MEMORY[0x1E4F27A78];
          uint64_t v52 = v72;
          sub_1C263D60C((uint64_t)a1 + v66[11], v72, &qword_1EBB806C8, MEMORY[0x1E4F27A78]);
          uint64_t v53 = v76;
          sub_1C263D60C((uint64_t)a2 + v50[11], v76, &qword_1EBB806C8, v51);
          uint64_t v54 = v74;
          uint64_t v55 = v74 + *(int *)(v71 + 48);
          sub_1C263D60C(v52, v74, &qword_1EBB806C8, v51);
          sub_1C263D60C(v53, v55, &qword_1EBB806C8, v51);
          uint64_t v56 = v73;
          uint64_t v57 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48);
          uint64_t v58 = v75;
          if (v57(v54, 1, v75) == 1)
          {
            uint64_t v59 = (void (*)(uint64_t))MEMORY[0x1E4F27A78];
            sub_1C263C8D0(v53, &qword_1EBB806C8, MEMORY[0x1E4F27A78]);
            sub_1C263C8D0(v52, &qword_1EBB806C8, v59);
            if (v57(v55, 1, v58) == 1)
            {
              sub_1C263C8D0(v54, &qword_1EBB806C8, MEMORY[0x1E4F27A78]);
              return 1;
            }
            goto LABEL_26;
          }
          uint64_t v60 = v70;
          sub_1C263D60C(v54, v70, &qword_1EBB806C8, MEMORY[0x1E4F27A78]);
          if (v57(v55, 1, v58) == 1)
          {
            uint64_t v61 = (void (*)(uint64_t))MEMORY[0x1E4F27A78];
            sub_1C263C8D0(v76, &qword_1EBB806C8, MEMORY[0x1E4F27A78]);
            sub_1C263C8D0(v52, &qword_1EBB806C8, v61);
            (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v60, v58);
LABEL_26:
            uint64_t v43 = &qword_1EBB83210;
            uint64_t v44 = &qword_1EBB806C8;
            uint64_t v45 = (void (*)(uint64_t))MEMORY[0x1E4F27A78];
            uint64_t v46 = v54;
            goto LABEL_27;
          }
          uint64_t v62 = v69;
          (*(void (**)(char *, uint64_t, uint64_t))(v56 + 32))(v69, v55, v58);
          sub_1C26F72CC(&qword_1EA304CF8, MEMORY[0x1E4F27A78]);
          char v63 = sub_1C277B810();
          uint64_t v64 = *(void (**)(char *, uint64_t))(v56 + 8);
          v64(v62, v58);
          uint64_t v65 = (void (*)(uint64_t))MEMORY[0x1E4F27A78];
          sub_1C263C8D0(v76, &qword_1EBB806C8, MEMORY[0x1E4F27A78]);
          sub_1C263C8D0(v52, &qword_1EBB806C8, v65);
          v64((char *)v60, v58);
          sub_1C263C8D0(v54, &qword_1EBB806C8, v65);
          return (v63 & 1) != 0;
        }
      }
      else
      {
        sub_1C263D60C((uint64_t)v21, (uint64_t)v25, &qword_1EBB859A8, MEMORY[0x1E4F27D68]);
        if (v40(v68, 1, v14) != 1)
        {
          uint64_t v47 = v77;
          (*(void (**)(char *, unint64_t, uint64_t))(v77 + 32))(v16, v68, v14);
          sub_1C26F72CC(&qword_1EA304D00, MEMORY[0x1E4F27D68]);
          LODWORD(v68) = sub_1C277B810();
          uint64_t v48 = *(void (**)(char *, uint64_t))(v47 + 8);
          v48(v16, v14);
          uint64_t v49 = (void (*)(uint64_t))MEMORY[0x1E4F27D68];
          sub_1C263C8D0((uint64_t)v28, &qword_1EBB859A8, MEMORY[0x1E4F27D68]);
          sub_1C263C8D0((uint64_t)v30, &qword_1EBB859A8, v49);
          v48(v25, v14);
          sub_1C263C8D0((uint64_t)v21, &qword_1EBB859A8, v49);
          if ((v68 & 1) == 0) {
            return 0;
          }
          goto LABEL_21;
        }
        uint64_t v42 = (void (*)(uint64_t))MEMORY[0x1E4F27D68];
        sub_1C263C8D0((uint64_t)v28, &qword_1EBB859A8, MEMORY[0x1E4F27D68]);
        sub_1C263C8D0((uint64_t)v30, &qword_1EBB859A8, v42);
        (*(void (**)(char *, uint64_t))(v77 + 8))(v25, v14);
      }
      uint64_t v43 = &qword_1EBB83220;
      uint64_t v44 = &qword_1EBB859A8;
      uint64_t v45 = (void (*)(uint64_t))MEMORY[0x1E4F27D68];
      uint64_t v46 = (uint64_t)v21;
LABEL_27:
      sub_1C26F7270(v46, v43, v44, v45);
      return 0;
    }
  }
  return result;
}

unint64_t sub_1C26F5C70()
{
  unint64_t result = qword_1EBB83230;
  if (!qword_1EBB83230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB83230);
  }
  return result;
}

void sub_1C26F5CC4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C26F5C70();
    unint64_t v7 = a3(a1, &type metadata for SharableModelVersion.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C26F5D28()
{
  return sub_1C26F72CC(&qword_1EBB83228, (void (*)(uint64_t))type metadata accessor for PluginSharableModel);
}

unint64_t sub_1C26F5D74()
{
  unint64_t result = qword_1EA304CE8;
  if (!qword_1EA304CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304CE8);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for PluginSharableModel(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *(void *)a1 = *a2;
    a1 = v20 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    uint64_t v8 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v8;
    uint64_t v9 = a2[6];
    unint64_t v10 = a2[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C263D360(v9, v10);
    *(void *)(a1 + 48) = v9;
    *(void *)(a1 + 56) = v10;
    uint64_t v11 = (void *)a2[8];
    *(void *)(a1 + 64) = v11;
    uint64_t v12 = *(int *)(a3 + 40);
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_1C277A9E0();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v17 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
    id v18 = v11;
    if (v17(v14, 1, v15))
    {
      sub_1C263E4CC(0, &qword_1EBB859A8, MEMORY[0x1E4F27D68]);
      memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    uint64_t v21 = *(int *)(a3 + 44);
    uint64_t v22 = (void *)(a1 + v21);
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = sub_1C277A960();
    uint64_t v25 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      sub_1C263E4CC(0, &qword_1EBB806C8, MEMORY[0x1E4F27A78]);
      memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
  }
  return a1;
}

void *assignWithCopy for PluginSharableModel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[6];
  unint64_t v7 = a2[7];
  sub_1C263D360(v6, v7);
  uint64_t v8 = a1[6];
  unint64_t v9 = a1[7];
  a1[6] = v6;
  a1[7] = v7;
  sub_1C263CC84(v8, v9);
  unint64_t v10 = (void *)a1[8];
  uint64_t v11 = (void *)a2[8];
  a1[8] = v11;
  id v12 = v11;

  uint64_t v13 = *(int *)(a3 + 40);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_1C277A9E0();
  uint64_t v17 = *(void *)(v16 - 8);
  id v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
LABEL_6:
    sub_1C263E4CC(0, &qword_1EBB859A8, MEMORY[0x1E4F27D68]);
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 24))(v14, v15, v16);
LABEL_7:
  uint64_t v22 = *(int *)(a3 + 44);
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = sub_1C277A960();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v25);
    goto LABEL_12;
  }
  if (v29)
  {
LABEL_12:
    sub_1C263E4CC(0, &qword_1EBB806C8, MEMORY[0x1E4F27A78]);
    memcpy(v23, v24, *(void *)(*(void *)(v30 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  return a1;
}

uint64_t initializeWithTake for PluginSharableModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v8 = *(int *)(a3 + 40);
  unint64_t v9 = (void *)(a1 + v8);
  unint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_1C277A9E0();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    sub_1C263E4CC(0, &qword_1EBB859A8, MEMORY[0x1E4F27D68]);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v14 = *(int *)(a3 + 44);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  uint64_t v17 = sub_1C277A960();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    sub_1C263E4CC(0, &qword_1EBB806C8, MEMORY[0x1E4F27A78]);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  return a1;
}

uint64_t assignWithTake for PluginSharableModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a1 + 48);
  unint64_t v8 = *(void *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  sub_1C263CC84(v7, v8);
  unint64_t v9 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);

  uint64_t v10 = *(int *)(a3 + 40);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = sub_1C277A9E0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    sub_1C263E4CC(0, &qword_1EBB859A8, MEMORY[0x1E4F27D68]);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v11, v12, v13);
LABEL_7:
  uint64_t v19 = *(int *)(a3 + 44);
  int v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  uint64_t v22 = sub_1C277A960();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v23 + 48);
  int v25 = v24(v20, 1, v22);
  int v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v23 + 40))(v20, v21, v22);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v23 + 8))(v20, v22);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    sub_1C263E4CC(0, &qword_1EBB806C8, MEMORY[0x1E4F27A78]);
    memcpy(v20, v21, *(void *)(*(void *)(v27 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v23 + 32))(v20, v21, v22);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  return a1;
}

uint64_t sub_1C26F69CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1C263E4CC(0, &qword_1EBB859A8, MEMORY[0x1E4F27D68]);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 40);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_1C263E4CC(0, &qword_1EBB806C8, MEMORY[0x1E4F27A78]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 44);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1C26F6B30(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1C263E4CC(0, &qword_1EBB859A8, MEMORY[0x1E4F27D68]);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 40);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_1C263E4CC(0, &qword_1EBB806C8, MEMORY[0x1E4F27A78]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 44);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1C26F6C94()
{
  sub_1C263E4CC(319, &qword_1EBB859A8, MEMORY[0x1E4F27D68]);
  if (v0 <= 0x3F)
  {
    sub_1C263E4CC(319, &qword_1EBB806C8, MEMORY[0x1E4F27A78]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t assignWithCopy for PluginSharableModelChange(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_1C26051DC(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  *(void *)a1 = v3;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_1C264CFA0(v5, v6);
  return a1;
}

uint64_t assignWithTake for PluginSharableModelChange(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_1C264CFA0(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for PluginSharableModelChange(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 251);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 5) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PluginSharableModelChange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 251;
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SharableModelVersion.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C26F6FB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SharableModelVersion.CodingKeys()
{
  return &type metadata for SharableModelVersion.CodingKeys;
}

unint64_t sub_1C26F6FF4()
{
  unint64_t result = qword_1EA304CF0;
  if (!qword_1EA304CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304CF0);
  }
  return result;
}

unint64_t sub_1C26F704C()
{
  unint64_t result = qword_1EBB83240;
  if (!qword_1EBB83240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB83240);
  }
  return result;
}

unint64_t sub_1C26F70A4()
{
  unint64_t result = qword_1EBB83238;
  if (!qword_1EBB83238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB83238);
  }
  return result;
}

uint64_t sub_1C26F70F8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x755374736574616CLL && a2 == 0xEF646574726F7070;
  if (v2 || (sub_1C277C7E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C278D200)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C277C7E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void sub_1C26F720C(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1C263E4CC(255, a3, a4);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1C26F7270(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C26F720C(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1C26F72CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C26F7314()
{
  unint64_t result = qword_1EBB82EE8;
  if (!qword_1EBB82EE8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB82EE8);
  }
  return result;
}

uint64_t ContentKind.Group.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContentKind.Group.elements.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_1C26F744C()
{
  qword_1EBB85760 = 0x73656369746F6ELL;
  qword_1EBB85768 = 0xE700000000000000;
  qword_1EBB85770 = (uint64_t)&unk_1F1DC4C20;
}

uint64_t static ContentKind.Group.notices.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EBB85960 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = qword_1EBB85768;
  uint64_t v3 = qword_1EBB85770;
  *a1 = qword_1EBB85760;
  a1[1] = v2;
  a1[2] = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t static ContentKind.Group.notices.setter(uint64_t a1)
{
  uint64_t v1 = *(void *)a1;
  long long v3 = *(_OWORD *)(a1 + 8);
  if (qword_1EBB85960 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_1EBB85760 = v1;
  *(_OWORD *)&qword_1EBB85768 = v3;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*static ContentKind.Group.notices.modify())()
{
  if (qword_1EBB85960 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_1C26F7634()
{
  qword_1EBB85F08 = 0x6867696C68676968;
  qword_1EBB85F10 = 0xEA00000000007374;
  qword_1EBB85F18 = (uint64_t)&unk_1F1DC4D38;
}

uint64_t static ContentKind.Group.highlights.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EBB85F78 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = qword_1EBB85F10;
  uint64_t v3 = qword_1EBB85F18;
  *a1 = qword_1EBB85F08;
  a1[1] = v2;
  a1[2] = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t static ContentKind.Group.highlights.setter(uint64_t a1)
{
  uint64_t v1 = *(void *)a1;
  long long v3 = *(_OWORD *)(a1 + 8);
  if (qword_1EBB85F78 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_1EBB85F08 = v1;
  *(_OWORD *)&qword_1EBB85F10 = v3;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*static ContentKind.Group.highlights.modify())()
{
  if (qword_1EBB85F78 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_1C26F7820()
{
  qword_1EBB85748 = 0x616964656DLL;
  qword_1EBB85750 = 0xE500000000000000;
  qword_1EBB85758 = (uint64_t)&unk_1F1DC5458;
}

uint64_t static ContentKind.Group.media.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EBB859B0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = qword_1EBB85750;
  uint64_t v3 = qword_1EBB85758;
  *a1 = qword_1EBB85748;
  a1[1] = v2;
  a1[2] = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t static ContentKind.Group.media.setter(uint64_t a1)
{
  uint64_t v1 = *(void *)a1;
  long long v3 = *(_OWORD *)(a1 + 8);
  if (qword_1EBB859B0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_1EBB85748 = v1;
  *(_OWORD *)&qword_1EBB85750 = v3;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*static ContentKind.Group.media.modify())()
{
  if (qword_1EBB859B0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1C26F7A04()
{
  sub_1C26F81D0(0, &qword_1EBB85948, (uint64_t)&type metadata for ContentKind.Group, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C277E470;
  if (qword_1EBB85960 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = qword_1EBB85768;
  uint64_t v2 = qword_1EBB85770;
  *(void *)(v0 + 32) = qword_1EBB85760;
  *(void *)(v0 + 40) = v1;
  *(void *)(v0 + 48) = v2;
  uint64_t v3 = qword_1EBB859B0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v3 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v4 = qword_1EBB85750;
  uint64_t v5 = qword_1EBB85758;
  *(void *)(v0 + 56) = qword_1EBB85748;
  *(void *)(v0 + 64) = v4;
  *(void *)(v0 + 72) = v5;
  off_1EBB85778 = (_UNKNOWN *)v0;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t static ContentKind.groups.getter()
{
  if (qword_1EBB85968 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t ContentKind.groups.getter()
{
  char v1 = *v0;
  if (qword_1EBB85968 != -1) {
    swift_once();
  }
  uint64_t v2 = (char *)off_1EBB85778;
  uint64_t v3 = *((void *)off_1EBB85778 + 2);
  if (!v3) {
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = v2 + 40;
  uint64_t v5 = MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v6 = *((void *)v4 - 1);
    long long v12 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    char v7 = sub_1C26596D8(v1, *((uint64_t *)&v12 + 1));
    swift_bridgeObjectRelease();
    if (v7)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1C265A070(0, *(void *)(v5 + 16) + 1, 1);
      }
      unint64_t v9 = *(void *)(v5 + 16);
      unint64_t v8 = *(void *)(v5 + 24);
      if (v9 >= v8 >> 1) {
        sub_1C265A070(v8 > 1, v9 + 1, 1);
      }
      *(void *)(v5 + 16) = v9 + 1;
      uint64_t v10 = v5 + 24 * v9;
      *(void *)(v10 + 32) = v6;
      *(_OWORD *)(v10 + 40) = v12;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v4 = (_OWORD *)((char *)v4 + 24);
    --v3;
  }
  while (v3);
  swift_bridgeObjectRelease();
  return v5;
}

void *static ContentKind.allCases.getter()
{
  return &unk_1F1DC5480;
}

uint64_t sub_1C26F7D4C()
{
  return sub_1C277C910();
}

uint64_t sub_1C26F7DB4()
{
  ContentKind.rawValue.getter();
  sub_1C277B8B0();

  return swift_bridgeObjectRelease();
}

HealthPlatform::ContentKind_optional sub_1C26F7E18(Swift::String *a1)
{
  return ContentKind.init(rawValue:)(*a1);
}

unint64_t sub_1C26F7E24@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ContentKind.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C26F7E4C()
{
  return sub_1C277BA00();
}

uint64_t sub_1C26F7EAC()
{
  return sub_1C277B9E0();
}

void sub_1C26F7EFC(void *a1@<X8>)
{
  *a1 = &unk_1F1DC5480;
}

unint64_t sub_1C26F7F10()
{
  unint64_t result = qword_1EA304D08;
  if (!qword_1EA304D08)
  {
    sub_1C26F81D0(255, &qword_1EA304D10, (uint64_t)&type metadata for ContentKind, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304D08);
  }
  return result;
}

uint64_t destroy for ContentKind.Group()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s14HealthPlatform11ContentKindO5GroupVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ContentKind.Group(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ContentKind.Group(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContentKind.Group(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContentKind.Group(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentKind.Group()
{
  return &type metadata for ContentKind.Group;
}

unint64_t sub_1C26F817C()
{
  unint64_t result = qword_1EA304D18;
  if (!qword_1EA304D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304D18);
  }
  return result;
}

void sub_1C26F81D0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t static Profile.entityName.getter()
{
  return 0x656C69666F7250;
}

void (*Profile.hkProfileIdentifier.modify(uint64_t *a1))(void **a1, char a2)
{
  a1[1] = v1;
  *a1 = Profile.hkProfileIdentifier.getter();
  return sub_1C26F828C;
}

void sub_1C26F828C(void **a1, char a2)
{
  unint64_t v2 = *a1;
  if (a2)
  {
    id v3 = v2;
    Profile.hkProfileIdentifier.setter(v3);
  }
  else
  {
    Profile.hkProfileIdentifier.setter(v2);
  }
}

id static Profile.findOrCreate(_:in:)(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1C277A8A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C26322C0();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C277E470;
  *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v8 + 64) = sub_1C263226C();
  *(void *)(v8 + 32) = 0xD000000000000010;
  *(void *)(v8 + 40) = 0x80000001C2789760;
  id result = objc_msgSend(a1, sel_identifier);
  if (result)
  {
    id v10 = result;
    sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85100);
    *(void *)(v8 + 96) = sub_1C2644ED8(0, &qword_1EBB851A8);
    *(void *)(v8 + 104) = sub_1C26323B0();
    *(void *)(v8 + 72) = v10;
    uint64_t v11 = (void *)sub_1C277BCC0();
    long long v12 = (void *)sub_1C2644090(a2, (uint64_t)v11);

    id v13 = objc_msgSend(a1, sel_identifier);
    sub_1C277A880();

    uint64_t v14 = (void *)sub_1C277A860();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    objc_msgSend(v12, sel_setUniqueIdentifier_, v14);

    Profile.hkProfileIdentifier.setter(a1);
    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t static Profile.find(_:in:)(void *a1, void *a2)
{
  sub_1C26322C0();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C277E470;
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 64) = sub_1C263226C();
  *(void *)(v4 + 32) = 0xD000000000000010;
  *(void *)(v4 + 40) = 0x80000001C2789760;
  id v5 = objc_msgSend(a1, sel_identifier);
  if (v5)
  {
    id v6 = v5;
    sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85100);
    *(void *)(v4 + 96) = sub_1C2644ED8(0, &qword_1EBB851A8);
    *(void *)(v4 + 104) = sub_1C26323B0();
    *(void *)(v4 + 72) = v6;
    char v7 = (void *)sub_1C277BCC0();
    unint64_t v8 = sub_1C2644270(a2, (uint64_t)v7, 1);

    return v8;
  }
  else
  {
    __break(1u);
    sub_1C277C2D0();
    sub_1C277B8D0();
    sub_1C262B07C(0, (unint64_t *)&qword_1EBB831D0);
    sub_1C277C450();
    uint64_t result = sub_1C277C560();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C26F8714()
{
  return 0x656C69666F7250;
}

uint64_t Profile.__allocating_init(context:profileIdentifier:)(void *a1, void *a2)
{
  id v3 = v2;
  uint64_t v6 = sub_1C277A8A0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = self;
  uint64_t v11 = (void *)sub_1C277B820();
  id v12 = objc_msgSend(v10, sel_entityForName_inManagedObjectContext_, v11, a1);

  if (v12)
  {
    id v13 = objc_msgSend(objc_allocWithZone(v3), sel_initWithEntity_insertIntoManagedObjectContext_, v12, a1);
    id v14 = objc_msgSend(a2, sel_identifier);
    sub_1C277A880();

    uint64_t v15 = (void *)sub_1C277A860();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    objc_msgSend(v13, sel_setUniqueIdentifier_, v15);

    Profile.hkProfileIdentifier.setter(a2);
    return (uint64_t)v13;
  }
  else
  {
    uint64_t result = sub_1C277C560();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C26F8934@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Profile.hkProfileIdentifier.getter();
  *a1 = result;
  return result;
}

void sub_1C26F8960(id *a1)
{
}

uint64_t HealthAppForegroundWorkManager.workRunner.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C26482E4(v1 + 16, a1);
}

uint64_t HealthAppForegroundWorkManager.urgentWorkTimeoutInterval.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC14HealthPlatform30HealthAppForegroundWorkManager_urgentWorkTimeoutInterval;
  uint64_t v4 = sub_1C277B620();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t HealthAppForegroundWorkManager.__allocating_init(workRunner:urgentWorkTimeoutInterval:)(long long *a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  HealthAppForegroundWorkManager.init(workRunner:urgentWorkTimeoutInterval:)(a1, a2);
  return v4;
}

uint64_t HealthAppForegroundWorkManager.init(workRunner:urgentWorkTimeoutInterval:)(long long *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v18 = a1;
  uint64_t v19 = a2;
  uint64_t v17 = sub_1C277BEA0();
  uint64_t v4 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C277BE40();
  MEMORY[0x1F4188790](v7);
  uint64_t v8 = sub_1C277B660();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v9 = OBJC_IVAR____TtC14HealthPlatform30HealthAppForegroundWorkManager_protectedState;
  sub_1C264E310(0, &qword_1EBB839F8);
  uint64_t v10 = swift_allocObject();
  *(_DWORD *)(v10 + 32) = 0;
  *(unsigned char *)(v10 + 16) = 0;
  *(void *)(v10 + 24) = 0;
  *(void *)(v2 + v9) = v10;
  uint64_t v16 = OBJC_IVAR____TtC14HealthPlatform30HealthAppForegroundWorkManager_queue;
  unint64_t v15 = sub_1C264E740();
  sub_1C277B650();
  uint64_t v20 = MEMORY[0x1E4FBC860];
  sub_1C2633B78((unint64_t *)&unk_1EBB85160, MEMORY[0x1E4FBCC10]);
  uint64_t v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1C2633D88(0, (unint64_t *)&qword_1EBB850C0, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1C264C2D8(qword_1EBB850D0, (unint64_t *)&qword_1EBB850C0, v11);
  sub_1C277C120();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCC58], v17);
  *(void *)(v2 + v16) = sub_1C277BED0();
  sub_1C261F308(v18, v2 + 16);
  uint64_t v12 = v2 + OBJC_IVAR____TtC14HealthPlatform30HealthAppForegroundWorkManager_urgentWorkTimeoutInterval;
  uint64_t v13 = sub_1C277B620();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v12, v19, v13);
  return v3;
}

Swift::Void __swiftcall HealthAppForegroundWorkManager.start()()
{
  uint64_t v1 = v0;
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C277B130();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBB86280);
  uint64_t v3 = sub_1C277B100();
  os_log_type_t v4 = sub_1C277BD40();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    v12[0] = v6;
    *(_DWORD *)uint64_t v5 = 136446210;
    uint64_t v7 = sub_1C277C9E0();
    sub_1C263FDFC(v7, v8, v12);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v3, v4, "[%{public}s] Starting", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v6, -1, -1);
    MEMORY[0x1C875D230](v5, -1, -1);
  }

  uint64_t v9 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC14HealthPlatform30HealthAppForegroundWorkManager_protectedState);
  uint64_t v10 = (uint64_t)&v9[4];
  uint64_t v11 = v9 + 8;
  os_unfair_lock_lock(v9 + 8);
  sub_1C26F9108(v10, (char *)v12);
  os_unfair_lock_unlock(v11);
}

void sub_1C26F8F58(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v7 = sub_1C277B620();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)a1)
  {
    char v11 = 0;
LABEL_8:
    *a3 = v11;
    return;
  }
  *(unsigned char *)a1 = 1;
  if (*(void *)(a1 + 8))
  {
    uint64_t v12 = *(void *)(a1 + 8);
  }
  else
  {
    sub_1C26482E4(a2 + 16, (uint64_t)v17);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2 + OBJC_IVAR____TtC14HealthPlatform30HealthAppForegroundWorkManager_urgentWorkTimeoutInterval, v7);
    type metadata accessor for ForegroundTask(0);
    swift_allocObject();
    uint64_t v12 = sub_1C260A69C(v17, (uint64_t)v10);
    *(void *)(a1 + 8) = v12;
    swift_retain();
  }
  uint64_t v13 = *(void *)(v12
                  + OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_protectedState);
  id v14 = (unsigned char *)(v13 + 16);
  unint64_t v15 = (os_unfair_lock_s *)(v13 + 64);
  swift_retain();
  os_unfair_lock_lock(v15);
  sub_1C2650B14(v14);
  if (!v3)
  {
    os_unfair_lock_unlock(v15);
    swift_release();
    char v11 = 1;
    goto LABEL_8;
  }
  os_unfair_lock_unlock(v15);
  __break(1u);
}

void sub_1C26F9108(uint64_t a1@<X0>, char *a2@<X8>)
{
  sub_1C26F8F58(a1, v2, a2);
}

uint64_t sub_1C26F9124()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(os_unfair_lock_s **)(result + OBJC_IVAR____TtC14HealthPlatform30HealthAppForegroundWorkManager_protectedState);
    uint64_t v2 = (uint64_t)&v1[4];
    uint64_t v3 = v1 + 8;
    os_unfair_lock_lock(v1 + 8);
    sub_1C26F9108(v2, (char *)v11);
    os_unfair_lock_unlock(v3);
    if (LOBYTE(v11[0]) == 1)
    {
      if (qword_1EBB86260 != -1) {
        swift_once();
      }
      uint64_t v4 = sub_1C277B130();
      __swift_project_value_buffer(v4, (uint64_t)qword_1EBB86280);
      uint64_t v5 = sub_1C277B100();
      os_log_type_t v6 = sub_1C277BD20();
      if (os_log_type_enabled(v5, v6))
      {
        uint64_t v7 = (uint8_t *)swift_slowAlloc();
        uint64_t v8 = swift_slowAlloc();
        v11[0] = v8;
        *(_DWORD *)uint64_t v7 = 136446210;
        uint64_t v9 = sub_1C277C9E0();
        sub_1C263FDFC(v9, v10, v11);
        sub_1C277C0D0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2601000, v5, v6, "[%{public}s] Start was forcefully triggered since it was unexpectedly not yet started.", v7, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C875D230](v8, -1, -1);
        MEMORY[0x1C875D230](v7, -1, -1);
      }
    }
    return swift_release();
  }
  return result;
}

Swift::Void __swiftcall HealthAppForegroundWorkManager.endForeground()()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC14HealthPlatform30HealthAppForegroundWorkManager_protectedState);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 8;
  os_unfair_lock_lock(v1 + 8);
  sub_1C26F9384(v2);

  os_unfair_lock_unlock(v3);
}

void sub_1C26F9384(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    uint64_t v4 = *(os_unfair_lock_s **)(v2
                              + OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_protectedState);
    uint64_t v5 = (uint64_t)&v4[4];
    os_log_type_t v6 = v4 + 16;
    swift_retain();
    os_unfair_lock_lock(v6);
    sub_1C26FB780(v5);
    if (v1)
    {
      os_unfair_lock_unlock(v6);
      __break(1u);
    }
    else
    {
      os_unfair_lock_unlock(v6);
      swift_release();
      swift_release();
      *(void *)(a1 + 8) = 0;
    }
  }
}

Swift::Void __swiftcall HealthAppForegroundWorkManager.cancelLegacyGeneration()()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC14HealthPlatform30HealthAppForegroundWorkManager_protectedState);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 8;
  os_unfair_lock_lock(v1 + 8);
  sub_1C26F9490(v2);

  os_unfair_lock_unlock(v3);
}

uint64_t sub_1C26F9490(uint64_t result)
{
  if (*(void *)(result + 8))
  {
    swift_retain();
    sub_1C26F94D0();
    return swift_release();
  }
  return result;
}

void sub_1C26F94D0()
{
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1C277B130();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBB86280);
  swift_retain_n();
  uint64_t v2 = sub_1C277B100();
  os_log_type_t v3 = sub_1C277BD40();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    uint64_t v9 = v5;
    sub_1C277C9E0();
    sub_1C277B8D0();
    swift_bridgeObjectRelease();
    sub_1C277B8D0();
    swift_bridgeObjectRetain();
    sub_1C277B8D0();
    swift_bridgeObjectRelease();
    sub_1C277B8D0();
    sub_1C263FDFC(91, 0xE100000000000000, &v9);
    sub_1C277C0D0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v2, v3, "%{public}s Request to cancel legacy generation", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v5, -1, -1);
    MEMORY[0x1C875D230](v4, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  os_log_type_t v6 = *(os_unfair_lock_s **)(v0
                            + OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_protectedState);
  uint64_t v7 = (uint64_t)&v6[4];
  uint64_t v8 = v6 + 16;
  os_unfair_lock_lock(v6 + 16);
  sub_1C26FB598(v7);
  os_unfair_lock_unlock(v8);
}

uint64_t HealthAppForegroundWorkManager.deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  uint64_t v1 = v0 + OBJC_IVAR____TtC14HealthPlatform30HealthAppForegroundWorkManager_urgentWorkTimeoutInterval;
  uint64_t v2 = sub_1C277B620();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  return v0;
}

uint64_t HealthAppForegroundWorkManager.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  uint64_t v1 = v0 + OBJC_IVAR____TtC14HealthPlatform30HealthAppForegroundWorkManager_urgentWorkTimeoutInterval;
  uint64_t v2 = sub_1C277B620();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1C26F98A8()
{
  uint64_t v0 = sub_1C277B620();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  os_log_type_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v5 = result;
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1C277B130();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EBB86280);
    swift_retain_n();
    uint64_t v7 = sub_1C277B100();
    os_log_type_t v8 = sub_1C277BD20();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v17 = v15;
      *(_DWORD *)uint64_t v9 = 136446466;
      uint64_t v10 = sub_1C260C35C();
      uint64_t v16 = sub_1C263FDFC(v10, v11, &v17);
      sub_1C277C0D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 12) = 2082;
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5+ OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_urgentWorkTimeoutInterval, v0);
      uint64_t v12 = sub_1C277B860();
      uint64_t v16 = sub_1C263FDFC(v12, v13, &v17);
      sub_1C277C0D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v7, v8, "%{public}s Urgent work completion timed out: %{public}s", (uint8_t *)v9, 0x16u);
      uint64_t v14 = v15;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v14, -1, -1);
      MEMORY[0x1C875D230](v9, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    sub_1C2606B40();
    return swift_release();
  }
  return result;
}

void sub_1C26F9B7C()
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v0 = sub_1C277B130();
    __swift_project_value_buffer(v0, (uint64_t)qword_1EBB86280);
    swift_retain_n();
    uint64_t v1 = sub_1C277B100();
    os_log_type_t v2 = sub_1C277BD40();
    if (os_log_type_enabled(v1, v2))
    {
      uint64_t v3 = swift_slowAlloc();
      uint64_t v4 = swift_slowAlloc();
      uint64_t v7 = v4;
      *(_DWORD *)uint64_t v3 = 136446466;
      uint64_t v5 = sub_1C260C35C();
      sub_1C263FDFC(v5, v6, &v7);
      sub_1C277C0D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v3 + 12) = 1024;
      sub_1C277C0D0();
      _os_log_impl(&dword_1C2601000, v1, v2, "%{public}s Legacy generation completed: %{BOOL}d", (uint8_t *)v3, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v4, -1, -1);
      MEMORY[0x1C875D230](v3, -1, -1);
      swift_release();
    }
    else
    {

      swift_release_n();
    }
  }
}

uint64_t sub_1C26F9D78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C277B630();
  uint64_t v35 = *(void *)(v4 - 8);
  uint64_t v36 = v4;
  MEMORY[0x1F4188790](v4);
  char v33 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_1C277B660();
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  char v31 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1C277B130();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EBB86280);
  swift_retain_n();
  os_log_type_t v8 = sub_1C277B100();
  os_log_type_t v9 = sub_1C277BD40();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v30 = v11;
    uint64_t v37 = a1;
    *(_DWORD *)uint64_t v10 = 136446210;
    uint64_t v44 = v11;
    int v29 = v10 + 4;
    uint64_t aBlock = 91;
    unint64_t v39 = 0xE100000000000000;
    sub_1C277C9E0();
    sub_1C277B8D0();
    swift_bridgeObjectRelease();
    sub_1C277B8D0();
    swift_bridgeObjectRetain();
    sub_1C277B8D0();
    swift_bridgeObjectRelease();
    sub_1C277B8D0();
    uint64_t aBlock = sub_1C263FDFC(aBlock, v39, &v44);
    a1 = v37;
    sub_1C277C0D0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v8, v9, "%{public}s Cancelling", v10, 0xCu);
    uint64_t v12 = v30;
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v12, -1, -1);
    MEMORY[0x1C875D230](v10, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v13 = MEMORY[0x1E4FBC860];
  if ((*(unsigned char *)(a1 + 3) & 1) == 0)
  {
    swift_retain_n();
    uint64_t v14 = sub_1C277B100();
    os_log_type_t v15 = sub_1C277BD40();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136446210;
      uint64_t v44 = v17;
      uint64_t v37 = a1;
      uint64_t aBlock = 91;
      unint64_t v39 = 0xE100000000000000;
      sub_1C277C9E0();
      sub_1C277B8D0();
      swift_bridgeObjectRelease();
      sub_1C277B8D0();
      swift_bridgeObjectRetain();
      sub_1C277B8D0();
      swift_bridgeObjectRelease();
      sub_1C277B8D0();
      uint64_t aBlock = sub_1C263FDFC(aBlock, v39, &v44);
      a1 = v37;
      sub_1C277C0D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v14, v15, "%{public}s Cancelled, but fire once has not completed, calling all the completion with success false", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v17, -1, -1);
      uint64_t v18 = v16;
      uint64_t v13 = MEMORY[0x1E4FBC860];
      MEMORY[0x1C875D230](v18, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    uint64_t v19 = *(void *)(a1 + 8);
    uint64_t v30 = *(void *)(a2 + OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_queue);
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v19;
    uint64_t v42 = sub_1C26FB79C;
    uint64_t v43 = v20;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    unint64_t v39 = 1107296256;
    uint64_t v40 = sub_1C26254FC;
    uint64_t v41 = &block_descriptor_58_0;
    uint64_t v21 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    uint64_t v22 = v31;
    sub_1C277B650();
    uint64_t v44 = v13;
    sub_1C2633B78((unint64_t *)&qword_1EBB84A60, MEMORY[0x1E4FBCB00]);
    uint64_t v37 = a2;
    uint64_t v23 = v13;
    uint64_t v24 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
    sub_1C2633D88(0, (unint64_t *)&unk_1EBB85470, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    sub_1C264C2D8((unint64_t *)&qword_1EBB85480, (unint64_t *)&unk_1EBB85470, v24);
    int v25 = v33;
    uint64_t v26 = v36;
    sub_1C277C120();
    MEMORY[0x1C875BDD0](0, v22, v25, v21);
    _Block_release(v21);
    uint64_t v27 = v26;
    uint64_t v13 = v23;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v25, v27);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v22, v34);
    swift_release();
  }
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = v13;
  uint64_t result = sub_1C260445C(a1);
  *(unsigned char *)(a1 + 1) = 1;
  return result;
}

uint64_t sub_1C26FA478(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1C277B630();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C277B660();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v12 = result;
    swift_beginAccess();
    uint64_t v13 = MEMORY[0x1C875D340](a2 + 16);
    if (v13)
    {
      uint64_t v14 = (void *)v13;
      uint64_t v32 = v7;
      uint64_t v33 = v4;
      if (qword_1EBB86260 != -1) {
        swift_once();
      }
      uint64_t v31 = v8;
      uint64_t v34 = v3;
      uint64_t v15 = sub_1C277B130();
      __swift_project_value_buffer(v15, (uint64_t)qword_1EBB86280);
      swift_retain_n();
      id v16 = v14;
      uint64_t v17 = sub_1C277B100();
      os_log_type_t v18 = sub_1C277BD40();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = swift_slowAlloc();
        uint64_t v30 = swift_slowAlloc();
        aBlock[0] = v30;
        *(_DWORD *)uint64_t v19 = 136446466;
        uint64_t v20 = sub_1C260C35C();
        uint64_t v35 = sub_1C263FDFC(v20, v21, aBlock);
        sub_1C277C0D0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v19 + 12) = 2080;
        uint64_t v22 = sub_1C26131DC();
        uint64_t v35 = sub_1C263FDFC(v22, v23, aBlock);
        sub_1C277C0D0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2601000, v17, v18, "%{public}s Progress %s cancellation handler called", (uint8_t *)v19, 0x16u);
        uint64_t v24 = v30;
        swift_arrayDestroy();
        MEMORY[0x1C875D230](v24, -1, -1);
        MEMORY[0x1C875D230](v19, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = v12;
      *(void *)(v25 + 24) = v16;
      aBlock[4] = (uint64_t)sub_1C26FB73C;
      aBlock[5] = v25;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      void aBlock[2] = (uint64_t)sub_1C26254FC;
      aBlock[3] = (uint64_t)&block_descriptor_52;
      uint64_t v26 = _Block_copy(aBlock);
      swift_retain();
      id v27 = v16;
      sub_1C277B650();
      uint64_t v35 = MEMORY[0x1E4FBC860];
      sub_1C2633B78((unint64_t *)&qword_1EBB84A60, MEMORY[0x1E4FBCB00]);
      int v28 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
      sub_1C2633D88(0, (unint64_t *)&unk_1EBB85470, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
      sub_1C264C2D8((unint64_t *)&qword_1EBB85480, (unint64_t *)&unk_1EBB85470, v28);
      uint64_t v29 = v34;
      sub_1C277C120();
      MEMORY[0x1C875BDD0](0, v10, v6, v26);
      _Block_release(v26);

      (*(void (**)(char *, uint64_t))(v33 + 8))(v6, v29);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v32);
      swift_release();
    }
    return swift_release();
  }
  return result;
}

void sub_1C26FA9A8(uint64_t a1)
{
  uint64_t v3 = sub_1C277B6C0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_queue);
  *uint64_t v6 = v7;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCBF0], v3);
  id v8 = v7;
  LOBYTE(v7) = sub_1C277B6F0();
  uint64_t v9 = (*(uint64_t (**)(void *, uint64_t))(v4 + 8))(v6, v3);
  if (v7)
  {
    MEMORY[0x1F4188790](v9);
    *(void *)&v13[-16] = a1;
    *(void *)&v13[-8] = v1;
    uint64_t v11 = (uint64_t)&v10[4];
    uint64_t v12 = v10 + 16;
    os_unfair_lock_lock(v10 + 16);
    sub_1C26FB764(v11);
    os_unfair_lock_unlock(v12);
  }
  else
  {
    __break(1u);
  }
}

void sub_1C26FAB20(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  if (v3) {
    BOOL v4 = v3 == a2;
  }
  else {
    BOOL v4 = 0;
  }
  if (v4)
  {
    id v21 = a2;
    sub_1C260445C(a1);
  }
  else
  {
    uint64_t v5 = qword_1EBB86260;
    id v6 = v3;
    if (v5 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1C277B130();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EBB86280);
    id v8 = v6;
    swift_retain_n();
    id v9 = a2;
    id v10 = v8;
    id v11 = v9;
    uint64_t v12 = sub_1C277B100();
    os_log_type_t v13 = sub_1C277BD40();
    if (os_log_type_enabled(v12, v13))
    {
      os_log_type_t v23 = v13;
      uint64_t v14 = swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v24 = v22;
      *(_DWORD *)uint64_t v14 = 136446722;
      sub_1C277C9E0();
      sub_1C277B8D0();
      swift_bridgeObjectRelease();
      sub_1C277B8D0();
      swift_bridgeObjectRetain();
      sub_1C277B8D0();
      swift_bridgeObjectRelease();
      sub_1C277B8D0();
      sub_1C263FDFC(91, 0xE100000000000000, &v24);
      sub_1C277C0D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2080;
      uint64_t v15 = sub_1C26131DC();
      sub_1C263FDFC(v15, v16, &v24);
      sub_1C277C0D0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 22) = 2080;
      if (v3)
      {
        uint64_t v17 = sub_1C26131DC();
        unint64_t v19 = v18;
      }
      else
      {
        unint64_t v19 = 0xE300000000000000;
        uint64_t v17 = 7104878;
      }
      sub_1C263FDFC(v17, v19, &v24);
      sub_1C277C0D0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v12, v23, "%{public}s Legacy generation for progress %s cancelled, but already different current progress: %s", (uint8_t *)v14, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v22, -1, -1);
      MEMORY[0x1C875D230](v14, -1, -1);
    }
    else
    {

      swift_release_n();
    }
  }
}

uint64_t sub_1C26FAEA4()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  uint64_t v1 = v0
     + OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_urgentWorkTimeoutInterval;
  uint64_t v2 = sub_1C277B620();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1C26FAF80()
{
  return type metadata accessor for HealthAppForegroundWorkManager(0);
}

uint64_t type metadata accessor for HealthAppForegroundWorkManager(uint64_t a1)
{
  return sub_1C2635628(a1, (uint64_t *)&unk_1EBB838B0);
}

uint64_t sub_1C26FAFA8()
{
  uint64_t result = sub_1C277B620();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for HealthAppForegroundWorkManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HealthAppForegroundWorkManager);
}

uint64_t dispatch thunk of HealthAppForegroundWorkManager.__allocating_init(workRunner:urgentWorkTimeoutInterval:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of HealthAppForegroundWorkManager.WorkRunner.runUrgentWork(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of HealthAppForegroundWorkManager.WorkRunner.runFireOnce(barrier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of HealthAppForegroundWorkManager.WorkRunner.runLegacyGeneration(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_1C26FB0C8()
{
  return type metadata accessor for ForegroundTask(0);
}

uint64_t sub_1C26FB0D0()
{
  uint64_t result = sub_1C277B620();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void destroy for ForegroundTask.State(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 16)) {
    swift_release();
  }

  uint64_t v2 = *(void **)(a1 + 40);
}

uint64_t initializeWithCopy for ForegroundTask.State(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v5 = (_OWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  if (v4)
  {
    uint64_t v6 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = v4;
    *(void *)(a1 + 24) = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *v5;
  }
  uint64_t v7 = *(void **)(a2 + 32);
  id v8 = *(void **)(a2 + 40);
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  id v9 = v7;
  id v10 = v8;
  return a1;
}

uint64_t assignWithCopy for ForegroundTask.State(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(unsigned char *)(a1 + 3) = *(unsigned char *)(a2 + 3);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  if (!*(void *)(a1 + 16))
  {
    if (v4)
    {
      uint64_t v6 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = v4;
      *(void *)(a1 + 24) = v6;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    goto LABEL_8;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  swift_retain();
  swift_release();
LABEL_8:
  uint64_t v7 = *(void **)(a1 + 32);
  id v8 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v8;
  id v9 = v8;

  id v10 = *(void **)(a1 + 40);
  id v11 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v11;
  id v12 = v11;

  return a1;
}

uint64_t assignWithTake for ForegroundTask.State(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(unsigned char *)(a1 + 3) = *(unsigned char *)(a2 + 3);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  if (!*(void *)(a1 + 16))
  {
    if (v4)
    {
      uint64_t v6 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = v4;
      *(void *)(a1 + 24) = v6;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    goto LABEL_8;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  swift_release();
LABEL_8:

  uint64_t v7 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  return a1;
}

ValueMetadata *type metadata accessor for ForegroundTask.State()
{
  return &type metadata for ForegroundTask.State;
}

uint64_t initializeBufferWithCopyOfBuffer for HealthAppForegroundWorkManager.State(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t destroy for HealthAppForegroundWorkManager.State()
{
  return swift_release();
}

uint64_t assignWithCopy for HealthAppForegroundWorkManager.State(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for HealthAppForegroundWorkManager.State(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for HealthAppForegroundWorkManager.State(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for HealthAppForegroundWorkManager.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HealthAppForegroundWorkManager.State()
{
  return &type metadata for HealthAppForegroundWorkManager.State;
}

uint64_t sub_1C26FB598(uint64_t a1)
{
  return sub_1C260445C(a1);
}

uint64_t sub_1C26FB5C0()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C26FB5F8()
{
  return (*(uint64_t (**)(void))(v0 + 16))(0);
}

uint64_t sub_1C26FB624()
{
  return sub_1C26F98A8();
}

uint64_t sub_1C26FB62C()
{
  return objectdestroy_16Tm_0(40);
}

uint64_t sub_1C26FB634()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1C26FB674()
{
}

uint64_t sub_1C26FB67C()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C26FB6B4()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C26FB6EC()
{
  return objectdestroy_16Tm_0(32);
}

uint64_t sub_1C26FB6F4()
{
  return sub_1C26FA478(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C26FB6FC()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C26FB73C()
{
  sub_1C26FA9A8(*(void *)(v0 + 24));
}

void sub_1C26FB764(uint64_t a1)
{
  sub_1C26FAB20(a1, *(void **)(v1 + 16));
}

uint64_t sub_1C26FB780(uint64_t a1)
{
  return sub_1C26F9D78(a1, v1);
}

uint64_t sub_1C26FB79C()
{
  return sub_1C2604D70(*(void *)(v0 + 16), 0);
}

uint64_t sub_1C26FB7BC()
{
  return (*(uint64_t (**)(uint64_t))(v0 + 16))(1);
}

uint64_t sub_1C26FB7E8()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C26FB820()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C26FB858()
{
  return sub_1C26F9124();
}

id static PluginData.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v1 = (void *)sub_1C277B820();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

void sub_1C26FB904(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_uniqueIdentifier);
  uint64_t v4 = sub_1C277B850();
  uint64_t v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

void sub_1C26FB960(uint64_t a1, void **a2)
{
  id v2 = *a2;
  id v3 = (id)sub_1C277B820();
  objc_msgSend(v2, sel_setUniqueIdentifier_, v3);
}

void sub_1C26FB9C4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_data);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_1C277A780();
    unint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v7 = 0xF000000000000000;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1C26FBA30(uint64_t a1, void **a2)
{
  id v2 = *a2;
  if (*(void *)(a1 + 8) >> 60 == 15) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = sub_1C277A770();
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setData_);
}

void sub_1C26FBAAC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_profiles);
  type metadata accessor for Profile();
  sub_1C2642288();
  uint64_t v4 = sub_1C277BBC0();

  *a2 = v4;
}

void sub_1C26FBB20(uint64_t a1, void **a2)
{
  id v2 = *a2;
  type metadata accessor for Profile();
  sub_1C2642288();
  id v3 = (id)sub_1C277BBB0();
  objc_msgSend(v2, sel_setProfiles_, v3);
}

char *keypath_get_selector_plugin()
{
  return sel_plugin;
}

id sub_1C26FBBB0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_plugin);
  *a2 = result;
  return result;
}

id sub_1C26FBBEC(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPlugin_, *a1);
}

uint64_t sub_1C26FBC00()
{
  if (*v0) {
    return 0x656C676E6973;
  }
  else {
    return 0x636974736F6E6761;
  }
}

uint64_t sub_1C26FBC38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C26FC2B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C26FBC60(uint64_t a1)
{
  unint64_t v2 = sub_1C26FBFA4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C26FBC9C(uint64_t a1)
{
  unint64_t v2 = sub_1C26FBFA4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SourceProfile.encode(to:)(void *a1, void *a2)
{
  sub_1C26FBF3C();
  uint64_t v5 = v4;
  uint64_t v15 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C26FC8CC(0, &qword_1EA304D28, MEMORY[0x1E4FBBDE0]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v12 = (char *)&v15 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C26FBFA4();
  sub_1C277C9B0();
  if (a2)
  {
    sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85E90);
    id v13 = a2;
    sub_1C277B730();
    char v17 = 1;
    sub_1C26FC930(&qword_1EA304D38);
    sub_1C277C760();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v7, v5);
  }
  else
  {
    char v16 = 0;
    sub_1C277C770();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

void sub_1C26FBF3C()
{
  if (!qword_1EA304D20)
  {
    sub_1C2644ED8(255, (unint64_t *)&qword_1EBB85E90);
    unint64_t v0 = sub_1C277B720();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA304D20);
    }
  }
}

unint64_t sub_1C26FBFA4()
{
  unint64_t result = qword_1EA304D30;
  if (!qword_1EA304D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304D30);
  }
  return result;
}

uint64_t SourceProfile.init(from:)(void *a1)
{
  return sub_1C26FC3A0(a1);
}

uint64_t SourceProfile.hashValue.getter(void *a1)
{
  sub_1C277C8C0();
  sub_1C277C8D0();
  if (a1)
  {
    id v2 = a1;
    sub_1C277C040();
  }
  return sub_1C277C910();
}

BOOL sub_1C26FC07C(void **a1, void **a2)
{
  id v2 = *a1;
  id v3 = *a2;
  BOOL result = ((unint64_t)*a1 | (unint64_t)*a2) == 0;
  if (v2) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5)
  {
    sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85F30);
    id v6 = v2;
    id v7 = v3;
    char v8 = sub_1C277C030();

    return v8 & 1;
  }
  return result;
}

uint64_t sub_1C26FC108()
{
  uint64_t v1 = *v0;
  sub_1C277C8C0();
  sub_1C277C8D0();
  if (v1)
  {
    id v2 = v1;
    sub_1C277C040();
  }
  return sub_1C277C910();
}

void sub_1C26FC174()
{
  uint64_t v1 = *v0;
  if (*v0)
  {
    sub_1C277C8D0();
    id v2 = v1;
    sub_1C277C040();
  }
  else
  {
    sub_1C277C8D0();
  }
}

uint64_t sub_1C26FC204()
{
  uint64_t v1 = *v0;
  sub_1C277C8C0();
  sub_1C277C8D0();
  if (v1)
  {
    id v2 = v1;
    sub_1C277C040();
  }
  return sub_1C277C910();
}

uint64_t sub_1C26FC26C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C26FC3A0(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1C26FC298(void *a1)
{
  return SourceProfile.encode(to:)(a1, *v1);
}

uint64_t sub_1C26FC2B4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x636974736F6E6761 && a2 == 0xE800000000000000;
  if (v2 || (sub_1C277C7E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C676E6973 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C277C7E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C26FC3A0(void *a1)
{
  sub_1C26FBF3C();
  uint64_t v4 = v3;
  uint64_t v20 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C26FC8CC(0, &qword_1EA304D58, MEMORY[0x1E4FBBDC0]);
  uint64_t v8 = v7;
  uint64_t v21 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v18 - v9;
  uint64_t v11 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C26FBFA4();
  sub_1C277C9A0();
  if (v1) {
    goto LABEL_6;
  }
  unint64_t v19 = v6;
  uint64_t v12 = v21;
  uint64_t v13 = sub_1C277C6E0();
  uint64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    char v15 = *(unsigned char *)(v14 + v13 + 31);
    swift_bridgeObjectRelease();
    if (v15)
    {
      char v22 = 1;
      sub_1C26FC930(&qword_1EA304D60);
      char v16 = v19;
      sub_1C277C6D0();
      uint64_t v11 = sub_1C277B700();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v16, v4);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v8);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v8);
      uint64_t v11 = 0;
    }
LABEL_6:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return v11;
  }
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

unint64_t sub_1C26FC66C()
{
  unint64_t result = qword_1EBB806D8;
  if (!qword_1EBB806D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB806D8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SourceProfile.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C26FC78CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SourceProfile.CodingKeys()
{
  return &type metadata for SourceProfile.CodingKeys;
}

unint64_t sub_1C26FC7C8()
{
  unint64_t result = qword_1EA304D40;
  if (!qword_1EA304D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304D40);
  }
  return result;
}

unint64_t sub_1C26FC820()
{
  unint64_t result = qword_1EA304D48;
  if (!qword_1EA304D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304D48);
  }
  return result;
}

unint64_t sub_1C26FC878()
{
  unint64_t result = qword_1EA304D50;
  if (!qword_1EA304D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304D50);
  }
  return result;
}

void sub_1C26FC8CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C26FBFA4();
    unint64_t v7 = a3(a1, &type metadata for SourceProfile.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C26FC930(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C26FBF3C();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t Publisher<>.addSummaries(_:pluginIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v27 = a1;
  uint64_t v8 = *(void *)(a4 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AAE0];
  sub_1C26387E0(255, &qword_1EBB82C90, (uint64_t (*)(uint64_t))sub_1C26388B8, MEMORY[0x1E4F1AAE0]);
  uint64_t v13 = v12;
  uint64_t v26 = v12;
  uint64_t v25 = sub_1C263885C(&qword_1EBB82C88, &qword_1EBB82C90, v11);
  uint64_t v28 = v13;
  uint64_t v29 = a4;
  uint64_t v30 = v25;
  uint64_t v31 = a5;
  uint64_t v14 = a5;
  uint64_t v15 = sub_1C277B260();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v24 - v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v5, a4);
  unint64_t v19 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v20 = (v9 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a4;
  *(void *)(v21 + 24) = v14;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v21 + v19, v10, a4);
  *(void *)(v21 + v20) = v27;
  swift_bridgeObjectRetain();
  sub_1C277B330();
  sub_1C26388B8();
  sub_1C277B5A0();
  swift_release();
  swift_getWitnessTable();
  uint64_t v22 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  return v22;
}

uint64_t sub_1C26FCC44()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, v5 + 8, v4);
}

uint64_t sub_1C26FCCE0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C2638268(*(void *)(v2+ ((*(void *)(*(void *)(*(void *)(v2 + 16) - 8) + 64)+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v2 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v2 + 16) - 8) + 80))+ 7) & 0xFFFFFFFFFFFFFFF8)), *a1);
  *a2 = result;
  return result;
}

uint64_t sub_1C26FCD70()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C26FCE3C()
{
  return objectdestroy_5Tm_2(MEMORY[0x1E4FBC898], MEMORY[0x1E4FBC898]);
}

uint64_t Publisher<>.getModels(pluginIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C263B8EC();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = Publisher<>.getSummaries(pluginIdentifier:modelIdentifiers:modelObjectTypes:)(a1, a2, 0, 0, a3, a4);
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AAE0];
  sub_1C26387E0(0, &qword_1EBB82C90, (uint64_t (*)(uint64_t))sub_1C26388B8, MEMORY[0x1E4F1AAE0]);
  sub_1C263B054(0, &qword_1EBB82E08, (uint64_t (*)(uint64_t))type metadata accessor for PluginSharableModel, MEMORY[0x1E4FBB320]);
  sub_1C263885C(&qword_1EBB82C88, &qword_1EBB82C90, v13);
  sub_1C277B500();
  sub_1C2638EEC(&qword_1EBB82AA8, (void (*)(uint64_t))sub_1C263B8EC);
  uint64_t v14 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  swift_release();
  uint64_t v19 = v14;
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AAE0];
  sub_1C2639AFC(0, &qword_1EBB82C80, MEMORY[0x1E4F1AAE0]);
  sub_1C263B8A8(&qword_1EBB82C78, &qword_1EBB82C80, v15);
  uint64_t v16 = sub_1C277B4E0();
  swift_release();
  return v16;
}

uint64_t Publisher<>.reuse(summaries:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AC28];
  sub_1C26387E0(255, &qword_1EBB82D40, (uint64_t (*)(uint64_t))type metadata accessor for CachingSharedSummaryTransactionBuilder, MEMORY[0x1E4F1AC28]);
  v14[0] = v7;
  v14[1] = a2;
  void v14[2] = sub_1C270132C((unint64_t *)&qword_1EBB82D38, &qword_1EBB82D40, v6);
  void v14[3] = a3;
  uint64_t v8 = sub_1C277B260();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v14 - v10;
  *(void *)(swift_allocObject() + 16) = a1;
  swift_bridgeObjectRetain();
  sub_1C277B330();
  type metadata accessor for CachingSharedSummaryTransactionBuilder();
  sub_1C277B5A0();
  swift_release();
  swift_getWitnessTable();
  uint64_t v12 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v12;
}

uint64_t sub_1C26FD308@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = a2;
  sub_1C26387E0(0, &qword_1EBB82D40, (uint64_t (*)(uint64_t))type metadata accessor for CachingSharedSummaryTransactionBuilder, MEMORY[0x1E4F1AC28]);
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C277B480();
  *a3 = result;
  return result;
}

uint64_t sub_1C26FD3D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = a4;
  v9[3] = a3;
  v9[4] = sub_1C2625618;
  v9[5] = v8;
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = a3;
  id v10[3] = a4;
  v10[4] = sub_1C270180C;
  v10[5] = v9;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_1C270180C;
  *(void *)(v11 + 24) = v9;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  sub_1C261ADFC();
  swift_release();
  swift_release();

  return swift_release();
}

void sub_1C26FD53C(void *a1, unint64_t a2, uint64_t a3, void (*a4)(void, void), uint64_t a5)
{
  uint64_t v10 = sub_1C277A8A0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v46 = v11;
    id v14 = a1;
    if (qword_1EBB85FE8 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1C277B130();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EBB85FD0);
    swift_bridgeObjectRetain();
    swift_retain();
    id v16 = a1;
    swift_bridgeObjectRetain();
    swift_retain();
    id v17 = a1;
    uint64_t v18 = sub_1C277B100();
    os_log_type_t v19 = sub_1C277BD20();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v43 = v10;
      uint64_t v20 = swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      uint64_t v48 = v42;
      *(_DWORD *)uint64_t v20 = 134218498;
      uint64_t v44 = a5;
      uint64_t v45 = a4;
      if (a2 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v21 = sub_1C277C5A0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v21 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      uint64_t v47 = v21;
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2080;
      id v22 = objc_msgSend(*(id *)(a3 + 16), sel_transactionUUID);
      sub_1C277A880();

      uint64_t v23 = sub_1C277A850();
      unint64_t v25 = v24;
      (*(void (**)(char *, uint64_t))(v46 + 8))(v13, v43);
      uint64_t v47 = sub_1C263FDFC(v23, v25, &v48);
      sub_1C277C0D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 22) = 2082;
      uint64_t v47 = (uint64_t)a1;
      id v26 = a1;
      sub_1C26532A4();
      uint64_t v27 = sub_1C277B870();
      uint64_t v47 = sub_1C263FDFC(v27, v28, &v48);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C2601000, v18, v19, "[Transaction] Could not reuse %ld summaries for transaction %s. %{public}s", (uint8_t *)v20, 0x20u);
      uint64_t v29 = v42;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v29, -1, -1);
      MEMORY[0x1C875D230](v20, -1, -1);

      a4 = v45;
    }
    else
    {
      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    id v40 = a1;
    a4(a1, 1);
  }
  else
  {
    if (qword_1EBB85FE8 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_1C277B130();
    __swift_project_value_buffer(v30, (uint64_t)qword_1EBB85FD0);
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    uint64_t v31 = sub_1C277B100();
    os_log_type_t v32 = sub_1C277BD40();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v46 = v11;
      uint64_t v44 = a5;
      uint64_t v33 = swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      uint64_t v48 = v34;
      *(_DWORD *)uint64_t v33 = 134218242;
      uint64_t v45 = a4;
      uint64_t v43 = v10;
      if (a2 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v35 = sub_1C277C5A0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v35 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      uint64_t v47 = v35;
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 12) = 2080;
      id v36 = objc_msgSend(*(id *)(a3 + 16), sel_transactionUUID);
      sub_1C277A880();

      uint64_t v37 = sub_1C277A850();
      unint64_t v39 = v38;
      (*(void (**)(char *, uint64_t))(v46 + 8))(v13, v43);
      uint64_t v47 = sub_1C263FDFC(v37, v39, &v48);
      sub_1C277C0D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v31, v32, "[Transaction] Reusing %ld summaries for transaction %s", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v34, -1, -1);
      MEMORY[0x1C875D230](v33, -1, -1);

      v45(a3, 0);
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
      a4(a3, 0);
    }
  }
}

uint64_t Publisher<>.removeSummaries(_:pluginIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v19[0] = a5;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AAE0];
  sub_1C26387E0(255, &qword_1EBB80D60, (uint64_t (*)(uint64_t))type metadata accessor for CachingSharedSummaryTransactionBuilder, MEMORY[0x1E4F1AAE0]);
  v19[2] = v11;
  v19[3] = a4;
  v19[4] = sub_1C270132C(&qword_1EBB82C50, &qword_1EBB80D60, v10);
  v19[5] = a5;
  uint64_t v12 = sub_1C277B260();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v19 - v14;
  id v16 = (void *)swift_allocObject();
  v16[2] = a2;
  v16[3] = a3;
  v16[4] = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C277B330();
  type metadata accessor for CachingSharedSummaryTransactionBuilder();
  sub_1C277B5A0();
  swift_release();
  swift_getWitnessTable();
  uint64_t v17 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return v17;
}

uint64_t sub_1C26FDDA0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9 = *a1;
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = v9;
  id v10[3] = a2;
  v10[4] = a3;
  v10[5] = a4;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AC28];
  sub_1C26387E0(0, &qword_1EBB82D40, (uint64_t (*)(uint64_t))type metadata accessor for CachingSharedSummaryTransactionBuilder, MEMORY[0x1E4F1AC28]);
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C277B480();
  sub_1C270132C((unint64_t *)&qword_1EBB82D38, &qword_1EBB82D40, v11);
  uint64_t v12 = sub_1C277B4E0();
  uint64_t result = swift_release();
  *a5 = v12;
  return result;
}

uint64_t sub_1C26FDEF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = a3;
  v13[3] = sub_1C2625618;
  v13[4] = v12;
  v13[5] = a6;
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = a3;
  void v14[3] = a4;
  void v14[4] = a5;
  v14[5] = a6;
  v14[6] = sub_1C2701740;
  v14[7] = v13;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_1C2701740;
  *(void *)(v15 + 24) = v13;
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C261ADFC();
  swift_release();
  swift_release();

  return swift_release();
}

void sub_1C26FE06C(uint64_t a1, uint64_t a2, void (*a3)(void, void), uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_1C277A8A0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v14 = (void *)sub_1C277A610();
    if (objc_msgSend(v14, sel_hk_isObjectNotFoundError))
    {
      if (qword_1EBB85FE8 != -1) {
        swift_once();
      }
      uint64_t v15 = sub_1C277B130();
      __swift_project_value_buffer(v15, (uint64_t)qword_1EBB85FD0);
      swift_retain_n();
      id v16 = sub_1C277B100();
      os_log_type_t v17 = sub_1C277BD40();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = swift_slowAlloc();
        uint64_t v62 = a3;
        os_log_type_t v19 = (uint8_t *)v18;
        uint64_t v20 = swift_slowAlloc();
        uint64_t v60 = v20;
        uint64_t v61 = a4;
        *(_DWORD *)os_log_type_t v19 = 136315138;
        uint64_t v64 = v20;
        uint64_t v59 = (uint64_t)(v19 + 4);
        id v21 = objc_msgSend(*(id *)(a2 + 16), sel_transactionUUID);
        sub_1C277A880();

        uint64_t v22 = sub_1C277A850();
        uint64_t v23 = v11;
        unint64_t v25 = v24;
        (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v10);
        uint64_t v63 = sub_1C263FDFC(v22, v25, &v64);
        sub_1C277C0D0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2601000, v16, v17, "[Transaction] Some summaries were not found and could not be removed in transaction %s", v19, 0xCu);
        uint64_t v26 = v60;
        swift_arrayDestroy();
        MEMORY[0x1C875D230](v26, -1, -1);
        uint64_t v27 = v19;
        a3 = v62;
        MEMORY[0x1C875D230](v27, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      a3(a2, 0);
    }
    else
    {
      uint64_t v60 = v11;
      if (qword_1EBB85FE8 != -1) {
        swift_once();
      }
      uint64_t v40 = sub_1C277B130();
      __swift_project_value_buffer(v40, (uint64_t)qword_1EBB85FD0);
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      id v41 = v14;
      uint64_t v42 = sub_1C277B100();
      os_log_type_t v43 = sub_1C277BD20();
      int v44 = v43;
      if (os_log_type_enabled(v42, v43))
      {
        uint64_t v45 = swift_slowAlloc();
        uint64_t v61 = a4;
        uint64_t v46 = v45;
        uint64_t v59 = swift_slowAlloc();
        uint64_t v64 = v59;
        *(_DWORD *)uint64_t v46 = 134349570;
        int v58 = v44;
        uint64_t v47 = *(void *)(a5 + 16);
        swift_bridgeObjectRelease();
        uint64_t v62 = a3;
        uint64_t v63 = v47;
        sub_1C277C0D0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v46 + 12) = 2080;
        id v48 = objc_msgSend(*(id *)(a2 + 16), sel_transactionUUID);
        sub_1C277A880();

        uint64_t v49 = sub_1C277A850();
        unint64_t v51 = v50;
        (*(void (**)(char *, uint64_t))(v60 + 8))(v13, v10);
        uint64_t v63 = sub_1C263FDFC(v49, v51, &v64);
        sub_1C277C0D0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v46 + 22) = 2082;
        uint64_t v63 = (uint64_t)v41;
        sub_1C2644ED8(0, (unint64_t *)&qword_1EBB854D0);
        id v52 = v41;
        uint64_t v53 = sub_1C277B870();
        uint64_t v63 = sub_1C263FDFC(v53, v54, &v64);
        sub_1C277C0D0();

        a3 = v62;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2601000, v42, (os_log_type_t)v58, "[Transaction] Could not remove %{public}ld summaries from transaction %s. %{public}s", (uint8_t *)v46, 0x20u);
        uint64_t v55 = v59;
        swift_arrayDestroy();
        MEMORY[0x1C875D230](v55, -1, -1);
        MEMORY[0x1C875D230](v46, -1, -1);
      }
      else
      {

        swift_release_n();
        swift_bridgeObjectRelease_n();
      }
      id v56 = v41;
      a3(v41, 1);
    }
  }
  else
  {
    if (qword_1EBB85FE8 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_1C277B130();
    __swift_project_value_buffer(v28, (uint64_t)qword_1EBB85FD0);
    swift_retain_n();
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1C277B100();
    os_log_type_t v30 = sub_1C277BD40();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v62 = a3;
      uint64_t v32 = v31;
      uint64_t v33 = swift_slowAlloc();
      uint64_t v60 = v10;
      uint64_t v34 = v33;
      *(_DWORD *)uint64_t v32 = 134349314;
      uint64_t v63 = *(void *)(a5 + 16);
      uint64_t v64 = v33;
      uint64_t v61 = a4;
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2080;
      uint64_t v59 = v32 + 14;
      id v35 = objc_msgSend(*(id *)(a2 + 16), sel_transactionUUID);
      sub_1C277A880();

      uint64_t v36 = sub_1C277A850();
      unint64_t v38 = v37;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v60);
      uint64_t v63 = sub_1C263FDFC(v36, v38, &v64);
      sub_1C277C0D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v29, v30, "[Transaction] Removed %{public}ld existing summaries from transaction %s", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v34, -1, -1);
      uint64_t v39 = v32;
      a3 = v62;
      MEMORY[0x1C875D230](v39, -1, -1);
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease();
    }
    a3(a2, 0);
  }
}

uint64_t Publisher<>.removeAllSummaries(pluginIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AAE0];
  sub_1C26387E0(255, &qword_1EBB80D60, (uint64_t (*)(uint64_t))type metadata accessor for CachingSharedSummaryTransactionBuilder, MEMORY[0x1E4F1AAE0]);
  long long v17[2] = v9;
  id v17[3] = a3;
  id v17[4] = sub_1C270132C(&qword_1EBB82C50, &qword_1EBB80D60, v8);
  void v17[5] = a4;
  uint64_t v10 = sub_1C277B260();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v17 - v12;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  swift_bridgeObjectRetain();
  sub_1C277B330();
  type metadata accessor for CachingSharedSummaryTransactionBuilder();
  sub_1C277B5A0();
  swift_release();
  swift_getWitnessTable();
  uint64_t v15 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v15;
}

uint64_t sub_1C26FEA30@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v7 = *a1;
  uint64_t v8 = (void *)swift_allocObject();
  _OWORD v8[2] = v7;
  v8[3] = a2;
  v8[4] = a3;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AC28];
  sub_1C26387E0(0, &qword_1EBB82D40, (uint64_t (*)(uint64_t))type metadata accessor for CachingSharedSummaryTransactionBuilder, MEMORY[0x1E4F1AC28]);
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C277B480();
  sub_1C270132C((unint64_t *)&qword_1EBB82D38, &qword_1EBB82D40, v9);
  uint64_t v10 = sub_1C277B4E0();
  uint64_t result = swift_release();
  *a4 = v10;
  return result;
}

uint64_t sub_1C26FEB70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  uint64_t v11 = (void *)swift_allocObject();
  uint64_t v11[2] = a4;
  v11[3] = a5;
  v11[4] = a3;
  v11[5] = sub_1C2625618;
  void v11[6] = v10;
  uint64_t v12 = (void *)swift_allocObject();
  uint64_t v12[2] = a3;
  _OWORD v12[3] = a4;
  v12[4] = a5;
  v12[5] = sub_1C2701684;
  void v12[6] = v11;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1C2701684;
  *(void *)(v13 + 24) = v11;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  sub_1C261ADFC();
  swift_release();
  swift_release();

  return swift_release();
}

void sub_1C26FECE0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(void, void), uint64_t a6)
{
  uint64_t v12 = sub_1C277A8A0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v63 = a6;
    id v16 = (void *)sub_1C277A610();
    unsigned __int8 v17 = objc_msgSend(v16, sel_hk_isObjectNotFoundError);
    uint64_t v61 = v13;
    if (v17)
    {
      if (qword_1EBB85FE8 != -1) {
        swift_once();
      }
      uint64_t v18 = sub_1C277B130();
      __swift_project_value_buffer(v18, (uint64_t)qword_1EBB85FD0);
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      os_log_type_t v19 = sub_1C277B100();
      os_log_type_t v20 = sub_1C277BD40();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = swift_slowAlloc();
        uint64_t v62 = a5;
        uint64_t v22 = v21;
        uint64_t v60 = swift_slowAlloc();
        uint64_t v65 = v60;
        *(_DWORD *)uint64_t v22 = 136446466;
        swift_bridgeObjectRetain();
        uint64_t v64 = sub_1C263FDFC(a2, a3, &v65);
        sub_1C277C0D0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v22 + 12) = 2080;
        uint64_t v59 = v22 + 14;
        id v23 = objc_msgSend(*(id *)(a4 + 16), sel_transactionUUID);
        sub_1C277A880();

        uint64_t v24 = sub_1C277A850();
        unint64_t v26 = v25;
        (*(void (**)(char *, uint64_t))(v61 + 8))(v15, v12);
        uint64_t v64 = sub_1C263FDFC(v24, v26, &v65);
        sub_1C277C0D0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2601000, v19, v20, "[Transaction] No summaries to remove for package %{public}s in transaction %s", (uint8_t *)v22, 0x16u);
        uint64_t v27 = v60;
        swift_arrayDestroy();
        MEMORY[0x1C875D230](v27, -1, -1);
        uint64_t v28 = v22;
        a5 = v62;
        MEMORY[0x1C875D230](v28, -1, -1);
      }
      else
      {

        swift_release_n();
        swift_bridgeObjectRelease_n();
      }
      a5(a4, 0);
    }
    else
    {
      if (qword_1EBB85FE8 != -1) {
        swift_once();
      }
      uint64_t v42 = sub_1C277B130();
      __swift_project_value_buffer(v42, (uint64_t)qword_1EBB85FD0);
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      id v43 = v16;
      int v44 = sub_1C277B100();
      os_log_type_t v45 = sub_1C277BD20();
      int v46 = v45;
      if (os_log_type_enabled(v44, v45))
      {
        uint64_t v47 = swift_slowAlloc();
        LODWORD(v60) = v46;
        uint64_t v48 = v47;
        uint64_t v59 = swift_slowAlloc();
        uint64_t v65 = v59;
        *(_DWORD *)uint64_t v48 = 136446722;
        swift_bridgeObjectRetain();
        uint64_t v64 = sub_1C263FDFC(a2, a3, &v65);
        sub_1C277C0D0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v48 + 12) = 2080;
        id v49 = objc_msgSend(*(id *)(a4 + 16), sel_transactionUUID);
        sub_1C277A880();

        uint64_t v50 = sub_1C277A850();
        uint64_t v62 = a5;
        unint64_t v52 = v51;
        (*(void (**)(char *, uint64_t))(v61 + 8))(v15, v12);
        uint64_t v64 = sub_1C263FDFC(v50, v52, &v65);
        sub_1C277C0D0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v48 + 22) = 2082;
        uint64_t v64 = (uint64_t)v43;
        sub_1C2644ED8(0, (unint64_t *)&qword_1EBB854D0);
        id v53 = v43;
        uint64_t v54 = sub_1C277B870();
        uint64_t v64 = sub_1C263FDFC(v54, v55, &v65);
        sub_1C277C0D0();

        a5 = v62;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2601000, v44, (os_log_type_t)v60, "[Transaction] Could not remove all summaries in %{public}s for transaction %s. %{public}s", (uint8_t *)v48, 0x20u);
        uint64_t v56 = v59;
        swift_arrayDestroy();
        MEMORY[0x1C875D230](v56, -1, -1);
        MEMORY[0x1C875D230](v48, -1, -1);
      }
      else
      {

        swift_release_n();
        swift_bridgeObjectRelease_n();
      }
      id v57 = v43;
      a5(v43, 1);
    }
  }
  else
  {
    if (qword_1EBB85FE8 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_1C277B130();
    __swift_project_value_buffer(v29, (uint64_t)qword_1EBB85FD0);
    swift_retain_n();
    os_log_type_t v30 = sub_1C277B100();
    os_log_type_t v31 = sub_1C277BD40();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v62 = a5;
      uint64_t v33 = (uint8_t *)v32;
      uint64_t v34 = swift_slowAlloc();
      uint64_t v63 = a6;
      uint64_t v35 = v34;
      *(_DWORD *)uint64_t v33 = 136315138;
      uint64_t v65 = v34;
      uint64_t v60 = (uint64_t)(v33 + 4);
      id v36 = objc_msgSend(*(id *)(a4 + 16), sel_transactionUUID);
      sub_1C277A880();

      uint64_t v37 = sub_1C277A850();
      uint64_t v38 = v13;
      unint64_t v40 = v39;
      (*(void (**)(char *, uint64_t))(v38 + 8))(v15, v12);
      uint64_t v64 = sub_1C263FDFC(v37, v40, &v65);
      sub_1C277C0D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v30, v31, "[Transaction] Removed all summaries from transaction %s", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v35, -1, -1);
      id v41 = v33;
      a5 = v62;
      MEMORY[0x1C875D230](v41, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    a5(a4, 0);
  }
}

uint64_t Publisher<>.addMetadata(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AAE0];
  sub_1C26387E0(255, &qword_1EBB80D60, (uint64_t (*)(uint64_t))type metadata accessor for CachingSharedSummaryTransactionBuilder, MEMORY[0x1E4F1AAE0]);
  v14[0] = v7;
  v14[1] = a2;
  void v14[2] = sub_1C270132C(&qword_1EBB82C50, &qword_1EBB80D60, v6);
  void v14[3] = a3;
  uint64_t v8 = sub_1C277B260();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v14 - v10;
  *(void *)(swift_allocObject() + 16) = a1;
  swift_bridgeObjectRetain();
  sub_1C277B330();
  type metadata accessor for CachingSharedSummaryTransactionBuilder();
  sub_1C277B5A0();
  swift_release();
  swift_getWitnessTable();
  uint64_t v12 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v12;
}

uint64_t sub_1C26FF6C8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = a2;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AC28];
  sub_1C26387E0(0, &qword_1EBB82D40, (uint64_t (*)(uint64_t))type metadata accessor for CachingSharedSummaryTransactionBuilder, MEMORY[0x1E4F1AC28]);
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C277B480();
  sub_1C270132C((unint64_t *)&qword_1EBB82D38, &qword_1EBB82D40, v7);
  uint64_t v8 = sub_1C277B4E0();
  uint64_t result = swift_release();
  *a3 = v8;
  return result;
}

uint64_t sub_1C26FF800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = a3;
  v9[3] = sub_1C2625618;
  v9[4] = v8;
  v9[5] = a4;
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = a3;
  id v10[3] = a4;
  v10[4] = sub_1C2701590;
  v10[5] = v9;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_1C2701590;
  *(void *)(v11 + 24) = v9;
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_retain();
  sub_1C261ADFC();
  swift_release();
  swift_release();

  return swift_release();
}

void sub_1C26FF964(void *a1, uint64_t a2, void (*a3)(void, void), uint64_t a4)
{
  uint64_t v8 = sub_1C277A8A0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v12 = a1;
    if (qword_1EBB85FE8 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1C277B130();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EBB85FD0);
    swift_retain();
    id v14 = a1;
    swift_retain();
    id v15 = a1;
    id v16 = sub_1C277B100();
    os_log_type_t v17 = sub_1C277BD20();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v44 = a4;
      uint64_t v19 = v18;
      uint64_t v43 = swift_slowAlloc();
      uint64_t v47 = v43;
      *(_DWORD *)uint64_t v19 = 136315394;
      uint64_t v42 = v19 + 4;
      id v20 = objc_msgSend(*(id *)(a2 + 16), sel_transactionUUID, v19 + 4);
      sub_1C277A880();

      uint64_t v21 = sub_1C277A850();
      os_log_type_t v45 = a3;
      unint64_t v23 = v22;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      uint64_t v46 = sub_1C263FDFC(v21, v23, &v47);
      sub_1C277C0D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2082;
      uint64_t v46 = (uint64_t)a1;
      id v24 = a1;
      sub_1C26532A4();
      uint64_t v25 = sub_1C277B870();
      uint64_t v46 = sub_1C263FDFC(v25, v26, &v47);
      a3 = v45;
      sub_1C277C0D0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C2601000, v16, v17, "[Transaction] Could not add metadata to transaction %s. %{public}s", (uint8_t *)v19, 0x16u);
      uint64_t v27 = v43;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v27, -1, -1);
      MEMORY[0x1C875D230](v19, -1, -1);
    }
    else
    {
      swift_release_n();
    }
    id v41 = a1;
    a3(a1, 1);
  }
  else
  {
    if (qword_1EBB85FE8 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_1C277B130();
    __swift_project_value_buffer(v28, (uint64_t)qword_1EBB85FD0);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v29 = sub_1C277B100();
    os_log_type_t v30 = sub_1C277BD40();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v44 = a4;
      uint64_t v32 = v31;
      uint64_t v43 = swift_slowAlloc();
      uint64_t v47 = v43;
      *(_DWORD *)uint64_t v32 = 136315395;
      uint64_t v42 = v32 + 4;
      id v33 = objc_msgSend(*(id *)(a2 + 16), sel_transactionUUID, v32 + 4);
      sub_1C277A880();

      uint64_t v34 = sub_1C277A850();
      os_log_type_t v45 = a3;
      unint64_t v36 = v35;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      uint64_t v46 = sub_1C263FDFC(v34, v36, &v47);
      sub_1C277C0D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2081;
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_1C277B770();
      unint64_t v39 = v38;
      swift_bridgeObjectRelease();
      uint64_t v46 = sub_1C263FDFC(v37, v39, &v47);
      a3 = v45;
      sub_1C277C0D0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v29, v30, "[Transaction] Transaction %s metadata successfully added: %{private}s", (uint8_t *)v32, 0x16u);
      uint64_t v40 = v43;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v40, -1, -1);
      MEMORY[0x1C875D230](v32, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
    a3(a2, 0);
  }
}

uint64_t Publisher<>.commit(asUrgent:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AAE0];
  sub_1C26387E0(255, &qword_1EBB80D60, (uint64_t (*)(uint64_t))type metadata accessor for CachingSharedSummaryTransactionBuilder, MEMORY[0x1E4F1AAE0]);
  v14[0] = v7;
  v14[1] = a2;
  void v14[2] = sub_1C270132C(&qword_1EBB82C50, &qword_1EBB80D60, v6);
  void v14[3] = a3;
  uint64_t v8 = sub_1C277B260();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v14 - v10;
  *(unsigned char *)(swift_allocObject() + 16) = a1;
  sub_1C277B330();
  type metadata accessor for CachingSharedSummaryTransactionBuilder();
  sub_1C277B5A0();
  swift_release();
  swift_getWitnessTable();
  uint64_t v12 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v12;
}

uint64_t sub_1C2700128@<X0>(uint64_t *a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(unsigned char *)(v6 + 24) = a2;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AC28];
  sub_1C26387E0(0, &qword_1EBB82D40, (uint64_t (*)(uint64_t))type metadata accessor for CachingSharedSummaryTransactionBuilder, MEMORY[0x1E4F1AC28]);
  swift_allocObject();
  swift_retain();
  sub_1C277B480();
  sub_1C270132C((unint64_t *)&qword_1EBB82D38, &qword_1EBB82D40, v7);
  uint64_t v8 = sub_1C277B4E0();
  uint64_t result = swift_release();
  *a3 = v8;
  return result;
}

uint64_t sub_1C2700258(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  uint64_t v9 = swift_allocObject();
  *(unsigned char *)(v9 + 16) = a4;
  *(void *)(v9 + 24) = sub_1C2625618;
  *(void *)(v9 + 32) = v8;
  *(void *)(v9 + 40) = a3;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a3;
  *(unsigned char *)(v10 + 24) = a4;
  *(void *)(v10 + 32) = sub_1C2701504;
  *(void *)(v10 + 40) = v9;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_1C2701504;
  *(void *)(v11 + 24) = v9;
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  sub_1C261ADFC();
  swift_release();
  swift_release();

  return swift_release();
}

void sub_1C27003B0(void *a1, int a2, int a3, void (*a4)(void, void), uint64_t a5, uint64_t a6)
{
  int v51 = a3;
  uint64_t v11 = sub_1C277A8A0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  id v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v15 = a1;
    if (qword_1EBB85FE8 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_1C277B130();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EBB85FD0);
    sub_1C26B331C(a1);
    swift_retain();
    sub_1C26B331C(a1);
    swift_retain();
    os_log_type_t v17 = sub_1C277B100();
    os_log_type_t v18 = sub_1C277BD20();
    int v19 = v18;
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v20 = swift_slowAlloc();
      int v50 = a2;
      uint64_t v21 = v20;
      uint64_t v49 = swift_slowAlloc();
      uint64_t v55 = v49;
      *(_DWORD *)uint64_t v21 = 136315650;
      id v53 = a4;
      id v22 = objc_msgSend(*(id *)(a6 + 16), sel_transactionUUID);
      int v48 = v19;
      id v23 = v22;
      sub_1C277A880();

      uint64_t v24 = sub_1C277A850();
      uint64_t v52 = a5;
      unint64_t v26 = v25;
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      uint64_t v54 = sub_1C263FDFC(v24, v26, &v55);
      sub_1C277C0D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2082;
      if (v51) {
        uint64_t v27 = 0x6E65677275207361;
      }
      else {
        uint64_t v27 = 0;
      }
      if (v51) {
        unint64_t v28 = 0xE900000000000074;
      }
      else {
        unint64_t v28 = 0xE000000000000000;
      }
      uint64_t v54 = sub_1C263FDFC(v27, v28, &v55);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 22) = 2082;
      uint64_t v54 = (uint64_t)a1;
      id v29 = a1;
      sub_1C26532A4();
      uint64_t v30 = sub_1C277B870();
      uint64_t v54 = sub_1C263FDFC(v30, v31, &v55);
      sub_1C277C0D0();
      a4 = v53;
      swift_bridgeObjectRelease();
      sub_1C26B3328(a1);
      sub_1C26B3328(a1);
      _os_log_impl(&dword_1C2601000, v17, (os_log_type_t)v48, "[Transaction] Could not commit transaction %s %{public}s. %{public}s", (uint8_t *)v21, 0x20u);
      uint64_t v32 = v49;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v32, -1, -1);
      MEMORY[0x1C875D230](v21, -1, -1);
    }
    else
    {
      swift_release_n();
      sub_1C26B3328(a1);
      sub_1C26B3328(a1);
    }

    id v46 = a1;
    a4(a1, 1);
    sub_1C26B3328(a1);
  }
  else
  {
    uint64_t v52 = a5;
    id v53 = a4;
    uint64_t v33 = qword_1EBB85FE8;
    id v34 = a1;
    if (v33 != -1) {
      swift_once();
    }
    uint64_t v35 = sub_1C277B130();
    __swift_project_value_buffer(v35, (uint64_t)qword_1EBB85FD0);
    id v36 = v34;
    uint64_t v37 = sub_1C277B100();
    os_log_type_t v38 = sub_1C277BD40();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      uint64_t v54 = (uint64_t)v36;
      uint64_t v55 = v40;
      *(_DWORD *)uint64_t v39 = 136446466;
      int v50 = a2;
      sub_1C2644ED8(0, (unint64_t *)&qword_1EBB82FE0);
      id v41 = v36;
      uint64_t v42 = sub_1C277B870();
      uint64_t v54 = sub_1C263FDFC(v42, v43, &v55);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      sub_1C26B3328(a1);
      sub_1C26B3328(a1);
      *(_WORD *)(v39 + 12) = 2082;
      if (v51) {
        uint64_t v44 = 0x6E65677275207361;
      }
      else {
        uint64_t v44 = 0;
      }
      if (v51) {
        unint64_t v45 = 0xE900000000000074;
      }
      else {
        unint64_t v45 = 0xE000000000000000;
      }
      uint64_t v54 = sub_1C263FDFC(v44, v45, &v55);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v37, v38, "[Transaction] Transaction %{public}s successfully committed %{public}s", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v40, -1, -1);
      MEMORY[0x1C875D230](v39, -1, -1);
    }
    else
    {
      sub_1C26B3328(a1);
      sub_1C26B3328(a1);
    }

    v53(a6, 0);
  }
  sub_1C26B3328(a1);
}

uint64_t Publisher<>.discard()(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AAE0];
  sub_1C26387E0(255, &qword_1EBB80D60, (uint64_t (*)(uint64_t))type metadata accessor for CachingSharedSummaryTransactionBuilder, MEMORY[0x1E4F1AAE0]);
  v12[0] = v5;
  v12[1] = a1;
  uint64_t v12[2] = sub_1C270132C(&qword_1EBB82C50, &qword_1EBB80D60, v4);
  _OWORD v12[3] = a2;
  uint64_t v6 = sub_1C277B260();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v12 - v8;
  sub_1C277B330();
  type metadata accessor for CachingSharedSummaryTransactionBuilder();
  sub_1C277B5A0();
  swift_getWitnessTable();
  uint64_t v10 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v10;
}

uint64_t sub_1C2700B98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AC28];
  sub_1C26387E0(0, &qword_1EBB82D40, (uint64_t (*)(uint64_t))type metadata accessor for CachingSharedSummaryTransactionBuilder, MEMORY[0x1E4F1AC28]);
  swift_allocObject();
  swift_retain();
  sub_1C277B480();
  sub_1C270132C((unint64_t *)&qword_1EBB82D38, &qword_1EBB82D40, v2);
  uint64_t v3 = sub_1C277B4E0();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1C2700CA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = a3;
  _OWORD v7[3] = sub_1C2625618;
  v7[4] = v6;
  uint64_t v8 = (void *)swift_allocObject();
  _OWORD v8[2] = a3;
  v8[3] = sub_1C2701454;
  v8[4] = v7;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1C2701454;
  *(void *)(v9 + 24) = v7;
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  sub_1C261ADFC();
  swift_release();
  swift_release();

  return swift_release();
}

void sub_1C2700DEC(void *a1, uint64_t a2, void (*a3)(void, void), uint64_t a4)
{
  uint64_t v8 = sub_1C277A8A0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v12 = a1;
    if (qword_1EBB85FE8 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1C277B130();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EBB85FD0);
    swift_retain();
    id v14 = a1;
    swift_retain();
    id v15 = a1;
    uint64_t v16 = sub_1C277B100();
    os_log_type_t v17 = sub_1C277BD20();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v42 = a4;
      uint64_t v19 = v18;
      uint64_t v41 = swift_slowAlloc();
      uint64_t v45 = v41;
      *(_DWORD *)uint64_t v19 = 136315394;
      unint64_t v43 = a3;
      id v20 = objc_msgSend(*(id *)(a2 + 16), sel_transactionUUID);
      sub_1C277A880();

      uint64_t v21 = sub_1C277A850();
      uint64_t v22 = v8;
      unint64_t v24 = v23;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v22);
      uint64_t v44 = sub_1C263FDFC(v21, v24, &v45);
      sub_1C277C0D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2082;
      uint64_t v44 = (uint64_t)a1;
      id v25 = a1;
      sub_1C26532A4();
      uint64_t v26 = sub_1C277B870();
      uint64_t v44 = sub_1C263FDFC(v26, v27, &v45);
      a3 = v43;
      sub_1C277C0D0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C2601000, v16, v17, "[Transaction] Could not discard failed transaction %s. %{public}s", (uint8_t *)v19, 0x16u);
      uint64_t v28 = v41;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v28, -1, -1);
      MEMORY[0x1C875D230](v19, -1, -1);
    }
    else
    {
      swift_release_n();
    }
    id v39 = a1;
    a3(a1, 1);
  }
  else
  {
    uint64_t v41 = v8;
    if (qword_1EBB85FE8 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_1C277B130();
    __swift_project_value_buffer(v29, (uint64_t)qword_1EBB85FD0);
    swift_retain_n();
    uint64_t v30 = sub_1C277B100();
    os_log_type_t v31 = sub_1C277BD40();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      uint64_t v42 = a4;
      uint64_t v34 = v33;
      unint64_t v43 = a3;
      *(_DWORD *)uint64_t v32 = 136315138;
      uint64_t v45 = v33;
      uint64_t v40 = v32 + 4;
      id v35 = objc_msgSend(*(id *)(a2 + 16), sel_transactionUUID, v32 + 4);
      sub_1C277A880();

      uint64_t v36 = sub_1C277A850();
      unint64_t v38 = v37;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v41);
      uint64_t v44 = sub_1C263FDFC(v36, v38, &v45);
      a3 = v43;
      sub_1C277C0D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v30, v31, "[Transaction] Transaction %s successfully discarded", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v34, -1, -1);
      MEMORY[0x1C875D230](v32, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    a3(a2, 0);
  }
}

uint64_t sub_1C2701324@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C26FD308(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1C270132C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C26387E0(255, a2, (uint64_t (*)(uint64_t))type metadata accessor for CachingSharedSummaryTransactionBuilder, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2701388()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C27013C8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C26FDDA0(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_1C27013D4()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C270140C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C26FEA30(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1C2701414@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C26FF6C8(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1C270141C()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1C270142C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C2700128(a1, *(unsigned char *)(v2 + 16), a2);
}

uint64_t sub_1C2701434(uint64_t a1, uint64_t a2)
{
  return sub_1C2700CA0(a1, a2, v2);
}

uint64_t sub_1C270143C()
{
  return objectdestroy_26Tm(MEMORY[0x1E4FBC8D0]);
}

void sub_1C2701454(void *a1)
{
  sub_1C2700DEC(a1, *(void *)(v1 + 16), *(void (**)(void, void))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1C2701460()
{
  return objectdestroy_26Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1C2701478(uint64_t a1)
{
  return sub_1C26648A4(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1C2701480()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 25, 7);
}

uint64_t sub_1C27014B8(uint64_t a1, uint64_t a2)
{
  return sub_1C2700258(a1, a2, *(void *)(v2 + 16), *(unsigned char *)(v2 + 24));
}

uint64_t sub_1C27014C4()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1C2701504(void *a1, char a2)
{
  sub_1C27003B0(a1, a2 & 1, *(unsigned __int8 *)(v2 + 16), *(void (**)(void, void))(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1C2701518()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C270155C(uint64_t a1, uint64_t a2)
{
  return sub_1C26FF800(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1C2701564()
{
  return objectdestroy_5Tm_2(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC8D0]);
}

void sub_1C2701590(void *a1)
{
  sub_1C26FF964(a1, *(void *)(v1 + 16), *(void (**)(void, void))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1C270159C()
{
  return objectdestroy_61Tm(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

uint64_t sub_1C27015C8()
{
  return objectdestroy_26Tm(MEMORY[0x1E4FBC898]);
}

uint64_t objectdestroy_26Tm(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 32));

  return MEMORY[0x1F4186498](v1, 40, 7);
}

uint64_t sub_1C2701630(uint64_t a1, uint64_t a2)
{
  return sub_1C26FEB70(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1C270163C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_1C2701684(uint64_t a1)
{
  sub_1C26FECE0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void (**)(void, void))(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_1C2701694()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1C27016DC()
{
  return objectdestroy_5Tm_2(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

uint64_t sub_1C2701708(uint64_t a1, uint64_t a2)
{
  return sub_1C26FDEF4(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_1C2701714()
{
  return objectdestroy_5Tm_2(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC8D0]);
}

void sub_1C2701740(uint64_t a1)
{
  sub_1C26FE06C(a1, *(void *)(v1 + 16), *(void (**)(void, void))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1C270174C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1C27017A0(uint64_t a1, uint64_t a2)
{
  return sub_1C26FD3D8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1C27017A8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C27017E0()
{
  return objectdestroy_61Tm(MEMORY[0x1E4FBC898], MEMORY[0x1E4FBC8D0]);
}

void sub_1C270180C(void *a1)
{
  sub_1C26FD53C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(void, void))(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1C2701818()
{
  return objectdestroy_61Tm(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

void sub_1C2701844()
{
  sub_1C2660E80(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1C2701858()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 72, 7);
}

void sub_1C27018B0()
{
  if (!qword_1EBB82E70)
  {
    sub_1C2644ED8(255, (unint64_t *)&qword_1EBB85E80);
    sub_1C264AB48();
    unint64_t v0 = sub_1C277BC20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB82E70);
    }
  }
}

id sub_1C2701924(id a1, char a2)
{
  if (a2) {
    return a1;
  }
  else {
    return (id)swift_bridgeObjectRetain();
  }
}

uint64_t sub_1C2701930()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C270196C()
{
  return objectdestroy_61Tm(MEMORY[0x1E4FBC898], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1C2701998()
{
  return objectdestroy_61Tm(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

void sub_1C2701A04(unint64_t a1, void *a2)
{
  unint64_t v2 = a1;
  v18[1] = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    sub_1C277C170();
    sub_1C2708E0C();
    sub_1C2708E4C(&qword_1EBB85158, (void (*)(uint64_t))sub_1C2708E0C);
    sub_1C277BC10();
    unint64_t v2 = (unint64_t)v18[2];
    os_log_type_t v17 = v18[3];
    uint64_t v3 = (uint64_t)v18[4];
    id v4 = v18[5];
    unint64_t v5 = (unint64_t)v18[6];
  }
  else
  {
    id v4 = 0;
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    os_log_type_t v17 = (void *)(a1 + 56);
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
  }
  int64_t v9 = (unint64_t)(v3 + 64) >> 6;
  if ((v2 & 0x8000000000000000) != 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v5)
    {
      uint64_t v10 = (v5 - 1) & v5;
      unint64_t v11 = __clz(__rbit64(v5)) | ((void)v4 << 6);
      id v12 = (char *)v4;
      goto LABEL_29;
    }
    uint64_t v14 = (uint64_t)v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v14 >= v9) {
      goto LABEL_32;
    }
    unint64_t v15 = v17[v14];
    id v12 = (char *)v4 + 1;
    if (!v15)
    {
      id v12 = (char *)v4 + 2;
      if ((uint64_t)v4 + 2 >= v9) {
        goto LABEL_32;
      }
      unint64_t v15 = v17[(void)v12];
      if (!v15)
      {
        id v12 = (char *)v4 + 3;
        if ((uint64_t)v4 + 3 >= v9) {
          goto LABEL_32;
        }
        unint64_t v15 = v17[(void)v12];
        if (!v15)
        {
          id v12 = (char *)v4 + 4;
          if ((uint64_t)v4 + 4 >= v9) {
            goto LABEL_32;
          }
          unint64_t v15 = v17[(void)v12];
          if (!v15)
          {
            id v12 = (char *)v4 + 5;
            if ((uint64_t)v4 + 5 >= v9) {
              goto LABEL_32;
            }
            unint64_t v15 = v17[(void)v12];
            if (!v15)
            {
              uint64_t v16 = (char *)v4 + 6;
              while ((char *)v9 != v16)
              {
                unint64_t v15 = v17[(void)v16++];
                if (v15)
                {
                  id v12 = v16 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_1C2648F6C();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v10 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + ((void)v12 << 6);
LABEL_29:
    id v13 = *(id *)(*(void *)(v2 + 48) + 8 * v11);
    if (!v13) {
      goto LABEL_32;
    }
    while (1)
    {
      sub_1C2691B20(v18, v13);

      id v4 = v12;
      unint64_t v5 = v10;
      if ((v2 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (sub_1C277C200())
      {
        sub_1C2708E0C();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v13 = v18[0];
        swift_unknownObjectRelease();
        id v12 = (char *)v4;
        uint64_t v10 = v5;
        if (v13) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

void sub_1C2701CB4(uint64_t a1, void *a2)
{
  int64_t v3 = 0;
  v14[1] = a2;
  uint64_t v4 = a1 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12)
        {
          int64_t v3 = v11 + 3;
          if (v11 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v3);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    sub_1C2692400(v14, *(id *)(*(void *)(a1 + 48) + 8 * v10));
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_1C2701E20(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v18 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    int64_t v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1C26483E0(&v17, v12, v13);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1C2701FA0(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v15 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12)
        {
          int64_t v3 = v11 + 3;
          if (v11 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v3);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    uint64_t result = sub_1C2693664(&v14, *(unsigned char *)(*(void *)(v2 + 48) + v10));
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v15;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t PluginIdentifierSet.description.getter(uint64_t a1)
{
  if (a1) {
    return sub_1C277BBD0();
  }
  else {
    return 7105633;
  }
}

uint64_t PluginIdentifierSet.union(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = 0;
  if (a2)
  {
    if (a1)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return sub_1C2701E20(a1, a2);
    }
  }
  return result;
}

uint64_t static PluginIdentifierSet.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (a1 && a2) {
    return sub_1C267154C(a1, a2);
  }
  else {
    return (a1 | a2) == 0;
  }
}

uint64_t sub_1C27021A8(uint64_t a1)
{
  unint64_t v2 = sub_1C27027E4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C27021E4(uint64_t a1)
{
  unint64_t v2 = sub_1C27027E4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C2702220()
{
  if (*v0) {
    return 0x696669746E656469;
  }
  else {
    return 7105633;
  }
}

uint64_t sub_1C270225C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C2706634(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C2702284(uint64_t a1)
{
  unint64_t v2 = sub_1C2702838();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C27022C0(uint64_t a1)
{
  unint64_t v2 = sub_1C2702838();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C27022FC()
{
  return 12383;
}

uint64_t sub_1C2702308@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C277C7E0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C2702388(uint64_t a1)
{
  unint64_t v2 = sub_1C2702790();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C27023C4(uint64_t a1)
{
  unint64_t v2 = sub_1C2702790();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PluginIdentifierSet.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v23 = a2;
  int64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDE0];
  sub_1C2708D44(0, &qword_1EA304D70, (uint64_t (*)(void))sub_1C2702790, (uint64_t)&type metadata for PluginIdentifierSet.IdentifiersCodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v21 = *(void *)(v4 - 8);
  uint64_t v22 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v18 - v5;
  sub_1C2708D44(0, &qword_1EA304D80, (uint64_t (*)(void))sub_1C27027E4, (uint64_t)&type metadata for PluginIdentifierSet.AllCodingKeys, v3);
  uint64_t v19 = *(void *)(v7 - 8);
  uint64_t v20 = v7;
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = (char *)&v18 - v8;
  sub_1C2708D44(0, &qword_1EA304D90, (uint64_t (*)(void))sub_1C2702838, (uint64_t)&type metadata for PluginIdentifierSet.CodingKeys, v3);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  char v14 = (char *)&v18 - v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2702838();
  uint64_t v15 = v23;
  sub_1C277C9B0();
  if (v15)
  {
    char v26 = 1;
    sub_1C2702790();
    sub_1C277C700();
    uint64_t v24 = v15;
    sub_1C26818D4();
    sub_1C2708DAC(&qword_1EA304DA0);
    uint64_t v16 = v22;
    sub_1C277C760();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v16);
  }
  else
  {
    char v25 = 0;
    sub_1C27027E4();
    sub_1C277C700();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

unint64_t sub_1C2702790()
{
  unint64_t result = qword_1EA304D78;
  if (!qword_1EA304D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304D78);
  }
  return result;
}

unint64_t sub_1C27027E4()
{
  unint64_t result = qword_1EA304D88;
  if (!qword_1EA304D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304D88);
  }
  return result;
}

unint64_t sub_1C2702838()
{
  unint64_t result = qword_1EA304D98;
  if (!qword_1EA304D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304D98);
  }
  return result;
}

void *PluginIdentifierSet.init(from:)(void *a1)
{
  return sub_1C2706730(a1);
}

uint64_t sub_1C27028A4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if (v2) {
    BOOL v4 = v3 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (v4) {
    return (v2 | v3) == 0;
  }
  else {
    return sub_1C267154C(v2, v3);
  }
}

void *sub_1C27028D0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t result = sub_1C2706730(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1C27028FC(void *a1)
{
  return PluginIdentifierSet.encode(to:)(a1, *v1);
}

uint64_t sub_1C2702918()
{
  if (*v0) {
    return sub_1C277BBD0();
  }
  else {
    return 7105633;
  }
}

BOOL static GenerationPhase.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t GenerationPhase.hash(into:)()
{
  return sub_1C277C8D0();
}

uint64_t sub_1C27029A0()
{
  if (*v0) {
    return 0x6D65744964656566;
  }
  else {
    return 0x656C626172616873;
  }
}

uint64_t sub_1C27029EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C27087E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C2702A14(uint64_t a1)
{
  unint64_t v2 = sub_1C2706D08();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2702A50(uint64_t a1)
{
  unint64_t v2 = sub_1C2706D08();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C2702A8C(uint64_t a1)
{
  unint64_t v2 = sub_1C2706C60();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2702AC8(uint64_t a1)
{
  unint64_t v2 = sub_1C2706C60();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C2702B04(uint64_t a1)
{
  unint64_t v2 = sub_1C2706CB4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2702B40(uint64_t a1)
{
  unint64_t v2 = sub_1C2706CB4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t GenerationPhase.encode(to:)(void *a1)
{
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDE0];
  sub_1C2708D44(0, &qword_1EA304DA8, (uint64_t (*)(void))sub_1C2706C60, (uint64_t)&type metadata for GenerationPhase.FeedItemsCodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v23 = (char *)&v19 - v5;
  sub_1C2708D44(0, &qword_1EA304DB8, (uint64_t (*)(void))sub_1C2706CB4, (uint64_t)&type metadata for GenerationPhase.SharableModelsCodingKeys, v3);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v20 = (char *)&v19 - v7;
  sub_1C2708D44(0, &qword_1EA304DC8, (uint64_t (*)(void))sub_1C2706D08, (uint64_t)&type metadata for GenerationPhase.CodingKeys, v3);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v19 - v11;
  char v13 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2706D08();
  sub_1C277C9B0();
  char v14 = (uint64_t (**)(char *, uint64_t))(v10 + 8);
  if (v13)
  {
    char v27 = 1;
    sub_1C2706C60();
    uint64_t v15 = v23;
    sub_1C277C700();
    uint64_t v17 = v24;
    uint64_t v16 = v25;
  }
  else
  {
    char v26 = 0;
    sub_1C2706CB4();
    uint64_t v15 = v20;
    sub_1C277C700();
    uint64_t v17 = v21;
    uint64_t v16 = v22;
  }
  (*(void (**)(char *, uint64_t))(v17 + 8))(v15, v16);
  return (*v14)(v12, v9);
}

uint64_t GenerationPhase.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDC0];
  sub_1C2708D44(0, &qword_1EA304DD8, (uint64_t (*)(void))sub_1C2706C60, (uint64_t)&type metadata for GenerationPhase.FeedItemsCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v30 = v4;
  uint64_t v33 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v32 = (char *)&v28 - v5;
  sub_1C2708D44(0, &qword_1EA304DE0, (uint64_t (*)(void))sub_1C2706CB4, (uint64_t)&type metadata for GenerationPhase.SharableModelsCodingKeys, v3);
  uint64_t v7 = v6;
  uint64_t v29 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v28 - v8;
  sub_1C2708D44(0, &qword_1EA304DE8, (uint64_t (*)(void))sub_1C2706D08, (uint64_t)&type metadata for GenerationPhase.CodingKeys, v3);
  uint64_t v11 = v10;
  uint64_t v31 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  char v13 = (char *)&v28 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2706D08();
  char v14 = v35;
  sub_1C277C9A0();
  if (v14) {
    goto LABEL_6;
  }
  uint64_t v28 = v7;
  uint64_t v15 = v32;
  uint64_t v16 = v33;
  uint64_t v17 = v34;
  id v35 = a1;
  uint64_t v18 = v13;
  uint64_t v19 = sub_1C277C6E0();
  if (*(void *)(v19 + 16) != 1)
  {
    uint64_t v21 = sub_1C277C360();
    swift_allocError();
    uint64_t v22 = v11;
    uint64_t v24 = v23;
    sub_1C2706D5C();
    *uint64_t v24 = &type metadata for GenerationPhase;
    sub_1C277C670();
    sub_1C277C340();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v24, *MEMORY[0x1E4FBBA70], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v18, v22);
    a1 = v35;
LABEL_6:
    uint64_t v25 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v25);
  }
  int v36 = *(unsigned __int8 *)(v19 + 32);
  if (v36)
  {
    char v38 = 1;
    sub_1C2706C60();
    sub_1C277C660();
    uint64_t v20 = v31;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v15, v30);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v13, v11);
  }
  else
  {
    char v37 = 0;
    sub_1C2706CB4();
    sub_1C277C660();
    uint64_t v27 = v31;
    (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v11);
  }
  *uint64_t v17 = v36;
  uint64_t v25 = (uint64_t)v35;
  return __swift_destroy_boxed_opaque_existential_0(v25);
}

void sub_1C2703378(void *a1@<X8>)
{
  *a1 = &unk_1F1DC54E0;
}

uint64_t sub_1C2703388@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return GenerationPhase.init(from:)(a1, a2);
}

uint64_t sub_1C27033A0(void *a1)
{
  return GenerationPhase.encode(to:)(a1);
}

uint64_t BackgroundGenerationWorkDescription.pluginIdentifierSetToRun.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t BackgroundGenerationWorkDescription.pluginIdentifierSetToRun.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*BackgroundGenerationWorkDescription.pluginIdentifierSetToRun.modify())()
{
  return nullsub_1;
}

uint64_t BackgroundGenerationWorkDescription.generationPhases.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t BackgroundGenerationWorkDescription.generationPhases.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*BackgroundGenerationWorkDescription.generationPhases.modify())()
{
  return nullsub_1;
}

uint64_t BackgroundGenerationWorkDescription.commitUrgentTransaction.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t BackgroundGenerationWorkDescription.commitUrgentTransaction.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t (*BackgroundGenerationWorkDescription.commitUrgentTransaction.modify())()
{
  return nullsub_1;
}

unint64_t sub_1C2703490(char a1)
{
  if (!a1) {
    return 0xD000000000000018;
  }
  if (a1 == 1) {
    return 0xD000000000000010;
  }
  return 0xD000000000000017;
}

unint64_t sub_1C27034EC()
{
  return sub_1C2703490(*v0);
}

uint64_t sub_1C27034F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C2708904(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C270351C(uint64_t a1)
{
  unint64_t v2 = sub_1C2706E0C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2703558(uint64_t a1)
{
  unint64_t v2 = sub_1C2706E0C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t BackgroundGenerationWorkDescription.encode(to:)(void *a1)
{
  sub_1C2708D44(0, &qword_1EA304DF8, (uint64_t (*)(void))sub_1C2706E0C, (uint64_t)&type metadata for BackgroundGenerationWorkDescription.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  uint64_t v8 = *v1;
  uint64_t v12 = v1[1];
  v11[1] = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2706E0C();
  sub_1C277C9B0();
  uint64_t v15 = v8;
  char v14 = 0;
  sub_1C2706E60();
  uint64_t v9 = v13;
  sub_1C277C760();
  if (!v9)
  {
    uint64_t v15 = v12;
    char v14 = 1;
    sub_1C2708D44(0, &qword_1EA304E10, (uint64_t (*)(void))sub_1C269AEBC, (uint64_t)&type metadata for GenerationPhase, MEMORY[0x1E4FBB510]);
    sub_1C2706F5C(&qword_1EA304E18, (void (*)(void))sub_1C2706EB4);
    sub_1C277C760();
    LOBYTE(v15) = 2;
    sub_1C277C730();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t BackgroundGenerationWorkDescription.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C2708D44(0, &qword_1EA304E28, (uint64_t (*)(void))sub_1C2706E0C, (uint64_t)&type metadata for BackgroundGenerationWorkDescription.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v19 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2706E0C();
  sub_1C277C9A0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v9 = v6;
  char v20 = 0;
  sub_1C2706F08();
  uint64_t v10 = v19;
  sub_1C277C6D0();
  uint64_t v11 = v21;
  sub_1C2708D44(0, &qword_1EA304E10, (uint64_t (*)(void))sub_1C269AEBC, (uint64_t)&type metadata for GenerationPhase, MEMORY[0x1E4FBB510]);
  char v20 = 1;
  sub_1C2706F5C(&qword_1EA304E38, (void (*)(void))sub_1C2707000);
  swift_bridgeObjectRetain();
  sub_1C277C6D0();
  uint64_t v12 = v21;
  LOBYTE(v21) = 2;
  uint64_t v18 = v12;
  swift_bridgeObjectRetain();
  char v13 = sub_1C277C6A0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v10);
  char v14 = v13 & 1;
  uint64_t v15 = v18;
  *(void *)a2 = v11;
  *(void *)(a2 + 8) = v15;
  *(unsigned char *)(a2 + 16) = v14;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2703B4C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BackgroundGenerationWorkDescription.init(from:)(a1, a2);
}

uint64_t sub_1C2703B64(void *a1)
{
  return BackgroundGenerationWorkDescription.encode(to:)(a1);
}

uint64_t GenerationWorkRequest.environment.getter()
{
  return *v0;
}

uint64_t GenerationWorkRequest.environment.setter(uint64_t result)
{
  unsigned char *v1 = result & 1;
  return result;
}

uint64_t (*GenerationWorkRequest.environment.modify())()
{
  return nullsub_1;
}

uint64_t GenerationWorkRequest.pluginIdentifierSetToRun.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t GenerationWorkRequest.pluginIdentifierSetToRun.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*GenerationWorkRequest.pluginIdentifierSetToRun.modify())()
{
  return nullsub_1;
}

uint64_t GenerationWorkRequest.generationPhases.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t GenerationWorkRequest.generationPhases.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*GenerationWorkRequest.generationPhases.modify())()
{
  return nullsub_1;
}

uint64_t GenerationWorkRequest.commitUrgentTransaction.getter()
{
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t GenerationWorkRequest.commitUrgentTransaction.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 24) = result;
  return result;
}

uint64_t (*GenerationWorkRequest.commitUrgentTransaction.modify())()
{
  return nullsub_1;
}

uint64_t sub_1C2703C88(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  swift_retain();
  uint64_t result = swift_release();
  *(void *)(a2 + 32) = sub_1C2708A7C;
  *(void *)(a2 + 40) = v5;
  return result;
}

uint64_t (*GenerationWorkRequest.makeGenerationWorkBlock.modify())()
{
  return nullsub_1;
}

uint64_t sub_1C2703D18(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  swift_retain();
  uint64_t result = swift_release();
  *(void *)(a2 + 48) = sub_1C2708E98;
  *(void *)(a2 + 56) = v5;
  return result;
}

uint64_t GenerationWorkRequest.completionBlock.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_retain();
  return v1;
}

uint64_t (*GenerationWorkRequest.completionBlock.modify())()
{
  return nullsub_1;
}

uint64_t sub_1C2703DD8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  swift_retain();
  uint64_t result = swift_release();
  *(void *)(a2 + 64) = sub_1C26CBBF0;
  *(void *)(a2 + 72) = v5;
  return result;
}

uint64_t GenerationWorkRequest.notStartedCancellationBlock.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_retain();
  return v1;
}

uint64_t (*GenerationWorkRequest.notStartedCancellationBlock.modify())()
{
  return nullsub_1;
}

double sub_1C2703E98@<D0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  long long v5 = a1[3];
  long long v83 = a1[2];
  long long v84 = v5;
  long long v85 = a1[4];
  long long v6 = a1[1];
  long long v81 = *a1;
  long long v82 = v6;
  long long v7 = v2[1];
  long long v8 = v2[3];
  long long v78 = v2[2];
  long long v79 = v8;
  long long v9 = v2[3];
  long long v80 = v2[4];
  long long v10 = v2[1];
  long long v76 = *v2;
  long long v77 = v10;
  long long v73 = v78;
  long long v74 = v9;
  long long v75 = v2[4];
  long long v71 = v76;
  long long v72 = v7;
  uint64_t v11 = (_OWORD *)swift_allocObject();
  long long v12 = v2[3];
  v11[3] = v2[2];
  v11[4] = v12;
  long long v13 = v2[1];
  v11[1] = *v2;
  _DWORD v11[2] = v13;
  long long v14 = a1[2];
  long long v15 = a1[3];
  long long v16 = *a1;
  v11[7] = a1[1];
  v11[8] = v14;
  long long v17 = a1[4];
  v11[9] = v15;
  v11[10] = v17;
  v11[5] = v2[4];
  void v11[6] = v16;
  *(void *)&long long v74 = sub_1C2708B7C;
  *((void *)&v74 + 1) = v11;
  sub_1C2708BB4((uint64_t)&v76);
  sub_1C2708BB4((uint64_t)&v76);
  sub_1C2708BB4((uint64_t)&v81);
  swift_release();
  uint64_t v18 = (_OWORD *)swift_allocObject();
  long long v19 = v79;
  v18[3] = v78;
  v18[4] = v19;
  long long v20 = v77;
  v18[1] = v76;
  _OWORD v18[2] = v20;
  long long v21 = v83;
  long long v22 = v84;
  long long v23 = v81;
  id v18[7] = v82;
  v18[8] = v21;
  long long v24 = v85;
  v18[9] = v22;
  v18[10] = v24;
  v18[5] = v80;
  v18[6] = v23;
  *(void *)&long long v75 = sub_1C2708CA4;
  *((void *)&v75 + 1) = v18;
  sub_1C2708BB4((uint64_t)&v76);
  sub_1C2708BB4((uint64_t)&v81);
  swift_release();
  uint64_t v25 = 0;
  uint64_t v26 = *((void *)&v76 + 1);
  uint64_t v27 = *((void *)&v81 + 1);
  if (*((void *)&v76 + 1) && *((void *)&v81 + 1))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_1C2701E20(v27, v26);
  }
  swift_bridgeObjectRelease();
  *((void *)&v71 + 1) = v25;
  if (qword_1EBB85EA8 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_1C277B130();
  __swift_project_value_buffer(v28, (uint64_t)qword_1EBB85ED8);
  sub_1C2708BB4((uint64_t)&v76);
  sub_1C2708BB4((uint64_t)&v81);
  sub_1C2708BB4((uint64_t)&v76);
  sub_1C2708BB4((uint64_t)&v81);
  uint64_t v29 = sub_1C277B100();
  os_log_type_t v30 = sub_1C277BD40();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    v70[0] = v32;
    *(_DWORD *)uint64_t v31 = 136446978;
    sub_1C263FDFC(0xD000000000000015, 0x80000001C27838B0, v70);
    sub_1C277C0D0();
    *(_WORD *)(v31 + 12) = 2082;
    if (v26)
    {
      swift_bridgeObjectRetain();
      uint64_t v33 = sub_1C277BBD0();
      unint64_t v35 = v34;
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v35 = 0xE300000000000000;
      uint64_t v33 = 7105633;
    }
    sub_1C263FDFC(v33, v35, v70);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    sub_1C2708CDC((uint64_t)&v76);
    sub_1C2708CDC((uint64_t)&v76);
    *(_WORD *)(v31 + 22) = 2082;
    if (v27)
    {
      swift_bridgeObjectRetain();
      uint64_t v36 = sub_1C277BBD0();
      unint64_t v38 = v37;
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v38 = 0xE300000000000000;
      uint64_t v36 = 7105633;
    }
    sub_1C263FDFC(v36, v38, v70);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    sub_1C2708CDC((uint64_t)&v81);
    sub_1C2708CDC((uint64_t)&v81);
    *(_WORD *)(v31 + 32) = 2082;
    swift_beginAccess();
    if (*((void *)&v71 + 1))
    {
      swift_bridgeObjectRetain();
      uint64_t v39 = sub_1C277BBD0();
      unint64_t v41 = v40;
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v41 = 0xE300000000000000;
      uint64_t v39 = 7105633;
    }
    uint64_t v69 = sub_1C263FDFC(v39, v41, v70);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v29, v30, "[%{public}s] Coalesced pluginIdentifierSetToRun %{public}s and %{public}s into %{public}s", (uint8_t *)v31, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v32, -1, -1);
    MEMORY[0x1C875D230](v31, -1, -1);
  }
  else
  {
    sub_1C2708CDC((uint64_t)&v76);
    sub_1C2708CDC((uint64_t)&v76);
    sub_1C2708CDC((uint64_t)&v81);
    sub_1C2708CDC((uint64_t)&v81);
  }
  char v42 = BYTE8(v77) | BYTE8(v82);
  swift_beginAccess();
  BYTE8(v72) = v42 & 1;
  sub_1C2708BB4((uint64_t)&v76);
  sub_1C2708BB4((uint64_t)&v81);
  unint64_t v43 = sub_1C277B100();
  os_log_type_t v44 = sub_1C277BD40();
  if (os_log_type_enabled(v43, v44))
  {
    uint64_t v45 = swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    uint64_t v69 = v46;
    *(_DWORD *)uint64_t v45 = 136446978;
    sub_1C263FDFC(0xD000000000000015, 0x80000001C27838B0, &v69);
    sub_1C277C0D0();
    *(_WORD *)(v45 + 12) = 1026;
    sub_1C277C0D0();
    sub_1C2708CDC((uint64_t)&v76);
    *(_WORD *)(v45 + 18) = 1026;
    sub_1C277C0D0();
    sub_1C2708CDC((uint64_t)&v81);
    *(_WORD *)(v45 + 24) = 1026;
    sub_1C277C0D0();
    _os_log_impl(&dword_1C2601000, v43, v44, "[%{public}s] Coalesced commitUrgentTransaction %{BOOL,public}d and %{BOOL,public}d into %{BOOL,public}d", (uint8_t *)v45, 0x1Eu);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v46, -1, -1);
    MEMORY[0x1C875D230](v45, -1, -1);
  }
  else
  {
    sub_1C2708CDC((uint64_t)&v76);
    sub_1C2708CDC((uint64_t)&v81);
  }

  uint64_t v47 = v77;
  swift_bridgeObjectRetain();
  uint64_t v48 = swift_bridgeObjectRetain();
  *(void *)&long long v72 = sub_1C2701FA0(v48, v47);
  swift_bridgeObjectRelease();
  sub_1C2708BB4((uint64_t)&v76);
  sub_1C2708BB4((uint64_t)&v81);
  sub_1C2708BB4((uint64_t)&v76);
  sub_1C2708BB4((uint64_t)&v81);
  uint64_t v49 = sub_1C277B100();
  os_log_type_t v50 = sub_1C277BD40();
  if (os_log_type_enabled(v49, v50))
  {
    uint64_t v51 = swift_slowAlloc();
    uint64_t v68 = swift_slowAlloc();
    uint64_t v69 = v68;
    *(_DWORD *)uint64_t v51 = 136446978;
    sub_1C263FDFC(0xD000000000000015, 0x80000001C27838B0, &v69);
    sub_1C277C0D0();
    *(_WORD *)(v51 + 12) = 2082;
    sub_1C269AEBC();
    swift_bridgeObjectRetain();
    uint64_t v52 = a2;
    uint64_t v53 = sub_1C277BBD0();
    unint64_t v55 = v54;
    swift_bridgeObjectRelease();
    uint64_t v56 = v53;
    a2 = v52;
    sub_1C263FDFC(v56, v55, &v69);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    sub_1C2708CDC((uint64_t)&v76);
    sub_1C2708CDC((uint64_t)&v76);
    *(_WORD *)(v51 + 22) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v57 = sub_1C277BBD0();
    unint64_t v59 = v58;
    swift_bridgeObjectRelease();
    sub_1C263FDFC(v57, v59, &v69);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    sub_1C2708CDC((uint64_t)&v81);
    sub_1C2708CDC((uint64_t)&v81);
    *(_WORD *)(v51 + 32) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v60 = sub_1C277BBD0();
    unint64_t v62 = v61;
    swift_bridgeObjectRelease();
    sub_1C263FDFC(v60, v62, &v69);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v49, v50, "[%{public}s] Coalesced generationPhases %{public}s and %{public}s into %{public}s", (uint8_t *)v51, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v68, -1, -1);
    MEMORY[0x1C875D230](v51, -1, -1);
  }
  else
  {
    sub_1C2708CDC((uint64_t)&v76);
    sub_1C2708CDC((uint64_t)&v76);
    sub_1C2708CDC((uint64_t)&v81);
    sub_1C2708CDC((uint64_t)&v81);
  }

  uint64_t v63 = *((void *)&v71 + 1);
  uint64_t v64 = v72;
  char v65 = BYTE8(v72);
  *(unsigned char *)a2 = v71;
  *(void *)(a2 + 8) = v63;
  *(void *)(a2 + 16) = v64;
  *(unsigned char *)(a2 + 24) = v65;
  long long v66 = v74;
  *(_OWORD *)(a2 + 32) = v73;
  *(_OWORD *)(a2 + 48) = v66;
  double result = *(double *)&v75;
  *(_OWORD *)(a2 + 64) = v75;
  return result;
}

BOOL static GenerationQueue.EnqueueResult.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if (v2 == 2) {
    return v3 == 2;
  }
  if (v2 == 3) {
    return v3 == 3;
  }
  if ((v3 & 0xFE) == 2) {
    return 0;
  }
  return ((v3 ^ v2) & 1) == 0;
}

BOOL sub_1C27048B8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if (v2 == 2) {
    return v3 == 2;
  }
  if (v2 == 3) {
    return v3 == 3;
  }
  if ((v3 & 0xFE) == 2) {
    return 0;
  }
  return ((v3 ^ v2) & 1) == 0;
}

void sub_1C2704910(void *a1@<X8>)
{
  uint64_t v3 = v1[16];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v3 + 16));
  uint64_t v4 = (void *)v1[4];
  unint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  uint64_t v7 = v1[7];
  uint64_t v8 = v1[8];
  uint64_t v9 = v1[9];
  uint64_t v10 = v1[10];
  uint64_t v11 = v1[11];
  uint64_t v12 = v1[12];
  uint64_t v13 = v1[13];
  uint64_t v14 = v1[14];
  uint64_t v15 = v1[15];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v12;
  a1[9] = v13;
  a1[10] = v14;
  a1[11] = v15;
  long long v16 = *(os_unfair_lock_s **)(v3 + 16);
  sub_1C2707054(v4, v5, v6, v7, v8);

  os_unfair_lock_unlock(v16);
}

uint64_t GenerationQueue.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  GenerationQueue.init()();
  return v0;
}

uint64_t GenerationQueue.init()()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28F08]), sel_init);
  int v2 = (void *)sub_1C277B820();
  objc_msgSend(v1, sel_setName_, v2);

  objc_msgSend(v1, sel_setMaxConcurrentOperationCount_, 1);
  *(void *)(v0 + 16) = v1;
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28F08]), sel_init);
  uint64_t v4 = (void *)sub_1C277B820();
  objc_msgSend(v3, sel_setName_, v4);

  objc_msgSend(v3, sel_setMaxConcurrentOperationCount_, 1);
  *(void *)(v0 + 24) = v3;
  *(_OWORD *)(v0 + 32) = xmmword_1C27835C0;
  type metadata accessor for UnfairLock();
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  uint64_t v5 = swift_allocObject();
  uint64_t v6 = (_DWORD *)swift_slowAlloc();
  *(void *)(v5 + 16) = v6;
  *uint64_t v6 = 0;
  *(void *)(v0 + 128) = v5;
  return v0;
}

uint64_t GenerationQueue.deinit()
{
  uint64_t v1 = *(void *)(v0 + 128);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  sub_1C270621C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));

  sub_1C2650914(*(void **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
  swift_release();
  return v0;
}

uint64_t GenerationQueue.__deallocating_deinit()
{
  uint64_t v1 = *(void *)(v0 + 128);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  sub_1C270621C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));

  sub_1C2650914(*(void **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
  swift_release();

  return swift_deallocClassInstance();
}

void sub_1C2704C4C(void *a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v4 = v2[16];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v4 + 16));
  uint64_t v5 = (void *)v2[4];
  unint64_t v6 = v2[5];
  uint64_t v8 = v2 + 6;
  uint64_t v7 = v2[6];
  uint64_t v9 = v2[7];
  uint64_t v10 = v2[8];
  uint64_t v11 = (uint64_t (*)(void))v2[10];
  uint64_t v158 = v2[9];
  uint64_t v12 = v2[12];
  uint64_t v164 = v2[11];
  uint64_t v14 = v2[13];
  uint64_t v13 = v2[14];
  uint64_t v15 = v2[15];
  if (!(v6 >> 62))
  {
    unint64_t v141 = v6;
    uint64_t v155 = v7;
    uint64_t v157 = v9;
    v151 = v5;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v30 = swift_getObjectType();
    uint64_t v31 = qword_1EBB85EA8;
    if (v151 == a1)
    {
      id v81 = a1;
      if (v31 != -1) {
        swift_once();
      }
      uint64_t v82 = sub_1C277B130();
      __swift_project_value_buffer(v82, (uint64_t)qword_1EBB85ED8);
      id v162 = v81;
      long long v83 = sub_1C277B100();
      os_log_type_t v84 = sub_1C277BD40();
      unint64_t v85 = v141;
      if (os_log_type_enabled(v83, v84))
      {
        uint64_t v86 = swift_slowAlloc();
        uint64_t v146 = swift_slowAlloc();
        v167[0] = v146;
        *(_DWORD *)uint64_t v86 = 136446466;
        uint64_t v87 = sub_1C277C9E0();
        log = v83;
        uint64_t v175 = sub_1C263FDFC(v87, v88, v167);
        sub_1C277C0D0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v86 + 12) = 2082;
        char v89 = (*(uint64_t (**)(uint64_t))(a2 + 8))(ObjectType);
        BOOL v90 = (v89 & 1) == 0;
        if (v89) {
          uint64_t v91 = 0x65746E4972657375;
        }
        else {
          uint64_t v91 = 0x756F72676B636162;
        }
        if (v90) {
          unint64_t v92 = 0xEA0000000000646ELL;
        }
        else {
          unint64_t v92 = 0xEF65766974636172;
        }
        uint64_t v175 = sub_1C263FDFC(v91, v92, v167);
        sub_1C277C0D0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2601000, log, v84, "[%{public}s] work with environment %{public}s completed, updating state from foregroundGeneration to idle", (uint8_t *)v86, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C875D230](v146, -1, -1);
        uint64_t v93 = v86;
        unint64_t v85 = v141;
        MEMORY[0x1C875D230](v93, -1, -1);
      }
      else
      {
      }
      uint64_t v105 = (void *)v3[4];
      unint64_t v106 = v3[5];
      uint64_t v107 = v3[6];
      uint64_t v108 = v3[7];
      uint64_t v109 = v3[8];
      *((_OWORD *)v3 + 2) = xmmword_1C27835C0;
      *uint64_t v8 = 0u;
      v8[1] = 0u;
      _OWORD v8[2] = 0u;
      v8[3] = 0u;
      v8[4] = 0u;
      sub_1C2650914(v105, v106, v107, v108, v109);
      uint64_t v46 = v151;
      uint64_t v48 = v155;
      unint64_t v47 = v85;
      uint64_t v49 = v157;
      uint64_t v50 = v10;
    }
    else
    {
      uint64_t v132 = v30;
      v151;
      if (v31 != -1) {
        swift_once();
      }
      uint64_t v32 = sub_1C277B130();
      __swift_project_value_buffer(v32, (uint64_t)qword_1EBB85ED8);
      id v160 = a1;
      sub_1C2707054(v151, v6, v155, v157, v10);
      id v135 = v160;
      uint64_t v139 = v10;
      sub_1C2707054(v151, v6, v155, v157, v10);
      uint64_t v33 = sub_1C277B100();
      os_log_type_t v34 = sub_1C277BD40();
      v161 = v33;
      if (!os_log_type_enabled(v33, v34))
      {
        sub_1C2650914(v151, v6, v155, v157, v10);

        sub_1C2650914(v151, v6, v155, v157, v10);
        sub_1C2650914(v151, v6, v155, v157, v10);

        goto LABEL_96;
      }
      uint64_t v35 = swift_slowAlloc();
      uint64_t v133 = swift_slowAlloc();
      v167[0] = v133;
      *(_DWORD *)uint64_t v35 = 136446722;
      os_log_type_t type = v34;
      uint64_t v36 = sub_1C277C9E0();
      uint64_t v175 = sub_1C263FDFC(v36, v37, v167);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2082;
      char v38 = (*(uint64_t (**)(uint64_t))(a2 + 8))(ObjectType);
      BOOL v39 = (v38 & 1) == 0;
      if (v38) {
        uint64_t v40 = 0x65746E4972657375;
      }
      else {
        uint64_t v40 = 0x756F72676B636162;
      }
      if (v39) {
        unint64_t v41 = 0xEA0000000000646ELL;
      }
      else {
        unint64_t v41 = 0xEF65766974636172;
      }
      uint64_t v175 = sub_1C263FDFC(v40, v41, v167);
      sub_1C277C0D0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 22) = 2082;
      char v42 = (*(uint64_t (**)(uint64_t, unint64_t))(v6 + 8))(v132, v6);
      BOOL v43 = (v42 & 1) == 0;
      if (v42) {
        uint64_t v44 = 0x65746E4972657375;
      }
      else {
        uint64_t v44 = 0x756F72676B636162;
      }
      if (v43) {
        unint64_t v45 = 0xEA0000000000646ELL;
      }
      else {
        unint64_t v45 = 0xEF65766974636172;
      }
      uint64_t v175 = sub_1C263FDFC(v44, v45, v167);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      sub_1C2650914(v151, v6, v155, v157, v139);
      sub_1C2650914(v151, v6, v155, v157, v139);
      _os_log_impl(&dword_1C2601000, v161, type, "[%{public}s] work with environment %{public}s completed, but active work (environment: %{public}s) is already different, keeping state as foregroundGeneration", (uint8_t *)v35, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v133, -1, -1);
      MEMORY[0x1C875D230](v35, -1, -1);

      uint64_t v46 = v151;
      unint64_t v47 = v6;
      uint64_t v48 = v155;
      uint64_t v49 = v157;
      uint64_t v50 = v139;
    }
    sub_1C2650914(v46, v47, v48, v49, v50);
    goto LABEL_96;
  }
  if (v6 >> 62 == 1)
  {
    uint64_t v147 = v14;
    long long v16 = v5;
    uint64_t v154 = v7;
    uint64_t v156 = v9;
    if (!v10)
    {
      uint64_t v68 = swift_getObjectType();
      if (v16 == a1)
      {
        id v110 = a1;
        sub_1C270710C(v154, v156, 0);
        if (qword_1EBB85EA8 != -1) {
          swift_once();
        }
        uint64_t v111 = sub_1C277B130();
        __swift_project_value_buffer(v111, (uint64_t)qword_1EBB85ED8);
        id v18 = v110;
        uint64_t v112 = sub_1C277B100();
        os_log_type_t v113 = sub_1C277BD40();
        if (os_log_type_enabled(v112, v113))
        {
          uint64_t v114 = swift_slowAlloc();
          uint64_t v166 = swift_slowAlloc();
          v167[0] = v166;
          *(_DWORD *)uint64_t v114 = 136446466;
          os_log_type_t v163 = v113;
          uint64_t v115 = sub_1C277C9E0();
          uint64_t v175 = sub_1C263FDFC(v115, v116, v167);
          sub_1C277C0D0();
          swift_bridgeObjectRelease();
          *(_WORD *)(v114 + 12) = 2082;
          char v117 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(v68, a2);
          BOOL v118 = (v117 & 1) == 0;
          if (v117) {
            uint64_t v119 = 0x65746E4972657375;
          }
          else {
            uint64_t v119 = 0x756F72676B636162;
          }
          if (v118) {
            unint64_t v120 = 0xEA0000000000646ELL;
          }
          else {
            unint64_t v120 = 0xEF65766974636172;
          }
          uint64_t v175 = sub_1C263FDFC(v119, v120, v167);
          sub_1C277C0D0();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C2601000, v112, v163, "[%{public}s] work with environment %{public}s completed, no enqueued background generation, updating state to idle", (uint8_t *)v114, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1C875D230](v166, -1, -1);
          MEMORY[0x1C875D230](v114, -1, -1);
        }
        else
        {
        }
        uint64_t v126 = (void *)v3[4];
        unint64_t v127 = v3[5];
        uint64_t v128 = v3[6];
        uint64_t v129 = v3[7];
        uint64_t v130 = v3[8];
        *((_OWORD *)v3 + 2) = xmmword_1C27835C0;
        *uint64_t v8 = 0u;
        v8[1] = 0u;
        _OWORD v8[2] = 0u;
        v8[3] = 0u;
        v8[4] = 0u;
        sub_1C2650914(v126, v127, v128, v129, v130);
        goto LABEL_95;
      }
      id v69 = v16;
      sub_1C270710C(v154, v156, 0);

      if (qword_1EBB85EA8 != -1) {
        swift_once();
      }
      uint64_t v70 = sub_1C277B130();
      __swift_project_value_buffer(v70, (uint64_t)qword_1EBB85ED8);
      id v18 = a1;
      long long v19 = sub_1C277B100();
      os_log_type_t v71 = sub_1C277BD40();
      if (os_log_type_enabled(v19, v71))
      {
        uint64_t v72 = swift_slowAlloc();
        uint64_t v145 = v4;
        uint64_t v73 = swift_slowAlloc();
        v167[0] = v73;
        *(_DWORD *)uint64_t v72 = 136446466;
        uint64_t v74 = sub_1C277C9E0();
        uint64_t v175 = sub_1C263FDFC(v74, v75, v167);
        sub_1C277C0D0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v72 + 12) = 2082;
        char v76 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(v68, a2);
        BOOL v77 = (v76 & 1) == 0;
        if (v76) {
          uint64_t v78 = 0x65746E4972657375;
        }
        else {
          uint64_t v78 = 0x756F72676B636162;
        }
        if (v77) {
          unint64_t v79 = 0xEA0000000000646ELL;
        }
        else {
          unint64_t v79 = 0xEF65766974636172;
        }
        uint64_t v175 = sub_1C263FDFC(v78, v79, v167);
        sub_1C277C0D0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2601000, v19, v71, "[%{public}s] work with environment %{public}s completed, no enqueued background generation, but active work is already different, keeping state as backgroundGeneration(_, nil)", (uint8_t *)v72, 0x16u);
        swift_arrayDestroy();
        uint64_t v80 = v73;
        uint64_t v4 = v145;
        MEMORY[0x1C875D230](v80, -1, -1);
        uint64_t v29 = v72;
        goto LABEL_55;
      }
LABEL_67:

LABEL_95:
      goto LABEL_96;
    }
    uint64_t v134 = v8;
    uint64_t v144 = v4;
    uint64_t v136 = swift_getObjectType();
    sub_1C2707054(v16, v6, v154, v156, v10);
    if (v16 != a1)
    {
      sub_1C265F0D0(v154, v156, v10);

      if (qword_1EBB85EA8 != -1) {
        swift_once();
      }
      uint64_t v17 = sub_1C277B130();
      __swift_project_value_buffer(v17, (uint64_t)qword_1EBB85ED8);
      id v18 = a1;
      long long v19 = sub_1C277B100();
      os_log_type_t v20 = sub_1C277BD40();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = swift_slowAlloc();
        uint64_t v22 = swift_slowAlloc();
        v167[0] = v22;
        *(_DWORD *)uint64_t v21 = 136446466;
        uint64_t v23 = sub_1C277C9E0();
        uint64_t v175 = sub_1C263FDFC(v23, v24, v167);
        sub_1C277C0D0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v21 + 12) = 2082;
        char v25 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(v136, a2);
        BOOL v26 = (v25 & 1) == 0;
        if (v25) {
          uint64_t v27 = 0x65746E4972657375;
        }
        else {
          uint64_t v27 = 0x756F72676B636162;
        }
        if (v26) {
          unint64_t v28 = 0xEA0000000000646ELL;
        }
        else {
          unint64_t v28 = 0xEF65766974636172;
        }
        uint64_t v175 = sub_1C263FDFC(v27, v28, v167);
        sub_1C277C0D0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2601000, v19, v20, "[%{public}s] work with environment %{public}s completed, had enqueued background generation request, but activeWork is already different, keeping state as backgroundGeneration(some)", (uint8_t *)v21, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C875D230](v22, -1, -1);
        uint64_t v29 = v21;
LABEL_55:
        MEMORY[0x1C875D230](v29, -1, -1);

        goto LABEL_96;
      }
      goto LABEL_67;
    }
    uint64_t v140 = v15;
    int64_t v143 = v11;
    sub_1C270710C(v154, v156, v10);
    if (qword_1EBB85EA8 != -1) {
      swift_once();
    }
    uint64_t v94 = sub_1C277B130();
    __swift_project_value_buffer(v94, (uint64_t)qword_1EBB85ED8);
    id v95 = a1;
    uint64_t v96 = sub_1C277B100();
    os_log_type_t v97 = sub_1C277BD40();
    if (os_log_type_enabled(v96, v97))
    {
      uint64_t v98 = swift_slowAlloc();
      uint64_t v152 = swift_slowAlloc();
      v167[0] = v152;
      *(_DWORD *)uint64_t v98 = 136446466;
      uint64_t v99 = sub_1C277C9E0();
      uint64_t v175 = sub_1C263FDFC(v99, v100, v167);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v98 + 12) = 2082;
      char v101 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(v136, a2);
      BOOL v102 = (v101 & 1) == 0;
      if (v101) {
        uint64_t v103 = 0x65746E4972657375;
      }
      else {
        uint64_t v103 = 0x756F72676B636162;
      }
      if (v102) {
        unint64_t v104 = 0xEA0000000000646ELL;
      }
      else {
        unint64_t v104 = 0xEF65766974636172;
      }
      uint64_t v175 = sub_1C263FDFC(v103, v104, v167);
      sub_1C277C0D0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v96, v97, "[%{public}s] work with environment %{public}s completed, has enqueued background generation request, updating state to backgroundGeneration(nil) and starting enqueued background generation request", (uint8_t *)v98, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v152, -1, -1);
      MEMORY[0x1C875D230](v98, -1, -1);
    }
    else
    {
    }
    LOBYTE(v167[0]) = v154 & 1;
    v167[1] = v156;
    v167[2] = v10;
    char v168 = v158 & 1;
    v169 = v143;
    uint64_t v170 = v164;
    uint64_t v171 = v12;
    uint64_t v172 = v147;
    uint64_t v173 = v13;
    uint64_t v174 = v140;
    os_log_t v121 = (void *)v143(v167);
    uint64_t v123 = v122;
    sub_1C2650248((uint64_t)v121, v122, v154 & 1);
    uint64_t v124 = v3[6];
    unint64_t v150 = v3[5];
    v153 = (void *)v3[4];
    uint64_t v148 = v3[7];
    uint64_t v142 = v3[8];
    v3[4] = v121;
    v3[5] = v123 | 0x4000000000000000;
    _OWORD *v134 = 0u;
    v134[1] = 0u;
    v134[2] = 0u;
    v134[3] = 0u;
    v134[4] = 0u;
    id v125 = v121;
    sub_1C2650914(v153, v150, v124, v148, v142);
    sub_1C260A534(v125, v123, v12, v147);

    sub_1C265F0D0(v154, v156, v10);
    sub_1C265F0D0(v154, v156, v10);
    uint64_t v4 = v144;
  }
  else
  {
    if (qword_1EBB85EA8 != -1) {
      swift_once();
    }
    uint64_t v51 = sub_1C277B130();
    __swift_project_value_buffer(v51, (uint64_t)qword_1EBB85ED8);
    id v52 = a1;
    uint64_t v53 = sub_1C277B100();
    os_log_type_t v54 = sub_1C277BD40();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = swift_slowAlloc();
      uint64_t v165 = swift_slowAlloc();
      v167[0] = v165;
      *(_DWORD *)uint64_t v55 = 136446466;
      uint64_t v56 = sub_1C277C9E0();
      uint64_t v175 = sub_1C263FDFC(v56, v57, v167);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v55 + 12) = 2082;
      uint64_t v58 = swift_getObjectType();
      char v59 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(v58, a2);
      BOOL v60 = (v59 & 1) == 0;
      if (v59) {
        uint64_t v61 = 0x65746E4972657375;
      }
      else {
        uint64_t v61 = 0x756F72676B636162;
      }
      if (v60) {
        unint64_t v62 = 0xEA0000000000646ELL;
      }
      else {
        unint64_t v62 = 0xEF65766974636172;
      }
      uint64_t v175 = sub_1C263FDFC(v61, v62, v167);
      sub_1C277C0D0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v53, v54, "[%{public}s] work with environment %{public}s completed, but state is already idle", (uint8_t *)v55, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v165, -1, -1);
      MEMORY[0x1C875D230](v55, -1, -1);
    }
    else
    {
    }
    uint64_t v63 = (void *)v3[4];
    unint64_t v64 = v3[5];
    uint64_t v65 = v3[6];
    uint64_t v66 = v3[7];
    uint64_t v67 = v3[8];
    *((_OWORD *)v3 + 2) = xmmword_1C27835C0;
    *uint64_t v8 = 0u;
    v8[1] = 0u;
    _OWORD v8[2] = 0u;
    v8[3] = 0u;
    v8[4] = 0u;
    sub_1C2650914(v63, v64, v65, v66, v67);
  }
LABEL_96:
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
}

__n128 sub_1C270621C()
{
  uint64_t v1 = v0;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(void *)(v0 + 128) + 16));
  if (qword_1EBB85EA8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C277B130();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBB85ED8);
  id v3 = sub_1C277B100();
  os_log_type_t v4 = sub_1C277BD40();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v30 = v6;
    *(_DWORD *)uint64_t v5 = 136446210;
    uint64_t v7 = sub_1C277C9E0();
    sub_1C263FDFC(v7, v8, &v30);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v3, v4, "[%{public}s] Cancelling all operations", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v6, -1, -1);
    MEMORY[0x1C875D230](v5, -1, -1);
  }

  objc_msgSend(*(id *)(v0 + 16), sel_cancelAllOperations);
  uint64_t v9 = *(void *)(v0 + 48);
  if (*(void *)(v0 + 40) >> 62 == 1)
  {
    uint64_t v11 = *(void *)(v0 + 56);
    uint64_t v10 = *(void *)(v0 + 64);
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v0 + 112);
    id v13 = *(id *)(v0 + 32);
    uint64_t v27 = v12;
    uint64_t v28 = v11;
    sub_1C270710C(v9, v11, v10);

    if (v10)
    {
      uint64_t v14 = sub_1C277B100();
      os_log_type_t v15 = sub_1C277BD40();
      if (os_log_type_enabled(v14, v15))
      {
        long long v16 = (uint8_t *)swift_slowAlloc();
        uint64_t v29 = swift_slowAlloc();
        uint64_t v30 = v29;
        *(_DWORD *)long long v16 = 136446210;
        uint64_t v17 = sub_1C277C9E0();
        sub_1C263FDFC(v17, v18, &v30);
        sub_1C277C0D0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2601000, v14, v15, "[%{public}s] Calling notStartedCancellationBlock of enqueued work requests", v16, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C875D230](v29, -1, -1);
        MEMORY[0x1C875D230](v16, -1, -1);
      }

      v27(v19, v20);
      sub_1C265F0D0(v9, v28, v10);
    }
  }
  uint64_t v21 = *(void **)(v1 + 32);
  unint64_t v22 = *(void *)(v1 + 40);
  uint64_t v23 = *(void *)(v1 + 48);
  uint64_t v24 = *(void *)(v1 + 56);
  uint64_t v25 = *(void *)(v1 + 64);
  *(_OWORD *)(v1 + 32) = xmmword_1C27835C0;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 64) = 0u;
  *(_OWORD *)(v1 + 80) = 0u;
  *(_OWORD *)(v1 + 96) = 0u;
  *(_OWORD *)(v1 + 112) = 0u;
  sub_1C2650914(v21, v22, v23, v24, v25);
  return result;
}

void sub_1C27065F4()
{
  uint64_t v1 = *(void *)(v0 + 128);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  sub_1C270621C();
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);

  os_unfair_lock_unlock(v2);
}

uint64_t sub_1C2706634(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7105633 && a2 == 0xE300000000000000;
  if (v2 || (sub_1C277C7E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEB00000000737265)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C277C7E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void *sub_1C2706730(void *a1)
{
  BOOL v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDC0];
  sub_1C2708D44(0, &qword_1EA304EF0, (uint64_t (*)(void))sub_1C2702790, (uint64_t)&type metadata for PluginIdentifierSet.IdentifiersCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v28 = v3;
  uint64_t v29 = v4;
  MEMORY[0x1F4188790](v3);
  uint64_t v32 = (char *)&v27 - v5;
  sub_1C2708D44(0, &qword_1EA304EF8, (uint64_t (*)(void))sub_1C27027E4, (uint64_t)&type metadata for PluginIdentifierSet.AllCodingKeys, v2);
  uint64_t v7 = v6;
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v27 - v8;
  sub_1C2708D44(0, &qword_1EA304F00, (uint64_t (*)(void))sub_1C2702838, (uint64_t)&type metadata for PluginIdentifierSet.CodingKeys, v2);
  uint64_t v11 = v10;
  uint64_t v30 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  id v13 = (char *)&v27 - v12;
  uint64_t v14 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2702838();
  uint64_t v15 = (uint64_t)v33;
  sub_1C277C9A0();
  if (v15) {
    goto LABEL_7;
  }
  uint64_t v16 = v7;
  uint64_t v17 = v31;
  unint64_t v18 = v32;
  uint64_t v33 = a1;
  uint64_t v19 = sub_1C277C6E0();
  if (*(void *)(v19 + 16) != 1)
  {
    uint64_t v23 = sub_1C277C360();
    swift_allocError();
    uint64_t v25 = v24;
    sub_1C2706D5C();
    *uint64_t v25 = &type metadata for PluginIdentifierSet;
    uint64_t v14 = v13;
    sub_1C277C670();
    sub_1C277C340();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v23 - 8) + 104))(v25, *MEMORY[0x1E4FBBA70], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v11);
    a1 = v33;
LABEL_7:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return v14;
  }
  if (*(unsigned char *)(v19 + 32))
  {
    char v36 = 1;
    sub_1C2702790();
    uint64_t v20 = v18;
    sub_1C277C660();
    sub_1C26818D4();
    sub_1C2708DAC(&qword_1EA304F08);
    uint64_t v21 = v28;
    sub_1C277C6D0();
    uint64_t v22 = v30;
    (*(void (**)(char *, uint64_t))(v29 + 8))(v20, v21);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v13, v11);
    uint64_t v14 = v34;
  }
  else
  {
    char v35 = 0;
    sub_1C27027E4();
    sub_1C277C660();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v9, v16);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v11);
    uint64_t v14 = 0;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
  return v14;
}

unint64_t sub_1C2706C60()
{
  unint64_t result = qword_1EA304DB0;
  if (!qword_1EA304DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304DB0);
  }
  return result;
}

unint64_t sub_1C2706CB4()
{
  unint64_t result = qword_1EA304DC0;
  if (!qword_1EA304DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304DC0);
  }
  return result;
}

unint64_t sub_1C2706D08()
{
  unint64_t result = qword_1EA304DD0;
  if (!qword_1EA304DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304DD0);
  }
  return result;
}

void sub_1C2706D5C()
{
  if (!qword_1EA304DF0)
  {
    sub_1C2706DCC();
    sub_1C277C350();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA304DF0);
    }
  }
}

unint64_t sub_1C2706DCC()
{
  unint64_t result = qword_1EA305730;
  if (!qword_1EA305730)
  {
    unint64_t result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA305730);
  }
  return result;
}

unint64_t sub_1C2706E0C()
{
  unint64_t result = qword_1EA304E00;
  if (!qword_1EA304E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304E00);
  }
  return result;
}

unint64_t sub_1C2706E60()
{
  unint64_t result = qword_1EA304E08;
  if (!qword_1EA304E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304E08);
  }
  return result;
}

unint64_t sub_1C2706EB4()
{
  unint64_t result = qword_1EA304E20;
  if (!qword_1EA304E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304E20);
  }
  return result;
}

unint64_t sub_1C2706F08()
{
  unint64_t result = qword_1EA304E30;
  if (!qword_1EA304E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304E30);
  }
  return result;
}

uint64_t sub_1C2706F5C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2708D44(255, &qword_1EA304E10, (uint64_t (*)(void))sub_1C269AEBC, (uint64_t)&type metadata for GenerationPhase, MEMORY[0x1E4FBB510]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C2707000()
{
  unint64_t result = qword_1EA304E40;
  if (!qword_1EA304E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304E40);
  }
  return result;
}

id sub_1C2707054(id result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a2 >> 62 == 1)
  {
    id v9 = result;
    return (id)sub_1C270710C(a3, a4, a5);
  }
  else if (!(a2 >> 62))
  {
    return result;
  }
  return result;
}

uint64_t sub_1C270710C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

unint64_t sub_1C2707180()
{
  unint64_t result = qword_1EBB82760;
  if (!qword_1EBB82760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB82760);
  }
  return result;
}

uint64_t sub_1C27071D4()
{
  return sub_1C2708E4C(&qword_1EA304E48, (void (*)(uint64_t))sub_1C270721C);
}

void sub_1C270721C()
{
  if (!qword_1EA304E50)
  {
    unint64_t v0 = sub_1C277BB20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA304E50);
    }
  }
}

unint64_t sub_1C2707278()
{
  unint64_t result = qword_1EA304E58;
  if (!qword_1EA304E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304E58);
  }
  return result;
}

uint64_t sub_1C27072CC@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t *a1@<X8>)@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  *a2 = sub_1C2708AB4;
  a2[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v5;

  return swift_retain();
}

uint64_t sub_1C270733C@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  *a2 = sub_1C262BB18;
  a2[1] = (uint64_t (*)())v5;

  return swift_retain();
}

uint64_t sub_1C27073AC@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 72);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  *a2 = sub_1C261AECC;
  a2[1] = (uint64_t (*)())v5;

  return swift_retain();
}

void *initializeBufferWithCopyOfBuffer for PluginIdentifierSet(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for PluginIdentifierSet(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for PluginIdentifierSet(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PluginIdentifierSet()
{
  return &type metadata for PluginIdentifierSet;
}

uint64_t dispatch thunk of GenerationWork.environment.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))() & 1;
}

uint64_t sub_1C2707508(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BackgroundGenerationWorkDescription(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for BackgroundGenerationWorkDescription(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for BackgroundGenerationWorkDescription(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BackgroundGenerationWorkDescription(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BackgroundGenerationWorkDescription()
{
  return &type metadata for BackgroundGenerationWorkDescription;
}

uint64_t assignWithCopy for GenerationWorkRequest(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for GenerationWorkRequest(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for GenerationWorkRequest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GenerationWorkRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for GenerationQueue()
{
  return self;
}

uint64_t method lookup function for GenerationQueue(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for GenerationQueue);
}

uint64_t dispatch thunk of GenerationQueue.state.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of GenerationQueue.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of GenerationQueue.cancelAllOperations()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t getEnumTagSinglePayload for GenerationQueue.EnqueueResult(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD)
  {
    unsigned int v2 = a2 + 3;
    if (a2 + 3 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 3;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C27079ACLL);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 >= 2) {
    unsigned int v8 = v7 - 1;
  }
  else {
    unsigned int v8 = 0;
  }
  if (v8 >= 3) {
    return v8 - 2;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for GenerationQueue.EnqueueResult(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFD) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v7 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1C2707A94);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

unsigned char *sub_1C2707ABC(unsigned char *result, int a2)
{
  if (a2) {
    *unint64_t result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerationQueue.EnqueueResult.DropReason()
{
  return &type metadata for GenerationQueue.EnqueueResult.DropReason;
}

void destroy for GenerationQueue.State(uint64_t a1)
{
}

void *initializeWithCopy for GenerationQueue.State(void *a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v13 = *(void *)(a2 + 72);
  uint64_t v14 = *(void *)(a2 + 80);
  uint64_t v15 = *(void *)(a2 + 88);
  sub_1C2707054(*(id *)a2, v4, v5, v6, v7);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  a1[10] = v14;
  a1[11] = v15;
  return a1;
}

uint64_t assignWithCopy for GenerationQueue.State(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v18 = *(void *)(a2 + 72);
  uint64_t v19 = *(void *)(a2 + 80);
  uint64_t v20 = *(void *)(a2 + 88);
  sub_1C2707054(*(id *)a2, v4, v5, v6, v7);
  uint64_t v12 = *(void **)a1;
  unint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v18;
  *(void *)(a1 + 80) = v19;
  *(void *)(a1 + 88) = v20;
  sub_1C2650914(v12, v13, v14, v15, v16);
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for GenerationQueue.State(uint64_t a1, _OWORD *a2)
{
  id v3 = *(void **)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  long long v8 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v8;
  long long v9 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v9;
  long long v10 = a2[5];
  *(_OWORD *)(a1 + 64) = a2[4];
  *(_OWORD *)(a1 + 80) = v10;
  sub_1C2650914(v3, v5, v4, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for GenerationQueue.State(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 96)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 57) >> 5) | (4
                                                          * ((*(void *)(a1 + 8) >> 57) & 0x18 | *(void *)(a1 + 8) & 7))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for GenerationQueue.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 96) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(_OWORD *)(result + 16) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)(result + 48) = 0u;
      *(_OWORD *)(result + 64) = 0u;
      *(_OWORD *)(result + 80) = 0u;
    }
  }
  return result;
}

uint64_t sub_1C2707E20(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8) >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1C2707E3C(uint64_t result)
{
  *(void *)(result + 8) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_1C2707E4C(uint64_t result, uint64_t a2)
{
  if (a2 < 2)
  {
    *(void *)(result + 8) = *(void *)(result + 8) & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  }
  else
  {
    *(void *)__n128 result = (a2 - 2);
    *(void *)(result + 8) = 0x8000000000000000;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerationQueue.State()
{
  return &type metadata for GenerationQueue.State;
}

unsigned char *storeEnumTagSinglePayload for BackgroundGenerationWorkDescription.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2707F60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BackgroundGenerationWorkDescription.CodingKeys()
{
  return &type metadata for BackgroundGenerationWorkDescription.CodingKeys;
}

ValueMetadata *type metadata accessor for GenerationPhase.CodingKeys()
{
  return &type metadata for GenerationPhase.CodingKeys;
}

ValueMetadata *type metadata accessor for GenerationPhase.SharableModelsCodingKeys()
{
  return &type metadata for GenerationPhase.SharableModelsCodingKeys;
}

ValueMetadata *type metadata accessor for GenerationPhase.FeedItemsCodingKeys()
{
  return &type metadata for GenerationPhase.FeedItemsCodingKeys;
}

unsigned char *_s14HealthPlatform15GenerationPhaseOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2708094);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PluginIdentifierSet.CodingKeys()
{
  return &type metadata for PluginIdentifierSet.CodingKeys;
}

ValueMetadata *type metadata accessor for PluginIdentifierSet.AllCodingKeys()
{
  return &type metadata for PluginIdentifierSet.AllCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for PluginIdentifierSet.IdentifiersCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C2708178);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PluginIdentifierSet.IdentifiersCodingKeys()
{
  return &type metadata for PluginIdentifierSet.IdentifiersCodingKeys;
}

unint64_t sub_1C27081B4()
{
  unint64_t result = qword_1EA304E60;
  if (!qword_1EA304E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304E60);
  }
  return result;
}

unint64_t sub_1C270820C()
{
  unint64_t result = qword_1EA304E68;
  if (!qword_1EA304E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304E68);
  }
  return result;
}

unint64_t sub_1C2708264()
{
  unint64_t result = qword_1EA304E70;
  if (!qword_1EA304E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304E70);
  }
  return result;
}

unint64_t sub_1C27082BC()
{
  unint64_t result = qword_1EA304E78;
  if (!qword_1EA304E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304E78);
  }
  return result;
}

unint64_t sub_1C2708314()
{
  unint64_t result = qword_1EA304E80;
  if (!qword_1EA304E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304E80);
  }
  return result;
}

unint64_t sub_1C270836C()
{
  unint64_t result = qword_1EA304E88;
  if (!qword_1EA304E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304E88);
  }
  return result;
}

unint64_t sub_1C27083C4()
{
  unint64_t result = qword_1EA304E90;
  if (!qword_1EA304E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304E90);
  }
  return result;
}

unint64_t sub_1C270841C()
{
  unint64_t result = qword_1EA304E98;
  if (!qword_1EA304E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304E98);
  }
  return result;
}

unint64_t sub_1C2708474()
{
  unint64_t result = qword_1EA304EA0;
  if (!qword_1EA304EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304EA0);
  }
  return result;
}

unint64_t sub_1C27084CC()
{
  unint64_t result = qword_1EA304EA8;
  if (!qword_1EA304EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304EA8);
  }
  return result;
}

unint64_t sub_1C2708524()
{
  unint64_t result = qword_1EA304EB0;
  if (!qword_1EA304EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304EB0);
  }
  return result;
}

unint64_t sub_1C270857C()
{
  unint64_t result = qword_1EA304EB8;
  if (!qword_1EA304EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304EB8);
  }
  return result;
}

unint64_t sub_1C27085D4()
{
  unint64_t result = qword_1EA304EC0;
  if (!qword_1EA304EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304EC0);
  }
  return result;
}

unint64_t sub_1C270862C()
{
  unint64_t result = qword_1EA304EC8;
  if (!qword_1EA304EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304EC8);
  }
  return result;
}

unint64_t sub_1C2708684()
{
  unint64_t result = qword_1EA304ED0;
  if (!qword_1EA304ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304ED0);
  }
  return result;
}

unint64_t sub_1C27086DC()
{
  unint64_t result = qword_1EA304ED8;
  if (!qword_1EA304ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304ED8);
  }
  return result;
}

unint64_t sub_1C2708734()
{
  unint64_t result = qword_1EA304EE0;
  if (!qword_1EA304EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304EE0);
  }
  return result;
}

unint64_t sub_1C270878C()
{
  unint64_t result = qword_1EA304EE8;
  if (!qword_1EA304EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304EE8);
  }
  return result;
}

uint64_t sub_1C27087E0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C626172616873 && a2 == 0xEE00736C65646F4DLL;
  if (v2 || (sub_1C277C7E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D65744964656566 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C277C7E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C2708904(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x80000001C278D540 || (sub_1C277C7E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C278D560 || (sub_1C277C7E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001C278D580)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_1C277C7E0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1C2708A44()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2708A7C()
{
  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v2);
  return v2;
}

uint64_t sub_1C2708AB4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C2708AE4()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_1C2708B2C()
{
  uint64_t v1 = *(void **)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  (*(void (**)(void))(v0 + 16))();
  sub_1C2704C4C(v1, v2);
}

uint64_t sub_1C2708B7C()
{
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 64))();
  return (*(uint64_t (**)(uint64_t))(v0 + 144))(v1);
}

uint64_t sub_1C2708BB4(uint64_t a1)
{
  return a1;
}

uint64_t objectdestroy_74Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 176, 7);
}

uint64_t sub_1C2708CA4()
{
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 80))();
  return (*(uint64_t (**)(uint64_t))(v0 + 160))(v1);
}

uint64_t sub_1C2708CDC(uint64_t a1)
{
  return a1;
}

void sub_1C2708D44(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C2708DAC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C26818D4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C2708E0C()
{
  unint64_t result = qword_1EBB85150;
  if (!qword_1EBB85150)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB85150);
  }
  return result;
}

uint64_t sub_1C2708E4C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t DiskHealthExperienceStore.deinit()
{
  swift_release();
  swift_release();

  return v0;
}

uint64_t sub_1C2708EF0()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 32);
  uint64_t v2 = (uint64_t *)&v1[4];
  int v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1C270B36C(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

id sub_1C2708F4C()
{
  id v0 = sub_1C262E4A8();
  id v1 = objc_msgSend(v0, sel_persistentStoreCoordinator);

  return v1;
}

uint64_t sub_1C2708F90(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
  return MEMORY[0x1F41817F8]();
}

void (*sub_1C2708F9C(id *a1))(uint64_t *a1)
{
  a1[1] = v1;
  *a1 = sub_1C262E4A8();
  return sub_1C2708FE4;
}

void sub_1C2708FE4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  int v3 = *(void **)(v1 + 40);
  *(void *)(v1 + 40) = v2;
}

id sub_1C2708FF4()
{
  id v0 = sub_1C262E4A8();
  id v1 = objc_msgSend(v0, sel_newBackgroundContext);

  objc_msgSend(v1, sel_setAutomaticallyMergesChangesFromParent_, 1);
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C130]), sel_initWithMergeType_, 1);
  objc_msgSend(v1, sel_setMergePolicy_, v2);

  return v1;
}

uint64_t sub_1C270907C()
{
  id v1 = v0;
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C277B130();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBB86280);
  int v3 = sub_1C277B100();
  os_log_type_t v4 = sub_1C277BD40();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_1C2601000, v3, v4, "deleteAllObjects - removeAllFeedItemNotifications", v5, 2u);
    MEMORY[0x1C875D230](v5, -1, -1);
  }

  sub_1C2709858();
  char v6 = (os_unfair_lock_s *)v1[4];
  uint64_t v7 = (uint64_t *)&v6[4];
  long long v8 = v6 + 6;
  os_unfair_lock_lock(v6 + 6);
  sub_1C270B36C(v7, (uint64_t *)&v12);
  os_unfair_lock_unlock(v8);
  unint64_t v9 = v12;
  unint64_t v10 = (void *)(*(uint64_t (**)(void))(*v1 + 120))();
  sub_1C2709248(v9, v10);

  return swift_bridgeObjectRelease();
}

void sub_1C27091E8()
{
}

id sub_1C2709248(unint64_t a1, void *a2)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (uint64_t i = swift_dynamicCast; v3; uint64_t i = swift_dynamicCast)
  {
    uint64_t v5 = 0;
    uint64_t v6 = 4;
    while (1)
    {
      uint64_t v7 = v6 - 4;
      if ((a1 & 0xC000000000000001) == 0) {
        break;
      }
      id v8 = (id)MEMORY[0x1C875C230](v6 - 4, a1);
      uint64_t v9 = v6 - 3;
      if (__OFADD__(v7, 1)) {
        goto LABEL_13;
      }
LABEL_9:
      uint64_t v29 = v9;
      unint64_t v10 = v8;
      id result = objc_msgSend(v8, sel_name);
      if (!result) {
        goto LABEL_19;
      }
      unint64_t v12 = result;
      sub_1C277B850();

      id v13 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
      uint64_t v14 = (void *)sub_1C277B820();
      swift_bridgeObjectRelease();
      id v15 = objc_msgSend(v13, sel_initWithEntityName_, v14);

      objc_msgSend(v15, sel_setIncludesPropertyValues_, 0);
      uint64_t v16 = (void *)swift_allocObject();
      v16[2] = a2;
      v16[3] = v15;
      v16[4] = v28;
      id v17 = a2;
      id v18 = v15;
      swift_retain();
      sub_1C261AE94((uint64_t)v5);
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = sub_1C270C2B0;
      *(void *)(v19 + 24) = v16;
      os_log_type_t v34 = sub_1C261AECC;
      uint64_t v35 = v19;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v31 = 1107296256;
      uint64_t v32 = sub_1C262BAF0;
      uint64_t v33 = &block_descriptor_40;
      uint64_t v20 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v17, sel_performBlockAndWait_, v20);

      _Block_release(v20);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if (isEscapingClosureAtFileLocation) {
        goto LABEL_14;
      }
      ++v6;
      uint64_t v5 = sub_1C270C2B0;
      if (v29 == v3)
      {
        swift_bridgeObjectRelease();
        uint64_t v22 = sub_1C270C2B0;
        uint64_t i = swift_dynamicCast;
        goto LABEL_17;
      }
    }
    id v8 = *(id *)(a1 + 8 * v6);
    uint64_t v9 = v6 - 3;
    if (!__OFADD__(v7, 1)) {
      goto LABEL_9;
    }
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C277C5A0();
  }
  swift_bridgeObjectRelease();
  uint64_t v22 = 0;
LABEL_17:
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = a2;
  *(void *)(v23 + 24) = v28;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = sub_1C270C30C;
  *(void *)(v24 + 24) = v23;
  os_log_type_t v34 = sub_1C262BB18;
  uint64_t v35 = v24;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v31 = *((void *)i + 339);
  uint64_t v32 = sub_1C262BAF0;
  uint64_t v33 = &block_descriptor_50;
  uint64_t v25 = _Block_copy(&aBlock);
  id v26 = a2;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v26, sel_performBlockAndWait_, v25);
  _Block_release(v25);
  LOBYTE(v26) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  sub_1C261AE94((uint64_t)v22);
  id result = (id)swift_release();
  if (v26)
  {
    __break(1u);
LABEL_19:
    __break(1u);
  }
  return result;
}

void sub_1C2709698()
{
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1C277B130();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBB86280);
  id v1 = sub_1C277B100();
  os_log_type_t v2 = sub_1C277BD40();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v8 = v4;
    *(_DWORD *)uint64_t v3 = 136315138;
    uint64_t v5 = sub_1C277C9E0();
    sub_1C263FDFC(v5, v6, &v8);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v1, v2, "%s destroyPersistentContainerDescription", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v4, -1, -1);
    MEMORY[0x1C875D230](v3, -1, -1);
  }

  sub_1C2709858();
  id v7 = sub_1C26215A8();
  sub_1C276DBF8();
}

uint64_t sub_1C2709858()
{
  uint64_t v1 = v0;
  os_log_type_t v2 = *(os_unfair_lock_s **)(v0 + 32);
  uint64_t v3 = v2 + 4;
  uint64_t v4 = v2 + 6;
  os_unfair_lock_lock(v2 + 6);
  sub_1C270A794(v3, &v11);
  os_unfair_lock_unlock(v4);
  uint64_t v5 = *(void *)(v11 + 16);
  if (v5)
  {
    unint64_t v6 = (uint64_t *)(v11 + 40);
    do
    {
      uint64_t v7 = *v6;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 8);
      swift_unknownObjectRetain();
      v9(v1, ObjectType, v7);
      swift_unknownObjectRelease();
      v6 += 2;
      --v5;
    }
    while (v5);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2709940(char *a1)
{
  v34[1] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_1C277A750();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  unint64_t v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v9 = (char *)v25 - v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v25 - v10;
  char v12 = *a1;
  id v33 = 0;
  v34[0] = 0;
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28CA0]), sel_init);
  type metadata accessor for StorageLocations();
  static StorageLocations.homeMobileDirectory.getter();
  sub_1C277A6B0();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v3 + 8);
  v14(v6, v2);
  sub_1C277A6B0();
  v14(v9, v2);
  uint64_t v15 = sub_1C277A6A0();
  v14(v11, v2);
  uint64_t v16 = (void *)v25[1];
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v34;
  *(void *)(v17 + 24) = v16;
  *(unsigned char *)(v17 + 32) = v12;
  *(void *)(v17 + 40) = &v33;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_1C270B434;
  *(void *)(v18 + 24) = v17;
  uint64_t v30 = sub_1C26903AC;
  uint64_t v31 = v18;
  id aBlock = (id)MEMORY[0x1E4F143A8];
  unint64_t v27 = 1107296256;
  uint64_t v28 = sub_1C270A97C;
  uint64_t v29 = &block_descriptor_20;
  uint64_t v19 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  objc_msgSend(v13, sel_coordinateWritingItemAtURL_options_error_byAccessor_, v15, 8, &aBlock, v19);
  _Block_release(v19);

  id v20 = aBlock;
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v15) {
    __break(1u);
  }
  if (v33)
  {
    id v21 = v33;
    swift_willThrow();

    uint64_t v22 = (void *)v34[0];
    swift_release();

    return (uint64_t)v20;
  }
  if (v20)
  {
    id aBlock = 0;
    unint64_t v27 = 0xE000000000000000;
    sub_1C277C2D0();
    id v32 = v16;
    type metadata accessor for DiskHealthExperienceStore();
    sub_1C277C450();
    sub_1C277B8D0();
    id v32 = v20;
    sub_1C262DB44(0, (unint64_t *)&unk_1EA304F10, (unint64_t *)&qword_1EBB854D0, 0x1E4F28C58, MEMORY[0x1E4FBB718]);
    id v24 = v20;
    sub_1C277B860();
    sub_1C277B8D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v20 = (id)v34[0];
    if (v34[0])
    {
      swift_release();
      return (uint64_t)v20;
    }
    id aBlock = 0;
    unint64_t v27 = 0xE000000000000000;
    sub_1C277C2D0();
    id v32 = v16;
    type metadata accessor for DiskHealthExperienceStore();
    sub_1C277C450();
    sub_1C277B8D0();
  }
  uint64_t result = sub_1C277C560();
  __break(1u);
  return result;
}

void sub_1C2709E60()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 32);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1C270B4A8(v2);
  os_unfair_lock_unlock(v3);
}

void sub_1C2709EBC()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 32);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1C270B4C4(v2);
  os_unfair_lock_unlock(v3);
}

BOOL static DiskHealthExperienceStore.State.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DiskHealthExperienceStore.State.hash(into:)()
{
  return sub_1C277C8D0();
}

uint64_t DiskHealthExperienceStore.State.hashValue.getter()
{
  return sub_1C277C910();
}

uint64_t sub_1C2709FA0()
{
  sub_1C2624738(v0+ OBJC_IVAR____TtCC14HealthPlatform25DiskHealthExperienceStoreP33_1ADB8C54860F87AD2EA0C72047ADEDD912MutableState_overrideStoreLocation, (uint64_t)&qword_1EBB84F30, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C26248B8);
  swift_release();
  swift_bridgeObjectRelease();
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCC14HealthPlatform25DiskHealthExperienceStoreP33_1ADB8C54860F87AD2EA0C72047ADEDD912MutableState_sharedBackgroundContext));
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t DiskHealthExperienceStore.__allocating_init(overrideStoreLocation:observeExternalChanges:)(uint64_t a1, int a2)
{
  uint64_t v4 = swift_allocObject();
  DiskHealthExperienceStore.init(overrideStoreLocation:observeExternalChanges:)(a1, a2);
  return v4;
}

unint64_t static DiskHealthExperienceStore.disableSpotlightForSearchKey.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_1C270A0FC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = OBJC_IVAR____TtCC14HealthPlatform25DiskHealthExperienceStoreP33_1ADB8C54860F87AD2EA0C72047ADEDD912MutableState_allEntities;
  uint64_t v5 = *(void *)(*a1
                 + OBJC_IVAR____TtCC14HealthPlatform25DiskHealthExperienceStoreP33_1ADB8C54860F87AD2EA0C72047ADEDD912MutableState_allEntities);
  if (v5)
  {
    uint64_t v6 = v5;
  }
  else
  {
    id v7 = sub_1C262E4A8();
    id v8 = objc_msgSend(v7, sel_managedObjectModel);

    id v9 = objc_msgSend(v8, sel_entities);
    sub_1C2644ED8(0, &qword_1EA304FA8);
    uint64_t v6 = sub_1C277BA40();

    *(void *)(v3 + v4) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *a2 = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C270A1F4(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1C270A21C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 240))();
}

uint64_t sub_1C270A348(void *a1)
{
  sub_1C26A2BF4();
  unint64_t v2 = sub_1C277C000();
  unint64_t v3 = v2;
  if (v2 >> 62)
  {
    sub_1C2644ED8(0, &qword_1EA3042E8);
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C277C580();
    swift_bridgeObjectRelease_n();
    unint64_t v3 = v11;
  }
  else
  {
    uint64_t v4 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    sub_1C277C7F0();
    sub_1C2644ED8(0, &qword_1EA3042E8);
    if (swift_dynamicCastMetatype() || (uint64_t v9 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_3:
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v10 = v4 + 32;
      while (1)
      {
        self;
        if (!swift_dynamicCastObjCClass()) {
          break;
        }
        v10 += 8;
        if (!--v9) {
          goto LABEL_3;
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v3 = v4 | 1;
    }
  }
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C277C5A0();
    swift_bridgeObjectRelease();
    if (!v5) {
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v5) {
      goto LABEL_20;
    }
  }
  if (v5 < 1)
  {
    __break(1u);
    sub_1C277C2D0();
    type metadata accessor for DiskHealthExperienceStore();
    sub_1C277C450();
    sub_1C277B8D0();
    sub_1C26532A4();
    sub_1C277C450();
    uint64_t result = sub_1C277C560();
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v5; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v7 = (id)MEMORY[0x1C875C230](i, v3);
    }
    else {
      id v7 = *(id *)(v3 + 8 * i + 32);
    }
    id v8 = v7;
    objc_msgSend(a1, sel_deleteObject_, v7);
  }
LABEL_20:

  return swift_bridgeObjectRelease();
}

id sub_1C270A61C(void *a1)
{
  v5[3] = *(id *)MEMORY[0x1E4F143B8];
  v5[0] = 0;
  unsigned int v1 = objc_msgSend(a1, sel_save_, v5);
  id v2 = v5[0];
  if (v1)
  {
    return v2;
  }
  else
  {
    id v4 = v5[0];
    sub_1C277A620();

    swift_willThrow();
    v5[0] = 0;
    v5[1] = (id)0xE000000000000000;
    sub_1C277C2D0();
    type metadata accessor for DiskHealthExperienceStore();
    sub_1C277C450();
    sub_1C277B8D0();
    sub_1C26532A4();
    sub_1C277C450();
    id result = (id)sub_1C277C560();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C270A794@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  void (*v9)(long long *__return_ptr, uint64_t);
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  long long v13;
  void *v14;
  long long v15;
  long long v16;

  uint64_t v3 = *a1
     + OBJC_IVAR____TtCC14HealthPlatform25DiskHealthExperienceStoreP33_1ADB8C54860F87AD2EA0C72047ADEDD912MutableState_observers;
  uint64_t result = swift_beginAccess();
  uint64_t v5 = *(void *)v3;
  uint64_t v6 = *(void *)(*(void *)v3 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = v5 + 40;
    id v8 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v9 = *(void (**)(long long *__return_ptr, uint64_t))(v7 - 8);
      uint64_t v10 = swift_retain();
      v9(&v16, v10);
      swift_release();
      if ((void)v16)
      {
        uint64_t v15 = v16;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v8 = sub_1C2690AC0(0, v8[2] + 1, 1, v8);
        }
        char v12 = v8[2];
        uint64_t v11 = v8[3];
        id v13 = v15;
        if (v12 >= v11 >> 1)
        {
          uint64_t v14 = sub_1C2690AC0((void *)(v11 > 1), v12 + 1, 1, v8);
          id v13 = v15;
          id v8 = v14;
        }
        _OWORD v8[2] = v12 + 1;
        *(_OWORD *)&v8[2 * v12 + 4] = v13;
      }
      v7 += 16;
      --v6;
    }
    while (v6);
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    id v8 = (void *)MEMORY[0x1E4FBC860];
  }
  *a2 = v8;
  return result;
}

uint64_t sub_1C270A8E8(uint64_t a1, uint64_t *a2, uint64_t a3, unsigned __int8 a4)
{
  unsigned __int8 v5 = a4;
  *a2 = sub_1C26178F4(&v5, 1);

  return MEMORY[0x1F41817F8]();
}

uint64_t sub_1C270A97C(uint64_t a1)
{
  uint64_t v2 = sub_1C277A750();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unsigned __int8 v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  sub_1C277A6F0();
  v6(v5);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

id sub_1C270AA60(void *a1)
{
  v5[1] = *(id *)MEMORY[0x1E4F143B8];
  v5[0] = 0;
  unsigned int v1 = objc_msgSend(a1, sel_save_, v5);
  id v2 = v5[0];
  if (v1)
  {
    return v2;
  }
  else
  {
    id v4 = v5[0];
    sub_1C277A620();

    swift_willThrow();
    id result = (id)sub_1C277C560();
    __break(1u);
  }
  return result;
}

unint64_t sub_1C270AB54()
{
  id v1 = objc_msgSend(v0, sel_userInfo);
  uint64_t v2 = MEMORY[0x1E4FBC840];
  uint64_t v3 = sub_1C277B760();

  uint64_t v4 = sub_1C277B850();
  if (!*(void *)(v3 + 16) || (unint64_t v6 = sub_1C2629588(v4, v5), (v7 & 1) == 0))
  {
    long long v13 = 0u;
    long long v14 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_1C263FED0(*(void *)(v3 + 56) + 32 * v6, (uint64_t)&v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v14 + 1))
  {
LABEL_7:
    sub_1C2624738((uint64_t)&v13, (uint64_t)&qword_1EBB84A80, v2 + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C262F0B0);
    goto LABEL_8;
  }
  sub_1C2644ED8(0, &qword_1EBB851C0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    uint64_t v10 = 0;
    unsigned __int8 v9 = 1;
    return v10 | ((unint64_t)v9 << 32);
  }
  unsigned int v8 = objc_msgSend(v12, sel_intValue);

  unsigned __int8 v9 = 0;
  uint64_t v10 = v8;
  return v10 | ((unint64_t)v9 << 32);
}

void sub_1C270ACD8(void *a1)
{
  id v1 = objc_msgSend(a1, sel_viewContext);
  objc_msgSend(v1, sel_setAutomaticallyMergesChangesFromParent_, 1);
}

uint64_t sub_1C270AD30(void *a1, uint64_t a2, uint64_t a3)
{
  void (*v9)(void *__return_ptr, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  void *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  void *v18;
  void v19[3];

  uint64_t v5 = *a1
     + OBJC_IVAR____TtCC14HealthPlatform25DiskHealthExperienceStoreP33_1ADB8C54860F87AD2EA0C72047ADEDD912MutableState_observers;
  swift_beginAccess();
  uint64_t v6 = *(void *)v5;
  uint64_t v7 = *(void *)(*(void *)v5 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = v6 + 40;
    do
    {
      unsigned __int8 v9 = *(void (**)(void *__return_ptr, uint64_t))(v8 - 8);
      uint64_t v10 = swift_retain();
      v9(v19, v10);
      uint64_t v11 = v19[0];
      swift_release();
      if (v11)
      {
        swift_unknownObjectRelease();
        if (v11 == a2) {
          return swift_bridgeObjectRelease();
        }
      }
      v8 += 16;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  long long v13 = swift_allocObject();
  *(void *)(v13 + 24) = a3;
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  long long v14 = *(void **)v5;
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t v5 = v14;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    long long v14 = sub_1C2690BE8(0, v14[2] + 1, 1, v14);
    *(void *)uint64_t v5 = v14;
  }
  uint64_t v17 = v14[2];
  uint64_t v16 = v14[3];
  if (v17 >= v16 >> 1)
  {
    long long v14 = sub_1C2690BE8((void *)(v16 > 1), v17 + 1, 1, v14);
    *(void *)uint64_t v5 = v14;
  }
  id v14[2] = v17 + 1;
  uint64_t v18 = &v14[2 * v17];
  v18[4] = sub_1C270C210;
  v18[5] = v13;
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C270AEFC(void *a1, uint64_t a2)
{
  uint64_t v3 = *a1
     + OBJC_IVAR____TtCC14HealthPlatform25DiskHealthExperienceStoreP33_1ADB8C54860F87AD2EA0C72047ADEDD912MutableState_observers;
  swift_beginAccess();
  swift_unknownObjectRetain();
  uint64_t v4 = sub_1C270BFD8(v3, a2);
  uint64_t result = swift_unknownObjectRelease();
  int64_t v6 = *(void *)(*(void *)v3 + 16);
  if (v6 < v4)
  {
    __break(1u);
  }
  else
  {
    sub_1C26B9D58(v4, v6);
    return swift_endAccess();
  }
  return result;
}

uint64_t DiskHealthExperienceStore.__deallocating_deinit()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

id sub_1C270AFF4()
{
  return sub_1C2609E10();
}

void sub_1C270B018()
{
  uint64_t v0 = sub_1C277A750();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1C277B130();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EBB86280);
  long long v13 = sub_1C277B100();
  os_log_type_t v5 = sub_1C277BD20();
  if (os_log_type_enabled(v13, v5))
  {
    int64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v15 = v7;
    *(_DWORD *)int64_t v6 = 136315138;
    sub_1C2624980();
    sub_1C2625030((unint64_t *)&qword_1EA304AD0, MEMORY[0x1E4F276F0]);
    uint64_t v8 = sub_1C277C7B0();
    unint64_t v10 = v9;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    uint64_t v14 = sub_1C263FDFC(v8, v10, &v15);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v13, v5, "Store cache file has been deleted! Store File URL: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v7, -1, -1);
    MEMORY[0x1C875D230](v6, -1, -1);
  }
  else
  {
    uint64_t v11 = v13;
  }
}

uint64_t sub_1C270B2B0@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*(void *)result + 16);
  return result;
}

void sub_1C270B2C0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  *(unsigned char *)(v1 + 16) = 1;
  uint64_t v2 = *(void **)(v1 + 24);
  *(void *)(v1 + 24) = 0;
}

uint64_t sub_1C270B2FC()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C270B334()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C270B36C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C270A0FC(a1, a2);
}

uint64_t sub_1C270B388()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C270B398()
{
}

uint64_t sub_1C270B3A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FileMonitorPublisher();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C270B3FC()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C270B434(uint64_t a1)
{
  return sub_1C270A8E8(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
}

uint64_t sub_1C270B444()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

unint64_t sub_1C270B454()
{
  unint64_t result = qword_1EA304F20;
  if (!qword_1EA304F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304F20);
  }
  return result;
}

uint64_t sub_1C270B4A8(void *a1)
{
  return sub_1C270AD30(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C270B4C4(void *a1)
{
  return sub_1C270AEFC(a1, *(void *)(v1 + 16));
}

unint64_t sub_1C270B4E4()
{
  unint64_t result = qword_1EA304F30;
  if (!qword_1EA304F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304F30);
  }
  return result;
}

id sub_1C270B538@<X0>(void *a1@<X8>)
{
  id result = sub_1C262E4A8();
  *a1 = result;
  return result;
}

void sub_1C270B564(void **a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  id v4 = *(id *)(*(void *)a2 + 40);
  *(void *)(*(void *)a2 + 40) = *a1;
  id v3 = v2;
}

uint64_t dispatch thunk of DiskHealthExperienceStoreObserver.willDestroy(store:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t method lookup function for DiskHealthExperienceStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DiskHealthExperienceStore);
}

uint64_t dispatch thunk of DiskHealthExperienceStore.isRunningInApplicationProcess.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of DiskHealthExperienceStore.sharedBackgroundContext.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of DiskHealthExperienceStore.viewContext.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of DiskHealthExperienceStore.allEntities.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of DiskHealthExperienceStore.persistentStoreDescription.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of DiskHealthExperienceStore.persistentStoreCoordinator.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of DiskHealthExperienceStore.__allocating_init(overrideStoreLocation:observeExternalChanges:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of DiskHealthExperienceStore.initPersistentContainer()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of DiskHealthExperienceStore.persistentContainer.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of DiskHealthExperienceStore.persistentContainer.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of DiskHealthExperienceStore.persistentContainer.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of DiskHealthExperienceStore.makeManagedObjectContext()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of DiskHealthExperienceStore.destroyStoreIfNeededAndMakePersistentContainer()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of DiskHealthExperienceStore.deleteAllObjects()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of DiskHealthExperienceStore.obliterateAndExit(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of DiskHealthExperienceStore.makePersistentContainer(currentStoreState:retryOnFailure:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of DiskHealthExperienceStore.getStoreState()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of DiskHealthExperienceStore.register(observer:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of DiskHealthExperienceStore.unregister(observer:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

unsigned char *storeEnumTagSinglePayload for DiskHealthExperienceStore.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *id result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C270B9B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DiskHealthExperienceStore.State()
{
  return &type metadata for DiskHealthExperienceStore.State;
}

uint64_t sub_1C270B9F0()
{
  return type metadata accessor for DiskHealthExperienceStore.MutableState();
}

void sub_1C270B9F8(void *a1)
{
  uint64_t v46 = sub_1C277A960();
  uint64_t v2 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  unsigned int v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = &selRef_relevantEndDate;
  id v6 = objc_msgSend(a1, sel_persistentStoreCoordinator);
  id v7 = objc_msgSend(v6, sel_persistentStores);

  sub_1C2644ED8(0, &qword_1EBB84920);
  unint64_t v8 = sub_1C277BA40();

  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1C277C5A0();
    swift_bridgeObjectRelease();
    if (!v9) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v9) {
      goto LABEL_16;
    }
  }
  if (v9 < 1) {
    goto LABEL_18;
  }
  uint64_t v10 = 0;
  BOOL v43 = (void (**)(char *, uint64_t))(v2 + 8);
  unint64_t v44 = v8 & 0xC000000000000001;
  uint64_t v40 = 0x80000001C278A4E0;
  uint64_t v41 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v39 = 0x80000001C278D750;
  uint64_t v45 = v9;
  unint64_t v42 = v8;
  do
  {
    if (v44) {
      id v11 = (id)MEMORY[0x1C875C230](v10, v8);
    }
    else {
      id v11 = *(id *)(v8 + 8 * v10 + 32);
    }
    uint64_t v12 = v11;
    id v13 = objc_msgSend(a1, v5[114], v39);
    id v14 = objc_msgSend(v13, sel_metadataForPersistentStore_, v12);

    uint64_t v15 = (void *)MEMORY[0x1E4FBB1A0];
    uint64_t v16 = sub_1C277B760();

    uint64_t v17 = a1;
    uint64_t v18 = v5;
    if (qword_1EBB848B8 != -1) {
      swift_once();
    }
    uint64_t v49 = v15;
    long long aBlock = xmmword_1EBB848A0;
    sub_1C262FD34(&aBlock, v53);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v52 = v16;
    sub_1C268B27C(v53, 0xD000000000000023, v40, isUniquelyReferenced_nonNull_native);
    uint64_t v20 = v52;
    swift_bridgeObjectRelease();
    sub_1C277A920();
    uint64_t v21 = sub_1C262311C();
    uint64_t v23 = v22;
    (*v43)(v4, v46);
    uint64_t v49 = v15;
    *(void *)&long long aBlock = v21;
    *((void *)&aBlock + 1) = v23;
    sub_1C262FD34(&aBlock, v53);
    char v24 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v52 = v20;
    sub_1C268B27C(v53, 0xD000000000000022, v39, v24);
    swift_bridgeObjectRelease();
    uint64_t v25 = v18;
    id v26 = [v17 (SEL)v18 + 24];
    unint64_t v27 = (void *)sub_1C277B750();
    swift_bridgeObjectRelease();
    objc_msgSend(v26, sel_setMetadata_forPersistentStore_, v27, v12);

    a1 = v17;
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_1C277B130();
    __swift_project_value_buffer(v28, (uint64_t)qword_1EBB86280);
    uint64_t v29 = sub_1C277B100();
    os_log_type_t v30 = sub_1C277BD40();
    BOOL v31 = os_log_type_enabled(v29, v30);
    uint64_t v32 = v45;
    if (v31)
    {
      id v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v33 = 0;
      _os_log_impl(&dword_1C2601000, v29, v30, "Saved new store version and localization for database.", v33, 2u);
      MEMORY[0x1C875D230](v33, -1, -1);
    }
    ++v10;

    uint64_t v5 = v25;
    unint64_t v8 = v42;
  }
  while (v32 != v10);
LABEL_16:
  swift_bridgeObjectRelease();
  id v34 = objc_msgSend(a1, sel_newBackgroundContext);
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = v34;
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = sub_1C270C35C;
  *(void *)(v36 + 24) = v35;
  uint64_t v50 = sub_1C262BB18;
  uint64_t v51 = v36;
  *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  uint64_t v48 = sub_1C262BAF0;
  uint64_t v49 = &block_descriptor_66_0;
  unint64_t v37 = _Block_copy(&aBlock);
  id v38 = v34;
  swift_retain();
  swift_release();
  objc_msgSend(v38, sel_performBlockAndWait_, v37);

  _Block_release(v37);
  LOBYTE(v38) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((v38 & 1) == 0) {
    return;
  }
  __break(1u);
LABEL_18:
  __break(1u);
}

uint64_t sub_1C270BFD8(uint64_t a1, uint64_t a2)
{
  void (*v8)(void *__return_ptr, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  unint64_t v12;
  unint64_t v13;
  void *v15;
  void (*v16)(void *__return_ptr, uint64_t);
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  long long v23;
  void v24[2];

  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 16);
  if (!v3) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  unint64_t v7 = 0;
  while (1)
  {
    unint64_t v8 = (void (*)(void *__return_ptr, uint64_t))v2[v6 + 4];
    uint64_t v9 = swift_retain();
    v8(v24, v9);
    uint64_t v10 = v24[0];
    swift_release();
    if (v10)
    {
      swift_unknownObjectRelease();
      if (v10 == a2) {
        break;
      }
    }
    ++v7;
    v6 += 2;
    if (v3 == v7)
    {
      swift_bridgeObjectRelease();
      return v2[2];
    }
  }
  id result = swift_bridgeObjectRelease();
  uint64_t v12 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    id v13 = v2[2];
    while (v12 != v13)
    {
      if (v12 >= v13)
      {
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
      uint64_t v15 = &v2[v6];
      uint64_t v16 = (void (*)(void *__return_ptr, uint64_t))v2[v6 + 6];
      uint64_t v17 = swift_retain();
      v16(v24, v17);
      uint64_t v18 = v24[0];
      id result = swift_release();
      if (!v18 || (id result = swift_unknownObjectRelease(), v18 != a2))
      {
        if (v12 != v7)
        {
          if ((v7 & 0x8000000000000000) != 0) {
            goto LABEL_28;
          }
          uint64_t v19 = v2[2];
          if (v7 >= v19) {
            goto LABEL_29;
          }
          if (v12 >= v19) {
            goto LABEL_30;
          }
          uint64_t v21 = v15[6];
          uint64_t v20 = v15[7];
          uint64_t v23 = *(_OWORD *)&v2[2 * v7 + 4];
          swift_retain();
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v2 = sub_1C26B85DC(v2);
          }
          uint64_t v22 = &v2[2 * v7];
          v22[4] = v21;
          _OWORD v22[5] = v20;
          id result = swift_release();
          if (v12 >= v2[2]) {
            goto LABEL_31;
          }
          *(_OWORD *)&v2[v6 + 6] = v23;
          id result = swift_release();
          *(void *)a1 = v2;
        }
        if (__OFADD__(v7++, 1)) {
          goto LABEL_27;
        }
      }
      ++v12;
      id v13 = v2[2];
      v6 += 2;
    }
    return v7;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1C270C1D8()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C270C210@<X0>(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C875D340](v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C270C268()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C270C2B0()
{
  return sub_1C270A348(*(void **)(v0 + 16));
}

uint64_t sub_1C270C2BC()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C270C2CC()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

id sub_1C270C30C()
{
  return sub_1C270A61C(*(void **)(v0 + 16));
}

uint64_t sub_1C270C314()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C270C324()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

id sub_1C270C35C()
{
  return sub_1C270AA60(*(void **)(v0 + 16));
}

uint64_t sub_1C270C364()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C270C374()
{
  sub_1C270ACD8(*(void **)(v0 + 16));
}

uint64_t sub_1C270C37C()
{
  swift_release();

  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C270C3C4()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

unint64_t sub_1C270C3D4()
{
  unint64_t result = qword_1EA304FB0;
  if (!qword_1EA304FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304FB0);
  }
  return result;
}

id sub_1C270C428(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  uint64_t v3 = *(void **)(*(void *)a1 + 24);
  *(void *)(*(void *)a1 + 24) = v2;

  return v2;
}

unsigned char *storeEnumTagSinglePayload for DiskHealthExperienceStore.MergeError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C270C500);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DiskHealthExperienceStore.MergeError()
{
  return &type metadata for DiskHealthExperienceStore.MergeError;
}

unint64_t sub_1C270C53C()
{
  unint64_t result = qword_1EA304FB8;
  if (!qword_1EA304FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304FB8);
  }
  return result;
}

uint64_t static NSManagedObjectUnique<>.findOrCreate(context:uniquenessPredicate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2610438(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C270C730);
}

uint64_t sub_1C270C5D8()
{
  return sub_1C277C910();
}

uint64_t sub_1C270C630()
{
  return sub_1C277B8B0();
}

uint64_t sub_1C270C64C()
{
  return sub_1C277C910();
}

uint64_t sub_1C270C6A0@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C277C650();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1C270C6F4(void *a1@<X8>)
{
  *a1 = 0x7571696E55746F6ELL;
  a1[1] = 0xE900000000000065;
}

uint64_t sub_1C270C714()
{
  return 0x7571696E55746F6ELL;
}

void sub_1C270C730(void *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  sub_1C2610524(a1, a2, a3, a4, a5);
  if (!v5 && !v9)
  {
    uint64_t v10 = self;
    (*(void (**)(uint64_t, uint64_t))(a5 + 16))(a4, a5);
    id v11 = (void *)sub_1C277B820();
    swift_bridgeObjectRelease();
    id v12 = objc_msgSend(v10, sel_insertNewObjectForEntityForName_inManagedObjectContext_, v11, a1);

    swift_dynamicCastUnknownClassUnconditional();
  }
}

uint64_t dispatch thunk of static NSManagedObjectUnique.findOrCreate(context:uniquenessPredicate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of static NSManagedObjectUnique.entityName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

void sub_1C270C824(uint64_t a1, void *a2)
{
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1C277B130();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBB86280);
  id v10 = a2;
  unsigned int v4 = sub_1C277B100();
  os_log_type_t v5 = sub_1C277BD20();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v11 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    sub_1C277C0D0();
    *(_WORD *)(v6 + 12) = 2080;
    swift_getWitnessTable();
    uint64_t v8 = sub_1C277C7B0();
    sub_1C263FDFC(v8, v9, &v11);
    sub_1C277C0D0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v4, v5, "Existing item %ld: %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v7, -1, -1);
    MEMORY[0x1C875D230](v6, -1, -1);
  }
  else
  {
  }
}

void sub_1C270CA44(void *a1, char a2)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  id v4 = objc_msgSend(a1, sel_persistentStoreCoordinator);
  if (!v4)
  {
    if (qword_1EBB86260 == -1)
    {
LABEL_11:
      uint64_t v15 = sub_1C277B130();
      __swift_project_value_buffer(v15, (uint64_t)qword_1EBB86280);
      uint64_t v16 = sub_1C277B100();
      os_log_type_t v17 = sub_1C277BD30();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v18 = 0;
        _os_log_impl(&dword_1C2601000, v16, v17, "No coordinator, unable to reset cache version", v18, 2u);
        MEMORY[0x1C875D230](v18, -1, -1);
      }

      return;
    }
LABEL_23:
    swift_once();
    goto LABEL_11;
  }
  os_log_type_t v5 = v4;
  id v6 = objc_msgSend(v4, sel_persistentStores);
  sub_1C2644ED8(0, &qword_1EBB84920);
  unint64_t v7 = sub_1C277BA40();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1C277C5A0();
    swift_bridgeObjectRelease();
    if (v20) {
      goto LABEL_4;
    }
  }
  else if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_4:
    if ((v7 & 0xC000000000000001) != 0)
    {
      id v8 = (id)MEMORY[0x1C875C230](0, v7);
LABEL_7:
      unint64_t v9 = v8;
      swift_bridgeObjectRelease();
      id v10 = objc_msgSend(v5, sel_metadataForPersistentStore_, v9);
      sub_1C277B760();

      sub_1C2689C60(0xD000000000000023, 0x80000001C278A4E0, v26);
      sub_1C262F2E4((uint64_t)v26);
      swift_bridgeObjectRetain();
      uint64_t v11 = (void *)sub_1C277B750();
      swift_bridgeObjectRelease();
      objc_msgSend(v5, sel_setMetadata_forPersistentStore_, v11, v9);

      *(void *)&v26[0] = 0;
      unsigned int v12 = objc_msgSend(a1, sel_save_, v26);
      id v13 = *(void **)&v26[0];
      if (v12)
      {
        if (a2)
        {
          *(void *)&v26[0] = 0;
          *((void *)&v26[0] + 1) = 0xE000000000000000;
          id v25 = v13;
          sub_1C277C2D0();
          sub_1C277B8D0();
          swift_getMetatypeMetadata();
          sub_1C277B860();
          sub_1C277B8D0();
          swift_bridgeObjectRelease();
          sub_1C277B8D0();
          sub_1C277C560();
          __break(1u);
        }
        else
        {
          id v14 = *(id *)&v26[0];

          swift_bridgeObjectRelease();
        }
      }
      else
      {
        id v19 = *(id *)&v26[0];
        swift_bridgeObjectRelease();
        sub_1C277A620();

        swift_willThrow();
      }
      return;
    }
    if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v8 = *(id *)(v7 + 32);
      goto LABEL_7;
    }
    __break(1u);
    goto LABEL_23;
  }
  swift_bridgeObjectRelease();
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_1C277B130();
  __swift_project_value_buffer(v21, (uint64_t)qword_1EBB86280);
  uint64_t v22 = sub_1C277B100();
  os_log_type_t v23 = sub_1C277BD30();
  if (os_log_type_enabled(v22, v23))
  {
    char v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v24 = 0;
    _os_log_impl(&dword_1C2601000, v22, v23, "No persistent stores, unable to reset cache version", v24, 2u);
    MEMORY[0x1C875D230](v24, -1, -1);
  }
}

void sub_1C270CF50(uint64_t a1, void *a2)
{
}

uint64_t sub_1C270CF58(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 32))(*a1, a1[1]);
}

unsigned char *storeEnumTagSinglePayload for NSManagedObjectUniqueError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C270D02CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for NSManagedObjectUniqueError()
{
  return &type metadata for NSManagedObjectUniqueError;
}

unint64_t sub_1C270D068()
{
  unint64_t result = qword_1EA304FC0;
  if (!qword_1EA304FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304FC0);
  }
  return result;
}

uint64_t static FeedItem.noSampleTypeCodeDefined.getter()
{
  return -1;
}

id FeedItem.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id FeedItem.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for FeedItem();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id FeedItem.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FeedItem();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t static InputSignalIdentifier.medicalIDUpdate.getter()
{
  return sub_1C277AED0();
}

uint64_t static InputSignalSet.LookupKey.medicalIDUpdate.getter()
{
  uint64_t v0 = sub_1C277AEE0();
  MEMORY[0x1F4188790](v0 - 8);
  sub_1C277AED0();
  type metadata accessor for MedicalIDChangesInputSignal();
  return sub_1C277ACD0();
}

uint64_t type metadata accessor for MedicalIDChangesInputSignal()
{
  return self;
}

uint64_t static MedicalIDChangesInputSignal.identityConfiguration.getter()
{
  uint64_t v0 = sub_1C277AEE0();
  MEMORY[0x1F4188790](v0 - 8);
  sub_1C277AED0();
  return sub_1C277AEB0();
}

uint64_t MedicalIDChangesInputSignal.identifier.getter()
{
  return sub_1C277AED0();
}

uint64_t MedicalIDChangesInputSignal.observer.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t MedicalIDChangesInputSignal.__allocating_init(context:observer:healthStore:medicalIDStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  return sub_1C270D3A4(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void *, void *, uint64_t, uint64_t, uint64_t))sub_1C270E240);
}

uint64_t MedicalIDChangesInputSignal.init(context:observer:healthStore:medicalIDStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  return sub_1C270D3A4(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void *, void *, uint64_t, uint64_t, uint64_t))sub_1C270DE68);
}

uint64_t sub_1C270D3A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, void *, void *, uint64_t, uint64_t, uint64_t))
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v16 = a7(a1, a3, a4, a5, a6, v7, ObjectType, a2);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return v16;
}

void sub_1C270D444(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C875D340](v3);
  if (v4)
  {
    id v5 = (void *)v4;
    id v6 = *(void **)(v4 + OBJC_IVAR____TtC14HealthPlatform27MedicalIDChangesInputSignal_medicalIDStore);
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v5;
    *(void *)(v7 + 24) = a2;
    aBlock[4] = sub_1C270EA10;
    aBlock[5] = v7;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_1C26601B0;
    aBlock[3] = &block_descriptor_14_0;
    id v8 = _Block_copy(aBlock);
    id v9 = v6;
    id v10 = v5;
    swift_release();
    objc_msgSend(v9, sel_fetchMedicalIDDataWithCompletion_, v8);
    _Block_release(v8);
  }
}

uint64_t sub_1C270D564(void *a1, void *a2, uint64_t a3, uint64_t a4, const char *a5)
{
  uint64_t v39 = a4;
  id v37 = a1;
  uint64_t v8 = sub_1C277AEE0();
  MEMORY[0x1F4188790](v8 - 8);
  sub_1C270E66C();
  uint64_t v10 = v9;
  uint64_t v38 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unsigned int v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v13 = a2;
    if (qword_1EBB82A50 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1C277B130();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EBB82A38);
    id v15 = a2;
    id v16 = a2;
    os_log_type_t v17 = sub_1C277B100();
    os_log_type_t v18 = sub_1C277BD40();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v36 = v10;
      uint64_t v20 = v19;
      id v33 = (void *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      uint64_t v41 = v35;
      *(_DWORD *)uint64_t v20 = 136315394;
      id v34 = a5;
      uint64_t v21 = sub_1C277C9E0();
      uint64_t v40 = sub_1C263FDFC(v21, v22, &v41);
      os_log_t v32 = v17;
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2112;
      id v23 = a2;
      uint64_t v24 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v40 = v24;
      sub_1C277C0D0();
      id v25 = v33;
      void *v33 = v24;

      os_log_t v26 = v32;
      _os_log_impl(&dword_1C2601000, v32, v18, v34, (uint8_t *)v20, 0x16u);
      sub_1C264E608();
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v25, -1, -1);
      uint64_t v27 = v35;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v27, -1, -1);
      uint64_t v28 = v20;
      uint64_t v10 = v36;
      MEMORY[0x1C875D230](v28, -1, -1);
    }
    else
    {
    }
  }
  swift_getObjectType();
  sub_1C277AED0();
  sub_1C2644ED8(0, &qword_1EBB84400);
  sub_1C270E6E0();
  id v29 = v37;
  sub_1C277B050();
  uint64_t v41 = a3;
  sub_1C270E5D8(&qword_1EBB843F0, v30, (void (*)(uint64_t))type metadata accessor for MedicalIDChangesInputSignal);
  sub_1C277AE40();
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v12, v10);
}

Swift::Void __swiftcall MedicalIDChangesInputSignal.stopObservation()()
{
}

uint64_t MedicalIDChangesInputSignal.description.getter()
{
  uint64_t v0 = sub_1C277AEE0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C277AED0();
  sub_1C270E5D8(&qword_1EBB841D8, 255, MEMORY[0x1E4F66E78]);
  uint64_t v4 = sub_1C277C7B0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

id MedicalIDChangesInputSignal.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void MedicalIDChangesInputSignal.init()()
{
}

id MedicalIDChangesInputSignal.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C270DDC0()
{
  return sub_1C277AED0();
}

uint64_t sub_1C270DDDC()
{
  return swift_unknownObjectRetain();
}

void sub_1C270DE14()
{
}

uint64_t sub_1C270DE38()
{
  return sub_1C277AB30();
}

id sub_1C270DE68(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, char *a6, uint64_t a7, uint64_t a8)
{
  id v37 = a4;
  uint64_t v38 = a8;
  uint64_t v35 = a2;
  uint64_t v36 = a5;
  uint64_t v39 = a3;
  uint64_t v34 = a1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v33 = sub_1C277BEA0();
  uint64_t v9 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C277BE40();
  MEMORY[0x1F4188790](v12);
  uint64_t v13 = sub_1C277B660();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v14 = OBJC_IVAR____TtC14HealthPlatform27MedicalIDChangesInputSignal_protectedState;
  sub_1C270EA34();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 0;
  *(void *)(v15 + 24) = 0;
  *(_DWORD *)(v15 + 32) = 0;
  *(void *)&a6[v14] = v15;
  uint64_t v32 = OBJC_IVAR____TtC14HealthPlatform27MedicalIDChangesInputSignal_observerQueue;
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85180);
  id v16 = a6;
  sub_1C277B650();
  uint64_t v42 = MEMORY[0x1E4FBC860];
  sub_1C270E5D8((unint64_t *)&unk_1EBB85160, 255, MEMORY[0x1E4FBCC10]);
  sub_1C270EA94();
  sub_1C270E5D8(qword_1EBB850D0, 255, (void (*)(uint64_t))sub_1C270EA94);
  uint64_t v18 = v34;
  uint64_t v17 = v35;
  sub_1C277C120();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FBCC58], v33);
  uint64_t v20 = v36;
  uint64_t v19 = v37;
  uint64_t v21 = (void *)sub_1C277BED0();
  *(void *)&a6[v32] = v21;
  unint64_t v22 = &v16[OBJC_IVAR____TtC14HealthPlatform27MedicalIDChangesInputSignal_context];
  uint64_t v23 = v38;
  *(void *)unint64_t v22 = v18;
  *((void *)v22 + 1) = v23;
  uint64_t v24 = &v16[OBJC_IVAR____TtC14HealthPlatform27MedicalIDChangesInputSignal_observer];
  uint64_t v25 = v39;
  *(void *)uint64_t v24 = v17;
  *((void *)v24 + 1) = v25;
  *(void *)&v16[OBJC_IVAR____TtC14HealthPlatform27MedicalIDChangesInputSignal_healthStore] = v19;
  if (v20)
  {
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    id v26 = v19;
    id v27 = v20;
  }
  else
  {
    id v28 = objc_allocWithZone(MEMORY[0x1E4F2B190]);
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    id v27 = objc_msgSend(v28, sel_initWithHealthStore_, v19);
  }
  *(void *)&v16[OBJC_IVAR____TtC14HealthPlatform27MedicalIDChangesInputSignal_medicalIDStore] = v27;
  sub_1C277AB40();
  swift_allocObject();
  id v29 = v20;
  id v30 = v21;
  *(void *)&v16[OBJC_IVAR____TtC14HealthPlatform27MedicalIDChangesInputSignal_observerToken] = sub_1C277AB20();

  v41.receiver = v16;
  v41.super_class = ObjectType;
  return objc_msgSendSuper2(&v41, sel_init);
}

id sub_1C270E240(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, Class a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = (char *)objc_allocWithZone(a6);

  return sub_1C270DE68(a1, a2, a3, a4, a5, v15, a7, a8);
}

void _s14HealthPlatform27MedicalIDChangesInputSignalC16beginObservation4from14configurationsy0A13Orchestration31SecureCodingOptionalValueAnchorVySo16_HKMedicalIDDataCAkG0lM6ObjectAAyHCg_GSg_SayAG21IdentityConfigurationVGtF_0()
{
  id v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  if (qword_1EBB85FE8 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1C277B130();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBB85FD0);
  uint64_t v4 = sub_1C277B100();
  os_log_type_t v5 = sub_1C277BD40();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    aBlock[0] = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v8 = sub_1C277C9E0();
    sub_1C263FDFC(v8, v9, aBlock);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v4, v5, "[%s] Beginning Observation", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v7, -1, -1);
    MEMORY[0x1C875D230](v6, -1, -1);
  }

  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = ObjectType;
  swift_retain();
  sub_1C277AB00();
  swift_release();
  swift_release();
  uint64_t v12 = *(void **)&v1[OBJC_IVAR____TtC14HealthPlatform27MedicalIDChangesInputSignal_medicalIDStore];
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v1;
  *(void *)(v13 + 24) = ObjectType;
  aBlock[4] = (uint64_t)sub_1C270E9B4;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = (uint64_t)sub_1C26601B0;
  aBlock[3] = (uint64_t)&block_descriptor_21;
  uint64_t v14 = _Block_copy(aBlock);
  uint64_t v15 = v1;
  swift_release();
  objc_msgSend(v12, sel_fetchMedicalIDDataWithCompletion_, v14);
  _Block_release(v14);
}

uint64_t sub_1C270E590(uint64_t a1, uint64_t a2)
{
  return sub_1C270E5D8(&qword_1EBB84410, a2, (void (*)(uint64_t))type metadata accessor for MedicalIDChangesInputSignal);
}

uint64_t sub_1C270E5D8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C270E620()
{
  return sub_1C270E5D8(&qword_1EBB84418, 255, (void (*)(uint64_t))sub_1C270E66C);
}

void sub_1C270E66C()
{
  if (!qword_1EBB84420)
  {
    sub_1C2644ED8(255, &qword_1EBB84400);
    sub_1C270E6E0();
    unint64_t v0 = sub_1C277B060();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB84420);
    }
  }
}

unint64_t sub_1C270E6E0()
{
  unint64_t result = qword_1EBB84428;
  if (!qword_1EBB84428)
  {
    sub_1C2644ED8(255, &qword_1EBB84400);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB84428);
  }
  return result;
}

uint64_t method lookup function for MedicalIDChangesInputSignal(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalIDChangesInputSignal);
}

uint64_t dispatch thunk of MedicalIDChangesInputSignal.__allocating_init(context:observer:healthStore:medicalIDStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

void *initializeBufferWithCopyOfBuffer for MedicalIDChangesInputSignal.State(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_unknownObjectRetain();
  id v4 = v3;
  return a1;
}

void destroy for MedicalIDChangesInputSignal.State(uint64_t a1)
{
  swift_unknownObjectRelease();
  objc_super v2 = *(void **)(a1 + 8);
}

void *assignWithCopy for MedicalIDChangesInputSignal.State(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  id v4 = (void *)a1[1];
  os_log_type_t v5 = (void *)a2[1];
  a1[1] = v5;
  id v6 = v5;

  return a1;
}

uint64_t assignWithTake for MedicalIDChangesInputSignal.State(uint64_t a1, _OWORD *a2)
{
  swift_unknownObjectRelease();
  id v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for MedicalIDChangesInputSignal.State(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MedicalIDChangesInputSignal.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicalIDChangesInputSignal.State()
{
  return &type metadata for MedicalIDChangesInputSignal.State;
}

uint64_t sub_1C270E93C()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C270E974()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C270E9AC()
{
  sub_1C270D444(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C270E9B4(void *a1, void *a2)
{
  return sub_1C270D564(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), "[%s] Failed to fetch initial medical id data. Returning no values to avoid blocking observation. Error: %@");
}

uint64_t sub_1C270E9D8()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C270EA10(void *a1, void *a2)
{
  return sub_1C270D564(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), "[%s] Failed to fetch updated medical id data. Error: %@");
}

void sub_1C270EA34()
{
  if (!qword_1EBB84408)
  {
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_1C277C370();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB84408);
    }
  }
}

void sub_1C270EA94()
{
  if (!qword_1EBB850C0)
  {
    sub_1C277BE40();
    unint64_t v0 = sub_1C277BB20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB850C0);
    }
  }
}

BOOL sub_1C270EB00(uint64_t a1, uint64_t a2)
{
  return _s14HealthPlatform17FeedItemPredicateO2eeoiySbAC_ACtFZ_0(*(void **)a1, *(void **)(a1 + 8), *(void **)(a1 + 16), *(unsigned char *)(a1 + 24), *(void **)a2, *(void **)(a2 + 8), *(void **)(a2 + 16), *(unsigned char *)(a2 + 24));
}

BOOL _s14HealthPlatform17FeedItemPredicateO2eeoiySbAC_ACtFZ_0(void *a1, void *a2, void *a3, char a4, void *a5, void *a6, void *a7, char a8)
{
  uint64_t v8 = a6;
  if (!a4)
  {
    if (a8) {
      return 0;
    }
    sub_1C264676C(a2);
    sub_1C264676C(v8);
    if ((sub_1C267154C((uint64_t)a1, (uint64_t)a5) & 1) == 0)
    {
      sub_1C264577C(v8);
      uint64_t v17 = a2;
LABEL_34:
      sub_1C264577C(v17);
      return 0;
    }
    if (a2 == (void *)1)
    {
      if (v8 == (void *)1) {
        return 1;
      }
      goto LABEL_33;
    }
    if (v8 != (void *)1)
    {
      if (!a2)
      {
        if (!v8) {
          return 1;
        }
        sub_1C264577C(v8);
        uint64_t v8 = 0;
        goto LABEL_33;
      }
      if (v8)
      {
        sub_1C2652E20();
        sub_1C264676C(a2);
        sub_1C264676C(v8);
        char v19 = sub_1C277C030();
        sub_1C264577C(v8);
        sub_1C264577C(v8);
        sub_1C264577C(a2);
        sub_1C264577C(a2);
        return (v19 & 1) != 0;
      }
    }
    uint64_t v8 = a2;
LABEL_33:
    uint64_t v17 = v8;
    goto LABEL_34;
  }
  if (a4 == 1)
  {
    if (a8 != 1) {
      return 0;
    }
    if (a1 == a5 && a2 == a6 || (uint64_t v14 = 0, (sub_1C277C7E0() & 1) != 0))
    {
      if (a3 == (void *)1) {
        return a7 == (void *)1;
      }
      if (a7 != (void *)1)
      {
        if (a3)
        {
          if (!a7) {
            return 0;
          }
          sub_1C2652E20();
          sub_1C264676C(a3);
          sub_1C264676C(a7);
          char v16 = sub_1C277C030();
          sub_1C264577C(a7);
          sub_1C264577C(a3);
          return (v16 & 1) != 0;
        }
        if (!a7) {
          return 1;
        }
      }
      return 0;
    }
  }
  else
  {
    if (a8 != 2) {
      return 0;
    }
    if (a1 != (void *)1)
    {
      if (a5 != (void *)1)
      {
        if (a1)
        {
          if (!a5) {
            return 0;
          }
          sub_1C2652E20();
          sub_1C2646704(a5, v8, a7, 2);
          sub_1C2646704(a1, a2, a3, 2);
          char v15 = sub_1C277C030();
          sub_1C2645714(a5, v8, a7, 2);
          sub_1C2645714(a1, a2, a3, 2);
          return (v15 & 1) != 0;
        }
        if (!a5) {
          return 1;
        }
      }
      return 0;
    }
    if (a5 != (void *)1)
    {
      sub_1C2645714((void *)1, a2, a3, 2);
      return 0;
    }
    uint64_t v14 = 1;
    sub_1C264676C((id)1);
  }
  return v14;
}

uint64_t assignWithCopy for FeedItemPredicate(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  int v4 = *(void **)(a2 + 8);
  os_log_type_t v5 = *(void **)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1C2646704(*(id *)a2, v4, v5, v6);
  uint64_t v7 = *(void **)a1;
  uint64_t v8 = *(void **)(a1 + 8);
  unint64_t v9 = *(void **)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  char v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_1C2645714(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for FeedItemPredicate(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  os_log_type_t v5 = *(void **)a1;
  uint64_t v7 = *(void **)(a1 + 8);
  char v6 = *(void **)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_1C2645714(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedItemPredicate(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedItemPredicate(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C270EF2C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = a2;
  return result;
}

uint64_t (*MockHealthPlatformOrchestrationContext.feedItemStorageHandler.getter())(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C270F074(0);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  os_log_type_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v0 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__feedItemStorageHandler;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  sub_1C277AFD0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(_OWORD *)(swift_allocObject() + 16) = v8;
  return sub_1C270F318;
}

void sub_1C270F074(uint64_t a1)
{
}

unint64_t sub_1C270F0A8()
{
  unint64_t result = qword_1EA305008;
  if (!qword_1EA305008)
  {
    sub_1C2621120(255, &qword_1EA305010);
    sub_1C2621120(255, &qword_1EBB82A30);
    sub_1C2644ED8(255, (unint64_t *)&qword_1EBB85100);
    unint64_t result = swift_getFunctionTypeMetadata2();
    atomic_store(result, (unint64_t *)&qword_1EA305008);
  }
  return result;
}

void *sub_1C270F150@<X0>(void *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for MockFeedItemStorage();
  unint64_t result = (void *)swift_allocObject();
  result[2] = sub_1C2737B1C;
  result[3] = 0;
  result[4] = sub_1C2737B1C;
  result[5] = 0;
  result[6] = sub_1C2736ADC;
  result[7] = 0;
  result[8] = sub_1C2736E30;
  result[9] = 0;
  a1[3] = v2;
  a1[4] = &protocol witness table for MockFeedItemStorage;
  *a1 = result;
  return result;
}

uint64_t sub_1C270F1F8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_1C270F318;
  *(void *)(v4 + 24) = v3;
  swift_beginAccess();
  sub_1C270F074(0);
  swift_retain();
  swift_retain();
  sub_1C277AFE0();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C270F2E0()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C270F318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2713C44(a1, a2, a3);
}

uint64_t MockHealthPlatformOrchestrationContext.feedItemStorageHandler.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C2710F68(a1, a2, (uint64_t)&unk_1F1DCCE30, (uint64_t)sub_1C270F36C, (uint64_t)&OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__feedItemStorageHandler, sub_1C270F074);
}

uint64_t sub_1C270F36C(void *a1, void *a2)
{
  return sub_1C2713C84(a1, a2);
}

void (*MockHealthPlatformOrchestrationContext.feedItemStorageHandler.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v2 = malloc(0x58uLL);
  *a1 = v2;
  swift_beginAccess();
  sub_1C270F074(0);
  v2[9] = sub_1C277AFC0();
  v2[10] = v3;
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = v4;
  v2[7] = sub_1C270F318;
  v2[8] = v6;
  swift_retain();
  return sub_1C270F44C;
}

void sub_1C270F44C(uint64_t a1, char a2)
{
}

uint64_t MockHealthPlatformOrchestrationContext.feedItemStorage(for:scope:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C270F074(0);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v16[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v3 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__feedItemStorageHandler;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  sub_1C277AFD0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v13 = (void (*)(void *, uint64_t *))v16[0];
  v16[0] = a1;
  v16[1] = a2;
  uint64_t v17 = a3;
  v13(v16, &v17);
  return swift_release();
}

uint64_t (*MockHealthPlatformOrchestrationContext.anchorStorageHandler.getter())(uint64_t a1, uint64_t a2)
{
  sub_1C270F734(0);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v0 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__anchorStorageHandler;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  sub_1C277AFD0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(_OWORD *)(swift_allocObject() + 16) = v8;
  return sub_1C270F95C;
}

void sub_1C270F734(uint64_t a1)
{
}

void sub_1C270F768(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1C270F7CC()
{
  unint64_t result = qword_1EA305028;
  if (!qword_1EA305028)
  {
    sub_1C2621120(255, &qword_1EA305030);
    sub_1C2621120(255, &qword_1EA305038);
    unint64_t result = swift_getFunctionTypeMetadata1();
    atomic_store(result, (unint64_t *)&qword_1EA305028);
  }
  return result;
}

uint64_t sub_1C270F854@<X0>(void *a1@<X8>)
{
  return sub_1C270FAE4(a1);
}

uint64_t sub_1C270F874(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_1C270F95C;
  *(void *)(v4 + 24) = v3;
  swift_beginAccess();
  sub_1C270F734(0);
  swift_retain();
  swift_retain();
  sub_1C277AFE0();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C270F95C(uint64_t a1, uint64_t a2)
{
  return sub_1C2713C0C(a1, a2);
}

uint64_t MockHealthPlatformOrchestrationContext.anchorStorageHandler.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C2710F68(a1, a2, (uint64_t)&unk_1F1DCCEF8, (uint64_t)sub_1C270F9B0, (uint64_t)&OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__anchorStorageHandler, sub_1C270F734);
}

uint64_t sub_1C270F9B0(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]);
}

void (*MockHealthPlatformOrchestrationContext.anchorStorageHandler.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v2 = malloc(0x58uLL);
  *a1 = v2;
  swift_beginAccess();
  sub_1C270F734(0);
  v2[9] = sub_1C277AFC0();
  v2[10] = v3;
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = v4;
  v2[7] = sub_1C270F95C;
  v2[8] = v6;
  swift_retain();
  return sub_1C270FAA8;
}

void sub_1C270FAA8(uint64_t a1, char a2)
{
}

uint64_t sub_1C270FAE4@<X0>(void *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for MockAnchorStorage();
  uint64_t v3 = (void *)swift_allocObject();
  v3[2] = sub_1C267D090(MEMORY[0x1E4FBC860]);
  v3[3] = nullsub_1;
  v3[4] = 0;
  v3[5] = nullsub_1;
  v3[6] = 0;
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  v3[3] = sub_1C26E4004;
  v3[4] = v4;
  swift_release();
  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  v3[5] = sub_1C26E40C4;
  v3[6] = v5;
  uint64_t result = swift_release();
  a1[3] = v2;
  a1[4] = &protocol witness table for MockAnchorStorage;
  *a1 = v3;
  return result;
}

uint64_t MockHealthPlatformOrchestrationContext.anchorStorage(for:)(uint64_t a1, uint64_t a2)
{
  sub_1C270F734(0);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v14[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v2 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__anchorStorageHandler;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  sub_1C277AFD0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v11 = (void (*)(void *))v14[0];
  v14[0] = a1;
  v14[1] = a2;
  v11(v14);
  return swift_release();
}

void *(*MockHealthPlatformOrchestrationContext.notificationManagerHandler.getter())(uint64_t a1, uint64_t a2)
{
  sub_1C270FEE8(0);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v0 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__notificationManagerHandler;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  sub_1C277AFD0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(_OWORD *)(swift_allocObject() + 16) = v8;
  return sub_1C27100FC;
}

void sub_1C270FEE8(uint64_t a1)
{
}

unint64_t sub_1C270FF1C()
{
  unint64_t result = qword_1EA305050;
  if (!qword_1EA305050)
  {
    sub_1C2621120(255, &qword_1EA305058);
    sub_1C2621120(255, &qword_1EBB82A30);
    unint64_t result = swift_getFunctionTypeMetadata1();
    atomic_store(result, (unint64_t *)&qword_1EA305050);
  }
  return result;
}

uint64_t sub_1C270FFA4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for MockPluginNotificationManager();
  memset(v3, 0, sizeof(v3));
  uint64_t v4 = 0;
  swift_allocObject();
  uint64_t result = MockPluginNotificationManager.init(contentStateManager:)((uint64_t)v3);
  *a1 = result;
  a1[1] = (uint64_t)&protocol witness table for MockPluginNotificationManager;
  return result;
}

uint64_t sub_1C2710014(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_1C27100FC;
  *(void *)(v4 + 24) = v3;
  swift_beginAccess();
  sub_1C270FEE8(0);
  swift_retain();
  swift_retain();
  sub_1C277AFE0();
  swift_endAccess();
  return swift_release();
}

void *sub_1C27100FC(uint64_t a1, uint64_t a2)
{
  return sub_1C2713B88(a1, a2);
}

uint64_t MockHealthPlatformOrchestrationContext.notificationManagerHandler.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C2710F68(a1, a2, (uint64_t)&unk_1F1DCCFC0, (uint64_t)sub_1C2710150, (uint64_t)&OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__notificationManagerHandler, sub_1C270FEE8);
}

uint64_t sub_1C2710150@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C2713BD0(a1, a2);
}

void (*MockHealthPlatformOrchestrationContext.notificationManagerHandler.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v2 = malloc(0x58uLL);
  *a1 = v2;
  swift_beginAccess();
  sub_1C270FEE8(0);
  v2[9] = sub_1C277AFC0();
  v2[10] = v3;
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = v4;
  v2[7] = sub_1C27100FC;
  v2[8] = v6;
  swift_retain();
  return sub_1C2710230;
}

void sub_1C2710230(uint64_t a1, char a2)
{
}

uint64_t MockHealthPlatformOrchestrationContext.notificationManager(for:)(uint64_t a1, uint64_t a2)
{
  void (*v12)(uint64_t *__return_ptr, void *);
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  void v16[2];

  sub_1C270FEE8(0);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v2 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__notificationManagerHandler;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  sub_1C277AFD0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v12 = (void (*)(uint64_t *__return_ptr, void *))v16[0];
  v16[0] = a1;
  v16[1] = a2;
  v12(&v15, v16);
  uint64_t result = swift_release();
  if (!v3) {
    return v15;
  }
  return result;
}

uint64_t (*MockHealthPlatformOrchestrationContext.sharedSummaryTransactionBuilderHandler.getter())(uint64_t a1, uint64_t a2)
{
  sub_1C271050C();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v0
     + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__sharedSummaryTransactionBuilderHandler;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  sub_1C277AFD0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(_OWORD *)(swift_allocObject() + 16) = v8;
  return sub_1C2710834;
}

void sub_1C271050C()
{
  if (!qword_1EA305068)
  {
    sub_1C27105AC(255, &qword_1EA305070, (void (*)(uint64_t))sub_1C2710588);
    unint64_t v0 = sub_1C277AFF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA305068);
    }
  }
}

uint64_t sub_1C2710588(uint64_t a1)
{
  return sub_1C27105AC(a1, &qword_1EA305078, (void (*)(uint64_t))sub_1C269B1E4);
}

uint64_t sub_1C27105AC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a2;
  if (!*a2)
  {
    a3(255);
    uint64_t result = swift_getFunctionTypeMetadata1();
    atomic_store(result, a2);
  }
  return result;
}

void sub_1C2710604(void (**a1)(id *))
{
  uint64_t v1 = *a1;
  id v2 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
  uint64_t v3 = (void *)sub_1C277B820();
  id v4 = objc_msgSend(v2, sel_initWithDomain_code_userInfo_, v3, -1, 0);

  id v5 = v4;
  char v6 = 1;
  v1(&v5);
}

uint64_t sub_1C27106B8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_1C2713D90;
  *(void *)(v4 + 24) = v3;
  swift_beginAccess();
  sub_1C271050C();
  swift_retain();
  swift_retain();
  sub_1C277AFE0();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C27107A0(uint64_t a1, uint64_t a2, void (*a3)(void *))
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  v8[0] = sub_1C26B339C;
  v8[1] = v6;
  a3(v8);

  return swift_release();
}

uint64_t sub_1C2710834(uint64_t a1, uint64_t a2)
{
  return sub_1C27107A0(a1, a2, *(void (**)(void *))(v2 + 16));
}

uint64_t MockHealthPlatformOrchestrationContext.sharedSummaryTransactionBuilderHandler.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C2710F68(a1, a2, (uint64_t)&unk_1F1DCD088, (uint64_t)sub_1C2710878, (uint64_t)&OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__sharedSummaryTransactionBuilderHandler, (void (*)(void))sub_1C271050C);
}

void (*MockHealthPlatformOrchestrationContext.sharedSummaryTransactionBuilderHandler.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v2 = malloc(0x58uLL);
  *a1 = v2;
  swift_beginAccess();
  sub_1C271050C();
  v2[9] = sub_1C277AFC0();
  v2[10] = v3;
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = v4;
  v2[7] = sub_1C2713D90;
  v2[8] = v6;
  swift_retain();
  return sub_1C2710944;
}

void sub_1C2710944(uint64_t a1, char a2)
{
}

uint64_t MockHealthPlatformOrchestrationContext.sharedSummaryTransactionBuilder(completion:)(uint64_t a1, uint64_t a2)
{
  sub_1C271050C();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v15[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v2
      + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__sharedSummaryTransactionBuilderHandler;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  sub_1C277AFD0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v11 = (void (*)(void *))v15[0];
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  v15[0] = sub_1C26B339C;
  v15[1] = v12;
  v11(v15);
  swift_release();
  return swift_release();
}

uint64_t sub_1C2710AEC()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t (*MockHealthPlatformOrchestrationContext.sharingSummaryProfileTransactionBuilderHandler.getter())(uint64_t)
{
  sub_1C2710C3C(0);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v0
     + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__sharingSummaryProfileTransactionBuilderHandler;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  sub_1C277AFD0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(_OWORD *)(swift_allocObject() + 16) = v8;
  return sub_1C2710F28;
}

void sub_1C2710C3C(uint64_t a1)
{
}

unint64_t sub_1C2710C70()
{
  unint64_t result = qword_1EA305090;
  if (!qword_1EA305090)
  {
    sub_1C270F768(255, &qword_1EBB80D40, (uint64_t (*)(uint64_t))type metadata accessor for CachingSharedSummaryTransactionBuilder, MEMORY[0x1E4FBB718]);
    sub_1C2644ED8(255, (unint64_t *)&qword_1EBB82FE0);
    unint64_t result = swift_getFunctionTypeMetadata1();
    atomic_store(result, (unint64_t *)&qword_1EA305090);
  }
  return result;
}

double sub_1C2710D10@<D0>(void *a1@<X0>, uint64_t (*a2)(void)@<X3>, void *a3@<X4>, _OWORD *a4@<X8>)
{
  uint64_t v7 = a2(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v13 - v9;
  uint64_t v11 = *a1 + *a3;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  sub_1C277AFD0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  double result = v13[0];
  *a4 = *(_OWORD *)v13;
  return result;
}

void sub_1C2710E38(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1C2710E40(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_1C2710F28;
  *(void *)(v4 + 24) = v3;
  swift_beginAccess();
  sub_1C2710C3C(0);
  swift_retain();
  swift_retain();
  sub_1C277AFE0();
  swift_endAccess();
  return swift_release();
}

uint64_t MockHealthPlatformOrchestrationContext.sharingSummaryProfileTransactionBuilderHandler.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C2710F68(a1, a2, (uint64_t)&unk_1F1DCD178, (uint64_t)sub_1C2711018, (uint64_t)&OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__sharingSummaryProfileTransactionBuilderHandler, sub_1C2710C3C);
}

uint64_t sub_1C2710F68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void))
{
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  swift_beginAccess();
  a6(0);
  swift_retain();
  sub_1C277AFE0();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C2711018@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 16))(*a1);
  *a2 = result;
  return result;
}

void (*MockHealthPlatformOrchestrationContext.sharingSummaryProfileTransactionBuilderHandler.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v2 = malloc(0x58uLL);
  *a1 = v2;
  swift_beginAccess();
  sub_1C2710C3C(0);
  v2[9] = sub_1C277AFC0();
  v2[10] = v3;
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = v4;
  v2[7] = sub_1C2710F28;
  v2[8] = v6;
  swift_retain();
  return sub_1C2711114;
}

void sub_1C2711114(uint64_t a1, char a2)
{
}

void sub_1C2711150(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void *)(*(void *)a1 + 56);
  uint64_t v8 = *(void (**)(void *, void))(*(void *)a1 + 72);
  uint64_t v9 = *(void **)(*(void *)a1 + 80);
  uint64_t v10 = *(void *)(*(void *)a1 + 64);
  if (a2)
  {
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v7;
    *(void *)(v12 + 24) = v10;
    *uint64_t v9 = a6;
    v9[1] = v12;
    swift_retain();
    swift_release();
    swift_release();
    v8(v6, 0);
    swift_endAccess();
  }
  else
  {
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v7;
    *(void *)(v14 + 24) = v10;
    *uint64_t v9 = a4;
    v9[1] = v14;
    v8(v6, 0);
    swift_endAccess();
    swift_release();
  }

  free(v6);
}

uint64_t MockHealthPlatformOrchestrationContext.sharingSummaryProfileTransactionBuilder(transaction:)(void (*a1)(uint64_t *__return_ptr, void))
{
  void (*v9)(uint64_t *__return_ptr, void);
  uint64_t v11;
  void (*v12)(uint64_t *__return_ptr, void);

  sub_1C2710C3C(0);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1
     + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__sharingSummaryProfileTransactionBuilderHandler;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  sub_1C277AFD0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v9 = v12;
  uint64_t v12 = a1;
  v9(&v11, &v12);
  swift_release();
  return v11;
}

void *MockHealthPlatformOrchestrationContext.optionalHealthStore.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext_optionalHealthStore);
  id v2 = v1;
  return v1;
}

id MockHealthPlatformOrchestrationContext.primaryProfileHealthStore.getter()
{
  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext_primaryProfileHealthStore));
}

uint64_t MockHealthPlatformOrchestrationContext.__allocating_init(healthStore:primaryProfileHealthStore:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  MockHealthPlatformOrchestrationContext.init(healthStore:primaryProfileHealthStore:)(a1, a2);
  return v4;
}

uint64_t MockHealthPlatformOrchestrationContext.init(healthStore:primaryProfileHealthStore:)(uint64_t a1, uint64_t a2)
{
  uint64_t v37 = a1;
  uint64_t v38 = a2;
  sub_1C2710C3C(0);
  uint64_t v35 = *(void *)(v3 - 8);
  uint64_t v36 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v34 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C271050C();
  uint64_t v32 = *(void *)(v5 - 8);
  uint64_t v33 = v5;
  MEMORY[0x1F4188790](v5);
  BOOL v31 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C270FEE8(0);
  uint64_t v30 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C270F734(0);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  char v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C270F074(0);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = v2 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__feedItemStorageHandler;
  uint64_t v39 = sub_1C270F150;
  uint64_t v40 = 0;
  sub_1C270F0A8();
  sub_1C277AFB0();
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v21, v20, v17);
  uint64_t v22 = v2 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__anchorStorageHandler;
  uint64_t v39 = sub_1C270F854;
  uint64_t v40 = 0;
  sub_1C270F7CC();
  sub_1C277AFB0();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v22, v15, v12);
  uint64_t v23 = v2 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__notificationManagerHandler;
  uint64_t v39 = sub_1C270FFA4;
  uint64_t v40 = 0;
  sub_1C270FF1C();
  sub_1C277AFB0();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v23, v10, v30);
  uint64_t v24 = v2
      + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__sharedSummaryTransactionBuilderHandler;
  uint64_t v39 = sub_1C2710604;
  uint64_t v40 = 0;
  sub_1C27105AC(0, &qword_1EA305070, (void (*)(uint64_t))sub_1C2710588);
  uint64_t v25 = v31;
  sub_1C277AFB0();
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v24, v25, v33);
  uint64_t v26 = v2
      + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__sharingSummaryProfileTransactionBuilderHandler;
  uint64_t v39 = sub_1C2710E38;
  uint64_t v40 = 0;
  sub_1C2710C70();
  id v27 = v34;
  sub_1C277AFB0();
  (*(void (**)(uint64_t, char *, uint64_t))(v35 + 32))(v26, v27, v36);
  sub_1C277B120();
  *(void *)(v2 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext_optionalHealthStore) = v37;
  *(void *)(v2 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext_primaryProfileHealthStore) = v38;
  return v2;
}

uint64_t MockHealthPlatformOrchestrationContext.logger.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext_logger;
  swift_beginAccess();
  uint64_t v4 = sub_1C277B130();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MockHealthPlatformOrchestrationContext.logger.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext_logger;
  swift_beginAccess();
  uint64_t v4 = sub_1C277B130();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*MockHealthPlatformOrchestrationContext.logger.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C2711A2C()
{
  if (*v0) {
    return 0x696669746E656469;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_1C2711A64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C2713A08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C2711A8C(uint64_t a1)
{
  unint64_t v2 = sub_1C2711CD0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2711AC8(uint64_t a1)
{
  unint64_t v2 = sub_1C2711CD0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t MockHealthPlatformOrchestrationContext.Description.encode(to:)(void *a1)
{
  sub_1C2712044(0, &qword_1EA3050A0, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2711CD0();
  sub_1C277C9B0();
  v9[15] = 0;
  sub_1C277C750();
  if (!v1)
  {
    type metadata accessor for MockHealthPlatformOrchestrationContext.Description(0);
    v9[14] = 1;
    sub_1C277A8A0();
    sub_1C27120A8(&qword_1EA304C38, MEMORY[0x1E4F27990]);
    sub_1C277C710();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1C2711CD0()
{
  unint64_t result = qword_1EA3050A8;
  if (!qword_1EA3050A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3050A8);
  }
  return result;
}

uint64_t type metadata accessor for MockHealthPlatformOrchestrationContext.Description(uint64_t a1)
{
  return sub_1C2635628(a1, (uint64_t *)&unk_1EA3050F8);
}

uint64_t MockHealthPlatformOrchestrationContext.Description.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = a2;
  sub_1C2712010(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2712044(0, &qword_1EA3050B0, MEMORY[0x1E4FBBDC0]);
  uint64_t v17 = *(void *)(v7 - 8);
  uint64_t v18 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v15 - v8;
  uint64_t v10 = type metadata accessor for MockHealthPlatformOrchestrationContext.Description(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (uint64_t *)((char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2711CD0();
  sub_1C277C9A0();
  if (!v2)
  {
    uint64_t v13 = v17;
    char v20 = 0;
    *uint64_t v12 = sub_1C277C6C0();
    sub_1C277A8A0();
    char v19 = 1;
    sub_1C27120A8(&qword_1EA304C48, MEMORY[0x1E4F27990]);
    sub_1C277C680();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v18);
    sub_1C27120F0((uint64_t)v6, (uint64_t)v12 + *(int *)(v10 + 20), (uint64_t (*)(void))sub_1C2712010);
    sub_1C27120F0((uint64_t)v12, v16, type metadata accessor for MockHealthPlatformOrchestrationContext.Description);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

void sub_1C2712010(uint64_t a1)
{
}

void sub_1C2712044(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C2711CD0();
    unint64_t v7 = a3(a1, &type metadata for MockHealthPlatformOrchestrationContext.Description.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C27120A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C27120F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C2712158@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return MockHealthPlatformOrchestrationContext.Description.init(from:)(a1, a2);
}

uint64_t sub_1C2712170(void *a1)
{
  return MockHealthPlatformOrchestrationContext.Description.encode(to:)(a1);
}

uint64_t MockHealthPlatformOrchestrationContext.contextDescription.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext_optionalHealthStore);
  if (v3 && (id v4 = objc_msgSend(v3, sel_profileIdentifier)) != 0)
  {
    uint64_t v5 = v4;
    id v6 = objc_msgSend(v4, sel_type);
    unint64_t v7 = (char *)a1 + *(int *)(type metadata accessor for MockHealthPlatformOrchestrationContext.Description(0) + 20);
    id v8 = objc_msgSend(v5, sel_identifier);
    sub_1C277A880();

    uint64_t v9 = sub_1C277A8A0();
    uint64_t result = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 0, 1, v9);
  }
  else
  {
    uint64_t v11 = (char *)a1 + *(int *)(type metadata accessor for MockHealthPlatformOrchestrationContext.Description(0) + 20);
    uint64_t v12 = sub_1C277A8A0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
    id v6 = 0;
  }
  *a1 = v6;
  return result;
}

uint64_t MockHealthPlatformOrchestrationContext.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__feedItemStorageHandler;
  sub_1C270F074(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__anchorStorageHandler;
  sub_1C270F734(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__notificationManagerHandler;
  sub_1C270FEE8(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v0
     + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__sharedSummaryTransactionBuilderHandler;
  sub_1C271050C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v0
     + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__sharingSummaryProfileTransactionBuilderHandler;
  sub_1C2710C3C(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext_primaryProfileHealthStore));
  uint64_t v11 = v0 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext_logger;
  uint64_t v12 = sub_1C277B130();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  return v0;
}

uint64_t MockHealthPlatformOrchestrationContext.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__feedItemStorageHandler;
  sub_1C270F074(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__anchorStorageHandler;
  sub_1C270F734(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__notificationManagerHandler;
  sub_1C270FEE8(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v0
     + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__sharedSummaryTransactionBuilderHandler;
  sub_1C271050C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v0
     + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__sharingSummaryProfileTransactionBuilderHandler;
  sub_1C2710C3C(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext_primaryProfileHealthStore));
  uint64_t v11 = v0 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext_logger;
  uint64_t v12 = sub_1C277B130();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);

  return swift_deallocClassInstance();
}

uint64_t sub_1C27126BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MockHealthPlatformOrchestrationContext.feedItemStorage(for:scope:)(a1, a2, a3);
}

uint64_t sub_1C27126D4(uint64_t a1, uint64_t a2)
{
  sub_1C270F734(0);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v14[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v2 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__anchorStorageHandler;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  sub_1C277AFD0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v11 = (void (*)(void *))v14[0];
  v14[0] = a1;
  v14[1] = a2;
  v11(v14);
  return swift_release();
}

uint64_t sub_1C271282C(uint64_t a1, uint64_t a2)
{
  return MockHealthPlatformOrchestrationContext.notificationManager(for:)(a1, a2);
}

void *sub_1C271284C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext_optionalHealthStore);
  id v2 = v1;
  return v1;
}

id sub_1C271287C()
{
  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext_primaryProfileHealthStore));
}

uint64_t sub_1C2712890@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext_logger;
  swift_beginAccess();
  uint64_t v4 = sub_1C277B130();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1C2712914(uint64_t *a1, uint64_t *a2)
{
  return _s14HealthPlatform04MockaB20OrchestrationContextC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t _s14HealthPlatform04MockaB20OrchestrationContextC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a1 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext_optionalHealthStore);
  if (v3)
  {
    id v4 = objc_msgSend(v3, sel_profileIdentifier);
    uint64_t v5 = *(void **)(a2 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext_optionalHealthStore);
    if (!v5)
    {
      if (!v4) {
        goto LABEL_14;
      }
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v5 = *(void **)(a2 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext_optionalHealthStore);
    if (!v5) {
      goto LABEL_14;
    }
    id v4 = 0;
  }
  id v6 = objc_msgSend(v5, sel_profileIdentifier);
  uint64_t v7 = v6;
  if (!v4)
  {
    if (v6)
    {
      char v9 = 0;
      goto LABEL_13;
    }
LABEL_14:
    char v9 = 1;
    return v9 & 1;
  }
  if (!v6)
  {
LABEL_10:
    char v9 = 0;
    uint64_t v7 = v4;
    goto LABEL_13;
  }
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85E90);
  id v8 = v4;
  char v9 = sub_1C277C030();

LABEL_13:
  return v9 & 1;
}

uint64_t sub_1C2712A0C()
{
  return sub_1C27120A8(&qword_1EA3050B8, (void (*)(uint64_t))type metadata accessor for MockHealthPlatformOrchestrationContext.Description);
}

uint64_t sub_1C2712A54()
{
  return sub_1C27120A8(&qword_1EA3050C0, (void (*)(uint64_t))type metadata accessor for MockHealthPlatformOrchestrationContext.Description);
}

uint64_t sub_1C2712A9C(uint64_t a1)
{
  uint64_t result = sub_1C27120A8(&qword_1EA3050C8, (void (*)(uint64_t))type metadata accessor for MockHealthPlatformOrchestrationContext);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for MockHealthPlatformOrchestrationContext(uint64_t a1)
{
  return sub_1C2635628(a1, (uint64_t *)&unk_1EA3050E8);
}

uint64_t sub_1C2712B14(uint64_t a1)
{
  uint64_t result = sub_1C27120A8(&qword_1EA3050D0, (void (*)(uint64_t))type metadata accessor for MockHealthPlatformOrchestrationContext);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C2712B6C()
{
  return sub_1C27120A8(&qword_1EA3050D8, (void (*)(uint64_t))type metadata accessor for MockHealthPlatformOrchestrationContext);
}

uint64_t sub_1C2712BB4()
{
  return sub_1C27120A8(&qword_1EA3050E0, (void (*)(uint64_t))type metadata accessor for MockHealthPlatformOrchestrationContext.Description);
}

double sub_1C2712BFC@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1C2710D10(a1, (uint64_t (*)(void))sub_1C270F074, &OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__feedItemStorageHandler, a2);
}

double sub_1C2712C34@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1C2710D10(a1, (uint64_t (*)(void))sub_1C270F734, &OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__anchorStorageHandler, a2);
}

double sub_1C2712C6C@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1C2710D10(a1, (uint64_t (*)(void))sub_1C270FEE8, &OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__notificationManagerHandler, a2);
}

double sub_1C2712CA4@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1C2710D10(a1, (uint64_t (*)(void))sub_1C271050C, &OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__sharedSummaryTransactionBuilderHandler, a2);
}

double sub_1C2712CDC@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1C2710D10(a1, (uint64_t (*)(void))sub_1C2710C3C, &OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__sharingSummaryProfileTransactionBuilderHandler, a2);
}

uint64_t sub_1C2712D14()
{
  return type metadata accessor for MockHealthPlatformOrchestrationContext(0);
}

void sub_1C2712D1C()
{
  sub_1C270F074(319);
  if (v0 <= 0x3F)
  {
    sub_1C270F734(319);
    if (v1 <= 0x3F)
    {
      sub_1C270FEE8(319);
      if (v2 <= 0x3F)
      {
        sub_1C271050C();
        if (v3 <= 0x3F)
        {
          sub_1C2710C3C(319);
          if (v4 <= 0x3F)
          {
            sub_1C277B130();
            if (v5 <= 0x3F) {
              swift_updateClassMetadata2();
            }
          }
        }
      }
    }
  }
}

uint64_t method lookup function for MockHealthPlatformOrchestrationContext(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MockHealthPlatformOrchestrationContext);
}

uint64_t dispatch thunk of MockHealthPlatformOrchestrationContext.__allocating_init(healthStore:primaryProfileHealthStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t *initializeBufferWithCopyOfBuffer for MockHealthPlatformOrchestrationContext.Description(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(a3 + 20);
    id v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_1C277A8A0();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      sub_1C2712010(0);
      memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t destroy for MockHealthPlatformOrchestrationContext.Description(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_1C277A8A0();
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(v2, v3);
  }
  return result;
}

void *initializeWithCopy for MockHealthPlatformOrchestrationContext.Description(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1C277A8A0();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1C2712010(0);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *assignWithCopy for MockHealthPlatformOrchestrationContext.Description(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1C277A8A0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(v5, 1, v7);
  int v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 24))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    sub_1C2712010(0);
    memcpy(v5, v6, *(void *)(*(void *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v6, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

void *initializeWithTake for MockHealthPlatformOrchestrationContext.Description(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1C277A8A0();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1C2712010(0);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *assignWithTake for MockHealthPlatformOrchestrationContext.Description(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1C277A8A0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(v5, 1, v7);
  int v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 40))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    sub_1C2712010(0);
    memcpy(v5, v6, *(void *)(*(void *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for MockHealthPlatformOrchestrationContext.Description(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C2713668);
}

uint64_t sub_1C2713668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  sub_1C2712010(0);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for MockHealthPlatformOrchestrationContext.Description(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C27136EC);
}

uint64_t sub_1C27136EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  sub_1C2712010(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

void sub_1C2713760()
{
  sub_1C2712010(319);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unsigned char *storeEnumTagSinglePayload for MockHealthPlatformOrchestrationContext.Description.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C27138C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MockHealthPlatformOrchestrationContext.Description.CodingKeys()
{
  return &type metadata for MockHealthPlatformOrchestrationContext.Description.CodingKeys;
}

unint64_t sub_1C2713904()
{
  unint64_t result = qword_1EA305108;
  if (!qword_1EA305108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA305108);
  }
  return result;
}

unint64_t sub_1C271395C()
{
  unint64_t result = qword_1EA305110;
  if (!qword_1EA305110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA305110);
  }
  return result;
}

unint64_t sub_1C27139B4()
{
  unint64_t result = qword_1EA305118;
  if (!qword_1EA305118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA305118);
  }
  return result;
}

uint64_t sub_1C2713A08(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C277C7E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C277C7E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C2713AF8(uint64_t a1)
{
  void (*v2)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v4;
  uint64_t v5;

  BOOL v2 = *(void (**)(uint64_t *__return_ptr, uint64_t *))(v1 + 16);
  uint64_t v5 = a1;
  v2(&v4, &v5);
  return v4;
}

uint64_t sub_1C2713B38(_OWORD *a1)
{
  BOOL v2 = *(uint64_t (**)(void, _OWORD *))(v1 + 16);
  v4[1] = *a1;
  return v2(sub_1C26E44D0, v4);
}

void *sub_1C2713B88(uint64_t a1, uint64_t a2)
{
  void *(*v4)(uint64_t *__return_ptr, void *);
  void *result;
  uint64_t v6;
  void v7[2];

  v7[1] = a2;
  unsigned int v4 = *(void *(**)(uint64_t *__return_ptr, void *))(v2 + 16);
  v7[0] = a1;
  unint64_t result = v4(&v6, v7);
  if (!v3) {
    return (void *)v6;
  }
  return result;
}

uint64_t sub_1C2713BD0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v2 + 16))(*a1, a1[1]);
  if (!v3)
  {
    *a2 = result;
    a2[1] = v6;
  }
  return result;
}

uint64_t sub_1C2713C0C(uint64_t a1, uint64_t a2)
{
  v5[1] = a2;
  uint64_t v3 = *(uint64_t (**)(void *))(v2 + 16);
  v5[0] = a1;
  return v3(v5);
}

uint64_t sub_1C2713C44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v6[1] = a2;
  unsigned int v4 = *(uint64_t (**)(void *, uint64_t *))(v3 + 16);
  v6[0] = a1;
  uint64_t v7 = a3;
  return v4(v6, &v7);
}

uint64_t sub_1C2713C84(void *a1, void *a2)
{
  return (*(uint64_t (**)(void, void, void))(v2 + 16))(*a1, a1[1], *a2);
}

uint64_t sub_1C2713CBC()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2713CF4()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2713D94(void *a1)
{
  return sub_1C270F9B0(a1);
}

id static FeedSection.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v1 = (void *)sub_1C277B820();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

void sub_1C2713E20(uint64_t a1, void **a2)
{
  id v2 = *a2;
  id v3 = (id)sub_1C277B820();
  objc_msgSend(v2, sel_setIdentifier_, v3);
}

char *keypath_get_selector_feed()
{
  return sel_feed;
}

id sub_1C2713E90@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_feed);
  *a2 = result;
  return result;
}

id sub_1C2713ECC(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFeed_, *a1);
}

id sub_1C2713EE0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_feedItems);
  *a2 = result;
  return result;
}

id sub_1C2713F1C(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFeedItems_, *a1);
}

char *keypath_get_selector_isCollapsible()
{
  return sel_isCollapsible;
}

id sub_1C2713F3C@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_isCollapsible);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1C2713F70(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIsCollapsible_, *a1);
}

id sub_1C2713F84@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_sortOrder);
  *a2 = result;
  return result;
}

id sub_1C2713FB8(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSortOrder_, *a1);
}

uint64_t Publisher.signposted(dso:log:name:signpostID:metadata:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v28 = a7;
  int v27 = a5;
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  sub_1C263192C(0, qword_1EBB853D8, MEMORY[0x1E4FBD318], MEMORY[0x1E4FBB718]);
  uint64_t v17 = MEMORY[0x1F4188790](v16 - 8);
  char v19 = (char *)&v25 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v21, v10, a10);
  sub_1C26319A8(a6, (uint64_t)v19);
  id v23 = a2;
  swift_bridgeObjectRetain();
  return Publishers.Signpost.init(_:dso:log:name:signpostID:metadata:)((uint64_t)v21, a1, v23, v25, v26, v27, (uint64_t)v19, v28, a9, a8, a10);
}

uint64_t Publishers.Signpost.upstream.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t Publishers.Signpost.dso.getter(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 36));
}

id Publishers.Signpost.log.getter(uint64_t a1)
{
  return *(id *)(v1 + *(int *)(a1 + 40));
}

uint64_t Publishers.Signpost.name.getter(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 44));
}

uint64_t Publishers.Signpost.signpostID.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 48);
  uint64_t v5 = sub_1C277B0D0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t Publishers.Signpost.metadata.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 52));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t *sub_1C2714284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1C261A488(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1C2714328()
{
  uint64_t v1 = sub_1C277C940();
  MEMORY[0x1F4188790](v1 - 8);
  id v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C263192C(0, &qword_1EA304570, MEMORY[0x1E4FBC420], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v9 - v5;
  uint64_t v10 = v0;
  uint64_t v7 = sub_1C277C930();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  sub_1C2686504((uint64_t)v3);
  swift_retain();
  return sub_1C277C970();
}

void sub_1C27144B8(void *a1@<X8>)
{
  a1[3] = MEMORY[0x1E4FBB1A0];
  *a1 = 0x74736F706E676953;
  a1[1] = 0xE800000000000000;
}

void sub_1C27144E0()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + *(void *)(*(void *)v0 + 160)) + 16);
  os_unfair_lock_lock(v1);
  uint64_t v2 = v0 + *(void *)(*(void *)v0 + 168);
  swift_beginAccess();
  sub_1C2630D78(v2, (uint64_t)&v3);
  if (v6)
  {
    sub_1C2630BCC((uint64_t)&v3);
    os_unfair_lock_unlock(v1);
  }
  else
  {
    sub_1C261F308((long long *)&v3, (uint64_t)v7);
    uint64_t v3 = 1;
    long long v4 = 0u;
    long long v5 = 0u;
    char v6 = 2;
    swift_beginAccess();
    sub_1C26305D4((uint64_t)&v3, v2);
    swift_endAccess();
    os_unfair_lock_unlock(v1);
    sub_1C277BFB0();
    sub_1C277B0B0();
    __swift_project_boxed_opaque_existential_1(v7, v7[3]);
    sub_1C277B2F0();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
  }
}

uint64_t sub_1C2714698()
{
  return 0x74736F706E676953;
}

uint64_t sub_1C27146B0()
{
  return sub_1C2714328();
}

void sub_1C27146D4(void *a1@<X8>)
{
}

void sub_1C27146F8()
{
}

uint64_t sub_1C271471C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C277B0D0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1C2714814(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = sub_1C277B0D0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = *(void *)(v9 + 64) + 7;
  unsigned int v12 = v10 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (v12 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || ((v11
       + ((v10 + ((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 17) & ~v10)) & 0xFFFFFFFFFFFFFFF8)
     + 16 > 0x18)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + (((v12 | 7) + 16) & ~(unint64_t)(v12 | 7)));
    swift_retain();
  }
  else
  {
    uint64_t v16 = v8;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    uint64_t v17 = (void *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v18 = (void *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v17 = *v18;
    char v19 = (void *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v20 = (void **)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v21 = *v20;
    void *v19 = *v20;
    unint64_t v22 = ((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v23 = ((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8;
    long long v24 = *(_OWORD *)v23;
    *(unsigned char *)(v22 + 16) = *(unsigned char *)(v23 + 16);
    *(_OWORD *)unint64_t v22 = v24;
    uint64_t v25 = (v22 + v10 + 17) & ~v10;
    uint64_t v26 = (v23 + v10 + 17) & ~v10;
    int v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
    id v28 = v21;
    v27(v25, v26, v16);
    uint64_t v29 = (void *)((v11 + v25) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v30 = (void *)((v11 + v26) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v29 = *v30;
    v29[1] = v30[1];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1C2714A38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  uint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  uint64_t v9 = (void **)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void **)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = *v10;
  unsigned int v12 = *v9;
  *uint64_t v9 = *v10;
  id v13 = v11;

  unint64_t v14 = ((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = ((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v14 = *(void *)v15;
  *(void *)(v14 + 8) = *(void *)(v15 + 8);
  *(unsigned char *)(v14 + 16) = *(unsigned char *)(v15 + 16);
  uint64_t v16 = sub_1C277B0D0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = v17 + 24;
  uint64_t v19 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v20 = (v19 + 17 + v14) & ~v19;
  uint64_t v21 = (v19 + 17 + v15) & ~v19;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 24))(v20, v21, v16);
  uint64_t v22 = *(void *)(v18 + 40) + 7;
  unint64_t v23 = (void *)((v22 + v20) & 0xFFFFFFFFFFFFFFF8);
  long long v24 = (void *)((v22 + v21) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C2714B7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  uint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  uint64_t v9 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  unint64_t v11 = ((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = ((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v10) = *(unsigned char *)(v12 + 16);
  *(_OWORD *)unint64_t v11 = *(_OWORD *)v12;
  *(unsigned char *)(v11 + 16) = (_BYTE)v10;
  uint64_t v13 = sub_1C277B0D0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = v14 + 32;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = (v16 + 17 + v11) & ~v16;
  uint64_t v18 = (v16 + 17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v17, v18, v13);
  *(_OWORD *)((*(void *)(v15 + 32) + 7 + v17) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v15 + 32)
                                                                                       + 7
                                                                                       + v18) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1C2714C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  uint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  uint64_t v9 = (void **)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void **)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v11 = *v9;
  *uint64_t v9 = *v10;

  unint64_t v12 = ((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = ((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v12 = *(void *)v13;
  *(void *)(v12 + 8) = *(void *)(v13 + 8);
  *(unsigned char *)(v12 + 16) = *(unsigned char *)(v13 + 16);
  uint64_t v14 = sub_1C277B0D0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = v15 + 40;
  uint64_t v17 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (v17 + 17 + v12) & ~v17;
  uint64_t v19 = (v17 + 17 + v13) & ~v17;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 40))(v18, v19, v14);
  uint64_t v20 = *(void *)(v16 + 24) + 7;
  uint64_t v21 = (void *)((v20 + v18) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = (void *)((v20 + v19) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C2714DCC(int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = sub_1C277B0D0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v6 + 64);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v7 <= *(_DWORD *)(v9 + 84)) {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v12 = v7;
  }
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v13 = 0x7FFFFFFF;
  }
  else {
    unsigned int v13 = v12;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v14 = v11 + 17;
  if (v13 < a2)
  {
    unint64_t v15 = ((*(void *)(*(void *)(v8 - 8) + 64)
          + ((v14 + ((((((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v11)
          + 7) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    uint64_t v16 = v15 & 0xFFFFFFF8;
    if ((v15 & 0xFFFFFFF8) != 0) {
      unsigned int v17 = 2;
    }
    else {
      unsigned int v17 = a2 - v13 + 1;
    }
    if (v17 >= 0x10000) {
      LODWORD(v18) = 4;
    }
    else {
      LODWORD(v18) = 2;
    }
    if (v17 < 0x100) {
      LODWORD(v18) = 1;
    }
    if (v17 >= 2) {
      uint64_t v18 = v18;
    }
    else {
      uint64_t v18 = 0;
    }
    switch(v18)
    {
      case 1:
        int v19 = *((unsigned __int8 *)a1 + v15);
        if (!v19) {
          break;
        }
        goto LABEL_25;
      case 2:
        int v19 = *(unsigned __int16 *)((char *)a1 + v15);
        if (v19) {
          goto LABEL_25;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C2715060);
      case 4:
        int v19 = *(int *)((char *)a1 + v15);
        if (!v19) {
          break;
        }
LABEL_25:
        int v21 = v19 - 1;
        if (v16)
        {
          int v21 = 0;
          int v22 = *a1;
        }
        else
        {
          int v22 = 0;
        }
        return v13 + (v22 | v21) + 1;
      default:
        break;
    }
  }
  if (v7 == v13)
  {
    unint64_t v23 = *(uint64_t (**)(int *, uint64_t, uint64_t))(v6 + 48);
    return v23(a1, v7, v5);
  }
  else
  {
    long long v24 = (unint64_t *)(((((unint64_t)a1 + v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
    if ((v12 & 0x80000000) != 0)
    {
      uint64_t v26 = *(uint64_t (**)(unint64_t))(v9 + 48);
      return v26((v14 + (((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v11);
    }
    else
    {
      unint64_t v25 = *v24;
      if (v25 >= 0xFFFFFFFF) {
        LODWORD(v25) = -1;
      }
      return (v25 + 1);
    }
  }
}

void sub_1C2715074(_DWORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v28 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = *(void *)(sub_1C277B0D0() - 8);
  uint64_t v11 = *(void *)(v8 + 64);
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  if (v9 <= *(_DWORD *)(v10 + 84)) {
    unsigned int v13 = *(_DWORD *)(v10 + 84);
  }
  else {
    unsigned int v13 = v9;
  }
  if (v13 <= 0x7FFFFFFF) {
    unsigned int v14 = 0x7FFFFFFF;
  }
  else {
    unsigned int v14 = v13;
  }
  uint64_t v15 = v12 + 17;
  size_t v16 = ((*(void *)(v10 + 64)
        + ((v12 + 17 + ((((((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v12)
        + 7) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v14 >= a3)
  {
    int v19 = 0;
    int v20 = a2 - v14;
    if (a2 <= v14)
    {
LABEL_20:
      uint64_t v21 = ~v12;
      switch(v19)
      {
        case 1:
          *((unsigned char *)a1 + v16) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_33;
        case 2:
          *(_WORD *)((char *)a1 + v16) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_33;
        case 3:
          goto LABEL_50;
        case 4:
          *(_DWORD *)((char *)a1 + v16) = 0;
          goto LABEL_32;
        default:
LABEL_32:
          if (a2)
          {
LABEL_33:
            if (v9 == v14)
            {
              long long v24 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v28 + 56);
              v24(a1, a2, v9, v7);
            }
            else
            {
              unint64_t v25 = (void *)(((((unint64_t)a1 + v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
              if ((v13 & 0x80000000) != 0)
              {
                int v27 = *(void (**)(unint64_t, uint64_t))(v10 + 56);
                v27((v15 + (((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8)) & v21, a2);
              }
              else
              {
                if ((a2 & 0x80000000) != 0) {
                  uint64_t v26 = a2 ^ 0x80000000;
                }
                else {
                  uint64_t v26 = (a2 - 1);
                }
                *unint64_t v25 = v26;
              }
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    if (((*(_DWORD *)(v10 + 64)
         + ((v12 + 17 + ((((((v11 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)) & ~v12)
         + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      unsigned int v17 = a3 - v14 + 1;
    else {
      unsigned int v17 = 2;
    }
    if (v17 >= 0x10000) {
      int v18 = 4;
    }
    else {
      int v18 = 2;
    }
    if (v17 < 0x100) {
      int v18 = 1;
    }
    if (v17 >= 2) {
      int v19 = v18;
    }
    else {
      int v19 = 0;
    }
    int v20 = a2 - v14;
    if (a2 <= v14) {
      goto LABEL_20;
    }
  }
  if (((*(_DWORD *)(v10 + 64)
       + ((v12 + 17 + ((((((v11 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)) & ~v12)
       + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
    int v22 = v20;
  else {
    int v22 = 1;
  }
  if (((*(_DWORD *)(v10 + 64)
       + ((v12 + 17 + ((((((v11 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)) & ~v12)
       + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v23 = ~v14 + a2;
    bzero(a1, v16);
    *a1 = v23;
  }
  switch(v19)
  {
    case 1:
      *((unsigned char *)a1 + v16) = v22;
      break;
    case 2:
      *(_WORD *)((char *)a1 + v16) = v22;
      break;
    case 3:
LABEL_50:
      __break(1u);
      JUMPOUT(0x1C2715368);
    case 4:
      *(_DWORD *)((char *)a1 + v16) = v22;
      break;
    default:
      return;
  }
}

uint64_t sub_1C2715390()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C277B0D0();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_1C27154A0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C27154BC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C27154D8()
{
  return sub_1C2715C0C();
}

uint64_t sub_1C27154F4()
{
  sub_1C277A4D0();
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_1C277A4C0();
  sub_1C2716CD8();
  sub_1C2716D98();
  uint64_t v0 = sub_1C277A4B0();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C271564C()
{
  sub_1C277A4D0();
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_1C277A4C0();
  sub_1C26A9894(0, (unint64_t *)&qword_1EBB857B8);
  sub_1C2716BD0();
  uint64_t v0 = sub_1C277A4B0();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C27157C4()
{
  sub_1C277A4D0();
  swift_allocObject();
  sub_1C277A4C0();
  sub_1C26274E0(0, &qword_1EBB85798, (void (*)(void))sub_1C26A93B4, (void (*)(void))sub_1C26A9408);
  sub_1C2716C48();
  uint64_t v0 = sub_1C277A4B0();
  swift_release();
  return v0;
}

uint64_t sub_1C2715930()
{
  sub_1C277A4D0();
  swift_allocObject();
  sub_1C277A4C0();
  sub_1C26274E0(0, &qword_1EA305138, (void (*)(void))sub_1C2716F88, (void (*)(void))sub_1C2716FDC);
  sub_1C2717030();
  uint64_t v0 = sub_1C277A4B0();
  swift_release();
  return v0;
}

uint64_t sub_1C2715A9C()
{
  sub_1C277A4D0();
  swift_allocObject();
  sub_1C277A4C0();
  sub_1C26274E0(0, &qword_1EA3047C0, (void (*)(void))sub_1C26A9624, (void (*)(void))sub_1C26A9678);
  sub_1C2716DF0();
  uint64_t v0 = sub_1C277A4B0();
  swift_release();
  return v0;
}

uint64_t sub_1C2715C0C()
{
  sub_1C277A4D0();
  swift_allocObject();
  sub_1C277A4C0();
  sub_1C26A9894(0, &qword_1EBB857C8);
  sub_1C2716F10();
  uint64_t v0 = sub_1C277A4B0();
  swift_release();
  return v0;
}

uint64_t sub_1C2715D60()
{
  sub_1C277A4D0();
  swift_allocObject();
  sub_1C277A4C0();
  sub_1C26274E0(0, &qword_1EBB857A8, (void (*)(void))sub_1C26A975C, (void (*)(void))sub_1C26A97B0);
  sub_1C2716E80();
  uint64_t v0 = sub_1C277A4B0();
  swift_release();
  return v0;
}

uint64_t RelevanceFeatureTagEncodable<>.makeEncodedValue()(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v7 = (char *)&v14 - v6;
  uint64_t v8 = type metadata accessor for ValueJSONWrapper();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v14 - v10;
  (*(void (**)(uint64_t, uint64_t))(v3 + 24))(a1, v3);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v11, v7, AssociatedTypeWitness);
  sub_1C277A4D0();
  swift_allocObject();
  sub_1C277A4C0();
  swift_getWitnessTable();
  uint64_t v12 = sub_1C277A4B0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  swift_release();
  return v12;
}

uint64_t type metadata accessor for ValueJSONWrapper()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C27161C4()
{
  return sub_1C2715930();
}

uint64_t sub_1C27161CC()
{
  return sub_1C2715D60();
}

uint64_t sub_1C27161D4()
{
  return sub_1C2715A9C();
}

uint64_t ValueJSONWrapper.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t ValueJSONWrapper.value.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*ValueJSONWrapper.value.modify())()
{
  return nullsub_1;
}

uint64_t sub_1C2716268(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1C277C7E0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1C27162E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C2716268(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C2716320@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C264FEB8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C2716358(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1C27163AC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t ValueJSONWrapper.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v19 = a4;
  uint64_t v22 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  int v23 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ValueJSONWrapper.CodingKeys();
  swift_getWitnessTable();
  uint64_t v24 = sub_1C277C6F0();
  uint64_t v20 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v21 = a3;
  uint64_t v10 = type metadata accessor for ValueJSONWrapper();
  uint64_t v18 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v17 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v13 = v25;
  sub_1C277C9A0();
  if (!v13)
  {
    uint64_t v25 = v10;
    uint64_t v14 = v20;
    uint64_t v15 = v22;
    sub_1C277C6D0();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v24);
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v23, a2);
    (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v19, v12, v25);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_1C27166DC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return ValueJSONWrapper.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_1C2716700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 32);
}

uint64_t sub_1C2716708()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C2716798(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_1C27168F4(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1C2716B0CLL);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        size_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t sub_1C2716B5C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C2716B78()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C2716B94()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C2716BB0()
{
  return sub_1C27154F4();
}

uint64_t sub_1C2716BB8()
{
  return sub_1C262722C();
}

uint64_t sub_1C2716BC0()
{
  return sub_1C27157C4();
}

uint64_t sub_1C2716BC8()
{
  return sub_1C271564C();
}

unint64_t sub_1C2716BD0()
{
  unint64_t result = qword_1EBB857B0;
  if (!qword_1EBB857B0)
  {
    sub_1C26A9894(255, (unint64_t *)&qword_1EBB857B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB857B0);
  }
  return result;
}

unint64_t sub_1C2716C48()
{
  unint64_t result = qword_1EBB85790;
  if (!qword_1EBB85790)
  {
    sub_1C26274E0(255, &qword_1EBB85798, (void (*)(void))sub_1C26A93B4, (void (*)(void))sub_1C26A9408);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB85790);
  }
  return result;
}

void sub_1C2716CD8()
{
  if (!qword_1EA305120)
  {
    sub_1C26818D4();
    sub_1C2708DAC(&qword_1EA304F08);
    sub_1C2708DAC(&qword_1EA304DA0);
    unint64_t v0 = type metadata accessor for ValueJSONWrapper();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA305120);
    }
  }
}

unint64_t sub_1C2716D98()
{
  unint64_t result = qword_1EA305128;
  if (!qword_1EA305128)
  {
    sub_1C2716CD8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA305128);
  }
  return result;
}

unint64_t sub_1C2716DF0()
{
  unint64_t result = qword_1EA305130;
  if (!qword_1EA305130)
  {
    sub_1C26274E0(255, &qword_1EA3047C0, (void (*)(void))sub_1C26A9624, (void (*)(void))sub_1C26A9678);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA305130);
  }
  return result;
}

unint64_t sub_1C2716E80()
{
  unint64_t result = qword_1EBB857A0;
  if (!qword_1EBB857A0)
  {
    sub_1C26274E0(255, &qword_1EBB857A8, (void (*)(void))sub_1C26A975C, (void (*)(void))sub_1C26A97B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB857A0);
  }
  return result;
}

unint64_t sub_1C2716F10()
{
  unint64_t result = qword_1EBB857C0;
  if (!qword_1EBB857C0)
  {
    sub_1C26A9894(255, &qword_1EBB857C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB857C0);
  }
  return result;
}

unint64_t sub_1C2716F88()
{
  unint64_t result = qword_1EA305140;
  if (!qword_1EA305140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA305140);
  }
  return result;
}

unint64_t sub_1C2716FDC()
{
  unint64_t result = qword_1EA305148;
  if (!qword_1EA305148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA305148);
  }
  return result;
}

unint64_t sub_1C2717030()
{
  unint64_t result = qword_1EA305150;
  if (!qword_1EA305150)
  {
    sub_1C26274E0(255, &qword_1EA305138, (void (*)(void))sub_1C2716F88, (void (*)(void))sub_1C2716FDC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA305150);
  }
  return result;
}

uint64_t CancellableProgressList.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  type metadata accessor for UnfairLock();
  uint64_t v1 = swift_allocObject();
  uint64_t v2 = (_DWORD *)swift_slowAlloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = 0;
  uint64_t v3 = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 16) = v1;
  *(void *)(v0 + 24) = v3;
  return v0;
}

uint64_t sub_1C2717130(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    MEMORY[0x1F4188790](result);
    type metadata accessor for UnfairLock();
    sub_1C262AFB4((unint64_t *)&qword_1EBB85390, (void (*)(uint64_t))type metadata accessor for UnfairLock);
    swift_retain();
    sub_1C277AA60();
    uint64_t v5 = swift_release();
    if (a3) {
      a3(v5);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1C2717270(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  swift_retain();
  unint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_1C2718E40(v4, a2);
  swift_bridgeObjectRelease();
  swift_release();
  *(void *)(a1 + 24) = v5;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C27172F8()
{
  return swift_release();
}

uint64_t sub_1C27173AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C277A8A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unsigned int v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBB85EA8 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1C277B130();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EBB85ED8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  swift_retain_n();
  BOOL v9 = sub_1C277B100();
  os_log_type_t v10 = sub_1C277BD40();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v26 = a2;
    uint64_t v12 = v11;
    uint64_t v25 = swift_slowAlloc();
    v28[0] = v25;
    *(_DWORD *)uint64_t v12 = 136315394;
    v24[1] = v12 + 4;
    uint64_t v29 = 0;
    unint64_t v30 = 0xE000000000000000;
    sub_1C277C2D0();
    sub_1C277B8D0();
    uint64_t v27 = a1;
    sub_1C277C450();
    sub_1C277B8D0();
    swift_beginAccess();
    unint64_t v13 = sub_1C2610F84();
    uint64_t v14 = swift_bridgeObjectRetain();
    MEMORY[0x1C875B960](v14, v13);
    sub_1C277B8D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C277B8D0();
    uint64_t v29 = sub_1C263FDFC(v29, v30, v28);
    sub_1C277C0D0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    sub_1C262AFB4(&qword_1EBB82658, MEMORY[0x1E4F27990]);
    uint64_t v15 = sub_1C277C7B0();
    uint64_t v29 = sub_1C263FDFC(v15, v16, v28);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _os_log_impl(&dword_1C2601000, v9, v10, "%s: clearProgress(for uuid:) %s", (uint8_t *)v12, 0x16u);
    uint64_t v17 = v25;
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v17, -1, -1);
    uint64_t v18 = v12;
    a2 = v26;
    MEMORY[0x1C875D230](v18, -1, -1);
  }
  else
  {
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }

  MEMORY[0x1F4188790](v19);
  v24[-2] = a2;
  swift_beginAccess();
  uint64_t result = sub_1C27189C4((uint64_t (*)(id *))sub_1C27189A4, (uint64_t)&v24[-4]);
  uint64_t v21 = result;
  unint64_t v22 = *(void *)(a1 + 24);
  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1C277C5A0();
    uint64_t result = swift_bridgeObjectRelease();
    if (v23 >= v21) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v23 >= result)
    {
LABEL_8:
      sub_1C26B9EC8(v21, v23);
      return swift_endAccess();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C271783C()
{
  uint64_t v0 = sub_1C277A8A0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C271792C((uint64_t)v3);
  char v4 = sub_1C277A870();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4 & 1;
}

uint64_t sub_1C271792C@<X0>(uint64_t a1@<X8>)
{
  sub_1C2712010(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(v1, sel_userInfo);
  type metadata accessor for ProgressUserInfoKey(0);
  sub_1C262AFB4((unint64_t *)&unk_1EBB82FA0, type metadata accessor for ProgressUserInfoKey);
  uint64_t v7 = sub_1C277B760();

  uint64_t v8 = sub_1C277B820();
  BOOL v9 = (void *)v8;
  if (!*(void *)(v7 + 16) || (unint64_t v10 = sub_1C261333C(v8), (v11 & 1) == 0))
  {
    long long v17 = 0u;
    long long v18 = 0u;

    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_1C263FED0(*(void *)(v7 + 56) + 32 * v10, (uint64_t)&v17);

  swift_bridgeObjectRelease();
  if (!*((void *)&v18 + 1))
  {
LABEL_7:
    sub_1C2624798((uint64_t)&v17, (uint64_t (*)(void))sub_1C262F914);
    uint64_t v16 = sub_1C277A8A0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v5, 1, 1, v16);
    goto LABEL_8;
  }
  uint64_t v12 = sub_1C277A8A0();
  int v13 = swift_dynamicCast();
  uint64_t v14 = *(void *)(v12 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v5, v13 ^ 1u, 1, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v5, 1, v12) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a1, v5, v12);
  }
LABEL_8:
  sub_1C2624798((uint64_t)v5, (uint64_t (*)(void))sub_1C2712010);
  uint64_t result = sub_1C277C560();
  __break(1u);
  return result;
}

uint64_t sub_1C2717C08()
{
  return swift_release();
}

uint64_t sub_1C2717CBC(uint64_t *a1)
{
  uint64_t v36 = *a1;
  if (qword_1EBB85EA8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C277B130();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBB85ED8);
  swift_retain_n();
  uint64_t v3 = sub_1C277B100();
  os_log_type_t v4 = sub_1C277BD40();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    v44[0] = v6;
    unint64_t v39 = 0xE000000000000000;
    sub_1C277C2D0();
    sub_1C277B8D0();
    sub_1C277C450();
    sub_1C277B8D0();
    swift_beginAccess();
    unint64_t v7 = sub_1C2610F84();
    uint64_t v8 = swift_bridgeObjectRetain();
    MEMORY[0x1C875B960](v8, v7);
    sub_1C277B8D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C277B8D0();
    uint64_t aBlock = sub_1C263FDFC(0, 0xE000000000000000, v44);
    sub_1C277C0D0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v3, v4, "%s: cancelAll()", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v6, -1, -1);
    MEMORY[0x1C875D230](v5, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v32 = a1 + 3;
  swift_beginAccess();
  unint64_t v9 = a1[3];
  if (!(v9 >> 62))
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v10) {
      goto LABEL_8;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    *uint64_t v32 = MEMORY[0x1E4FBC860];
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C277C5A0();
  uint64_t v10 = result;
  if (!result) {
    goto LABEL_21;
  }
LABEL_8:
  if (v10 >= 1)
  {
    uint64_t v12 = 0;
    unint64_t v33 = v9 & 0xC000000000000001;
    uint64_t v34 = v10;
    unint64_t v35 = v9;
    do
    {
      if (v33) {
        id v18 = (id)MEMORY[0x1C875C230](v12, v9);
      }
      else {
        id v18 = *(id *)(v9 + 8 * v12 + 32);
      }
      uint64_t v19 = v18;
      swift_retain_n();
      id v20 = v19;
      uint64_t v21 = sub_1C277B100();
      os_log_type_t v22 = sub_1C277BD40();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = swift_slowAlloc();
        uint64_t v24 = swift_slowAlloc();
        uint64_t v37 = v24;
        uint64_t aBlock = 0;
        *(_DWORD *)uint64_t v23 = 136315394;
        unint64_t v39 = 0xE000000000000000;
        sub_1C277C2D0();
        sub_1C277B8D0();
        sub_1C277C450();
        sub_1C277B8D0();
        unint64_t v25 = sub_1C2610F84();
        uint64_t v26 = swift_bridgeObjectRetain();
        MEMORY[0x1C875B960](v26, v25);
        sub_1C277B8D0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C277B8D0();
        *(void *)(v23 + 4) = sub_1C263FDFC(aBlock, v39, &v37);
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v23 + 12) = 2080;
        id v27 = v20;
        id v28 = objc_msgSend(v27, sel_description);
        uint64_t v29 = sub_1C277B850();
        unint64_t v31 = v30;

        *(void *)(v23 + 14) = sub_1C263FDFC(v29, v31, &v37);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2601000, v21, v22, "%s: cancelAll() progress: %s", (uint8_t *)v23, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C875D230](v24, -1, -1);
        MEMORY[0x1C875D230](v23, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      uint64_t v14 = (uint64_t (*)())objc_msgSend(v20, sel_cancellationHandler);
      if (v14)
      {
        uint64_t v13 = swift_allocObject();
        *(void *)(v13 + 16) = v14;
        uint64_t v14 = sub_1C2718FF4;
      }
      else
      {
        uint64_t v13 = 0;
      }
      ++v12;
      sub_1C26121B4((uint64_t)v14);
      sub_1C261AE94((uint64_t)v14);
      uint64_t v15 = (void *)swift_allocObject();
      void v15[2] = v20;
      double v15[3] = v14;
      v15[4] = v13;
      _OWORD v15[5] = v36;
      uint64_t v42 = sub_1C2718960;
      BOOL v43 = v15;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      unint64_t v39 = 1107296256;
      uint64_t v40 = sub_1C26254FC;
      objc_super v41 = &block_descriptor_21;
      uint64_t v16 = _Block_copy(&aBlock);
      id v17 = v20;
      sub_1C26121B4((uint64_t)v14);
      sub_1C26121B4((uint64_t)sub_1C2718960);
      swift_release();
      objc_msgSend(v17, sel_setCancellationHandler_, v16);
      _Block_release(v16);
      swift_release();
      objc_msgSend(v17, sel_cancel);
      sub_1C261AE94((uint64_t)v14);

      unint64_t v9 = v35;
    }
    while (v34 != v12);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

void sub_1C2718414(void *a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  if (qword_1EBB85EA8 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1C277B130();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EBB85ED8);
  id v8 = a1;
  unint64_t v9 = sub_1C277B100();
  os_log_type_t v10 = sub_1C277BD40();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v22 = v20;
    uint64_t v23 = a4;
    *(_DWORD *)uint64_t v11 = 136315394;
    swift_getMetatypeMetadata();
    uint64_t v21 = a2;
    uint64_t v12 = sub_1C277B860();
    uint64_t v23 = sub_1C263FDFC(v12, v13, &v22);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    id v14 = v8;
    id v15 = objc_msgSend(v14, sel_description);
    uint64_t v16 = sub_1C277B850();
    unint64_t v18 = v17;

    uint64_t v19 = v16;
    a2 = v21;
    uint64_t v23 = sub_1C263FDFC(v19, v18, &v22);
    sub_1C277C0D0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v9, v10, "[%s]: cancelAll() cancelProgressButHoldOntoItUntilCancellationCompletes(): %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v20, -1, -1);
    MEMORY[0x1C875D230](v11, -1, -1);

    if (!v21) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }

  if (a2) {
LABEL_7:
  }
    a2();
LABEL_8:
  objc_msgSend(v8, sel_setCancellationHandler_, 0);
  _Block_release(0);
}

uint64_t CancellableProgressList.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CancellableProgressList.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t CancellableProgressList.description.getter()
{
  type metadata accessor for UnfairLock();
  sub_1C262AFB4((unint64_t *)&qword_1EBB85390, (void (*)(uint64_t))type metadata accessor for UnfairLock);
  swift_retain();
  sub_1C277AA50();
  swift_release();
  return v1;
}

uint64_t sub_1C27187B8()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C27187F0()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2718828()
{
  swift_release();
  swift_release();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C2718878()
{
  return sub_1C2717130(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32));
}

uint64_t sub_1C2718884()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_1C2718894()
{
  return sub_1C27173AC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C271889C()
{
  return sub_1C2717CBC(v0);
}

uint64_t method lookup function for CancellableProgressList(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CancellableProgressList);
}

uint64_t dispatch thunk of CancellableProgressList.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of CancellableProgressList.clearProgress(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of CancellableProgressList.cancelAll()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t sub_1C2718918()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1C2718960()
{
  sub_1C2718414(*(void **)(v0 + 16), *(void (**)(void))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1C271896C()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C27189A4()
{
  return sub_1C271783C() & 1;
}

uint64_t sub_1C27189C4(uint64_t (*a1)(id *), uint64_t a2)
{
  os_log_type_t v4 = (uint64_t *)v2;
  unint64_t v7 = *v2;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1C2718D24(a1, a2, v7);
  char v10 = v9;
  swift_bridgeObjectRelease();
  if (v3) {
    return v8;
  }
  if ((v10 & 1) == 0)
  {
    unint64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_54;
    }
    if ((unint64_t)*v4 >> 62)
    {
LABEL_55:
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_1C277C5A0();
      swift_bridgeObjectRelease();
      if (v11 != v30) {
        goto LABEL_6;
      }
    }
    else if (v11 != *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      unint64_t v11 = v8 + 5;
      uint64_t v32 = a2;
      while (1)
      {
        unint64_t v12 = v11 - 4;
        uint64_t v13 = *v4;
        if ((*v4 & 0xC000000000000001) != 0)
        {
          id v14 = (id)MEMORY[0x1C875C230](v11 - 4);
        }
        else
        {
          if ((v12 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_45:
            __break(1u);
LABEL_46:
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
            goto LABEL_55;
          }
          if (v12 >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_45;
          }
          id v14 = *(id *)(v13 + 8 * v11);
        }
        id v15 = v14;
        id v33 = v14;
        char v16 = a1(&v33);

        if ((v16 & 1) == 0) {
          break;
        }
LABEL_32:
        unint64_t v27 = v11 - 3;
        if (__OFADD__(v12, 1)) {
          goto LABEL_46;
        }
        if ((unint64_t)*v4 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v28 = sub_1C277C5A0();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v28 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        ++v11;
        if (v27 == v28) {
          return v8;
        }
      }
      if (v12 == v8)
      {
LABEL_31:
        if (__OFADD__(v8++, 1)) {
          goto LABEL_47;
        }
        goto LABEL_32;
      }
      uint64_t v17 = *v4;
      if ((*v4 & 0xC000000000000001) != 0)
      {
        id v18 = (id)MEMORY[0x1C875C230](v8, *v4);
        uint64_t v17 = *v4;
        if ((*v4 & 0xC000000000000001) == 0)
        {
LABEL_17:
          if ((v12 & 0x8000000000000000) != 0) {
            goto LABEL_50;
          }
          if (v12 >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_51;
          }
          id v19 = *(id *)(v17 + 8 * v11);
          goto LABEL_20;
        }
      }
      else
      {
        if ((v8 & 0x8000000000000000) != 0) {
          goto LABEL_48;
        }
        if (v8 >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_49;
        }
        id v18 = *(id *)(v17 + 8 * v8 + 32);
        if ((v17 & 0xC000000000000001) == 0) {
          goto LABEL_17;
        }
      }
      id v19 = (id)MEMORY[0x1C875C230](v11 - 4, v17);
      uint64_t v17 = *v4;
LABEL_20:
      int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *os_log_type_t v4 = v17;
      if (!isUniquelyReferenced_nonNull_bridgeObject || v17 < 0 || (v17 & 0x4000000000000000) != 0)
      {
        uint64_t v17 = sub_1C26B85F0(v17);
        *os_log_type_t v4 = v17;
      }
      uint64_t v21 = *(void **)((v17 & 0xFFFFFFFFFFFFFF8) + 8 * v8 + 0x20);
      *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 8 * v8 + 0x20) = v19;

      sub_1C277BA60();
      uint64_t v22 = *v4;
      int v23 = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *os_log_type_t v4 = v22;
      if (!v23 || v22 < 0 || (v22 & 0x4000000000000000) != 0)
      {
        uint64_t v22 = sub_1C26B85F0(v22);
        *os_log_type_t v4 = v22;
      }
      a2 = v32;
      if ((v12 & 0x8000000000000000) != 0) {
        goto LABEL_52;
      }
      uint64_t v24 = v22 & 0xFFFFFFFFFFFFFF8;
      if (v12 >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_53;
      }
      unint64_t v25 = *(void **)(v24 + 8 * v11);
      *(void *)(v24 + 8 * v11) = v18;

      sub_1C277BA60();
      goto LABEL_31;
    }
    return v8;
  }
  if (!((unint64_t)*v4 >> 62)) {
    return *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_1C277C5A0();
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_1C2718D24(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_14;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v7 = 0;
  if (v6)
  {
    while (1)
    {
      id v8 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C875C230](v7, a3) : *(id *)(a3 + 8 * v7 + 32);
      char v9 = v8;
      id v13 = v8;
      char v10 = a1(&v13);

      if (v3 || (v10 & 1) != 0) {
        break;
      }
      uint64_t v11 = v7 + 1;
      if (__OFADD__(v7, 1))
      {
        __break(1u);
LABEL_14:
        swift_bridgeObjectRetain();
        uint64_t v6 = sub_1C277C5A0();
        swift_bridgeObjectRelease();
        uint64_t v7 = 0;
        if (!v6) {
          return v7;
        }
      }
      else
      {
        ++v7;
        if (v11 == v6) {
          return 0;
        }
      }
    }
  }
  return v7;
}

uint64_t sub_1C2718E40(unint64_t a1, uint64_t a2)
{
  uint64_t v15 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      unint64_t v5 = 0;
      uint64_t v6 = a2 + 16;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v7 = (id)MEMORY[0x1C875C230](v5, a1);
LABEL_9:
        id v8 = v7;
        unint64_t v9 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          goto LABEL_16;
        }
        uint64_t v10 = v4;
        swift_beginAccess();
        uint64_t v11 = MEMORY[0x1C875D340](v6);
        if (v11
          && (unint64_t v12 = (void *)v11,
              sub_1C2610F84(),
              id v13 = v8,
              a2 = sub_1C277C030(),
              v13,
              v13,
              v12,
              (a2 & 1) != 0))
        {
        }
        else
        {
          sub_1C277C390();
          sub_1C277C3D0();
          sub_1C277C3E0();
          a2 = (uint64_t)&v15;
          sub_1C277C3A0();
        }
        ++v5;
        uint64_t v4 = v10;
        if (v9 == v10) {
          return v15;
        }
      }
      if (v5 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      uint64_t v4 = sub_1C277C5A0();
      if (!v4) {
        return MEMORY[0x1E4FBC860];
      }
    }
    id v7 = *(id *)(a1 + 8 * v5 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C2718FEC()
{
  return sub_1C2717270(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

char *HealthExperienceStoreOracle.init(healthExperienceStore:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  MEMORY[0x1F4188790](v5);
  id v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v7);
  unint64_t v9 = sub_1C271A664((uint64_t)v7, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v9;
}

id sub_1C27190F0(uint64_t a1)
{
  return sub_1C271A958(a1, v1);
}

id sub_1C27190F8()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1C277B130();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBB86280);
  uint64_t v4 = sub_1C277B100();
  os_log_type_t v5 = sub_1C277BD00();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    uint64_t v13 = ObjectType;
    *(_DWORD *)uint64_t v6 = 136315138;
    swift_getMetatypeMetadata();
    uint64_t v8 = sub_1C277B860();
    uint64_t v13 = sub_1C263FDFC(v8, v9, &v12);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v4, v5, "[%s] notifyClients()", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v7, -1, -1);
    MEMORY[0x1C875D230](v6, -1, -1);
  }

  uint64_t v10 = *(void **)(v1 + OBJC_IVAR____TtC14HealthPlatform27HealthExperienceStoreOracle_notificationCenter);
  if (qword_1EBB80DA8 != -1) {
    swift_once();
  }
  return objc_msgSend(v10, sel_postNotificationName_object_, qword_1EBB82F40, v1, v12);
}

uint64_t sub_1C27192EC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (void *)swift_getObjectType();
  uint64_t v5 = a1 + 8;
  sub_1C261580C(a1 + 8, (uint64_t)v47);
  id v6 = v47[3];
  sub_1C26247F8((uint64_t)v47, (uint64_t (*)(void))sub_1C2615870);
  if (v6)
  {
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1C277B130();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EBB86280);
    uint64_t v8 = sub_1C277B100();
    os_log_type_t v9 = sub_1C277BD00();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      v46[0] = v11;
      *(_DWORD *)uint64_t v10 = 136315138;
      v47[0] = ObjectType;
      swift_getMetatypeMetadata();
      uint64_t v12 = sub_1C277B860();
      v47[0] = (id)sub_1C263FDFC(v12, v13, v46);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v8, v9, "[%s] attemptToInitializeStore(state:) but we have a health store - dropping", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v11, -1, -1);
      MEMORY[0x1C875D230](v10, -1, -1);
    }

    return 0;
  }
  else
  {
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1C277B130();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EBB86280);
    uint64_t v15 = sub_1C277B100();
    os_log_type_t v16 = sub_1C277BD00();
    uint64_t v45 = ObjectType;
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      id v19 = ObjectType;
      uint64_t v20 = v18;
      v46[0] = v18;
      *(_DWORD *)uint64_t v17 = 136315138;
      v47[0] = v19;
      swift_getMetatypeMetadata();
      uint64_t v21 = sub_1C277B860();
      v47[0] = (id)sub_1C263FDFC(v21, v22, v46);
      uint64_t v5 = a1 + 8;
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v15, v16, "[%s] attemptToInitializeStore(state:)", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v20, -1, -1);
      MEMORY[0x1C875D230](v17, -1, -1);
    }

    uint64_t v23 = (uint64_t)&v2[OBJC_IVAR____TtC14HealthPlatform27HealthExperienceStoreOracle_healthExperienceStore];
    uint64_t v24 = *(void *)&v2[OBJC_IVAR____TtC14HealthPlatform27HealthExperienceStoreOracle_healthExperienceStore + 24];
    uint64_t v25 = *(void *)&v2[OBJC_IVAR____TtC14HealthPlatform27HealthExperienceStoreOracle_healthExperienceStore + 32];
    __swift_project_boxed_opaque_existential_1(&v2[OBJC_IVAR____TtC14HealthPlatform27HealthExperienceStoreOracle_healthExperienceStore], v24);
    (*(void (**)(uint64_t, uint64_t))(v25 + 48))(v24, v25);
    unint64_t v27 = v2;
    uint64_t v28 = sub_1C277B100();
    os_log_type_t v29 = sub_1C277BD00();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      v46[0] = v31;
      *(_DWORD *)uint64_t v30 = 136315394;
      v47[0] = v45;
      swift_getMetatypeMetadata();
      uint64_t v32 = sub_1C277B860();
      v47[0] = (id)sub_1C263FDFC(v32, v33, v46);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2080;
      sub_1C26482E4(v23, (uint64_t)v47);
      sub_1C262B07C(0, &qword_1EBB82698);
      uint64_t v34 = sub_1C277B860();
      v47[0] = (id)sub_1C263FDFC(v34, v35, v46);
      sub_1C277C0D0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v28, v29, "[%s] calling performCacheInvalidationIfNecessary with %s", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v31, -1, -1);
      MEMORY[0x1C875D230](v30, -1, -1);
    }
    else
    {
    }
    (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *(void *)v27) + 0xB8))(v23);
    uint64_t v36 = v27;
    uint64_t v37 = sub_1C277B100();
    os_log_type_t v38 = sub_1C277BD00();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      v46[0] = v40;
      *(_DWORD *)uint64_t v39 = 136315394;
      v47[0] = v45;
      swift_getMetatypeMetadata();
      uint64_t v41 = sub_1C277B860();
      v47[0] = (id)sub_1C263FDFC(v41, v42, v46);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2080;
      sub_1C26482E4(v23, (uint64_t)v47);
      sub_1C262B07C(0, &qword_1EBB82698);
      uint64_t v43 = sub_1C277B860();
      v47[0] = (id)sub_1C263FDFC(v43, v44, v46);
      sub_1C277C0D0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v37, v38, "[%s] attemptToInitializeStore(shouldListen:): initPersistentContainer() success %s", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v40, -1, -1);
      MEMORY[0x1C875D230](v39, -1, -1);
    }
    else
    {
    }
    sub_1C26247F8(v5, (uint64_t (*)(void))sub_1C2615870);
    sub_1C26482E4(v23, v5);
    return 1;
  }
}

void sub_1C2719B50()
{
  uint64_t ObjectType = swift_getObjectType();
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1C277B130();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBB86280);
  uint64_t v2 = sub_1C277B100();
  os_log_type_t v3 = sub_1C277BD00();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v11 = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v12 = ObjectType;
    swift_getMetatypeMetadata();
    uint64_t v6 = sub_1C277B860();
    uint64_t v12 = sub_1C263FDFC(v6, v7, &v11);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v2, v3, "[%s] dataNowAccessible() attempting to initialize store", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v5, -1, -1);
    MEMORY[0x1C875D230](v4, -1, -1);
  }

  MEMORY[0x1F4188790](v8);
  uint64_t v10 = v9 + 16;
  os_unfair_lock_lock(v9 + 16);
  sub_1C271B0C0(&v12);
  os_unfair_lock_unlock(v10);
  if (v12 == 1) {
    sub_1C27190F8();
  }
}

uint64_t sub_1C2719D64(uint64_t *a1)
{
  uint64_t v3 = sub_1C277AA90();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t result = MEMORY[0x1F4188790](v3);
  unint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*a1)
  {
    (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v1) + 0xA0))(result);
    sub_1C277AAB0();
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v7, *MEMORY[0x1E4F667F8], v3);
    v11[1] = sub_1C277AAA0();
    uint64_t v8 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = sub_1C271B030;
    *(void *)(v9 + 24) = v8;
    sub_1C271B078((unint64_t *)&unk_1EBB848E0, MEMORY[0x1E4F66810]);
    uint64_t v10 = sub_1C277B600();
    swift_release();
    swift_release();
    uint64_t result = swift_release();
    *a1 = v10;
  }
  return result;
}

void sub_1C2719F70()
{
  uint64_t ObjectType = swift_getObjectType();
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1C277B130();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBB86280);
  uint64_t v2 = sub_1C277B100();
  os_log_type_t v3 = sub_1C277BD30();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v8 = v5;
    uint64_t v9 = ObjectType;
    *(_DWORD *)uint64_t v4 = 136315138;
    swift_getMetatypeMetadata();
    uint64_t v6 = sub_1C277B860();
    uint64_t v9 = sub_1C263FDFC(v6, v7, &v8);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v2, v3, "[%s] handleUnrecoverableError() exiting", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v5, -1, -1);
    MEMORY[0x1C875D230](v4, -1, -1);
  }

  exit(0);
}

uint64_t Notification.oracle.getter()
{
  uint64_t v1 = sub_1C277A580();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C277A560();
  if (v9)
  {
    type metadata accessor for HealthExperienceStoreOracle();
    if (swift_dynamicCast()) {
      return v6[0];
    }
  }
  else
  {
    sub_1C26247F8((uint64_t)&v7, (uint64_t (*)(void))sub_1C262F914);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  uint64_t v7 = 0;
  unint64_t v8 = 0xE000000000000000;
  sub_1C277C2D0();
  v6[0] = v7;
  v6[1] = v8;
  sub_1C277B8D0();
  sub_1C277A560();
  sub_1C262F914();
  sub_1C277B860();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  sub_1C277B8D0();
  sub_1C271B078(&qword_1EA305160, MEMORY[0x1E4F26E90]);
  sub_1C277C7B0();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C277C560();
  __break(1u);
  return result;
}

char *HealthExperienceStoreOracle.__allocating_init(healthExperienceStore:)(uint64_t a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = __swift_mutable_project_boxed_opaque_existential_1(a1, v4);
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v9 + 16))(v8);
  uint64_t v10 = sub_1C271A664((uint64_t)v8, v3, v4, v5);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v10;
}

uint64_t sub_1C271A418@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1C27192EC(a1);
  *a2 = result & 1;
  return result;
}

void sub_1C271A458(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1C875D340](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    sub_1C2719B50();
  }
}

id HealthExperienceStoreOracle.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void HealthExperienceStoreOracle.init()()
{
}

id HealthExperienceStoreOracle.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HealthExperienceStoreOracle();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C271A5D0()
{
  uint64_t result = sub_1C277B820();
  qword_1EBB82F40 = result;
  return result;
}

id static NSNotificationName.HealthExperienceStoreOracleHasStore.getter()
{
  if (qword_1EBB80DA8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EBB82F40;

  return v0;
}

char *sub_1C271A664(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  v29[3] = a3;
  v29[4] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v29);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  uint64_t v10 = OBJC_IVAR____TtC14HealthPlatform27HealthExperienceStoreOracle_notificationCenter;
  id v11 = objc_allocWithZone(MEMORY[0x1E4F28EB8]);
  uint64_t v12 = a2;
  *(void *)&a2[v10] = objc_msgSend(v11, sel_init);
  uint64_t v13 = OBJC_IVAR____TtC14HealthPlatform27HealthExperienceStoreOracle_protectedState;
  sub_1C26BF57C();
  memset(v28, 0, sizeof(v28));
  uint64_t v14 = swift_allocObject();
  *(_DWORD *)(v14 + 64) = 0;
  sub_1C26BF5DC((uint64_t)v28, v14 + 16);
  sub_1C26BF638((uint64_t)v28);
  *(void *)&v12[v13] = v14;
  sub_1C26482E4((uint64_t)v29, (uint64_t)&v12[OBJC_IVAR____TtC14HealthPlatform27HealthExperienceStoreOracle_healthExperienceStore]);

  v27.receiver = v12;
  v27.super_class = (Class)type metadata accessor for HealthExperienceStoreOracle();
  uint64_t v25 = (char *)objc_msgSendSuper2(&v27, sel_init);
  uint64_t v15 = (os_unfair_lock_s *)(*(void *)&v25[OBJC_IVAR____TtC14HealthPlatform27HealthExperienceStoreOracle_protectedState]
                           + 64);
  os_log_type_t v16 = v25;
  os_unfair_lock_lock(v15);
  sub_1C271B158(v28);
  os_unfair_lock_unlock(v15);
  if (LOBYTE(v28[0]) == 1) {
    sub_1C27190F8();
  }
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1C277B130();
  __swift_project_value_buffer(v17, (uint64_t)qword_1EBB86280);
  uint64_t v18 = sub_1C277B100();
  os_log_type_t v19 = sub_1C277BD00();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v26 = v21;
    *(_DWORD *)uint64_t v20 = 136315138;
    *(void *)&v28[0] = ObjectType;
    swift_getMetatypeMetadata();
    uint64_t v22 = sub_1C277B860();
    *(void *)&v28[0] = sub_1C263FDFC(v22, v23, &v26);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v18, v19, "[%s] init()", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v21, -1, -1);
    MEMORY[0x1C875D230](v20, -1, -1);
  }

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v29);
  return v16;
}

id sub_1C271A958(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1C277B130();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EBB86280);
  swift_unknownObjectRetain_n();
  uint64_t v6 = sub_1C277B100();
  os_log_type_t v7 = sub_1C277BD00();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v16 = v9;
    uint64_t v17 = ObjectType;
    *(_DWORD *)uint64_t v8 = 136315394;
    swift_getMetatypeMetadata();
    uint64_t v10 = sub_1C277B860();
    uint64_t v17 = sub_1C263FDFC(v10, v11, &v16);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    uint64_t v17 = a1;
    sub_1C271B100();
    swift_unknownObjectRetain();
    uint64_t v12 = sub_1C277B860();
    uint64_t v17 = sub_1C263FDFC(v12, v13, &v16);
    sub_1C277C0D0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v6, v7, "[%s] register(observer:): %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v9, -1, -1);
    MEMORY[0x1C875D230](v8, -1, -1);
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  uint64_t v14 = *(void **)(a2 + OBJC_IVAR____TtC14HealthPlatform27HealthExperienceStoreOracle_notificationCenter);
  if (qword_1EBB80DA8 != -1) {
    swift_once();
  }
  return objc_msgSend(v14, sel_addObserver_selector_name_object_, a1, sel_storeDidUpdateWithNote_, qword_1EBB82F40, a2, v16);
}

uint64_t type metadata accessor for HealthExperienceStoreOracle()
{
  return self;
}

uint64_t method lookup function for HealthExperienceStoreOracle(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HealthExperienceStoreOracle);
}

uint64_t dispatch thunk of HealthExperienceStoreOracle.register(observer:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of HealthExperienceStoreOracle.__allocating_init(healthExperienceStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of HealthExperienceStoreOracle.beginListeningToDataAccessChanges()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of HealthExperienceStoreOracle.handleUnrecoverableError()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of HealthExperienceStoreOracle.performCacheInvalidationIfNecessary(store:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t destroy for HealthExperienceStoreOracle.State(uint64_t a1)
{
  uint64_t result = swift_release();
  if (*(void *)(a1 + 32))
  {
    return __swift_destroy_boxed_opaque_existential_0(a1 + 8);
  }
  return result;
}

uint64_t initializeWithCopy for HealthExperienceStoreOracle.State(uint64_t a1, void *a2)
{
  *(void *)a1 = *a2;
  uint64_t v4 = (_OWORD *)(a1 + 8);
  uint64_t v5 = a2 + 1;
  uint64_t v6 = a2[4];
  swift_retain();
  if (v6)
  {
    uint64_t v7 = a2[5];
    *(void *)(a1 + 32) = v6;
    *(void *)(a1 + 40) = v7;
    (**(void (***)(uint64_t, void *, uint64_t))(v6 - 8))(a1 + 8, v5, v6);
  }
  else
  {
    long long v8 = *((_OWORD *)v5 + 1);
    *uint64_t v4 = *(_OWORD *)v5;
    *(_OWORD *)(a1 + 24) = v8;
    *(void *)(a1 + 40) = v5[4];
  }
  return a1;
}

uint64_t assignWithCopy for HealthExperienceStoreOracle.State(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 32);
  if (!*(void *)(a1 + 32))
  {
    if (v4)
    {
      *(void *)(a1 + 32) = v4;
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 8, a2 + 8);
      return a1;
    }
LABEL_7:
    long long v5 = *(_OWORD *)(a2 + 8);
    long long v6 = *(_OWORD *)(a2 + 24);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(_OWORD *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 24) = v6;
    return a1;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_0(a1 + 8);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  return a1;
}

uint64_t assignWithTake for HealthExperienceStoreOracle.State(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  if (*(void *)(a1 + 32)) {
    __swift_destroy_boxed_opaque_existential_0(a1 + 8);
  }
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for HealthExperienceStoreOracle.State(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for HealthExperienceStoreOracle.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HealthExperienceStoreOracle.State()
{
  return &type metadata for HealthExperienceStoreOracle.State;
}

uint64_t sub_1C271AFF8()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C271B030()
{
  sub_1C271A458(v0);
}

uint64_t sub_1C271B038()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C271B070(uint64_t a1)
{
  return sub_1C270A1F4(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1C271B078(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C271B0C0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C27192EC();
  *a1 = result & 1;
  return result;
}

unint64_t sub_1C271B100()
{
  unint64_t result = qword_1EBB82700;
  if (!qword_1EBB82700)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB82700);
  }
  return result;
}

uint64_t sub_1C271B158@<X0>(unsigned char *a1@<X8>)
{
  return sub_1C271B0C0(a1);
}

id OrchestrationAnchor.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id OrchestrationAnchor.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for OrchestrationAnchor();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for OrchestrationAnchor()
{
  return self;
}

id OrchestrationAnchor.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OrchestrationAnchor();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t FeedItemContextEnvironment.hash(into:)()
{
  return sub_1C277C8D0();
}

uint64_t sub_1C271B304(uint64_t a1)
{
  unint64_t v2 = sub_1C271B848();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C271B340(uint64_t a1)
{
  unint64_t v2 = sub_1C271B848();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C271B37C()
{
  if (*v0) {
    return 0x65746E4972657375;
  }
  else {
    return 0x756F72676B636162;
  }
}

uint64_t sub_1C271B3C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C271BD9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C271B3F0(uint64_t a1)
{
  unint64_t v2 = sub_1C271B89C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C271B42C(uint64_t a1)
{
  unint64_t v2 = sub_1C271B89C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C271B468(uint64_t a1)
{
  unint64_t v2 = sub_1C271B7F4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C271B4A4(uint64_t a1)
{
  unint64_t v2 = sub_1C271B7F4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FeedItemContextEnvironment.encode(to:)(void *a1, int a2)
{
  int v21 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDE0];
  sub_1C271D0C4(0, &qword_1EA305178, (uint64_t (*)(void))sub_1C271B7F4, (uint64_t)&type metadata for FeedItemContextEnvironment.UserInteractiveCodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v19 = *(void *)(v4 - 8);
  uint64_t v20 = v4;
  MEMORY[0x1F4188790](v4);
  long long v6 = (char *)&v16 - v5;
  sub_1C271D0C4(0, &qword_1EA305188, (uint64_t (*)(void))sub_1C271B848, (uint64_t)&type metadata for FeedItemContextEnvironment.BackgroundCodingKeys, v3);
  uint64_t v17 = *(void *)(v7 - 8);
  uint64_t v18 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v16 - v8;
  sub_1C271D0C4(0, &qword_1EA305198, (uint64_t (*)(void))sub_1C271B89C, (uint64_t)&type metadata for FeedItemContextEnvironment.CodingKeys, v3);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v16 - v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C271B89C();
  sub_1C277C9B0();
  if (v21)
  {
    char v23 = 1;
    sub_1C271B7F4();
    sub_1C277C700();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v20);
  }
  else
  {
    char v22 = 0;
    sub_1C271B848();
    sub_1C277C700();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v9, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

unint64_t sub_1C271B7F4()
{
  unint64_t result = qword_1EA305180;
  if (!qword_1EA305180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA305180);
  }
  return result;
}

unint64_t sub_1C271B848()
{
  unint64_t result = qword_1EA305190;
  if (!qword_1EA305190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA305190);
  }
  return result;
}

unint64_t sub_1C271B89C()
{
  unint64_t result = qword_1EA3051A0;
  if (!qword_1EA3051A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3051A0);
  }
  return result;
}

uint64_t FeedItemContextEnvironment.hashValue.getter()
{
  return sub_1C277C910();
}

uint64_t FeedItemContextEnvironment.init(from:)(uint64_t a1)
{
  return sub_1C271BEC0(a1) & 1;
}

uint64_t sub_1C271B954@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1C271BEC0(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_1C271B984(void *a1)
{
  return FeedItemContextEnvironment.encode(to:)(a1, *v1);
}

uint64_t sub_1C271B9A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return FeedItemContext.commit(_:)(a1, a2, a3);
}

uint64_t FeedItemContext.commit(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t FeedItemContext.previousFeedItems()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, void, void, uint64_t, uint64_t, uint64_t))(a2 + 96))(1, 0, 0, 2, a1, a2);
}

uint64_t FeedItemContext.previousFeedItems(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, void, void, uint64_t, uint64_t, uint64_t))(a3 + 96))(a1, 0, 0, 2, a2, a3);
}

uint64_t FeedItemContext.previousFeedItems(uniqueIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_1C271CFB8(0, (unint64_t *)&qword_1EBB85EA0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C277E480;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1C261E738(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t, void, void, uint64_t, uint64_t))(a4 + 96))(v11, 1, 0, 0, a3, a4);
  swift_bridgeObjectRelease();
  unint64_t v13 = *(void *)(v12 + 16);
  if (v13 > 1)
  {
    sub_1C277C2D0();
    sub_1C277B8D0();
    uint64_t v18 = type metadata accessor for PluginFeedItem();
    MEMORY[0x1C875B960](v12, v18);
    sub_1C277B8D0();
    swift_bridgeObjectRelease();
    sub_1C277B8D0();
    sub_1C277B8D0();
    uint64_t result = sub_1C277C560();
    __break(1u);
  }
  else
  {
    uint64_t v14 = type metadata accessor for PluginFeedItem();
    uint64_t v15 = *(void *)(v14 - 8);
    if (v13)
    {
      sub_1C267BBEC(v12+ ((*(unsigned __int8 *)(*(void *)(v14 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v14 - 8) + 80)), a5);
      uint64_t v16 = 0;
    }
    else
    {
      uint64_t v16 = 1;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(a5, v16, 1, v14);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t FeedItemContext.previousFeedItems(uniqueIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void, void, uint64_t, uint64_t))(a3 + 96))(a1, 1, 0, 0, a2, a3);
}

uint64_t FeedItemContext.previousFeedItems(withUniqueIdentifierContaining:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 96))(a1, a2, 1, 1, a3, a4);
}

uint64_t FeedItemContext.previousFeedItems(with:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 96))(a1, a2, a3, 1, a4, a5);
}

uint64_t FeedItemContext.isUserInteractive.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))() & 1;
}

id FeedItemContext.sourceProfile.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (void *)(*(uint64_t (**)(void))(a2 + 8))();
  id v3 = objc_msgSend(v2, sel_profileIdentifier);

  return v3;
}

uint64_t sub_1C271BD9C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x756F72676B636162 && a2 == 0xEA0000000000646ELL;
  if (v2 || (sub_1C277C7E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65746E4972657375 && a2 == 0xEF65766974636172)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C277C7E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C271BEC0(uint64_t a1)
{
  BOOL v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDC0];
  sub_1C271D0C4(0, &qword_1EA305200, (uint64_t (*)(void))sub_1C271B7F4, (uint64_t)&type metadata for FeedItemContextEnvironment.UserInteractiveCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v27 = *(void *)(v3 - 8);
  uint64_t v28 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v31 = (char *)&v25 - v4;
  sub_1C271D0C4(0, &qword_1EA305208, (uint64_t (*)(void))sub_1C271B848, (uint64_t)&type metadata for FeedItemContextEnvironment.BackgroundCodingKeys, v2);
  uint64_t v6 = v5;
  uint64_t v30 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v25 - v7;
  sub_1C271D0C4(0, &qword_1EA305210, (uint64_t (*)(void))sub_1C271B89C, (uint64_t)&type metadata for FeedItemContextEnvironment.CodingKeys, v2);
  uint64_t v10 = v9;
  uint64_t v29 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v25 - v11;
  __swift_project_boxed_opaque_existential_1((void *)a1, *(void *)(a1 + 24));
  sub_1C271B89C();
  uint64_t v13 = v32;
  sub_1C277C9A0();
  if (v13) {
    goto LABEL_7;
  }
  uint64_t v26 = v6;
  uint64_t v15 = v30;
  uint64_t v14 = v31;
  uint64_t v32 = a1;
  uint64_t v16 = v12;
  uint64_t v17 = sub_1C277C6E0();
  if (*(void *)(v17 + 16) != 1)
  {
    uint64_t v20 = sub_1C277C360();
    swift_allocError();
    char v22 = v21;
    sub_1C2706D5C();
    *char v22 = &type metadata for FeedItemContextEnvironment;
    sub_1C277C670();
    sub_1C277C340();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x1E4FBBA70], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v10);
    a1 = v32;
LABEL_7:
    __swift_destroy_boxed_opaque_existential_0(a1);
    return a1;
  }
  a1 = *(unsigned __int8 *)(v17 + 32);
  if (a1)
  {
    uint64_t v18 = *(unsigned __int8 *)(v17 + 32);
    char v34 = 1;
    sub_1C271B7F4();
    sub_1C277C660();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v10);
    a1 = v18;
  }
  else
  {
    char v33 = 0;
    sub_1C271B848();
    sub_1C277C660();
    uint64_t v23 = v29;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v26);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v16, v10);
  }
  __swift_destroy_boxed_opaque_existential_0(v32);
  return a1;
}

uint64_t _s14HealthPlatform15FeedItemContextPAAE20displayNamePublisher7Combine03AnyH0VyAA014ProfileDisplayG0Vs5Error_pGvg_0()
{
  sub_1C271CFB8(0, &qword_1EA3051E8, (uint64_t)&type metadata for ProfileDisplayName, MEMORY[0x1E4F1AC08]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)v12 - v3;
  sub_1C271D004();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[1] = 0;
  uint64_t v12[2] = 0xE000000000000000;
  _OWORD v12[3] = 0;
  void v12[4] = 0xE000000000000000;
  v12[5] = MEMORY[0x1E4FBC860];
  sub_1C277B440();
  sub_1C26532A4();
  sub_1C277B410();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1C271D06C();
  uint64_t v10 = sub_1C277B4E0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v10;
}

unint64_t sub_1C271C570()
{
  unint64_t result = qword_1EA3051A8;
  if (!qword_1EA3051A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3051A8);
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedItemContextEnvironment()
{
  return &type metadata for FeedItemContextEnvironment;
}

uint64_t sub_1C271C5D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t v5 = a5 >> 5;
  if (v5 <= 4) {
    return ((uint64_t (__cdecl *)())((char *)&loc_1C271C5F8 + (int)funcs_1C271C600[v5]))();
  }
  return result;
}

uint64_t sub_1C271C604()
{
  return swift_bridgeObjectRetain();
}

id sub_1C271C618(uint64_t a1, void *a2, void *a3, void *a4, char a5)
{
  char v8 = a5 & 0x1F;
  swift_bridgeObjectRetain();

  return sub_1C2646704(a2, a3, a4, v8);
}

uint64_t destroy for FeedItemContextChange(uint64_t a1)
{
  return sub_1C271C698(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t sub_1C271C698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t v5 = a5 >> 5;
  if (v5 <= 4) {
    return ((uint64_t (__cdecl *)())((char *)&loc_1C271C6B8 + (int)funcs_1C271C6C0[v5]))();
  }
  return result;
}

uint64_t sub_1C271C6C4()
{
  return swift_bridgeObjectRelease();
}

void sub_1C271C6D8(uint64_t a1, void *a2, void *a3, void *a4, char a5)
{
  char v8 = a5 & 0x1F;
  swift_bridgeObjectRelease();

  sub_1C2645714(a2, a3, a4, v8);
}

uint64_t initializeWithCopy for FeedItemContextChange(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_1C271C5D8(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for FeedItemContextChange(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_1C271C5D8(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  unsigned __int8 v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_1C271C698(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for FeedItemContextChange(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_1C271C698(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedItemContextChange(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3B && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 59);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 32) >> 5) & 0xFFFFFFC7 | (8 * ((*(unsigned __int8 *)(a1 + 32) >> 2) & 7))) ^ 0x3F;
  if (v3 >= 0x3A) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FeedItemContextChange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3A)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 59;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x3B) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3B) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2)
    {
      *(_OWORD *)uint64_t result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(unsigned char *)(result + 32) = 4 * (((-a2 >> 3) & 7) - 8 * a2);
    }
  }
  return result;
}

uint64_t sub_1C271C918(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 32);
  if (v1 <= 0x9F) {
    return v1 >> 5;
  }
  else {
    return (*(_DWORD *)a1 + 5);
  }
}

uint64_t sub_1C271C934(uint64_t result)
{
  *(unsigned char *)(result + 32) &= 0x1Fu;
  return result;
}

uint64_t sub_1C271C944(uint64_t result, unsigned int a2)
{
  if (a2 < 5)
  {
    *(unsigned char *)(result + 32) = *(unsigned char *)(result + 32) & 3 | (32 * a2);
  }
  else
  {
    *(void *)uint64_t result = a2 - 5;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = -96;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for FeedItemContextChangeError(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1C271C9BC(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

id sub_1C271C9BC(id result, char a2)
{
  if (a2 == 1) {
    return result;
  }
  if (!a2) {
    return (id)swift_bridgeObjectRetain();
  }
  return result;
}

void destroy for FeedItemContextChangeError(uint64_t a1)
{
}

void sub_1C271C9E8(void *a1, char a2)
{
  if (a2 == 1)
  {
  }
  else if (!a2)
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t assignWithCopy for FeedItemContextChangeError(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1C271C9BC(*(id *)a2, v4);
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = v3;
  char v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_1C271C9E8(v5, v6);
  return a1;
}

uint64_t assignWithTake for FeedItemContextChangeError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  char v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_1C271C9E8(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedItemContextChangeError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedItemContextChangeError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C271CB24(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1C271CB3C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FeedItemContextChangeError()
{
  return &type metadata for FeedItemContextChangeError;
}

uint64_t dispatch thunk of FeedItemContext.notificationManager.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FeedItemContext.boundingRange.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of FeedItemContext.unitPreferenceController.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of FeedItemContext.displayNamePublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of FeedItemContext.commit(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of FeedItemContext.previousFeedItems(predicate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 96))();
}

uint64_t dispatch thunk of FeedItemContext.fetchAllPluginStorage()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

unsigned char *_s14HealthPlatform26FeedItemContextEnvironmentOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C271CCF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedItemContextEnvironment.CodingKeys()
{
  return &type metadata for FeedItemContextEnvironment.CodingKeys;
}

ValueMetadata *type metadata accessor for FeedItemContextEnvironment.BackgroundCodingKeys()
{
  return &type metadata for FeedItemContextEnvironment.BackgroundCodingKeys;
}

ValueMetadata *type metadata accessor for FeedItemContextEnvironment.UserInteractiveCodingKeys()
{
  return &type metadata for FeedItemContextEnvironment.UserInteractiveCodingKeys;
}

unint64_t sub_1C271CD54()
{
  unint64_t result = qword_1EA3051B0;
  if (!qword_1EA3051B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3051B0);
  }
  return result;
}

unint64_t sub_1C271CDAC()
{
  unint64_t result = qword_1EA3051B8;
  if (!qword_1EA3051B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3051B8);
  }
  return result;
}

unint64_t sub_1C271CE04()
{
  unint64_t result = qword_1EA3051C0;
  if (!qword_1EA3051C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3051C0);
  }
  return result;
}

unint64_t sub_1C271CE5C()
{
  unint64_t result = qword_1EA3051C8;
  if (!qword_1EA3051C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3051C8);
  }
  return result;
}

unint64_t sub_1C271CEB4()
{
  unint64_t result = qword_1EA3051D0;
  if (!qword_1EA3051D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3051D0);
  }
  return result;
}

unint64_t sub_1C271CF0C()
{
  unint64_t result = qword_1EA3051D8;
  if (!qword_1EA3051D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3051D8);
  }
  return result;
}

unint64_t sub_1C271CF64()
{
  unint64_t result = qword_1EA3051E0;
  if (!qword_1EA3051E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3051E0);
  }
  return result;
}

void sub_1C271CFB8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C271D004()
{
  if (!qword_1EA3051F0)
  {
    sub_1C26532A4();
    unint64_t v0 = sub_1C277C980();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA3051F0);
    }
  }
}

unint64_t sub_1C271D06C()
{
  unint64_t result = qword_1EA3051F8;
  if (!qword_1EA3051F8)
  {
    sub_1C271D004();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3051F8);
  }
  return result;
}

void sub_1C271D0C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t AnchoredChangeSet.changes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AnchoredChangeSet.changes.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*AnchoredChangeSet.changes.modify())()
{
  return nullsub_1;
}

void *AnchoredChangeSet.newAnchor.getter()
{
  uint64_t v1 = *(void **)(v0 + 8);
  id v2 = v1;
  return v1;
}

void AnchoredChangeSet.newAnchor.setter(uint64_t a1)
{
  *(void *)(v1 + 8) = a1;
}

uint64_t (*AnchoredChangeSet.newAnchor.modify())()
{
  return nullsub_1;
}

uint64_t AnchoredChangeSet.init(changes:newAnchor:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t AnchoredDatabaseState.anchoredChangeSet.getter@<X0>(void *a1@<X8>)
{
  id v2 = (void *)v1[1];
  *a1 = *v1;
  a1[1] = v2;
  id v3 = v2;

  return swift_bridgeObjectRetain();
}

uint64_t AnchoredDatabaseState.dateRanges.getter()
{
  return swift_bridgeObjectRetain();
}

void *AnchoredDatabaseState.init(anchoredChangeSet:dateRanges:)@<X0>(void *result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v3 = result[1];
  *a3 = *result;
  a3[1] = v3;
  a3[2] = a2;
  return result;
}

id AnchoredTypeChangeSet.hkType.getter()
{
  return *v0;
}

void *AnchoredTypeChangeSet.change.getter()
{
  uint64_t v1 = *(void **)(v0 + 8);
  id v2 = v1;
  return v1;
}

void AnchoredTypeChangeSet.change.setter(uint64_t a1)
{
  *(void *)(v1 + 8) = a1;
}

uint64_t (*AnchoredTypeChangeSet.change.modify())()
{
  return nullsub_1;
}

void *AnchoredTypeChangeSet.newAnchor.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

void AnchoredTypeChangeSet.newAnchor.setter(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
}

uint64_t (*AnchoredTypeChangeSet.newAnchor.modify())()
{
  return nullsub_1;
}

uint64_t AnchoredTypeChangeSet.init(hkType:change:newAnchor:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

id AnchoredTypeState.anchoredTypeChangeSet.getter@<X0>(void *a1@<X8>)
{
  id v2 = *(void **)v1;
  id v7 = *(id *)(v1 + 8);
  uint64_t v3 = *(void **)(v1 + 16);
  *a1 = *(void *)v1;
  a1[1] = v7;
  a1[2] = v3;
  id v4 = v3;
  id v5 = v2;

  return v7;
}

__n128 AnchoredTypeState.anchoredTypeChangeSet.setter(uint64_t *a1)
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v1 + 8);
  id v5 = *(void **)(v1 + 16);

  *(void *)uint64_t v1 = v3;
  __n128 result = *(__n128 *)(a1 + 1);
  *(__n128 *)(v1 + 8) = result;
  return result;
}

uint64_t (*AnchoredTypeState.anchoredTypeChangeSet.modify())()
{
  return nullsub_1;
}

uint64_t AnchoredTypeState.dataPresentDateInterval.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AnchoredTypeState() + 20);

  return sub_1C271D910(v3, a1);
}

uint64_t AnchoredTypeState.dataPresentDateInterval.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AnchoredTypeState() + 20);

  return sub_1C271D974(a1, v3);
}

uint64_t (*AnchoredTypeState.dataPresentDateInterval.modify())()
{
  return nullsub_1;
}

id AnchoredTypeState.hkType.getter()
{
  return *v0;
}

uint64_t AnchoredTypeState.init(anchoredTypeChangeSet:dataPresentDateInterval:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  long long v9 = *a1;
  uint64_t v5 = *((void *)a1 + 2);
  uint64_t v6 = a3 + *(int *)(type metadata accessor for AnchoredTypeState() + 20);
  uint64_t v7 = sub_1C277A520();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(_OWORD *)a3 = v9;
  *(void *)(a3 + 16) = v5;

  return sub_1C271D974(a2, v6);
}

uint64_t _s14HealthPlatform17AnchoredChangeSetV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  id v2 = (void *)a1[1];
  uint64_t v3 = (void *)a2[1];
  sub_1C266E9B4(*a1, *a2);
  if (v4)
  {
    if (v2)
    {
      if (v3)
      {
        sub_1C2644ED8(0, &qword_1EBB82ED8);
        id v5 = v3;
        id v6 = v2;
        char v7 = sub_1C277C030();

        if (v7) {
          return 1;
        }
      }
    }
    else if (!v3)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t _s14HealthPlatform21AnchoredTypeChangeSetV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  id v2 = *(void **)(a1 + 8);
  uint64_t v3 = *(void **)(a1 + 16);
  char v4 = *(void **)(a2 + 8);
  id v5 = *(void **)(a2 + 16);
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85F30);
  if ((sub_1C277C030() & 1) == 0) {
    return 0;
  }
  if (v2)
  {
    if (!v4) {
      return 0;
    }
    sub_1C2644ED8(0, &qword_1EBB82F38);
    id v6 = v4;
    id v7 = v2;
    char v8 = sub_1C277C030();

    if ((v8 & 1) == 0) {
      return 0;
    }
  }
  else if (v4)
  {
    return 0;
  }
  if (v3)
  {
    if (v5)
    {
      sub_1C2644ED8(0, &qword_1EBB82ED8);
      id v9 = v5;
      id v10 = v3;
      char v11 = sub_1C277C030();

      if (v11) {
        return 1;
      }
    }
  }
  else if (!v5)
  {
    return 1;
  }
  return 0;
}

uint64_t _s14HealthPlatform21AnchoredDatabaseStateV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = *a2;
  id v6 = (void *)a2[1];
  uint64_t v7 = a2[2];
  id v8 = v6;
  swift_bridgeObjectRetain();
  id v9 = v3;
  swift_bridgeObjectRetain();
  sub_1C266E9B4(v2, v5);
  if ((v10 & 1) == 0) {
    goto LABEL_6;
  }
  if (v3)
  {
    if (v6)
    {
      sub_1C2644ED8(0, &qword_1EBB82ED8);
      id v11 = v8;
      id v12 = v9;
      char v13 = sub_1C277C030();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      if (v13) {
        goto LABEL_9;
      }
      return 0;
    }
LABEL_6:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v6) {
    return 0;
  }
LABEL_9:

  return sub_1C266E444(v4, v7);
}

uint64_t type metadata accessor for AnchoredTypeState()
{
  uint64_t result = qword_1EBB859B8;
  if (!qword_1EBB859B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C271D910(uint64_t a1, uint64_t a2)
{
  sub_1C265D068(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C271D974(uint64_t a1, uint64_t a2)
{
  sub_1C265D068(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

BOOL _s14HealthPlatform17AnchoredTypeStateV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_1C277A520();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C271EBC8();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C265D068(0);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v32 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v32 - v19;
  uint64_t v36 = *a1;
  long long v37 = *(_OWORD *)(a1 + 1);
  uint64_t v34 = *a2;
  long long v35 = *(_OWORD *)(a2 + 1);
  if ((_s14HealthPlatform21AnchoredTypeChangeSetV2eeoiySbAC_ACtFZ_0((uint64_t)&v36, (uint64_t)&v34) & 1) == 0) {
    return 0;
  }
  char v33 = v7;
  uint64_t v21 = v5;
  uint64_t v22 = type metadata accessor for AnchoredTypeState();
  sub_1C271D910((uint64_t)a1 + *(int *)(v22 + 20), (uint64_t)v20);
  uint64_t v23 = *(int *)(v22 + 20);
  uint64_t v24 = v21;
  sub_1C271D910((uint64_t)a2 + v23, (uint64_t)v18);
  uint64_t v25 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_1C271D910((uint64_t)v20, (uint64_t)v11);
  sub_1C271D910((uint64_t)v18, v25);
  uint64_t v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  if (v26((uint64_t)v11, 1, v4) == 1)
  {
    sub_1C271EC2C((uint64_t)v18, (uint64_t (*)(void))sub_1C265D068);
    sub_1C271EC2C((uint64_t)v20, (uint64_t (*)(void))sub_1C265D068);
    if (v26(v25, 1, v4) == 1)
    {
      sub_1C271EC2C((uint64_t)v11, (uint64_t (*)(void))sub_1C265D068);
      return 1;
    }
    goto LABEL_7;
  }
  sub_1C271D910((uint64_t)v11, (uint64_t)v15);
  if (v26(v25, 1, v4) == 1)
  {
    sub_1C271EC2C((uint64_t)v18, (uint64_t (*)(void))sub_1C265D068);
    sub_1C271EC2C((uint64_t)v20, (uint64_t (*)(void))sub_1C265D068);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v15, v4);
LABEL_7:
    sub_1C271EC2C((uint64_t)v11, (uint64_t (*)(void))sub_1C271EBC8);
    return 0;
  }
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 32);
  uint64_t v28 = v33;
  v27(v33, v25, v4);
  sub_1C271EC8C();
  char v29 = sub_1C277B810();
  uint64_t v30 = *(void (**)(char *, uint64_t))(v24 + 8);
  v30(v28, v4);
  sub_1C271EC2C((uint64_t)v18, (uint64_t (*)(void))sub_1C265D068);
  sub_1C271EC2C((uint64_t)v20, (uint64_t (*)(void))sub_1C265D068);
  v30(v15, v4);
  sub_1C271EC2C((uint64_t)v11, (uint64_t (*)(void))sub_1C265D068);
  return (v29 & 1) != 0;
}

void *initializeBufferWithCopyOfBuffer for AnchoredChangeSet(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  id v4 = v3;
  return a1;
}

void destroy for AnchoredChangeSet(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 8);
}

void *assignWithCopy for AnchoredChangeSet(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v4 = (void *)a1[1];
  uint64_t v5 = (void *)a2[1];
  a1[1] = v5;
  id v6 = v5;

  return a1;
}

uint64_t assignWithTake for AnchoredChangeSet(uint64_t a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  id v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for AnchoredChangeSet()
{
  return &type metadata for AnchoredChangeSet;
}

uint64_t destroy for AnchoredDatabaseState(uint64_t a1)
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s14HealthPlatform21AnchoredDatabaseStateVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  id v4 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for AnchoredDatabaseState(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v4 = (void *)a1[1];
  uint64_t v5 = (void *)a2[1];
  a1[1] = v5;
  id v6 = v5;

  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AnchoredDatabaseState(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  id v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AnchoredDatabaseState()
{
  return &type metadata for AnchoredDatabaseState;
}

void *initializeBufferWithCopyOfBuffer for AnchoredTypeChangeSet(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  id v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  a1[2] = v5;
  id v6 = v3;
  id v7 = v4;
  id v8 = v5;
  return a1;
}

void destroy for AnchoredTypeChangeSet(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
}

uint64_t assignWithCopy for AnchoredTypeChangeSet(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a1 + 8);
  id v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  uint64_t v10 = *(void **)(a1 + 16);
  id v11 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v11;
  id v12 = v11;

  return a1;
}

uint64_t assignWithTake for AnchoredTypeChangeSet(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for AnchoredTypeChangeSet()
{
  return &type metadata for AnchoredTypeChangeSet;
}

char *initializeBufferWithCopyOfBuffer for AnchoredTypeState(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  id v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    id v6 = a2[1];
    id v7 = a2[2];
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    id v9 = &a1[v8];
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C277A520();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    uint64_t v14 = v4;
    uint64_t v15 = v6;
    uint64_t v16 = v7;
    if (v13(v10, 1, v11))
    {
      sub_1C265D068(0);
      memcpy(v9, v10, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  return v5;
}

uint64_t destroy for AnchoredTypeState(id *a1, uint64_t a2)
{
  id v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1C277A520();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    id v7 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *initializeWithCopy for AnchoredTypeState(void *a1, uint64_t a2, uint64_t a3)
{
  id v4 = *(void **)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v5;
  id v6 = *(void **)(a2 + 16);
  a1[2] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  id v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_1C277A520();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  id v13 = v4;
  id v14 = v5;
  id v15 = v6;
  if (v12(v9, 1, v10))
  {
    sub_1C265D068(0);
    memcpy(v8, v9, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithCopy for AnchoredTypeState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  id v9 = *(void **)(a1 + 8);
  uint64_t v10 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v10;
  id v11 = v10;

  uint64_t v12 = *(void **)(a1 + 16);
  id v13 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v13;
  id v14 = v13;

  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = sub_1C277A520();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 24))(v16, v17, v18);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_6;
  }
  if (v22)
  {
LABEL_6:
    sub_1C265D068(0);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v19 + 16))(v16, v17, v18);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  return a1;
}

uint64_t initializeWithTake for AnchoredTypeState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (void *)(a1 + v4);
  id v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_1C277A520();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1C265D068(0);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for AnchoredTypeState(uint64_t a1, void *a2, uint64_t a3)
{
  id v6 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = a2[1];

  uint64_t v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = a2[2];

  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (void *)(a1 + v9);
  id v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1C277A520();
  uint64_t v13 = *(void *)(v12 - 8);
  id v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_1C265D068(0);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnchoredTypeState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C271E9C4);
}

uint64_t sub_1C271E9C4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1C265D068(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    id v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for AnchoredTypeState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C271EA88);
}

void *sub_1C271EA88(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    sub_1C265D068(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1C271EB30()
{
  sub_1C265D068(319);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1C271EBC8()
{
  if (!qword_1EA305218)
  {
    sub_1C265D068(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA305218);
    }
  }
}

uint64_t sub_1C271EC2C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1C271EC8C()
{
  unint64_t result = qword_1EA3043E8;
  if (!qword_1EA3043E8)
  {
    sub_1C277A520();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3043E8);
  }
  return result;
}

void SharableModelReference.asPluginFeedItemSharableModelReference()(uint64_t *a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_identifier);
  uint64_t v4 = sub_1C277B850();
  uint64_t v6 = v5;

  *a1 = v4;
  a1[1] = v6;
}

uint64_t SharableModelReference.__allocating_init(context:pluginSharableModelReference:)(void *a1)
{
  id v3 = self;
  uint64_t v4 = (void *)sub_1C277B820();
  id v5 = objc_msgSend(v3, sel_entityForName_inManagedObjectContext_, v4, a1);

  if (v5)
  {
    id v6 = objc_msgSend(objc_allocWithZone(v1), sel_initWithEntity_insertIntoManagedObjectContext_, v5, a1);
    uint64_t v7 = (void *)sub_1C277B820();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setIdentifier_, v7);

    return (uint64_t)v6;
  }
  else
  {
    uint64_t result = sub_1C277C560();
    __break(1u);
  }
  return result;
}

unint64_t static SharableModelReference.entityName.getter()
{
  return 0xD000000000000016;
}

void *static SharableModelReference.findOrCreate(pluginSharableModelReference:in:for:)(uint64_t *a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  sub_1C2669068();
  sub_1C26322C0();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C277EF40;
  uint64_t v9 = MEMORY[0x1E4FBB1A0];
  *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v10 = sub_1C263226C();
  *(void *)(v8 + 32) = 0x696669746E656469;
  *(void *)(v8 + 40) = 0xEA00000000007265;
  *(void *)(v8 + 96) = v9;
  *(void *)(v8 + 104) = v10;
  *(void *)(v8 + 64) = v10;
  *(void *)(v8 + 72) = v6;
  *(void *)(v8 + 80) = v7;
  *(void *)(v8 + 136) = v9;
  *(void *)(v8 + 144) = v10;
  *(void *)(v8 + 112) = 0x6D65744964656566;
  *(void *)(v8 + 120) = 0xE800000000000000;
  *(void *)(v8 + 176) = type metadata accessor for FeedItem();
  *(void *)(v8 + 184) = sub_1C271F030();
  *(void *)(v8 + 152) = a3;
  swift_bridgeObjectRetain();
  id v11 = a3;
  uint64_t v12 = (void *)sub_1C277BCC0();
  uint64_t v13 = (void *)static NSManagedObjectUnique<>.findOrCreate(context:uniquenessPredicate:)(a2, (uint64_t)v12, v3, (uint64_t)&protocol witness table for SharableModelReference);
  id v14 = (void *)sub_1C277B820();
  objc_msgSend(v13, sel_setIdentifier_, v14);

  objc_msgSend(v13, sel_setFeedItem_, v11);
  return v13;
}

unint64_t sub_1C271F030()
{
  unint64_t result = qword_1EBB829A8;
  if (!qword_1EBB829A8)
  {
    type metadata accessor for FeedItem();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB829A8);
  }
  return result;
}

id static SharableModelReference.fetchRequest(predicate:)(uint64_t a1)
{
  id v2 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v3 = (void *)sub_1C277B820();
  id v4 = objc_msgSend(v2, sel_initWithEntityName_, v3);

  objc_msgSend(v4, sel_setPredicate_, a1);
  return v4;
}

unint64_t sub_1C271F114()
{
  return 0xD000000000000016;
}

uint64_t FeedItemGenerator.domain.getter@<X0>(uint64_t a1@<X8>)
{
  id v2 = *(void **)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  char v5 = *(unsigned char *)(v1 + 24);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  id v6 = v2;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

void *FeedItemGenerator.feedItemPredicate.getter()
{
  uint64_t v1 = *(void **)(v0 + 40);
  sub_1C2646704(v1, *(void **)(v0 + 48), *(void **)(v0 + 56), *(unsigned char *)(v0 + 64));
  return v1;
}

id sub_1C271F1E0@<X0>(uint64_t *a1@<X0>, void *a2@<X2>, void *a3@<X3>, void *a4@<X4>, char a5@<W5>, uint64_t *a6@<X8>)
{
  uint64_t v11 = *a1;
  sub_1C263E750(0, &qword_1EBB85958, (uint64_t)&type metadata for FeedItemContextChange, MEMORY[0x1E4FBBE00]);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C277E480;
  *(void *)(v12 + 32) = v11;
  *(void *)(v12 + 40) = a2;
  *(void *)(v12 + 48) = a3;
  *(void *)(v12 + 56) = a4;
  *(unsigned char *)(v12 + 64) = a5 | 0x80;
  *a6 = v12;
  swift_bridgeObjectRetain();

  return sub_1C2646704(a2, a3, a4, a5);
}

double sub_1C271F2AC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v58 = a8;
  *(void *)&long long v54 = a7;
  uint64_t v53 = a6;
  int v67 = a5;
  uint64_t v65 = a3;
  uint64_t v66 = a4;
  uint64_t v64 = a2;
  uint64_t v57 = a1;
  sub_1C27201BC();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v61 = v11;
  uint64_t v62 = v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v55 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C261E118(0, &qword_1EBB83640, (void (*)(uint64_t))sub_1C27201BC, (void (*)(void))sub_1C272030C);
  uint64_t v60 = v14;
  uint64_t v63 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  char v59 = (char *)&v46 - v15;
  uint64_t v16 = type metadata accessor for GeneratorContext();
  uint64_t v52 = *(void *)(v16 - 8);
  uint64_t v17 = *(void *)(v52 + 64);
  uint64_t v18 = MEMORY[0x1F4188790](v16 - 8);
  uint64_t v50 = (uint64_t)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v46 - v19;
  sub_1C264F840(0, &qword_1EBB83600, (void (*)(uint64_t))sub_1C271FF24, (void (*)(void))sub_1C2720250);
  uint64_t v68 = v21;
  uint64_t v49 = *(void *)(v21 - 8);
  uint64_t v22 = v49;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  unint64_t v47 = (char *)&v46 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v26 = (char *)&v46 - v25;
  sub_1C271FF24();
  uint64_t v56 = v27;
  sub_1C261E938(0);
  sub_1C2720250();
  uint64_t v51 = v26;
  sub_1C277B500();
  uint64_t v48 = v20;
  sub_1C2647B80(a1, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for GeneratorContext);
  sub_1C263E750(0, (unint64_t *)&qword_1EBB85EA0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C277E480;
  *(void *)(inited + 32) = v53;
  *(void *)(inited + 40) = v54;
  uint64_t v29 = sub_1C261E738(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t v30 = v47;
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v47, v26, v68);
  sub_1C2720284();
  swift_bridgeObjectRetain();
  uint64_t v31 = v55;
  uint64_t v32 = v30;
  sub_1C277B550();
  uint64_t v33 = v50;
  sub_1C2647B80((uint64_t)v20, v50, (uint64_t (*)(void))type metadata accessor for GeneratorContext);
  unint64_t v34 = (*(unsigned __int8 *)(v52 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
  unint64_t v35 = (v17 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  sub_1C2647C50(v33, v36 + v34, (uint64_t (*)(void))type metadata accessor for GeneratorContext);
  unint64_t v37 = v36 + v35;
  *(void *)unint64_t v37 = v29;
  long long v54 = xmmword_1C277F760;
  *(_OWORD *)(v37 + 8) = xmmword_1C277F760;
  *(unsigned char *)(v37 + 24) = 0;
  sub_1C263E750(0, (unint64_t *)&qword_1EBB85930, (uint64_t)&type metadata for FeedItemContextChange, MEMORY[0x1E4FBB320]);
  sub_1C272030C();
  swift_bridgeObjectRetain();
  os_log_type_t v38 = v59;
  uint64_t v39 = v61;
  sub_1C277B500();
  swift_release();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v31, v39);
  sub_1C27203FC();
  uint64_t v40 = v60;
  uint64_t v41 = sub_1C277B4E0();
  swift_bridgeObjectRelease();
  unint64_t v42 = *(void (**)(char *, uint64_t))(v49 + 8);
  uint64_t v43 = v68;
  v42(v32, v68);
  sub_1C26480D4((uint64_t)v48, (uint64_t (*)(void))type metadata accessor for GeneratorContext);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v38, v40);
  (*(void (**)(uint64_t))(*(void *)(v56 - 8) + 8))(v58);
  sub_1C26480D4(v57, (uint64_t (*)(void))type metadata accessor for GeneratorContext);
  v42(v51, v43);
  uint64_t v44 = v65;
  *(void *)a9 = v64;
  *(void *)(a9 + 8) = v44;
  *(void *)(a9 + 16) = v66;
  *(unsigned char *)(a9 + 24) = v67;
  *(void *)(a9 + 32) = v41;
  *(void *)(a9 + 40) = v29;
  double result = *(double *)&v54;
  *(_OWORD *)(a9 + 48) = v54;
  *(unsigned char *)(a9 + 64) = 0;
  return result;
}

uint64_t sub_1C271F938@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for PluginFeedItem();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2650A98(0);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2647B80(a1, (uint64_t)v10, (uint64_t (*)(void))sub_1C2650A98);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4);
  if (result == 1)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
  }
  else
  {
    sub_1C2647C50((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
    sub_1C261E6D4(0, &qword_1EBB85950, (uint64_t (*)(uint64_t))type metadata accessor for PluginFeedItem, MEMORY[0x1E4FBBE00]);
    unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1C277E480;
    uint64_t result = sub_1C2647C50((uint64_t)v7, v12 + v13, (uint64_t (*)(void))type metadata accessor for PluginFeedItem);
  }
  *a2 = v12;
  return result;
}

__n128 FeedItemGenerator.init(context:domain:feedItemIdentifier:feedItemProvider:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v37 = a3;
  uint64_t v38 = a4;
  uint64_t v36 = a1;
  uint64_t v11 = type metadata accessor for GeneratorContext();
  MEMORY[0x1F4188790](v11 - 8);
  unint64_t v13 = &v31[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C271FF24();
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v19 = &v31[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = &v31[-v20];
  uint64_t v22 = *(void *)a2;
  uint64_t v34 = *(void *)(a2 + 8);
  uint64_t v35 = v22;
  uint64_t v33 = *(void *)(a2 + 16);
  int v32 = *(unsigned __int8 *)(a2 + 24);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = a5;
  *(void *)(v23 + 24) = a6;
  sub_1C264EE60(0);
  sub_1C264EE94();
  swift_retain();
  sub_1C277B4A0();
  uint64_t v24 = v36;
  sub_1C2647B80(v36, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GeneratorContext);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v16 + 16))(v19, v21, v15);
  sub_1C271F2AC((uint64_t)v13, v35, v34, v33, v32, v37, v38, (uint64_t)v19, (uint64_t)&v39);
  swift_release();
  sub_1C26480D4(v24, (uint64_t (*)(void))type metadata accessor for GeneratorContext);
  (*(void (**)(unsigned char *, uint64_t))(v16 + 8))(v21, v15);
  char v25 = v41;
  uint64_t v26 = v42;
  uint64_t v27 = v44;
  char v28 = v45;
  __n128 result = v40;
  long long v30 = v43;
  *(void *)a7 = v39;
  *(__n128 *)(a7 + 8) = result;
  *(unsigned char *)(a7 + 24) = v25;
  *(void *)(a7 + 32) = v26;
  *(_OWORD *)(a7 + 40) = v30;
  *(void *)(a7 + 56) = v27;
  *(unsigned char *)(a7 + 64) = v28;
  return result;
}

uint64_t sub_1C271FD9C(void (*a1)(uint64_t))
{
  sub_1C2650A98(0);
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  uint64_t v8 = (char *)&v10 - v7;
  a1(v6);
  sub_1C2647B80((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(void))sub_1C2650A98);
  sub_1C277B440();
  return sub_1C26480D4((uint64_t)v8, (uint64_t (*)(void))sub_1C2650A98);
}

uint64_t sub_1C271FE90()
{
  return swift_retain();
}

uint64_t sub_1C271FE98()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C271FED0()
{
  (*(void (**)(void))(v0 + 16))();
  sub_1C261E938(0);
  return sub_1C277B440();
}

void sub_1C271FF24()
{
  if (!qword_1EBB83728)
  {
    sub_1C264EE60(255);
    sub_1C264EE94();
    unint64_t v0 = sub_1C277B4B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB83728);
    }
  }
}

uint64_t sub_1C271FF88()
{
  return sub_1C271FD9C(*(void (**)(uint64_t))(v0 + 16));
}

uint64_t assignWithCopy for FeedItemGenerator(uint64_t a1, void **a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  id v6 = v5;

  *(void *)(a1 + 8) = v2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = v2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *((unsigned char *)v2 + 24);
  *(void *)(a1 + 32) = v2[4];
  swift_retain();
  swift_release();
  uint64_t v7 = v2[5];
  uint64_t v8 = v2[6];
  uint64_t v9 = v2[7];
  LOBYTE(v2) = *((unsigned char *)v2 + 64);
  sub_1C2646704(v7, v8, v9, (char)v2);
  uint64_t v10 = *(void **)(a1 + 40);
  uint64_t v11 = *(void **)(a1 + 48);
  uint64_t v12 = *(void **)(a1 + 56);
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  char v13 = *(unsigned char *)(a1 + 64);
  *(unsigned char *)(a1 + 64) = (_BYTE)v2;
  sub_1C2645714(v10, v11, v12, v13);
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for FeedItemGenerator(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 56);
  char v5 = *(unsigned char *)(a2 + 64);
  id v6 = *(void **)(a1 + 40);
  uint64_t v7 = *(void **)(a1 + 48);
  uint64_t v8 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = v4;
  char v9 = *(unsigned char *)(a1 + 64);
  *(unsigned char *)(a1 + 64) = v5;
  sub_1C2645714(v6, v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedItemGenerator(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 65)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedItemGenerator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void sub_1C27201BC()
{
  if (!qword_1EBB83688)
  {
    sub_1C264F840(255, &qword_1EBB83600, (void (*)(uint64_t))sub_1C271FF24, (void (*)(void))sub_1C2720250);
    sub_1C2720284();
    unint64_t v0 = sub_1C277B220();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB83688);
    }
  }
}

uint64_t sub_1C2720250()
{
  return sub_1C261DEEC(&qword_1EBB83720, (void (*)(uint64_t))sub_1C271FF24);
}

unint64_t sub_1C2720284()
{
  unint64_t result = qword_1EBB835F8;
  if (!qword_1EBB835F8)
  {
    sub_1C264F840(255, &qword_1EBB83600, (void (*)(uint64_t))sub_1C271FF24, (void (*)(void))sub_1C2720250);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB835F8);
  }
  return result;
}

uint64_t sub_1C272030C()
{
  return sub_1C261DEEC(&qword_1EBB83680, (void (*)(uint64_t))sub_1C27201BC);
}

id sub_1C2720344@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for GeneratorContext() - 8);
  unint64_t v6 = (*(void *)(v5 + 64)
      + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void **)(v2 + v6);
  uint64_t v8 = *(void **)(v2 + v6 + 8);
  char v9 = *(void **)(v2 + v6 + 16);
  char v10 = *(unsigned char *)(v2 + v6 + 24);

  return sub_1C271F1E0(a1, v7, v8, v9, v10, a2);
}

unint64_t sub_1C27203FC()
{
  unint64_t result = qword_1EBB83638;
  if (!qword_1EBB83638)
  {
    sub_1C261E118(255, &qword_1EBB83640, (void (*)(uint64_t))sub_1C27201BC, (void (*)(void))sub_1C272030C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB83638);
  }
  return result;
}

char *keypath_get_selector_dateUpdated()
{
  return sel_dateUpdated;
}

void sub_1C2720494(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_dateUpdated);
  sub_1C277A810();
}

void sub_1C27204F8(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  id v3 = (id)sub_1C277A7E0();
  objc_msgSend(v2, sel_setDateUpdated_, v3);
}

char *keypath_get_selector_associatedProfile()
{
  return sel_associatedProfile;
}

id sub_1C2720560@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_associatedProfile);
  *a2 = result;
  return result;
}

id sub_1C272059C(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAssociatedProfile_, *a1);
}

char *keypath_get_selector_kindRawValue()
{
  return sel_kindRawValue;
}

void sub_1C27205BC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_kindRawValue);
  uint64_t v4 = sub_1C277B850();
  uint64_t v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

void sub_1C2720618(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  id v3 = (id)sub_1C277B820();
  objc_msgSend(v2, sel_setKindRawValue_, v3);
}

char *keypath_get_selector_sections()
{
  return sel_sections;
}

id sub_1C2720688@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_sections);
  *a2 = result;
  return result;
}

id sub_1C27206C4(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSections_, *a1);
}

Swift::Void __swiftcall DebuggingResponder.deregisterForDebuggingRequests()()
{
  uint64_t v1 = v0;
  if (qword_1EBB86260 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C277B130();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBB86280);
  id v3 = sub_1C277B100();
  os_log_type_t v4 = sub_1C277BD00();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v11 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    swift_getMetatypeMetadata();
    uint64_t v7 = sub_1C277B860();
    uint64_t v10 = sub_1C263FDFC(v7, v8, &v11);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v3, v4, "[%s] deregisterForDebuggingRequests()", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v6, -1, -1);
    MEMORY[0x1C875D230](v5, -1, -1);
  }

  id v9 = objc_msgSend(self, sel_defaultCenter);
  if (qword_1EBB82F50 != -1) {
    swift_once();
  }
  objc_msgSend(v9, sel_removeObserver_name_object_, v1, qword_1EBB82F48, 0, v10, v11);
}

uint64_t *USR1SignalDebuggingResponderListener.__allocating_init()()
{
  return USR1SignalDebuggingResponderListener.init()();
}

uint64_t *USR1SignalDebuggingResponderListener.init()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C277B640();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_allocWithZone(MEMORY[0x1E4F28EB8]);
  swift_retain();
  *(void *)(v1 + 24) = objc_msgSend(v6, sel_init);
  swift_release();
  sub_1C264E740();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCB28], v2);
  uint64_t v7 = (void *)sub_1C277BEE0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  unint64_t v8 = sub_1C26D3E38(30, v7);
  uint64_t v9 = qword_1EBB85EA8;
  swift_retain();
  if (v9 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1C277B130();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EBB85ED8);
  swift_retain_n();
  uint64_t v11 = sub_1C277B100();
  os_log_type_t v12 = sub_1C277BD40();
  if (os_log_type_enabled(v11, v12))
  {
    char v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v18 = (uint64_t)v8;
    uint64_t v19 = v14;
    *(_DWORD *)char v13 = 136315138;
    type metadata accessor for USR1SignalDebuggingResponderListener();
    swift_retain();
    uint64_t v15 = sub_1C277B870();
    uint64_t v18 = sub_1C263FDFC(v15, v16, &v19);
    sub_1C277C0D0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v11, v12, "%s: init()", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v14, -1, -1);
    MEMORY[0x1C875D230](v13, -1, -1);

    swift_release();
  }
  else
  {

    swift_release_n();
  }
  return v8;
}

void sub_1C2720C04()
{
  if (qword_1EBB85EA8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1C277B130();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBB85ED8);
  swift_retain_n();
  uint64_t v2 = sub_1C277B100();
  os_log_type_t v3 = sub_1C277BD40();
  uint64_t v4 = &unk_1C277E000;
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v17 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    type metadata accessor for USR1SignalDebuggingResponderListener();
    swift_retain();
    uint64_t v7 = sub_1C277B870();
    uint64_t v16 = sub_1C263FDFC(v7, v8, &v17);
    sub_1C277C0D0();
    swift_release_n();
    uint64_t v4 = (void *)&unk_1C277E000;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v2, v3, "%s: sourceNotification() sending message", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v6, -1, -1);
    MEMORY[0x1C875D230](v5, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  id v9 = objc_msgSend(self, sel_defaultCenter);
  if (qword_1EBB82F50 != -1) {
    swift_once();
  }
  objc_msgSend(v9, sel_postNotificationName_object_, qword_1EBB82F48, v0, v16, v17);

  swift_retain_n();
  uint64_t v10 = sub_1C277B100();
  os_log_type_t v11 = sub_1C277BD40();
  if (os_log_type_enabled(v10, v11))
  {
    os_log_type_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v17 = v13;
    *(_DWORD *)os_log_type_t v12 = v4[140];
    type metadata accessor for USR1SignalDebuggingResponderListener();
    swift_retain();
    uint64_t v14 = sub_1C277B870();
    sub_1C263FDFC(v14, v15, &v17);
    sub_1C277C0D0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v10, v11, "%s: sourceNotification() complete", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v13, -1, -1);
    MEMORY[0x1C875D230](v12, -1, -1);
  }
  else
  {

    swift_release_n();
  }
}

void sub_1C2720F70()
{
}

uint64_t USR1SignalDebuggingResponderListener.deinit()
{
  swift_getObjectType();
  sub_1C277BF80();
  swift_unknownObjectRelease();

  return v0;
}

uint64_t USR1SignalDebuggingResponderListener.__deallocating_deinit()
{
  swift_getObjectType();
  sub_1C277BF80();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1C2721018()
{
  uint64_t result = sub_1C277B820();
  qword_1EBB82F48 = result;
  return result;
}

id static NSNotificationName.DebuggingResponderRequest.getter()
{
  if (qword_1EBB82F50 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EBB82F48;

  return v0;
}

uint64_t type metadata accessor for USR1SignalDebuggingResponderListener()
{
  return self;
}

uint64_t method lookup function for USR1SignalDebuggingResponderListener(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for USR1SignalDebuggingResponderListener);
}

uint64_t dispatch thunk of USR1SignalDebuggingResponderListener.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

id SharableModelReference.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id SharableModelReference.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for SharableModelReference();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for SharableModelReference()
{
  return self;
}

id SharableModelReference.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SharableModelReference();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C2721268()
{
  type metadata accessor for FileProtectionStateMonitor();
  uint64_t v0 = swift_allocObject();
  uint64_t result = FileProtectionStateMonitor.init()();
  qword_1EA305220 = v0;
  return result;
}

uint64_t FileProtectionStateMonitor.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  FileProtectionStateMonitor.init()();
  return v0;
}

uint64_t static FileProtectionStateMonitor.shared.getter()
{
  if (qword_1EA303F18 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t FileProtectionStateMonitor.init()()
{
  uint64_t v1 = v0;
  uint64_t v15 = sub_1C277BEA0();
  uint64_t v2 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C277BE40();
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = sub_1C277B660();
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v14 = sub_1C264E740();
  sub_1C277B650();
  uint64_t v16 = MEMORY[0x1E4FBC860];
  objc_super v7 = (void (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1C2633BC0((unint64_t *)&unk_1EBB85160, MEMORY[0x1E4FBCC10]);
  sub_1C2633C08(0, (unint64_t *)&qword_1EBB850C0, v7);
  sub_1C264C224(qword_1EBB850D0, (unint64_t *)&qword_1EBB850C0, v7);
  sub_1C277C120();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FBCC58], v15);
  *(void *)(v0 + 24) = sub_1C277BED0();
  int v8 = MKBGetDeviceLockState();
  if (v8 == 2) {
    char v9 = 1;
  }
  else {
    char v9 = 2 * (v8 != 1);
  }
  sub_1C2721618();
  uint64_t v10 = swift_allocObject();
  *(_DWORD *)(v10 + 36) = 0;
  os_log_type_t v11 = (os_unfair_lock_s *)(v10 + 36);
  *(_DWORD *)(v10 + 16) = -1;
  os_log_type_t v12 = (int *)(v10 + 16);
  *(void *)(v10 + 24) = MEMORY[0x1E4FBC860];
  *(unsigned char *)(v10 + 32) = v9;
  *(void *)(v1 + 16) = v10;
  swift_retain();
  os_unfair_lock_lock(v11);
  sub_1C2721768(v12);
  os_unfair_lock_unlock(v11);
  swift_release();
  return v1;
}

void sub_1C2721618()
{
  if (!qword_1EA305228)
  {
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_1C277C370();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA305228);
    }
  }
}

void sub_1C2721678(int *a1, uint64_t a2)
{
  uint64_t v3 = *(NSObject **)(a2 + 24);
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  v6[4] = sub_1C2722294;
  v6[5] = v4;
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 1107296256;
  void v6[2] = sub_1C27217DC;
  v6[3] = &block_descriptor_11_1;
  uint64_t v5 = _Block_copy(v6);
  swift_release();
  notify_register_dispatch("com.apple.mobile.keybagd.lock_status", a1, v3, v5);
  _Block_release(v5);
}

void sub_1C2721768(int *a1)
{
  sub_1C2721678(a1, v1);
}

uint64_t sub_1C2721784()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C2721F04();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C27217DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

void sub_1C2721830(void (*a1)(void))
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 16);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 9;
  os_unfair_lock_lock(v3 + 9);
  sub_1C27219F4(v4, &v6);
  os_unfair_lock_unlock(v5);
  if (v6 == 1) {
    a1();
  }
}

uint64_t sub_1C27218E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t result = MKBGetDeviceLockState();
  if ((result - 1) > 1)
  {
    char v13 = 1;
  }
  else
  {
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = a2;
    *(void *)(v9 + 24) = a3;
    uint64_t v10 = *(void **)(a1 + 8);
    swift_retain();
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1C2690C08(0, v10[2] + 1, 1, v10);
      uint64_t v10 = (void *)result;
    }
    unint64_t v12 = v10[2];
    unint64_t v11 = v10[3];
    if (v12 >= v11 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C2690C08((void *)(v11 > 1), v12 + 1, 1, v10);
      uint64_t v10 = (void *)result;
    }
    char v13 = 0;
    void v10[2] = v12 + 1;
    unint64_t v14 = &v10[2 * v12];
    void v14[4] = sub_1C261AEA4;
    v14[5] = v9;
    *(void *)(a1 + 8) = v10;
  }
  *a4 = v13;
  return result;
}

uint64_t sub_1C27219F4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_1C27218E0(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1C2721A14(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v29 = a1;
  uint64_t v32 = sub_1C277B630();
  uint64_t v35 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  uint64_t v31 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C277B660();
  uint64_t v33 = *(void *)(v6 - 8);
  uint64_t v34 = v6;
  MEMORY[0x1F4188790](v6);
  int v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C277B680();
  uint64_t v28 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  char v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)v26 - v14;
  uint64_t v30 = sub_1C277B620();
  uint64_t v16 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v18 = (void *)((char *)v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v18 = 250;
  (*(void (**)(void *, void))(v16 + 104))(v18, *MEMORY[0x1E4FBCAC8]);
  v26[1] = *(void *)(v3 + 24);
  sub_1C277B670();
  MEMORY[0x1C875B5E0](v13, v18);
  uint64_t v27 = *(void (**)(char *, uint64_t))(v10 + 8);
  v27(v13, v9);
  uint64_t v19 = (void *)swift_allocObject();
  uint64_t v20 = v29;
  v19[2] = v3;
  v19[3] = v20;
  v19[4] = a2;
  aBlock[4] = sub_1C2721ED8;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1C26254FC;
  aBlock[3] = &block_descriptor_23;
  uint64_t v21 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1C277B650();
  uint64_t v36 = MEMORY[0x1E4FBC860];
  uint64_t v22 = (void (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1C2633BC0((unint64_t *)&qword_1EBB84A60, MEMORY[0x1E4FBCB00]);
  sub_1C2633C08(0, (unint64_t *)&unk_1EBB85470, v22);
  sub_1C264C224((unint64_t *)&qword_1EBB85480, (unint64_t *)&unk_1EBB85470, v22);
  uint64_t v23 = v31;
  uint64_t v24 = v32;
  sub_1C277C120();
  MEMORY[0x1C875BD60](v15, v8, v23, v21);
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v23, v24);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v8, v34);
  v27(v15, v28);
  (*(void (**)(void *, uint64_t))(v16 + 8))(v18, v30);
  return swift_release();
}

uint64_t sub_1C2721E98()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1C2721ED8()
{
  sub_1C2721830(*(void (**)(void))(v0 + 24));
}

uint64_t sub_1C2721F04()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 9;
  os_unfair_lock_lock(v1 + 9);
  sub_1C27221C4(v2, &v9);
  os_unfair_lock_unlock(v3);
  uint64_t v4 = *(void *)(v9 + 16);
  if (v4)
  {
    uint64_t v5 = v9 + 40;
    do
    {
      uint64_t v6 = *(void (**)(uint64_t))(v5 - 8);
      uint64_t v7 = swift_retain();
      v6(v7);
      swift_release();
      v5 += 16;
      --v4;
    }
    while (v4);
  }
  return swift_bridgeObjectRelease();
}

uint64_t FileProtectionStateMonitor.deinit()
{
  swift_release();

  return v0;
}

uint64_t FileProtectionStateMonitor.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FileProtectionStateMonitor()
{
  return self;
}

uint64_t method lookup function for FileProtectionStateMonitor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FileProtectionStateMonitor);
}

uint64_t dispatch thunk of FileProtectionStateMonitor.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of FileProtectionStateMonitor.whenUnlocked(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of FileProtectionStateMonitor.retryWhenUnlocked(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t sub_1C27220D4(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FileProtectionStateMonitor.ProtectedState(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for FileProtectionStateMonitor.ProtectedState(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for FileProtectionStateMonitor.ProtectedState()
{
  return &type metadata for FileProtectionStateMonitor.ProtectedState;
}

uint64_t sub_1C27221C4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = MKBGetDeviceLockState();
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if ((result - 1) >= 2)
  {
    uint64_t v6 = *(void *)(a1 + 8);
    *(void *)(a1 + 8) = MEMORY[0x1E4FBC860];
    uint64_t v5 = v6;
  }
  *a2 = v5;
  return result;
}

uint64_t sub_1C2722224()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C272225C()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2722294()
{
  return sub_1C2721784();
}

unsigned char *storeEnumTagSinglePayload for FileProtectionStateMonitor.LockState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2722368);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FileProtectionStateMonitor.LockState()
{
  return &type metadata for FileProtectionStateMonitor.LockState;
}

unint64_t sub_1C27223A4()
{
  unint64_t result = qword_1EA305230;
  if (!qword_1EA305230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA305230);
  }
  return result;
}

uint64_t MockPinnedContentUpdateNotifier.publisher.getter()
{
  return swift_retain();
}

uint64_t MockPinnedContentUpdateNotifier.publisher.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  return swift_release();
}

uint64_t (*MockPinnedContentUpdateNotifier.publisher.modify())()
{
  return j__swift_endAccess;
}

uint64_t MockPinnedContentUpdateNotifier.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  sub_1C2624FC4();
  swift_allocObject();
  *(void *)(v0 + 16) = sub_1C277B380();
  return v0;
}

uint64_t MockPinnedContentUpdateNotifier.init()()
{
  sub_1C2624FC4();
  swift_allocObject();
  *(void *)(v0 + 16) = sub_1C277B380();
  return v0;
}

uint64_t MockPinnedContentUpdateNotifier.deinit()
{
  swift_release();
  return v0;
}

uint64_t MockPinnedContentUpdateNotifier.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1C27225C4()
{
  return swift_retain();
}

uint64_t sub_1C2722608()
{
  uint64_t v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, sel_stopObservation_, v0);

  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1C2722714()
{
  return swift_retain();
}

uint64_t static PinnedContentManager.pin(objectType:healthStore:)(uint64_t a1, void *a2)
{
  uint64_t v3 = _sSo12HKObjectTypeC14HealthPlatformE23pinnedContentIdentifierSSvg_0();
  uint64_t v5 = v4;
  type metadata accessor for KeyValueDomainPinnedContentUpdateNotifier();
  uint64_t v6 = swift_allocObject();
  id v7 = a2;
  sub_1C2624E38(v7);
  id v8 = objc_allocWithZone((Class)sub_1C277A3F0());
  id v9 = v7;
  uint64_t v10 = sub_1C277A3E0();
  uint64_t v11 = swift_allocObject();
  swift_retain();
  sub_1C2625078(v10, v6, v11);
  swift_release();

  v12._uint64_t countAndFlagsBits = v3;
  v12._object = v5;
  PinnedContentManager.pin(identifier:)(v12);
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t static PinnedContentManager.pin(identifier:healthStore:)(uint64_t a1, void *a2, void *a3)
{
  type metadata accessor for KeyValueDomainPinnedContentUpdateNotifier();
  uint64_t v6 = swift_allocObject();
  id v7 = a3;
  sub_1C2624E38(v7);
  id v8 = objc_allocWithZone((Class)sub_1C277A3F0());
  id v9 = v7;
  uint64_t v10 = sub_1C277A3E0();
  uint64_t v11 = swift_allocObject();
  swift_retain();
  sub_1C2625078(v10, v6, v11);
  swift_release();

  v12._uint64_t countAndFlagsBits = a1;
  v12._object = a2;
  PinnedContentManager.pin(identifier:)(v12);

  return swift_release();
}

Swift::Void __swiftcall PinnedContentManager.pin(identifier:)(Swift::String identifier)
{
  uint64_t v2 = sub_1C277B130();
  MEMORY[0x1F4188790](v2);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 24), *(void *)(v1 + 48));
  uint64_t v3 = (void *)sub_1C277A420();
}

uint64_t PinnedContentManager.publisher.getter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (uint64_t *)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1C2725074(v2, &v6);
  os_unfair_lock_unlock(v3);
  sub_1C264EEC8();
  sub_1C26252D0(&qword_1EBB83938, (void (*)(uint64_t))sub_1C264EEC8);
  uint64_t v4 = sub_1C277B4E0();
  swift_release();
  return v4;
}

uint64_t PinnedContentManager.__allocating_init(pinnedContentStore:notifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1(a1, v5);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = __swift_mutable_project_boxed_opaque_existential_1(a2, v8);
  uint64_t v11 = sub_1C2724C70(v7, v10, v2, v5, v8, v6, v9);
  __swift_destroy_boxed_opaque_existential_0(a2);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v11;
}

uint64_t PinnedContentManager.init(pinnedContentStore:notifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v8 = __swift_mutable_project_boxed_opaque_existential_1(a1, v7);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v11 + 16))(v10);
  uint64_t v12 = *(void *)(a2 + 24);
  uint64_t v13 = *(void *)(a2 + 32);
  uint64_t v14 = __swift_mutable_project_boxed_opaque_existential_1(a2, v12);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v17 + 16))(v16);
  uint64_t v18 = sub_1C2724A24((uint64_t)v10, (uint64_t)v16, v3, v7, v12, v6, v13);
  __swift_destroy_boxed_opaque_existential_0(a2);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v18;
}

uint64_t sub_1C2722FB4()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C272300C();
    return swift_release();
  }
  return result;
}

void sub_1C272300C()
{
  uint64_t v0 = sub_1C277B130();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v15 - v5;
  sub_1C277B0E0();
  uint64_t v7 = sub_1C277B100();
  os_log_type_t v8 = sub_1C277BD40();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v15 = v1;
    uint64_t v16 = v0;
    uint64_t v9 = swift_slowAlloc();
    uint64_t v17 = v4;
    uint64_t v10 = (uint8_t *)v9;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v19 = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    uint64_t v12 = sub_1C277C9E0();
    uint64_t v18 = sub_1C263FDFC(v12, v13, &v19);
    sub_1C277C0D0();
    uint64_t v1 = v15;
    uint64_t v0 = v16;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v7, v8, "[%s] Pinned content did change notification received, fetching latest value", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v11, -1, -1);
    MEMORY[0x1C875D230](v10, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  sub_1C2723428();
}

void sub_1C2723428()
{
  uint64_t v2 = v0;
  uint64_t v34 = *v0;
  uint64_t v3 = sub_1C277B130();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v0 + 3, v0[6]);
  uint64_t v7 = (void *)sub_1C277A430();
  if (!v1)
  {
    uint64_t v33 = v4;
    sub_1C277B0E0();
    id v8 = v7;
    uint64_t v9 = sub_1C277B100();
    os_log_type_t v10 = sub_1C277BD40();
    int v11 = v10;
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v36 = v30;
      *(_DWORD *)uint64_t v12 = 136315394;
      int v29 = v11;
      uint64_t v13 = sub_1C277C9E0();
      id v32 = v8;
      uint64_t v35 = sub_1C263FDFC(v13, v14, &v36);
      os_log_t v28 = v9;
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2080;
      v27[1] = v12 + 14;
      sub_1C277A3C0();
      uint64_t v15 = MEMORY[0x1C875B960]();
      uint64_t v31 = v7;
      unint64_t v17 = v16;
      swift_bridgeObjectRelease();
      uint64_t v18 = v15;
      id v8 = v32;
      uint64_t v35 = sub_1C263FDFC(v18, v17, &v36);
      sub_1C277C0D0();

      swift_bridgeObjectRelease();
      os_log_t v19 = v28;
      _os_log_impl(&dword_1C2601000, v28, (os_log_type_t)v29, "[%s] Pinned content refetch result %s", (uint8_t *)v12, 0x16u);
      uint64_t v20 = v30;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v20, -1, -1);
      MEMORY[0x1C875D230](v12, -1, -1);
    }
    else
    {
    }
    uint64_t v21 = (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v6, v3);
    MEMORY[0x1F4188790](v21);
    uint64_t v22 = v34;
    v27[-2] = v2;
    v27[-1] = v22;
    uint64_t v24 = (uint64_t *)&v23[4];
    char v25 = v23 + 6;
    os_unfair_lock_lock(v23 + 6);
    sub_1C2725074(v24, &v36);
    os_unfair_lock_unlock(v25);
    uint64_t v36 = (uint64_t)v8;
    id v26 = v8;
    sub_1C277B3B0();
    swift_release();
  }
}

void PinnedContentManager.latestState()()
{
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C277B130();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (os_unfair_lock_s *)v0[2];
  uint64_t v20 = v0;
  uint64_t v21 = v2;
  id v8 = (uint64_t *)&v7[4];
  uint64_t v9 = v7 + 6;
  os_unfair_lock_lock(v7 + 6);
  sub_1C2725074(v8, &v23);
  if (v1)
  {
    os_unfair_lock_unlock(v9);
    __break(1u);
  }
  else
  {
    os_unfair_lock_unlock(v9);
    sub_1C277B3A0();
    swift_release();
    if (!v23)
    {
      sub_1C277B0E0();
      os_log_type_t v10 = sub_1C277B100();
      os_log_type_t v11 = sub_1C277BD20();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v12 = (uint8_t *)swift_slowAlloc();
        uint64_t v19 = swift_slowAlloc();
        uint64_t v23 = v19;
        uint64_t v18 = v12;
        *(_DWORD *)uint64_t v12 = 136315138;
        v17[1] = v12 + 4;
        uint64_t v13 = sub_1C277C9E0();
        uint64_t v22 = sub_1C263FDFC(v13, v14, &v23);
        sub_1C277C0D0();
        swift_bridgeObjectRelease();
        uint64_t v15 = v18;
        _os_log_impl(&dword_1C2601000, v10, v11, "[%s] Fetch latest pinned content because no cached state found", v18, 0xCu);
        uint64_t v16 = v19;
        swift_arrayDestroy();
        MEMORY[0x1C875D230](v16, -1, -1);
        MEMORY[0x1C875D230](v15, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      sub_1C2723428();
    }
  }
}

Swift::Void __swiftcall PinnedContentManager.apply(differences:)(Swift::OpaquePointer differences)
{
  uint64_t v2 = sub_1C277B130();
  MEMORY[0x1F4188790](v2);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 24), *(void *)(v1 + 48));
  uint64_t v3 = (void *)sub_1C277A460();
}

Swift::Void __swiftcall PinnedContentManager.pin(identifier:at:)(Swift::String identifier, Swift::Int at)
{
  uint64_t v3 = sub_1C277B130();
  MEMORY[0x1F4188790](v3);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 24), *(void *)(v2 + 48));
  uint64_t v4 = (void *)sub_1C277A420();
}

Swift::Void __swiftcall PinnedContentManager.unpin(identifier:)(Swift::String identifier)
{
  uint64_t v2 = sub_1C277B130();
  MEMORY[0x1F4188790](v2);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 24), *(void *)(v1 + 48));
  uint64_t v3 = (void *)sub_1C277A440();
}

char *sub_1C272457C@<X0>(const char **a1@<X0>, int *a2@<X1>, char **a3@<X8>)
{
  uint64_t result = index(*a1, *a2);
  *a3 = result;
  return result;
}

Swift::Void __swiftcall PinnedContentManager.unpinAll()()
{
  uint64_t v1 = sub_1C277B130();
  MEMORY[0x1F4188790](v1);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 24), *(void *)(v0 + 48));
  uint64_t v2 = (void *)sub_1C277A450();
}

uint64_t PinnedContentManager.deinit()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  __swift_destroy_boxed_opaque_existential_0(v0 + 64);
  swift_release();
  return v0;
}

uint64_t PinnedContentManager.__deallocating_deinit()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  __swift_destroy_boxed_opaque_existential_0(v0 + 64);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1C2724928()
{
  return PinnedContentManager.publisher.getter();
}

void sub_1C272494C()
{
}

void sub_1C2724970(uint64_t a1, uint64_t a2, Swift::Int a3)
{
}

void sub_1C2724994(uint64_t a1, uint64_t a2)
{
}

void sub_1C27249B8(uint64_t a1, uint64_t a2)
{
}

void sub_1C27249DC()
{
}

void sub_1C2724A00(Swift::OpaquePointer a1)
{
}

uint64_t sub_1C2724A24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v21[3] = a4;
  v21[4] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v21);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1, a1, a4);
  v20[3] = a5;
  void v20[4] = a7;
  unint64_t v14 = __swift_allocate_boxed_opaque_existential_1(v20);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(v14, a2, a5);
  sub_1C262524C();
  uint64_t v15 = swift_allocObject();
  *(_DWORD *)(v15 + 24) = 0;
  *(void *)(v15 + 16) = 0;
  *(void *)(a3 + 16) = v15;
  *(void *)(a3 + 104) = 0;
  sub_1C277A470();
  sub_1C26482E4((uint64_t)v21, a3 + 24);
  sub_1C26482E4((uint64_t)v20, a3 + 64);
  (*(void (**)(uint64_t, uint64_t))(a7 + 8))(a5, a7);
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1C2725030;
  *(void *)(v17 + 24) = v16;
  sub_1C2624FC4();
  sub_1C26252D0(&qword_1EBB850A8, (void (*)(uint64_t))sub_1C2624FC4);
  uint64_t v18 = sub_1C277B520();
  swift_release();
  swift_release();
  *(void *)(a3 + 104) = v18;
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
  return a3;
}

uint64_t sub_1C2724C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v23 = a7;
  uint64_t v12 = *(void *)(a5 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](a1);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v19 = (char *)&v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a1, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a2, a5);
  return sub_1C2724A24((uint64_t)v19, (uint64_t)v15, v20, a4, a5, a6, v23);
}

unint64_t sub_1C2724E10()
{
  unint64_t result = qword_1EA305238;
  if (!qword_1EA305238)
  {
    sub_1C2724EC0(255, &qword_1EA305240, &qword_1EA305248, MEMORY[0x1E4FBB700]);
    sub_1C2724EC0(255, &qword_1EA305250, &qword_1EA305258, MEMORY[0x1E4FBB078]);
    unint64_t result = swift_getFunctionTypeMetadata2();
    atomic_store(result, (unint64_t *)&qword_1EA305238);
  }
  return result;
}

void sub_1C2724EC0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(void, void))
{
  if (!*a2)
  {
    sub_1C2724F18(255, a3, a4);
    unint64_t v5 = sub_1C277C0B0();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C2724F18(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBC098]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t dispatch thunk of PinnedContentUpdateNotifier.publisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for MockPinnedContentUpdateNotifier()
{
  return self;
}

uint64_t method lookup function for MockPinnedContentUpdateNotifier(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MockPinnedContentUpdateNotifier);
}

uint64_t dispatch thunk of MockPinnedContentUpdateNotifier.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t method lookup function for PinnedContentManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PinnedContentManager);
}

uint64_t dispatch thunk of PinnedContentManager.__allocating_init(pinnedContentStore:notifier:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1C2724FF8()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2725030()
{
  return sub_1C2722FB4();
}

uint64_t sub_1C2725038()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2725074@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C2632810(a1, a2);
}

void sub_1C2725090(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v3 = sub_1C277A610();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);
}

id HealthAppOrchestrationServer.__allocating_init(connection:coordinator:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  return HealthAppOrchestrationServer.init(connection:coordinator:)(a1, a2, a3);
}

uint64_t sub_1C2725140()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C2725178(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1C875D340](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    id v4 = *(os_unfair_lock_s **)(v2 + OBJC_IVAR____TtC14HealthPlatform28HealthAppOrchestrationServer_protectedState);
    uint64_t v5 = (id *)&v4[4];
    uint64_t v6 = v4 + 6;
    os_unfair_lock_lock(v4 + 6);
    sub_1C2725244(v5);
    os_unfair_lock_unlock(v6);
  }
}

void sub_1C2725204()
{
  sub_1C2725178(v0);
}

uint64_t sub_1C272520C()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C2725244(id *a1)
{
  *a1 = 0;
}

uint64_t sub_1C2725278(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC14HealthPlatform28HealthAppOrchestrationServer_coordinator + 8);
  uint64_t ObjectType = swift_getObjectType();
  id v8 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v6 + 8);
  swift_retain();
  v8(sub_1C261AEA4, v5, ObjectType, v6);

  return swift_release();
}

uint64_t sub_1C2725448(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC14HealthPlatform28HealthAppOrchestrationServer_coordinator + 8);
  uint64_t ObjectType = swift_getObjectType();
  id v8 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_retain();
  v8(sub_1C261AED4, v5, ObjectType, v6);

  return swift_release();
}

uint64_t sub_1C272550C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2725650(void (*a1)(uint64_t))
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC14HealthPlatform28HealthAppOrchestrationServer_coordinator + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(ObjectType, v3);
  a1(v5);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C27257A4(void (*a1)(void))
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC14HealthPlatform28HealthAppOrchestrationServer_coordinator + 8);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v3 + 32))(ObjectType, v3);
  a1();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2725900(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC14HealthPlatform28HealthAppOrchestrationServer_coordinator + 8);
  uint64_t ObjectType = swift_getObjectType();
  id v8 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v6 + 40);
  swift_retain();
  v8(sub_1C27259C4, v5, ObjectType, v6);

  return swift_release();
}

uint64_t sub_1C27259C4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1C2725AF8(uint64_t (*a1)(uint64_t))
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC14HealthPlatform28HealthAppOrchestrationServer_coordinator + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 48))(ObjectType, v3);
  return a1(v5);
}

uint64_t sub_1C2725C18(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC14HealthPlatform28HealthAppOrchestrationServer_coordinator + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  id v8 = *(uint64_t (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v5 + 56);
  swift_retain();
  uint64_t v9 = v8(sub_1C2726918, v7, ObjectType, v5);
  swift_release();
  return v9;
}

uint64_t sub_1C2725CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a4;
  *(void *)(v10 + 24) = a5;
  uint64_t v11 = *(void *)(v5 + OBJC_IVAR____TtC14HealthPlatform28HealthAppOrchestrationServer_coordinator + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1C2663158;
  *(void *)(v13 + 24) = v10;
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, void (*)(char), uint64_t, uint64_t, uint64_t))(v11 + 64);
  swift_retain();
  swift_retain();
  v14(a1, a2, a3, sub_1C2725E94, v13, ObjectType, v11);
  swift_release();

  return swift_release();
}

void sub_1C2725E00(char a1, void (*a2)(void))
{
  if (a1)
  {
    ((void (*)(void))a2)(0);
  }
  else
  {
    id v3 = objc_msgSend(self, sel_hk_error_userInfo_, 0, 0);
    a2();
  }
}

void sub_1C2725E94(char a1)
{
  sub_1C2725E00(a1, *(void (**)(void))(v1 + 16));
}

uint64_t sub_1C272604C(uint64_t (*a1)(uint64_t))
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC14HealthPlatform28HealthAppOrchestrationServer_coordinator + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 72))(ObjectType, v3);
  return a1(v5);
}

uint64_t sub_1C272616C(uint64_t (*a1)(uint64_t))
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC14HealthPlatform28HealthAppOrchestrationServer_coordinator + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 80))(ObjectType, v3);
  return a1(v5);
}

uint64_t sub_1C272628C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC14HealthPlatform28HealthAppOrchestrationServer_coordinator + 8);
  uint64_t ObjectType = swift_getObjectType();
  id v8 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v6 + 88);
  swift_retain();
  v8(sub_1C261AED4, v5, ObjectType, v6);

  return swift_release();
}

id HealthAppOrchestrationServer.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void HealthAppOrchestrationServer.init()()
{
}

id HealthAppOrchestrationServer.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HealthAppOrchestrationServer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t dispatch thunk of HealthAppOrchestrationCoordinator.fireOnce(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of HealthAppOrchestrationCoordinator.resetAndFireOnce(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of HealthAppOrchestrationCoordinator.orchestrationStatus()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of HealthAppOrchestrationCoordinator.orchestrationGraph()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of HealthAppOrchestrationCoordinator.deleteCacheAndTerminate(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of HealthAppOrchestrationCoordinator.cancelLegacyGeneration()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of HealthAppOrchestrationCoordinator.runForegroundGeneration(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of HealthAppOrchestrationCoordinator.runBackgroundGeneration(plugins:commitAsUrgent:generationType:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 64))();
}

uint64_t dispatch thunk of HealthAppOrchestrationCoordinator.requestBackgroundGenerationForFeedItemsAfterUnlock()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of HealthAppOrchestrationCoordinator.requestBackgroundGenerationForAllModelsAfterUnlock()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of HealthAppOrchestrationCoordinator.runOrRequestBackgroundGeneration(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

uint64_t method lookup function for HealthAppOrchestrationServer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HealthAppOrchestrationServer);
}

uint64_t dispatch thunk of HealthAppOrchestrationServer.__allocating_init(connection:coordinator:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of HealthAppOrchestrationServer.remote_fireOnce(completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of HealthAppOrchestrationServer.remote_resetAndFire(completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of HealthAppOrchestrationServer.remote_fetchOrchestrationStatus(completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of HealthAppOrchestrationServer.remote_fetchOrchestrationGraph(completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of HealthAppOrchestrationServer.remote_deleteCacheAndTerminate(completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of HealthAppOrchestrationServer.remote_cancelAllGeneration(completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of HealthAppOrchestrationServer.remote_runForegroundGeneration(completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of HealthAppOrchestrationServer.remote_runBackgroundGeneration(plugins:commitAsUrgent:generationType:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of HealthAppOrchestrationServer.remote_requestBackgroundGenerationForFeedItemsAfterUnlock(completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of HealthAppOrchestrationServer.remote_requestBackgroundGenerationForAllModelsAfterUnlock(completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of HealthAppOrchestrationServer.remote_runOrRequestBackgroundGeneration(completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

ValueMetadata *type metadata accessor for HealthAppOrchestrationServer.State()
{
  return &type metadata for HealthAppOrchestrationServer.State;
}

uint64_t static InputSignalIdentifier.summaryTransaction.getter()
{
  return sub_1C277AED0();
}

uint64_t static InputSignalSet.LookupKey.summaryTransaction.getter()
{
  uint64_t v0 = sub_1C277AEE0();
  MEMORY[0x1F4188790](v0 - 8);
  sub_1C277AED0();
  type metadata accessor for SummaryTransactionInputSignal();
  return sub_1C277ACD0();
}

uint64_t type metadata accessor for SummaryTransactionInputSignal()
{
  uint64_t result = qword_1EBB83CF0;
  if (!qword_1EBB83CF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t SummaryTransactionInputSignal.__allocating_init(context:observer:source:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = *(void *)(a5 + 24);
  uint64_t v12 = *(void *)(a5 + 32);
  uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1(a5, v11);
  uint64_t v14 = sub_1C2727DE4(a1, a2, a3, a4, v13, v5, v11, v12);
  __swift_destroy_boxed_opaque_existential_0(a5);
  return v14;
}

uint64_t SummaryTransactionInputSignal.init(context:observer:source:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = *(void *)(a5 + 24);
  uint64_t v12 = *(void *)(a5 + 32);
  uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1(a5, v11);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v16 + 16))(v15);
  uint64_t v17 = sub_1C2727C1C(a1, a2, a3, a4, (uint64_t)v15, v5, v11, v12);
  __swift_destroy_boxed_opaque_existential_0(a5);
  return v17;
}

uint64_t static SummaryTransactionInputSignal.identityConfiguration.getter()
{
  uint64_t v0 = sub_1C277AEE0();
  MEMORY[0x1F4188790](v0 - 8);
  sub_1C277AED0();
  return sub_1C277AEB0();
}

uint64_t SummaryTransactionInputSignal.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC14HealthPlatform29SummaryTransactionInputSignal_identifier;
  uint64_t v4 = sub_1C277AEE0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SummaryTransactionInputSignal.observer.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t SummaryTransactionInputSignal.beginObservation(from:configurations:)()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v3);
  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  uint64_t v6 = *(void (**)(void (*)(void *, char), uint64_t, uint64_t, uint64_t))(v4 + 8);
  swift_retain();
  v6(sub_1C2727F38, v5, v3, v4);
  return swift_release_n();
}

void sub_1C2726DF0(void *a1, char a2)
{
  uint64_t v4 = sub_1C277AEE0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C272801C();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C277B130();
  uint64_t v32 = *(void *)(v13 - 8);
  uint64_t v33 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v17 = (void *)Strong;
    if (a2)
    {
      id v19 = a1;
      uint64_t v20 = (void *)sub_1C277A610();
      unsigned __int8 v21 = objc_msgSend(v20, sel_hk_isDatabaseAccessibilityError);

      if ((v21 & 1) == 0)
      {
        swift_getObjectType();
        sub_1C277AC30();
        id v22 = a1;
        id v23 = a1;
        uint64_t v24 = sub_1C277B100();
        os_log_type_t v25 = sub_1C277BD20();
        if (os_log_type_enabled(v24, v25))
        {
          id v26 = (uint8_t *)swift_slowAlloc();
          uint64_t v27 = (void *)swift_slowAlloc();
          *(_DWORD *)id v26 = 138412290;
          id v28 = a1;
          uint64_t v29 = _swift_stdlib_bridgeErrorToNSError();
          uint64_t v34 = (void *)v29;
          sub_1C277C0D0();
          *uint64_t v27 = v29;
          sub_1C263B3A4(a1, 1);
          sub_1C263B3A4(a1, 1);
          _os_log_impl(&dword_1C2601000, v24, v25, "Transaction observation query failed, restarting: %@", v26, 0xCu);
          sub_1C264E608();
          swift_arrayDestroy();
          MEMORY[0x1C875D230](v27, -1, -1);
          MEMORY[0x1C875D230](v26, -1, -1);
        }
        else
        {
          sub_1C263B3A4(a1, 1);
          sub_1C263B3A4(a1, 1);
        }

        (*(void (**)(char *, uint64_t))(v32 + 8))(v15, v33);
      }
      uint64_t v30 = v17[5];
      uint64_t v31 = v17[6];
      __swift_project_boxed_opaque_existential_1(v17 + 2, v30);
      (*(void (**)(uint64_t, uint64_t))(v31 + 16))(v30, v31);
      if (qword_1EA303F18 != -1) {
        swift_once();
      }
      swift_retain();
      sub_1C2721A14((uint64_t)sub_1C2728428, (uint64_t)v17);
      swift_release_n();
      sub_1C263B3A4(a1, 1);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, Strong + OBJC_IVAR____TtC14HealthPlatform29SummaryTransactionInputSignal_identifier, v4);
      sub_1C2701924(a1, 0);
      uint64_t v18 = sub_1C265CA68((unint64_t)a1);
      sub_1C263B3A4(a1, 0);
      uint64_t v34 = (void *)v18;
      sub_1C2728114();
      sub_1C2727FD4(&qword_1EBB82EA0, (void (*)(uint64_t))sub_1C2728114);
      sub_1C2727FD4(&qword_1EBB82EA8, (void (*)(uint64_t))sub_1C2728114);
      sub_1C27281A4(&qword_1EBB82FD8);
      sub_1C277AF60();
      swift_getObjectType();
      uint64_t v34 = v17;
      type metadata accessor for SummaryTransactionInputSignal();
      sub_1C2727FD4(&qword_1EBB82930, (void (*)(uint64_t))type metadata accessor for SummaryTransactionInputSignal);
      sub_1C277AE40();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      swift_release();
    }
  }
}

uint64_t sub_1C27273A0(void *a1)
{
  uint64_t v1 = a1[5];
  uint64_t v2 = a1[6];
  __swift_project_boxed_opaque_existential_1(a1 + 2, v1);
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  uint64_t v4 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v2 + 8);
  swift_retain();
  v4(sub_1C2728438, v3, v1, v2);
  return swift_release_n();
}

Swift::Void __swiftcall SummaryTransactionInputSignal.stopObservation()()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

void sub_1C27274A4(id *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*a1) {
    objc_msgSend(*(id *)(a2 + 16), sel_stopQuery_);
  }
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a3;
  *(void *)(v8 + 24) = a4;
  id v9 = objc_allocWithZone(MEMORY[0x1E4F2B4D0]);
  uint64_t v17 = sub_1C27283C0;
  uint64_t v18 = v8;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v14 = 1107296256;
  uint64_t v15 = sub_1C26B2638;
  uint64_t v16 = &block_descriptor_25;
  uint64_t v10 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  id v11 = objc_msgSend(v9, sel_initWithHandler_, v10);
  _Block_release(v10);
  swift_release();
  uint64_t v17 = sub_1C27283C0;
  uint64_t v18 = v8;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v14 = 1107296256;
  uint64_t v15 = sub_1C26B2638;
  uint64_t v16 = &block_descriptor_12;
  uint64_t v12 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v11, sel_setUpdateHandler_, v12);
  _Block_release(v12);
  objc_msgSend(*(id *)(a2 + 16), sel_executeQuery_, v11);
  swift_release();

  *a1 = v11;
}

void sub_1C2727688(int a1, uint64_t a2, id a3, void (*a4)(id, uint64_t))
{
  if (a2)
  {
    ((void (*)(uint64_t, void, id))a4)(a2, 0, a3);
  }
  else
  {
    if (a3)
    {
      id v6 = a3;
    }
    else
    {
      uint64_t v7 = self;
      uint64_t v8 = (void *)sub_1C277B820();
      id v6 = objc_msgSend(v7, sel_hk_error_description_, 0, v8);
    }
    id v9 = a3;
    a4(v6, 1);
  }
}

uint64_t sub_1C2727778()
{
  swift_release();

  return swift_deallocClassInstance();
}

void sub_1C27277B8()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)v0 + 24);
  uint64_t v2 = (id *)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1C2728368(v2);
  os_unfair_lock_unlock(v3);
}

void sub_1C272781C()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)v0 + 24);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1C272832C(v2);

  os_unfair_lock_unlock(v3);
}

uint64_t SummaryTransactionInputSignal.deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_unknownObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC14HealthPlatform29SummaryTransactionInputSignal_identifier;
  uint64_t v2 = sub_1C277AEE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();
  return v0;
}

uint64_t SummaryTransactionInputSignal.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_unknownObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC14HealthPlatform29SummaryTransactionInputSignal_identifier;
  uint64_t v2 = sub_1C277AEE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1C27279C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC14HealthPlatform29SummaryTransactionInputSignal_identifier;
  uint64_t v4 = sub_1C277AEE0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1C2727A3C()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1C2727A74()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (void *)(*v0 + 16);
  uint64_t v3 = *(void *)(*v0 + 40);
  uint64_t v4 = *(void *)(*v0 + 48);
  __swift_project_boxed_opaque_existential_1(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  uint64_t v5 = *(void *)(v1 + 40);
  uint64_t v6 = *(void *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1(v2, v5);
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  uint64_t v8 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v6 + 8);
  swift_retain();
  v8(sub_1C2728438, v7, v5, v6);
  return swift_release_n();
}

uint64_t sub_1C2727B58()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t sub_1C2727BB0(uint64_t a1)
{
  uint64_t v2 = sub_1C2727FD4(&qword_1EBB82930, (void (*)(uint64_t))type metadata accessor for SummaryTransactionInputSignal);

  return MEMORY[0x1F411FB20](a1, v2);
}

uint64_t sub_1C2727C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v19 = a7;
  uint64_t v20 = a8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v18);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(boxed_opaque_existential_1, a5, a7);
  sub_1C277AED0();
  sub_1C261F308(&v18, a6 + 16);
  *(void *)(a6 + 56) = a1;
  *(void *)(a6 + 64) = a2;
  uint64_t v16 = (void *)(a6 + OBJC_IVAR____TtC14HealthPlatform29SummaryTransactionInputSignal_observer);
  *uint64_t v16 = a3;
  v16[1] = a4;
  return a6;
}

void *sub_1C2727CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t Source = type metadata accessor for SummaryTransactionInputSignal.QuerySource();
  uint64_t v13 = swift_allocObject();
  sub_1C27283C8();
  uint64_t v14 = swift_allocObject();
  *(_DWORD *)(v14 + 24) = 0;
  *(void *)(v14 + 16) = 0;
  *(void *)(v13 + 16) = a4;
  *(void *)(v13 + 24) = v14;
  uint64_t v15 = (void *)swift_allocObject();
  _OWORD v15[5] = Source;
  void v15[6] = &off_1F1DCE610;
  void v15[2] = v13;
  sub_1C277AED0();
  v15[7] = a1;
  v15[8] = a7;
  uint64_t v16 = (void *)((char *)v15 + OBJC_IVAR____TtC14HealthPlatform29SummaryTransactionInputSignal_observer);
  *uint64_t v16 = a2;
  v16[1] = a3;
  return v15;
}

uint64_t sub_1C2727DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = *(void *)(a7 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a5, a7);
  return sub_1C2727C1C(a1, a2, a3, a4, (uint64_t)v17, v18, a7, a8);
}

uint64_t sub_1C2727F00()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C2727F38(void *a1, char a2)
{
}

uint64_t sub_1C2727F44()
{
  return sub_1C2727FD4(&qword_1EBB83CE8, (void (*)(uint64_t))type metadata accessor for SummaryTransactionInputSignal);
}

uint64_t sub_1C2727F8C()
{
  return sub_1C2727FD4(&qword_1EBB82A20, (void (*)(uint64_t))sub_1C272801C);
}

uint64_t sub_1C2727FD4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C272801C()
{
  if (!qword_1EBB82A28)
  {
    sub_1C2728114();
    sub_1C2727FD4(&qword_1EBB82EA0, (void (*)(uint64_t))sub_1C2728114);
    sub_1C2727FD4(&qword_1EBB82EA8, (void (*)(uint64_t))sub_1C2728114);
    sub_1C27281A4(&qword_1EBB82FD8);
    unint64_t v0 = sub_1C277AF80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB82A28);
    }
  }
}

void sub_1C2728114()
{
  if (!qword_1EBB82E98)
  {
    sub_1C2644ED8(255, (unint64_t *)&qword_1EBB82FE0);
    sub_1C27281A4(&qword_1EBB82FF0);
    unint64_t v0 = sub_1C277BC20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB82E98);
    }
  }
}

uint64_t sub_1C27281A4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2644ED8(255, (unint64_t *)&qword_1EBB82FE0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t dispatch thunk of SummaryTransactionSource.fetchAndObserve(handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of SummaryTransactionSource.stop()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1C2728220()
{
  return type metadata accessor for SummaryTransactionInputSignal();
}

uint64_t sub_1C2728228()
{
  uint64_t result = sub_1C277AEE0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for SummaryTransactionInputSignal(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SummaryTransactionInputSignal);
}

uint64_t dispatch thunk of SummaryTransactionInputSignal.__allocating_init(context:observer:source:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t type metadata accessor for SummaryTransactionInputSignal.QuerySource()
{
  return self;
}

ValueMetadata *type metadata accessor for SummaryTransactionInputSignal.QuerySource.ProtectedState()
{
  return &type metadata for SummaryTransactionInputSignal.QuerySource.ProtectedState;
}

void *sub_1C272832C(void *result)
{
  if (*result) {
    return objc_msgSend(*(id *)(v1 + 16), sel_stopQuery_);
  }
  return result;
}

void sub_1C2728368(id *a1)
{
  sub_1C27274A4(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1C2728388()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C27283C0(int a1, uint64_t a2, void *a3)
{
  sub_1C2727688(a1, a2, a3, *(void (**)(id, uint64_t))(v3 + 16));
}

void sub_1C27283C8()
{
  if (!qword_1EBB83090)
  {
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_1C277C370();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB83090);
    }
  }
}

uint64_t sub_1C2728428()
{
  return sub_1C27273A0(v0);
}

void *sub_1C272843C(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  void (*v21)(uint64_t *__return_ptr, uint64_t *);

  unsigned __int8 v21 = a1;
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a3 + 16);
  if (!v5) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = (unsigned __int8 *)(a3 + 40);
  uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v10 = *((void *)v7 - 1);
    unsigned __int8 v11 = *v7;
    uint64_t v19 = v10;
    unsigned __int8 v20 = v11;
    sub_1C26051DC(v10, v11);
    v21(&v17, &v19);
    if (v4)
    {
      sub_1C264CFA0(v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8;
    }
    sub_1C264CFA0(v10, v11);
    unsigned __int8 v12 = v18;
    if (v18 != 255)
    {
      uint64_t v13 = v17;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v8 = sub_1C2690C28(0, v8[2] + 1, 1, v8);
      }
      unint64_t v15 = v8[2];
      unint64_t v14 = v8[3];
      if (v15 >= v14 >> 1) {
        uint64_t v8 = sub_1C2690C28((void *)(v14 > 1), v15 + 1, 1, v8);
      }
      void v8[2] = v15 + 1;
      id v9 = &v8[2 * v15];
      v9[4] = v13;
      *((unsigned char *)v9 + 40) = v12;
    }
    v7 += 16;
    --v5;
  }
  while (v5);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1C27285B4(unsigned __int8 a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    sub_1C277C8C0();
    ContentKind.rawValue.getter();
    sub_1C277B8B0();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1C277C910();
    uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v6 = v4 & ~v5;
    if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
    {
      uint64_t v7 = ~v5;
      uint64_t v8 = a1;
      while (1)
      {
        unint64_t v9 = 0xD000000000000011;
        unint64_t v10 = 0x80000001C2788B70;
        switch(*(unsigned char *)(*(void *)(a2 + 48) + v6))
        {
          case 1:
            unint64_t v10 = 0xE500000000000000;
            unint64_t v9 = 0x7472656C61;
            break;
          case 2:
            unint64_t v10 = 0xE300000000000000;
            unint64_t v9 = 7368801;
            break;
          case 3:
            unint64_t v10 = 0xE700000000000000;
            unint64_t v9 = 0x656C6369747261;
            break;
          case 4:
            unint64_t v10 = 0xE800000000000000;
            unint64_t v9 = 0x79726F6765746163;
            break;
          case 5:
            unint64_t v10 = 0xE400000000000000;
            unint64_t v9 = 1635017060;
            break;
          case 6:
            unint64_t v9 = 0x6D6D755361746164;
            unint64_t v10 = 0xEB00000000797261;
            break;
          case 7:
            unsigned __int8 v11 = "cle";
            goto LABEL_14;
          case 8:
            unsigned __int8 v11 = "dataSummaryAlert";
            goto LABEL_14;
          case 9:
            unsigned __int8 v11 = "dataSummaryChart";
LABEL_14:
            unint64_t v10 = (unint64_t)v11 | 0x8000000000000000;
            unint64_t v9 = 0xD000000000000010;
            break;
          case 0xA:
            unint64_t v9 = 0x5365727574616566;
            unint64_t v10 = 0xED00007375746174;
            break;
          case 0xB:
            unint64_t v10 = 0xE900000000000074;
            goto LABEL_18;
          case 0xC:
            unint64_t v10 = 0xEF68637261655374;
LABEL_18:
            unint64_t v9 = 0x6867696C68676968;
            break;
          case 0xD:
            unint64_t v9 = 0x697461676976616ELL;
            unint64_t v10 = 0xEA00000000006E6FLL;
            break;
          case 0xE:
            unint64_t v10 = 0xE600000000000000;
            unint64_t v9 = 0x617461446F6ELL;
            break;
          case 0xF:
            unint64_t v10 = 0xE500000000000000;
            unint64_t v9 = 0x726568746FLL;
            break;
          case 0x10:
            unint64_t v9 = 0x6D726F6674616C70;
            unint64_t v10 = 0xED00007472656C41;
            break;
          case 0x11:
            unint64_t v9 = 0x6F69746F6D6F7270;
            unint64_t v10 = 0xE90000000000006ELL;
            break;
          case 0x12:
            unint64_t v10 = 0xE600000000000000;
            unint64_t v9 = 0x74706D6F7270;
            break;
          case 0x13:
            unint64_t v10 = 0xE700000000000000;
            unint64_t v9 = 0x656C69666F7270;
            break;
          case 0x14:
            unint64_t v9 = 0x6E6F6974616C6572;
            unint64_t v10 = 0xEC00000070696873;
            break;
          case 0x15:
            unint64_t v10 = 0xE800000000000000;
            unint64_t v9 = 0x73676E6974746573;
            break;
          case 0x16:
            unint64_t v10 = 0xE600000000000000;
            unint64_t v9 = 0x657461647075;
            break;
          case 0x17:
            unint64_t v10 = 0xE700000000000000;
            unint64_t v9 = 0x72616265646973;
            break;
          default:
            break;
        }
        unint64_t v12 = 0xD000000000000011;
        unint64_t v13 = 0x80000001C2788B70;
        switch(v8)
        {
          case 1:
            unint64_t v13 = 0xE500000000000000;
            if (v9 == 0x7472656C61) {
              goto LABEL_74;
            }
            goto LABEL_75;
          case 2:
            unint64_t v13 = 0xE300000000000000;
            if (v9 != 7368801) {
              goto LABEL_75;
            }
            goto LABEL_74;
          case 3:
            unint64_t v13 = 0xE700000000000000;
            uint64_t v14 = 0x6C6369747261;
            goto LABEL_66;
          case 4:
            unint64_t v13 = 0xE800000000000000;
            if (v9 != 0x79726F6765746163) {
              goto LABEL_75;
            }
            goto LABEL_74;
          case 5:
            unint64_t v13 = 0xE400000000000000;
            if (v9 != 1635017060) {
              goto LABEL_75;
            }
            goto LABEL_74;
          case 6:
            unint64_t v13 = 0xEB00000000797261;
            if (v9 != 0x6D6D755361746164) {
              goto LABEL_75;
            }
            goto LABEL_74;
          case 7:
            unint64_t v15 = "cle";
            goto LABEL_45;
          case 8:
            unint64_t v15 = "dataSummaryAlert";
            goto LABEL_45;
          case 9:
            unint64_t v15 = "dataSummaryChart";
LABEL_45:
            unint64_t v13 = (unint64_t)v15 | 0x8000000000000000;
            if (v9 != 0xD000000000000010) {
              goto LABEL_75;
            }
            goto LABEL_74;
          case 10:
            uint64_t v16 = 0x5365727574616566;
            uint64_t v17 = 0x7375746174;
            goto LABEL_59;
          case 11:
            unint64_t v13 = 0xE900000000000074;
            goto LABEL_50;
          case 12:
            unint64_t v13 = 0xEF68637261655374;
LABEL_50:
            if (v9 != 0x6867696C68676968) {
              goto LABEL_75;
            }
            goto LABEL_74;
          case 13:
            unint64_t v13 = 0xEA00000000006E6FLL;
            if (v9 != 0x697461676976616ELL) {
              goto LABEL_75;
            }
            goto LABEL_74;
          case 14:
            unint64_t v13 = 0xE600000000000000;
            if (v9 != 0x617461446F6ELL) {
              goto LABEL_75;
            }
            goto LABEL_74;
          case 15:
            unint64_t v13 = 0xE500000000000000;
            if (v9 != 0x726568746FLL) {
              goto LABEL_75;
            }
            goto LABEL_74;
          case 16:
            uint64_t v16 = 0x6D726F6674616C70;
            uint64_t v17 = 0x7472656C41;
LABEL_59:
            unint64_t v13 = v17 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
            if (v9 != v16) {
              goto LABEL_75;
            }
            goto LABEL_74;
          case 17:
            unint64_t v13 = 0xE90000000000006ELL;
            if (v9 != 0x6F69746F6D6F7270) {
              goto LABEL_75;
            }
            goto LABEL_74;
          case 18:
            unint64_t v13 = 0xE600000000000000;
            if (v9 != 0x74706D6F7270) {
              goto LABEL_75;
            }
            goto LABEL_74;
          case 19:
            unint64_t v13 = 0xE700000000000000;
            uint64_t v14 = 0x6C69666F7270;
LABEL_66:
            if (v9 != (v14 & 0xFFFFFFFFFFFFLL | 0x65000000000000)) {
              goto LABEL_75;
            }
            goto LABEL_74;
          case 20:
            unint64_t v13 = 0xEC00000070696873;
            if (v9 != 0x6E6F6974616C6572) {
              goto LABEL_75;
            }
            goto LABEL_74;
          case 21:
            unint64_t v13 = 0xE800000000000000;
            if (v9 != 0x73676E6974746573) {
              goto LABEL_75;
            }
            goto LABEL_74;
          case 22:
            unint64_t v13 = 0xE600000000000000;
            unint64_t v12 = 0x657461647075;
            goto LABEL_73;
          case 23:
            unint64_t v13 = 0xE700000000000000;
            if (v9 != 0x72616265646973) {
              goto LABEL_75;
            }
            goto LABEL_74;
          default:
LABEL_73:
            if (v9 != v12) {
              goto LABEL_75;
            }
LABEL_74:
            if (v10 == v13)
            {
              swift_bridgeObjectRelease_n();
              char v18 = 1;
              return v18 & 1;
            }
LABEL_75:
            char v18 = sub_1C277C7E0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v18) {
              return v18 & 1;
            }
            unint64_t v6 = (v6 + 1) & v7;
            if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
              return v18 & 1;
            }
            break;
        }
      }
    }
  }
  char v18 = 0;
  return v18 & 1;
}

uint64_t sub_1C2728CE8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  sub_1C26418CC(0, &qword_1EBB83138, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C277E480;
  *(void *)(v4 + 32) = v3;
  *(unsigned char *)(v4 + 40) = 0;
  *a2 = v4;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2728D68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, int a3@<W3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v36 = a5;
  uint64_t v37 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v35 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  unint64_t v15 = (char *)&v29 - v14;
  if (a2)
  {
    uint64_t v38 = 0x20726F6620;
    unint64_t v39 = 0xE500000000000000;
    sub_1C277B8D0();
    unint64_t v16 = v39;
    uint64_t v34 = v38;
  }
  else
  {
    uint64_t v34 = 0;
    unint64_t v16 = 0xE000000000000000;
  }
  if (qword_1EBB85FE8 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1C277B130();
  __swift_project_value_buffer(v17, (uint64_t)qword_1EBB85FD0);
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v33(v15, a1, AssociatedTypeWitness);
  swift_bridgeObjectRetain();
  char v18 = sub_1C277B100();
  os_log_type_t v19 = sub_1C277BD20();
  int v20 = v19;
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v21 = swift_slowAlloc();
    int v30 = v20;
    uint64_t v22 = v21;
    uint64_t v29 = swift_slowAlloc();
    uint64_t v38 = v29;
    *(_DWORD *)uint64_t v22 = 136446722;
    int v32 = a3;
    uint64_t v23 = sub_1C277C9E0();
    uint64_t v40 = sub_1C263FDFC(v23, v24, &v38);
    uint64_t v31 = a6;
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_1C263FDFC(v34, v16, &v38);
    sub_1C277C0D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v22 + 22) = 2082;
    v33(v35, (uint64_t)v15, AssociatedTypeWitness);
    uint64_t v25 = sub_1C277B860();
    uint64_t v40 = sub_1C263FDFC(v25, v26, &v38);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, AssociatedTypeWitness);
    _os_log_impl(&dword_1C2601000, v18, (os_log_type_t)v30, "[%{public}s] Error processing sharable models%{public}s: %{public}s", (uint8_t *)v22, 0x20u);
    uint64_t v27 = v29;
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v27, -1, -1);
    MEMORY[0x1C875D230](v22, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, AssociatedTypeWitness);
  }

  swift_getAssociatedTypeWitness();
  return sub_1C277B450();
}

uint64_t sub_1C272916C()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 49, 7);
}

uint64_t sub_1C27291A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C2728D68(a1, *(void *)(v2 + 40), *(unsigned __int8 *)(v2 + 48), *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1C27291B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  unint64_t v10 = (char *)v20 - v9;
  if (qword_1EBB85FE8 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1C277B130();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EBB85FD0);
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v12(v10, a1, AssociatedTypeWitness);
  uint64_t v13 = sub_1C277B100();
  os_log_type_t v14 = sub_1C277BD20();
  if (os_log_type_enabled(v13, v14))
  {
    unint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v24 = v21;
    uint64_t v22 = a2;
    *(_DWORD *)unint64_t v15 = 136446210;
    v20[1] = v15 + 4;
    v12(v8, (uint64_t)v10, AssociatedTypeWitness);
    uint64_t v16 = sub_1C277B870();
    uint64_t v23 = sub_1C263FDFC(v16, v17, &v24);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, AssociatedTypeWitness);
    _os_log_impl(&dword_1C2601000, v13, v14, "PluginSharableModelChange Publisher Error: %{public}s", v15, 0xCu);
    uint64_t v18 = v21;
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v18, -1, -1);
    MEMORY[0x1C875D230](v15, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, AssociatedTypeWitness);
  }

  sub_1C26418CC(0, (unint64_t *)&qword_1EBB82E10, MEMORY[0x1E4FBB320]);
  return sub_1C277B450();
}

uint64_t sub_1C27294B8()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C27294C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C27291B4(a1, a2);
}

uint64_t sub_1C27294D0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (((*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, v5 + 8, v4);
}

void *sub_1C2729584@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(*(void *)(v2 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v2 + 16) - 8) + 80);
  unint64_t v5 = (*(void *)(*(void *)(*(void *)(v2 + 16) - 8) + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(v2 + v5);
  uint64_t v8 = *(void *)(v2 + v6);
  uint64_t v9 = *a1;
  v11[1] = *(_OWORD *)(v2 + 16);
  uint64_t v12 = v2 + v4;
  uint64_t v13 = v7;
  uint64_t v14 = v8;
  uint64_t result = sub_1C272843C((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1C2729A78, (uint64_t)v11, v9);
  *a2 = result;
  return result;
}

uint64_t sub_1C272965C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C2729718()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C27297B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v6 = *(void *)a1;
  int v7 = *(unsigned __int8 *)(a1 + 8);
  if (v7 == 2)
  {
    if (a2)
    {
      swift_bridgeObjectRetain();
      sub_1C26051DC(v6, 2u);
      uint64_t v11 = sub_1C2729A9C(v6, a2);
    }
    else
    {
      sub_1C26051DC(*(void *)a1, 2u);
      uint64_t v11 = sub_1C2648348(v6);
    }
    uint64_t v16 = v11;
    sub_1C264CFA0(v6, 2u);
    if (*(void *)(v16 + 16))
    {
      unint64_t v17 = sub_1C261C11C(v16);
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)a4 = v17;
      *(unsigned char *)(a4 + 8) = 2;
      return result;
    }
LABEL_27:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a4 = 0;
    *(unsigned char *)(a4 + 8) = -1;
    return result;
  }
  if (v7 == 1)
  {
    if (a2) {
      uint64_t v12 = a2;
    }
    else {
      uint64_t v12 = MEMORY[0x1E4FBC870];
    }
    if (a3)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = a3;
    }
    else
    {
      swift_bridgeObjectRetain();
      if ((MEMORY[0x1E4FBC860] & 0xC000000000000000) != 0)
      {
        if (sub_1C277C5A0())
        {
          sub_1C269A994(MEMORY[0x1E4FBC860]);
          uint64_t v13 = v20;
        }
        else
        {
          uint64_t v13 = MEMORY[0x1E4FBC870];
        }
      }
      else
      {
        uint64_t v13 = MEMORY[0x1E4FBC870];
      }
    }
    swift_bridgeObjectRetain();
    sub_1C26051DC(v6, 1u);
    uint64_t v18 = sub_1C2729E38(v6, v12, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C264CFA0(v6, 1u);
    if (*(void *)(v18 + 16))
    {
      *(void *)a4 = v18;
      *(unsigned char *)(a4 + 8) = 1;
      return result;
    }
    goto LABEL_27;
  }
  if (*(unsigned char *)(a1 + 8))
  {
    *(void *)a4 = v6;
    *(unsigned char *)(a4 + 8) = v7;
    return sub_1C26051DC(v6, v7);
  }
  else
  {
    if (a2) {
      uint64_t v9 = a2;
    }
    else {
      uint64_t v9 = MEMORY[0x1E4FBC870];
    }
    if (a3)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = a3;
    }
    else
    {
      swift_bridgeObjectRetain();
      if ((MEMORY[0x1E4FBC860] & 0xC000000000000000) != 0)
      {
        if (sub_1C277C5A0())
        {
          sub_1C269A994(MEMORY[0x1E4FBC860]);
          uint64_t v10 = v19;
        }
        else
        {
          uint64_t v10 = MEMORY[0x1E4FBC870];
        }
      }
      else
      {
        uint64_t v10 = MEMORY[0x1E4FBC870];
      }
    }
    swift_bridgeObjectRetain();
    sub_1C26051DC(v6, 0);
    uint64_t v15 = sub_1C2729E38(v6, v9, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C264CFA0(v6, 0);
    *(void *)a4 = v15;
    *(unsigned char *)(a4 + 8) = 0;
  }
  return result;
}

uint64_t sub_1C2729A78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C27297B8(a1, *(void *)(v2 + 40), *(void *)(v2 + 48), a2);
}

uint64_t sub_1C2729A9C(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E4F143B8];
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    uint64_t v7 = sub_1C2729C24((void *)((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, v3, a2);
    swift_release();
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    uint64_t v7 = sub_1C2729C24((unint64_t *)v8, v5, v3, a2);
    swift_release();
    MEMORY[0x1C875D230](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_1C2729C24(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a2;
  uint64_t v31 = *(void *)(a3 + 16);
  if (!v31)
  {
    uint64_t v26 = 0;
    goto LABEL_27;
  }
  uint64_t v32 = a4 + 56;
  uint64_t v30 = a3 + 32;
  swift_bridgeObjectRetain();
  uint64_t v28 = 0;
  for (uint64_t i = 0; i != v31; ++i)
  {
    uint64_t v7 = (uint64_t *)(v30 + 16 * i);
    uint64_t v9 = *v7;
    uint64_t v8 = v7[1];
    sub_1C277C8C0();
    swift_bridgeObjectRetain();
    sub_1C277B8B0();
    uint64_t v10 = sub_1C277C910();
    uint64_t v11 = -1 << *(unsigned char *)(a4 + 32);
    unint64_t v12 = v10 & ~v11;
    unint64_t v13 = v12 >> 6;
    uint64_t v14 = 1 << v12;
    if (((1 << v12) & *(void *)(v32 + 8 * (v12 >> 6))) == 0) {
      goto LABEL_3;
    }
    uint64_t v15 = *(void *)(a4 + 48);
    uint64_t v16 = (void *)(v15 + 16 * v12);
    BOOL v17 = *v16 == v9 && v16[1] == v8;
    if (!v17 && (sub_1C277C7E0() & 1) == 0)
    {
      uint64_t v21 = ~v11;
      for (unint64_t j = v12 + 1; ; unint64_t j = v23 + 1)
      {
        unint64_t v23 = j & v21;
        if (((*(void *)(v32 + (((j & v21) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (j & v21)) & 1) == 0) {
          break;
        }
        uint64_t v24 = (void *)(v15 + 16 * v23);
        BOOL v25 = *v24 == v9 && v24[1] == v8;
        if (v25 || (sub_1C277C7E0() & 1) != 0)
        {
          uint64_t result = swift_bridgeObjectRelease();
          unint64_t v13 = v23 >> 6;
          uint64_t v14 = 1 << v23;
          goto LABEL_12;
        }
      }
LABEL_3:
      swift_bridgeObjectRelease();
      continue;
    }
    uint64_t result = swift_bridgeObjectRelease();
LABEL_12:
    unint64_t v19 = a1[v13];
    a1[v13] = v14 | v19;
    if ((v14 & v19) == 0 && __OFADD__(v28++, 1))
    {
      __break(1u);
      return result;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v5 = a2;
  uint64_t v26 = v28;
LABEL_27:
  swift_retain();
  return sub_1C27420DC(a1, v5, v26, a4);
}

uint64_t sub_1C2729E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for PluginSharableModel() - 8;
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v48 = (uint64_t)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  unint64_t v12 = (char *)&v41 - v11;
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (uint64_t *)((char *)&v41 - v14);
  MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v41 - v17;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v49 = MEMORY[0x1E4FBC860];
  uint64_t v20 = *(void *)(a1 + 16);
  if (v20)
  {
    uint64_t v41 = v3;
    unint64_t v21 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    uint64_t v22 = *(void *)(v16 + 72);
    uint64_t v23 = a1 + v21;
    unint64_t v47 = a3 & 0xC000000000000001;
    uint64_t v24 = a3 & 0xFFFFFFFFFFFFFF8;
    uint64_t v45 = a3;
    if (a3 < 0) {
      uint64_t v24 = a3;
    }
    unint64_t v42 = v21;
    uint64_t v43 = v24;
    uint64_t v46 = MEMORY[0x1E4FBC860];
    uint64_t v44 = v22;
    while (1)
    {
      sub_1C26397A4(v23, (uint64_t)v18);
      uint64_t v25 = *(void *)(a2 + 16);
      sub_1C26397A4((uint64_t)v18, (uint64_t)v15);
      if (v25)
      {
        uint64_t v26 = *v15;
        uint64_t v27 = v15[1];
        swift_bridgeObjectRetain();
        int v28 = sub_1C26400F4(v26, v27, a2);
        swift_bridgeObjectRelease();
      }
      else
      {
        int v28 = 1;
      }
      sub_1C2639748((uint64_t)v15);
      if (v47) {
        uint64_t v29 = sub_1C277C1C0();
      }
      else {
        uint64_t v29 = *(void *)(v45 + 16);
      }
      sub_1C26397A4((uint64_t)v18, (uint64_t)v12);
      if (v29)
      {
        unint64_t v30 = swift_bridgeObjectRetain();
        uint64_t v31 = v15;
        uint64_t v32 = v12;
        uint64_t v33 = a2;
        uint64_t v34 = sub_1C2649500(v30);
        swift_bridgeObjectRelease();
        sub_1C263B3B0(v45, v34);
        int v36 = v35;
        a2 = v33;
        unint64_t v12 = v32;
        uint64_t v15 = v31;
        uint64_t v22 = v44;
        swift_bridgeObjectRelease();
        sub_1C2639748((uint64_t)v12);
        if (v28 & v36) {
          goto LABEL_17;
        }
      }
      else
      {
        sub_1C2639748((uint64_t)v12);
        if (v28)
        {
LABEL_17:
          sub_1C2640CE0((uint64_t)v18, v48);
          uint64_t v37 = v46;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C265A090(0, *(void *)(v37 + 16) + 1, 1);
            uint64_t v22 = v44;
          }
          uint64_t v38 = v49;
          unint64_t v40 = *(void *)(v49 + 16);
          unint64_t v39 = *(void *)(v49 + 24);
          if (v40 >= v39 >> 1)
          {
            sub_1C265A090(v39 > 1, v40 + 1, 1);
            uint64_t v22 = v44;
            uint64_t v38 = v49;
          }
          *(void *)(v38 + 16) = v40 + 1;
          uint64_t v46 = v38;
          sub_1C2640CE0(v48, v38 + v42 + v40 * v22);
          goto LABEL_6;
        }
      }
      sub_1C2639748((uint64_t)v18);
LABEL_6:
      v23 += v22;
      if (!--v20) {
        return v49;
      }
    }
  }
  return result;
}

uint64_t sub_1C272A164(uint64_t a1)
{
  sub_1C26415EC(0, &qword_1EBB827F8, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C272A1DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PluginSharableModel() - 8;
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v15 = 1;
    }
    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = *(void *)(v8 + 72);
      uint64_t v14 = v11 - 1;
      do
      {
        sub_1C26397A4(a1 + v12, (uint64_t)v10);
        sub_1C26397A4(a2 + v12, (uint64_t)v7);
        char v15 = static PluginSharableModel.== infix(_:_:)(v10, v7);
        sub_1C2639748((uint64_t)v7);
        sub_1C2639748((uint64_t)v10);
        BOOL v17 = v14-- != 0;
        if ((v15 & 1) == 0) {
          break;
        }
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1C272A33C(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (char v6 = sub_1C277C7E0(), result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (uint64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_1C277C7E0() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_1C272A404(uint64_t a1, uint64_t a2)
{
  return sub_1C272A474(a1, a2, (uint64_t)&qword_1EBB82EE8);
}

uint64_t sub_1C272A418(uint64_t a1, uint64_t a2)
{
  return sub_1C272A6F4(a1, a2, MEMORY[0x1E4F66840], &qword_1EA305338, MEMORY[0x1E4F66840], MEMORY[0x1E4F66850]);
}

uint64_t sub_1C272A460(uint64_t a1, uint64_t a2)
{
  return sub_1C272A474(a1, a2, (uint64_t)&qword_1EBB85E80);
}

uint64_t sub_1C272A474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C277C5A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v8 = (unint64_t)a2 >> 62;
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = (void *)sub_1C277C5A0();
    swift_bridgeObjectRelease();
    if ((void *)v7 == v9) {
      goto LABEL_5;
    }
    return 0;
  }
  uint64_t v9 = *(void **)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if ((void *)v7 != v9) {
    return 0;
  }
LABEL_5:
  if (!v7) {
    return 1;
  }
  uint64_t v10 = a1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v11 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0) {
    uint64_t v10 = a1;
  }
  if (v6) {
    uint64_t v11 = v10;
  }
  uint64_t v12 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v13 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v12 = a2;
  }
  if (v8) {
    uint64_t v13 = v12;
  }
  if (v11 == v13) {
    return 1;
  }
  if (v7 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  unint64_t v23 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_42:
    uint64_t result = MEMORY[0x1C875C230](0, a1);
    goto LABEL_19;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_44;
  }
  uint64_t result = (uint64_t)*(id *)(a1 + 32);
LABEL_19:
  uint64_t v9 = (void *)result;
  unint64_t v8 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_44:
    id v15 = (id)MEMORY[0x1C875C230](0, a2);
LABEL_22:
    uint64_t v16 = v15;
    sub_1C2644ED8(0, (unint64_t *)a3);
    a3 = sub_1C277C030();

    if (a3)
    {
      uint64_t v17 = 1 - v7;
      for (uint64_t i = 5; ; ++i)
      {
        uint64_t v7 = v17 + i == 5;
        if (v17 + i == 5) {
          return v7;
        }
        unint64_t v22 = i - 4;
        if (v23)
        {
          a3 = MEMORY[0x1C875C230](i - 4, a1);
          if (v8) {
            goto LABEL_24;
          }
        }
        else
        {
          if (v22 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_40:
            __break(1u);
            goto LABEL_41;
          }
          a3 = (uint64_t)*(id *)(a1 + 8 * i);
          if (v8)
          {
LABEL_24:
            id v19 = (id)MEMORY[0x1C875C230](i - 4, a2);
            goto LABEL_25;
          }
        }
        if (v22 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_40;
        }
        id v19 = *(id *)(a2 + 8 * i);
LABEL_25:
        uint64_t v20 = v19;
        char v21 = sub_1C277C030();

        if ((v21 & 1) == 0) {
          return v7;
        }
      }
    }
    return 0;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v15 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C272A6F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v37 = a6;
  uint64_t v10 = a3(0);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  MEMORY[0x1F4188790](v11);
  id v15 = (char *)&v30 - v14;
  uint64_t v16 = *(void *)(a1 + 16);
  if (v16 == *(void *)(a2 + 16))
  {
    if (!v16 || a1 == a2)
    {
      char v24 = 1;
    }
    else
    {
      unint64_t v17 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      id v19 = *(void (**)(char *, unint64_t, uint64_t))(v12 + 16);
      uint64_t v18 = v12 + 16;
      uint64_t v34 = v19;
      int v35 = v13;
      uint64_t v30 = *(void *)(v18 + 56);
      uint64_t v31 = a2;
      uint64_t v36 = v18;
      uint64_t v32 = a1;
      uint64_t v33 = (void (**)(char *, uint64_t))(v18 - 8);
      uint64_t v20 = v16 - 1;
      do
      {
        char v21 = v34;
        v34(v15, a1 + v17, v10);
        unint64_t v22 = v15;
        unint64_t v23 = v35;
        v21(v35, a2 + v17, v10);
        sub_1C272B9F8(a4, a5);
        char v24 = sub_1C277B810();
        uint64_t v25 = *v33;
        uint64_t v26 = v23;
        id v15 = v22;
        (*v33)(v26, v10);
        v25(v22, v10);
        BOOL v28 = v20-- != 0;
        if ((v24 & 1) == 0) {
          break;
        }
        v17 += v30;
        a2 = v31;
        a1 = v32;
      }
      while (v28);
    }
  }
  else
  {
    char v24 = 0;
  }
  return v24 & 1;
}

uint64_t ProfileDisplayName.init(shortName:termsOfAddress:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  a4[2] = a1;
  a4[3] = a2;
  a4[4] = a3;
  return swift_bridgeObjectRetain();
}

uint64_t ProfileDisplayName.shortName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ProfileDisplayName.shortNameWithSuggestion.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ProfileDisplayName.termsOfAddress.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ProfileDisplayName.init(shortName:shortNameWithSuggestion:termsOfAddress:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t sub_1C272A99C()
{
  unint64_t v1 = 0xD000000000000017;
  if (*v0 != 1) {
    unint64_t v1 = 0x41664F736D726574;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6D614E74726F6873;
  }
}

uint64_t sub_1C272AA0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C272B878(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C272AA34(uint64_t a1)
{
  unint64_t v2 = sub_1C272B284();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C272AA70(uint64_t a1)
{
  unint64_t v2 = sub_1C272B284();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ProfileDisplayName.encode(to:)(void *a1)
{
  sub_1C272B2D8(0, &qword_1EA3052D0, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v12 - v6;
  uint64_t v8 = v1[2];
  uint64_t v14 = v1[3];
  uint64_t v15 = v8;
  uint64_t v13 = v1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C272B284();
  sub_1C277C9B0();
  char v20 = 0;
  uint64_t v9 = v16;
  sub_1C277C720();
  if (!v9)
  {
    uint64_t v10 = v13;
    char v19 = 1;
    sub_1C277C720();
    uint64_t v17 = v10;
    char v18 = 2;
    sub_1C272B3FC(0, &qword_1EA3052E0, MEMORY[0x1E4F26EB0], MEMORY[0x1E4FBB320]);
    sub_1C272B33C(&qword_1EA3052E8, &qword_1EA3052F0);
    sub_1C277C760();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ProfileDisplayName.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C272B2D8(0, &qword_1EA3052F8, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C272B284();
  sub_1C277C9A0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v25 = 0;
  uint64_t v10 = sub_1C277C690();
  uint64_t v12 = v11;
  uint64_t v21 = v10;
  char v24 = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1C277C690();
  uint64_t v15 = v14;
  uint64_t v19 = v13;
  sub_1C272B3FC(0, &qword_1EA3052E0, MEMORY[0x1E4F26EB0], MEMORY[0x1E4FBB320]);
  char v23 = 2;
  sub_1C272B33C(&qword_1EA305300, &qword_1EA305308);
  uint64_t v20 = v15;
  swift_bridgeObjectRetain();
  sub_1C277C6D0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v16 = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = v20;
  *a2 = v21;
  a2[1] = v12;
  a2[2] = v19;
  a2[3] = v17;
  a2[4] = v16;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C272B034@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ProfileDisplayName.init(from:)(a1, a2);
}

uint64_t sub_1C272B04C(void *a1)
{
  return ProfileDisplayName.encode(to:)(a1);
}

uint64_t ProfileDisplayName.termsOfAddressOptions.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_1C277A5F0();
  sub_1C272B3FC(0, &qword_1EA305310, MEMORY[0x1E4F273D8], MEMORY[0x1E4FBBE00]);
  uint64_t v2 = *(void *)(sub_1C277A600() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C277E480;
  *(void *)(v4 + v3) = v1;
  (*(void (**)(void))(v2 + 104))();
  swift_bridgeObjectRetain();
  return sub_1C277A5E0();
}

uint64_t _s14HealthPlatform18ProfileDisplayNameV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  BOOL v8 = *a1 == *a2 && a1[1] == a2[1];
  if (v8 || (char v9 = sub_1C277C7E0(), v10 = 0, (v9 & 1) != 0))
  {
    BOOL v11 = v2 == v5 && v4 == v6;
    if (v11 || (char v12 = sub_1C277C7E0(), v10 = 0, (v12 & 1) != 0)) {
      char v10 = sub_1C272A6F4(v3, v7, MEMORY[0x1E4F26EB0], &qword_1EA305330, MEMORY[0x1E4F26EB0], MEMORY[0x1E4F26EC0]);
    }
  }
  return v10 & 1;
}

unint64_t sub_1C272B284()
{
  unint64_t result = qword_1EA3052D8;
  if (!qword_1EA3052D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3052D8);
  }
  return result;
}

void sub_1C272B2D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C272B284();
    unint64_t v7 = a3(a1, &type metadata for ProfileDisplayName.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C272B33C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C272B3FC(255, &qword_1EA3052E0, MEMORY[0x1E4F26EB0], MEMORY[0x1E4FBB320]);
    sub_1C272B9F8(a2, MEMORY[0x1E4F26EB0]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C272B3FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t destroy for ProfileDisplayName()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ProfileDisplayName(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ProfileDisplayName(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ProfileDisplayName(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ProfileDisplayName(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ProfileDisplayName(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ProfileDisplayName.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C272B738);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ProfileDisplayName.CodingKeys()
{
  return &type metadata for ProfileDisplayName.CodingKeys;
}

unint64_t sub_1C272B774()
{
  unint64_t result = qword_1EA305318;
  if (!qword_1EA305318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA305318);
  }
  return result;
}

unint64_t sub_1C272B7CC()
{
  unint64_t result = qword_1EA305320;
  if (!qword_1EA305320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA305320);
  }
  return result;
}

unint64_t sub_1C272B824()
{
  unint64_t result = qword_1EA305328;
  if (!qword_1EA305328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA305328);
  }
  return result;
}

uint64_t sub_1C272B878(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D614E74726F6873 && a2 == 0xE900000000000065;
  if (v2 || (sub_1C277C7E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001C278E880 || (sub_1C277C7E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x41664F736D726574 && a2 == 0xEE00737365726464)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C277C7E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1C272B9F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static KeywordFeatureTag.categoryFilter.getter()
{
  return 2434341;
}

uint64_t KeywordFeatureTag.value.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t KeywordFeatureTag.value.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*KeywordFeatureTag.value.modify())()
{
  return nullsub_1;
}

uint64_t KeywordFeatureTag.init(_:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1C272BAAC@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

void *sub_1C272BAB8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.bodyMeasurements.getter()
{
  return 0xD00000000000002BLL;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.fitness.getter()
{
  return 0xD000000000000022;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.healthDocuments.getter()
{
  return 0xD00000000000002CLL;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.hearing.getter()
{
  return 0xD000000000000028;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.heart.getter()
{
  return 0xD000000000000020;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.me.getter()
{
  return 0xD00000000000001DLL;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.mindfulness.getter()
{
  return 0xD000000000000026;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.nutrition.getter()
{
  return 0xD000000000000024;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.other.getter()
{
  return 0xD000000000000020;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.respiratory.getter()
{
  return 0xD000000000000026;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.vitalSigns.getter()
{
  return 0xD000000000000025;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.mobility.getter()
{
  return 0xD000000000000023;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.symptoms.getter()
{
  return 0xD000000000000023;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.medicationTracking.getter()
{
  return 0xD00000000000002DLL;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.healthRecords.getter()
{
  return 0xD000000000000028;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.allergies.getter()
{
  return 0xD000000000000024;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.clinicalNotes.getter()
{
  return 0xD000000000000028;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.clinicalVitals.getter()
{
  return 0xD000000000000029;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.conditions.getter()
{
  return 0xD000000000000025;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.immunizations.getter()
{
  return 0xD000000000000028;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.insurance.getter()
{
  return 0xD000000000000024;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.labResults.getter()
{
  return 0xD000000000000025;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.medications.getter()
{
  return 0xD000000000000026;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.procedures.getter()
{
  return 0xD000000000000025;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.homeWorkouts.getter()
{
  return 0xD000000000000019;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.journaling.getter()
{
  return 0xD000000000000017;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.music.getter()
{
  return 0xD000000000000012;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.podcasts.getter()
{
  return 0xD000000000000015;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.reading.getter()
{
  return 0xD000000000000014;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.sleepMindfulness.getter()
{
  return 0xD000000000000018;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.whiteNoise.getter()
{
  return 0xD000000000000017;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.wrapUpYourDay.getter()
{
  return 0xD00000000000001FLL;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.yoga.getter()
{
  return 0xD000000000000011;
}

uint64_t static KeywordFeatureTag.CommonIdentifier.none.getter()
{
  return 0;
}

unint64_t static KeywordFeatureTag.FeatureStatusIdentifier.active.getter()
{
  return 0xD00000000000001DLL;
}

unint64_t static KeywordFeatureTag.FeatureStatusIdentifier.inactive.getter()
{
  return 0xD00000000000001FLL;
}

unint64_t static KeywordFeatureTag.FeatureStatusIdentifier.unavailable.getter()
{
  return 0xD000000000000022;
}

unint64_t static KeywordFeatureTag.FeatureStatusIdentifier.needsReview.getter()
{
  return 0xD000000000000022;
}

unint64_t static KeywordFeatureTag.FeatureStatusIdentifier.hideInHealthChecklist.getter()
{
  return 0xD00000000000002CLL;
}

unint64_t static KeywordFeatureTag.DataTypeRoomAlertsIdentifier.prominent.getter()
{
  return 0xD000000000000025;
}

unint64_t static KeywordFeatureTag.DataTypeRoomAlertsIdentifier.nonProminent.getter()
{
  return 0xD000000000000028;
}

unint64_t static KeywordFeatureTag.PlatformAlertIdentifier.sharingVersionMismatch.getter()
{
  return 0xD00000000000002DLL;
}

unint64_t static KeywordFeatureTag.PlatformAlertIdentifier.notificationSettingsInvalidAuthorization.getter()
{
  return 0xD00000000000003FLL;
}

uint64_t sub_1C272BF68()
{
  sub_1C277C2D0();
  uint64_t result = swift_bridgeObjectRelease();
  qword_1EBB84430 = 0xD000000000000019;
  *(void *)algn_1EBB84438 = 0x80000001C278F360;
  return result;
}

uint64_t static KeywordFeatureTag.FilterIdentifier.healthRecordsDataType.getter()
{
  return sub_1C272C080(&qword_1EBB84440, &qword_1EBB84430);
}

uint64_t sub_1C272BFF4()
{
  sub_1C277C2D0();
  uint64_t result = swift_bridgeObjectRelease();
  qword_1EA305340 = 0xD00000000000001FLL;
  *(void *)algn_1EA305348 = 0x80000001C278F340;
  return result;
}

uint64_t static KeywordFeatureTag.FilterIdentifier.healthRecordsNavigationType.getter()
{
  return sub_1C272C080(&qword_1EA303F28, &qword_1EA305340);
}

uint64_t sub_1C272C080(void *a1, uint64_t *a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

unint64_t static KeywordFeatureTag.UserDomainConceptTypeIdentifier.regular.getter()
{
  return 0xD000000000000026;
}

unint64_t static KeywordFeatureTag.UserDomainConceptTypeIdentifier.older.getter()
{
  return 0xD000000000000024;
}

unint64_t static KeywordFeatureTag.UserDomainConceptTypeIdentifier.other.getter()
{
  return 0xD000000000000024;
}

unint64_t static KeywordFeatureTag.UserDomainConceptTypeIdentifier.removed.getter()
{
  return 0xD000000000000026;
}

unint64_t static KeywordFeatureTag.TimeScopeIdentifier.none.getter()
{
  return 0xD000000000000017;
}

unint64_t static KeywordFeatureTag.TimeScopeIdentifier.next.getter()
{
  return 0xD000000000000017;
}

unint64_t static KeywordFeatureTag.TimeScopeIdentifier.hour.getter()
{
  return 0xD000000000000017;
}

unint64_t static KeywordFeatureTag.TimeScopeIdentifier.day.getter()
{
  return 0xD000000000000016;
}

unint64_t static KeywordFeatureTag.TimeScopeIdentifier.week.getter()
{
  return 0xD000000000000017;
}

unint64_t static KeywordFeatureTag.TimeScopeIdentifier.month.getter()
{
  return 0xD000000000000018;
}

unint64_t static KeywordFeatureTag.TimeScopeIdentifier.year.getter()
{
  return 0xD000000000000017;
}

unint64_t static KeywordFeatureTag.AppInstallationStateIdentifier.isInstalledApplication.getter()
{
  return 0xD000000000000016;
}

unint64_t static KeywordFeatureTag.AppInstallationStateIdentifier.isUninstalledApplication.getter()
{
  return 0xD000000000000018;
}

unint64_t static KeywordFeatureTag.NotificationSettingsIdentifier.sharing.getter()
{
  return 0xD000000000000024;
}

unint64_t static KeywordFeatureTag.ProfileTypeIdentifier.familySharing.getter()
{
  return 0xD000000000000018;
}

unint64_t static KeywordFeatureTag.ProfileTypeIdentifier.summarySharing.getter()
{
  return 0xD000000000000019;
}

uint64_t static KeywordFeatureTag.SidebarTypeIdentifier.healthRecords.getter()
{
  return 0x655268746C616548;
}

uint64_t static KeywordFeatureTag.SharingProfileTypeIdentifier.inbound.getter()
{
  return 0x646E756F626E49;
}

uint64_t static KeywordFeatureTag.SharingProfileTypeIdentifier.outbound.getter()
{
  return 0x646E756F6274754FLL;
}

uint64_t static KeywordFeatureTag.SharingProfileTypeIdentifier.accepted.getter()
{
  return 0x6465747065636341;
}

uint64_t static KeywordFeatureTag.SharingProfileTypeIdentifier.pending.getter()
{
  return 0x676E69646E6550;
}

unint64_t static KeywordFeatureTag.SharingAuthorizationSuggestedCategoryIdentifier.activityAndMobility.getter()
{
  return 0xD000000000000013;
}

uint64_t static KeywordFeatureTag.SharingAuthorizationSuggestedCategoryIdentifier.heart.getter()
{
  return 0x7472616548;
}

uint64_t static KeywordFeatureTag.SharingAuthorizationSuggestedCategoryIdentifier.cycleTracking.getter()
{
  return 0x617254656C637943;
}

uint64_t static KeywordFeatureTag.SharingAuthorizationSuggestedCategoryIdentifier.nutrition.getter()
{
  return 0x6F6974697274754ELL;
}

uint64_t static KeywordFeatureTag.SharingAuthorizationSuggestedCategoryIdentifier.respiratory.getter()
{
  return 0x7461726970736552;
}

uint64_t static KeywordFeatureTag.SharingAuthorizationSuggestedCategoryIdentifier.other.getter()
{
  return 0x726568744FLL;
}

uint64_t static KeywordFeatureTag.SharingAuthorizationSuggestedCategoryIdentifier.labs.getter()
{
  return 1935827276;
}

uint64_t static KeywordFeatureTag.SharingAuthorizationSuggestedCategoryIdentifier.mentalHealth.getter()
{
  return 0x65486C61746E654DLL;
}

unint64_t static KeywordFeatureTag.SummariesAuthorizationIdentifier.prominent.getter()
{
  return 0xD000000000000029;
}

unint64_t static KeywordFeatureTag.SummariesAuthorizationIdentifier.onboardingFeedItem.getter()
{
  return 0xD000000000000032;
}

unint64_t static KeywordFeatureTag.SummariesHealthRecordsIdentifier.pinnedLab.getter()
{
  return 0xD000000000000029;
}

unint64_t static KeywordFeatureTag.SummariesHealthRecordsIdentifier.recentNewLab.getter()
{
  return 0xD00000000000002CLL;
}

unint64_t static KeywordFeatureTag.SummariesHealthRecordsIdentifier.pastThirtyDays.getter()
{
  return 0xD00000000000002ELL;
}

unint64_t static KeywordFeatureTag.SummariesHealthRecordsIdentifier.pastYear.getter()
{
  return 0xD000000000000028;
}

unint64_t static KeywordFeatureTag.SummariesHealthRecordsIdentifier.pastFiveYears.getter()
{
  return 0xD00000000000002DLL;
}

unint64_t static KeywordFeatureTag.SummariesHealthRecordsIdentifier.sharingAccount.getter()
{
  return 0xD00000000000002ELL;
}

unint64_t static KeywordFeatureTag.SummariesMedicationsIdentifier.scheduledMedication.getter()
{
  return 0xD000000000000031;
}

unint64_t static KeywordFeatureTag.SummariesMedicationsIdentifier.nonScheduledMedication.getter()
{
  return 0xD000000000000034;
}

unint64_t static KeywordFeatureTag.SummariesMedicationsIdentifier.archivedMedication.getter()
{
  return 0xD000000000000030;
}

unint64_t static KeywordFeatureTag.SummariesDataStatusIdentifier.noData.getter()
{
  return 0xD000000000000023;
}

unint64_t static KeywordFeatureTag.SummariesDataStatusIdentifier.hasData.getter()
{
  return 0xD000000000000024;
}

unint64_t static KeywordFeatureTag.SummariesTrendClassificationIdentifier.consistent.getter()
{
  return 0xD000000000000026;
}

unint64_t static KeywordFeatureTag.SummariesTrendClassificationIdentifier.increasing.getter()
{
  return 0xD000000000000026;
}

unint64_t static KeywordFeatureTag.SummariesTrendClassificationIdentifier.decreasing.getter()
{
  return 0xD000000000000026;
}

unint64_t static KeywordFeatureTag.SummariesTrendClassificationIdentifier.update.getter()
{
  return 0xD000000000000022;
}

unint64_t static KeywordFeatureTag.SummariesTrendClassificationIdentifier.inconclusive.getter()
{
  return 0xD000000000000028;
}

unint64_t static KeywordFeatureTag.VisibilityOptionsIdentifier.hideInCategoryRoom.getter()
{
  return 0xD000000000000012;
}

unint64_t static KeywordFeatureTag.VisibilityOptionsIdentifier.hideInSharingTab.getter()
{
  return 0xD000000000000010;
}

unint64_t static KeywordFeatureTag.VisibilityOptionsIdentifier.hideInSharedProfileView.getter()
{
  return 0xD000000000000017;
}

unint64_t static KeywordFeatureTag.VisibilityOptionsIdentifier.displayInSharingDashboard.getter()
{
  return 0xD000000000000019;
}

unint64_t static KeywordFeatureTag.SummaryHeaderAlertStackIdentifier.canDisplayAlertStackModal.getter()
{
  return 0xD000000000000019;
}

unint64_t static KeywordFeatureTag.SummaryHeaderAlertStackIdentifier.hasDisplayedAlertStackModal.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1C272C68C()
{
  uint64_t result = swift_getKeyPath();
  qword_1EBB827D8 = result;
  return result;
}

uint64_t static KeywordFeatureTag.keyPath.getter()
{
  if (qword_1EBB827D0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_retain();
}

uint64_t static KeywordFeatureTag.keyPath.setter(uint64_t a1)
{
  if (qword_1EBB827D0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_1EBB827D8 = a1;
  return swift_release();
}

uint64_t (*static KeywordFeatureTag.keyPath.modify())()
{
  if (qword_1EBB827D0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t KeywordFeatureTag.commonIdentifier.getter()
{
  return _s14HealthPlatform11FeedSectionC03getD10Identifier4fromSSSgShySSG_tFZ_0(*v0);
}

uint64_t sub_1C272C83C()
{
  if (qword_1EBB827D0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_retain();
}

ValueMetadata *type metadata accessor for KeywordFeatureTag()
{
  return &type metadata for KeywordFeatureTag;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.CommonIdentifier()
{
  return &type metadata for KeywordFeatureTag.CommonIdentifier;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.FeatureStatusIdentifier()
{
  return &type metadata for KeywordFeatureTag.FeatureStatusIdentifier;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.DataTypeRoomAlertsIdentifier()
{
  return &type metadata for KeywordFeatureTag.DataTypeRoomAlertsIdentifier;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.PlatformAlertIdentifier()
{
  return &type metadata for KeywordFeatureTag.PlatformAlertIdentifier;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.FilterIdentifier()
{
  return &type metadata for KeywordFeatureTag.FilterIdentifier;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.UserDomainConceptTypeIdentifier()
{
  return &type metadata for KeywordFeatureTag.UserDomainConceptTypeIdentifier;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.TimeScopeIdentifier()
{
  return &type metadata for KeywordFeatureTag.TimeScopeIdentifier;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.AppInstallationStateIdentifier()
{
  return &type metadata for KeywordFeatureTag.AppInstallationStateIdentifier;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.NotificationSettingsIdentifier()
{
  return &type metadata for KeywordFeatureTag.NotificationSettingsIdentifier;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.ProfileTypeIdentifier()
{
  return &type metadata for KeywordFeatureTag.ProfileTypeIdentifier;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.SidebarTypeIdentifier()
{
  return &type metadata for KeywordFeatureTag.SidebarTypeIdentifier;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.SharingProfileTypeIdentifier()
{
  return &type metadata for KeywordFeatureTag.SharingProfileTypeIdentifier;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.SharingAuthorizationSuggestedCategoryIdentifier()
{
  return &type metadata for KeywordFeatureTag.SharingAuthorizationSuggestedCategoryIdentifier;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.SummariesAuthorizationIdentifier()
{
  return &type metadata for KeywordFeatureTag.SummariesAuthorizationIdentifier;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.SummariesHealthRecordsIdentifier()
{
  return &type metadata for KeywordFeatureTag.SummariesHealthRecordsIdentifier;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.SummariesMedicationsIdentifier()
{
  return &type metadata for KeywordFeatureTag.SummariesMedicationsIdentifier;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.SummariesDataStatusIdentifier()
{
  return &type metadata for KeywordFeatureTag.SummariesDataStatusIdentifier;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.SummariesTrendClassificationIdentifier()
{
  return &type metadata for KeywordFeatureTag.SummariesTrendClassificationIdentifier;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.VisibilityOptionsIdentifier()
{
  return &type metadata for KeywordFeatureTag.VisibilityOptionsIdentifier;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.SummaryHeaderAlertStackIdentifier()
{
  return &type metadata for KeywordFeatureTag.SummaryHeaderAlertStackIdentifier;
}

uint64_t FeedItemChangeDomain.init(contentKinds:sourceProfiles:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = sub_1C2649760(a1);
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_1C265C9E4(a2);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v5;
  a3[1] = v6;
  return result;
}

uint64_t FeedItemChangeDomain.contentKinds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedItemChangeDomain.contentKinds.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*FeedItemChangeDomain.contentKinds.modify())()
{
  return nullsub_1;
}

uint64_t FeedItemChangeDomain.sourceProfiles.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedItemChangeDomain.sourceProfiles.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*FeedItemChangeDomain.sourceProfiles.modify())()
{
  return nullsub_1;
}

void FeedItemChangeDomain.merge(with:)()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_1C26724FC(v0);
  uint64_t v1 = swift_bridgeObjectRetain();
  sub_1C2672658(v1);
}

uint64_t FeedItemChangeDomain.overlaps(with:)(uint64_t *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  if (sub_1C272CB9C(*a1, v3))
  {
    char v5 = 0;
  }
  else
  {
    sub_1C272D75C(v2, v4);
    char v5 = v6 ^ 1;
  }
  return v5 & 1;
}

uint64_t sub_1C272CB9C(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 1;
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return 1;
  }
  if (v2 >= v3) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = a2;
  }
  if (v2 >= v3) {
    uint64_t v5 = a2;
  }
  else {
    uint64_t v5 = a1;
  }
  uint64_t v36 = v4 + 56;
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v4 + 56);
  int64_t v35 = (unint64_t)(63 - v6) >> 6;
  uint64_t v9 = v5 + 56;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int64_t v10 = 0;
  uint64_t v34 = v4;
  do
  {
    do
    {
LABEL_13:
      while (1)
      {
        int64_t v11 = v10;
        if (!v8) {
          break;
        }
        unint64_t v12 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v13 = v12 | (v10 << 6);
        if (*(void *)(v5 + 16)) {
          goto LABEL_30;
        }
      }
      int64_t v14 = v10 + 1;
      if (__OFADD__(v10, 1))
      {
        __break(1u);
        goto LABEL_115;
      }
      if (v14 >= v35) {
        goto LABEL_113;
      }
      unint64_t v15 = *(void *)(v36 + 8 * v14);
      ++v10;
      if (!v15)
      {
        int64_t v10 = v11 + 2;
        if (v11 + 2 >= v35) {
          goto LABEL_113;
        }
        unint64_t v15 = *(void *)(v36 + 8 * v10);
        if (!v15)
        {
          int64_t v10 = v11 + 3;
          if (v11 + 3 >= v35) {
            goto LABEL_113;
          }
          unint64_t v15 = *(void *)(v36 + 8 * v10);
          if (!v15)
          {
            int64_t v16 = v11 + 4;
            if (v11 + 4 >= v35)
            {
LABEL_113:
              swift_bridgeObjectRelease();
              uint64_t v32 = 1;
              goto LABEL_111;
            }
            unint64_t v15 = *(void *)(v36 + 8 * v16);
            if (!v15)
            {
              while (1)
              {
                int64_t v10 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  break;
                }
                if (v10 >= v35) {
                  goto LABEL_113;
                }
                unint64_t v15 = *(void *)(v36 + 8 * v10);
                ++v16;
                if (v15) {
                  goto LABEL_29;
                }
              }
LABEL_115:
              __break(1u);
              JUMPOUT(0x1C272D63CLL);
            }
            int64_t v10 = v11 + 4;
          }
        }
      }
LABEL_29:
      unint64_t v8 = (v15 - 1) & v15;
      unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    while (!*(void *)(v5 + 16));
LABEL_30:
    unint64_t v37 = v8;
    uint64_t v17 = *(unsigned __int8 *)(*(void *)(v4 + 48) + v13);
    sub_1C277C8C0();
    sub_1C277B8B0();
    swift_bridgeObjectRelease();
    uint64_t v18 = sub_1C277C910();
    uint64_t v19 = -1 << *(unsigned char *)(v5 + 32);
    unint64_t v20 = v18 & ~v19;
  }
  while (((*(void *)(v9 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0);
  uint64_t v21 = ~v19;
  while (2)
  {
    unint64_t v22 = 0xD000000000000011;
    unint64_t v23 = 0x80000001C2788B70;
    switch(*(unsigned char *)(*(void *)(v5 + 48) + v20))
    {
      case 1:
        unint64_t v23 = 0xE500000000000000;
        unint64_t v22 = 0x7472656C61;
        break;
      case 2:
        unint64_t v23 = 0xE300000000000000;
        unint64_t v22 = 7368801;
        break;
      case 3:
        unint64_t v23 = 0xE700000000000000;
        unint64_t v22 = 0x656C6369747261;
        break;
      case 4:
        unint64_t v23 = 0xE800000000000000;
        unint64_t v22 = 0x79726F6765746163;
        break;
      case 5:
        unint64_t v23 = 0xE400000000000000;
        unint64_t v22 = 1635017060;
        break;
      case 6:
        unint64_t v22 = 0x6D6D755361746164;
        unint64_t v23 = 0xEB00000000797261;
        break;
      case 7:
        char v24 = "cle";
        goto LABEL_42;
      case 8:
        char v24 = "dataSummaryAlert";
        goto LABEL_42;
      case 9:
        char v24 = "dataSummaryChart";
LABEL_42:
        unint64_t v23 = (unint64_t)v24 | 0x8000000000000000;
        unint64_t v22 = 0xD000000000000010;
        break;
      case 0xA:
        unint64_t v22 = 0x5365727574616566;
        unint64_t v23 = 0xED00007375746174;
        break;
      case 0xB:
        unint64_t v23 = 0xE900000000000074;
        unint64_t v22 = 0x6867696C68676968;
        break;
      case 0xC:
        unint64_t v22 = 0x6867696C68676968;
        unint64_t v23 = 0xEF68637261655374;
        break;
      case 0xD:
        unint64_t v22 = 0x697461676976616ELL;
        unint64_t v23 = 0xEA00000000006E6FLL;
        break;
      case 0xE:
        unint64_t v23 = 0xE600000000000000;
        unint64_t v22 = 0x617461446F6ELL;
        break;
      case 0xF:
        unint64_t v23 = 0xE500000000000000;
        unint64_t v22 = 0x726568746FLL;
        break;
      case 0x10:
        unint64_t v22 = 0x6D726F6674616C70;
        unint64_t v23 = 0xED00007472656C41;
        break;
      case 0x11:
        unint64_t v22 = 0x6F69746F6D6F7270;
        unint64_t v23 = 0xE90000000000006ELL;
        break;
      case 0x12:
        unint64_t v23 = 0xE600000000000000;
        unint64_t v22 = 0x74706D6F7270;
        break;
      case 0x13:
        unint64_t v23 = 0xE700000000000000;
        unint64_t v22 = 0x656C69666F7270;
        break;
      case 0x14:
        unint64_t v22 = 0x6E6F6974616C6572;
        unint64_t v23 = 0xEC00000070696873;
        break;
      case 0x15:
        unint64_t v23 = 0xE800000000000000;
        unint64_t v22 = 0x73676E6974746573;
        break;
      case 0x16:
        unint64_t v23 = 0xE600000000000000;
        unint64_t v22 = 0x657461647075;
        break;
      case 0x17:
        unint64_t v23 = 0xE700000000000000;
        unint64_t v22 = 0x72616265646973;
        break;
      default:
        break;
    }
    unint64_t v25 = 0xD000000000000011;
    unint64_t v26 = 0x80000001C2788B70;
    switch(v17)
    {
      case 1:
        unint64_t v26 = 0xE500000000000000;
        if (v22 != 0x7472656C61) {
          goto LABEL_102;
        }
        goto LABEL_101;
      case 2:
        unint64_t v26 = 0xE300000000000000;
        if (v22 != 7368801) {
          goto LABEL_102;
        }
        goto LABEL_101;
      case 3:
        unint64_t v26 = 0xE700000000000000;
        uint64_t v27 = 0x6C6369747261;
        goto LABEL_93;
      case 4:
        unint64_t v26 = 0xE800000000000000;
        if (v22 != 0x79726F6765746163) {
          goto LABEL_102;
        }
        goto LABEL_101;
      case 5:
        unint64_t v26 = 0xE400000000000000;
        if (v22 != 1635017060) {
          goto LABEL_102;
        }
        goto LABEL_101;
      case 6:
        unint64_t v26 = 0xEB00000000797261;
        if (v22 != 0x6D6D755361746164) {
          goto LABEL_102;
        }
        goto LABEL_101;
      case 7:
        BOOL v28 = "cle";
        goto LABEL_72;
      case 8:
        BOOL v28 = "dataSummaryAlert";
        goto LABEL_72;
      case 9:
        BOOL v28 = "dataSummaryChart";
LABEL_72:
        unint64_t v26 = (unint64_t)v28 | 0x8000000000000000;
        if (v22 != 0xD000000000000010) {
          goto LABEL_102;
        }
        goto LABEL_101;
      case 10:
        uint64_t v29 = 0x5365727574616566;
        uint64_t v30 = 0x7375746174;
        goto LABEL_86;
      case 11:
        unint64_t v26 = 0xE900000000000074;
        if (v22 != 0x6867696C68676968) {
          goto LABEL_102;
        }
        goto LABEL_101;
      case 12:
        unint64_t v26 = 0xEF68637261655374;
        if (v22 != 0x6867696C68676968) {
          goto LABEL_102;
        }
        goto LABEL_101;
      case 13:
        unint64_t v26 = 0xEA00000000006E6FLL;
        if (v22 != 0x697461676976616ELL) {
          goto LABEL_102;
        }
        goto LABEL_101;
      case 14:
        unint64_t v26 = 0xE600000000000000;
        if (v22 != 0x617461446F6ELL) {
          goto LABEL_102;
        }
        goto LABEL_101;
      case 15:
        unint64_t v26 = 0xE500000000000000;
        if (v22 != 0x726568746FLL) {
          goto LABEL_102;
        }
        goto LABEL_101;
      case 16:
        uint64_t v29 = 0x6D726F6674616C70;
        uint64_t v30 = 0x7472656C41;
LABEL_86:
        unint64_t v26 = v30 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
        if (v22 != v29) {
          goto LABEL_102;
        }
        goto LABEL_101;
      case 17:
        unint64_t v26 = 0xE90000000000006ELL;
        if (v22 != 0x6F69746F6D6F7270) {
          goto LABEL_102;
        }
        goto LABEL_101;
      case 18:
        unint64_t v26 = 0xE600000000000000;
        if (v22 != 0x74706D6F7270) {
          goto LABEL_102;
        }
        goto LABEL_101;
      case 19:
        unint64_t v26 = 0xE700000000000000;
        uint64_t v27 = 0x6C69666F7270;
LABEL_93:
        if (v22 != (v27 & 0xFFFFFFFFFFFFLL | 0x65000000000000)) {
          goto LABEL_102;
        }
        goto LABEL_101;
      case 20:
        unint64_t v26 = 0xEC00000070696873;
        if (v22 != 0x6E6F6974616C6572) {
          goto LABEL_102;
        }
        goto LABEL_101;
      case 21:
        unint64_t v26 = 0xE800000000000000;
        if (v22 != 0x73676E6974746573) {
          goto LABEL_102;
        }
        goto LABEL_101;
      case 22:
        unint64_t v26 = 0xE600000000000000;
        unint64_t v25 = 0x657461647075;
        goto LABEL_100;
      case 23:
        unint64_t v26 = 0xE700000000000000;
        if (v22 != 0x72616265646973) {
          goto LABEL_102;
        }
        goto LABEL_101;
      default:
LABEL_100:
        if (v22 != v25) {
          goto LABEL_102;
        }
LABEL_101:
        if (v23 == v26)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          goto LABEL_110;
        }
LABEL_102:
        char v31 = sub_1C277C7E0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v31 & 1) == 0)
        {
          unint64_t v20 = (v20 + 1) & v21;
          if ((*(void *)(v9 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20)) {
            continue;
          }
          uint64_t v4 = v34;
          unint64_t v8 = v37;
          goto LABEL_13;
        }
        swift_bridgeObjectRelease();
LABEL_110:
        uint64_t v32 = 0;
LABEL_111:
        sub_1C2648F6C();
        return v32;
    }
  }
}

void sub_1C272D75C(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return;
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return;
  }
  if (v2 >= v3) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = a2;
  }
  if (v2 >= v3) {
    uint64_t v5 = a2;
  }
  else {
    uint64_t v5 = a1;
  }
  uint64_t v28 = v4;
  uint64_t v29 = v4 + 56;
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v4 + 56);
  int64_t v27 = (unint64_t)(63 - v6) >> 6;
  uint64_t v9 = v5 + 56;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    while (1)
    {
      int64_t v11 = v10;
      if (!v8) {
        break;
      }
      unint64_t v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      if (*(void *)(v5 + 16)) {
        goto LABEL_31;
      }
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v14 >= v27) {
      goto LABEL_41;
    }
    unint64_t v15 = *(void *)(v29 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v11 + 2;
      if (v11 + 2 >= v27) {
        goto LABEL_41;
      }
      unint64_t v15 = *(void *)(v29 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v11 + 3;
        if (v11 + 3 >= v27) {
          goto LABEL_41;
        }
        unint64_t v15 = *(void *)(v29 + 8 * v10);
        if (!v15) {
          break;
        }
      }
    }
LABEL_30:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
    if (*(void *)(v5 + 16))
    {
LABEL_31:
      unint64_t v30 = v8;
      uint64_t v17 = *(void **)(*(void *)(v28 + 48) + 8 * v13);
      sub_1C277C8C0();
      sub_1C277C8D0();
      if (v17)
      {
        id v18 = v17;
        sub_1C277C040();
      }
      uint64_t v19 = sub_1C277C910();
      uint64_t v20 = -1 << *(unsigned char *)(v5 + 32);
      unint64_t v21 = v19 & ~v20;
      if ((*(void *)(v9 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21))
      {
        uint64_t v22 = ~v20;
        do
        {
          unint64_t v23 = *(void **)(*(void *)(v5 + 48) + 8 * v21);
          if (v23)
          {
            if (v17)
            {
              sub_1C2652E20();
              id v24 = v17;
              id v25 = v23;
              char v26 = sub_1C277C030();

              if (v26)
              {

                goto LABEL_41;
              }
            }
          }
          else if (!v17)
          {
            goto LABEL_41;
          }
          unint64_t v21 = (v21 + 1) & v22;
        }
        while (((*(void *)(v9 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) != 0);
      }

      unint64_t v8 = v30;
    }
  }
  int64_t v16 = v11 + 4;
  if (v11 + 4 >= v27)
  {
LABEL_41:
    swift_bridgeObjectRelease();
    sub_1C2648F6C();
    return;
  }
  unint64_t v15 = *(void *)(v29 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v11 + 4;
    goto LABEL_30;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v27) {
      goto LABEL_41;
    }
    unint64_t v15 = *(void *)(v29 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_30;
    }
  }
LABEL_45:
  __break(1u);
}

BOOL FeedItemChangeDomain.isEmpty.getter()
{
  return !*(void *)(*v0 + 16) && *(void *)(v0[1] + 16) == 0;
}

unint64_t FeedItemChangeDomain.description.getter()
{
  uint64_t v1 = *v0;
  sub_1C277C2D0();
  uint64_t v2 = v1;
  swift_bridgeObjectRelease();
  int64_t v3 = *(void *)(v1 + 16);
  if (v3)
  {
    uint64_t v19 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C264872C(0, v3, 0);
    int64_t v4 = sub_1C2643C28(v1);
    int v6 = v5;
    char v8 = v7 & 1;
    do
    {
      if (v4 < 0 || v4 >= 1 << *(unsigned char *)(v2 + 32))
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0x1C272DF6CLL);
      }
      if (((*(void *)(v1 + 56 + (((unint64_t)v4 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
        goto LABEL_39;
      }
      if (*(_DWORD *)(v2 + 36) != v6) {
        goto LABEL_40;
      }
      unint64_t v9 = 0xD000000000000011;
      unint64_t v10 = 0x80000001C2788B70;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v10 = 0xE500000000000000;
          unint64_t v9 = 0x7472656C61;
          break;
        case 2:
          unint64_t v10 = 0xE300000000000000;
          unint64_t v9 = 7368801;
          break;
        case 3:
          unint64_t v10 = 0xE700000000000000;
          unint64_t v9 = 0x656C6369747261;
          break;
        case 4:
          unint64_t v10 = 0xE800000000000000;
          unint64_t v9 = 0x79726F6765746163;
          break;
        case 5:
          unint64_t v10 = 0xE400000000000000;
          unint64_t v9 = 1635017060;
          break;
        case 6:
          unint64_t v10 = 0xEB00000000797261;
          unint64_t v9 = 0x6D6D755361746164;
          break;
        case 7:
          int64_t v11 = "cle";
          goto LABEL_17;
        case 8:
          int64_t v11 = "dataSummaryAlert";
          goto LABEL_17;
        case 9:
          int64_t v11 = "dataSummaryChart";
LABEL_17:
          unint64_t v10 = (unint64_t)v11 | 0x8000000000000000;
          unint64_t v9 = 0xD000000000000010;
          break;
        case 0xA:
          unint64_t v10 = 0xED00007375746174;
          unint64_t v9 = 0x5365727574616566;
          break;
        case 0xB:
          unint64_t v10 = 0xE900000000000074;
          goto LABEL_21;
        case 0xC:
          unint64_t v10 = 0xEF68637261655374;
LABEL_21:
          unint64_t v9 = 0x6867696C68676968;
          break;
        case 0xD:
          unint64_t v10 = 0xEA00000000006E6FLL;
          unint64_t v9 = 0x697461676976616ELL;
          break;
        case 0xE:
          unint64_t v10 = 0xE600000000000000;
          unint64_t v9 = 0x617461446F6ELL;
          break;
        case 0xF:
          unint64_t v10 = 0xE500000000000000;
          unint64_t v9 = 0x726568746FLL;
          break;
        case 0x10:
          unint64_t v10 = 0xED00007472656C41;
          unint64_t v9 = 0x6D726F6674616C70;
          break;
        case 0x11:
          unint64_t v9 = 0x6F69746F6D6F7270;
          unint64_t v10 = 0xE90000000000006ELL;
          break;
        case 0x12:
          unint64_t v10 = 0xE600000000000000;
          unint64_t v9 = 0x74706D6F7270;
          break;
        case 0x13:
          unint64_t v10 = 0xE700000000000000;
          unint64_t v9 = 0x656C69666F7270;
          break;
        case 0x14:
          unint64_t v10 = 0xEC00000070696873;
          unint64_t v9 = 0x6E6F6974616C6572;
          break;
        case 0x15:
          unint64_t v10 = 0xE800000000000000;
          unint64_t v9 = 0x73676E6974746573;
          break;
        case 0x16:
          unint64_t v10 = 0xE600000000000000;
          unint64_t v9 = 0x657461647075;
          break;
        case 0x17:
          unint64_t v10 = 0xE700000000000000;
          unint64_t v9 = 0x72616265646973;
          break;
        default:
          break;
      }
      unint64_t v13 = *(void *)(v19 + 16);
      unint64_t v12 = *(void *)(v19 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1C264872C(v12 > 1, v13 + 1, 1);
        uint64_t v2 = v1;
      }
      *(void *)(v19 + 16) = v13 + 1;
      uint64_t v14 = v19 + 16 * v13;
      *(void *)(v14 + 32) = v9;
      *(void *)(v14 + 40) = v10;
      int64_t v15 = sub_1C265B4D0(v4, v6, v8 & 1, v2);
      int64_t v4 = v15;
      int v6 = v16;
      char v8 = v17 & 1;
      --v3;
    }
    while (v3);
    sub_1C26431E8(v15, v16, v17 & 1);
    swift_bridgeObjectRelease();
  }
  sub_1C264E94C();
  sub_1C261C738();
  sub_1C277B7D0();
  swift_bridgeObjectRelease();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  sub_1C277B8D0();
  sub_1C265D678();
  swift_bridgeObjectRetain();
  sub_1C277BBD0();
  sub_1C277B8D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0xD000000000000024;
}

void static FeedItemChangeDomain.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  if (sub_1C2670A20(*a1, *a2))
  {
    sub_1C26712B8(v2, v3);
  }
}

uint64_t sub_1C272E028()
{
  if (*v0) {
    return 0x7250656372756F73;
  }
  else {
    return 0x4B746E65746E6F63;
  }
}

uint64_t sub_1C272E078@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C272EC4C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C272E0A0(uint64_t a1)
{
  unint64_t v2 = sub_1C272E794();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C272E0DC(uint64_t a1)
{
  unint64_t v2 = sub_1C272E794();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FeedItemChangeDomain.encode(to:)(void *a1)
{
  sub_1C272E83C(0, &qword_1EA305350, (uint64_t (*)(void))sub_1C272E794, (uint64_t)&type metadata for FeedItemChangeDomain.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v7 = (char *)&v11 - v6;
  uint64_t v8 = *v1;
  uint64_t v12 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C272E794();
  sub_1C277C9B0();
  uint64_t v15 = v8;
  char v14 = 0;
  sub_1C272E83C(0, &qword_1EA305360, (uint64_t (*)(void))sub_1C26497D4, (uint64_t)&type metadata for ContentKind, MEMORY[0x1E4FBB510]);
  sub_1C272E8A4(&qword_1EA305368, (void (*)(void))sub_1C2716FDC);
  uint64_t v9 = v13;
  sub_1C277C760();
  if (!v9)
  {
    uint64_t v15 = v12;
    char v14 = 1;
    sub_1C272E83C(0, &qword_1EA305370, (uint64_t (*)(void))sub_1C265D678, (uint64_t)&type metadata for SourceProfile, MEMORY[0x1E4FBB510]);
    sub_1C272E948(&qword_1EA305378, (void (*)(void))sub_1C272E7E8);
    sub_1C277C760();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t FeedItemChangeDomain.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1C272E83C(0, &qword_1EA305388, (uint64_t (*)(void))sub_1C272E794, (uint64_t)&type metadata for FeedItemChangeDomain.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v14 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C272E794();
  sub_1C277C9A0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v9 = v6;
  sub_1C272E83C(0, &qword_1EA305360, (uint64_t (*)(void))sub_1C26497D4, (uint64_t)&type metadata for ContentKind, MEMORY[0x1E4FBB510]);
  char v15 = 0;
  sub_1C272E8A4(&qword_1EA305390, (void (*)(void))sub_1C2716F88);
  uint64_t v10 = v14;
  sub_1C277C6D0();
  uint64_t v11 = v16;
  sub_1C272E83C(0, &qword_1EA305370, (uint64_t (*)(void))sub_1C265D678, (uint64_t)&type metadata for SourceProfile, MEMORY[0x1E4FBB510]);
  char v15 = 1;
  sub_1C272E948(&qword_1EA305398, (void (*)(void))sub_1C272E9EC);
  swift_bridgeObjectRetain();
  sub_1C277C6D0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v10);
  uint64_t v12 = v16;
  *a2 = v11;
  a2[1] = v12;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C272E704@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FeedItemChangeDomain.init(from:)(a1, a2);
}

uint64_t sub_1C272E71C(void *a1)
{
  return FeedItemChangeDomain.encode(to:)(a1);
}

void sub_1C272E734(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  if (sub_1C2670A20(*a1, *a2))
  {
    sub_1C26712B8(v2, v3);
  }
}

unint64_t sub_1C272E794()
{
  unint64_t result = qword_1EA305358;
  if (!qword_1EA305358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA305358);
  }
  return result;
}

unint64_t sub_1C272E7E8()
{
  unint64_t result = qword_1EA305380;
  if (!qword_1EA305380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA305380);
  }
  return result;
}

void sub_1C272E83C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C272E8A4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C272E83C(255, &qword_1EA305360, (uint64_t (*)(void))sub_1C26497D4, (uint64_t)&type metadata for ContentKind, MEMORY[0x1E4FBB510]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C272E948(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C272E83C(255, &qword_1EA305370, (uint64_t (*)(void))sub_1C265D678, (uint64_t)&type metadata for SourceProfile, MEMORY[0x1E4FBB510]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C272E9EC()
{
  unint64_t result = qword_1EA3053A0;
  if (!qword_1EA3053A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3053A0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FeedItemChangeDomain.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C272EB0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedItemChangeDomain.CodingKeys()
{
  return &type metadata for FeedItemChangeDomain.CodingKeys;
}

unint64_t sub_1C272EB48()
{
  unint64_t result = qword_1EA3053A8;
  if (!qword_1EA3053A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3053A8);
  }
  return result;
}

unint64_t sub_1C272EBA0()
{
  unint64_t result = qword_1EA3053B0;
  if (!qword_1EA3053B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3053B0);
  }
  return result;
}

unint64_t sub_1C272EBF8()
{
  unint64_t result = qword_1EA3053B8;
  if (!qword_1EA3053B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3053B8);
  }
  return result;
}

uint64_t sub_1C272EC4C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4B746E65746E6F63 && a2 == 0xEC00000073646E69;
  if (v2 || (sub_1C277C7E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7250656372756F73 && a2 == 0xEE0073656C69666FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C277C7E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t OrchestrationWorkQueueStatusObserver.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  sub_1C272EE10();
  uint64_t v1 = (_OWORD *)swift_allocObject();
  v1[1] = 0u;
  v1[2] = 0u;
  *(_OWORD *)((char *)v1 + 44) = 0u;
  *(void *)(v0 + 16) = v1;
  return v0;
}

uint64_t OrchestrationWorkQueueStatusObserver.init()()
{
  sub_1C272EE10();
  uint64_t v1 = (_OWORD *)swift_allocObject();
  v1[1] = 0u;
  v1[2] = 0u;
  *(_OWORD *)((char *)v1 + 44) = 0u;
  *(void *)(v0 + 16) = v1;
  return v0;
}

void sub_1C272EE10()
{
  if (!qword_1EBB84320)
  {
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_1C277C370();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB84320);
    }
  }
}

Swift::Void __swiftcall OrchestrationWorkQueueStatusObserver.didFinishStartup(latency:)(Swift::Double latency)
{
  BOOL v2 = (void *)sub_1C277B820();
  sub_1C2621170();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C277E480;
  *(void *)(inited + 32) = 0x79636E6574616CLL;
  *(void *)(inited + 40) = 0xE700000000000000;
  *(void *)(inited + 48) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, latency);
  sub_1C2629360(inited);
  sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85F30);
  unsigned int v4 = (void *)sub_1C277B750();
  swift_bridgeObjectRelease();
  AnalyticsSendEvent();
}

void sub_1C272EF80()
{
  if (!qword_1EBB80D68)
  {
    sub_1C2644ED8(255, (unint64_t *)&qword_1EBB85F30);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBB80D68);
    }
  }
}

Swift::Void __swiftcall OrchestrationWorkQueueStatusObserver.didEndForegroundSession(planCount:duration:)(Swift::Int planCount, Swift::Double duration)
{
}

uint64_t sub_1C272F01C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 8);
  BOOL v2 = __OFADD__(v1, 1);
  uint64_t v3 = v1 + 1;
  if (v2)
  {
    __break(1u);
  }
  else
  {
    *(void *)(result + 8) = v3;
    uint64_t v4 = *(void *)(result + 16);
    BOOL v2 = __OFADD__(v4, 1);
    uint64_t v5 = v4 + 1;
    if (!v2)
    {
      *(void *)(result + 16) = v5;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C272F048(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  BOOL v2 = __OFADD__(v1, 1);
  uint64_t v3 = v1 + 1;
  if (v2) {
    __break(1u);
  }
  else {
    *(void *)(result + 24) = v3;
  }
  return result;
}

uint64_t sub_1C272F060(void *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = v3;
  sub_1C2617598(0, &qword_1EA3053C8, MEMORY[0x1E4FBB390], MEMORY[0x1E4F1AC28]);
  swift_allocObject();
  id v5 = a1;
  sub_1C277B480();
  sub_1C272FBBC();
  uint64_t v6 = sub_1C277B4E0();
  swift_release();
  return v6;
}

void sub_1C272F160(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  uint64_t v9 = qword_1EBB82A50;
  swift_retain();
  if (v9 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1C277B130();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EBB82A38);
  id v11 = a3;
  uint64_t v12 = sub_1C277B100();
  os_log_type_t v13 = sub_1C277BD40();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    aBlock[0] = v28;
    *(_DWORD *)uint64_t v14 = 136315395;
    uint64_t v15 = sub_1C277C9E0();
    sub_1C263FDFC(v15, v16, aBlock);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2081;
    id v17 = objc_msgSend(v11, sel_profileIdentifier);
    os_log_type_t type = v13;
    id v18 = objc_msgSend(v17, sel_description);
    uint64_t v19 = sub_1C277B850();
    uint64_t v20 = a4;
    unint64_t v22 = v21;

    sub_1C263FDFC(v19, v22, aBlock);
    sub_1C277C0D0();

    a4 = v20;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2601000, v12, type, "[%s] Pushing shared summaries for %{private}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v28, -1, -1);
    MEMORY[0x1C875D230](v14, -1, -1);
  }
  else
  {
  }
  id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B4A8]), sel_initWithHealthStore_, v11);
  id v24 = (void *)swift_allocObject();
  void v24[2] = sub_1C263B0B8;
  void v24[3] = v8;
  v24[4] = v11;
  void v24[5] = a4;
  aBlock[4] = (uint64_t)sub_1C272FCB0;
  aBlock[5] = (uint64_t)v24;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = (uint64_t)sub_1C264ABF4;
  aBlock[3] = (uint64_t)&block_descriptor_26;
  id v25 = _Block_copy(aBlock);
  id v26 = v11;
  swift_release();
  objc_msgSend(v23, sel_pushWithCompletion_, v25);
  _Block_release(v25);
}

void sub_1C272F4B4(char a1, id a2, void (*a3)(id, uint64_t), uint64_t a4, void *a5)
{
  if (a2)
  {
    id v7 = a2;
    if (qword_1EBB82A50 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1C277B130();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EBB82A38);
    id v9 = a2;
    id v10 = a2;
    id v11 = sub_1C277B100();
    os_log_type_t v12 = sub_1C277BD20();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v38 = v14;
      *(_DWORD *)uint64_t v13 = 136315394;
      uint64_t v15 = sub_1C277C9E0();
      sub_1C263FDFC(v15, v16, &v38);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2082;
      id v17 = a2;
      sub_1C2621120(0, (unint64_t *)&qword_1EBB831D0);
      uint64_t v18 = sub_1C277B870();
      sub_1C263FDFC(v18, v19, &v38);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C2601000, v11, v12, "[%s] Shared Summaries Push Error: %{public}s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v14, -1, -1);
      MEMORY[0x1C875D230](v13, -1, -1);
    }
    else
    {
    }
    id v35 = a2;
    a3(a2, 1);
  }
  else
  {
    if (qword_1EBB82A50 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_1C277B130();
    __swift_project_value_buffer(v22, (uint64_t)qword_1EBB82A38);
    id v23 = a5;
    id v24 = sub_1C277B100();
    os_log_type_t v25 = sub_1C277BD40();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      uint64_t v38 = v37;
      *(_DWORD *)uint64_t v26 = 136315651;
      uint64_t v27 = sub_1C277C9E0();
      os_log_type_t type = v25;
      sub_1C263FDFC(v27, v28, &v38);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2081;
      id v29 = objc_msgSend(v23, sel_profileIdentifier);
      unint64_t v30 = a3;
      id v31 = objc_msgSend(v29, sel_description);
      uint64_t v32 = sub_1C277B850();
      unint64_t v34 = v33;

      sub_1C263FDFC(v32, v34, &v38);
      sub_1C277C0D0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 22) = 1024;
      sub_1C277C0D0();
      _os_log_impl(&dword_1C2601000, v24, type, "[%s] Successfully pushed shared summaries for %{private}s. Success: %{BOOL}d", (uint8_t *)v26, 0x1Cu);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v37, -1, -1);
      MEMORY[0x1C875D230](v26, -1, -1);

      v30((id)(a1 & 1), 0);
    }
    else
    {

      a3((id)(a1 & 1), 0);
    }
  }
}

uint64_t OrchestrationWorkQueueStatusObserver.deinit()
{
  swift_release();
  return v0;
}

uint64_t OrchestrationWorkQueueStatusObserver.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1C272F9C0()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C272F9F8()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C272FA38()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t type metadata accessor for OrchestrationWorkQueueStatusObserver()
{
  return self;
}

uint64_t method lookup function for OrchestrationWorkQueueStatusObserver(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for OrchestrationWorkQueueStatusObserver);
}

uint64_t dispatch thunk of OrchestrationWorkQueueStatusObserver.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t getEnumTagSinglePayload for OrchestrationWorkQueueStatusObserver.State(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for OrchestrationWorkQueueStatusObserver.State(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for OrchestrationWorkQueueStatusObserver.State()
{
  return &type metadata for OrchestrationWorkQueueStatusObserver.State;
}

unint64_t sub_1C272FAFC()
{
  unint64_t result = qword_1EBB831D8;
  if (!qword_1EBB831D8)
  {
    sub_1C2617598(255, (unint64_t *)&unk_1EBB831E0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4F1ACE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB831D8);
  }
  return result;
}

uint64_t sub_1C272FB7C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C272FBB4(uint64_t a1, uint64_t a2)
{
  sub_1C272F160(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24));
}

unint64_t sub_1C272FBBC()
{
  unint64_t result = qword_1EA3053D0;
  if (!qword_1EA3053D0)
  {
    sub_1C2617598(255, &qword_1EA3053C8, MEMORY[0x1E4FBB390], MEMORY[0x1E4F1AC28]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3053D0);
  }
  return result;
}

uint64_t sub_1C272FC38()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C272FC70()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1C272FCB0(char a1, void *a2)
{
  sub_1C272F4B4(a1, a2, *(void (**)(id, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t PreservedValue.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(a2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
  id v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);

  return v5(a3, 0, 1, a2);
}

uint64_t PreservedValue.executeIfSetValue(_:)(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = ((uint64_t (*)(void))MEMORY[0x1F4188790])();
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  id v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v11 + 16))(v10, v12);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4);
  if (result != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v10, v4);
    a1(v8);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  return result;
}

uint64_t PreservedValue.newValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v5);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) != 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v5, v7);
    uint64_t v9 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, v9, 1, v7);
}

uint64_t PreservedValue.assignIfSetValue<A>(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD v4[2] = a1;
  v4[3] = a2;
  return PreservedValue.executeIfSetValue(_:)((void (*)(char *))sub_1C27301A8, (uint64_t)v4, a3);
}

uint64_t sub_1C27300B0(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - v1);
  return swift_setAtReferenceWritableKeyPath();
}

uint64_t sub_1C27301A8(uint64_t a1)
{
  return sub_1C27300B0(a1);
}

uint64_t PreservedValue<A>.hasChanged(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v19 = a3;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v18 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  id v10 = (char *)&v18 - v9;
  uint64_t v11 = (char *)&v18 + *(int *)(v8 + 48) - v9;
  uint64_t v12 = *(void *)(a2 - 8);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v13((char *)&v18 - v9, v3, a2);
  v13(v11, a1, a2);
  uint64_t v14 = *(void *)(a2 + 16);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  if (v15(v10, 1, v14) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v11, a2);
  }
  else
  {
    if (v15(v11, 1, v14) != 1)
    {
      char v16 = static PreservedValue<A>.== infix(_:_:)(v4, a1, v14, v19) ^ 1;
      (*(void (**)(char *, uint64_t))(v18 + 8))(v10, TupleTypeMetadata2);
      return v16 & 1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, a2);
  }
  char v16 = 0;
  return v16 & 1;
}

uint64_t static PreservedValue<A>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a4;
  uint64_t v29 = a2;
  uint64_t v6 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v26 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PreservedValue();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v30 = (char *)&v25 - v10;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v12 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v15 = (char *)&v25 - v14;
  char v16 = (char *)&v25 + *(int *)(v13 + 48) - v14;
  uint64_t v28 = v9;
  id v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v17((char *)&v25 - v14, a1, v8);
  v17(v16, v29, v8);
  uint64_t v29 = v6;
  uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v18(v15, 1, a3) == 1)
  {
    char v19 = 1;
    if (v18(v16, 1, a3) == 1) {
      goto LABEL_8;
    }
  }
  else
  {
    v17(v30, (uint64_t)v15, v8);
    if (v18(v16, 1, a3) != 1)
    {
      uint64_t v20 = v29;
      unint64_t v21 = v26;
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v16, a3);
      uint64_t v22 = v30;
      char v19 = sub_1C277B810();
      id v23 = *(void (**)(char *, uint64_t))(v20 + 8);
      v23(v21, a3);
      v23(v22, a3);
LABEL_8:
      uint64_t v12 = v28;
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v29 + 8))(v30, a3);
  }
  char v19 = 0;
  uint64_t v8 = TupleTypeMetadata2;
LABEL_9:
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v8);
  return v19 & 1;
}

uint64_t type metadata accessor for PreservedValue()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C2730710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static PreservedValue<A>.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a4 - 8));
}

uint64_t PreservedValue<A>.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v9 + 16))(v8, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1) {
    return sub_1C277C8D0();
  }
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v8, v2);
  sub_1C277C8D0();
  sub_1C277B7C0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t PreservedValue<A>.hashValue.getter(uint64_t a1)
{
  sub_1C277C8C0();
  PreservedValue<A>.hash(into:)((uint64_t)v3, a1);
  return sub_1C277C910();
}

uint64_t sub_1C2730930(uint64_t a1)
{
  return PreservedValue<A>.hashValue.getter(a1);
}

uint64_t sub_1C2730938(uint64_t a1, uint64_t a2)
{
  return PreservedValue<A>.hash(into:)(a1, a2);
}

uint64_t sub_1C2730940(uint64_t a1, uint64_t a2)
{
  sub_1C277C8C0();
  PreservedValue<A>.hash(into:)((uint64_t)v4, a2);
  return sub_1C277C910();
}

uint64_t Publisher.asPrependedPreservedValue()(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for PreservedValue();
  uint64_t v5 = sub_1C277B1E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - v7;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  sub_1C277B500();
  swift_release();
  sub_1C277C7C0();
  swift_allocObject();
  sub_1C277BA70();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v10, 1, 1, AssociatedTypeWitness);
  sub_1C277BB20();
  swift_getWitnessTable();
  sub_1C277B5B0();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C2730BEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v7 = (char *)&v9 - v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v9 - v6, a1, AssociatedTypeWitness);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, AssociatedTypeWitness);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, AssociatedTypeWitness);
}

uint64_t sub_1C2730D14()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2730D24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C2730BEC(a1, a2);
}

uint64_t sub_1C2730D2C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C2730D74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 8);
}

uint64_t sub_1C2730D7C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void *sub_1C2730DF8(void *a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = v6;
  int v8 = *(_DWORD *)(v6 + 84);
  uint64_t v9 = *(void *)(v6 + 64);
  if (v8) {
    size_t v10 = *(void *)(v6 + 64);
  }
  else {
    size_t v10 = v9 + 1;
  }
  uint64_t v11 = *(_DWORD *)(v6 + 80);
  if (v11 > 7 || (*(_DWORD *)(v7 + 80) & 0x100000) != 0 || v10 > 0x18)
  {
    uint64_t v14 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v14 + ((v11 + 16) & ~v11));
    swift_retain();
    return a1;
  }
  if (!v8)
  {
    if (!*((unsigned char *)a2 + v9)) {
      goto LABEL_31;
    }
    int v15 = (*((unsigned __int8 *)a2 + v9) - 1) << (8 * v9);
    if (v9 > 3) {
      int v15 = 0;
    }
    if (v9)
    {
      int v16 = v9 <= 3 ? v9 : 4;
      switch(v16)
      {
        case 2:
          int v17 = *a2;
          break;
        case 3:
          int v17 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
          break;
        case 4:
          int v17 = *(_DWORD *)a2;
          break;
        default:
          int v17 = *(unsigned __int8 *)a2;
          break;
      }
    }
    else
    {
      int v17 = 0;
    }
    if ((v17 | v15) == 0xFFFFFFFF) {
      goto LABEL_31;
    }
LABEL_30:
    memcpy(a1, a2, v10);
    return a1;
  }
  if ((*(unsigned int (**)(unsigned __int16 *, void, uint64_t))(v7 + 48))(a2, *(unsigned int *)(v7 + 84), v5))
  {
    goto LABEL_30;
  }
LABEL_31:
  (*(void (**)(void *, unsigned __int16 *, uint64_t))(v7 + 16))(a1, a2, v5);
  if (!v8) {
    *((unsigned char *)a1 + v9) = 0;
  }
  return a1;
}

uint64_t sub_1C2730FC0(unsigned __int16 *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned int *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5)
  {
    uint64_t v11 = *(void *)(v3 - 8);
    uint64_t result = (*(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v4 + 48))(a1, v5, v3);
    uint64_t v4 = v11;
    if (result) {
      return result;
    }
    goto LABEL_17;
  }
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_17;
  }
  int v8 = (*((unsigned __int8 *)a1 + v6) - 1) << (8 * v6);
  if (v6 > 3) {
    int v8 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  int v9 = v6 | v8;
  uint64_t result = (v9 + 1);
  if (v9 == -1)
  {
LABEL_17:
    size_t v10 = *(uint64_t (**)(unsigned __int16 *, uint64_t))(v4 + 8);
    return v10(a1, v3);
  }
  return result;
}

unsigned char *sub_1C2731128(unsigned char *a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  if (v7)
  {
    if (!(*(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48))(a2, v7, v5))
    {
LABEL_22:
      (*(void (**)(unsigned char *, unsigned __int16 *, uint64_t))(v6 + 16))(a1, a2, v5);
      if (!v7) {
        a1[v8] = 0;
      }
      return a1;
    }
  }
  else
  {
    if (!*((unsigned char *)a2 + v8)) {
      goto LABEL_22;
    }
    int v9 = (*((unsigned __int8 *)a2 + v8) - 1) << (8 * v8);
    if (v8 > 3) {
      int v9 = 0;
    }
    if (v8)
    {
      int v10 = v8 <= 3 ? *(void *)(v6 + 64) : 4;
      switch(v10)
      {
        case 2:
          int v11 = *a2;
          break;
        case 3:
          int v11 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
          break;
        case 4:
          int v11 = *(_DWORD *)a2;
          break;
        default:
          int v11 = *(unsigned __int8 *)a2;
          break;
      }
    }
    else
    {
      int v11 = 0;
    }
    if ((v11 | v9) == 0xFFFFFFFF) {
      goto LABEL_22;
    }
  }
  if (v7) {
    size_t v12 = v8;
  }
  else {
    size_t v12 = v8 + 1;
  }
  memcpy(a1, a2, v12);
  return a1;
}

unsigned __int16 *sub_1C27312AC(unsigned __int16 *a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  if (!v7)
  {
    char v12 = 8 * v8;
    if (*((unsigned char *)a1 + v8))
    {
      int v13 = (*((unsigned __int8 *)a1 + v8) - 1) << v12;
      if (v8 > 3) {
        int v13 = 0;
      }
      if (v8)
      {
        int v14 = v8 <= 3 ? *(void *)(v6 + 64) : 4;
        switch(v14)
        {
          case 2:
            int v15 = *a1;
            break;
          case 3:
            int v15 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v15 = *(_DWORD *)a1;
            break;
          default:
            int v15 = *(unsigned __int8 *)a1;
            break;
        }
      }
      else
      {
        int v15 = 0;
      }
      if ((v15 | v13) != 0xFFFFFFFF)
      {
        if (!*((unsigned char *)a2 + v8)) {
          goto LABEL_54;
        }
        int v16 = (*((unsigned __int8 *)a2 + v8) - 1) << v12;
        if (v8 > 3) {
          int v16 = 0;
        }
        if (v8)
        {
          int v17 = v8 <= 3 ? *(void *)(v6 + 64) : 4;
          switch(v17)
          {
            case 2:
              int v18 = *a2;
              break;
            case 3:
              int v18 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
              break;
            case 4:
              int v18 = *(_DWORD *)a2;
              break;
            default:
              int v18 = *(unsigned __int8 *)a2;
              break;
          }
        }
        else
        {
          int v18 = 0;
        }
        if ((v18 | v16) == 0xFFFFFFFF) {
          goto LABEL_54;
        }
        goto LABEL_45;
      }
    }
    if (!*((unsigned char *)a2 + v8))
    {
LABEL_49:
      (*(void (**)(unsigned __int16 *, unsigned __int16 *, uint64_t))(v6 + 24))(a1, a2, v5);
      return a1;
    }
    int v19 = (*((unsigned __int8 *)a2 + v8) - 1) << v12;
    if (v8 > 3) {
      int v19 = 0;
    }
    if (v8)
    {
      if (v8 <= 3) {
        int v20 = *(void *)(v6 + 64);
      }
      else {
        int v20 = 4;
      }
      switch(v20)
      {
        case 2:
          int v21 = *a2;
          break;
        case 3:
          int v21 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
          break;
        case 4:
          int v21 = *(_DWORD *)a2;
          break;
        default:
          int v21 = *(unsigned __int8 *)a2;
          break;
      }
    }
    else
    {
      int v21 = 0;
    }
    int v11 = (v21 | v19) + 1;
LABEL_43:
    if (v11)
    {
      (*(void (**)(unsigned __int16 *, uint64_t))(v6 + 8))(a1, v5);
      goto LABEL_45;
    }
    goto LABEL_49;
  }
  int v9 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
  int v10 = v9(a1, v7, v5);
  int v11 = v9(a2, v7, v5);
  if (!v10) {
    goto LABEL_43;
  }
  if (!v11)
  {
LABEL_54:
    (*(void (**)(unsigned __int16 *, unsigned __int16 *, uint64_t))(v6 + 16))(a1, a2, v5);
    if (!v7) {
      *((unsigned char *)a1 + v8) = 0;
    }
    return a1;
  }
LABEL_45:
  if (v7) {
    size_t v22 = v8;
  }
  else {
    size_t v22 = v8 + 1;
  }
  memcpy(a1, a2, v22);
  return a1;
}

unsigned char *sub_1C27315C0(unsigned char *a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  if (v7)
  {
    if (!(*(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48))(a2, v7, v5))
    {
LABEL_22:
      (*(void (**)(unsigned char *, unsigned __int16 *, uint64_t))(v6 + 32))(a1, a2, v5);
      if (!v7) {
        a1[v8] = 0;
      }
      return a1;
    }
  }
  else
  {
    if (!*((unsigned char *)a2 + v8)) {
      goto LABEL_22;
    }
    int v9 = (*((unsigned __int8 *)a2 + v8) - 1) << (8 * v8);
    if (v8 > 3) {
      int v9 = 0;
    }
    if (v8)
    {
      int v10 = v8 <= 3 ? *(void *)(v6 + 64) : 4;
      switch(v10)
      {
        case 2:
          int v11 = *a2;
          break;
        case 3:
          int v11 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
          break;
        case 4:
          int v11 = *(_DWORD *)a2;
          break;
        default:
          int v11 = *(unsigned __int8 *)a2;
          break;
      }
    }
    else
    {
      int v11 = 0;
    }
    if ((v11 | v9) == 0xFFFFFFFF) {
      goto LABEL_22;
    }
  }
  if (v7) {
    size_t v12 = v8;
  }
  else {
    size_t v12 = v8 + 1;
  }
  memcpy(a1, a2, v12);
  return a1;
}

unsigned __int16 *sub_1C2731744(unsigned __int16 *a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  if (!v7)
  {
    char v12 = 8 * v8;
    if (*((unsigned char *)a1 + v8))
    {
      int v13 = (*((unsigned __int8 *)a1 + v8) - 1) << v12;
      if (v8 > 3) {
        int v13 = 0;
      }
      if (v8)
      {
        int v14 = v8 <= 3 ? *(void *)(v6 + 64) : 4;
        switch(v14)
        {
          case 2:
            int v15 = *a1;
            break;
          case 3:
            int v15 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v15 = *(_DWORD *)a1;
            break;
          default:
            int v15 = *(unsigned __int8 *)a1;
            break;
        }
      }
      else
      {
        int v15 = 0;
      }
      if ((v15 | v13) != 0xFFFFFFFF)
      {
        if (!*((unsigned char *)a2 + v8)) {
          goto LABEL_54;
        }
        int v16 = (*((unsigned __int8 *)a2 + v8) - 1) << v12;
        if (v8 > 3) {
          int v16 = 0;
        }
        if (v8)
        {
          int v17 = v8 <= 3 ? *(void *)(v6 + 64) : 4;
          switch(v17)
          {
            case 2:
              int v18 = *a2;
              break;
            case 3:
              int v18 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
              break;
            case 4:
              int v18 = *(_DWORD *)a2;
              break;
            default:
              int v18 = *(unsigned __int8 *)a2;
              break;
          }
        }
        else
        {
          int v18 = 0;
        }
        if ((v18 | v16) == 0xFFFFFFFF) {
          goto LABEL_54;
        }
        goto LABEL_45;
      }
    }
    if (!*((unsigned char *)a2 + v8))
    {
LABEL_49:
      (*(void (**)(unsigned __int16 *, unsigned __int16 *, uint64_t))(v6 + 40))(a1, a2, v5);
      return a1;
    }
    int v19 = (*((unsigned __int8 *)a2 + v8) - 1) << v12;
    if (v8 > 3) {
      int v19 = 0;
    }
    if (v8)
    {
      if (v8 <= 3) {
        int v20 = *(void *)(v6 + 64);
      }
      else {
        int v20 = 4;
      }
      switch(v20)
      {
        case 2:
          int v21 = *a2;
          break;
        case 3:
          int v21 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
          break;
        case 4:
          int v21 = *(_DWORD *)a2;
          break;
        default:
          int v21 = *(unsigned __int8 *)a2;
          break;
      }
    }
    else
    {
      int v21 = 0;
    }
    int v11 = (v21 | v19) + 1;
LABEL_43:
    if (v11)
    {
      (*(void (**)(unsigned __int16 *, uint64_t))(v6 + 8))(a1, v5);
      goto LABEL_45;
    }
    goto LABEL_49;
  }
  int v9 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
  int v10 = v9(a1, v7, v5);
  int v11 = v9(a2, v7, v5);
  if (!v10) {
    goto LABEL_43;
  }
  if (!v11)
  {
LABEL_54:
    (*(void (**)(unsigned __int16 *, unsigned __int16 *, uint64_t))(v6 + 32))(a1, a2, v5);
    if (!v7) {
      *((unsigned char *)a1 + v8) = 0;
    }
    return a1;
  }
LABEL_45:
  if (v7) {
    size_t v22 = v8;
  }
  else {
    size_t v22 = v8 + 1;
  }
  memcpy(a1, a2, v22);
  return a1;
}

uint64_t sub_1C2731A58(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  unsigned int v6 = v5 - 1;
  if (!v5) {
    unsigned int v6 = 0;
  }
  uint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!v5) {
    ++v7;
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v6;
  if (a2 > v6)
  {
    char v9 = 8 * v7;
    if (v7 > 3) {
      goto LABEL_8;
    }
    unsigned int v11 = ((v8 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v7);
      if (v10) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2) {
          goto LABEL_25;
        }
LABEL_8:
        int v10 = *((unsigned __int8 *)a1 + v7);
        if (!*((unsigned char *)a1 + v7)) {
          goto LABEL_25;
        }
LABEL_15:
        int v12 = (v10 - 1) << v9;
        if (v7 > 3) {
          int v12 = 0;
        }
        if (v7)
        {
          if (v7 <= 3) {
            int v13 = v7;
          }
          else {
            int v13 = 4;
          }
          switch(v13)
          {
            case 2:
              int v14 = *a1;
              break;
            case 3:
              int v14 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              int v14 = *(_DWORD *)a1;
              break;
            default:
              int v14 = *(unsigned __int8 *)a1;
              break;
          }
        }
        else
        {
          int v14 = 0;
        }
        return v6 + (v14 | v12) + 1;
      }
      int v10 = *(unsigned __int16 *)((char *)a1 + v7);
      if (*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_15;
      }
    }
  }
LABEL_25:
  if (v5 < 2) {
    return 0;
  }
  unsigned int v16 = (*(uint64_t (**)(void))(v4 + 48))();
  if (v16 >= 2) {
    return v16 - 1;
  }
  else {
    return 0;
  }
}

void sub_1C2731BF8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  if (v8) {
    unsigned int v9 = v8 - 1;
  }
  else {
    unsigned int v9 = 0;
  }
  size_t v10 = *(void *)(v7 + 64);
  if (v8) {
    size_t v11 = *(void *)(v7 + 64);
  }
  else {
    size_t v11 = v10 + 1;
  }
  BOOL v12 = a3 >= v9;
  unsigned int v13 = a3 - v9;
  if (v13 == 0 || !v12)
  {
LABEL_16:
    if (v9 < a2) {
      goto LABEL_17;
    }
    goto LABEL_24;
  }
  if (v11 > 3)
  {
    int v6 = 1;
    if (v9 < a2) {
      goto LABEL_17;
    }
    goto LABEL_24;
  }
  unsigned int v14 = ((v13 + ~(-1 << (8 * v11))) >> (8 * v11)) + 1;
  if (!HIWORD(v14))
  {
    if (v14 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v14 > 1;
    }
    goto LABEL_16;
  }
  int v6 = 4;
  if (v9 < a2)
  {
LABEL_17:
    unsigned int v15 = ~v9 + a2;
    if (v11 < 4)
    {
      int v16 = (v15 >> (8 * v11)) + 1;
      if (v11)
      {
        int v17 = v15 & ~(-1 << (8 * v11));
        bzero(a1, v11);
        if (v11 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v11 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v15;
      int v16 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v11] = v16;
        return;
      case 2:
        *(_WORD *)&a1[v11] = v16;
        return;
      case 3:
        goto LABEL_56;
      case 4:
        *(_DWORD *)&a1[v11] = v16;
        return;
      default:
        return;
    }
  }
LABEL_24:
  switch(v6)
  {
    case 1:
      a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 2:
      *(_WORD *)&a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 3:
LABEL_56:
      __break(1u);
      JUMPOUT(0x1C2731EC8);
    case 4:
      *(_DWORD *)&a1[v11] = 0;
      goto LABEL_28;
    default:
LABEL_28:
      if (a2)
      {
LABEL_29:
        if (v8 >= 2)
        {
          if (a2 + 1 <= v8)
          {
            if (a2 != -1)
            {
              int v21 = *(void (**)(void))(v7 + 56);
              v21();
            }
          }
          else
          {
            if (v10 <= 3) {
              int v18 = ~(-1 << (8 * v10));
            }
            else {
              int v18 = -1;
            }
            if (v10)
            {
              int v19 = v18 & (a2 - v8);
              if (v10 <= 3) {
                int v20 = v10;
              }
              else {
                int v20 = 4;
              }
              bzero(a1, v10);
              switch(v20)
              {
                case 2:
                  *(_WORD *)a1 = v19;
                  break;
                case 3:
                  *(_WORD *)a1 = v19;
                  a1[2] = BYTE2(v19);
                  break;
                case 4:
                  *(_DWORD *)a1 = v19;
                  break;
                default:
                  *a1 = v19;
                  break;
              }
            }
          }
        }
      }
      return;
  }
}

uint64_t sub_1C2731F00(unsigned __int16 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  if (*(_DWORD *)(v2 + 84)) {
    return (*(uint64_t (**)(void))(v2 + 48))();
  }
  if (!*((unsigned char *)a1 + v3)) {
    return 0;
  }
  int v5 = (*((unsigned __int8 *)a1 + v3) - 1) << (8 * v3);
  if (v3 > 3) {
    int v5 = 0;
  }
  if (v3)
  {
    if (v3 > 3) {
      LODWORD(v3) = 4;
    }
    switch((int)v3)
    {
      case 2:
        LODWORD(v3) = *a1;
        break;
      case 3:
        LODWORD(v3) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v3) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v3) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v3 | v5) + 1;
}

void sub_1C2731FF8(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  size_t v6 = *(void *)(v4 + 64);
  if (v5 >= a2)
  {
    if (v5)
    {
      if (!a2) {
        return;
      }
    }
    else
    {
      a1[v6] = 0;
      if (!a2) {
        return;
      }
    }
    size_t v10 = *(void (**)(void))(v4 + 56);
    v10();
    return;
  }
  unsigned int v7 = ~v5 + a2;
  if (v6 >= 4)
  {
    bzero(a1, v6);
    *(_DWORD *)a1 = v7;
    LOBYTE(v8) = 1;
    if (v5) {
      return;
    }
    goto LABEL_19;
  }
  int v8 = (v7 >> (8 * v6)) + 1;
  if (!v6)
  {
LABEL_18:
    if (v5) {
      return;
    }
    goto LABEL_19;
  }
  int v9 = v7 & ~(-1 << (8 * v6));
  bzero(a1, v6);
  if (v6 == 3)
  {
    *(_WORD *)a1 = v9;
    a1[2] = BYTE2(v9);
    goto LABEL_18;
  }
  if (v6 == 2)
  {
    *(_WORD *)a1 = v9;
    if (v5) {
      return;
    }
    goto LABEL_19;
  }
  *a1 = v9;
  if (!v5) {
LABEL_19:
  }
    a1[v6] = v8;
}

BOOL static HealthExperienceStoreCreationError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t HealthExperienceStoreCreationError.hash(into:)()
{
  return sub_1C277C8D0();
}

uint64_t HealthExperienceStoreCreationError.hashValue.getter()
{
  return sub_1C277C910();
}

uint64_t HealthExperienceStore.object<A>(from:in:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v13[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t result = (uint64_t)HealthExperienceStore.managedObjectID(for:)(a1, a3, a5);
  if (result)
  {
    unsigned int v7 = (void *)result;
    v13[0] = 0;
    id v8 = objc_msgSend(a2, sel_existingObjectWithID_error_, result, v13);
    if (v8)
    {
      int v9 = v8;
      id v10 = v13[0];

      uint64_t result = swift_dynamicCastUnknownClass();
      if (result) {
        return result;
      }
    }
    else
    {
      id v11 = v13[0];
      BOOL v12 = (void *)sub_1C277A620();

      swift_willThrow();
    }
    return 0;
  }
  return result;
}

id HealthExperienceStore.managedObjectID(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  id v4 = objc_msgSend(v3, sel_persistentStoreCoordinator);

  unsigned int v5 = (void *)sub_1C277A6A0();
  id v6 = objc_msgSend(v4, sel_managedObjectIDForURIRepresentation_, v5);

  return v6;
}

unint64_t sub_1C2732374()
{
  unint64_t result = qword_1EA3053D8;
  if (!qword_1EA3053D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3053D8);
  }
  return result;
}

uint64_t dispatch thunk of HealthExperienceStore.initPersistentContainer()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

unsigned char *storeEnumTagSinglePayload for HealthExperienceStoreCreationError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C27324BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HealthExperienceStoreCreationError()
{
  return &type metadata for HealthExperienceStoreCreationError;
}

unint64_t sub_1C27324F4()
{
  unint64_t result = qword_1EA304AD0;
  if (!qword_1EA304AD0)
  {
    sub_1C277A750();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA304AD0);
  }
  return result;
}

uint64_t HealthPluginHostEntitlement.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C277C650();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

unint64_t HealthPluginHostEntitlement.rawValue.getter()
{
  return 0xD000000000000029;
}

uint64_t sub_1C27325C0()
{
  return sub_1C277C910();
}

uint64_t sub_1C2732618()
{
  return sub_1C277B8B0();
}

uint64_t sub_1C2732634()
{
  return sub_1C277C910();
}

uint64_t sub_1C2732688@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C277C650();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1C27326DC(void *a1@<X8>)
{
  *a1 = 0xD000000000000029;
  a1[1] = 0x80000001C2789330;
}

CFTypeRef NSXPCConnection.value<A>(for:)()
{
  sub_1C277B9D0();
  CFTypeRef v0 = NSXPCConnection.value(for:)(v2, v3);
  swift_bridgeObjectRelease();
  return v0;
}

CFTypeRef NSXPCConnection.value(for:)(uint64_t a1, unint64_t a2)
{
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  objc_msgSend(v2, sel_auditToken);
  SecTaskRef v5 = SecTaskCreateWithAuditToken(0, &token);
  if (!v5)
  {
    if (qword_1EBB86260 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1C277B130();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EBB86280);
    id v11 = v2;
    BOOL v12 = sub_1C277B100();
    os_log_type_t v13 = sub_1C277BD20();
    if (os_log_type_enabled(v12, v13))
    {
      unsigned int v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      *(void *)token.val = v15;
      *(_DWORD *)unsigned int v14 = 136315138;
      id v16 = objc_msgSend(v11, sel_debugDescription);
      uint64_t v17 = sub_1C277B850();
      unint64_t v19 = v18;

      uint64_t v38 = sub_1C263FDFC(v17, v19, (uint64_t *)&token);
      sub_1C277C0D0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v12, v13, "Could not get secTask from XPC connection %s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v15, -1, -1);
      MEMORY[0x1C875D230](v14, -1, -1);
    }
    else
    {
    }
    return 0;
  }
  unsigned int v6 = v5;
  *(void *)token.val = 0;
  unsigned int v7 = (__CFString *)sub_1C277B820();
  CFTypeRef v8 = SecTaskCopyValueForEntitlement(v6, v7, (CFErrorRef *)&token);

  int v9 = *(__SecTask **)token.val;
  if (!v8)
  {
    if (*(void *)token.val)
    {
      uint64_t v20 = qword_1EBB86260;
      id v21 = *(id *)token.val;
      if (v20 != -1) {
        swift_once();
      }
      uint64_t v22 = sub_1C277B130();
      __swift_project_value_buffer(v22, (uint64_t)qword_1EBB86280);
      swift_bridgeObjectRetain_n();
      id v23 = v21;
      id v24 = sub_1C277B100();
      os_log_type_t v25 = sub_1C277BD20();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = swift_slowAlloc();
        uint64_t v27 = swift_slowAlloc();
        uint64_t v38 = v27;
        *(_DWORD *)uint64_t v26 = 136315394;
        swift_bridgeObjectRetain();
        sub_1C263FDFC(a1, a2, &v38);
        sub_1C277C0D0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v26 + 12) = 2080;
        type metadata accessor for CFError(0);
        id v28 = v23;
        uint64_t v29 = sub_1C277B860();
        sub_1C263FDFC(v29, v30, &v38);
        sub_1C277C0D0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2601000, v24, v25, "Could not get value for entitlement %s: %s", (uint8_t *)v26, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C875D230](v27, -1, -1);
        MEMORY[0x1C875D230](v26, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    else
    {
      if (qword_1EBB86260 != -1) {
        swift_once();
      }
      uint64_t v31 = sub_1C277B130();
      __swift_project_value_buffer(v31, (uint64_t)qword_1EBB86280);
      swift_bridgeObjectRetain_n();
      uint64_t v32 = sub_1C277B100();
      os_log_type_t v33 = sub_1C277BD20();
      if (os_log_type_enabled(v32, v33))
      {
        unint64_t v34 = (uint8_t *)swift_slowAlloc();
        uint64_t v35 = swift_slowAlloc();
        uint64_t v38 = v35;
        *(_DWORD *)unint64_t v34 = 136315138;
        swift_bridgeObjectRetain();
        sub_1C263FDFC(a1, a2, &v38);
        sub_1C277C0D0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C2601000, v32, v33, "Missing value for entitlement %s", v34, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C875D230](v35, -1, -1);
        MEMORY[0x1C875D230](v34, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    uint64_t v36 = *(void **)token.val;

    if (v36) {
    return 0;
    }
  }
  if (*(void *)token.val)
  {

    unsigned int v6 = v9;
  }

  return v8;
}

unint64_t sub_1C2732D50()
{
  unint64_t result = qword_1EA3053E0;
  if (!qword_1EA3053E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3053E0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for HealthPluginHostEntitlement(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C2732E40);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for HealthPluginHostEntitlement()
{
  return &type metadata for HealthPluginHostEntitlement;
}

uint64_t static InputSignalIdentifier.summarySharingProfileDisplayName.getter()
{
  return sub_1C277AED0();
}

uint64_t static InputSignalSet.LookupKey.summarySharingProfileDisplayName.getter()
{
  uint64_t v0 = sub_1C277AEE0();
  MEMORY[0x1F4188790](v0 - 8);
  sub_1C277AED0();
  type metadata accessor for SummarySharingProfileDisplayNameInputSignal();
  return sub_1C277ACD0();
}

uint64_t type metadata accessor for SummarySharingProfileDisplayNameInputSignal()
{
  return self;
}

uint64_t static SummarySharingProfileDisplayNameInputSignal.identityConfiguration.getter()
{
  uint64_t v0 = sub_1C277AEE0();
  MEMORY[0x1F4188790](v0 - 8);
  sub_1C277AED0();
  return sub_1C277AEB0();
}

uint64_t SummarySharingProfileDisplayNameInputSignal.identifier.getter()
{
  return sub_1C277AED0();
}

uint64_t SummarySharingProfileDisplayNameInputSignal.observer.getter()
{
  return swift_unknownObjectRetain();
}

id SummarySharingProfileDisplayNameInputSignal.healthStore.getter()
{
  return *(id *)(v0 + 32);
}

uint64_t SummarySharingProfileDisplayNameInputSignal.__allocating_init(observer:healthStore:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = swift_allocObject();
  SummarySharingProfileDisplayNameInputSignal.init(observer:healthStore:)(a1, a2, a3);
  return v6;
}

void SummarySharingProfileDisplayNameInputSignal.init(observer:healthStore:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v7 = type metadata accessor for SummarySharingProfileDisplayNameInputSignal.State();
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v10 = 0;
  id v11 = &v10[*(int *)(v8 + 28)];
  sub_1C2733298();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  sub_1C2733418();
  uint64_t v13 = swift_allocObject();
  *(_DWORD *)(v13 + ((*(unsigned int *)(*(void *)v13 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_1C2733480((uint64_t)v10, v13 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v13 + 16));
  sub_1C27334E4((uint64_t)v10);
  v3[5] = v13;
  id v14 = objc_msgSend(a3, sel_profileIdentifier);
  id v15 = objc_msgSend(v14, sel_type);

  if (v15 == (id)2)
  {
    _OWORD v3[2] = a1;
    v3[3] = a2;
    v3[4] = a3;
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for SummarySharingProfileDisplayNameInputSignal.State()
{
  uint64_t result = qword_1EA305430;
  if (!qword_1EA305430) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C2733298()
{
  if (!qword_1EA3053E8)
  {
    sub_1C273331C();
    sub_1C2733370();
    sub_1C27333C4();
    unint64_t v0 = sub_1C277AE60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA3053E8);
    }
  }
}

unint64_t sub_1C273331C()
{
  unint64_t result = qword_1EA3053F0;
  if (!qword_1EA3053F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3053F0);
  }
  return result;
}

unint64_t sub_1C2733370()
{
  unint64_t result = qword_1EA3053F8;
  if (!qword_1EA3053F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3053F8);
  }
  return result;
}

unint64_t sub_1C27333C4()
{
  unint64_t result = qword_1EA305400;
  if (!qword_1EA305400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA305400);
  }
  return result;
}

void sub_1C2733418()
{
  if (!qword_1EA305408)
  {
    type metadata accessor for SummarySharingProfileDisplayNameInputSignal.State();
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_1C277C370();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA305408);
    }
  }
}

uint64_t sub_1C2733480(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SummarySharingProfileDisplayNameInputSignal.State();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C27334E4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SummarySharingProfileDisplayNameInputSignal.State();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t SummarySharingProfileDisplayNameInputSignal.dependencyConfigurations(for:)()
{
  uint64_t v0 = sub_1C277AEE0();
  MEMORY[0x1F4188790](v0 - 8);
  sub_1C2612D30(0, &qword_1EBB83180, (uint64_t (*)(uint64_t))sub_1C265F308, MEMORY[0x1E4FBBE00]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C277E480;
  *(void *)(v1 + 56) = sub_1C277AEC0();
  *(void *)(v1 + 64) = sub_1C2734F58(&qword_1EBB829E8, 255, MEMORY[0x1E4F66E70]);
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v1 + 32));
  sub_1C277AED0();
  sub_1C277AEB0();
  return v1;
}

uint64_t SummarySharingProfileDisplayNameInputSignal.dependencyDidUpdate(anchors:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SummarySharingProfileDisplayNameInputSignal.State();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C277AEE0();
  MEMORY[0x1F4188790](v5 - 8);
  sub_1C2733298();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2733990((uint64_t)&v20);
  long long v17 = v21;
  long long v18 = v20;
  uint64_t v11 = v22;
  sub_1C277AED0();
  long long v20 = v18;
  long long v21 = v17;
  uint64_t v22 = v11;
  sub_1C273331C();
  sub_1C2733370();
  sub_1C27333C4();
  sub_1C277AE50();
  uint64_t v12 = *(void *)(v1 + 40);
  unint64_t v19 = v10;
  uint64_t v13 = v12 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v12 + 16);
  id v14 = (os_unfair_lock_s *)(v12 + ((*(unsigned int *)(*(void *)v12 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v14);
  sub_1C2734F3C(v13, (uint64_t)v4);
  os_unfair_lock_unlock(v14);
  if (*v4 == 1)
  {
    swift_getObjectType();
    *(void *)&long long v20 = v1;
    sub_1C2734F58(&qword_1EA305410, v15, (void (*)(uint64_t))type metadata accessor for SummarySharingProfileDisplayNameInputSignal);
    sub_1C277AE40();
  }
  sub_1C27334E4((uint64_t)v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

double sub_1C2733990@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1C277AEE0();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1C2612D30(0, &qword_1EA305440, (uint64_t (*)(uint64_t))type metadata accessor for SummarySharingInputSignal, MEMORY[0x1E4F66E10]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v24 - v6;
  sub_1C2612D30(0, (unint64_t *)&qword_1EBB82A18, (uint64_t (*)(uint64_t))sub_1C26AB140, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v24 - v9;
  sub_1C277AED0();
  type metadata accessor for SummarySharingInputSignal();
  sub_1C277ACD0();
  sub_1C2734F58((unint64_t *)&unk_1EBB82878, 255, (void (*)(uint64_t))type metadata accessor for SummarySharingInputSignal);
  sub_1C277AEA0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1C26AB140();
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v11) == 1)
  {
    sub_1C273654C((uint64_t)v10, (unint64_t *)&qword_1EBB82A18, (uint64_t (*)(uint64_t))sub_1C26AB140);
    if (qword_1EBB82A50 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1C277B130();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EBB82A38);
    uint64_t v15 = sub_1C277B100();
    os_log_type_t v16 = sub_1C277BD20();
    if (os_log_type_enabled(v15, v16))
    {
      long long v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      *(void *)&long long v24 = v18;
      *(_DWORD *)long long v17 = 136446210;
      uint64_t v19 = sub_1C277C9E0();
      uint64_t v27 = sub_1C263FDFC(v19, v20, (uint64_t *)&v24);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v15, v16, "%{public}s: Missing anchor for dependent signal", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v18, -1, -1);
      MEMORY[0x1C875D230](v17, -1, -1);
    }
  }
  else
  {
    sub_1C277AF70();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    long long v21 = sub_1C2733F4C();
    swift_bridgeObjectRelease();
    if (v21)
    {
      sub_1C27344D8(v21, (uint64_t *)&v24);

      uint64_t v22 = v25;
      *(_OWORD *)a1 = v24;
      *(void *)(a1 + 16) = v22;
      double result = *(double *)&v26;
      *(_OWORD *)(a1 + 24) = v26;
      return result;
    }
  }
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_1C2733E4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = a1 + *(int *)(type metadata accessor for SummarySharingProfileDisplayNameInputSignal.State() + 20);
  sub_1C273654C(v6, &qword_1EA305428, (uint64_t (*)(uint64_t))sub_1C2733298);
  sub_1C2733298();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v6, a2, v7);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  return sub_1C2733480(a1, a3);
}

NSObject *sub_1C2733F4C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C277A8A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_1C2735028(v6, v0);
  uint64_t v8 = sub_1C2657B9C(v7);
  if (!v8)
  {
    swift_release();
    if (qword_1EBB82A50 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1C277B130();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EBB82A38);
    swift_retain_n();
    uint64_t v9 = sub_1C277B100();
    os_log_type_t v12 = sub_1C277BD20();
    if (os_log_type_enabled(v9, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      v40[0] = v38;
      *(_DWORD *)uint64_t v13 = 136446466;
      uint64_t v14 = sub_1C277C9E0();
      uint64_t v39 = sub_1C263FDFC(v14, v15, v40);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2082;
      uint64_t v37 = v13 + 14;
      id v16 = objc_msgSend(*(id *)(v1 + 32), sel_profileIdentifier);
      id v17 = objc_msgSend(v16, sel_identifier);

      sub_1C277A880();
      uint64_t v18 = sub_1C277A850();
      unint64_t v20 = v19;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      uint64_t v39 = sub_1C263FDFC(v18, v20, v40);
      sub_1C277C0D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v9, v12, "%{public}s: Unexpectedly no entries for summary sharing profile: %{public}s", (uint8_t *)v13, 0x16u);
      uint64_t v21 = v38;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v21, -1, -1);
      MEMORY[0x1C875D230](v13, -1, -1);

      return 0;
    }
LABEL_15:

    swift_release_n();
    return 0;
  }
  uint64_t v9 = v8;
  if ((v7 & 0xC000000000000001) != 0) {
    uint64_t v10 = sub_1C277C1C0();
  }
  else {
    uint64_t v10 = *(void *)(v7 + 16);
  }
  swift_release();
  if (v10 != 1)
  {
    if (qword_1EBB82A50 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_1C277B130();
    __swift_project_value_buffer(v22, (uint64_t)qword_1EBB82A38);
    swift_retain_n();
    id v23 = sub_1C277B100();
    os_log_type_t v24 = sub_1C277BD20();
    int v25 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      v40[0] = v38;
      *(_DWORD *)uint64_t v26 = 136446466;
      LODWORD(v37) = v25;
      uint64_t v27 = sub_1C277C9E0();
      uint64_t v39 = sub_1C263FDFC(v27, v28, v40);
      sub_1C277C0D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2082;
      uint64_t v36 = v26 + 14;
      id v29 = objc_msgSend(*(id *)(v1 + 32), sel_profileIdentifier, v26 + 14);
      id v30 = objc_msgSend(v29, sel_identifier);

      sub_1C277A880();
      uint64_t v31 = sub_1C277A850();
      unint64_t v33 = v32;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      uint64_t v39 = sub_1C263FDFC(v31, v33, v40);
      sub_1C277C0D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2601000, v23, (os_log_type_t)v37, "%{public}s: Got multiple entries matching profile identifier %{public}s", (uint8_t *)v26, 0x16u);
      uint64_t v34 = v38;
      swift_arrayDestroy();
      MEMORY[0x1C875D230](v34, -1, -1);
      MEMORY[0x1C875D230](v26, -1, -1);

      return 0;
    }

    goto LABEL_15;
  }
  return v9;
}

uint64_t sub_1C27344D8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_CNContactIdentifier);
  if (v4)
  {
    uint64_t v5 = v4;
    sub_1C277B850();

    swift_bridgeObjectRelease();
  }
  id v6 = objc_msgSend(a1, sel_firstName);
  if (v6)
  {
    uint64_t v7 = v6;
    sub_1C277B850();
  }
  id v8 = objc_msgSend(a1, sel_lastName);
  if (v8)
  {
    uint64_t v9 = v8;
    sub_1C277B850();
  }
  sub_1C277AA00();
  id v10 = objc_msgSend(a1, sel_primaryContactIdentifier);
  sub_1C277B850();

  LOBYTE(v22) = 0;
  uint64_t v23 = sub_1C277A9F0();
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(a1, sel_firstName, v22);
  if (v13)
  {
    uint64_t v14 = v13;
    sub_1C277B850();
  }
  id v15 = objc_msgSend(a1, sel_lastName);
  if (v15)
  {
    id v16 = v15;
    sub_1C277B850();
  }
  id v17 = objc_msgSend(a1, sel_primaryContactIdentifier);
  sub_1C277B850();

  uint64_t v18 = sub_1C277A9F0();
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v23;
  a2[1] = v12;
  a2[2] = v18;
  a2[3] = v20;
  a2[4] = MEMORY[0x1E4FBC860];
  return result;
}

uint64_t sub_1C2734778(id *a1, uint64_t a2)
{
  id v3 = *a1;
  if (objc_msgSend(*a1, sel_direction) != (id)1) {
    return 0;
  }
  id v4 = objc_msgSend(v3, sel_profileIdentifier);
  id v5 = objc_msgSend(*(id *)(a2 + 32), sel_profileIdentifier);
  id v6 = v5;
  if (v4)
  {
    if (!v5)
    {
LABEL_14:

      return 0;
    }
    sub_1C2644ED8(0, (unint64_t *)&qword_1EBB85E90);
    uint64_t v7 = v4;
    char v8 = sub_1C277C030();

    if ((v8 & 1) == 0) {
      return 0;
    }
LABEL_8:
    if ((unint64_t)objc_msgSend(v3, sel_status) < 2) {
      return 1;
    }
    if (qword_1EBB82A50 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1C277B130();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EBB82A38);
    id v11 = v3;
    id v4 = sub_1C277B100();
    os_log_type_t v12 = sub_1C277BD20();
    if (!os_log_type_enabled(v4, v12))
    {

      return 0;
    }
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v17 = v14;
    *(_DWORD *)uint64_t v13 = 136446466;
    uint64_t v15 = sub_1C277C9E0();
    sub_1C263FDFC(v15, v16, &v17);
    sub_1C277C0D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2048;
    objc_msgSend(v11, sel_status);

    sub_1C277C0D0();
    _os_log_impl(&dword_1C2601000, v4, v12, "%{public}s: Got a matching profile identifier but entry status is %ld", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875D230](v14, -1, -1);
    MEMORY[0x1C875D230](v13, -1, -1);
    goto LABEL_14;
  }
  if (!v5) {
    goto LABEL_8;
  }

  return 0;
}